#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_45)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_45) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 45 0000
        gbc.setState(0xa17c, 0xd251, 0xe970, 0xf9b7, 0x3b47, 0xf110, 0x1, 0x0);
        gbc.writeMem(0xa17c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd251);
        EXPECT(gbc.pc(), 0xa17d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa17c), 0x45);
        // 45 0001
        gbc.setState(0x262f, 0x2a32, 0x7ec0, 0x1225, 0x71f9, 0xb428, 0x1, 0x0);
        gbc.writeMem(0x262f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2a32);
        EXPECT(gbc.pc(), 0x2630);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0002
        gbc.setState(0xddfa, 0xe403, 0x5900, 0xb642, 0x4df, 0x7d6e, 0x1, 0x0);
        gbc.writeMem(0xddfa, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe403);
        EXPECT(gbc.pc(), 0xddfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddfa), 0x45);
        // 45 0003
        gbc.setState(0x8682, 0x3ebc, 0xe090, 0x5f77, 0x8528, 0x1dfa, 0x0, 0x0);
        gbc.writeMem(0x8682, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3ebc);
        EXPECT(gbc.pc(), 0x8683);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8682), 0x45);
        // 45 0004
        gbc.setState(0xc355, 0x12ad, 0x24a0, 0xc2f9, 0x4c2, 0xfd3d, 0x1, 0x0);
        gbc.writeMem(0xc355, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x12ad);
        EXPECT(gbc.pc(), 0xc356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc355), 0x45);
        // 45 0005
        gbc.setState(0x8617, 0xd0cf, 0x64a0, 0x511f, 0xb1f8, 0x5103, 0x1, 0x1);
        gbc.writeMem(0x8617, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd0cf);
        EXPECT(gbc.pc(), 0x8618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8617), 0x45);
        // 45 0006
        gbc.setState(0xdb9d, 0xfa93, 0x8990, 0x7f8d, 0xd32b, 0xd940, 0x1, 0x0);
        gbc.writeMem(0xdb9d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xfa93);
        EXPECT(gbc.pc(), 0xdb9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb9d), 0x45);
        // 45 0007
        gbc.setState(0xed10, 0x3552, 0xe350, 0xd3e8, 0x87aa, 0x31e5, 0x1, 0x1);
        gbc.writeMem(0xed10, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3552);
        EXPECT(gbc.pc(), 0xed11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed10), 0x45);
        // 45 0008
        gbc.setState(0x600f, 0xe332, 0xad00, 0xd003, 0xc2be, 0x919f, 0x0, 0x0);
        gbc.writeMem(0x600f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe332);
        EXPECT(gbc.pc(), 0x6010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0009
        gbc.setState(0xac45, 0x86df, 0x1140, 0x2ebe, 0x7b98, 0xedf2, 0x0, 0x0);
        gbc.writeMem(0xac45, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x86df);
        EXPECT(gbc.pc(), 0xac46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac45), 0x45);
        // 45 000A
        gbc.setState(0xb06d, 0xf0c3, 0xa4f0, 0x1a3, 0xd82a, 0xce27, 0x1, 0x0);
        gbc.writeMem(0xb06d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf0c3);
        EXPECT(gbc.pc(), 0xb06e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb06d), 0x45);
        // 45 000B
        gbc.setState(0xa38c, 0x8dc8, 0xef40, 0x3bf3, 0xdc15, 0x499c, 0x1, 0x0);
        gbc.writeMem(0xa38c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8dc8);
        EXPECT(gbc.pc(), 0xa38d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa38c), 0x45);
        // 45 000C
        gbc.setState(0x53cd, 0x636d, 0x19c0, 0x3266, 0x248c, 0x1a6a, 0x0, 0x1);
        gbc.writeMem(0x53cd, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x636d);
        EXPECT(gbc.pc(), 0x53ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 000D
        gbc.setState(0xa262, 0x71ec, 0x4920, 0x76bf, 0x6b45, 0x42c0, 0x1, 0x1);
        gbc.writeMem(0xa262, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x71ec);
        EXPECT(gbc.pc(), 0xa263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa262), 0x45);
        // 45 000E
        gbc.setState(0x639c, 0xaabc, 0xdda0, 0x7f2e, 0xab75, 0xd1c3, 0x0, 0x1);
        gbc.writeMem(0x639c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xaabc);
        EXPECT(gbc.pc(), 0x639d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 000F
        gbc.setState(0x3fae, 0x2f50, 0x6620, 0x3feb, 0x8177, 0xa75d, 0x0, 0x1);
        gbc.writeMem(0x3fae, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2f50);
        EXPECT(gbc.pc(), 0x3faf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0010
        gbc.setState(0xb2f4, 0x2a58, 0x20b0, 0x45f5, 0x1d0e, 0xa969, 0x1, 0x0);
        gbc.writeMem(0xb2f4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2a58);
        EXPECT(gbc.pc(), 0xb2f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2f4), 0x45);
        // 45 0011
        gbc.setState(0x9889, 0xc4a6, 0x9d60, 0x714a, 0x8d25, 0x316d, 0x1, 0x1);
        gbc.writeMem(0x9889, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc4a6);
        EXPECT(gbc.pc(), 0x988a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9889), 0x45);
        // 45 0012
        gbc.setState(0xe392, 0xc9a7, 0x61a0, 0x7827, 0x3770, 0xcbab, 0x0, 0x1);
        gbc.writeMem(0xe392, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc9a7);
        EXPECT(gbc.pc(), 0xe393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe392), 0x45);
        // 45 0013
        gbc.setState(0x90d3, 0xd1ab, 0x68c0, 0xf099, 0x1bf3, 0x62e9, 0x0, 0x0);
        gbc.writeMem(0x90d3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd1ab);
        EXPECT(gbc.pc(), 0x90d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90d3), 0x45);
        // 45 0014
        gbc.setState(0x1536, 0xda7f, 0x7290, 0x5e8f, 0xae4a, 0x6e79, 0x1, 0x1);
        gbc.writeMem(0x1536, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xda7f);
        EXPECT(gbc.pc(), 0x1537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0015
        gbc.setState(0x44fe, 0x894d, 0x96a0, 0xa5fc, 0x73ff, 0xa6fc, 0x0, 0x0);
        gbc.writeMem(0x44fe, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x894d);
        EXPECT(gbc.pc(), 0x44ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0016
        gbc.setState(0x45b4, 0x98a4, 0x6a80, 0x3ac, 0x7ab5, 0x6c41, 0x1, 0x0);
        gbc.writeMem(0x45b4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x98a4);
        EXPECT(gbc.pc(), 0x45b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0017
        gbc.setState(0x5842, 0x5dc1, 0x23f0, 0xf5f6, 0xf573, 0x59e, 0x0, 0x0);
        gbc.writeMem(0x5842, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5dc1);
        EXPECT(gbc.pc(), 0x5843);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0018
        gbc.setState(0xa985, 0x7cd5, 0x8bd0, 0x7bef, 0x4793, 0x7352, 0x0, 0x0);
        gbc.writeMem(0xa985, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7cd5);
        EXPECT(gbc.pc(), 0xa986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa985), 0x45);
        // 45 0019
        gbc.setState(0x5f39, 0x6ef, 0x52e0, 0x7bad, 0xc972, 0xb74d, 0x0, 0x1);
        gbc.writeMem(0x5f39, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6ef);
        EXPECT(gbc.pc(), 0x5f3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 001A
        gbc.setState(0x99ab, 0x2cee, 0xaf10, 0x80d9, 0xe7f9, 0x92df, 0x1, 0x1);
        gbc.writeMem(0x99ab, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2cee);
        EXPECT(gbc.pc(), 0x99ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99ab), 0x45);
        // 45 001B
        gbc.setState(0x7da0, 0x613e, 0x2920, 0xbfbf, 0xb63f, 0xb8a, 0x0, 0x0);
        gbc.writeMem(0x7da0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x613e);
        EXPECT(gbc.pc(), 0x7da1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 001C
        gbc.setState(0xc173, 0xd033, 0x4b40, 0xd7a0, 0x6876, 0x8e39, 0x0, 0x1);
        gbc.writeMem(0xc173, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd033);
        EXPECT(gbc.pc(), 0xc174);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc173), 0x45);
        // 45 001F
        gbc.setState(0xbb3, 0xbdad, 0xe7c0, 0xe778, 0xa93b, 0xc032, 0x0, 0x0);
        gbc.writeMem(0xbb3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbdad);
        EXPECT(gbc.pc(), 0xbb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0020
        gbc.setState(0x646c, 0x5c0c, 0xf400, 0xd69a, 0x73a, 0xcf07, 0x1, 0x1);
        gbc.writeMem(0x646c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5c0c);
        EXPECT(gbc.pc(), 0x646d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0021
        gbc.setState(0x5c53, 0xc946, 0x75f0, 0x61a8, 0x4b7e, 0xf1ab, 0x1, 0x0);
        gbc.writeMem(0x5c53, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc946);
        EXPECT(gbc.pc(), 0x5c54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0022
        gbc.setState(0x4132, 0x2aae, 0xa830, 0x196e, 0x6436, 0xdbac, 0x1, 0x1);
        gbc.writeMem(0x4132, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2aae);
        EXPECT(gbc.pc(), 0x4133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0023
        gbc.setState(0xe35c, 0xfce7, 0x6600, 0x33fc, 0x437, 0x6508, 0x0, 0x0);
        gbc.writeMem(0xe35c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xfce7);
        EXPECT(gbc.pc(), 0xe35d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe35c), 0x45);
        // 45 0024
        gbc.setState(0x817c, 0x9539, 0xa160, 0x1454, 0x71b0, 0x7f4c, 0x0, 0x1);
        gbc.writeMem(0x817c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9539);
        EXPECT(gbc.pc(), 0x817d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x817c), 0x45);
        // 45 0025
        gbc.setState(0x2bac, 0x64e, 0x5bd0, 0x65a, 0xd305, 0xa4d5, 0x1, 0x1);
        gbc.writeMem(0x2bac, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x64e);
        EXPECT(gbc.pc(), 0x2bad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0026
        gbc.setState(0xcc48, 0x13a5, 0x8a30, 0x967c, 0x6eba, 0x29f6, 0x0, 0x0);
        gbc.writeMem(0xcc48, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x13a5);
        EXPECT(gbc.pc(), 0xcc49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc48), 0x45);
        // 45 0027
        gbc.setState(0x620c, 0x683a, 0x2e50, 0xc375, 0x29b, 0x950, 0x1, 0x0);
        gbc.writeMem(0x620c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x683a);
        EXPECT(gbc.pc(), 0x620d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0028
        gbc.setState(0xbdc3, 0x9fbe, 0x92f0, 0x43af, 0x89f0, 0x4d71, 0x1, 0x1);
        gbc.writeMem(0xbdc3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9fbe);
        EXPECT(gbc.pc(), 0xbdc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdc3), 0x45);
        // 45 0029
        gbc.setState(0x2052, 0xeb9e, 0xb1a0, 0x3734, 0xeebd, 0x3a4e, 0x1, 0x0);
        gbc.writeMem(0x2052, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xeb9e);
        EXPECT(gbc.pc(), 0x2053);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 002A
        gbc.setState(0xbc53, 0x5ca9, 0xcf30, 0x4036, 0xa67e, 0x2ab8, 0x1, 0x0);
        gbc.writeMem(0xbc53, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x5ca9);
        EXPECT(gbc.pc(), 0xbc54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc53), 0x45);
        // 45 002B
        gbc.setState(0xe491, 0xe97e, 0xc990, 0xb840, 0x1db8, 0x6c2b, 0x0, 0x0);
        gbc.writeMem(0xe491, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe97e);
        EXPECT(gbc.pc(), 0xe492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe491), 0x45);
        // 45 002C
        gbc.setState(0x4537, 0x5d0, 0x7e70, 0xbea5, 0xdf13, 0x64e7, 0x0, 0x1);
        gbc.writeMem(0x4537, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5d0);
        EXPECT(gbc.pc(), 0x4538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 002D
        gbc.setState(0x282, 0x6ff9, 0xb780, 0xfd13, 0xbbeb, 0xdbb, 0x0, 0x1);
        gbc.writeMem(0x282, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6ff9);
        EXPECT(gbc.pc(), 0x283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 002E
        gbc.setState(0x81e2, 0x1394, 0x3720, 0x86fe, 0x4e23, 0xcd8, 0x1, 0x1);
        gbc.writeMem(0x81e2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1394);
        EXPECT(gbc.pc(), 0x81e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81e2), 0x45);
        // 45 002F
        gbc.setState(0x6634, 0xa218, 0x3a30, 0x9660, 0x7c6a, 0x8972, 0x0, 0x1);
        gbc.writeMem(0x6634, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa218);
        EXPECT(gbc.pc(), 0x6635);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0030
        gbc.setState(0xa18, 0xa1dd, 0x4db0, 0x52de, 0x1e1, 0xcab2, 0x0, 0x0);
        gbc.writeMem(0xa18, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa1dd);
        EXPECT(gbc.pc(), 0xa19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0031
        gbc.setState(0x5bc4, 0x220a, 0x5c10, 0xea8b, 0x36c4, 0x70fb, 0x1, 0x0);
        gbc.writeMem(0x5bc4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x220a);
        EXPECT(gbc.pc(), 0x5bc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0032
        gbc.setState(0x2da7, 0xc1e9, 0x5060, 0x5ee, 0xbdb9, 0x4419, 0x0, 0x0);
        gbc.writeMem(0x2da7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc1e9);
        EXPECT(gbc.pc(), 0x2da8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0033
        gbc.setState(0xee5c, 0x604f, 0x9ca0, 0x2d8d, 0x6508, 0x454f, 0x1, 0x1);
        gbc.writeMem(0xee5c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x604f);
        EXPECT(gbc.pc(), 0xee5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee5c), 0x45);
        // 45 0034
        gbc.setState(0x665d, 0xbc82, 0xd240, 0xc0f8, 0xa7a5, 0x684a, 0x1, 0x1);
        gbc.writeMem(0x665d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbc82);
        EXPECT(gbc.pc(), 0x665e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0035
        gbc.setState(0x8de2, 0x3d2, 0xf270, 0xcad2, 0x643f, 0xcf6, 0x0, 0x0);
        gbc.writeMem(0x8de2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3d2);
        EXPECT(gbc.pc(), 0x8de3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de2), 0x45);
        // 45 0036
        gbc.setState(0xbdb4, 0x3209, 0x4380, 0x77e9, 0xa36a, 0xc4d9, 0x0, 0x1);
        gbc.writeMem(0xbdb4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3209);
        EXPECT(gbc.pc(), 0xbdb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb4), 0x45);
        // 45 0038
        gbc.setState(0x887a, 0x1263, 0x2f40, 0x14c9, 0xcd7, 0x86f2, 0x0, 0x1);
        gbc.writeMem(0x887a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1263);
        EXPECT(gbc.pc(), 0x887b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x887a), 0x45);
        // 45 0039
        gbc.setState(0x9312, 0x78d6, 0x39e0, 0xa0bd, 0x239e, 0x7d6e, 0x0, 0x1);
        gbc.writeMem(0x9312, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x78d6);
        EXPECT(gbc.pc(), 0x9313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9312), 0x45);
        // 45 003A
        gbc.setState(0x552c, 0xf706, 0x8670, 0xa6a9, 0xfccd, 0x65af, 0x0, 0x0);
        gbc.writeMem(0x552c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf706);
        EXPECT(gbc.pc(), 0x552d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 003B
        gbc.setState(0x31d8, 0x68c6, 0x6e60, 0x6f21, 0xe4bc, 0xfc90, 0x1, 0x1);
        gbc.writeMem(0x31d8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x68c6);
        EXPECT(gbc.pc(), 0x31d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 003C
        gbc.setState(0xdf8, 0xbe19, 0xc050, 0x485d, 0x150b, 0xa198, 0x0, 0x0);
        gbc.writeMem(0xdf8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xbe19);
        EXPECT(gbc.pc(), 0xdf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 003D
        gbc.setState(0x740f, 0x3f0c, 0x2960, 0xd7c6, 0x443e, 0xe654, 0x0, 0x1);
        gbc.writeMem(0x740f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3f0c);
        EXPECT(gbc.pc(), 0x7410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 003E
        gbc.setState(0xc05c, 0xe494, 0x6030, 0xd614, 0x82a2, 0xab25, 0x0, 0x1);
        gbc.writeMem(0xc05c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe494);
        EXPECT(gbc.pc(), 0xc05d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc05c), 0x45);
        // 45 003F
        gbc.setState(0x136a, 0xc1c1, 0x9750, 0x3d23, 0xd67a, 0xeea1, 0x0, 0x1);
        gbc.writeMem(0x136a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc1c1);
        EXPECT(gbc.pc(), 0x136b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0040
        gbc.setState(0xe47a, 0x46af, 0xdb50, 0xeac8, 0x8551, 0x2425, 0x0, 0x0);
        gbc.writeMem(0xe47a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x46af);
        EXPECT(gbc.pc(), 0xe47b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe47a), 0x45);
        // 45 0041
        gbc.setState(0x3df2, 0xd5a8, 0xd2f0, 0x116b, 0x75ba, 0xc4d3, 0x0, 0x0);
        gbc.writeMem(0x3df2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd5a8);
        EXPECT(gbc.pc(), 0x3df3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0042
        gbc.setState(0xe4a4, 0x588f, 0x33e0, 0xb8a, 0x5348, 0xab80, 0x0, 0x0);
        gbc.writeMem(0xe4a4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x588f);
        EXPECT(gbc.pc(), 0xe4a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4a4), 0x45);
        // 45 0043
        gbc.setState(0xee36, 0x39f8, 0x98a0, 0x7555, 0x5099, 0xa981, 0x0, 0x0);
        gbc.writeMem(0xee36, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x39f8);
        EXPECT(gbc.pc(), 0xee37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee36), 0x45);
        // 45 0044
        gbc.setState(0x99dc, 0xd6df, 0xc00, 0xfbb4, 0x5cfa, 0xe8ee, 0x0, 0x0);
        gbc.writeMem(0x99dc, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd6df);
        EXPECT(gbc.pc(), 0x99dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99dc), 0x45);
        // 45 0045
        gbc.setState(0xae2d, 0x9a07, 0x8e0, 0x6fe5, 0x6062, 0x21a7, 0x1, 0x0);
        gbc.writeMem(0xae2d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9a07);
        EXPECT(gbc.pc(), 0xae2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae2d), 0x45);
        // 45 0046
        gbc.setState(0x1eb1, 0x702, 0x95f0, 0x68f6, 0x3a25, 0xf13d, 0x1, 0x0);
        gbc.writeMem(0x1eb1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x702);
        EXPECT(gbc.pc(), 0x1eb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0048
        gbc.setState(0xb802, 0x541, 0x4a40, 0x18e6, 0xc551, 0x1be0, 0x0, 0x0);
        gbc.writeMem(0xb802, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x541);
        EXPECT(gbc.pc(), 0xb803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb802), 0x45);
        // 45 0049
        gbc.setState(0xc061, 0x17cb, 0x6fe0, 0x494, 0x3369, 0x47c7, 0x1, 0x1);
        gbc.writeMem(0xc061, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x17cb);
        EXPECT(gbc.pc(), 0xc062);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc061), 0x45);
        // 45 004A
        gbc.setState(0xa970, 0xa845, 0xdc10, 0x9d6d, 0x9bb6, 0xe6e0, 0x1, 0x0);
        gbc.writeMem(0xa970, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa845);
        EXPECT(gbc.pc(), 0xa971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa970), 0x45);
        // 45 004B
        gbc.setState(0xeaf9, 0xf5c9, 0xebc0, 0x21d2, 0xe189, 0xa04e, 0x1, 0x0);
        gbc.writeMem(0xeaf9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf5c9);
        EXPECT(gbc.pc(), 0xeafa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaf9), 0x45);
        // 45 004C
        gbc.setState(0xce4a, 0x5cc0, 0xc410, 0xb9d6, 0x93f, 0x62b1, 0x0, 0x1);
        gbc.writeMem(0xce4a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5cc0);
        EXPECT(gbc.pc(), 0xce4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce4a), 0x45);
        // 45 004D
        gbc.setState(0xc66a, 0xb74f, 0xc330, 0xacb3, 0xb3b7, 0xd292, 0x1, 0x0);
        gbc.writeMem(0xc66a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb74f);
        EXPECT(gbc.pc(), 0xc66b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc66a), 0x45);
        // 45 004E
        gbc.setState(0x8b74, 0x418a, 0x3340, 0xd6d, 0xa2f2, 0xbb31, 0x1, 0x0);
        gbc.writeMem(0x8b74, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x418a);
        EXPECT(gbc.pc(), 0x8b75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b74), 0x45);
        // 45 004F
        gbc.setState(0x64da, 0x472d, 0xa4b0, 0xca1d, 0xc4d1, 0xf443, 0x1, 0x0);
        gbc.writeMem(0x64da, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x472d);
        EXPECT(gbc.pc(), 0x64db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0050
        gbc.setState(0x1041, 0xbdb8, 0x7100, 0x5c33, 0xa829, 0x5bc5, 0x0, 0x0);
        gbc.writeMem(0x1041, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xbdb8);
        EXPECT(gbc.pc(), 0x1042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0051
        gbc.setState(0x27ae, 0xbc79, 0x1620, 0xa464, 0xc8bf, 0x1440, 0x1, 0x0);
        gbc.writeMem(0x27ae, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xbc79);
        EXPECT(gbc.pc(), 0x27af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0052
        gbc.setState(0xdc14, 0x1e85, 0x5b30, 0x1d35, 0xd61c, 0xd2b2, 0x0, 0x1);
        gbc.writeMem(0xdc14, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1e85);
        EXPECT(gbc.pc(), 0xdc15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc14), 0x45);
        // 45 0053
        gbc.setState(0x939, 0x112c, 0xa4f0, 0xc636, 0xea59, 0x8284, 0x1, 0x0);
        gbc.writeMem(0x939, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x112c);
        EXPECT(gbc.pc(), 0x93a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0054
        gbc.setState(0x8c10, 0x8f9a, 0xc650, 0x6aba, 0x68e9, 0x360e, 0x1, 0x1);
        gbc.writeMem(0x8c10, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8f9a);
        EXPECT(gbc.pc(), 0x8c11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c10), 0x45);
        // 45 0056
        gbc.setState(0x4b7b, 0xbccc, 0x14e0, 0x3802, 0xf871, 0x75bd, 0x0, 0x0);
        gbc.writeMem(0x4b7b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xbccc);
        EXPECT(gbc.pc(), 0x4b7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0057
        gbc.setState(0xae6c, 0xaf2a, 0x7610, 0x2959, 0xb0c1, 0xecfb, 0x1, 0x1);
        gbc.writeMem(0xae6c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xaf2a);
        EXPECT(gbc.pc(), 0xae6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae6c), 0x45);
        // 45 0058
        gbc.setState(0x95d1, 0x62, 0x66f0, 0xacef, 0x9df8, 0x324a, 0x0, 0x1);
        gbc.writeMem(0x95d1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x62);
        EXPECT(gbc.pc(), 0x95d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d1), 0x45);
        // 45 0059
        gbc.setState(0xa118, 0x4643, 0x7d40, 0xf8a4, 0x39f3, 0x846e, 0x0, 0x0);
        gbc.writeMem(0xa118, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4643);
        EXPECT(gbc.pc(), 0xa119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa118), 0x45);
        // 45 005A
        gbc.setState(0x97b9, 0x3939, 0xeb20, 0xb601, 0x1dae, 0x928f, 0x0, 0x0);
        gbc.writeMem(0x97b9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3939);
        EXPECT(gbc.pc(), 0x97ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b9), 0x45);
        // 45 005B
        gbc.setState(0xed49, 0x206d, 0xd120, 0xc6eb, 0x1204, 0x6adb, 0x1, 0x1);
        gbc.writeMem(0xed49, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x206d);
        EXPECT(gbc.pc(), 0xed4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed49), 0x45);
        // 45 005C
        gbc.setState(0x525d, 0x5d42, 0xce10, 0x5a20, 0x7819, 0xefa5, 0x0, 0x1);
        gbc.writeMem(0x525d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5d42);
        EXPECT(gbc.pc(), 0x525e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 005D
        gbc.setState(0xb200, 0x642e, 0x65d0, 0x52b3, 0xd67b, 0xd769, 0x1, 0x0);
        gbc.writeMem(0xb200, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x642e);
        EXPECT(gbc.pc(), 0xb201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb200), 0x45);
        // 45 005E
        gbc.setState(0x7de0, 0xbf30, 0xa10, 0x9dfd, 0xd22d, 0x6a77, 0x0, 0x0);
        gbc.writeMem(0x7de0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xbf30);
        EXPECT(gbc.pc(), 0x7de1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0060
        gbc.setState(0x1ac3, 0x4209, 0x1f00, 0x905d, 0x95d0, 0xd8a8, 0x0, 0x1);
        gbc.writeMem(0x1ac3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4209);
        EXPECT(gbc.pc(), 0x1ac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0061
        gbc.setState(0x1cb3, 0xd16, 0x9b0, 0xc050, 0x4189, 0xe80b, 0x1, 0x1);
        gbc.writeMem(0x1cb3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd16);
        EXPECT(gbc.pc(), 0x1cb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0063
        gbc.setState(0xc441, 0xd2bb, 0xb390, 0x7a7f, 0x32b5, 0xb61, 0x1, 0x0);
        gbc.writeMem(0xc441, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd2bb);
        EXPECT(gbc.pc(), 0xc442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc441), 0x45);
        // 45 0064
        gbc.setState(0xecdf, 0xc1ca, 0xd780, 0x1b73, 0xd105, 0x686, 0x0, 0x1);
        gbc.writeMem(0xecdf, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc1ca);
        EXPECT(gbc.pc(), 0xece0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecdf), 0x45);
        // 45 0065
        gbc.setState(0xc0ac, 0x9657, 0x1280, 0xb29b, 0xb92a, 0x6d82, 0x1, 0x0);
        gbc.writeMem(0xc0ac, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9657);
        EXPECT(gbc.pc(), 0xc0ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ac), 0x45);
        // 45 0066
        gbc.setState(0x4924, 0x7e7d, 0x6b90, 0xaa2a, 0x694e, 0x91e5, 0x0, 0x1);
        gbc.writeMem(0x4924, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7e7d);
        EXPECT(gbc.pc(), 0x4925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0067
        gbc.setState(0x76be, 0x4cd5, 0xacc0, 0xae2f, 0x587, 0xf374, 0x1, 0x0);
        gbc.writeMem(0x76be, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4cd5);
        EXPECT(gbc.pc(), 0x76bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0068
        gbc.setState(0x111d, 0xb447, 0x66a0, 0x2479, 0x1e9c, 0xc56e, 0x1, 0x0);
        gbc.writeMem(0x111d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb447);
        EXPECT(gbc.pc(), 0x111e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0069
        gbc.setState(0x98dc, 0x12bc, 0x7220, 0xeb33, 0x1e06, 0x729e, 0x1, 0x0);
        gbc.writeMem(0x98dc, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x12bc);
        EXPECT(gbc.pc(), 0x98dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98dc), 0x45);
        // 45 006B
        gbc.setState(0xb325, 0x1b65, 0xc030, 0xee6, 0xdbb9, 0xfed1, 0x0, 0x1);
        gbc.writeMem(0xb325, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1b65);
        EXPECT(gbc.pc(), 0xb326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb325), 0x45);
        // 45 006C
        gbc.setState(0xcbb2, 0x92e5, 0xc8d0, 0xcaa1, 0xde9e, 0xe516, 0x0, 0x1);
        gbc.writeMem(0xcbb2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x92e5);
        EXPECT(gbc.pc(), 0xcbb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbb2), 0x45);
        // 45 006D
        gbc.setState(0xc782, 0x3aa, 0xdab0, 0xa60e, 0x3131, 0xba5e, 0x0, 0x1);
        gbc.writeMem(0xc782, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3aa);
        EXPECT(gbc.pc(), 0xc783);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc782), 0x45);
        // 45 006E
        gbc.setState(0xbe14, 0xfaf2, 0xc080, 0xaca8, 0x5b1c, 0x4c53, 0x1, 0x1);
        gbc.writeMem(0xbe14, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xfaf2);
        EXPECT(gbc.pc(), 0xbe15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe14), 0x45);
        // 45 006F
        gbc.setState(0x826c, 0xde1, 0x6a00, 0x2cfb, 0xf101, 0xf96f, 0x0, 0x1);
        gbc.writeMem(0x826c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xde1);
        EXPECT(gbc.pc(), 0x826d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x826c), 0x45);
        // 45 0070
        gbc.setState(0x9c4e, 0x1307, 0x1a10, 0xea40, 0x2207, 0x3e17, 0x0, 0x1);
        gbc.writeMem(0x9c4e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1307);
        EXPECT(gbc.pc(), 0x9c4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c4e), 0x45);
        // 45 0072
        gbc.setState(0x4de8, 0xb39a, 0x1c40, 0xadee, 0xbe84, 0xdb9a, 0x1, 0x1);
        gbc.writeMem(0x4de8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb39a);
        EXPECT(gbc.pc(), 0x4de9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0074
        gbc.setState(0x621c, 0xf33, 0x6910, 0xe76c, 0x7dfa, 0x75b, 0x0, 0x1);
        gbc.writeMem(0x621c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf33);
        EXPECT(gbc.pc(), 0x621d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0075
        gbc.setState(0x6f84, 0xbdd6, 0x52f0, 0xfb5d, 0x89a1, 0x71ca, 0x0, 0x0);
        gbc.writeMem(0x6f84, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xbdd6);
        EXPECT(gbc.pc(), 0x6f85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0076
        gbc.setState(0x6b2c, 0x333e, 0x5970, 0xd4c7, 0xfe8, 0x4887, 0x0, 0x1);
        gbc.writeMem(0x6b2c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x333e);
        EXPECT(gbc.pc(), 0x6b2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0077
        gbc.setState(0xccbc, 0x7f51, 0x5930, 0x6d47, 0x5e37, 0xb7df, 0x1, 0x1);
        gbc.writeMem(0xccbc, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7f51);
        EXPECT(gbc.pc(), 0xccbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccbc), 0x45);
        // 45 0078
        gbc.setState(0xacbe, 0x83c7, 0xe310, 0x822b, 0x969a, 0x318e, 0x0, 0x1);
        gbc.writeMem(0xacbe, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x83c7);
        EXPECT(gbc.pc(), 0xacbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacbe), 0x45);
        // 45 0079
        gbc.setState(0x544, 0x702d, 0xc820, 0xbf91, 0x1eae, 0x7d53, 0x1, 0x0);
        gbc.writeMem(0x544, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x702d);
        EXPECT(gbc.pc(), 0x545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 007A
        gbc.setState(0xadaf, 0xb808, 0xc210, 0x67d3, 0x2124, 0x1da0, 0x1, 0x0);
        gbc.writeMem(0xadaf, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb808);
        EXPECT(gbc.pc(), 0xadb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadaf), 0x45);
        // 45 007B
        gbc.setState(0x5ab2, 0xa068, 0x95e0, 0x27b0, 0x9f8c, 0x4463, 0x1, 0x0);
        gbc.writeMem(0x5ab2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa068);
        EXPECT(gbc.pc(), 0x5ab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 007C
        gbc.setState(0x67ae, 0x1859, 0xf010, 0xb962, 0x382b, 0x7bcd, 0x0, 0x1);
        gbc.writeMem(0x67ae, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x1859);
        EXPECT(gbc.pc(), 0x67af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 007D
        gbc.setState(0xc8a3, 0xb478, 0xe7b0, 0x18d9, 0xac04, 0x3390, 0x1, 0x0);
        gbc.writeMem(0xc8a3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb478);
        EXPECT(gbc.pc(), 0xc8a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a3), 0x45);
        // 45 007E
        gbc.setState(0xa3b1, 0x86d2, 0x8130, 0xeeef, 0x25d7, 0xb421, 0x1, 0x1);
        gbc.writeMem(0xa3b1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x86d2);
        EXPECT(gbc.pc(), 0xa3b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3b1), 0x45);
        // 45 007F
        gbc.setState(0x87ba, 0x7d59, 0xfa00, 0x42d0, 0x9529, 0xe03b, 0x1, 0x1);
        gbc.writeMem(0x87ba, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7d59);
        EXPECT(gbc.pc(), 0x87bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87ba), 0x45);
        // 45 0080
        gbc.setState(0xced7, 0xa586, 0x42a0, 0x62fc, 0x9eb9, 0x3539, 0x1, 0x1);
        gbc.writeMem(0xced7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa586);
        EXPECT(gbc.pc(), 0xced8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced7), 0x45);
        // 45 0081
        gbc.setState(0x42f7, 0xaf08, 0xbf80, 0x3106, 0xf477, 0x6dd2, 0x1, 0x1);
        gbc.writeMem(0x42f7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xaf08);
        EXPECT(gbc.pc(), 0x42f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0083
        gbc.setState(0x7d23, 0x7346, 0xead0, 0xe255, 0x809c, 0xf994, 0x1, 0x1);
        gbc.writeMem(0x7d23, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7346);
        EXPECT(gbc.pc(), 0x7d24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0084
        gbc.setState(0x4b8b, 0xdf04, 0xd260, 0x7bda, 0xae19, 0x7489, 0x1, 0x1);
        gbc.writeMem(0x4b8b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xdf04);
        EXPECT(gbc.pc(), 0x4b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0085
        gbc.setState(0x830c, 0x70e3, 0x9050, 0x31df, 0x9fcf, 0x203e, 0x0, 0x0);
        gbc.writeMem(0x830c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x70e3);
        EXPECT(gbc.pc(), 0x830d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x830c), 0x45);
        // 45 0087
        gbc.setState(0x5ddd, 0xc19c, 0xc8b0, 0x2681, 0x3cde, 0xe80e, 0x0, 0x0);
        gbc.writeMem(0x5ddd, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc19c);
        EXPECT(gbc.pc(), 0x5dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0088
        gbc.setState(0x8955, 0x1b5a, 0xe040, 0x7d03, 0x8068, 0x3836, 0x1, 0x1);
        gbc.writeMem(0x8955, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1b5a);
        EXPECT(gbc.pc(), 0x8956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8955), 0x45);
        // 45 0089
        gbc.setState(0xc262, 0x975c, 0x71c0, 0xbe72, 0x4fe8, 0x8eb8, 0x1, 0x0);
        gbc.writeMem(0xc262, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x975c);
        EXPECT(gbc.pc(), 0xc263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc262), 0x45);
        // 45 008A
        gbc.setState(0x9fe, 0x1da5, 0xbb00, 0x2b1, 0xf10e, 0x95e3, 0x1, 0x1);
        gbc.writeMem(0x9fe, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1da5);
        EXPECT(gbc.pc(), 0x9ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 008B
        gbc.setState(0xda82, 0xb3f0, 0x9eb0, 0x9e84, 0xbef4, 0xe9e4, 0x0, 0x0);
        gbc.writeMem(0xda82, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb3f0);
        EXPECT(gbc.pc(), 0xda83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda82), 0x45);
        // 45 008C
        gbc.setState(0x3d80, 0xd358, 0xf0a0, 0xb1b8, 0xa877, 0x20e7, 0x0, 0x1);
        gbc.writeMem(0x3d80, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd358);
        EXPECT(gbc.pc(), 0x3d81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 008D
        gbc.setState(0xe997, 0x125, 0xe710, 0x5a54, 0xb85a, 0x1b47, 0x0, 0x1);
        gbc.writeMem(0xe997, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x125);
        EXPECT(gbc.pc(), 0xe998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe997), 0x45);
        // 45 008E
        gbc.setState(0xa29a, 0x273a, 0x75a0, 0xf425, 0x17a3, 0xcf99, 0x1, 0x0);
        gbc.writeMem(0xa29a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x273a);
        EXPECT(gbc.pc(), 0xa29b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa29a), 0x45);
        // 45 008F
        gbc.setState(0x9c8e, 0xa74f, 0x24f0, 0xcd8, 0x3079, 0x4c9d, 0x1, 0x0);
        gbc.writeMem(0x9c8e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa74f);
        EXPECT(gbc.pc(), 0x9c8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c8e), 0x45);
        // 45 0091
        gbc.setState(0x425, 0xd1b8, 0xe080, 0x5721, 0xa3ec, 0x33e6, 0x0, 0x0);
        gbc.writeMem(0x425, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd1b8);
        EXPECT(gbc.pc(), 0x426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0093
        gbc.setState(0xcb58, 0x587c, 0xac40, 0x2dcb, 0x7ae9, 0xc8bc, 0x1, 0x0);
        gbc.writeMem(0xcb58, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x587c);
        EXPECT(gbc.pc(), 0xcb59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb58), 0x45);
        // 45 0094
        gbc.setState(0xae6, 0xab49, 0xa500, 0x44a8, 0xd289, 0x28ac, 0x1, 0x0);
        gbc.writeMem(0xae6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xab49);
        EXPECT(gbc.pc(), 0xae7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0095
        gbc.setState(0x2c82, 0xf97c, 0xd820, 0x83ac, 0x531c, 0x8cdf, 0x1, 0x0);
        gbc.writeMem(0x2c82, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf97c);
        EXPECT(gbc.pc(), 0x2c83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0096
        gbc.setState(0x659d, 0x4560, 0x50a0, 0xb6fd, 0xe3c4, 0x88d7, 0x0, 0x0);
        gbc.writeMem(0x659d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4560);
        EXPECT(gbc.pc(), 0x659e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0097
        gbc.setState(0x8966, 0xd38e, 0x2e50, 0xfcb6, 0xa323, 0x9781, 0x0, 0x1);
        gbc.writeMem(0x8966, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd38e);
        EXPECT(gbc.pc(), 0x8967);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8966), 0x45);
        // 45 0098
        gbc.setState(0x2c0c, 0x8239, 0x3d0, 0xa5cc, 0xa832, 0xe53c, 0x0, 0x0);
        gbc.writeMem(0x2c0c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8239);
        EXPECT(gbc.pc(), 0x2c0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0099
        gbc.setState(0xbc44, 0x7602, 0x55f0, 0x3d14, 0x974, 0xffe1, 0x0, 0x1);
        gbc.writeMem(0xbc44, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7602);
        EXPECT(gbc.pc(), 0xbc45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc44), 0x45);
        // 45 009A
        gbc.setState(0x60a0, 0x4c63, 0x75f0, 0x1d2c, 0x6a5a, 0x41d9, 0x1, 0x1);
        gbc.writeMem(0x60a0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4c63);
        EXPECT(gbc.pc(), 0x60a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 009B
        gbc.setState(0x32b7, 0xb474, 0x4270, 0x51c5, 0x7551, 0xd700, 0x1, 0x1);
        gbc.writeMem(0x32b7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb474);
        EXPECT(gbc.pc(), 0x32b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 009C
        gbc.setState(0xc92c, 0x1cef, 0x2b90, 0x54de, 0x81e9, 0x17df, 0x1, 0x1);
        gbc.writeMem(0xc92c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1cef);
        EXPECT(gbc.pc(), 0xc92d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc92c), 0x45);
        // 45 009D
        gbc.setState(0x6d21, 0x63a4, 0xc9a0, 0xe022, 0x7727, 0xc32b, 0x0, 0x1);
        gbc.writeMem(0x6d21, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x63a4);
        EXPECT(gbc.pc(), 0x6d22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 009E
        gbc.setState(0x2318, 0xc26f, 0x1a30, 0xcef7, 0x6d78, 0x2c9f, 0x1, 0x0);
        gbc.writeMem(0x2318, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc26f);
        EXPECT(gbc.pc(), 0x2319);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 009F
        gbc.setState(0x6650, 0xd8cb, 0x59b0, 0x414f, 0x68f9, 0x6afe, 0x0, 0x0);
        gbc.writeMem(0x6650, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd8cb);
        EXPECT(gbc.pc(), 0x6651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 00A1
        gbc.setState(0xc90f, 0xd55d, 0x3bb0, 0x232b, 0xa227, 0x7516, 0x1, 0x1);
        gbc.writeMem(0xc90f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd55d);
        EXPECT(gbc.pc(), 0xc910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc90f), 0x45);
        // 45 00A2
        gbc.setState(0xc662, 0x78ee, 0x6b60, 0x6a24, 0xac7d, 0x9eb9, 0x0, 0x1);
        gbc.writeMem(0xc662, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x78ee);
        EXPECT(gbc.pc(), 0xc663);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc662), 0x45);
        // 45 00A4
        gbc.setState(0x6ee6, 0xd37, 0x24c0, 0x16f0, 0x7049, 0xed70, 0x1, 0x1);
        gbc.writeMem(0x6ee6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd37);
        EXPECT(gbc.pc(), 0x6ee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 00A5
        gbc.setState(0x1956, 0xae13, 0xd8a0, 0x918, 0xb672, 0x28a, 0x0, 0x0);
        gbc.writeMem(0x1956, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xae13);
        EXPECT(gbc.pc(), 0x1957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 00A6
        gbc.setState(0xa47e, 0x47d1, 0x8130, 0xc558, 0x9410, 0x467c, 0x1, 0x1);
        gbc.writeMem(0xa47e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x47d1);
        EXPECT(gbc.pc(), 0xa47f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa47e), 0x45);
        // 45 00A7
        gbc.setState(0x98e0, 0xb81f, 0x6ad0, 0x5429, 0x8e81, 0x6bca, 0x1, 0x1);
        gbc.writeMem(0x98e0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb81f);
        EXPECT(gbc.pc(), 0x98e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98e0), 0x45);
        // 45 00A8
        gbc.setState(0x7fd, 0xecf8, 0x3b30, 0x1365, 0x2ae0, 0x614e, 0x0, 0x0);
        gbc.writeMem(0x7fd, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xecf8);
        EXPECT(gbc.pc(), 0x7fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 00A9
        gbc.setState(0x3d1d, 0xeac, 0xa590, 0x8629, 0xffd4, 0x3064, 0x1, 0x1);
        gbc.writeMem(0x3d1d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xeac);
        EXPECT(gbc.pc(), 0x3d1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 00AA
        gbc.setState(0xcb0, 0x45f0, 0x17f0, 0x6db1, 0xd3d3, 0x235, 0x0, 0x1);
        gbc.writeMem(0xcb0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x45f0);
        EXPECT(gbc.pc(), 0xcb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 00AB
        gbc.setState(0x32a5, 0xa94a, 0x1fe0, 0xda1, 0xd02e, 0x1a58, 0x1, 0x0);
        gbc.writeMem(0x32a5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa94a);
        EXPECT(gbc.pc(), 0x32a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 00AC
        gbc.setState(0x61aa, 0xdb3f, 0x9060, 0xcb71, 0x8338, 0x8e25, 0x1, 0x0);
        gbc.writeMem(0x61aa, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xdb3f);
        EXPECT(gbc.pc(), 0x61ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 00AD
        gbc.setState(0xb24e, 0x62f0, 0x3f00, 0xe2ec, 0xebe0, 0x2700, 0x0, 0x1);
        gbc.writeMem(0xb24e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x62f0);
        EXPECT(gbc.pc(), 0xb24f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb24e), 0x45);
        // 45 00AE
        gbc.setState(0x87fe, 0xdcc4, 0xb90, 0x9ac5, 0xeb3b, 0xee31, 0x1, 0x0);
        gbc.writeMem(0x87fe, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdcc4);
        EXPECT(gbc.pc(), 0x87ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87fe), 0x45);
        // 45 00AF
        gbc.setState(0x8812, 0xdd34, 0x5360, 0x497, 0x5451, 0x36c4, 0x1, 0x1);
        gbc.writeMem(0x8812, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdd34);
        EXPECT(gbc.pc(), 0x8813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8812), 0x45);
        // 45 00B0
        gbc.setState(0xd4e2, 0x4c4a, 0x2cd0, 0xce7, 0x446, 0x70ad, 0x0, 0x0);
        gbc.writeMem(0xd4e2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4c4a);
        EXPECT(gbc.pc(), 0xd4e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4e2), 0x45);
        // 45 00B1
        gbc.setState(0xe030, 0x4a49, 0x1dd0, 0xf91f, 0xbb2d, 0x53de, 0x1, 0x1);
        gbc.writeMem(0xe030, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4a49);
        EXPECT(gbc.pc(), 0xe031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe030), 0x45);
        // 45 00B2
        gbc.setState(0x8328, 0x72da, 0x10, 0x18cb, 0x2865, 0x3ead, 0x0, 0x1);
        gbc.writeMem(0x8328, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x72da);
        EXPECT(gbc.pc(), 0x8329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8328), 0x45);
        // 45 00B3
        gbc.setState(0xd2f1, 0x2ba, 0xd490, 0x51e, 0xb8f7, 0x3826, 0x0, 0x1);
        gbc.writeMem(0xd2f1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2ba);
        EXPECT(gbc.pc(), 0xd2f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2f1), 0x45);
        // 45 00B4
        gbc.setState(0xb230, 0xdc85, 0x6e90, 0x26aa, 0x7f5c, 0x50c4, 0x0, 0x0);
        gbc.writeMem(0xb230, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdc85);
        EXPECT(gbc.pc(), 0xb231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb230), 0x45);
        // 45 00B5
        gbc.setState(0x2fbc, 0x6fc7, 0xd0, 0x7bd8, 0xb923, 0x7b03, 0x0, 0x1);
        gbc.writeMem(0x2fbc, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6fc7);
        EXPECT(gbc.pc(), 0x2fbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 00B7
        gbc.setState(0x50b1, 0x2122, 0x660, 0x56cc, 0x4604, 0xe242, 0x1, 0x0);
        gbc.writeMem(0x50b1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2122);
        EXPECT(gbc.pc(), 0x50b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 00B8
        gbc.setState(0xe49b, 0x8336, 0x9920, 0x3f51, 0x8a98, 0x1587, 0x1, 0x1);
        gbc.writeMem(0xe49b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8336);
        EXPECT(gbc.pc(), 0xe49c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe49b), 0x45);
        // 45 00B9
        gbc.setState(0x2d5c, 0x8043, 0xca10, 0x23bd, 0x9f22, 0x5398, 0x1, 0x0);
        gbc.writeMem(0x2d5c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8043);
        EXPECT(gbc.pc(), 0x2d5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 00BA
        gbc.setState(0x5b40, 0xa361, 0xf3e0, 0x1c54, 0x920d, 0x61ff, 0x0, 0x1);
        gbc.writeMem(0x5b40, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa361);
        EXPECT(gbc.pc(), 0x5b41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 00BB
        gbc.setState(0x2ec, 0xa938, 0x6cc0, 0xa385, 0x9164, 0x1dfc, 0x0, 0x1);
        gbc.writeMem(0x2ec, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa938);
        EXPECT(gbc.pc(), 0x2ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 00BD
        gbc.setState(0x2fe3, 0x3b31, 0x3a20, 0xd93a, 0xe320, 0x842f, 0x0, 0x1);
        gbc.writeMem(0x2fe3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3b31);
        EXPECT(gbc.pc(), 0x2fe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 00BE
        gbc.setState(0x5b49, 0xcff2, 0xf9f0, 0x66bb, 0x4667, 0x3efe, 0x0, 0x0);
        gbc.writeMem(0x5b49, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xcff2);
        EXPECT(gbc.pc(), 0x5b4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 00BF
        gbc.setState(0x484c, 0x2d23, 0x940, 0x54a4, 0xe3bd, 0x3d98, 0x1, 0x1);
        gbc.writeMem(0x484c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2d23);
        EXPECT(gbc.pc(), 0x484d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 00C0
        gbc.setState(0x4829, 0xbae2, 0x7580, 0x35ad, 0xc9d1, 0x54cb, 0x0, 0x0);
        gbc.writeMem(0x4829, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbae2);
        EXPECT(gbc.pc(), 0x482a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 00C1
        gbc.setState(0x297e, 0x37fc, 0x3a0, 0x6d69, 0xdaf2, 0xc944, 0x1, 0x1);
        gbc.writeMem(0x297e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x37fc);
        EXPECT(gbc.pc(), 0x297f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 00C2
        gbc.setState(0xe0d8, 0x9f7d, 0x92c0, 0xb558, 0x49c5, 0x6e38, 0x0, 0x0);
        gbc.writeMem(0xe0d8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9f7d);
        EXPECT(gbc.pc(), 0xe0d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0d8), 0x45);
        // 45 00C3
        gbc.setState(0xbecf, 0x2df8, 0xdcd0, 0x5bbe, 0x5b7d, 0xf7e4, 0x1, 0x1);
        gbc.writeMem(0xbecf, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2df8);
        EXPECT(gbc.pc(), 0xbed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbecf), 0x45);
        // 45 00C4
        gbc.setState(0x21de, 0x5ab4, 0x5160, 0xa17a, 0x98e3, 0x2fe7, 0x1, 0x0);
        gbc.writeMem(0x21de, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5ab4);
        EXPECT(gbc.pc(), 0x21df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 00C5
        gbc.setState(0x2fca, 0x280f, 0xe6e0, 0x1255, 0x76b1, 0xc3, 0x0, 0x0);
        gbc.writeMem(0x2fca, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x280f);
        EXPECT(gbc.pc(), 0x2fcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 00C6
        gbc.setState(0xe9ea, 0xc64, 0x8090, 0x720, 0xea57, 0xb312, 0x0, 0x0);
        gbc.writeMem(0xe9ea, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc64);
        EXPECT(gbc.pc(), 0xe9eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ea), 0x45);
        // 45 00C7
        gbc.setState(0xcb8d, 0x5fd7, 0xb910, 0x60c5, 0x5266, 0x76cf, 0x0, 0x0);
        gbc.writeMem(0xcb8d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5fd7);
        EXPECT(gbc.pc(), 0xcb8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb8d), 0x45);
        // 45 00C8
        gbc.setState(0x2dbb, 0x6b75, 0xccb0, 0xfe04, 0xa7d5, 0xb7f1, 0x1, 0x0);
        gbc.writeMem(0x2dbb, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6b75);
        EXPECT(gbc.pc(), 0x2dbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 00C9
        gbc.setState(0x5e42, 0xa690, 0xca50, 0xf710, 0x6eed, 0x6ea0, 0x0, 0x0);
        gbc.writeMem(0x5e42, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa690);
        EXPECT(gbc.pc(), 0x5e43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 00CA
        gbc.setState(0xab02, 0x8a1d, 0x8ae0, 0xce70, 0xc969, 0x4a0a, 0x1, 0x1);
        gbc.writeMem(0xab02, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8a1d);
        EXPECT(gbc.pc(), 0xab03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab02), 0x45);
        // 45 00CB
        gbc.setState(0xa6c7, 0xfc30, 0x7230, 0x6d26, 0xab0c, 0x4fd0, 0x1, 0x0);
        gbc.writeMem(0xa6c7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xfc30);
        EXPECT(gbc.pc(), 0xa6c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6c7), 0x45);
        // 45 00CC
        gbc.setState(0xb155, 0xdf00, 0x3af0, 0x546, 0xe14c, 0xff02, 0x0, 0x0);
        gbc.writeMem(0xb155, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdf00);
        EXPECT(gbc.pc(), 0xb156);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb155), 0x45);
        // 45 00CD
        gbc.setState(0x797d, 0x15db, 0xe1f0, 0x327e, 0xe6bf, 0xfcd0, 0x0, 0x0);
        gbc.writeMem(0x797d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x15db);
        EXPECT(gbc.pc(), 0x797e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 00CE
        gbc.setState(0x58a1, 0x7586, 0x6da0, 0xa729, 0xfd58, 0x9f63, 0x0, 0x0);
        gbc.writeMem(0x58a1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7586);
        EXPECT(gbc.pc(), 0x58a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 00CF
        gbc.setState(0x134e, 0x201, 0xfaa0, 0xbe52, 0x4eae, 0xd1cd, 0x1, 0x0);
        gbc.writeMem(0x134e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x201);
        EXPECT(gbc.pc(), 0x134f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 00D1
        gbc.setState(0x2be, 0xf6fe, 0x38c0, 0x216, 0x9bc4, 0xae36, 0x1, 0x0);
        gbc.writeMem(0x2be, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf6fe);
        EXPECT(gbc.pc(), 0x2bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 00D2
        gbc.setState(0x1632, 0xb0d0, 0xddf0, 0x70de, 0x52af, 0x9c0, 0x0, 0x0);
        gbc.writeMem(0x1632, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb0d0);
        EXPECT(gbc.pc(), 0x1633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 00D3
        gbc.setState(0x96e8, 0x2922, 0xedd0, 0xae35, 0xb976, 0xcedb, 0x0, 0x1);
        gbc.writeMem(0x96e8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2922);
        EXPECT(gbc.pc(), 0x96e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96e8), 0x45);
        // 45 00D4
        gbc.setState(0x8bc3, 0x795, 0x32b0, 0x8bcc, 0xe4c9, 0x9219, 0x0, 0x1);
        gbc.writeMem(0x8bc3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x795);
        EXPECT(gbc.pc(), 0x8bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bc3), 0x45);
        // 45 00D5
        gbc.setState(0x23a0, 0x15a1, 0x2c00, 0x11a7, 0xdc38, 0x6e1, 0x0, 0x1);
        gbc.writeMem(0x23a0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x15a1);
        EXPECT(gbc.pc(), 0x23a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 00D6
        gbc.setState(0xac8b, 0xb6a5, 0x78c0, 0x5e6b, 0xb0ef, 0x508b, 0x1, 0x1);
        gbc.writeMem(0xac8b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb6a5);
        EXPECT(gbc.pc(), 0xac8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac8b), 0x45);
        // 45 00D7
        gbc.setState(0xdff7, 0x1c85, 0x7fd0, 0x2ac0, 0xa5a4, 0x2736, 0x0, 0x1);
        gbc.writeMem(0xdff7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1c85);
        EXPECT(gbc.pc(), 0xdff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdff7), 0x45);
        // 45 00D8
        gbc.setState(0x5ab3, 0xd01d, 0x200, 0xb0d, 0xfeae, 0xdd3, 0x0, 0x0);
        gbc.writeMem(0x5ab3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd01d);
        EXPECT(gbc.pc(), 0x5ab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 00D9
        gbc.setState(0x1605, 0xce95, 0x4430, 0xf0f6, 0xed54, 0x3b0c, 0x1, 0x0);
        gbc.writeMem(0x1605, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xce95);
        EXPECT(gbc.pc(), 0x1606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 00DA
        gbc.setState(0xd0bb, 0xe29f, 0x50f0, 0x92d9, 0x6f8a, 0xa50f, 0x1, 0x0);
        gbc.writeMem(0xd0bb, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe29f);
        EXPECT(gbc.pc(), 0xd0bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0bb), 0x45);
        // 45 00DB
        gbc.setState(0xdab7, 0x4ad3, 0xc230, 0x2c71, 0x75ba, 0x8360, 0x1, 0x0);
        gbc.writeMem(0xdab7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4ad3);
        EXPECT(gbc.pc(), 0xdab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdab7), 0x45);
        // 45 00DC
        gbc.setState(0x72d8, 0x40ec, 0x4800, 0x78ff, 0xbb39, 0x1f26, 0x0, 0x1);
        gbc.writeMem(0x72d8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x40ec);
        EXPECT(gbc.pc(), 0x72d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 00DD
        gbc.setState(0x6635, 0xc36e, 0xfb00, 0xd6d, 0x1b20, 0x2023, 0x0, 0x1);
        gbc.writeMem(0x6635, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc36e);
        EXPECT(gbc.pc(), 0x6636);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 00DE
        gbc.setState(0x8c3f, 0xf911, 0x5580, 0x56fe, 0x4e6e, 0x1222, 0x0, 0x1);
        gbc.writeMem(0x8c3f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf911);
        EXPECT(gbc.pc(), 0x8c40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c3f), 0x45);
        // 45 00DF
        gbc.setState(0x87d2, 0x7128, 0x2760, 0xb4a3, 0x7a7e, 0x660, 0x0, 0x0);
        gbc.writeMem(0x87d2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7128);
        EXPECT(gbc.pc(), 0x87d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87d2), 0x45);
        // 45 00E0
        gbc.setState(0xb062, 0x51d3, 0x87a0, 0x7491, 0x5a41, 0x1e61, 0x0, 0x0);
        gbc.writeMem(0xb062, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x51d3);
        EXPECT(gbc.pc(), 0xb063);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb062), 0x45);
        // 45 00E1
        gbc.setState(0x8d2e, 0x2ed6, 0x2720, 0xf1c7, 0x151c, 0x1ad6, 0x1, 0x1);
        gbc.writeMem(0x8d2e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2ed6);
        EXPECT(gbc.pc(), 0x8d2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d2e), 0x45);
        // 45 00E2
        gbc.setState(0x527d, 0x716, 0x8c70, 0x3f5c, 0xf966, 0xedaa, 0x1, 0x1);
        gbc.writeMem(0x527d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x716);
        EXPECT(gbc.pc(), 0x527e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 00E3
        gbc.setState(0xe64c, 0xaf02, 0x6aa0, 0x84a0, 0xb5bb, 0x766c, 0x0, 0x0);
        gbc.writeMem(0xe64c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xaf02);
        EXPECT(gbc.pc(), 0xe64d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe64c), 0x45);
        // 45 00E4
        gbc.setState(0xda0f, 0x356f, 0xf950, 0x7579, 0xc7b3, 0xa1ff, 0x0, 0x0);
        gbc.writeMem(0xda0f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x356f);
        EXPECT(gbc.pc(), 0xda10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda0f), 0x45);
        // 45 00E5
        gbc.setState(0xade4, 0xf42d, 0x5220, 0x40b8, 0xa468, 0xf91d, 0x0, 0x0);
        gbc.writeMem(0xade4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf42d);
        EXPECT(gbc.pc(), 0xade5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xade4), 0x45);
        // 45 00E6
        gbc.setState(0x8cd5, 0x6d7, 0x8030, 0x937c, 0xd9ed, 0x7203, 0x0, 0x1);
        gbc.writeMem(0x8cd5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6d7);
        EXPECT(gbc.pc(), 0x8cd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cd5), 0x45);
        // 45 00E7
        gbc.setState(0xa6f2, 0x1f90, 0x3c20, 0x37c6, 0x96a6, 0x7da, 0x1, 0x1);
        gbc.writeMem(0xa6f2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1f90);
        EXPECT(gbc.pc(), 0xa6f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f2), 0x45);
        // 45 00E8
        gbc.setState(0xbd10, 0x6afe, 0x1660, 0xdffd, 0x7b33, 0x980b, 0x0, 0x1);
        gbc.writeMem(0xbd10, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6afe);
        EXPECT(gbc.pc(), 0xbd11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd10), 0x45);
        // 45 00E9
        gbc.setState(0xe9cd, 0x73ee, 0x70f0, 0x169e, 0x8af3, 0x1f5e, 0x0, 0x0);
        gbc.writeMem(0xe9cd, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x73ee);
        EXPECT(gbc.pc(), 0xe9ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9cd), 0x45);
        // 45 00EA
        gbc.setState(0x6a60, 0xaef1, 0xfb0, 0xbb2, 0x2ba8, 0xf858, 0x0, 0x1);
        gbc.writeMem(0x6a60, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xaef1);
        EXPECT(gbc.pc(), 0x6a61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 00EB
        gbc.setState(0x2c27, 0x15bd, 0x6b90, 0x98d3, 0x6a0, 0xc5bf, 0x1, 0x1);
        gbc.writeMem(0x2c27, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x15bd);
        EXPECT(gbc.pc(), 0x2c28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 00EC
        gbc.setState(0x881, 0xbce1, 0xfe30, 0xdc8b, 0x5670, 0x8970, 0x1, 0x0);
        gbc.writeMem(0x881, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xbce1);
        EXPECT(gbc.pc(), 0x882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 00ED
        gbc.setState(0xe89f, 0x27eb, 0xf370, 0x85b4, 0x392b, 0x355e, 0x1, 0x1);
        gbc.writeMem(0xe89f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x27eb);
        EXPECT(gbc.pc(), 0xe8a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe89f), 0x45);
        // 45 00EE
        gbc.setState(0xbc26, 0xb8ad, 0xe20, 0xd220, 0x4ca, 0xc15a, 0x1, 0x0);
        gbc.writeMem(0xbc26, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb8ad);
        EXPECT(gbc.pc(), 0xbc27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc26), 0x45);
        // 45 00EF
        gbc.setState(0x921c, 0x919, 0x86e0, 0x5a6a, 0xb9e6, 0x6c9d, 0x1, 0x1);
        gbc.writeMem(0x921c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x919);
        EXPECT(gbc.pc(), 0x921d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x921c), 0x45);
        // 45 00F0
        gbc.setState(0x5f3a, 0xa6ac, 0xf2d0, 0x4083, 0x2a6b, 0x5659, 0x0, 0x1);
        gbc.writeMem(0x5f3a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa6ac);
        EXPECT(gbc.pc(), 0x5f3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 00F1
        gbc.setState(0x655b, 0xf4ab, 0xa60, 0x37df, 0x8cb4, 0x761e, 0x0, 0x0);
        gbc.writeMem(0x655b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf4ab);
        EXPECT(gbc.pc(), 0x655c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 00F2
        gbc.setState(0x3e5d, 0x47b1, 0x50a0, 0x2da6, 0x336e, 0x3291, 0x0, 0x1);
        gbc.writeMem(0x3e5d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x47b1);
        EXPECT(gbc.pc(), 0x3e5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 00F3
        gbc.setState(0x2f8c, 0x77b3, 0xde70, 0xb43c, 0x541b, 0x6c4d, 0x1, 0x1);
        gbc.writeMem(0x2f8c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x77b3);
        EXPECT(gbc.pc(), 0x2f8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 00F4
        gbc.setState(0xe6bf, 0xe0ad, 0xeb00, 0xd4fa, 0x6aea, 0x9d04, 0x0, 0x1);
        gbc.writeMem(0xe6bf, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe0ad);
        EXPECT(gbc.pc(), 0xe6c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6bf), 0x45);
        // 45 00F6
        gbc.setState(0x4bfe, 0x7baf, 0xf40, 0xe881, 0x1e36, 0x84a4, 0x1, 0x0);
        gbc.writeMem(0x4bfe, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7baf);
        EXPECT(gbc.pc(), 0x4bff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 00F7
        gbc.setState(0x3041, 0xc47f, 0x5c40, 0x1717, 0x4ac3, 0x6a52, 0x1, 0x1);
        gbc.writeMem(0x3041, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc47f);
        EXPECT(gbc.pc(), 0x3042);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 00F8
        gbc.setState(0x92bd, 0x71dd, 0xe340, 0x12ae, 0xfe16, 0xe0b7, 0x0, 0x0);
        gbc.writeMem(0x92bd, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x71dd);
        EXPECT(gbc.pc(), 0x92be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92bd), 0x45);
        // 45 00F9
        gbc.setState(0xe951, 0x11df, 0x4210, 0xdd29, 0xa7c8, 0xc9cc, 0x1, 0x0);
        gbc.writeMem(0xe951, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x11df);
        EXPECT(gbc.pc(), 0xe952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe951), 0x45);
        // 45 00FA
        gbc.setState(0xc1c6, 0xec7c, 0xa100, 0xe529, 0x9ebf, 0xadb8, 0x0, 0x1);
        gbc.writeMem(0xc1c6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xec7c);
        EXPECT(gbc.pc(), 0xc1c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1c6), 0x45);
        // 45 00FB
        gbc.setState(0x7a79, 0x2b04, 0xa4e0, 0x9576, 0xd970, 0xdd3e, 0x1, 0x0);
        gbc.writeMem(0x7a79, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2b04);
        EXPECT(gbc.pc(), 0x7a7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 00FC
        gbc.setState(0x4665, 0x9a4f, 0x52a0, 0x2657, 0xcd73, 0x8144, 0x0, 0x0);
        gbc.writeMem(0x4665, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9a4f);
        EXPECT(gbc.pc(), 0x4666);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 00FD
        gbc.setState(0xa962, 0x19c9, 0xbaa0, 0x6290, 0xab9d, 0x69ba, 0x0, 0x1);
        gbc.writeMem(0xa962, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x19c9);
        EXPECT(gbc.pc(), 0xa963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa962), 0x45);
        // 45 00FE
        gbc.setState(0xb018, 0xcdcb, 0xf1c0, 0xfd99, 0xdba8, 0x7b, 0x1, 0x1);
        gbc.writeMem(0xb018, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xcdcb);
        EXPECT(gbc.pc(), 0xb019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb018), 0x45);
        // 45 00FF
        gbc.setState(0xbd52, 0xaad3, 0xcbe0, 0xbd6b, 0x88c7, 0x4361, 0x0, 0x1);
        gbc.writeMem(0xbd52, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xaad3);
        EXPECT(gbc.pc(), 0xbd53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd52), 0x45);
        // 45 0101
        gbc.setState(0xe164, 0x7b88, 0xd970, 0x1952, 0x7dee, 0x95b7, 0x1, 0x1);
        gbc.writeMem(0xe164, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7b88);
        EXPECT(gbc.pc(), 0xe165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe164), 0x45);
        // 45 0102
        gbc.setState(0x3a94, 0xdf33, 0x8090, 0x7e60, 0x9e15, 0xd8d4, 0x0, 0x1);
        gbc.writeMem(0x3a94, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdf33);
        EXPECT(gbc.pc(), 0x3a95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0103
        gbc.setState(0xa1c1, 0x4b7b, 0x4980, 0x41fc, 0xc6cf, 0xd5c9, 0x1, 0x1);
        gbc.writeMem(0xa1c1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4b7b);
        EXPECT(gbc.pc(), 0xa1c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1c1), 0x45);
        // 45 0104
        gbc.setState(0x82e1, 0xc8ed, 0x9d80, 0x1e76, 0xb90a, 0xc66f, 0x1, 0x1);
        gbc.writeMem(0x82e1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc8ed);
        EXPECT(gbc.pc(), 0x82e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e1), 0x45);
        // 45 0105
        gbc.setState(0x731f, 0xf5b6, 0x1980, 0x84e8, 0xd2f1, 0xf6b9, 0x1, 0x1);
        gbc.writeMem(0x731f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf5b6);
        EXPECT(gbc.pc(), 0x7320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0106
        gbc.setState(0x11ff, 0x89fa, 0x4450, 0x5f12, 0x9456, 0xf5c7, 0x0, 0x0);
        gbc.writeMem(0x11ff, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x89fa);
        EXPECT(gbc.pc(), 0x1200);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0107
        gbc.setState(0x1886, 0xcab, 0xddf0, 0x690e, 0x8005, 0x895e, 0x1, 0x0);
        gbc.writeMem(0x1886, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xcab);
        EXPECT(gbc.pc(), 0x1887);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0108
        gbc.setState(0x18f, 0x13b5, 0x8700, 0xeb, 0x672a, 0xd620, 0x1, 0x1);
        gbc.writeMem(0x18f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x13b5);
        EXPECT(gbc.pc(), 0x190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0109
        gbc.setState(0xec03, 0x266d, 0xc340, 0xc9b6, 0x6b5e, 0x61de, 0x1, 0x1);
        gbc.writeMem(0xec03, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x266d);
        EXPECT(gbc.pc(), 0xec04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec03), 0x45);
        // 45 010A
        gbc.setState(0xa4a6, 0xd98e, 0xb110, 0x1556, 0x41c7, 0xb5f7, 0x0, 0x1);
        gbc.writeMem(0xa4a6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd98e);
        EXPECT(gbc.pc(), 0xa4a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4a6), 0x45);
        // 45 010C
        gbc.setState(0x8692, 0x4d19, 0x8120, 0x5b40, 0x2318, 0x6066, 0x0, 0x1);
        gbc.writeMem(0x8692, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4d19);
        EXPECT(gbc.pc(), 0x8693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8692), 0x45);
        // 45 010D
        gbc.setState(0xd91a, 0xf63c, 0xcfa0, 0x3b45, 0xe3de, 0xc9de, 0x0, 0x0);
        gbc.writeMem(0xd91a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xf63c);
        EXPECT(gbc.pc(), 0xd91b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd91a), 0x45);
        // 45 010E
        gbc.setState(0x600e, 0x1a24, 0x59a0, 0xf643, 0x54f5, 0xf321, 0x0, 0x0);
        gbc.writeMem(0x600e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1a24);
        EXPECT(gbc.pc(), 0x600f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 010F
        gbc.setState(0x4dd1, 0xa84f, 0x1ca0, 0xe442, 0x64b9, 0xf63c, 0x1, 0x0);
        gbc.writeMem(0x4dd1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa84f);
        EXPECT(gbc.pc(), 0x4dd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0110
        gbc.setState(0x51c2, 0x71c3, 0x9c0, 0xba4, 0xf1b6, 0xc845, 0x0, 0x1);
        gbc.writeMem(0x51c2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x71c3);
        EXPECT(gbc.pc(), 0x51c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0112
        gbc.setState(0xb24d, 0xb1a9, 0x6d70, 0x3b9a, 0x6162, 0x1767, 0x0, 0x0);
        gbc.writeMem(0xb24d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb1a9);
        EXPECT(gbc.pc(), 0xb24e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb24d), 0x45);
        // 45 0113
        gbc.setState(0x5a6b, 0xd692, 0xbf60, 0x8a66, 0xb019, 0xdfdd, 0x1, 0x1);
        gbc.writeMem(0x5a6b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd692);
        EXPECT(gbc.pc(), 0x5a6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0114
        gbc.setState(0x7a7a, 0xc068, 0x17c0, 0xdcc4, 0x7574, 0xca4d, 0x0, 0x1);
        gbc.writeMem(0x7a7a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc068);
        EXPECT(gbc.pc(), 0x7a7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0115
        gbc.setState(0x78a1, 0xdc19, 0xadb0, 0xcd42, 0xb0be, 0x5231, 0x0, 0x1);
        gbc.writeMem(0x78a1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdc19);
        EXPECT(gbc.pc(), 0x78a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0116
        gbc.setState(0x1fc4, 0xb8fc, 0xda80, 0xa599, 0x54e1, 0xd88, 0x1, 0x1);
        gbc.writeMem(0x1fc4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb8fc);
        EXPECT(gbc.pc(), 0x1fc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0117
        gbc.setState(0xb6a2, 0xaa6c, 0x3330, 0xeb, 0xb47b, 0x4c7d, 0x1, 0x0);
        gbc.writeMem(0xb6a2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xaa6c);
        EXPECT(gbc.pc(), 0xb6a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a2), 0x45);
        // 45 0118
        gbc.setState(0xd15, 0x3ae6, 0x5aa0, 0xaa8d, 0xe1d8, 0xbbe5, 0x0, 0x1);
        gbc.writeMem(0xd15, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3ae6);
        EXPECT(gbc.pc(), 0xd16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0119
        gbc.setState(0x82d5, 0x16f6, 0x9240, 0xfe3d, 0xe6fc, 0xa7d2, 0x1, 0x1);
        gbc.writeMem(0x82d5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x16f6);
        EXPECT(gbc.pc(), 0x82d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82d5), 0x45);
        // 45 011A
        gbc.setState(0x9e17, 0xccc3, 0x2220, 0x7894, 0x3110, 0x820b, 0x1, 0x1);
        gbc.writeMem(0x9e17, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xccc3);
        EXPECT(gbc.pc(), 0x9e18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e17), 0x45);
        // 45 011B
        gbc.setState(0x2a53, 0xf6a0, 0x35e0, 0xd198, 0xb5f4, 0xa43, 0x0, 0x1);
        gbc.writeMem(0x2a53, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf6a0);
        EXPECT(gbc.pc(), 0x2a54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 011D
        gbc.setState(0xc08d, 0xc9c6, 0xa3e0, 0x6f36, 0x28c0, 0xdd60, 0x1, 0x0);
        gbc.writeMem(0xc08d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc9c6);
        EXPECT(gbc.pc(), 0xc08e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc08d), 0x45);
        // 45 011E
        gbc.setState(0xe3ba, 0x7a33, 0xf630, 0x6461, 0xf651, 0xa581, 0x0, 0x0);
        gbc.writeMem(0xe3ba, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7a33);
        EXPECT(gbc.pc(), 0xe3bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ba), 0x45);
        // 45 011F
        gbc.setState(0x765b, 0xdbd9, 0x7cb0, 0x99, 0x299d, 0x36f4, 0x1, 0x1);
        gbc.writeMem(0x765b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xdbd9);
        EXPECT(gbc.pc(), 0x765c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0120
        gbc.setState(0xa39a, 0x84cb, 0xac10, 0xd93d, 0x5d5, 0xc385, 0x1, 0x0);
        gbc.writeMem(0xa39a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x84cb);
        EXPECT(gbc.pc(), 0xa39b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa39a), 0x45);
        // 45 0121
        gbc.setState(0x356d, 0x814c, 0xbb90, 0x4198, 0xb9de, 0x9b92, 0x0, 0x1);
        gbc.writeMem(0x356d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x814c);
        EXPECT(gbc.pc(), 0x356e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0122
        gbc.setState(0x51b6, 0xae34, 0x1930, 0x72e2, 0xefa7, 0x3cce, 0x0, 0x0);
        gbc.writeMem(0x51b6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xae34);
        EXPECT(gbc.pc(), 0x51b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0123
        gbc.setState(0x7d32, 0x978d, 0x5ed0, 0xe558, 0x82bc, 0x4219, 0x1, 0x0);
        gbc.writeMem(0x7d32, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x978d);
        EXPECT(gbc.pc(), 0x7d33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0124
        gbc.setState(0x71d9, 0x5bd9, 0x99a0, 0x1b20, 0xbde6, 0xd304, 0x1, 0x1);
        gbc.writeMem(0x71d9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5bd9);
        EXPECT(gbc.pc(), 0x71da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0125
        gbc.setState(0xefce, 0xd59f, 0xe860, 0xe7bb, 0xf8c8, 0xf9a8, 0x1, 0x1);
        gbc.writeMem(0xefce, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd59f);
        EXPECT(gbc.pc(), 0xefcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefce), 0x45);
        // 45 0126
        gbc.setState(0xbe91, 0x1a48, 0x89d0, 0x83f2, 0xc813, 0x82d0, 0x0, 0x0);
        gbc.writeMem(0xbe91, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1a48);
        EXPECT(gbc.pc(), 0xbe92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe91), 0x45);
        // 45 0127
        gbc.setState(0xba50, 0x103d, 0x1c90, 0x9a1, 0xcb09, 0x3472, 0x0, 0x1);
        gbc.writeMem(0xba50, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x103d);
        EXPECT(gbc.pc(), 0xba51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba50), 0x45);
        // 45 0128
        gbc.setState(0x3651, 0x6ace, 0xe570, 0x6b52, 0xa9bb, 0xfd68, 0x0, 0x0);
        gbc.writeMem(0x3651, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6ace);
        EXPECT(gbc.pc(), 0x3652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0129
        gbc.setState(0x13d6, 0x6226, 0x64f0, 0xd740, 0x5b69, 0xe156, 0x1, 0x0);
        gbc.writeMem(0x13d6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6226);
        EXPECT(gbc.pc(), 0x13d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 012A
        gbc.setState(0x47e9, 0x9f29, 0xce00, 0x16b4, 0x1f29, 0x9a86, 0x1, 0x1);
        gbc.writeMem(0x47e9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9f29);
        EXPECT(gbc.pc(), 0x47ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 012C
        gbc.setState(0xbbb0, 0x3078, 0x5a80, 0xdcda, 0x3008, 0x8d90, 0x1, 0x0);
        gbc.writeMem(0xbbb0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3078);
        EXPECT(gbc.pc(), 0xbbb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbb0), 0x45);
        // 45 012D
        gbc.setState(0x5196, 0x1303, 0x1fa0, 0x743, 0x31ba, 0xbbf3, 0x1, 0x1);
        gbc.writeMem(0x5196, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1303);
        EXPECT(gbc.pc(), 0x5197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 012E
        gbc.setState(0x521a, 0x66a8, 0xaf90, 0x2156, 0x9461, 0x68b0, 0x0, 0x1);
        gbc.writeMem(0x521a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x66a8);
        EXPECT(gbc.pc(), 0x521b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 012F
        gbc.setState(0xc5c9, 0xfc08, 0x6bb0, 0xc566, 0x8f66, 0x1964, 0x1, 0x0);
        gbc.writeMem(0xc5c9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xfc08);
        EXPECT(gbc.pc(), 0xc5ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5c9), 0x45);
        // 45 0130
        gbc.setState(0x19e4, 0x8304, 0x23c0, 0x722c, 0x58a5, 0x7689, 0x1, 0x1);
        gbc.writeMem(0x19e4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8304);
        EXPECT(gbc.pc(), 0x19e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0131
        gbc.setState(0xc164, 0x4065, 0xdb30, 0x452b, 0x9235, 0xa9de, 0x0, 0x1);
        gbc.writeMem(0xc164, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4065);
        EXPECT(gbc.pc(), 0xc165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc164), 0x45);
        // 45 0132
        gbc.setState(0x8beb, 0xb3ae, 0x2e40, 0x76fc, 0xd8fc, 0x11cf, 0x0, 0x0);
        gbc.writeMem(0x8beb, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb3ae);
        EXPECT(gbc.pc(), 0x8bec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8beb), 0x45);
        // 45 0133
        gbc.setState(0x1fd2, 0xd0e8, 0x7770, 0xf474, 0x39d8, 0x45a4, 0x1, 0x1);
        gbc.writeMem(0x1fd2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd0e8);
        EXPECT(gbc.pc(), 0x1fd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0134
        gbc.setState(0x93ca, 0xc275, 0x490, 0x250, 0x3414, 0x1bf0, 0x1, 0x1);
        gbc.writeMem(0x93ca, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc275);
        EXPECT(gbc.pc(), 0x93cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ca), 0x45);
        // 45 0135
        gbc.setState(0xf4c, 0x47fe, 0x3cc0, 0x7eb1, 0x6b26, 0x6842, 0x1, 0x0);
        gbc.writeMem(0xf4c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x47fe);
        EXPECT(gbc.pc(), 0xf4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0136
        gbc.setState(0x5400, 0xf680, 0x7fc0, 0x957c, 0x406c, 0x79b3, 0x0, 0x0);
        gbc.writeMem(0x5400, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf680);
        EXPECT(gbc.pc(), 0x5401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0137
        gbc.setState(0xc8e9, 0x9abd, 0x1350, 0xb3d6, 0xcc80, 0x1c41, 0x0, 0x1);
        gbc.writeMem(0xc8e9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9abd);
        EXPECT(gbc.pc(), 0xc8ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8e9), 0x45);
        // 45 0138
        gbc.setState(0xa8e8, 0xcfb4, 0xc300, 0x86f6, 0x204a, 0x9f5c, 0x1, 0x0);
        gbc.writeMem(0xa8e8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xcfb4);
        EXPECT(gbc.pc(), 0xa8e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8e8), 0x45);
        // 45 0139
        gbc.setState(0x771e, 0xc0af, 0xd460, 0xc8d8, 0x6218, 0xa5a5, 0x1, 0x0);
        gbc.writeMem(0x771e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc0af);
        EXPECT(gbc.pc(), 0x771f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 013A
        gbc.setState(0x6044, 0xf71, 0x41d0, 0xbd9f, 0x51e, 0xeeea, 0x1, 0x0);
        gbc.writeMem(0x6044, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf71);
        EXPECT(gbc.pc(), 0x6045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 013B
        gbc.setState(0x8bbf, 0x4624, 0x2810, 0x690c, 0x6d50, 0xd1d1, 0x1, 0x0);
        gbc.writeMem(0x8bbf, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4624);
        EXPECT(gbc.pc(), 0x8bc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bbf), 0x45);
        // 45 013D
        gbc.setState(0x8d5b, 0x1488, 0x6b30, 0xbf82, 0x56c4, 0x23c5, 0x0, 0x0);
        gbc.writeMem(0x8d5b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1488);
        EXPECT(gbc.pc(), 0x8d5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d5b), 0x45);
        // 45 013E
        gbc.setState(0x56ad, 0xc5ce, 0x3c50, 0x387, 0x6695, 0xff24, 0x0, 0x1);
        gbc.writeMem(0x56ad, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc5ce);
        EXPECT(gbc.pc(), 0x56ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 013F
        gbc.setState(0x52fe, 0x94ec, 0x5170, 0x181, 0x854d, 0x5d72, 0x1, 0x1);
        gbc.writeMem(0x52fe, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x94ec);
        EXPECT(gbc.pc(), 0x52ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0140
        gbc.setState(0x91a1, 0x1246, 0x3360, 0x3b09, 0x62b8, 0x6afb, 0x1, 0x0);
        gbc.writeMem(0x91a1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1246);
        EXPECT(gbc.pc(), 0x91a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91a1), 0x45);
        // 45 0141
        gbc.setState(0x22cf, 0x6c2c, 0x5960, 0xd905, 0x5f64, 0xa3a0, 0x0, 0x0);
        gbc.writeMem(0x22cf, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6c2c);
        EXPECT(gbc.pc(), 0x22d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0142
        gbc.setState(0xb559, 0x15c, 0xb3b0, 0xc2be, 0xcc45, 0xd475, 0x1, 0x0);
        gbc.writeMem(0xb559, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x15c);
        EXPECT(gbc.pc(), 0xb55a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb559), 0x45);
        // 45 0143
        gbc.setState(0x7d33, 0xc2d2, 0xdfa0, 0x6ad7, 0x9874, 0xcf08, 0x1, 0x0);
        gbc.writeMem(0x7d33, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc2d2);
        EXPECT(gbc.pc(), 0x7d34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0144
        gbc.setState(0xe121, 0x392e, 0x5ae0, 0x4406, 0x8b84, 0x6e42, 0x1, 0x0);
        gbc.writeMem(0xe121, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x392e);
        EXPECT(gbc.pc(), 0xe122);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe121), 0x45);
        // 45 0145
        gbc.setState(0xef2e, 0xd9f3, 0x9990, 0x33dc, 0x5d37, 0x7905, 0x0, 0x0);
        gbc.writeMem(0xef2e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd9f3);
        EXPECT(gbc.pc(), 0xef2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef2e), 0x45);
        // 45 0146
        gbc.setState(0x1dce, 0xc5e7, 0xbfc0, 0x8f3b, 0x467d, 0x6b10, 0x0, 0x1);
        gbc.writeMem(0x1dce, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc5e7);
        EXPECT(gbc.pc(), 0x1dcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0147
        gbc.setState(0xd13d, 0xa28e, 0x76c0, 0x121e, 0x6c10, 0xb15b, 0x1, 0x0);
        gbc.writeMem(0xd13d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa28e);
        EXPECT(gbc.pc(), 0xd13e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd13d), 0x45);
        // 45 0148
        gbc.setState(0x1f11, 0xd3b5, 0xac00, 0x71f0, 0xf047, 0x7fa1, 0x0, 0x1);
        gbc.writeMem(0x1f11, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd3b5);
        EXPECT(gbc.pc(), 0x1f12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0149
        gbc.setState(0x846a, 0x195b, 0x7950, 0xc9c4, 0xda75, 0xc704, 0x0, 0x1);
        gbc.writeMem(0x846a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x195b);
        EXPECT(gbc.pc(), 0x846b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x846a), 0x45);
        // 45 014A
        gbc.setState(0xd76a, 0x89d8, 0xc4c0, 0xb98d, 0x52a1, 0x819a, 0x1, 0x0);
        gbc.writeMem(0xd76a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x89d8);
        EXPECT(gbc.pc(), 0xd76b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd76a), 0x45);
        // 45 014B
        gbc.setState(0xec71, 0xe060, 0xe020, 0x4f7a, 0xbe47, 0xb940, 0x1, 0x0);
        gbc.writeMem(0xec71, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe060);
        EXPECT(gbc.pc(), 0xec72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec71), 0x45);
        // 45 014C
        gbc.setState(0xd9ec, 0xa67d, 0xf50, 0x9fee, 0xb04b, 0x4025, 0x0, 0x0);
        gbc.writeMem(0xd9ec, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa67d);
        EXPECT(gbc.pc(), 0xd9ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9ec), 0x45);
        // 45 014D
        gbc.setState(0x78ae, 0x1c75, 0xdd60, 0x51c2, 0x92da, 0xd3dd, 0x0, 0x1);
        gbc.writeMem(0x78ae, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1c75);
        EXPECT(gbc.pc(), 0x78af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 014E
        gbc.setState(0x7624, 0x7d82, 0xa0f0, 0xd4dc, 0xb5a2, 0x4b82, 0x0, 0x0);
        gbc.writeMem(0x7624, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7d82);
        EXPECT(gbc.pc(), 0x7625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 014F
        gbc.setState(0x5ed0, 0x707d, 0x7fd0, 0x6aa0, 0x5a7e, 0x3ec, 0x1, 0x0);
        gbc.writeMem(0x5ed0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x707d);
        EXPECT(gbc.pc(), 0x5ed1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0150
        gbc.setState(0xd6eb, 0x9112, 0xab10, 0x3633, 0xac3f, 0x1656, 0x1, 0x1);
        gbc.writeMem(0xd6eb, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9112);
        EXPECT(gbc.pc(), 0xd6ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6eb), 0x45);
        // 45 0151
        gbc.setState(0x3bd0, 0x9de8, 0x6580, 0xc403, 0x9333, 0x40d4, 0x1, 0x1);
        gbc.writeMem(0x3bd0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9de8);
        EXPECT(gbc.pc(), 0x3bd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0152
        gbc.setState(0xbfd3, 0xd91, 0xfb50, 0x44db, 0xbb12, 0x9ee2, 0x0, 0x0);
        gbc.writeMem(0xbfd3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd91);
        EXPECT(gbc.pc(), 0xbfd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfd3), 0x45);
        // 45 0153
        gbc.setState(0x6476, 0xee08, 0x1b80, 0xa6b1, 0xc3e0, 0x56ac, 0x0, 0x0);
        gbc.writeMem(0x6476, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xee08);
        EXPECT(gbc.pc(), 0x6477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0154
        gbc.setState(0x48ba, 0x2c4d, 0x8680, 0xaefe, 0x5318, 0x67c1, 0x1, 0x0);
        gbc.writeMem(0x48ba, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2c4d);
        EXPECT(gbc.pc(), 0x48bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0155
        gbc.setState(0xe59b, 0x69ca, 0x6f80, 0xe5f4, 0xa407, 0xebb0, 0x1, 0x1);
        gbc.writeMem(0xe59b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x69ca);
        EXPECT(gbc.pc(), 0xe59c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe59b), 0x45);
        // 45 0156
        gbc.setState(0xbf47, 0xbad4, 0x1570, 0x32e, 0xe1d0, 0xf4ab, 0x0, 0x0);
        gbc.writeMem(0xbf47, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xbad4);
        EXPECT(gbc.pc(), 0xbf48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf47), 0x45);
        // 45 0157
        gbc.setState(0xa002, 0x59c3, 0xf980, 0x4c56, 0x72e4, 0x954, 0x0, 0x0);
        gbc.writeMem(0xa002, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x59c3);
        EXPECT(gbc.pc(), 0xa003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa002), 0x45);
        // 45 0158
        gbc.setState(0xcac4, 0xa4cd, 0x5df0, 0x355f, 0x86d3, 0x2233, 0x1, 0x1);
        gbc.writeMem(0xcac4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa4cd);
        EXPECT(gbc.pc(), 0xcac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac4), 0x45);
        // 45 0159
        gbc.setState(0x27e2, 0xde68, 0x3080, 0x99b8, 0xe3c3, 0xd300, 0x1, 0x0);
        gbc.writeMem(0x27e2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xde68);
        EXPECT(gbc.pc(), 0x27e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 015B
        gbc.setState(0x11f7, 0x2687, 0x9d90, 0xb2cc, 0x5ec4, 0x8022, 0x1, 0x1);
        gbc.writeMem(0x11f7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2687);
        EXPECT(gbc.pc(), 0x11f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 015C
        gbc.setState(0x5c8f, 0xf016, 0x2840, 0xb076, 0x564e, 0x948b, 0x0, 0x0);
        gbc.writeMem(0x5c8f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xf016);
        EXPECT(gbc.pc(), 0x5c90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 015D
        gbc.setState(0xef9, 0xe8bc, 0x7860, 0xc26b, 0x8c3c, 0x27f5, 0x1, 0x0);
        gbc.writeMem(0xef9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe8bc);
        EXPECT(gbc.pc(), 0xefa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 015E
        gbc.setState(0x890f, 0xf916, 0xdac0, 0x5a21, 0x1fac, 0xf494, 0x1, 0x0);
        gbc.writeMem(0x890f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf916);
        EXPECT(gbc.pc(), 0x8910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x890f), 0x45);
        // 45 015F
        gbc.setState(0x184e, 0x278c, 0x5920, 0xaa09, 0xba4c, 0x4574, 0x1, 0x0);
        gbc.writeMem(0x184e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x278c);
        EXPECT(gbc.pc(), 0x184f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0160
        gbc.setState(0xa6df, 0x5fe9, 0xc780, 0xe022, 0xeac9, 0xc5ae, 0x0, 0x0);
        gbc.writeMem(0xa6df, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5fe9);
        EXPECT(gbc.pc(), 0xa6e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6df), 0x45);
        // 45 0161
        gbc.setState(0xc4d7, 0xefea, 0xc580, 0x7e56, 0xdb96, 0xa6e, 0x1, 0x0);
        gbc.writeMem(0xc4d7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xefea);
        EXPECT(gbc.pc(), 0xc4d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4d7), 0x45);
        // 45 0162
        gbc.setState(0x18f1, 0xbd13, 0xf9a0, 0x76dc, 0xb51d, 0x5ac3, 0x0, 0x0);
        gbc.writeMem(0x18f1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xbd13);
        EXPECT(gbc.pc(), 0x18f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0163
        gbc.setState(0x41bd, 0x2430, 0x5520, 0xb071, 0xaa86, 0xc8ac, 0x1, 0x0);
        gbc.writeMem(0x41bd, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2430);
        EXPECT(gbc.pc(), 0x41be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0164
        gbc.setState(0x572d, 0x1084, 0x1840, 0xbb92, 0x2914, 0xa5b0, 0x1, 0x0);
        gbc.writeMem(0x572d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1084);
        EXPECT(gbc.pc(), 0x572e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0165
        gbc.setState(0x36e7, 0x1aed, 0xba0, 0x360f, 0xb44, 0x8f39, 0x1, 0x1);
        gbc.writeMem(0x36e7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1aed);
        EXPECT(gbc.pc(), 0x36e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0166
        gbc.setState(0x350, 0x267, 0xb270, 0x5b15, 0x32a3, 0x757d, 0x1, 0x1);
        gbc.writeMem(0x350, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x267);
        EXPECT(gbc.pc(), 0x351);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0167
        gbc.setState(0x28df, 0xe892, 0xb820, 0x6492, 0x1028, 0xacd, 0x0, 0x0);
        gbc.writeMem(0x28df, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe892);
        EXPECT(gbc.pc(), 0x28e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0168
        gbc.setState(0x4bd9, 0x8e01, 0x5790, 0xb05, 0x286d, 0x6b16, 0x0, 0x1);
        gbc.writeMem(0x4bd9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8e01);
        EXPECT(gbc.pc(), 0x4bda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0169
        gbc.setState(0x3c2a, 0x6ee2, 0xe820, 0xddb3, 0x3bf7, 0x2f9a, 0x0, 0x0);
        gbc.writeMem(0x3c2a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6ee2);
        EXPECT(gbc.pc(), 0x3c2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 016A
        gbc.setState(0x2d04, 0xdee6, 0x6af0, 0x8002, 0x8fa8, 0xbdf9, 0x0, 0x0);
        gbc.writeMem(0x2d04, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xdee6);
        EXPECT(gbc.pc(), 0x2d05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 016B
        gbc.setState(0xe0d9, 0x5407, 0x1db0, 0xa2ae, 0x7796, 0xcb9e, 0x0, 0x0);
        gbc.writeMem(0xe0d9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5407);
        EXPECT(gbc.pc(), 0xe0da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0d9), 0x45);
        // 45 016C
        gbc.setState(0x7774, 0x26bb, 0xaef0, 0x6e81, 0xf47f, 0x391f, 0x0, 0x0);
        gbc.writeMem(0x7774, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x26bb);
        EXPECT(gbc.pc(), 0x7775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 016D
        gbc.setState(0xd569, 0xfb8, 0x6330, 0x16f5, 0x5460, 0xd679, 0x1, 0x0);
        gbc.writeMem(0xd569, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xfb8);
        EXPECT(gbc.pc(), 0xd56a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd569), 0x45);
        // 45 016E
        gbc.setState(0xeb82, 0x2582, 0xe860, 0x1332, 0x863, 0x4eaa, 0x1, 0x0);
        gbc.writeMem(0xeb82, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2582);
        EXPECT(gbc.pc(), 0xeb83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb82), 0x45);
        // 45 016F
        gbc.setState(0xdebd, 0x19fa, 0xa4b0, 0xa872, 0x5e62, 0x4add, 0x0, 0x1);
        gbc.writeMem(0xdebd, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x19fa);
        EXPECT(gbc.pc(), 0xdebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdebd), 0x45);
        // 45 0170
        gbc.setState(0x492, 0x502b, 0x8540, 0x2fa3, 0xaaa2, 0xc057, 0x0, 0x0);
        gbc.writeMem(0x492, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x502b);
        EXPECT(gbc.pc(), 0x493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0172
        gbc.setState(0xe1ac, 0x4071, 0xaa40, 0x2b6f, 0x432d, 0xf061, 0x0, 0x0);
        gbc.writeMem(0xe1ac, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4071);
        EXPECT(gbc.pc(), 0xe1ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1ac), 0x45);
        // 45 0173
        gbc.setState(0x6ed9, 0x6575, 0xcd0, 0x1e6, 0x305, 0x8b7e, 0x1, 0x0);
        gbc.writeMem(0x6ed9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6575);
        EXPECT(gbc.pc(), 0x6eda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0174
        gbc.setState(0x36e6, 0x44bc, 0xedf0, 0x8d78, 0x6b6a, 0x71c6, 0x0, 0x1);
        gbc.writeMem(0x36e6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x44bc);
        EXPECT(gbc.pc(), 0x36e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0175
        gbc.setState(0x3309, 0xfa3c, 0x2320, 0xbdb7, 0x8cb9, 0xb5a3, 0x1, 0x1);
        gbc.writeMem(0x3309, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfa3c);
        EXPECT(gbc.pc(), 0x330a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0176
        gbc.setState(0x511f, 0x21ed, 0x48c0, 0x5347, 0x3dba, 0x91f4, 0x0, 0x0);
        gbc.writeMem(0x511f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x21ed);
        EXPECT(gbc.pc(), 0x5120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0177
        gbc.setState(0xccd9, 0xc8b7, 0x300, 0x43ad, 0x4f47, 0x632d, 0x1, 0x1);
        gbc.writeMem(0xccd9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc8b7);
        EXPECT(gbc.pc(), 0xccda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd9), 0x45);
        // 45 0179
        gbc.setState(0x6453, 0x3ebe, 0x3af0, 0xed76, 0xd289, 0xad0c, 0x0, 0x0);
        gbc.writeMem(0x6453, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3ebe);
        EXPECT(gbc.pc(), 0x6454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 017A
        gbc.setState(0x3e91, 0x2e64, 0x7a70, 0x73f0, 0x7623, 0xfa88, 0x1, 0x1);
        gbc.writeMem(0x3e91, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2e64);
        EXPECT(gbc.pc(), 0x3e92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 017B
        gbc.setState(0xcc43, 0x7ce7, 0xe730, 0x3519, 0x2c0b, 0xadc7, 0x1, 0x1);
        gbc.writeMem(0xcc43, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7ce7);
        EXPECT(gbc.pc(), 0xcc44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc43), 0x45);
        // 45 017C
        gbc.setState(0x9ce9, 0x979c, 0x8a60, 0xe87f, 0x70e, 0x4c38, 0x1, 0x1);
        gbc.writeMem(0x9ce9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x979c);
        EXPECT(gbc.pc(), 0x9cea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ce9), 0x45);
        // 45 017D
        gbc.setState(0xaec, 0x7607, 0xc330, 0x339d, 0xd340, 0x6208, 0x1, 0x1);
        gbc.writeMem(0xaec, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7607);
        EXPECT(gbc.pc(), 0xaed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 017E
        gbc.setState(0x1862, 0xd18d, 0xc630, 0x44b9, 0xcfbc, 0x11a6, 0x0, 0x0);
        gbc.writeMem(0x1862, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd18d);
        EXPECT(gbc.pc(), 0x1863);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 017F
        gbc.setState(0x815b, 0x672e, 0xd5d0, 0xa049, 0xd934, 0xd405, 0x0, 0x0);
        gbc.writeMem(0x815b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x672e);
        EXPECT(gbc.pc(), 0x815c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x815b), 0x45);
        // 45 0180
        gbc.setState(0x4176, 0x7fb4, 0x65e0, 0x2af5, 0x2d04, 0x4e96, 0x1, 0x1);
        gbc.writeMem(0x4176, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7fb4);
        EXPECT(gbc.pc(), 0x4177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0181
        gbc.setState(0x41f6, 0x359c, 0xe600, 0xc366, 0x7e4a, 0x8016, 0x0, 0x0);
        gbc.writeMem(0x41f6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x359c);
        EXPECT(gbc.pc(), 0x41f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0183
        gbc.setState(0xc72d, 0xdc57, 0x7c90, 0x6fb5, 0x43be, 0x9b05, 0x1, 0x0);
        gbc.writeMem(0xc72d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xdc57);
        EXPECT(gbc.pc(), 0xc72e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc72d), 0x45);
        // 45 0184
        gbc.setState(0x399a, 0x62a8, 0x4a10, 0xb51e, 0x67b5, 0xdd76, 0x1, 0x1);
        gbc.writeMem(0x399a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x62a8);
        EXPECT(gbc.pc(), 0x399b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0185
        gbc.setState(0x6910, 0xde01, 0x3cd0, 0xedf3, 0xeffc, 0xe828, 0x1, 0x0);
        gbc.writeMem(0x6910, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xde01);
        EXPECT(gbc.pc(), 0x6911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0186
        gbc.setState(0x66a3, 0xe7ba, 0xad70, 0xd72, 0xddde, 0x12ac, 0x0, 0x0);
        gbc.writeMem(0x66a3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe7ba);
        EXPECT(gbc.pc(), 0x66a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0187
        gbc.setState(0x232c, 0x852a, 0x5540, 0x95a4, 0xd6db, 0xdd8e, 0x1, 0x0);
        gbc.writeMem(0x232c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x852a);
        EXPECT(gbc.pc(), 0x232d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0188
        gbc.setState(0x118e, 0x1e48, 0xbf50, 0x2083, 0x7f5e, 0x8712, 0x0, 0x1);
        gbc.writeMem(0x118e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1e48);
        EXPECT(gbc.pc(), 0x118f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0189
        gbc.setState(0xd69f, 0x5ab4, 0xfb90, 0xec81, 0xece7, 0x71cf, 0x1, 0x0);
        gbc.writeMem(0xd69f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5ab4);
        EXPECT(gbc.pc(), 0xd6a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd69f), 0x45);
        // 45 018A
        gbc.setState(0x3644, 0x69eb, 0xf6a0, 0xa191, 0x7b0, 0x3a50, 0x1, 0x0);
        gbc.writeMem(0x3644, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x69eb);
        EXPECT(gbc.pc(), 0x3645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 018B
        gbc.setState(0x3e87, 0x339e, 0x9a10, 0xdb22, 0xfbfe, 0xe6d7, 0x0, 0x1);
        gbc.writeMem(0x3e87, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x339e);
        EXPECT(gbc.pc(), 0x3e88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 018C
        gbc.setState(0x4c22, 0x6f8d, 0x910, 0xc720, 0x6dc6, 0x875c, 0x1, 0x1);
        gbc.writeMem(0x4c22, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6f8d);
        EXPECT(gbc.pc(), 0x4c23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 018D
        gbc.setState(0x1368, 0xb850, 0xfd10, 0xc930, 0x3b88, 0xd9c, 0x0, 0x1);
        gbc.writeMem(0x1368, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb850);
        EXPECT(gbc.pc(), 0x1369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 018E
        gbc.setState(0x2bee, 0xc43e, 0x1c00, 0xb601, 0x6c44, 0xab03, 0x1, 0x1);
        gbc.writeMem(0x2bee, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xc43e);
        EXPECT(gbc.pc(), 0x2bef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0190
        gbc.setState(0x93c2, 0x5255, 0x73a0, 0xa8a7, 0x1dfb, 0xb12e, 0x1, 0x1);
        gbc.writeMem(0x93c2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5255);
        EXPECT(gbc.pc(), 0x93c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93c2), 0x45);
        // 45 0191
        gbc.setState(0x18fa, 0xc3d5, 0x5dc0, 0x430f, 0xc456, 0x18b3, 0x1, 0x1);
        gbc.writeMem(0x18fa, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc3d5);
        EXPECT(gbc.pc(), 0x18fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0192
        gbc.setState(0xca63, 0x31d5, 0x10, 0xba1a, 0x166c, 0xc3c7, 0x1, 0x0);
        gbc.writeMem(0xca63, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x31d5);
        EXPECT(gbc.pc(), 0xca64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca63), 0x45);
        // 45 0193
        gbc.setState(0xc700, 0x3093, 0xff50, 0x3ec1, 0x7da3, 0x9209, 0x1, 0x1);
        gbc.writeMem(0xc700, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3093);
        EXPECT(gbc.pc(), 0xc701);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc700), 0x45);
        // 45 0194
        gbc.setState(0x1fdc, 0x4a0a, 0xbf50, 0xb186, 0x6b17, 0xdea3, 0x1, 0x0);
        gbc.writeMem(0x1fdc, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4a0a);
        EXPECT(gbc.pc(), 0x1fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0195
        gbc.setState(0x84db, 0xf1ca, 0xd0e0, 0x6a73, 0xc517, 0x5acd, 0x1, 0x1);
        gbc.writeMem(0x84db, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf1ca);
        EXPECT(gbc.pc(), 0x84dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84db), 0x45);
        // 45 0196
        gbc.setState(0x9c41, 0x175e, 0x6a10, 0xca94, 0x4a0c, 0x3f00, 0x0, 0x0);
        gbc.writeMem(0x9c41, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x175e);
        EXPECT(gbc.pc(), 0x9c42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c41), 0x45);
        // 45 0197
        gbc.setState(0x92e3, 0xce60, 0x87a0, 0xcb, 0x5db1, 0x8b8b, 0x0, 0x0);
        gbc.writeMem(0x92e3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xce60);
        EXPECT(gbc.pc(), 0x92e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e3), 0x45);
        // 45 0198
        gbc.setState(0x71a8, 0xe0b7, 0xf4e0, 0x8fed, 0xbbd, 0x4976, 0x0, 0x0);
        gbc.writeMem(0x71a8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe0b7);
        EXPECT(gbc.pc(), 0x71a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0199
        gbc.setState(0xeb13, 0x1950, 0x5650, 0xa239, 0xfc3b, 0xd2d5, 0x0, 0x1);
        gbc.writeMem(0xeb13, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1950);
        EXPECT(gbc.pc(), 0xeb14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb13), 0x45);
        // 45 019A
        gbc.setState(0xae5c, 0x5bd4, 0xb680, 0x6d18, 0x3dfb, 0x265d, 0x1, 0x0);
        gbc.writeMem(0xae5c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5bd4);
        EXPECT(gbc.pc(), 0xae5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae5c), 0x45);
        // 45 019B
        gbc.setState(0x8a8f, 0xe1a3, 0x5de0, 0xe47e, 0x3594, 0xdbc9, 0x1, 0x1);
        gbc.writeMem(0x8a8f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe1a3);
        EXPECT(gbc.pc(), 0x8a90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a8f), 0x45);
        // 45 019C
        gbc.setState(0x3c27, 0xd41a, 0x55d0, 0x35c8, 0xedba, 0xe21b, 0x0, 0x0);
        gbc.writeMem(0x3c27, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xd41a);
        EXPECT(gbc.pc(), 0x3c28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 019D
        gbc.setState(0x2495, 0xcb69, 0xf40, 0xdd0a, 0xd954, 0xbb25, 0x0, 0x1);
        gbc.writeMem(0x2495, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xcb69);
        EXPECT(gbc.pc(), 0x2496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 019E
        gbc.setState(0xdf74, 0xe7a4, 0x37e0, 0xfa58, 0x479d, 0xa329, 0x1, 0x1);
        gbc.writeMem(0xdf74, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe7a4);
        EXPECT(gbc.pc(), 0xdf75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf74), 0x45);
        // 45 019F
        gbc.setState(0x2380, 0x5636, 0x7e70, 0x71c9, 0x1df6, 0x2f0d, 0x0, 0x1);
        gbc.writeMem(0x2380, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5636);
        EXPECT(gbc.pc(), 0x2381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 01A0
        gbc.setState(0x2d86, 0x8c2f, 0xa590, 0x167a, 0xb685, 0x4e4d, 0x1, 0x0);
        gbc.writeMem(0x2d86, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8c2f);
        EXPECT(gbc.pc(), 0x2d87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01A1
        gbc.setState(0x935d, 0x885e, 0x3340, 0x68c3, 0x91ab, 0x6922, 0x1, 0x0);
        gbc.writeMem(0x935d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x885e);
        EXPECT(gbc.pc(), 0x935e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x935d), 0x45);
        // 45 01A2
        gbc.setState(0xc39c, 0x3011, 0xfaf0, 0x66f8, 0x1597, 0x9000, 0x0, 0x0);
        gbc.writeMem(0xc39c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3011);
        EXPECT(gbc.pc(), 0xc39d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc39c), 0x45);
        // 45 01A3
        gbc.setState(0xd27a, 0x5ae8, 0xaef0, 0xe3c2, 0xf7e9, 0xdc07, 0x1, 0x1);
        gbc.writeMem(0xd27a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5ae8);
        EXPECT(gbc.pc(), 0xd27b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd27a), 0x45);
        // 45 01A4
        gbc.setState(0x206f, 0xac27, 0xfed0, 0x3160, 0xa21, 0x18fa, 0x1, 0x0);
        gbc.writeMem(0x206f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xac27);
        EXPECT(gbc.pc(), 0x2070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01A5
        gbc.setState(0x66d0, 0x3dbd, 0x56c0, 0x4053, 0x1b44, 0xc986, 0x0, 0x0);
        gbc.writeMem(0x66d0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3dbd);
        EXPECT(gbc.pc(), 0x66d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 01A6
        gbc.setState(0x5f55, 0x74a8, 0xfa40, 0x6877, 0x7a29, 0x543b, 0x1, 0x1);
        gbc.writeMem(0x5f55, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x74a8);
        EXPECT(gbc.pc(), 0x5f56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 01A7
        gbc.setState(0xb72f, 0x74cd, 0x870, 0xa326, 0x3260, 0x8659, 0x0, 0x1);
        gbc.writeMem(0xb72f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x74cd);
        EXPECT(gbc.pc(), 0xb730);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb72f), 0x45);
        // 45 01A8
        gbc.setState(0x722a, 0x4b26, 0x32a0, 0x9e75, 0x2eb6, 0x6c95, 0x1, 0x0);
        gbc.writeMem(0x722a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4b26);
        EXPECT(gbc.pc(), 0x722b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 01A9
        gbc.setState(0xa372, 0x1c7f, 0x46a0, 0x4d4e, 0x30ab, 0x22f4, 0x0, 0x0);
        gbc.writeMem(0xa372, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1c7f);
        EXPECT(gbc.pc(), 0xa373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa372), 0x45);
        // 45 01AA
        gbc.setState(0x2e9e, 0x2d20, 0xf190, 0x14a4, 0xcda, 0x7252, 0x1, 0x1);
        gbc.writeMem(0x2e9e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2d20);
        EXPECT(gbc.pc(), 0x2e9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01AC
        gbc.setState(0x4cb7, 0xe590, 0x3b50, 0x252e, 0x323c, 0x4930, 0x0, 0x1);
        gbc.writeMem(0x4cb7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe590);
        EXPECT(gbc.pc(), 0x4cb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01AD
        gbc.setState(0x6e12, 0xf15a, 0x5670, 0x51f8, 0xe7ed, 0xa1b7, 0x0, 0x0);
        gbc.writeMem(0x6e12, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf15a);
        EXPECT(gbc.pc(), 0x6e13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 01AE
        gbc.setState(0x8bb6, 0x168a, 0x1bf0, 0xb668, 0xb462, 0x79e2, 0x1, 0x0);
        gbc.writeMem(0x8bb6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x168a);
        EXPECT(gbc.pc(), 0x8bb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bb6), 0x45);
        // 45 01AF
        gbc.setState(0x2284, 0x43a1, 0x6420, 0xdbfd, 0x62ae, 0xf515, 0x0, 0x1);
        gbc.writeMem(0x2284, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x43a1);
        EXPECT(gbc.pc(), 0x2285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 01B0
        gbc.setState(0x6cf6, 0x9db7, 0xa050, 0x3867, 0xe102, 0x21f9, 0x1, 0x0);
        gbc.writeMem(0x6cf6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9db7);
        EXPECT(gbc.pc(), 0x6cf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01B1
        gbc.setState(0x6cad, 0xb214, 0x7b0, 0xda74, 0xd429, 0xae3d, 0x0, 0x0);
        gbc.writeMem(0x6cad, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb214);
        EXPECT(gbc.pc(), 0x6cae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 01B2
        gbc.setState(0xe6c, 0x20ec, 0xf510, 0xe52c, 0x3cd1, 0xaef4, 0x0, 0x0);
        gbc.writeMem(0xe6c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x20ec);
        EXPECT(gbc.pc(), 0xe6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01B3
        gbc.setState(0x4274, 0xdfe0, 0x9500, 0xd5fb, 0xc2a7, 0x4531, 0x1, 0x1);
        gbc.writeMem(0x4274, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdfe0);
        EXPECT(gbc.pc(), 0x4275);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 01B4
        gbc.setState(0x366f, 0xc698, 0xc520, 0x98dc, 0x5fb4, 0xd449, 0x0, 0x0);
        gbc.writeMem(0x366f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc698);
        EXPECT(gbc.pc(), 0x3670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 01B5
        gbc.setState(0x460e, 0x5677, 0x5470, 0x4485, 0xb53d, 0x8d4f, 0x0, 0x0);
        gbc.writeMem(0x460e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5677);
        EXPECT(gbc.pc(), 0x460f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 01B6
        gbc.setState(0x585c, 0x1a0c, 0x50, 0x1b59, 0x1002, 0x4985, 0x0, 0x1);
        gbc.writeMem(0x585c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1a0c);
        EXPECT(gbc.pc(), 0x585d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01B7
        gbc.setState(0x8bc3, 0x2a7b, 0x3ac0, 0xb152, 0x81c6, 0xda28, 0x0, 0x1);
        gbc.writeMem(0x8bc3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2a7b);
        EXPECT(gbc.pc(), 0x8bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc3), 0x45);
        // 45 01B8
        gbc.setState(0x83ec, 0x92e5, 0x3f90, 0xd691, 0x816e, 0xa750, 0x0, 0x0);
        gbc.writeMem(0x83ec, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x92e5);
        EXPECT(gbc.pc(), 0x83ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ec), 0x45);
        // 45 01B9
        gbc.setState(0xd750, 0x7353, 0x3650, 0x9a40, 0xd93b, 0x2534, 0x1, 0x0);
        gbc.writeMem(0xd750, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7353);
        EXPECT(gbc.pc(), 0xd751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd750), 0x45);
        // 45 01BA
        gbc.setState(0x15a1, 0xe984, 0x5000, 0x5087, 0x5864, 0xeabe, 0x0, 0x0);
        gbc.writeMem(0x15a1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe984);
        EXPECT(gbc.pc(), 0x15a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 01BB
        gbc.setState(0xbae3, 0x98ef, 0x7f90, 0xca92, 0x2a3f, 0x58ad, 0x1, 0x1);
        gbc.writeMem(0xbae3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x98ef);
        EXPECT(gbc.pc(), 0xbae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbae3), 0x45);
        // 45 01BC
        gbc.setState(0x1c64, 0x93be, 0x93a0, 0xcc71, 0xb1a2, 0x23bb, 0x1, 0x1);
        gbc.writeMem(0x1c64, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x93be);
        EXPECT(gbc.pc(), 0x1c65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 01BD
        gbc.setState(0x2e4d, 0x61f3, 0x6cf0, 0xa305, 0x4d9e, 0xdd11, 0x1, 0x0);
        gbc.writeMem(0x2e4d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x61f3);
        EXPECT(gbc.pc(), 0x2e4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 01BF
        gbc.setState(0xe0f1, 0x1dc0, 0xae00, 0x2674, 0xad5b, 0xd47a, 0x1, 0x0);
        gbc.writeMem(0xe0f1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1dc0);
        EXPECT(gbc.pc(), 0xe0f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0f1), 0x45);
        // 45 01C0
        gbc.setState(0x2cd7, 0x826a, 0x3230, 0x74f4, 0x7c92, 0x61df, 0x1, 0x1);
        gbc.writeMem(0x2cd7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x826a);
        EXPECT(gbc.pc(), 0x2cd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 01C1
        gbc.setState(0xd706, 0xc0e5, 0xb710, 0x8003, 0x4c0d, 0x6e2b, 0x1, 0x0);
        gbc.writeMem(0xd706, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc0e5);
        EXPECT(gbc.pc(), 0xd707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd706), 0x45);
        // 45 01C2
        gbc.setState(0x40b0, 0xab17, 0xea60, 0x4fcc, 0x1e8b, 0xb8d0, 0x1, 0x0);
        gbc.writeMem(0x40b0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xab17);
        EXPECT(gbc.pc(), 0x40b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 01C3
        gbc.setState(0x459e, 0xc9d4, 0xfe90, 0xd554, 0xcd29, 0xb37b, 0x0, 0x0);
        gbc.writeMem(0x459e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc9d4);
        EXPECT(gbc.pc(), 0x459f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01C4
        gbc.setState(0xc899, 0x34e, 0xb570, 0x3a, 0x8bcf, 0x922, 0x0, 0x1);
        gbc.writeMem(0xc899, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x34e);
        EXPECT(gbc.pc(), 0xc89a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc899), 0x45);
        // 45 01C5
        gbc.setState(0x8986, 0x7a4a, 0xaf80, 0xb4bb, 0xf33, 0x2f8e, 0x0, 0x0);
        gbc.writeMem(0x8986, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7a4a);
        EXPECT(gbc.pc(), 0x8987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8986), 0x45);
        // 45 01C6
        gbc.setState(0x395d, 0xf7e8, 0xc970, 0xad8, 0x6e7c, 0x3b35, 0x0, 0x0);
        gbc.writeMem(0x395d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf7e8);
        EXPECT(gbc.pc(), 0x395e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 01C7
        gbc.setState(0x512e, 0x842f, 0x6ea0, 0x55d0, 0xa237, 0x723d, 0x0, 0x1);
        gbc.writeMem(0x512e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x842f);
        EXPECT(gbc.pc(), 0x512f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 01C8
        gbc.setState(0x3007, 0x6efa, 0x7530, 0x3de5, 0x6dde, 0x95a6, 0x0, 0x1);
        gbc.writeMem(0x3007, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6efa);
        EXPECT(gbc.pc(), 0x3008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 01C9
        gbc.setState(0xc128, 0x66c0, 0x4d20, 0xd7c8, 0x7443, 0x8907, 0x0, 0x1);
        gbc.writeMem(0xc128, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x66c0);
        EXPECT(gbc.pc(), 0xc129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc128), 0x45);
        // 45 01CA
        gbc.setState(0x46d4, 0xe887, 0x3c30, 0x551a, 0xe5e8, 0x2fcf, 0x0, 0x1);
        gbc.writeMem(0x46d4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe887);
        EXPECT(gbc.pc(), 0x46d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 01CB
        gbc.setState(0x9b31, 0xf7b7, 0x2750, 0xbc0d, 0xdf28, 0x3c95, 0x0, 0x0);
        gbc.writeMem(0x9b31, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf7b7);
        EXPECT(gbc.pc(), 0x9b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b31), 0x45);
        // 45 01CC
        gbc.setState(0xa6c4, 0x210, 0x2930, 0xe401, 0xd6d, 0x579f, 0x1, 0x1);
        gbc.writeMem(0xa6c4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x210);
        EXPECT(gbc.pc(), 0xa6c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6c4), 0x45);
        // 45 01CD
        gbc.setState(0x6572, 0x504f, 0xc2d0, 0x2a32, 0xc861, 0xfb36, 0x1, 0x1);
        gbc.writeMem(0x6572, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x504f);
        EXPECT(gbc.pc(), 0x6573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01CE
        gbc.setState(0x6e, 0x79c0, 0x5030, 0x7c6e, 0x1c03, 0x67af, 0x0, 0x0);
        gbc.writeMem(0x6e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x79c0);
        EXPECT(gbc.pc(), 0x6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 01CF
        gbc.setState(0x1b5b, 0x9c05, 0x9020, 0x52d6, 0xca4b, 0x36ac, 0x1, 0x1);
        gbc.writeMem(0x1b5b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9c05);
        EXPECT(gbc.pc(), 0x1b5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 01D0
        gbc.setState(0x5295, 0xcd74, 0x5680, 0x95c9, 0xe14, 0x7d83, 0x1, 0x0);
        gbc.writeMem(0x5295, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xcd74);
        EXPECT(gbc.pc(), 0x5296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 01D1
        gbc.setState(0x7a7c, 0x31f1, 0xc310, 0x7edf, 0x80ed, 0x66a2, 0x0, 0x1);
        gbc.writeMem(0x7a7c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x31f1);
        EXPECT(gbc.pc(), 0x7a7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01D2
        gbc.setState(0x9aa5, 0x3d54, 0x79a0, 0x2328, 0x8db5, 0x9766, 0x0, 0x0);
        gbc.writeMem(0x9aa5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3d54);
        EXPECT(gbc.pc(), 0x9aa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aa5), 0x45);
        // 45 01D3
        gbc.setState(0xc369, 0xc353, 0xeca0, 0x4c8c, 0xcc6, 0x2605, 0x1, 0x1);
        gbc.writeMem(0xc369, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc353);
        EXPECT(gbc.pc(), 0xc36a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc369), 0x45);
        // 45 01D4
        gbc.setState(0xa48, 0xbfe9, 0x69b0, 0x3339, 0x5812, 0x4f18, 0x1, 0x1);
        gbc.writeMem(0xa48, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbfe9);
        EXPECT(gbc.pc(), 0xa49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 01D5
        gbc.setState(0xd2fb, 0x2d90, 0xa900, 0x3356, 0x6e6a, 0xfd8b, 0x1, 0x0);
        gbc.writeMem(0xd2fb, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2d90);
        EXPECT(gbc.pc(), 0xd2fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2fb), 0x45);
        // 45 01D6
        gbc.setState(0xa7d3, 0xf1b5, 0xec50, 0x614c, 0xd3b0, 0x7e1a, 0x0, 0x0);
        gbc.writeMem(0xa7d3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf1b5);
        EXPECT(gbc.pc(), 0xa7d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7d3), 0x45);
        // 45 01D7
        gbc.setState(0x6721, 0x6f99, 0xf7b0, 0x8911, 0xcc13, 0x6681, 0x0, 0x1);
        gbc.writeMem(0x6721, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6f99);
        EXPECT(gbc.pc(), 0x6722);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 01D8
        gbc.setState(0x5dfc, 0x67fc, 0xf590, 0xf40, 0xfe59, 0xf28b, 0x1, 0x0);
        gbc.writeMem(0x5dfc, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x67fc);
        EXPECT(gbc.pc(), 0x5dfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01D9
        gbc.setState(0xbf9d, 0x4691, 0x6570, 0x577c, 0x1a5a, 0xc214, 0x0, 0x1);
        gbc.writeMem(0xbf9d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4691);
        EXPECT(gbc.pc(), 0xbf9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf9d), 0x45);
        // 45 01DA
        gbc.setState(0x58a7, 0x586b, 0x7c00, 0x6fd6, 0x1a0b, 0xc7c, 0x0, 0x1);
        gbc.writeMem(0x58a7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x586b);
        EXPECT(gbc.pc(), 0x58a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 01DB
        gbc.setState(0xe909, 0x3c1, 0xe1c0, 0x343a, 0x3940, 0x4e6b, 0x0, 0x0);
        gbc.writeMem(0xe909, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3c1);
        EXPECT(gbc.pc(), 0xe90a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe909), 0x45);
        // 45 01DC
        gbc.setState(0x250a, 0x799b, 0xf550, 0x4501, 0xea90, 0xb40f, 0x1, 0x0);
        gbc.writeMem(0x250a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x799b);
        EXPECT(gbc.pc(), 0x250b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01DD
        gbc.setState(0xcd82, 0x1130, 0x5ff0, 0x9294, 0xeda2, 0x6641, 0x1, 0x1);
        gbc.writeMem(0xcd82, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1130);
        EXPECT(gbc.pc(), 0xcd83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd82), 0x45);
        // 45 01DE
        gbc.setState(0x438d, 0x4be9, 0x6730, 0x55f4, 0x1404, 0xe199, 0x0, 0x1);
        gbc.writeMem(0x438d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4be9);
        EXPECT(gbc.pc(), 0x438e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 01DF
        gbc.setState(0xd8fe, 0xd2e4, 0x8f60, 0x67e1, 0x32f5, 0xfc26, 0x1, 0x1);
        gbc.writeMem(0xd8fe, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd2e4);
        EXPECT(gbc.pc(), 0xd8ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8fe), 0x45);
        // 45 01E0
        gbc.setState(0x9776, 0x647a, 0x84c0, 0xb86f, 0x732c, 0xbd44, 0x0, 0x1);
        gbc.writeMem(0x9776, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x647a);
        EXPECT(gbc.pc(), 0x9777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9776), 0x45);
        // 45 01E1
        gbc.setState(0x799f, 0x6cbe, 0x6e50, 0x7dcd, 0xfe5d, 0xc43e, 0x1, 0x0);
        gbc.writeMem(0x799f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6cbe);
        EXPECT(gbc.pc(), 0x79a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01E2
        gbc.setState(0xeca2, 0x3a11, 0x7b20, 0x946d, 0xc630, 0x237b, 0x1, 0x1);
        gbc.writeMem(0xeca2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3a11);
        EXPECT(gbc.pc(), 0xeca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeca2), 0x45);
        // 45 01E3
        gbc.setState(0x5b44, 0xf7a8, 0x500, 0xed9c, 0xabff, 0xa455, 0x0, 0x1);
        gbc.writeMem(0x5b44, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf7a8);
        EXPECT(gbc.pc(), 0x5b45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 01E4
        gbc.setState(0xe229, 0x2b05, 0xaa40, 0xfaba, 0xd5ec, 0xec00, 0x0, 0x0);
        gbc.writeMem(0xe229, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2b05);
        EXPECT(gbc.pc(), 0xe22a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe229), 0x45);
        // 45 01E5
        gbc.setState(0x53af, 0x15d2, 0x68d0, 0x5d01, 0x2398, 0xa43, 0x1, 0x1);
        gbc.writeMem(0x53af, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x15d2);
        EXPECT(gbc.pc(), 0x53b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01E6
        gbc.setState(0x3772, 0x8e0, 0x6c20, 0x6344, 0x441e, 0x5f9c, 0x1, 0x0);
        gbc.writeMem(0x3772, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8e0);
        EXPECT(gbc.pc(), 0x3773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 01E7
        gbc.setState(0xb69a, 0x40df, 0x1b50, 0xaf0e, 0xd91d, 0xd014, 0x1, 0x0);
        gbc.writeMem(0xb69a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x40df);
        EXPECT(gbc.pc(), 0xb69b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb69a), 0x45);
        // 45 01E8
        gbc.setState(0x2ec9, 0x404f, 0x6bb0, 0xc4ee, 0x9893, 0xdb77, 0x1, 0x1);
        gbc.writeMem(0x2ec9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x404f);
        EXPECT(gbc.pc(), 0x2eca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 01E9
        gbc.setState(0x6bc5, 0x7986, 0xbad0, 0x3f20, 0xb03d, 0xfe69, 0x1, 0x1);
        gbc.writeMem(0x6bc5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x7986);
        EXPECT(gbc.pc(), 0x6bc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01EA
        gbc.setState(0xeac8, 0x334b, 0x310, 0x423a, 0x864d, 0x858b, 0x1, 0x1);
        gbc.writeMem(0xeac8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x334b);
        EXPECT(gbc.pc(), 0xeac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeac8), 0x45);
        // 45 01EB
        gbc.setState(0xa024, 0x4462, 0xf2d0, 0xc9fa, 0xd124, 0xfada, 0x1, 0x0);
        gbc.writeMem(0xa024, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4462);
        EXPECT(gbc.pc(), 0xa025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa024), 0x45);
        // 45 01EC
        gbc.setState(0xd8a0, 0xc849, 0x8d00, 0xd93c, 0xc79a, 0x2942, 0x0, 0x0);
        gbc.writeMem(0xd8a0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc849);
        EXPECT(gbc.pc(), 0xd8a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8a0), 0x45);
        // 45 01ED
        gbc.setState(0x6d12, 0xea2d, 0x1310, 0xe313, 0x7259, 0x7de1, 0x1, 0x0);
        gbc.writeMem(0x6d12, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xea2d);
        EXPECT(gbc.pc(), 0x6d13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01EE
        gbc.setState(0xd2e0, 0xd2fe, 0xa3c0, 0xca6d, 0xa6db, 0x6060, 0x1, 0x1);
        gbc.writeMem(0xd2e0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd2fe);
        EXPECT(gbc.pc(), 0xd2e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2e0), 0x45);
        // 45 01EF
        gbc.setState(0x8387, 0xe2d2, 0x74e0, 0x8931, 0xbde0, 0xa8b1, 0x0, 0x1);
        gbc.writeMem(0x8387, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe2d2);
        EXPECT(gbc.pc(), 0x8388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8387), 0x45);
        // 45 01F0
        gbc.setState(0x4e22, 0xafca, 0x30d0, 0xbe7f, 0xcf01, 0x7698, 0x1, 0x1);
        gbc.writeMem(0x4e22, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xafca);
        EXPECT(gbc.pc(), 0x4e23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01F2
        gbc.setState(0x2536, 0xaa79, 0x890, 0x8e46, 0x8e09, 0x6283, 0x0, 0x0);
        gbc.writeMem(0x2536, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xaa79);
        EXPECT(gbc.pc(), 0x2537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01F3
        gbc.setState(0x8f30, 0x3eb4, 0x4d90, 0xe74b, 0x3599, 0x220b, 0x0, 0x1);
        gbc.writeMem(0x8f30, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3eb4);
        EXPECT(gbc.pc(), 0x8f31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f30), 0x45);
        // 45 01F4
        gbc.setState(0xb050, 0x9169, 0x3dc0, 0xc873, 0x11ba, 0xcb11, 0x0, 0x1);
        gbc.writeMem(0xb050, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9169);
        EXPECT(gbc.pc(), 0xb051);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb050), 0x45);
        // 45 01F5
        gbc.setState(0xb03c, 0xe66, 0x6540, 0x9f87, 0x3afb, 0x6cc4, 0x0, 0x1);
        gbc.writeMem(0xb03c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe66);
        EXPECT(gbc.pc(), 0xb03d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb03c), 0x45);
        // 45 01F6
        gbc.setState(0x4f2f, 0xc2b3, 0x7840, 0x3622, 0x68de, 0x73db, 0x0, 0x0);
        gbc.writeMem(0x4f2f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc2b3);
        EXPECT(gbc.pc(), 0x4f30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 01F7
        gbc.setState(0x4eff, 0x8259, 0xedf0, 0x9848, 0xeb80, 0xdfd8, 0x1, 0x1);
        gbc.writeMem(0x4eff, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8259);
        EXPECT(gbc.pc(), 0x4f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 01FA
        gbc.setState(0xd62f, 0x316e, 0xaf70, 0x1dfd, 0xe80a, 0xe904, 0x0, 0x0);
        gbc.writeMem(0xd62f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x316e);
        EXPECT(gbc.pc(), 0xd630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd62f), 0x45);
        // 45 01FB
        gbc.setState(0xba15, 0xfb43, 0x2a80, 0x3a07, 0xfc2f, 0x890b, 0x1, 0x1);
        gbc.writeMem(0xba15, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xfb43);
        EXPECT(gbc.pc(), 0xba16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba15), 0x45);
        // 45 01FC
        gbc.setState(0x4764, 0x83b3, 0x5f30, 0x61da, 0xa7f2, 0x5196, 0x1, 0x1);
        gbc.writeMem(0x4764, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x83b3);
        EXPECT(gbc.pc(), 0x4765);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 01FD
        gbc.setState(0x213d, 0xf577, 0xc3d0, 0x2187, 0xefcf, 0xc82e, 0x0, 0x1);
        gbc.writeMem(0x213d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf577);
        EXPECT(gbc.pc(), 0x213e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 01FE
        gbc.setState(0xe1e9, 0xec8b, 0xd5b0, 0x355c, 0xae9d, 0x3478, 0x0, 0x0);
        gbc.writeMem(0xe1e9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xec8b);
        EXPECT(gbc.pc(), 0xe1ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1e9), 0x45);
        // 45 01FF
        gbc.setState(0xabc3, 0xc125, 0xe310, 0x6bce, 0x2602, 0x4118, 0x0, 0x0);
        gbc.writeMem(0xabc3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc125);
        EXPECT(gbc.pc(), 0xabc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc3), 0x45);
        // 45 0200
        gbc.setState(0x3fea, 0xfa8c, 0x8ce0, 0xff0b, 0x247e, 0x3e98, 0x1, 0x1);
        gbc.writeMem(0x3fea, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfa8c);
        EXPECT(gbc.pc(), 0x3feb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0201
        gbc.setState(0x40f3, 0xfc3f, 0x53f0, 0x23b4, 0x556, 0x7d5a, 0x1, 0x0);
        gbc.writeMem(0x40f3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xfc3f);
        EXPECT(gbc.pc(), 0x40f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0202
        gbc.setState(0xb0d7, 0x5c2f, 0xfc50, 0x6cfb, 0xecec, 0x4f28, 0x0, 0x0);
        gbc.writeMem(0xb0d7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5c2f);
        EXPECT(gbc.pc(), 0xb0d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0d7), 0x45);
        // 45 0203
        gbc.setState(0x2724, 0x30b0, 0x35d0, 0x5016, 0xc1e7, 0x3d03, 0x1, 0x0);
        gbc.writeMem(0x2724, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x30b0);
        EXPECT(gbc.pc(), 0x2725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0204
        gbc.setState(0x8c2a, 0xa6bd, 0x4220, 0xa405, 0x9fd3, 0x584, 0x0, 0x0);
        gbc.writeMem(0x8c2a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa6bd);
        EXPECT(gbc.pc(), 0x8c2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c2a), 0x45);
        // 45 0205
        gbc.setState(0xf35, 0x2064, 0xe520, 0x439f, 0x73e, 0x276, 0x1, 0x0);
        gbc.writeMem(0xf35, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2064);
        EXPECT(gbc.pc(), 0xf36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0206
        gbc.setState(0x5cd9, 0x9d39, 0xa0b0, 0x2cae, 0x4771, 0x4d39, 0x0, 0x0);
        gbc.writeMem(0x5cd9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9d39);
        EXPECT(gbc.pc(), 0x5cda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0207
        gbc.setState(0xe394, 0x4e41, 0xc3b0, 0x9a35, 0x1ad, 0xb7b3, 0x1, 0x0);
        gbc.writeMem(0xe394, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4e41);
        EXPECT(gbc.pc(), 0xe395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe394), 0x45);
        // 45 0208
        gbc.setState(0x3d0e, 0x7c09, 0xf620, 0x1fe9, 0xbf3a, 0x67ff, 0x1, 0x0);
        gbc.writeMem(0x3d0e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7c09);
        EXPECT(gbc.pc(), 0x3d0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0209
        gbc.setState(0x4ef8, 0x9c1d, 0x9fe0, 0x950a, 0xbafa, 0x735c, 0x1, 0x1);
        gbc.writeMem(0x4ef8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9c1d);
        EXPECT(gbc.pc(), 0x4ef9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 020A
        gbc.setState(0x841, 0x54f, 0x2c10, 0x5dd7, 0x91e6, 0xbad1, 0x1, 0x1);
        gbc.writeMem(0x841, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x54f);
        EXPECT(gbc.pc(), 0x842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 020B
        gbc.setState(0x5917, 0x683a, 0x4560, 0x54e1, 0x52c1, 0x9b22, 0x1, 0x0);
        gbc.writeMem(0x5917, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x683a);
        EXPECT(gbc.pc(), 0x5918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 020C
        gbc.setState(0xef1e, 0x40c2, 0x66e0, 0x23d0, 0xa44f, 0x5623, 0x1, 0x0);
        gbc.writeMem(0xef1e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x40c2);
        EXPECT(gbc.pc(), 0xef1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef1e), 0x45);
        // 45 020D
        gbc.setState(0x916, 0x224d, 0x8040, 0xe6c1, 0xee4d, 0x6b4c, 0x1, 0x0);
        gbc.writeMem(0x916, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x224d);
        EXPECT(gbc.pc(), 0x917);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 020E
        gbc.setState(0x4f25, 0x32a2, 0x23e0, 0xa53a, 0xc6c9, 0xbb42, 0x1, 0x1);
        gbc.writeMem(0x4f25, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x32a2);
        EXPECT(gbc.pc(), 0x4f26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 020F
        gbc.setState(0xe516, 0xb673, 0x42b0, 0x64de, 0xcdf7, 0x2ff9, 0x1, 0x0);
        gbc.writeMem(0xe516, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb673);
        EXPECT(gbc.pc(), 0xe517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe516), 0x45);
        // 45 0210
        gbc.setState(0xd6e1, 0x6ce5, 0x3bc0, 0x77de, 0xbb19, 0xedd2, 0x1, 0x1);
        gbc.writeMem(0xd6e1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6ce5);
        EXPECT(gbc.pc(), 0xd6e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e1), 0x45);
        // 45 0211
        gbc.setState(0xc06, 0xef50, 0xd0a0, 0xc9f9, 0xfd9, 0xf1a9, 0x0, 0x0);
        gbc.writeMem(0xc06, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xef50);
        EXPECT(gbc.pc(), 0xc07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0212
        gbc.setState(0xaae8, 0xe50, 0x4b70, 0x14d6, 0xe9ea, 0x3193, 0x1, 0x1);
        gbc.writeMem(0xaae8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe50);
        EXPECT(gbc.pc(), 0xaae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaae8), 0x45);
        // 45 0213
        gbc.setState(0x6a0d, 0x4445, 0xb920, 0xddc5, 0xfecd, 0xb980, 0x0, 0x1);
        gbc.writeMem(0x6a0d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4445);
        EXPECT(gbc.pc(), 0x6a0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0214
        gbc.setState(0x61bd, 0xf648, 0xdbd0, 0xee6d, 0x9948, 0xc4df, 0x0, 0x0);
        gbc.writeMem(0x61bd, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf648);
        EXPECT(gbc.pc(), 0x61be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0215
        gbc.setState(0xed16, 0xb304, 0x3030, 0xd751, 0x413, 0xd407, 0x1, 0x1);
        gbc.writeMem(0xed16, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb304);
        EXPECT(gbc.pc(), 0xed17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed16), 0x45);
        // 45 0216
        gbc.setState(0x3712, 0xbd78, 0xffe0, 0x6b3e, 0x70ef, 0xffc5, 0x0, 0x0);
        gbc.writeMem(0x3712, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xbd78);
        EXPECT(gbc.pc(), 0x3713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0217
        gbc.setState(0xaaf3, 0x27fb, 0x99e0, 0x3389, 0xad9c, 0xb704, 0x0, 0x0);
        gbc.writeMem(0xaaf3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x27fb);
        EXPECT(gbc.pc(), 0xaaf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf3), 0x45);
        // 45 0218
        gbc.setState(0xaa3, 0xca9, 0x6b60, 0xbdc, 0xbc90, 0xc0dc, 0x1, 0x1);
        gbc.writeMem(0xaa3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xca9);
        EXPECT(gbc.pc(), 0xaa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0219
        gbc.setState(0xd902, 0xce3e, 0xe000, 0x3541, 0xd4f4, 0xb6a7, 0x0, 0x1);
        gbc.writeMem(0xd902, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xce3e);
        EXPECT(gbc.pc(), 0xd903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd902), 0x45);
        // 45 021A
        gbc.setState(0x9f7f, 0xb4cc, 0x6950, 0xe444, 0xc81, 0x75ad, 0x0, 0x0);
        gbc.writeMem(0x9f7f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb4cc);
        EXPECT(gbc.pc(), 0x9f80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f7f), 0x45);
        // 45 021B
        gbc.setState(0x6b2f, 0x31b3, 0xdd70, 0xe095, 0x399b, 0xb851, 0x1, 0x0);
        gbc.writeMem(0x6b2f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x31b3);
        EXPECT(gbc.pc(), 0x6b30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 021C
        gbc.setState(0x3568, 0xdafc, 0xe4f0, 0xdad0, 0xa89d, 0x4c3, 0x1, 0x1);
        gbc.writeMem(0x3568, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xdafc);
        EXPECT(gbc.pc(), 0x3569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 021D
        gbc.setState(0x3775, 0x8fd0, 0x42c0, 0xa741, 0xa1cd, 0xff3b, 0x0, 0x0);
        gbc.writeMem(0x3775, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8fd0);
        EXPECT(gbc.pc(), 0x3776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 021E
        gbc.setState(0x5664, 0x26b9, 0x8560, 0xa2e4, 0x1247, 0xfb38, 0x0, 0x0);
        gbc.writeMem(0x5664, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x26b9);
        EXPECT(gbc.pc(), 0x5665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 021F
        gbc.setState(0x82e7, 0x3325, 0x4540, 0x9f78, 0x6273, 0x106, 0x1, 0x1);
        gbc.writeMem(0x82e7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3325);
        EXPECT(gbc.pc(), 0x82e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e7), 0x45);
        // 45 0220
        gbc.setState(0x2c35, 0x603f, 0xd3e0, 0x9e61, 0x72db, 0xb08d, 0x0, 0x1);
        gbc.writeMem(0x2c35, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x603f);
        EXPECT(gbc.pc(), 0x2c36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0221
        gbc.setState(0x405b, 0xcf7e, 0x6cf0, 0xea28, 0xea37, 0x8c7c, 0x0, 0x0);
        gbc.writeMem(0x405b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xcf7e);
        EXPECT(gbc.pc(), 0x405c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0222
        gbc.setState(0xe309, 0x20, 0xa600, 0x3b7d, 0x7b7b, 0x10ac, 0x0, 0x1);
        gbc.writeMem(0xe309, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x20);
        EXPECT(gbc.pc(), 0xe30a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe309), 0x45);
        // 45 0224
        gbc.setState(0x15ff, 0xf67e, 0x130, 0xb858, 0x4b58, 0xa0f3, 0x1, 0x1);
        gbc.writeMem(0x15ff, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf67e);
        EXPECT(gbc.pc(), 0x1600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0225
        gbc.setState(0x1e8d, 0xc267, 0x1ce0, 0x8222, 0x344c, 0x75c2, 0x0, 0x1);
        gbc.writeMem(0x1e8d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc267);
        EXPECT(gbc.pc(), 0x1e8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0226
        gbc.setState(0xb61a, 0xaae0, 0x3bb0, 0xbefb, 0x9a10, 0x8585, 0x0, 0x1);
        gbc.writeMem(0xb61a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xaae0);
        EXPECT(gbc.pc(), 0xb61b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb61a), 0x45);
        // 45 0227
        gbc.setState(0xa101, 0xe48e, 0x6d30, 0x5d20, 0xdcfc, 0x4c5b, 0x1, 0x0);
        gbc.writeMem(0xa101, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe48e);
        EXPECT(gbc.pc(), 0xa102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa101), 0x45);
        // 45 0228
        gbc.setState(0x3f53, 0xf0ab, 0x140, 0x4cb8, 0x1048, 0xb557, 0x1, 0x1);
        gbc.writeMem(0x3f53, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf0ab);
        EXPECT(gbc.pc(), 0x3f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0229
        gbc.setState(0x88e3, 0x82ff, 0x75a0, 0x8c68, 0xa2cc, 0x81a1, 0x1, 0x0);
        gbc.writeMem(0x88e3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x82ff);
        EXPECT(gbc.pc(), 0x88e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88e3), 0x45);
        // 45 022A
        gbc.setState(0x32f1, 0x296b, 0x5580, 0xb8a4, 0xcc83, 0xb4cf, 0x1, 0x0);
        gbc.writeMem(0x32f1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x296b);
        EXPECT(gbc.pc(), 0x32f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 022B
        gbc.setState(0xec83, 0x6757, 0xf1f0, 0x4038, 0xc52f, 0x7d26, 0x0, 0x1);
        gbc.writeMem(0xec83, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6757);
        EXPECT(gbc.pc(), 0xec84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec83), 0x45);
        // 45 022C
        gbc.setState(0x8f45, 0xb7a8, 0x9810, 0x1790, 0x15f4, 0x1e0e, 0x0, 0x0);
        gbc.writeMem(0x8f45, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb7a8);
        EXPECT(gbc.pc(), 0x8f46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f45), 0x45);
        // 45 022D
        gbc.setState(0xe0ec, 0xdad1, 0x4fd0, 0x9a4, 0x4f62, 0x1bd1, 0x1, 0x0);
        gbc.writeMem(0xe0ec, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xdad1);
        EXPECT(gbc.pc(), 0xe0ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ec), 0x45);
        // 45 022E
        gbc.setState(0xaf6a, 0xc4b6, 0xc10, 0xc35, 0x183b, 0x7c0d, 0x1, 0x1);
        gbc.writeMem(0xaf6a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc4b6);
        EXPECT(gbc.pc(), 0xaf6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf6a), 0x45);
        // 45 022F
        gbc.setState(0xa036, 0x261a, 0xe4e0, 0xd3ff, 0x2c27, 0xebe2, 0x0, 0x1);
        gbc.writeMem(0xa036, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x261a);
        EXPECT(gbc.pc(), 0xa037);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa036), 0x45);
        // 45 0230
        gbc.setState(0xe6d1, 0x40e2, 0x28a0, 0x8899, 0x7cbd, 0xfa60, 0x1, 0x0);
        gbc.writeMem(0xe6d1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x40e2);
        EXPECT(gbc.pc(), 0xe6d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6d1), 0x45);
        // 45 0231
        gbc.setState(0x9e31, 0xff72, 0x13a0, 0xd678, 0x9c43, 0x33b6, 0x0, 0x0);
        gbc.writeMem(0x9e31, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xff72);
        EXPECT(gbc.pc(), 0x9e32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e31), 0x45);
        // 45 0232
        gbc.setState(0xddaf, 0x3346, 0x95a0, 0x13ea, 0x6e20, 0x9239, 0x0, 0x1);
        gbc.writeMem(0xddaf, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3346);
        EXPECT(gbc.pc(), 0xddb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddaf), 0x45);
        // 45 0233
        gbc.setState(0x6825, 0x6f01, 0xc0d0, 0xacd4, 0x2f3c, 0x9494, 0x1, 0x1);
        gbc.writeMem(0x6825, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6f01);
        EXPECT(gbc.pc(), 0x6826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0234
        gbc.setState(0x72e, 0xf7b2, 0x13d0, 0x2e69, 0x4c1f, 0x480f, 0x0, 0x1);
        gbc.writeMem(0x72e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf7b2);
        EXPECT(gbc.pc(), 0x72f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0235
        gbc.setState(0x75e, 0x2019, 0x1030, 0x20bf, 0x96d5, 0x7616, 0x1, 0x1);
        gbc.writeMem(0x75e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2019);
        EXPECT(gbc.pc(), 0x75f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0236
        gbc.setState(0x2b00, 0x2ded, 0x3220, 0xc1f9, 0x861d, 0x63fd, 0x1, 0x1);
        gbc.writeMem(0x2b00, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2ded);
        EXPECT(gbc.pc(), 0x2b01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0237
        gbc.setState(0x4be6, 0x1109, 0xe740, 0x4449, 0xced2, 0xc604, 0x0, 0x1);
        gbc.writeMem(0x4be6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1109);
        EXPECT(gbc.pc(), 0x4be7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0238
        gbc.setState(0x739d, 0xcc71, 0x7a80, 0x8218, 0xdcdc, 0xc0dc, 0x1, 0x0);
        gbc.writeMem(0x739d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xcc71);
        EXPECT(gbc.pc(), 0x739e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0239
        gbc.setState(0x6437, 0xdb32, 0xcb90, 0x4fe, 0xdb74, 0x818a, 0x0, 0x1);
        gbc.writeMem(0x6437, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xdb32);
        EXPECT(gbc.pc(), 0x6438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 023A
        gbc.setState(0xce83, 0x62ab, 0x2990, 0x4703, 0x1887, 0xd16d, 0x0, 0x0);
        gbc.writeMem(0xce83, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x62ab);
        EXPECT(gbc.pc(), 0xce84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce83), 0x45);
        // 45 023B
        gbc.setState(0xac4c, 0x9518, 0xd260, 0xf9e1, 0xffb4, 0x26bd, 0x1, 0x0);
        gbc.writeMem(0xac4c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9518);
        EXPECT(gbc.pc(), 0xac4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac4c), 0x45);
        // 45 023C
        gbc.setState(0x3349, 0x9b3e, 0x12c0, 0x4c8, 0xe60a, 0xd6e7, 0x0, 0x0);
        gbc.writeMem(0x3349, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9b3e);
        EXPECT(gbc.pc(), 0x334a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 023D
        gbc.setState(0x8ea3, 0x10ff, 0x8d90, 0xda7f, 0x8bf2, 0x4308, 0x0, 0x0);
        gbc.writeMem(0x8ea3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x10ff);
        EXPECT(gbc.pc(), 0x8ea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea3), 0x45);
        // 45 023E
        gbc.setState(0xd16a, 0xc7c1, 0x68a0, 0x292d, 0xb622, 0xf41b, 0x1, 0x0);
        gbc.writeMem(0xd16a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc7c1);
        EXPECT(gbc.pc(), 0xd16b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd16a), 0x45);
        // 45 023F
        gbc.setState(0x32b9, 0x2290, 0x5800, 0x6a21, 0x1715, 0xfcea, 0x1, 0x0);
        gbc.writeMem(0x32b9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2290);
        EXPECT(gbc.pc(), 0x32ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0240
        gbc.setState(0x21a5, 0xb037, 0xeba0, 0x21f7, 0xc027, 0x576b, 0x0, 0x0);
        gbc.writeMem(0x21a5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb037);
        EXPECT(gbc.pc(), 0x21a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0241
        gbc.setState(0x8c23, 0xd2a3, 0xf2e0, 0xb205, 0x3204, 0x4e5, 0x1, 0x1);
        gbc.writeMem(0x8c23, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd2a3);
        EXPECT(gbc.pc(), 0x8c24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c23), 0x45);
        // 45 0242
        gbc.setState(0x59a6, 0x4990, 0x2f60, 0x7149, 0x3558, 0xcc5, 0x0, 0x0);
        gbc.writeMem(0x59a6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4990);
        EXPECT(gbc.pc(), 0x59a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0243
        gbc.setState(0xc0de, 0x931a, 0x3780, 0x1c2d, 0xa879, 0x96f9, 0x0, 0x0);
        gbc.writeMem(0xc0de, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x931a);
        EXPECT(gbc.pc(), 0xc0df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0de), 0x45);
        // 45 0244
        gbc.setState(0x98b6, 0x7fd0, 0x6f20, 0xb398, 0x14e9, 0x1f6b, 0x1, 0x1);
        gbc.writeMem(0x98b6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7fd0);
        EXPECT(gbc.pc(), 0x98b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b6), 0x45);
        // 45 0245
        gbc.setState(0x47e, 0x94b5, 0x2ee0, 0xbcd2, 0x4bb, 0x2475, 0x1, 0x1);
        gbc.writeMem(0x47e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x94b5);
        EXPECT(gbc.pc(), 0x47f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0246
        gbc.setState(0x4428, 0x7896, 0x6680, 0xa593, 0x18db, 0xb73c, 0x1, 0x1);
        gbc.writeMem(0x4428, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7896);
        EXPECT(gbc.pc(), 0x4429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0247
        gbc.setState(0xb42b, 0x37a7, 0xbc20, 0xde5e, 0xfab5, 0x1ecb, 0x0, 0x0);
        gbc.writeMem(0xb42b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x37a7);
        EXPECT(gbc.pc(), 0xb42c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb42b), 0x45);
        // 45 0248
        gbc.setState(0x8fc2, 0x4b21, 0x99f0, 0x7c7d, 0x3b75, 0x5e29, 0x1, 0x1);
        gbc.writeMem(0x8fc2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4b21);
        EXPECT(gbc.pc(), 0x8fc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fc2), 0x45);
        // 45 0249
        gbc.setState(0x12c3, 0x92b, 0x6950, 0x5754, 0xaeeb, 0x8ec5, 0x1, 0x0);
        gbc.writeMem(0x12c3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x92b);
        EXPECT(gbc.pc(), 0x12c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 024A
        gbc.setState(0x2fe4, 0x8441, 0x3920, 0x8474, 0xb9d5, 0x7d44, 0x0, 0x1);
        gbc.writeMem(0x2fe4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8441);
        EXPECT(gbc.pc(), 0x2fe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 024B
        gbc.setState(0x50c9, 0xe20e, 0xfd00, 0x2f5f, 0xaf40, 0xf7ed, 0x0, 0x1);
        gbc.writeMem(0x50c9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe20e);
        EXPECT(gbc.pc(), 0x50ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 024C
        gbc.setState(0x7303, 0x1b3c, 0x1ef0, 0xce76, 0x5c6b, 0xf6ba, 0x1, 0x0);
        gbc.writeMem(0x7303, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1b3c);
        EXPECT(gbc.pc(), 0x7304);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 024D
        gbc.setState(0x275b, 0x9f05, 0xcd50, 0x442e, 0x8270, 0x6973, 0x0, 0x1);
        gbc.writeMem(0x275b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9f05);
        EXPECT(gbc.pc(), 0x275c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 024E
        gbc.setState(0xad1, 0x6450, 0x6aa0, 0xd938, 0xe1c6, 0x62c9, 0x1, 0x1);
        gbc.writeMem(0xad1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6450);
        EXPECT(gbc.pc(), 0xad2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 024F
        gbc.setState(0x309d, 0xa29, 0x26d0, 0x3ac7, 0xc323, 0x328f, 0x0, 0x1);
        gbc.writeMem(0x309d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa29);
        EXPECT(gbc.pc(), 0x309e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0250
        gbc.setState(0x9d69, 0x49f2, 0xaa20, 0x594f, 0x3e03, 0x1a68, 0x1, 0x1);
        gbc.writeMem(0x9d69, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x49f2);
        EXPECT(gbc.pc(), 0x9d6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d69), 0x45);
        // 45 0251
        gbc.setState(0xd7f4, 0xe3df, 0x9d20, 0x17f8, 0xe872, 0x96e, 0x0, 0x0);
        gbc.writeMem(0xd7f4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe3df);
        EXPECT(gbc.pc(), 0xd7f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7f4), 0x45);
        // 45 0252
        gbc.setState(0x4a66, 0x3226, 0x2e80, 0xb931, 0x227b, 0xb9d2, 0x1, 0x0);
        gbc.writeMem(0x4a66, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3226);
        EXPECT(gbc.pc(), 0x4a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0253
        gbc.setState(0x26d6, 0xdff6, 0x2880, 0x3bc1, 0xc98f, 0x9316, 0x0, 0x1);
        gbc.writeMem(0x26d6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xdff6);
        EXPECT(gbc.pc(), 0x26d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0254
        gbc.setState(0x8267, 0x8ec0, 0xc50, 0x3281, 0xb4c2, 0xc723, 0x1, 0x0);
        gbc.writeMem(0x8267, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8ec0);
        EXPECT(gbc.pc(), 0x8268);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8267), 0x45);
        // 45 0255
        gbc.setState(0x4cd6, 0xf566, 0x83f0, 0xde67, 0x4c14, 0xaaed, 0x1, 0x1);
        gbc.writeMem(0x4cd6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf566);
        EXPECT(gbc.pc(), 0x4cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0256
        gbc.setState(0x1aa3, 0x493d, 0xcbf0, 0x2f9f, 0xda34, 0xeba5, 0x0, 0x1);
        gbc.writeMem(0x1aa3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x493d);
        EXPECT(gbc.pc(), 0x1aa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0257
        gbc.setState(0xda9d, 0xf387, 0x2f30, 0xcf2a, 0xc736, 0xdb7d, 0x0, 0x0);
        gbc.writeMem(0xda9d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf387);
        EXPECT(gbc.pc(), 0xda9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda9d), 0x45);
        // 45 0258
        gbc.setState(0xe26c, 0xea22, 0x3fa0, 0x10b4, 0xd021, 0x1413, 0x1, 0x0);
        gbc.writeMem(0xe26c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xea22);
        EXPECT(gbc.pc(), 0xe26d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe26c), 0x45);
        // 45 0259
        gbc.setState(0x20b3, 0xeef, 0xa1c0, 0x5222, 0xf426, 0xd68d, 0x0, 0x1);
        gbc.writeMem(0x20b3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xeef);
        EXPECT(gbc.pc(), 0x20b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 025A
        gbc.setState(0xb7aa, 0xba6c, 0x4810, 0x6932, 0x3cb3, 0xb9b2, 0x0, 0x1);
        gbc.writeMem(0xb7aa, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xba6c);
        EXPECT(gbc.pc(), 0xb7ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7aa), 0x45);
        // 45 025B
        gbc.setState(0x3818, 0x4e65, 0xd630, 0x554e, 0xab9e, 0xf606, 0x1, 0x0);
        gbc.writeMem(0x3818, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4e65);
        EXPECT(gbc.pc(), 0x3819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 025C
        gbc.setState(0x1db5, 0x97d, 0x39d0, 0x48a5, 0x5349, 0x945b, 0x1, 0x1);
        gbc.writeMem(0x1db5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x97d);
        EXPECT(gbc.pc(), 0x1db6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 025D
        gbc.setState(0x3933, 0x513f, 0x6ca0, 0x805d, 0x6d34, 0xeb39, 0x1, 0x0);
        gbc.writeMem(0x3933, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x513f);
        EXPECT(gbc.pc(), 0x3934);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 025E
        gbc.setState(0x7b58, 0x3d4b, 0x2750, 0x95b1, 0x8a2c, 0xfaab, 0x0, 0x0);
        gbc.writeMem(0x7b58, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3d4b);
        EXPECT(gbc.pc(), 0x7b59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 025F
        gbc.setState(0x9559, 0x6580, 0x34b0, 0x3299, 0xc6b5, 0xfb26, 0x0, 0x0);
        gbc.writeMem(0x9559, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6580);
        EXPECT(gbc.pc(), 0x955a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9559), 0x45);
        // 45 0260
        gbc.setState(0x4510, 0x3213, 0x4670, 0xedbb, 0xc9c7, 0x8d56, 0x0, 0x0);
        gbc.writeMem(0x4510, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3213);
        EXPECT(gbc.pc(), 0x4511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0261
        gbc.setState(0xbb, 0xdb58, 0x64f0, 0x168f, 0xef19, 0xf99f, 0x1, 0x1);
        gbc.writeMem(0xbb, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xdb58);
        EXPECT(gbc.pc(), 0xbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0262
        gbc.setState(0x4416, 0xadaa, 0xd9b0, 0xb83, 0x61e3, 0x2c57, 0x0, 0x1);
        gbc.writeMem(0x4416, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xadaa);
        EXPECT(gbc.pc(), 0x4417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0263
        gbc.setState(0x5a, 0xc60e, 0xb880, 0xcfc2, 0xb620, 0xa41a, 0x1, 0x1);
        gbc.writeMem(0x5a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc60e);
        EXPECT(gbc.pc(), 0x5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0264
        gbc.setState(0x7ec3, 0xf72d, 0xbc90, 0x4e1b, 0x9ba8, 0xf4dd, 0x0, 0x1);
        gbc.writeMem(0x7ec3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf72d);
        EXPECT(gbc.pc(), 0x7ec4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0265
        gbc.setState(0xe525, 0x4d71, 0xea60, 0xfd92, 0x5d92, 0x3e42, 0x1, 0x0);
        gbc.writeMem(0xe525, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4d71);
        EXPECT(gbc.pc(), 0xe526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe525), 0x45);
        // 45 0266
        gbc.setState(0x5c18, 0xac97, 0x1c60, 0xb9a4, 0xb514, 0x1b8c, 0x0, 0x0);
        gbc.writeMem(0x5c18, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xac97);
        EXPECT(gbc.pc(), 0x5c19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0267
        gbc.setState(0xb178, 0xa6b, 0x6470, 0xcd83, 0xc4b9, 0x2528, 0x0, 0x0);
        gbc.writeMem(0xb178, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa6b);
        EXPECT(gbc.pc(), 0xb179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb178), 0x45);
        // 45 0268
        gbc.setState(0x7032, 0xbac0, 0x4360, 0x9b9d, 0xebcf, 0x3765, 0x0, 0x0);
        gbc.writeMem(0x7032, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbac0);
        EXPECT(gbc.pc(), 0x7033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0269
        gbc.setState(0xea23, 0xdd79, 0xcfc0, 0x647, 0xd39, 0x1cf, 0x1, 0x1);
        gbc.writeMem(0xea23, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xdd79);
        EXPECT(gbc.pc(), 0xea24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea23), 0x45);
        // 45 026A
        gbc.setState(0x276e, 0x958e, 0xa610, 0x1f35, 0x2841, 0x3182, 0x0, 0x0);
        gbc.writeMem(0x276e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x958e);
        EXPECT(gbc.pc(), 0x276f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 026B
        gbc.setState(0xb4f5, 0xd303, 0xbda0, 0x8aa6, 0x6bc3, 0x821c, 0x0, 0x1);
        gbc.writeMem(0xb4f5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd303);
        EXPECT(gbc.pc(), 0xb4f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4f5), 0x45);
        // 45 026C
        gbc.setState(0x9422, 0x6b4e, 0xe690, 0xa388, 0xae3f, 0xfb6e, 0x1, 0x1);
        gbc.writeMem(0x9422, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6b4e);
        EXPECT(gbc.pc(), 0x9423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9422), 0x45);
        // 45 026D
        gbc.setState(0xc070, 0x151b, 0x1b30, 0xf72a, 0x7897, 0x5502, 0x0, 0x1);
        gbc.writeMem(0xc070, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x151b);
        EXPECT(gbc.pc(), 0xc071);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc070), 0x45);
        // 45 026E
        gbc.setState(0xcfa8, 0xeae6, 0x1430, 0xd260, 0x3454, 0xab23, 0x0, 0x1);
        gbc.writeMem(0xcfa8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xeae6);
        EXPECT(gbc.pc(), 0xcfa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfa8), 0x45);
        // 45 026F
        gbc.setState(0xb7c0, 0x4d4c, 0x3140, 0xfc57, 0xebd8, 0x7dfd, 0x1, 0x1);
        gbc.writeMem(0xb7c0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4d4c);
        EXPECT(gbc.pc(), 0xb7c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7c0), 0x45);
        // 45 0270
        gbc.setState(0xd086, 0x38f, 0x1ad0, 0x2ce3, 0x7b2a, 0x98c7, 0x1, 0x0);
        gbc.writeMem(0xd086, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x38f);
        EXPECT(gbc.pc(), 0xd087);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd086), 0x45);
        // 45 0271
        gbc.setState(0xbdf3, 0xbb23, 0xded0, 0x922e, 0x74bc, 0x6ff4, 0x1, 0x1);
        gbc.writeMem(0xbdf3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbb23);
        EXPECT(gbc.pc(), 0xbdf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf3), 0x45);
        // 45 0272
        gbc.setState(0x3eae, 0xaefa, 0xf2a0, 0x6c94, 0x19e0, 0x1067, 0x1, 0x1);
        gbc.writeMem(0x3eae, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xaefa);
        EXPECT(gbc.pc(), 0x3eaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0273
        gbc.setState(0xb4c4, 0xc24, 0x3c20, 0x58, 0xff5c, 0x820, 0x1, 0x0);
        gbc.writeMem(0xb4c4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc24);
        EXPECT(gbc.pc(), 0xb4c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4c4), 0x45);
        // 45 0274
        gbc.setState(0x7bea, 0x970b, 0x5390, 0x966f, 0x9e8f, 0x2666, 0x1, 0x1);
        gbc.writeMem(0x7bea, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x970b);
        EXPECT(gbc.pc(), 0x7beb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0275
        gbc.setState(0xe25d, 0x6d76, 0x8620, 0x3222, 0x499d, 0x72cf, 0x1, 0x1);
        gbc.writeMem(0xe25d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x6d76);
        EXPECT(gbc.pc(), 0xe25e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe25d), 0x45);
        // 45 0276
        gbc.setState(0x272e, 0x655a, 0x480, 0xbcce, 0x4db9, 0x9776, 0x0, 0x1);
        gbc.writeMem(0x272e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x655a);
        EXPECT(gbc.pc(), 0x272f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0277
        gbc.setState(0xe864, 0xa64, 0xb970, 0xbcfd, 0x6b8d, 0xe740, 0x1, 0x0);
        gbc.writeMem(0xe864, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa64);
        EXPECT(gbc.pc(), 0xe865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe864), 0x45);
        // 45 0279
        gbc.setState(0xb273, 0x488d, 0x8de0, 0x232e, 0xe21c, 0x4c15, 0x1, 0x1);
        gbc.writeMem(0xb273, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x488d);
        EXPECT(gbc.pc(), 0xb274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb273), 0x45);
        // 45 027A
        gbc.setState(0x16f7, 0xfd80, 0xe1e0, 0xc5f6, 0x9bff, 0x4158, 0x0, 0x0);
        gbc.writeMem(0x16f7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xfd80);
        EXPECT(gbc.pc(), 0x16f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 027B
        gbc.setState(0x362b, 0xffde, 0x82a0, 0x836, 0x882c, 0x5bed, 0x1, 0x1);
        gbc.writeMem(0x362b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xffde);
        EXPECT(gbc.pc(), 0x362c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 027C
        gbc.setState(0x2e9, 0x221f, 0x4660, 0xd72d, 0x4beb, 0xb8f3, 0x1, 0x0);
        gbc.writeMem(0x2e9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x221f);
        EXPECT(gbc.pc(), 0x2ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 027D
        gbc.setState(0x4c14, 0xb905, 0x9b90, 0xa7ff, 0xa37f, 0xe76a, 0x0, 0x1);
        gbc.writeMem(0x4c14, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb905);
        EXPECT(gbc.pc(), 0x4c15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 027E
        gbc.setState(0xeed8, 0xe958, 0x2960, 0x7921, 0x1057, 0x74d0, 0x0, 0x0);
        gbc.writeMem(0xeed8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe958);
        EXPECT(gbc.pc(), 0xeed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeed8), 0x45);
        // 45 027F
        gbc.setState(0x38a4, 0x6b30, 0x6ba0, 0xc056, 0x918d, 0x6fbf, 0x0, 0x0);
        gbc.writeMem(0x38a4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6b30);
        EXPECT(gbc.pc(), 0x38a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0280
        gbc.setState(0x6ac, 0x2c06, 0x1340, 0x10f6, 0x5820, 0x6d3e, 0x1, 0x1);
        gbc.writeMem(0x6ac, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2c06);
        EXPECT(gbc.pc(), 0x6ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0281
        gbc.setState(0x465d, 0xb726, 0xf340, 0xf14e, 0x77ba, 0x7231, 0x1, 0x1);
        gbc.writeMem(0x465d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb726);
        EXPECT(gbc.pc(), 0x465e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0282
        gbc.setState(0x4422, 0x2456, 0x2b70, 0xc48b, 0x6706, 0x7a8b, 0x1, 0x1);
        gbc.writeMem(0x4422, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2456);
        EXPECT(gbc.pc(), 0x4423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0283
        gbc.setState(0x24f2, 0x470d, 0x4ce0, 0x428e, 0xd50a, 0x3701, 0x0, 0x0);
        gbc.writeMem(0x24f2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x470d);
        EXPECT(gbc.pc(), 0x24f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0284
        gbc.setState(0x1dc3, 0x495a, 0x3570, 0x969c, 0xc4b9, 0x6d82, 0x0, 0x0);
        gbc.writeMem(0x1dc3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x495a);
        EXPECT(gbc.pc(), 0x1dc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0285
        gbc.setState(0x9b50, 0xb84c, 0xe050, 0xe9be, 0x64c5, 0xe002, 0x0, 0x0);
        gbc.writeMem(0x9b50, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb84c);
        EXPECT(gbc.pc(), 0x9b51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b50), 0x45);
        // 45 0286
        gbc.setState(0xee64, 0xb17d, 0x7b00, 0x99eb, 0x352, 0x407d, 0x1, 0x1);
        gbc.writeMem(0xee64, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb17d);
        EXPECT(gbc.pc(), 0xee65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee64), 0x45);
        // 45 0287
        gbc.setState(0x4478, 0x9c93, 0x83b0, 0x5993, 0x87a9, 0x8b61, 0x1, 0x1);
        gbc.writeMem(0x4478, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9c93);
        EXPECT(gbc.pc(), 0x4479);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0288
        gbc.setState(0x1cd9, 0x1e7f, 0x9d50, 0x4a8d, 0xc221, 0x6ebe, 0x1, 0x0);
        gbc.writeMem(0x1cd9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1e7f);
        EXPECT(gbc.pc(), 0x1cda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0289
        gbc.setState(0x11de, 0xdce6, 0xac00, 0xea5c, 0x6bf8, 0x2aca, 0x0, 0x1);
        gbc.writeMem(0x11de, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdce6);
        EXPECT(gbc.pc(), 0x11df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 028A
        gbc.setState(0xb201, 0x6e16, 0x3b80, 0xbce4, 0x95a7, 0x8a61, 0x0, 0x0);
        gbc.writeMem(0xb201, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6e16);
        EXPECT(gbc.pc(), 0xb202);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb201), 0x45);
        // 45 028B
        gbc.setState(0x40eb, 0x6d9e, 0x96a0, 0xdd34, 0x58d3, 0x4310, 0x0, 0x0);
        gbc.writeMem(0x40eb, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6d9e);
        EXPECT(gbc.pc(), 0x40ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 028C
        gbc.setState(0x479, 0x4296, 0xa240, 0x228a, 0x1bfe, 0xb51f, 0x1, 0x1);
        gbc.writeMem(0x479, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4296);
        EXPECT(gbc.pc(), 0x47a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 028D
        gbc.setState(0xc61b, 0x1b89, 0x1c50, 0xd0d2, 0xa73c, 0x88b7, 0x0, 0x0);
        gbc.writeMem(0xc61b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1b89);
        EXPECT(gbc.pc(), 0xc61c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc61b), 0x45);
        // 45 028E
        gbc.setState(0xe587, 0xae87, 0xaa90, 0x65ff, 0xc178, 0x77a9, 0x0, 0x1);
        gbc.writeMem(0xe587, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xae87);
        EXPECT(gbc.pc(), 0xe588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe587), 0x45);
        // 45 028F
        gbc.setState(0x7349, 0x141c, 0x4760, 0x44f3, 0x2bd6, 0x943e, 0x0, 0x1);
        gbc.writeMem(0x7349, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x141c);
        EXPECT(gbc.pc(), 0x734a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0290
        gbc.setState(0x9847, 0x8b2b, 0x45d0, 0x60c2, 0x946e, 0x405a, 0x1, 0x1);
        gbc.writeMem(0x9847, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8b2b);
        EXPECT(gbc.pc(), 0x9848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9847), 0x45);
        // 45 0291
        gbc.setState(0x982a, 0x1359, 0x4c80, 0xd7b6, 0x4792, 0x5f2b, 0x0, 0x1);
        gbc.writeMem(0x982a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1359);
        EXPECT(gbc.pc(), 0x982b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x982a), 0x45);
        // 45 0292
        gbc.setState(0xce8e, 0x1d81, 0xaa70, 0x583, 0x7ff1, 0x73c0, 0x0, 0x1);
        gbc.writeMem(0xce8e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1d81);
        EXPECT(gbc.pc(), 0xce8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce8e), 0x45);
        // 45 0293
        gbc.setState(0x1547, 0xa452, 0xb880, 0xbba8, 0x1cf8, 0xf001, 0x1, 0x1);
        gbc.writeMem(0x1547, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa452);
        EXPECT(gbc.pc(), 0x1548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0294
        gbc.setState(0xaaef, 0x241b, 0x5f50, 0x7a22, 0xe8f1, 0x853d, 0x0, 0x1);
        gbc.writeMem(0xaaef, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x241b);
        EXPECT(gbc.pc(), 0xaaf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaef), 0x45);
        // 45 0295
        gbc.setState(0x92d5, 0x6f58, 0xadc0, 0x54d6, 0x4769, 0x4315, 0x1, 0x1);
        gbc.writeMem(0x92d5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6f58);
        EXPECT(gbc.pc(), 0x92d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92d5), 0x45);
        // 45 0296
        gbc.setState(0xee78, 0x49b5, 0xb240, 0xd1d2, 0x9e79, 0xf636, 0x0, 0x0);
        gbc.writeMem(0xee78, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x49b5);
        EXPECT(gbc.pc(), 0xee79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee78), 0x45);
        // 45 0297
        gbc.setState(0xaf3e, 0x693d, 0xf450, 0x3a67, 0x8d33, 0x2e1e, 0x0, 0x1);
        gbc.writeMem(0xaf3e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x693d);
        EXPECT(gbc.pc(), 0xaf3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf3e), 0x45);
        // 45 0299
        gbc.setState(0x753a, 0xbdab, 0xc910, 0x7be5, 0xef72, 0x7963, 0x1, 0x0);
        gbc.writeMem(0x753a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xbdab);
        EXPECT(gbc.pc(), 0x753b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 029A
        gbc.setState(0xea92, 0xb9ad, 0xefb0, 0xe37b, 0xd487, 0xadf, 0x0, 0x0);
        gbc.writeMem(0xea92, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb9ad);
        EXPECT(gbc.pc(), 0xea93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea92), 0x45);
        // 45 029B
        gbc.setState(0xec45, 0x4578, 0xf2a0, 0xa860, 0xac00, 0x88cd, 0x1, 0x0);
        gbc.writeMem(0xec45, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4578);
        EXPECT(gbc.pc(), 0xec46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec45), 0x45);
        // 45 029C
        gbc.setState(0x109c, 0x4091, 0x36c0, 0xe0c8, 0x9cf5, 0x6f7e, 0x0, 0x0);
        gbc.writeMem(0x109c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4091);
        EXPECT(gbc.pc(), 0x109d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 029D
        gbc.setState(0x5eb0, 0x3049, 0x6cf0, 0x8075, 0xc9ce, 0x1377, 0x1, 0x0);
        gbc.writeMem(0x5eb0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3049);
        EXPECT(gbc.pc(), 0x5eb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 029E
        gbc.setState(0x39aa, 0x83d8, 0x3420, 0x7bb5, 0xccf0, 0x9232, 0x0, 0x1);
        gbc.writeMem(0x39aa, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x83d8);
        EXPECT(gbc.pc(), 0x39ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 02A1
        gbc.setState(0x1654, 0xa974, 0x3c10, 0xbe04, 0x4cd4, 0xffe2, 0x1, 0x1);
        gbc.writeMem(0x1654, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa974);
        EXPECT(gbc.pc(), 0x1655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 02A2
        gbc.setState(0x4ec, 0x2b08, 0x7d00, 0xbb94, 0x3f39, 0xb879, 0x1, 0x1);
        gbc.writeMem(0x4ec, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2b08);
        EXPECT(gbc.pc(), 0x4ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 02A3
        gbc.setState(0x479f, 0x4341, 0x5170, 0xa6a5, 0xef70, 0x47a5, 0x1, 0x1);
        gbc.writeMem(0x479f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4341);
        EXPECT(gbc.pc(), 0x47a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 02A4
        gbc.setState(0x8985, 0xd8ef, 0x4ad0, 0x8baa, 0x735c, 0x3c15, 0x1, 0x0);
        gbc.writeMem(0x8985, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd8ef);
        EXPECT(gbc.pc(), 0x8986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8985), 0x45);
        // 45 02A5
        gbc.setState(0x6506, 0x1b3e, 0xaf10, 0x2652, 0xb4c7, 0x68db, 0x1, 0x0);
        gbc.writeMem(0x6506, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1b3e);
        EXPECT(gbc.pc(), 0x6507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 02A6
        gbc.setState(0x2fe9, 0x18a, 0x73d0, 0x42e3, 0x861d, 0xcec7, 0x0, 0x1);
        gbc.writeMem(0x2fe9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x18a);
        EXPECT(gbc.pc(), 0x2fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 02A7
        gbc.setState(0x85c4, 0xdea1, 0xf8a0, 0x75fb, 0xdd2c, 0x4fca, 0x0, 0x0);
        gbc.writeMem(0x85c4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdea1);
        EXPECT(gbc.pc(), 0x85c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c4), 0x45);
        // 45 02A8
        gbc.setState(0xa7d3, 0xae95, 0x1730, 0xfdfc, 0xdbcf, 0x8b08, 0x1, 0x1);
        gbc.writeMem(0xa7d3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xae95);
        EXPECT(gbc.pc(), 0xa7d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7d3), 0x45);
        // 45 02A9
        gbc.setState(0xa9cc, 0xd18f, 0x8ac0, 0xb639, 0x1ae, 0x7ae2, 0x0, 0x0);
        gbc.writeMem(0xa9cc, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd18f);
        EXPECT(gbc.pc(), 0xa9cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9cc), 0x45);
        // 45 02AA
        gbc.setState(0x5df2, 0x4ee6, 0xaaa0, 0xf9c, 0x3948, 0x6b0a, 0x0, 0x1);
        gbc.writeMem(0x5df2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4ee6);
        EXPECT(gbc.pc(), 0x5df3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 02AB
        gbc.setState(0xc1b3, 0xebc5, 0x1ce0, 0x7be, 0x5744, 0xad3e, 0x0, 0x0);
        gbc.writeMem(0xc1b3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xebc5);
        EXPECT(gbc.pc(), 0xc1b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1b3), 0x45);
        // 45 02AC
        gbc.setState(0x60df, 0x6110, 0xc8e0, 0xc294, 0x452, 0xb8f2, 0x1, 0x1);
        gbc.writeMem(0x60df, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6110);
        EXPECT(gbc.pc(), 0x60e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 02AD
        gbc.setState(0x2475, 0x72e5, 0x8a30, 0x88b7, 0xf4f, 0x5de3, 0x1, 0x0);
        gbc.writeMem(0x2475, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x72e5);
        EXPECT(gbc.pc(), 0x2476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 02AE
        gbc.setState(0x76f6, 0x8434, 0xfec0, 0xae96, 0xd897, 0x41, 0x1, 0x0);
        gbc.writeMem(0x76f6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8434);
        EXPECT(gbc.pc(), 0x76f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 02AF
        gbc.setState(0x7bfc, 0xbc81, 0xd560, 0xa672, 0xc5fd, 0xa1fa, 0x0, 0x1);
        gbc.writeMem(0x7bfc, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xbc81);
        EXPECT(gbc.pc(), 0x7bfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 02B0
        gbc.setState(0xd46e, 0x5252, 0x3ce0, 0x8807, 0x50d, 0x6f44, 0x0, 0x1);
        gbc.writeMem(0xd46e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5252);
        EXPECT(gbc.pc(), 0xd46f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd46e), 0x45);
        // 45 02B1
        gbc.setState(0x6b2e, 0x4e7e, 0xb760, 0xef98, 0xcc7c, 0x6df8, 0x0, 0x0);
        gbc.writeMem(0x6b2e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4e7e);
        EXPECT(gbc.pc(), 0x6b2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 02B2
        gbc.setState(0x29b0, 0xe963, 0xa600, 0x439e, 0x767, 0xcc74, 0x0, 0x0);
        gbc.writeMem(0x29b0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe963);
        EXPECT(gbc.pc(), 0x29b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 02B3
        gbc.setState(0x40be, 0xd9a0, 0x5800, 0x98df, 0x5bf0, 0x8dfb, 0x1, 0x0);
        gbc.writeMem(0x40be, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd9a0);
        EXPECT(gbc.pc(), 0x40bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 02B4
        gbc.setState(0x277b, 0x917, 0x9670, 0x5d94, 0x3935, 0x7a01, 0x0, 0x1);
        gbc.writeMem(0x277b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x917);
        EXPECT(gbc.pc(), 0x277c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 02B5
        gbc.setState(0x4dfa, 0xd96c, 0x8070, 0x4947, 0x35a9, 0x364b, 0x1, 0x0);
        gbc.writeMem(0x4dfa, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd96c);
        EXPECT(gbc.pc(), 0x4dfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 02B6
        gbc.setState(0x7a57, 0x8838, 0x3650, 0xbeeb, 0xd233, 0xdcd8, 0x0, 0x0);
        gbc.writeMem(0x7a57, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8838);
        EXPECT(gbc.pc(), 0x7a58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 02B7
        gbc.setState(0x757d, 0xa514, 0xbd90, 0x5888, 0xc0fe, 0xb4d9, 0x0, 0x0);
        gbc.writeMem(0x757d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa514);
        EXPECT(gbc.pc(), 0x757e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 02B8
        gbc.setState(0x11c, 0x881a, 0xaba0, 0x4511, 0xade2, 0xae54, 0x1, 0x0);
        gbc.writeMem(0x11c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x881a);
        EXPECT(gbc.pc(), 0x11d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 02B9
        gbc.setState(0x9e16, 0x8a4f, 0xe590, 0x7608, 0xad0e, 0x82fa, 0x1, 0x1);
        gbc.writeMem(0x9e16, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8a4f);
        EXPECT(gbc.pc(), 0x9e17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e16), 0x45);
        // 45 02BA
        gbc.setState(0x81fb, 0xb031, 0xac10, 0xf0e3, 0xafe4, 0x8958, 0x0, 0x0);
        gbc.writeMem(0x81fb, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb031);
        EXPECT(gbc.pc(), 0x81fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81fb), 0x45);
        // 45 02BB
        gbc.setState(0x7695, 0x6ec8, 0x56a0, 0x5b25, 0x8896, 0x8695, 0x1, 0x0);
        gbc.writeMem(0x7695, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6ec8);
        EXPECT(gbc.pc(), 0x7696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 02BC
        gbc.setState(0xd682, 0xbd3d, 0xc3d0, 0xb89a, 0xa009, 0xc26c, 0x1, 0x0);
        gbc.writeMem(0xd682, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xbd3d);
        EXPECT(gbc.pc(), 0xd683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd682), 0x45);
        // 45 02BD
        gbc.setState(0x5633, 0x214d, 0x2260, 0xae5c, 0x526f, 0x163b, 0x1, 0x1);
        gbc.writeMem(0x5633, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x214d);
        EXPECT(gbc.pc(), 0x5634);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 02BE
        gbc.setState(0x584b, 0xa0d9, 0x9ac0, 0x4604, 0xbfff, 0x4e0e, 0x0, 0x1);
        gbc.writeMem(0x584b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa0d9);
        EXPECT(gbc.pc(), 0x584c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 02BF
        gbc.setState(0xd0f4, 0x8542, 0x6b0, 0xd44a, 0x252, 0xa90b, 0x1, 0x0);
        gbc.writeMem(0xd0f4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8542);
        EXPECT(gbc.pc(), 0xd0f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0f4), 0x45);
        // 45 02C0
        gbc.setState(0x8f5c, 0x2d29, 0x8aa0, 0xb63f, 0xe38f, 0xab58, 0x1, 0x1);
        gbc.writeMem(0x8f5c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2d29);
        EXPECT(gbc.pc(), 0x8f5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f5c), 0x45);
        // 45 02C1
        gbc.setState(0x411f, 0x8749, 0xf0b0, 0x8d4, 0xd3cf, 0x3836, 0x0, 0x1);
        gbc.writeMem(0x411f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8749);
        EXPECT(gbc.pc(), 0x4120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 02C2
        gbc.setState(0xcdb7, 0x8938, 0xa860, 0xf917, 0x9d49, 0xd6f6, 0x1, 0x0);
        gbc.writeMem(0xcdb7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8938);
        EXPECT(gbc.pc(), 0xcdb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb7), 0x45);
        // 45 02C3
        gbc.setState(0x7b20, 0x5340, 0x19d0, 0xec00, 0xecbe, 0xfdf5, 0x0, 0x1);
        gbc.writeMem(0x7b20, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5340);
        EXPECT(gbc.pc(), 0x7b21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 02C4
        gbc.setState(0x2c48, 0x77dc, 0xdeb0, 0x590a, 0xed21, 0x95e9, 0x1, 0x1);
        gbc.writeMem(0x2c48, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x77dc);
        EXPECT(gbc.pc(), 0x2c49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 02C6
        gbc.setState(0x8858, 0xcd96, 0x5680, 0xc3ba, 0xd7be, 0xed0a, 0x0, 0x0);
        gbc.writeMem(0x8858, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xcd96);
        EXPECT(gbc.pc(), 0x8859);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8858), 0x45);
        // 45 02C8
        gbc.setState(0xe516, 0x2796, 0x4a40, 0x6e8, 0xa8, 0x506f, 0x1, 0x0);
        gbc.writeMem(0xe516, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x2796);
        EXPECT(gbc.pc(), 0xe517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe516), 0x45);
        // 45 02C9
        gbc.setState(0xbd38, 0xab3b, 0x7a70, 0xcac5, 0xe148, 0x6936, 0x0, 0x1);
        gbc.writeMem(0xbd38, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xab3b);
        EXPECT(gbc.pc(), 0xbd39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd38), 0x45);
        // 45 02CA
        gbc.setState(0xc389, 0x7c60, 0xadd0, 0xa405, 0x8d2b, 0xc6a7, 0x0, 0x0);
        gbc.writeMem(0xc389, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7c60);
        EXPECT(gbc.pc(), 0xc38a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc389), 0x45);
        // 45 02CB
        gbc.setState(0x85ec, 0xb1fc, 0xf9f0, 0xe6ea, 0x5676, 0xc43e, 0x1, 0x1);
        gbc.writeMem(0x85ec, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb1fc);
        EXPECT(gbc.pc(), 0x85ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ec), 0x45);
        // 45 02CC
        gbc.setState(0x68a5, 0xa273, 0xb810, 0x5324, 0x129a, 0xd90, 0x1, 0x0);
        gbc.writeMem(0x68a5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa273);
        EXPECT(gbc.pc(), 0x68a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 02CE
        gbc.setState(0x8daa, 0x6189, 0x6340, 0x7a92, 0xa7b0, 0xabda, 0x1, 0x1);
        gbc.writeMem(0x8daa, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6189);
        EXPECT(gbc.pc(), 0x8dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8daa), 0x45);
        // 45 02CF
        gbc.setState(0x27f4, 0xd7b8, 0x7500, 0xb41d, 0x56ea, 0x1cb1, 0x0, 0x0);
        gbc.writeMem(0x27f4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd7b8);
        EXPECT(gbc.pc(), 0x27f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 02D0
        gbc.setState(0xc7dd, 0x7b02, 0xc890, 0xccb2, 0xa5e7, 0x2b9c, 0x1, 0x1);
        gbc.writeMem(0xc7dd, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7b02);
        EXPECT(gbc.pc(), 0xc7de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7dd), 0x45);
        // 45 02D1
        gbc.setState(0x80c9, 0x9a68, 0xf420, 0x58c0, 0x1694, 0xd767, 0x0, 0x1);
        gbc.writeMem(0x80c9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9a68);
        EXPECT(gbc.pc(), 0x80ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c9), 0x45);
        // 45 02D2
        gbc.setState(0xb06b, 0xdbea, 0xff80, 0x89fa, 0xb671, 0x301f, 0x1, 0x1);
        gbc.writeMem(0xb06b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xdbea);
        EXPECT(gbc.pc(), 0xb06c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb06b), 0x45);
        // 45 02D3
        gbc.setState(0xd4ce, 0x8c69, 0x9420, 0x71cd, 0x994b, 0xf98c, 0x1, 0x0);
        gbc.writeMem(0xd4ce, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8c69);
        EXPECT(gbc.pc(), 0xd4cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ce), 0x45);
        // 45 02D4
        gbc.setState(0xdc4c, 0xdb38, 0x1c0, 0x9b1b, 0xe216, 0x3353, 0x1, 0x0);
        gbc.writeMem(0xdc4c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xdb38);
        EXPECT(gbc.pc(), 0xdc4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc4c), 0x45);
        // 45 02D5
        gbc.setState(0xa6f0, 0xbe6f, 0xcdc0, 0xce99, 0x5f63, 0x296f, 0x0, 0x0);
        gbc.writeMem(0xa6f0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xbe6f);
        EXPECT(gbc.pc(), 0xa6f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f0), 0x45);
        // 45 02D6
        gbc.setState(0xfea, 0xc619, 0xc190, 0xb427, 0xbd48, 0xfc52, 0x0, 0x1);
        gbc.writeMem(0xfea, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc619);
        EXPECT(gbc.pc(), 0xfeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 02D7
        gbc.setState(0x9a2f, 0x85b8, 0x75c0, 0x65a4, 0x621, 0x3f12, 0x1, 0x0);
        gbc.writeMem(0x9a2f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x85b8);
        EXPECT(gbc.pc(), 0x9a30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a2f), 0x45);
        // 45 02D8
        gbc.setState(0x8f50, 0xdbce, 0xbba0, 0xbee7, 0x7ce0, 0x488c, 0x1, 0x1);
        gbc.writeMem(0x8f50, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xdbce);
        EXPECT(gbc.pc(), 0x8f51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f50), 0x45);
        // 45 02D9
        gbc.setState(0x5e8c, 0xd5b1, 0x4010, 0x87c4, 0xcbf2, 0x21ba, 0x0, 0x0);
        gbc.writeMem(0x5e8c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd5b1);
        EXPECT(gbc.pc(), 0x5e8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 02DA
        gbc.setState(0xd3a9, 0x9f01, 0x72a0, 0x7d7b, 0xe2a, 0x8457, 0x0, 0x1);
        gbc.writeMem(0xd3a9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9f01);
        EXPECT(gbc.pc(), 0xd3aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3a9), 0x45);
        // 45 02DB
        gbc.setState(0x40e6, 0xcaf8, 0x8b50, 0x75a3, 0x2ac, 0xf013, 0x1, 0x0);
        gbc.writeMem(0x40e6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xcaf8);
        EXPECT(gbc.pc(), 0x40e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 02DC
        gbc.setState(0x3c2e, 0x1f1a, 0x75b0, 0x6bf3, 0xcd5e, 0x9769, 0x1, 0x1);
        gbc.writeMem(0x3c2e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1f1a);
        EXPECT(gbc.pc(), 0x3c2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 02DD
        gbc.setState(0x5115, 0x1b45, 0xbd20, 0x9132, 0xc20f, 0xc22c, 0x0, 0x1);
        gbc.writeMem(0x5115, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1b45);
        EXPECT(gbc.pc(), 0x5116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 02DE
        gbc.setState(0x460b, 0x9a1d, 0x9b0, 0xf1cf, 0x51f0, 0x8bb4, 0x1, 0x1);
        gbc.writeMem(0x460b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9a1d);
        EXPECT(gbc.pc(), 0x460c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 02DF
        gbc.setState(0xd1aa, 0x8c15, 0x7680, 0x24c3, 0x85de, 0x8843, 0x0, 0x0);
        gbc.writeMem(0xd1aa, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8c15);
        EXPECT(gbc.pc(), 0xd1ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1aa), 0x45);
        // 45 02E0
        gbc.setState(0x104c, 0x65e7, 0xf7f0, 0x49ec, 0x3c3b, 0x3e62, 0x1, 0x0);
        gbc.writeMem(0x104c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x65e7);
        EXPECT(gbc.pc(), 0x104d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 02E1
        gbc.setState(0xf7, 0x610d, 0x9dc0, 0x33a, 0xa000, 0x91b9, 0x0, 0x1);
        gbc.writeMem(0xf7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x610d);
        EXPECT(gbc.pc(), 0xf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 02E2
        gbc.setState(0x2db0, 0xad60, 0xac50, 0x442b, 0x8b6c, 0x1196, 0x0, 0x1);
        gbc.writeMem(0x2db0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xad60);
        EXPECT(gbc.pc(), 0x2db1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 02E3
        gbc.setState(0xdae2, 0x5cb6, 0x870, 0x861b, 0x2c3, 0x6aaf, 0x0, 0x0);
        gbc.writeMem(0xdae2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5cb6);
        EXPECT(gbc.pc(), 0xdae3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae2), 0x45);
        // 45 02E4
        gbc.setState(0xe9c6, 0xbbe5, 0xa770, 0x2484, 0x8df0, 0x3252, 0x0, 0x0);
        gbc.writeMem(0xe9c6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbbe5);
        EXPECT(gbc.pc(), 0xe9c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c6), 0x45);
        // 45 02E5
        gbc.setState(0xe7c8, 0x35df, 0x7cd0, 0x1d25, 0xed2f, 0x9758, 0x1, 0x1);
        gbc.writeMem(0xe7c8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x35df);
        EXPECT(gbc.pc(), 0xe7c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7c8), 0x45);
        // 45 02E6
        gbc.setState(0xc1c, 0x8f09, 0xf7c0, 0x668e, 0xddfc, 0x55c, 0x1, 0x0);
        gbc.writeMem(0xc1c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8f09);
        EXPECT(gbc.pc(), 0xc1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 02E7
        gbc.setState(0x3b84, 0x60a0, 0x350, 0x61a, 0x29ed, 0x61ee, 0x1, 0x0);
        gbc.writeMem(0x3b84, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x60a0);
        EXPECT(gbc.pc(), 0x3b85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 02E8
        gbc.setState(0x73dc, 0xe782, 0x1400, 0xad45, 0xe536, 0x37a, 0x1, 0x1);
        gbc.writeMem(0x73dc, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe782);
        EXPECT(gbc.pc(), 0x73dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 02E9
        gbc.setState(0x495d, 0xd7ac, 0x31f0, 0x45ee, 0xa4e3, 0x51f7, 0x1, 0x1);
        gbc.writeMem(0x495d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd7ac);
        EXPECT(gbc.pc(), 0x495e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 02EA
        gbc.setState(0x21cc, 0x5e6c, 0x7e60, 0x375e, 0xcb16, 0x6e1a, 0x1, 0x0);
        gbc.writeMem(0x21cc, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5e6c);
        EXPECT(gbc.pc(), 0x21cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 02EC
        gbc.setState(0x4285, 0x928, 0xbc50, 0x7813, 0x52b9, 0x1fb8, 0x0, 0x1);
        gbc.writeMem(0x4285, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x928);
        EXPECT(gbc.pc(), 0x4286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 02ED
        gbc.setState(0xddd5, 0xd3c9, 0x4b60, 0xe20, 0x3f55, 0xa22e, 0x1, 0x0);
        gbc.writeMem(0xddd5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd3c9);
        EXPECT(gbc.pc(), 0xddd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddd5), 0x45);
        // 45 02EE
        gbc.setState(0xc1d7, 0x6feb, 0xb2e0, 0x7, 0xc087, 0x7330, 0x1, 0x1);
        gbc.writeMem(0xc1d7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6feb);
        EXPECT(gbc.pc(), 0xc1d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1d7), 0x45);
        // 45 02EF
        gbc.setState(0xe521, 0xd9be, 0xf080, 0xe816, 0x15ee, 0x7161, 0x1, 0x0);
        gbc.writeMem(0xe521, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd9be);
        EXPECT(gbc.pc(), 0xe522);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe521), 0x45);
        // 45 02F0
        gbc.setState(0x3c0a, 0xafe7, 0x6730, 0xc4a3, 0x74e8, 0x75c8, 0x1, 0x0);
        gbc.writeMem(0x3c0a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xafe7);
        EXPECT(gbc.pc(), 0x3c0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 02F1
        gbc.setState(0xc935, 0xd7d7, 0x54b0, 0xf280, 0x952c, 0x2b4d, 0x0, 0x0);
        gbc.writeMem(0xc935, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd7d7);
        EXPECT(gbc.pc(), 0xc936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc935), 0x45);
        // 45 02F2
        gbc.setState(0xc6db, 0x8cb9, 0x6800, 0x2f3a, 0x826b, 0x150f, 0x1, 0x1);
        gbc.writeMem(0xc6db, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8cb9);
        EXPECT(gbc.pc(), 0xc6dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6db), 0x45);
        // 45 02F3
        gbc.setState(0xad2e, 0x177f, 0xc820, 0x22ec, 0xba7c, 0x6e29, 0x0, 0x0);
        gbc.writeMem(0xad2e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x177f);
        EXPECT(gbc.pc(), 0xad2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad2e), 0x45);
        // 45 02F4
        gbc.setState(0x7308, 0x5de3, 0x7180, 0xc367, 0x80bf, 0x2e49, 0x0, 0x0);
        gbc.writeMem(0x7308, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5de3);
        EXPECT(gbc.pc(), 0x7309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 02F5
        gbc.setState(0x3e8a, 0xa638, 0x3710, 0x80c5, 0x8717, 0xf187, 0x0, 0x1);
        gbc.writeMem(0x3e8a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa638);
        EXPECT(gbc.pc(), 0x3e8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 02F6
        gbc.setState(0x2e3f, 0xfb6e, 0x43f0, 0x9187, 0xcbb2, 0xf370, 0x0, 0x0);
        gbc.writeMem(0x2e3f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xfb6e);
        EXPECT(gbc.pc(), 0x2e40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 02F7
        gbc.setState(0xae6f, 0xec84, 0xb0f0, 0x14d2, 0xac5f, 0x901, 0x1, 0x1);
        gbc.writeMem(0xae6f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xec84);
        EXPECT(gbc.pc(), 0xae70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae6f), 0x45);
        // 45 02F8
        gbc.setState(0x36af, 0xdc6c, 0x9650, 0x1237, 0x3b43, 0x75e1, 0x0, 0x0);
        gbc.writeMem(0x36af, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xdc6c);
        EXPECT(gbc.pc(), 0x36b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 02F9
        gbc.setState(0xa497, 0x8c57, 0x9ee0, 0x60bc, 0xa278, 0x3bde, 0x0, 0x0);
        gbc.writeMem(0xa497, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8c57);
        EXPECT(gbc.pc(), 0xa498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa497), 0x45);
        // 45 02FA
        gbc.setState(0x6249, 0x9e2b, 0xaef0, 0x4c0, 0x4eda, 0x6047, 0x1, 0x1);
        gbc.writeMem(0x6249, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9e2b);
        EXPECT(gbc.pc(), 0x624a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 02FB
        gbc.setState(0x8bf0, 0xa87a, 0xbc40, 0x6039, 0x448e, 0x3901, 0x1, 0x0);
        gbc.writeMem(0x8bf0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa87a);
        EXPECT(gbc.pc(), 0x8bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bf0), 0x45);
        // 45 02FC
        gbc.setState(0xc819, 0xebdf, 0x9450, 0xc6, 0xb5e7, 0x32a6, 0x0, 0x1);
        gbc.writeMem(0xc819, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xebdf);
        EXPECT(gbc.pc(), 0xc81a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc819), 0x45);
        // 45 02FD
        gbc.setState(0x6152, 0xf4df, 0xbb80, 0xf0f2, 0x1c12, 0xbdca, 0x1, 0x0);
        gbc.writeMem(0x6152, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf4df);
        EXPECT(gbc.pc(), 0x6153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 02FE
        gbc.setState(0x32fb, 0x17c8, 0x2b20, 0x33e9, 0x6eab, 0x2657, 0x0, 0x1);
        gbc.writeMem(0x32fb, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x17c8);
        EXPECT(gbc.pc(), 0x32fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 02FF
        gbc.setState(0xce38, 0xbd46, 0x2440, 0xdfc, 0x520f, 0xc2b0, 0x1, 0x0);
        gbc.writeMem(0xce38, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xbd46);
        EXPECT(gbc.pc(), 0xce39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce38), 0x45);
        // 45 0300
        gbc.setState(0xe1a5, 0x65df, 0xf0a0, 0xd54d, 0x485f, 0x93ad, 0x1, 0x1);
        gbc.writeMem(0xe1a5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x65df);
        EXPECT(gbc.pc(), 0xe1a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1a5), 0x45);
        // 45 0301
        gbc.setState(0x8cb2, 0x4553, 0x9710, 0xc0aa, 0xd57, 0xcbf8, 0x0, 0x0);
        gbc.writeMem(0x8cb2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4553);
        EXPECT(gbc.pc(), 0x8cb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cb2), 0x45);
        // 45 0302
        gbc.setState(0xad88, 0x7edb, 0x610, 0xd03c, 0xc857, 0xbd32, 0x1, 0x1);
        gbc.writeMem(0xad88, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7edb);
        EXPECT(gbc.pc(), 0xad89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad88), 0x45);
        // 45 0303
        gbc.setState(0x6667, 0x7e2d, 0xabc0, 0xe3a4, 0xc720, 0x8825, 0x1, 0x1);
        gbc.writeMem(0x6667, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7e2d);
        EXPECT(gbc.pc(), 0x6668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0304
        gbc.setState(0x2cf7, 0xb549, 0x9470, 0x88d4, 0xde4f, 0xf104, 0x1, 0x1);
        gbc.writeMem(0x2cf7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb549);
        EXPECT(gbc.pc(), 0x2cf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0305
        gbc.setState(0xe38, 0x6dbb, 0xfc00, 0xbb3f, 0xb8a4, 0x1c0e, 0x1, 0x1);
        gbc.writeMem(0xe38, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6dbb);
        EXPECT(gbc.pc(), 0xe39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0306
        gbc.setState(0x4f0d, 0x566c, 0xae90, 0xaeb5, 0xdcad, 0x8ef, 0x0, 0x0);
        gbc.writeMem(0x4f0d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x566c);
        EXPECT(gbc.pc(), 0x4f0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0307
        gbc.setState(0x610c, 0x43e8, 0x57d0, 0xcb18, 0x4ad3, 0xb846, 0x0, 0x0);
        gbc.writeMem(0x610c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x43e8);
        EXPECT(gbc.pc(), 0x610d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0308
        gbc.setState(0xdd1, 0x41c8, 0xa220, 0xff3, 0xdf46, 0xc958, 0x0, 0x1);
        gbc.writeMem(0xdd1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x41c8);
        EXPECT(gbc.pc(), 0xdd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0309
        gbc.setState(0x5234, 0x3e8d, 0x8d80, 0x7730, 0x7678, 0x98b3, 0x1, 0x1);
        gbc.writeMem(0x5234, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x3e8d);
        EXPECT(gbc.pc(), 0x5235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 030A
        gbc.setState(0xe7a6, 0x824d, 0xff60, 0x43eb, 0x2b68, 0xeff8, 0x0, 0x0);
        gbc.writeMem(0xe7a6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x824d);
        EXPECT(gbc.pc(), 0xe7a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7a6), 0x45);
        // 45 030B
        gbc.setState(0x1705, 0xf3a8, 0x2890, 0x640, 0xdc21, 0xbfbd, 0x1, 0x0);
        gbc.writeMem(0x1705, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf3a8);
        EXPECT(gbc.pc(), 0x1706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 030C
        gbc.setState(0xd7df, 0xc58b, 0x6ba0, 0xb9e5, 0xfb75, 0x96, 0x0, 0x0);
        gbc.writeMem(0xd7df, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc58b);
        EXPECT(gbc.pc(), 0xd7e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7df), 0x45);
        // 45 030D
        gbc.setState(0x2e8c, 0x7eba, 0x7720, 0xddc0, 0xa0e3, 0xf82, 0x1, 0x0);
        gbc.writeMem(0x2e8c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7eba);
        EXPECT(gbc.pc(), 0x2e8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 030E
        gbc.setState(0x6682, 0x6595, 0xf2e0, 0xd19d, 0x3687, 0xad46, 0x0, 0x0);
        gbc.writeMem(0x6682, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6595);
        EXPECT(gbc.pc(), 0x6683);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 030F
        gbc.setState(0x68fc, 0x4d06, 0xb540, 0xd729, 0x7a0, 0xd8fa, 0x0, 0x1);
        gbc.writeMem(0x68fc, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4d06);
        EXPECT(gbc.pc(), 0x68fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0310
        gbc.setState(0xedf1, 0x2e59, 0x1eb0, 0x4247, 0x4343, 0x9c8a, 0x0, 0x1);
        gbc.writeMem(0xedf1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2e59);
        EXPECT(gbc.pc(), 0xedf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedf1), 0x45);
        // 45 0311
        gbc.setState(0x12ed, 0x4e7f, 0xb10, 0xdff8, 0xc8d3, 0xa95, 0x0, 0x1);
        gbc.writeMem(0x12ed, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4e7f);
        EXPECT(gbc.pc(), 0x12ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0312
        gbc.setState(0xb4f1, 0x39d4, 0x2450, 0x5560, 0xa2f8, 0xf937, 0x1, 0x1);
        gbc.writeMem(0xb4f1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x39d4);
        EXPECT(gbc.pc(), 0xb4f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f1), 0x45);
        // 45 0313
        gbc.setState(0xed7e, 0x3983, 0x4e50, 0x63ed, 0xa473, 0xeb2, 0x0, 0x0);
        gbc.writeMem(0xed7e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3983);
        EXPECT(gbc.pc(), 0xed7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed7e), 0x45);
        // 45 0314
        gbc.setState(0xa73f, 0xc679, 0xc200, 0xc795, 0xf5e0, 0x600c, 0x0, 0x0);
        gbc.writeMem(0xa73f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc679);
        EXPECT(gbc.pc(), 0xa740);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa73f), 0x45);
        // 45 0315
        gbc.setState(0x8b78, 0x8ec5, 0xa7a0, 0x4268, 0x2dc, 0x847f, 0x0, 0x1);
        gbc.writeMem(0x8b78, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8ec5);
        EXPECT(gbc.pc(), 0x8b79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b78), 0x45);
        // 45 0316
        gbc.setState(0xaea, 0xc4b6, 0xe400, 0xa336, 0x8f0b, 0x7242, 0x1, 0x1);
        gbc.writeMem(0xaea, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc4b6);
        EXPECT(gbc.pc(), 0xaeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0317
        gbc.setState(0xa178, 0x8d33, 0xdf00, 0x7b41, 0x4e4f, 0x3f0, 0x1, 0x1);
        gbc.writeMem(0xa178, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8d33);
        EXPECT(gbc.pc(), 0xa179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa178), 0x45);
        // 45 0318
        gbc.setState(0x26b5, 0xe7cb, 0x2480, 0x259e, 0x7e7a, 0x1007, 0x0, 0x1);
        gbc.writeMem(0x26b5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe7cb);
        EXPECT(gbc.pc(), 0x26b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0319
        gbc.setState(0xce4, 0xe639, 0x50c0, 0x2422, 0xa26e, 0xb43, 0x0, 0x0);
        gbc.writeMem(0xce4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe639);
        EXPECT(gbc.pc(), 0xce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 031A
        gbc.setState(0x2345, 0xa438, 0xfa50, 0x9e4, 0xb1dd, 0x5aa3, 0x0, 0x0);
        gbc.writeMem(0x2345, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa438);
        EXPECT(gbc.pc(), 0x2346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 031B
        gbc.setState(0x4d1, 0xb17b, 0xa5e0, 0x5ce4, 0x7272, 0x7ae1, 0x0, 0x1);
        gbc.writeMem(0x4d1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb17b);
        EXPECT(gbc.pc(), 0x4d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 031C
        gbc.setState(0x96d7, 0x50b6, 0x3930, 0x1069, 0x3657, 0xd679, 0x1, 0x1);
        gbc.writeMem(0x96d7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x50b6);
        EXPECT(gbc.pc(), 0x96d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96d7), 0x45);
        // 45 031D
        gbc.setState(0xb0f2, 0xeab6, 0xb5f0, 0x775e, 0xd89, 0x4980, 0x1, 0x0);
        gbc.writeMem(0xb0f2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xeab6);
        EXPECT(gbc.pc(), 0xb0f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0f2), 0x45);
        // 45 031E
        gbc.setState(0x832, 0x780a, 0xa400, 0x7cf7, 0xa190, 0xd7d5, 0x1, 0x1);
        gbc.writeMem(0x832, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x780a);
        EXPECT(gbc.pc(), 0x833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 031F
        gbc.setState(0xc138, 0xa770, 0xe960, 0xb420, 0xef5b, 0x8a97, 0x1, 0x0);
        gbc.writeMem(0xc138, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa770);
        EXPECT(gbc.pc(), 0xc139);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc138), 0x45);
        // 45 0320
        gbc.setState(0x9180, 0xa7d4, 0x9880, 0x58c0, 0xf8e, 0xdb32, 0x0, 0x0);
        gbc.writeMem(0x9180, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa7d4);
        EXPECT(gbc.pc(), 0x9181);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9180), 0x45);
        // 45 0322
        gbc.setState(0x331f, 0x70e3, 0x6e40, 0x71f0, 0xa0ed, 0xc4fa, 0x0, 0x0);
        gbc.writeMem(0x331f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x70e3);
        EXPECT(gbc.pc(), 0x3320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0324
        gbc.setState(0x1b1d, 0x847b, 0x9bd0, 0xd143, 0x64b0, 0xa2f5, 0x1, 0x0);
        gbc.writeMem(0x1b1d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x847b);
        EXPECT(gbc.pc(), 0x1b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0325
        gbc.setState(0x3ad3, 0x970e, 0xc8b0, 0x4230, 0x3e6c, 0xf24b, 0x1, 0x1);
        gbc.writeMem(0x3ad3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x970e);
        EXPECT(gbc.pc(), 0x3ad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0326
        gbc.setState(0x8dea, 0x8c68, 0x5e0, 0x3232, 0x7117, 0xa2dc, 0x0, 0x0);
        gbc.writeMem(0x8dea, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8c68);
        EXPECT(gbc.pc(), 0x8deb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dea), 0x45);
        // 45 0327
        gbc.setState(0x25dd, 0x6554, 0x50b0, 0x9740, 0xf1bb, 0x72e6, 0x1, 0x1);
        gbc.writeMem(0x25dd, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6554);
        EXPECT(gbc.pc(), 0x25de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0328
        gbc.setState(0xbbb, 0xc798, 0xc270, 0x2a27, 0xbdfe, 0x25a6, 0x0, 0x1);
        gbc.writeMem(0xbbb, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc798);
        EXPECT(gbc.pc(), 0xbbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0329
        gbc.setState(0x3b58, 0x51e1, 0x38f0, 0x7d35, 0xbe4b, 0x7d40, 0x1, 0x0);
        gbc.writeMem(0x3b58, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x51e1);
        EXPECT(gbc.pc(), 0x3b59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 032A
        gbc.setState(0x27d5, 0xafeb, 0x9bf0, 0xb3ac, 0x7eca, 0x3bfd, 0x1, 0x1);
        gbc.writeMem(0x27d5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xafeb);
        EXPECT(gbc.pc(), 0x27d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 032B
        gbc.setState(0x7b52, 0xa73e, 0x8180, 0x54b1, 0x6a6b, 0x1f0b, 0x0, 0x0);
        gbc.writeMem(0x7b52, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa73e);
        EXPECT(gbc.pc(), 0x7b53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 032C
        gbc.setState(0x1e24, 0xe581, 0x3190, 0x63c3, 0x103a, 0x86f4, 0x0, 0x0);
        gbc.writeMem(0x1e24, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe581);
        EXPECT(gbc.pc(), 0x1e25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 032D
        gbc.setState(0x5dfe, 0x4d6e, 0xa8e0, 0xe15a, 0x4b33, 0xc3ad, 0x0, 0x1);
        gbc.writeMem(0x5dfe, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4d6e);
        EXPECT(gbc.pc(), 0x5dff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 032E
        gbc.setState(0x57db, 0x8d11, 0xed10, 0x46c7, 0xda29, 0x4aae, 0x0, 0x1);
        gbc.writeMem(0x57db, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8d11);
        EXPECT(gbc.pc(), 0x57dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 032F
        gbc.setState(0x8bd7, 0x4f04, 0xbd80, 0xb31a, 0x6233, 0x2d5d, 0x0, 0x1);
        gbc.writeMem(0x8bd7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x4f04);
        EXPECT(gbc.pc(), 0x8bd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bd7), 0x45);
        // 45 0330
        gbc.setState(0x248b, 0x1669, 0x9b60, 0x671e, 0xa049, 0x27ba, 0x0, 0x0);
        gbc.writeMem(0x248b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1669);
        EXPECT(gbc.pc(), 0x248c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0331
        gbc.setState(0xb978, 0x9579, 0x9360, 0x3e01, 0x6697, 0xaba4, 0x1, 0x0);
        gbc.writeMem(0xb978, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9579);
        EXPECT(gbc.pc(), 0xb979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb978), 0x45);
        // 45 0332
        gbc.setState(0x35b5, 0xbede, 0x8fd0, 0xb242, 0x6fd2, 0xe95, 0x1, 0x1);
        gbc.writeMem(0x35b5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xbede);
        EXPECT(gbc.pc(), 0x35b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0333
        gbc.setState(0xc3d7, 0x816f, 0xbf70, 0xed9, 0x4905, 0x7b2a, 0x0, 0x0);
        gbc.writeMem(0xc3d7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x816f);
        EXPECT(gbc.pc(), 0xc3d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3d7), 0x45);
        // 45 0334
        gbc.setState(0xa1be, 0xe26e, 0xc630, 0x9b5c, 0x7f43, 0x41a3, 0x1, 0x1);
        gbc.writeMem(0xa1be, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe26e);
        EXPECT(gbc.pc(), 0xa1bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1be), 0x45);
        // 45 0335
        gbc.setState(0x669, 0xed89, 0xecd0, 0xca8b, 0x3dc1, 0x1d4, 0x1, 0x0);
        gbc.writeMem(0x669, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xed89);
        EXPECT(gbc.pc(), 0x66a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0336
        gbc.setState(0x8c3f, 0xac0d, 0xbb90, 0x5cc0, 0x6d7c, 0x317, 0x1, 0x1);
        gbc.writeMem(0x8c3f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xac0d);
        EXPECT(gbc.pc(), 0x8c40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c3f), 0x45);
        // 45 0337
        gbc.setState(0xe52f, 0x7d49, 0x6580, 0x4d3b, 0x66e6, 0xa436, 0x0, 0x1);
        gbc.writeMem(0xe52f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7d49);
        EXPECT(gbc.pc(), 0xe530);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe52f), 0x45);
        // 45 0338
        gbc.setState(0x8cf, 0x2c22, 0x8d50, 0x1ed8, 0x1a50, 0xb9d5, 0x1, 0x1);
        gbc.writeMem(0x8cf, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2c22);
        EXPECT(gbc.pc(), 0x8d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0339
        gbc.setState(0x2e, 0xab0d, 0x1590, 0x7990, 0x3ddc, 0xe082, 0x1, 0x0);
        gbc.writeMem(0x2e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xab0d);
        EXPECT(gbc.pc(), 0x2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 033A
        gbc.setState(0xdf69, 0xc082, 0xa190, 0x847, 0x43ca, 0x34d9, 0x1, 0x0);
        gbc.writeMem(0xdf69, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc082);
        EXPECT(gbc.pc(), 0xdf6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf69), 0x45);
        // 45 033B
        gbc.setState(0x1d95, 0xaf81, 0x89f0, 0xdeb6, 0x71cf, 0xa655, 0x1, 0x0);
        gbc.writeMem(0x1d95, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xaf81);
        EXPECT(gbc.pc(), 0x1d96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 033C
        gbc.setState(0xee52, 0x9d52, 0x9ea0, 0xc54, 0x934a, 0x42b6, 0x1, 0x1);
        gbc.writeMem(0xee52, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9d52);
        EXPECT(gbc.pc(), 0xee53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee52), 0x45);
        // 45 033D
        gbc.setState(0xaf1f, 0xb6ae, 0x8030, 0xc0f9, 0xd786, 0x125c, 0x1, 0x0);
        gbc.writeMem(0xaf1f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb6ae);
        EXPECT(gbc.pc(), 0xaf20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf1f), 0x45);
        // 45 033E
        gbc.setState(0x9469, 0x4962, 0x97a0, 0xc09b, 0xf46c, 0x37b8, 0x0, 0x1);
        gbc.writeMem(0x9469, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4962);
        EXPECT(gbc.pc(), 0x946a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9469), 0x45);
        // 45 033F
        gbc.setState(0x5c1f, 0x7b62, 0x6de0, 0x1f42, 0x65d8, 0x9ef2, 0x0, 0x1);
        gbc.writeMem(0x5c1f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7b62);
        EXPECT(gbc.pc(), 0x5c20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0341
        gbc.setState(0x66be, 0x5ede, 0x6690, 0xca76, 0x2dd6, 0xaddd, 0x0, 0x0);
        gbc.writeMem(0x66be, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5ede);
        EXPECT(gbc.pc(), 0x66bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0342
        gbc.setState(0x441, 0x19f7, 0x2bd0, 0x105c, 0xebba, 0xd4d1, 0x1, 0x0);
        gbc.writeMem(0x441, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x19f7);
        EXPECT(gbc.pc(), 0x442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0343
        gbc.setState(0xcd4, 0x6923, 0x5cf0, 0xdc58, 0xbcc1, 0x1a9a, 0x0, 0x1);
        gbc.writeMem(0xcd4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6923);
        EXPECT(gbc.pc(), 0xcd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0344
        gbc.setState(0xbefb, 0x1c58, 0xb120, 0x832e, 0xb33d, 0xf443, 0x1, 0x0);
        gbc.writeMem(0xbefb, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1c58);
        EXPECT(gbc.pc(), 0xbefc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbefb), 0x45);
        // 45 0345
        gbc.setState(0xbb96, 0x40d6, 0xb200, 0x9c15, 0xff3d, 0x4e41, 0x1, 0x1);
        gbc.writeMem(0xbb96, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x40d6);
        EXPECT(gbc.pc(), 0xbb97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb96), 0x45);
        // 45 0346
        gbc.setState(0xe345, 0x8a4d, 0x7130, 0x658c, 0x954e, 0xf534, 0x1, 0x0);
        gbc.writeMem(0xe345, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8a4d);
        EXPECT(gbc.pc(), 0xe346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe345), 0x45);
        // 45 0347
        gbc.setState(0x7176, 0x8036, 0xfea0, 0x29a5, 0xb2f5, 0xef4c, 0x1, 0x1);
        gbc.writeMem(0x7176, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8036);
        EXPECT(gbc.pc(), 0x7177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0348
        gbc.setState(0x9cf7, 0xc057, 0xa300, 0x2b4f, 0x34be, 0xb4ed, 0x0, 0x1);
        gbc.writeMem(0x9cf7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc057);
        EXPECT(gbc.pc(), 0x9cf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf7), 0x45);
        // 45 0349
        gbc.setState(0x3bd3, 0x3ec9, 0xf3d0, 0x62d7, 0xd462, 0xa342, 0x0, 0x1);
        gbc.writeMem(0x3bd3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3ec9);
        EXPECT(gbc.pc(), 0x3bd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 034A
        gbc.setState(0xb2b8, 0x2546, 0xbd50, 0xe3de, 0xa969, 0x4725, 0x1, 0x1);
        gbc.writeMem(0xb2b8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2546);
        EXPECT(gbc.pc(), 0xb2b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b8), 0x45);
        // 45 034B
        gbc.setState(0xc891, 0x297d, 0xb70, 0xbf9b, 0xb253, 0x8302, 0x1, 0x0);
        gbc.writeMem(0xc891, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x297d);
        EXPECT(gbc.pc(), 0xc892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc891), 0x45);
        // 45 034C
        gbc.setState(0x9759, 0x3d9c, 0xdd20, 0x31e4, 0xcfed, 0xc36f, 0x1, 0x0);
        gbc.writeMem(0x9759, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3d9c);
        EXPECT(gbc.pc(), 0x975a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9759), 0x45);
        // 45 034D
        gbc.setState(0xab74, 0x9d6e, 0x4760, 0xaf56, 0xb12f, 0x5f9a, 0x0, 0x1);
        gbc.writeMem(0xab74, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9d6e);
        EXPECT(gbc.pc(), 0xab75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab74), 0x45);
        // 45 034E
        gbc.setState(0xe37a, 0xa33d, 0xf570, 0x3349, 0xc31f, 0x9c97, 0x0, 0x0);
        gbc.writeMem(0xe37a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa33d);
        EXPECT(gbc.pc(), 0xe37b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe37a), 0x45);
        // 45 034F
        gbc.setState(0x38af, 0xd7f0, 0xd8f0, 0xeed6, 0x1f39, 0x163, 0x0, 0x0);
        gbc.writeMem(0x38af, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd7f0);
        EXPECT(gbc.pc(), 0x38b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0350
        gbc.setState(0x58df, 0x6f2c, 0x6fe0, 0x82b1, 0x3ed9, 0xec0d, 0x0, 0x1);
        gbc.writeMem(0x58df, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6f2c);
        EXPECT(gbc.pc(), 0x58e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0351
        gbc.setState(0x88db, 0x316c, 0x9580, 0xb099, 0x1277, 0x8c85, 0x0, 0x0);
        gbc.writeMem(0x88db, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x316c);
        EXPECT(gbc.pc(), 0x88dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88db), 0x45);
        // 45 0352
        gbc.setState(0xbce3, 0xea99, 0xa260, 0x1b15, 0x175a, 0x9f64, 0x1, 0x1);
        gbc.writeMem(0xbce3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xea99);
        EXPECT(gbc.pc(), 0xbce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce3), 0x45);
        // 45 0353
        gbc.setState(0x281d, 0x3472, 0x3fc0, 0xa19a, 0x635c, 0xce00, 0x1, 0x0);
        gbc.writeMem(0x281d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3472);
        EXPECT(gbc.pc(), 0x281e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0354
        gbc.setState(0x6ac9, 0xaad6, 0x8a40, 0x1bfc, 0x141e, 0x5ba7, 0x0, 0x1);
        gbc.writeMem(0x6ac9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xaad6);
        EXPECT(gbc.pc(), 0x6aca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0355
        gbc.setState(0x150d, 0x2f3b, 0x2b40, 0x9456, 0xa3d, 0x6595, 0x1, 0x0);
        gbc.writeMem(0x150d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2f3b);
        EXPECT(gbc.pc(), 0x150e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0356
        gbc.setState(0x766b, 0xb280, 0x2530, 0x6b9, 0xeb52, 0xda04, 0x0, 0x1);
        gbc.writeMem(0x766b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb280);
        EXPECT(gbc.pc(), 0x766c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0357
        gbc.setState(0x718e, 0xce85, 0xe700, 0x6c90, 0xa419, 0x5d22, 0x0, 0x0);
        gbc.writeMem(0x718e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xce85);
        EXPECT(gbc.pc(), 0x718f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0358
        gbc.setState(0x4118, 0xe17a, 0x76e0, 0x4d10, 0x5817, 0x6267, 0x1, 0x1);
        gbc.writeMem(0x4118, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe17a);
        EXPECT(gbc.pc(), 0x4119);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0359
        gbc.setState(0x8da8, 0x9b3a, 0x45e0, 0x233d, 0x5252, 0x4208, 0x0, 0x0);
        gbc.writeMem(0x8da8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9b3a);
        EXPECT(gbc.pc(), 0x8da9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8da8), 0x45);
        // 45 035A
        gbc.setState(0xebf7, 0x86aa, 0xccb0, 0xf7db, 0xee0c, 0x13be, 0x1, 0x0);
        gbc.writeMem(0xebf7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x86aa);
        EXPECT(gbc.pc(), 0xebf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebf7), 0x45);
        // 45 035B
        gbc.setState(0x9254, 0x2391, 0xfa80, 0x4cb4, 0x7d04, 0xb46, 0x1, 0x1);
        gbc.writeMem(0x9254, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2391);
        EXPECT(gbc.pc(), 0x9255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9254), 0x45);
        // 45 035C
        gbc.setState(0x358d, 0x3a34, 0x8460, 0x779d, 0x948c, 0xc066, 0x1, 0x1);
        gbc.writeMem(0x358d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3a34);
        EXPECT(gbc.pc(), 0x358e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 035D
        gbc.setState(0xc89f, 0xea35, 0xec10, 0x510b, 0x26e8, 0x35ed, 0x1, 0x1);
        gbc.writeMem(0xc89f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xea35);
        EXPECT(gbc.pc(), 0xc8a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc89f), 0x45);
        // 45 035E
        gbc.setState(0xb9d8, 0xb426, 0x9630, 0xb251, 0x7c9f, 0x4c53, 0x1, 0x1);
        gbc.writeMem(0xb9d8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb426);
        EXPECT(gbc.pc(), 0xb9d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d8), 0x45);
        // 45 035F
        gbc.setState(0x340a, 0x143f, 0xcef0, 0x83ed, 0x3f01, 0x6ac0, 0x1, 0x1);
        gbc.writeMem(0x340a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x143f);
        EXPECT(gbc.pc(), 0x340b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0360
        gbc.setState(0xc3a9, 0x7009, 0x4030, 0x273c, 0xd730, 0x568c, 0x1, 0x0);
        gbc.writeMem(0xc3a9, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7009);
        EXPECT(gbc.pc(), 0xc3aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3a9), 0x45);
        // 45 0361
        gbc.setState(0xc6f2, 0x889a, 0x45d0, 0xb95f, 0xb526, 0x297a, 0x1, 0x1);
        gbc.writeMem(0xc6f2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x889a);
        EXPECT(gbc.pc(), 0xc6f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6f2), 0x45);
        // 45 0362
        gbc.setState(0x7bd6, 0x59e2, 0x3ff0, 0xf4ce, 0xe4dd, 0x7c7d, 0x1, 0x1);
        gbc.writeMem(0x7bd6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x59e2);
        EXPECT(gbc.pc(), 0x7bd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0363
        gbc.setState(0xc063, 0x398f, 0x3460, 0x4f05, 0x1651, 0x23, 0x0, 0x0);
        gbc.writeMem(0xc063, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x398f);
        EXPECT(gbc.pc(), 0xc064);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc063), 0x45);
        // 45 0364
        gbc.setState(0xd478, 0xac75, 0x3700, 0xd415, 0x8908, 0xe175, 0x0, 0x0);
        gbc.writeMem(0xd478, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xac75);
        EXPECT(gbc.pc(), 0xd479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd478), 0x45);
        // 45 0365
        gbc.setState(0x2d8a, 0xe0cd, 0x78c0, 0x495c, 0x86cb, 0x3df9, 0x1, 0x1);
        gbc.writeMem(0x2d8a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe0cd);
        EXPECT(gbc.pc(), 0x2d8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0366
        gbc.setState(0x3189, 0x8bb6, 0xed20, 0x9e0a, 0x331a, 0x24de, 0x1, 0x1);
        gbc.writeMem(0x3189, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8bb6);
        EXPECT(gbc.pc(), 0x318a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0367
        gbc.setState(0xdc21, 0xd9e2, 0x6ce0, 0x1d8c, 0xf5a9, 0xa224, 0x0, 0x1);
        gbc.writeMem(0xdc21, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd9e2);
        EXPECT(gbc.pc(), 0xdc22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc21), 0x45);
        // 45 0368
        gbc.setState(0x12a3, 0xe497, 0x7c20, 0xef3c, 0x290b, 0x6610, 0x0, 0x0);
        gbc.writeMem(0x12a3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe497);
        EXPECT(gbc.pc(), 0x12a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0369
        gbc.setState(0x264a, 0x38f4, 0x79d0, 0xc6c9, 0xadee, 0x2152, 0x1, 0x0);
        gbc.writeMem(0x264a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x38f4);
        EXPECT(gbc.pc(), 0x264b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 036A
        gbc.setState(0x6c07, 0x7e8a, 0x7d70, 0x9871, 0x8699, 0x55e1, 0x1, 0x0);
        gbc.writeMem(0x6c07, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7e8a);
        EXPECT(gbc.pc(), 0x6c08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 036B
        gbc.setState(0x6333, 0x8bef, 0x5fc0, 0x4a48, 0x48f2, 0x5f87, 0x0, 0x0);
        gbc.writeMem(0x6333, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8bef);
        EXPECT(gbc.pc(), 0x6334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 036D
        gbc.setState(0x4868, 0x713b, 0x7570, 0x6932, 0x4ee3, 0xe28, 0x0, 0x1);
        gbc.writeMem(0x4868, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x713b);
        EXPECT(gbc.pc(), 0x4869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 036E
        gbc.setState(0x7b9b, 0x354, 0x15e0, 0x7539, 0x613e, 0xcf94, 0x0, 0x0);
        gbc.writeMem(0x7b9b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x354);
        EXPECT(gbc.pc(), 0x7b9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 036F
        gbc.setState(0xb24b, 0xe5e9, 0xa390, 0x2d8e, 0x5ec8, 0xc9b0, 0x0, 0x1);
        gbc.writeMem(0xb24b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe5e9);
        EXPECT(gbc.pc(), 0xb24c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb24b), 0x45);
        // 45 0370
        gbc.setState(0x5b0a, 0x6b58, 0xd260, 0x75a3, 0x4d97, 0x986a, 0x1, 0x1);
        gbc.writeMem(0x5b0a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6b58);
        EXPECT(gbc.pc(), 0x5b0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0371
        gbc.setState(0xadbe, 0x8551, 0x31a0, 0x4455, 0xcc66, 0xf609, 0x1, 0x1);
        gbc.writeMem(0xadbe, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8551);
        EXPECT(gbc.pc(), 0xadbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadbe), 0x45);
        // 45 0372
        gbc.setState(0x93f2, 0x86c4, 0x54b0, 0x7eec, 0x68fe, 0xf633, 0x1, 0x0);
        gbc.writeMem(0x93f2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x86c4);
        EXPECT(gbc.pc(), 0x93f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93f2), 0x45);
        // 45 0373
        gbc.setState(0xa49d, 0xa79c, 0xe600, 0xe642, 0xf3d8, 0x9b45, 0x0, 0x1);
        gbc.writeMem(0xa49d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa79c);
        EXPECT(gbc.pc(), 0xa49e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa49d), 0x45);
        // 45 0374
        gbc.setState(0x111a, 0xd7f3, 0x51f0, 0x31d5, 0x93bd, 0x8a7e, 0x1, 0x0);
        gbc.writeMem(0x111a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd7f3);
        EXPECT(gbc.pc(), 0x111b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0375
        gbc.setState(0xeea3, 0x6606, 0xea20, 0x7036, 0x6c2, 0x8a19, 0x1, 0x1);
        gbc.writeMem(0xeea3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6606);
        EXPECT(gbc.pc(), 0xeea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeea3), 0x45);
        // 45 0376
        gbc.setState(0x6b25, 0x4084, 0x7910, 0xbb8b, 0x5fbb, 0x638b, 0x1, 0x1);
        gbc.writeMem(0x6b25, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4084);
        EXPECT(gbc.pc(), 0x6b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0377
        gbc.setState(0xc771, 0xce87, 0x7430, 0x8f12, 0x1812, 0xd044, 0x0, 0x1);
        gbc.writeMem(0xc771, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xce87);
        EXPECT(gbc.pc(), 0xc772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc771), 0x45);
        // 45 0378
        gbc.setState(0x6571, 0xc700, 0xb7c0, 0xdf9e, 0x7329, 0xd75d, 0x0, 0x1);
        gbc.writeMem(0x6571, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc700);
        EXPECT(gbc.pc(), 0x6572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0379
        gbc.setState(0x2834, 0xb289, 0x3040, 0xe74e, 0x7c31, 0x8ccd, 0x0, 0x1);
        gbc.writeMem(0x2834, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb289);
        EXPECT(gbc.pc(), 0x2835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 037A
        gbc.setState(0x9825, 0xd770, 0xdb00, 0xa622, 0xd987, 0x878a, 0x1, 0x0);
        gbc.writeMem(0x9825, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd770);
        EXPECT(gbc.pc(), 0x9826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9825), 0x45);
        // 45 037B
        gbc.setState(0x33bc, 0x1511, 0x1810, 0x78a3, 0xe9ea, 0xd011, 0x1, 0x0);
        gbc.writeMem(0x33bc, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1511);
        EXPECT(gbc.pc(), 0x33bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 037C
        gbc.setState(0x37b8, 0x3f57, 0x6870, 0xf590, 0xb5ff, 0x2d55, 0x1, 0x0);
        gbc.writeMem(0x37b8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x3f57);
        EXPECT(gbc.pc(), 0x37b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 037D
        gbc.setState(0x8264, 0x5b0a, 0x80d0, 0xc43a, 0xf6b9, 0x89e3, 0x0, 0x0);
        gbc.writeMem(0x8264, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5b0a);
        EXPECT(gbc.pc(), 0x8265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8264), 0x45);
        // 45 037E
        gbc.setState(0x4029, 0xa47f, 0xe7d0, 0xe406, 0xec2e, 0xe8de, 0x1, 0x0);
        gbc.writeMem(0x4029, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa47f);
        EXPECT(gbc.pc(), 0x402a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0380
        gbc.setState(0xe155, 0x5459, 0x8c30, 0x3eb3, 0xc57d, 0x839b, 0x1, 0x1);
        gbc.writeMem(0xe155, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5459);
        EXPECT(gbc.pc(), 0xe156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe155), 0x45);
        // 45 0381
        gbc.setState(0x27dc, 0x3ba6, 0x68d0, 0x3835, 0x33cd, 0x72af, 0x0, 0x1);
        gbc.writeMem(0x27dc, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3ba6);
        EXPECT(gbc.pc(), 0x27dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0382
        gbc.setState(0xbc89, 0xa0b3, 0x97e0, 0xb996, 0xf014, 0xffed, 0x1, 0x1);
        gbc.writeMem(0xbc89, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa0b3);
        EXPECT(gbc.pc(), 0xbc8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc89), 0x45);
        // 45 0383
        gbc.setState(0x1207, 0x84a7, 0xd640, 0xc448, 0x761c, 0x2cd5, 0x0, 0x0);
        gbc.writeMem(0x1207, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x84a7);
        EXPECT(gbc.pc(), 0x1208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0384
        gbc.setState(0x5885, 0xb927, 0x6790, 0x4456, 0x2fe9, 0xa677, 0x1, 0x0);
        gbc.writeMem(0x5885, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb927);
        EXPECT(gbc.pc(), 0x5886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0385
        gbc.setState(0x4e92, 0xbb1, 0xb940, 0x700c, 0xafa, 0xdd54, 0x1, 0x1);
        gbc.writeMem(0x4e92, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xbb1);
        EXPECT(gbc.pc(), 0x4e93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0386
        gbc.setState(0x146, 0x9e78, 0xe170, 0x67b6, 0x102f, 0x4d84, 0x1, 0x0);
        gbc.writeMem(0x146, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9e78);
        EXPECT(gbc.pc(), 0x147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0387
        gbc.setState(0xb871, 0xed37, 0xf820, 0x88e, 0x69f1, 0x78d5, 0x1, 0x1);
        gbc.writeMem(0xb871, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xed37);
        EXPECT(gbc.pc(), 0xb872);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb871), 0x45);
        // 45 0388
        gbc.setState(0x285e, 0x38a2, 0xe6d0, 0xb139, 0x629, 0xd7bf, 0x1, 0x0);
        gbc.writeMem(0x285e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x38a2);
        EXPECT(gbc.pc(), 0x285f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0389
        gbc.setState(0x22a, 0xc720, 0x84b0, 0x3838, 0xc82f, 0xc6c, 0x0, 0x0);
        gbc.writeMem(0x22a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc720);
        EXPECT(gbc.pc(), 0x22b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 038A
        gbc.setState(0x337f, 0x4827, 0x93b0, 0x1b0f, 0x5644, 0xe6ec, 0x1, 0x0);
        gbc.writeMem(0x337f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4827);
        EXPECT(gbc.pc(), 0x3380);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 038B
        gbc.setState(0x4956, 0x718b, 0xc5f0, 0x9e30, 0xefb9, 0x96b1, 0x1, 0x1);
        gbc.writeMem(0x4956, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x718b);
        EXPECT(gbc.pc(), 0x4957);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 038C
        gbc.setState(0x6f77, 0xb5c4, 0x4ed0, 0xccb6, 0x30f5, 0xb8ac, 0x0, 0x0);
        gbc.writeMem(0x6f77, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb5c4);
        EXPECT(gbc.pc(), 0x6f78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 038D
        gbc.setState(0xcf8d, 0x9f3, 0xc670, 0x8707, 0xc65a, 0xd859, 0x0, 0x1);
        gbc.writeMem(0xcf8d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9f3);
        EXPECT(gbc.pc(), 0xcf8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf8d), 0x45);
        // 45 038E
        gbc.setState(0x185, 0xb365, 0xe960, 0x6faf, 0x445c, 0x5283, 0x0, 0x1);
        gbc.writeMem(0x185, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb365);
        EXPECT(gbc.pc(), 0x186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 038F
        gbc.setState(0x5635, 0x3345, 0xaa60, 0x79d5, 0xb1b9, 0x7cb1, 0x0, 0x0);
        gbc.writeMem(0x5635, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3345);
        EXPECT(gbc.pc(), 0x5636);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0390
        gbc.setState(0x11e3, 0x20dd, 0x2a00, 0xb566, 0x856c, 0xdd89, 0x1, 0x1);
        gbc.writeMem(0x11e3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x20dd);
        EXPECT(gbc.pc(), 0x11e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 0391
        gbc.setState(0x63f6, 0xed01, 0x9f0, 0x6227, 0xf3f9, 0x7886, 0x1, 0x0);
        gbc.writeMem(0x63f6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xed01);
        EXPECT(gbc.pc(), 0x63f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 0392
        gbc.setState(0xeb3b, 0xb370, 0x7a80, 0x5117, 0x8484, 0xc5f3, 0x0, 0x0);
        gbc.writeMem(0xeb3b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb370);
        EXPECT(gbc.pc(), 0xeb3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb3b), 0x45);
        // 45 0393
        gbc.setState(0x1ad5, 0xae90, 0x88e0, 0x5867, 0x3d03, 0x387, 0x0, 0x1);
        gbc.writeMem(0x1ad5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xae90);
        EXPECT(gbc.pc(), 0x1ad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 0395
        gbc.setState(0xcb9f, 0x39ec, 0xbff0, 0xacad, 0x9b15, 0x65f7, 0x1, 0x0);
        gbc.writeMem(0xcb9f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x39ec);
        EXPECT(gbc.pc(), 0xcba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb9f), 0x45);
        // 45 0396
        gbc.setState(0xcd1e, 0x7eb1, 0xf120, 0x929a, 0x6c70, 0xc504, 0x0, 0x0);
        gbc.writeMem(0xcd1e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7eb1);
        EXPECT(gbc.pc(), 0xcd1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd1e), 0x45);
        // 45 0397
        gbc.setState(0xc1c1, 0x9970, 0x9540, 0x829f, 0xb6b8, 0x2849, 0x1, 0x1);
        gbc.writeMem(0xc1c1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9970);
        EXPECT(gbc.pc(), 0xc1c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1c1), 0x45);
        // 45 0398
        gbc.setState(0x5e41, 0xe376, 0xd5d0, 0x6d7d, 0x53d1, 0xf124, 0x1, 0x0);
        gbc.writeMem(0x5e41, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe376);
        EXPECT(gbc.pc(), 0x5e42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 0399
        gbc.setState(0x9c96, 0xd93d, 0xf5d0, 0xe16e, 0x9534, 0x6420, 0x0, 0x1);
        gbc.writeMem(0x9c96, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd93d);
        EXPECT(gbc.pc(), 0x9c97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c96), 0x45);
        // 45 039A
        gbc.setState(0x1bca, 0x7416, 0x8f10, 0x6722, 0xf0d9, 0xf427, 0x1, 0x0);
        gbc.writeMem(0x1bca, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7416);
        EXPECT(gbc.pc(), 0x1bcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 039B
        gbc.setState(0x6cdf, 0x3c5, 0x1000, 0xdc1f, 0x817c, 0x2487, 0x0, 0x0);
        gbc.writeMem(0x6cdf, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3c5);
        EXPECT(gbc.pc(), 0x6ce0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 039C
        gbc.setState(0xb8bb, 0xcaf0, 0x2d40, 0x2540, 0xccc5, 0xc750, 0x0, 0x0);
        gbc.writeMem(0xb8bb, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xcaf0);
        EXPECT(gbc.pc(), 0xb8bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8bb), 0x45);
        // 45 039D
        gbc.setState(0xa3c, 0xd300, 0x9b50, 0xf128, 0xb532, 0xf330, 0x0, 0x0);
        gbc.writeMem(0xa3c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd300);
        EXPECT(gbc.pc(), 0xa3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 039E
        gbc.setState(0x81ba, 0x6c28, 0x6a80, 0x2e77, 0x35c1, 0xe6db, 0x1, 0x0);
        gbc.writeMem(0x81ba, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6c28);
        EXPECT(gbc.pc(), 0x81bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ba), 0x45);
        // 45 039F
        gbc.setState(0x20a0, 0x1874, 0x76d0, 0xac59, 0xe597, 0x3fed, 0x0, 0x0);
        gbc.writeMem(0x20a0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1874);
        EXPECT(gbc.pc(), 0x20a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 03A0
        gbc.setState(0x5ab8, 0x4568, 0x5690, 0xd406, 0xd94b, 0x5ce8, 0x1, 0x1);
        gbc.writeMem(0x5ab8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4568);
        EXPECT(gbc.pc(), 0x5ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 03A1
        gbc.setState(0x2957, 0x9f86, 0x8fd0, 0xddea, 0x1a31, 0x2511, 0x0, 0x1);
        gbc.writeMem(0x2957, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9f86);
        EXPECT(gbc.pc(), 0x2958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 03A2
        gbc.setState(0xc61c, 0xa12b, 0x9490, 0xaf4b, 0x3ca1, 0x178a, 0x0, 0x1);
        gbc.writeMem(0xc61c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa12b);
        EXPECT(gbc.pc(), 0xc61d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc61c), 0x45);
        // 45 03A3
        gbc.setState(0xc0c2, 0x47d6, 0xccd0, 0x11b7, 0x1a2a, 0x2c88, 0x0, 0x1);
        gbc.writeMem(0xc0c2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x47d6);
        EXPECT(gbc.pc(), 0xc0c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0c2), 0x45);
        // 45 03A4
        gbc.setState(0xc528, 0x3e29, 0x6260, 0x2db5, 0xaa7, 0x64f0, 0x1, 0x1);
        gbc.writeMem(0xc528, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3e29);
        EXPECT(gbc.pc(), 0xc529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc528), 0x45);
        // 45 03A5
        gbc.setState(0x4194, 0x5fa5, 0xa670, 0x7f9a, 0xd263, 0x6e34, 0x1, 0x1);
        gbc.writeMem(0x4194, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5fa5);
        EXPECT(gbc.pc(), 0x4195);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 03A6
        gbc.setState(0xa24e, 0x3976, 0xb900, 0xefe4, 0x171, 0x941f, 0x0, 0x0);
        gbc.writeMem(0xa24e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3976);
        EXPECT(gbc.pc(), 0xa24f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa24e), 0x45);
        // 45 03A7
        gbc.setState(0x4a32, 0xad25, 0xbb60, 0x44b7, 0x770f, 0xa99f, 0x0, 0x1);
        gbc.writeMem(0x4a32, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xad25);
        EXPECT(gbc.pc(), 0x4a33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 03A8
        gbc.setState(0x69cf, 0x5e16, 0x6a40, 0x25a7, 0xf56b, 0xa6d9, 0x0, 0x0);
        gbc.writeMem(0x69cf, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5e16);
        EXPECT(gbc.pc(), 0x69d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 03A9
        gbc.setState(0x7bb3, 0x849e, 0xa640, 0x3574, 0x528d, 0x3da4, 0x1, 0x1);
        gbc.writeMem(0x7bb3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x849e);
        EXPECT(gbc.pc(), 0x7bb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 03AA
        gbc.setState(0x28c5, 0x857b, 0x6e40, 0x7ac8, 0x291b, 0x6903, 0x1, 0x0);
        gbc.writeMem(0x28c5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x857b);
        EXPECT(gbc.pc(), 0x28c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 03AB
        gbc.setState(0xa9e1, 0x3888, 0x740, 0x1257, 0x96a3, 0xbb30, 0x0, 0x1);
        gbc.writeMem(0xa9e1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3888);
        EXPECT(gbc.pc(), 0xa9e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9e1), 0x45);
        // 45 03AC
        gbc.setState(0xc42a, 0xa6f0, 0x97b0, 0xeb61, 0x9954, 0x5025, 0x1, 0x1);
        gbc.writeMem(0xc42a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa6f0);
        EXPECT(gbc.pc(), 0xc42b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc42a), 0x45);
        // 45 03AD
        gbc.setState(0x47e, 0x1705, 0x97d0, 0xa460, 0xde62, 0x8bff, 0x1, 0x0);
        gbc.writeMem(0x47e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1705);
        EXPECT(gbc.pc(), 0x47f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 03AE
        gbc.setState(0x9653, 0x8f1f, 0x9ca0, 0xd5db, 0x8c5e, 0x2638, 0x1, 0x0);
        gbc.writeMem(0x9653, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8f1f);
        EXPECT(gbc.pc(), 0x9654);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9653), 0x45);
        // 45 03AF
        gbc.setState(0xab4f, 0x848c, 0xe410, 0x902f, 0xdc54, 0x2c2e, 0x0, 0x0);
        gbc.writeMem(0xab4f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x848c);
        EXPECT(gbc.pc(), 0xab50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab4f), 0x45);
        // 45 03B0
        gbc.setState(0x121b, 0x7125, 0x86f0, 0xc9e3, 0x73e6, 0x33c7, 0x0, 0x0);
        gbc.writeMem(0x121b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7125);
        EXPECT(gbc.pc(), 0x121c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 03B2
        gbc.setState(0x385e, 0x8e0, 0xe540, 0x8c42, 0x125f, 0xeeee, 0x0, 0x1);
        gbc.writeMem(0x385e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8e0);
        EXPECT(gbc.pc(), 0x385f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 03B3
        gbc.setState(0x37d6, 0xe48c, 0x62b0, 0x242d, 0x16d2, 0xce4e, 0x0, 0x0);
        gbc.writeMem(0x37d6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe48c);
        EXPECT(gbc.pc(), 0x37d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 03B5
        gbc.setState(0xcdb7, 0xa20e, 0xe320, 0x962a, 0x9f00, 0x174f, 0x1, 0x1);
        gbc.writeMem(0xcdb7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa20e);
        EXPECT(gbc.pc(), 0xcdb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb7), 0x45);
        // 45 03B6
        gbc.setState(0xad4, 0xfde4, 0xb620, 0x9ee0, 0x346a, 0xae0c, 0x0, 0x1);
        gbc.writeMem(0xad4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xfde4);
        EXPECT(gbc.pc(), 0xad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 03B7
        gbc.setState(0xddb7, 0x924a, 0xcda0, 0xe968, 0xc988, 0x3146, 0x1, 0x1);
        gbc.writeMem(0xddb7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x924a);
        EXPECT(gbc.pc(), 0xddb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddb7), 0x45);
        // 45 03B8
        gbc.setState(0x698b, 0x387d, 0x5bd0, 0xdd8b, 0x2dfd, 0x9911, 0x0, 0x0);
        gbc.writeMem(0x698b, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x387d);
        EXPECT(gbc.pc(), 0x698c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 03B9
        gbc.setState(0xdce1, 0xe7ec, 0x5670, 0x9d11, 0xf469, 0xdea8, 0x0, 0x0);
        gbc.writeMem(0xdce1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe7ec);
        EXPECT(gbc.pc(), 0xdce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdce1), 0x45);
        // 45 03BA
        gbc.setState(0xb8f7, 0x692a, 0xd6f0, 0xf92, 0x304c, 0xccec, 0x0, 0x1);
        gbc.writeMem(0xb8f7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x692a);
        EXPECT(gbc.pc(), 0xb8f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8f7), 0x45);
        // 45 03BB
        gbc.setState(0x5e00, 0x2740, 0x5a0, 0x9012, 0x3774, 0x72c8, 0x1, 0x1);
        gbc.writeMem(0x5e00, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2740);
        EXPECT(gbc.pc(), 0x5e01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 03BC
        gbc.setState(0x95b2, 0xd0ce, 0xa9a0, 0x5ccb, 0x5243, 0x4a16, 0x1, 0x1);
        gbc.writeMem(0x95b2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd0ce);
        EXPECT(gbc.pc(), 0x95b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95b2), 0x45);
        // 45 03BD
        gbc.setState(0x6b53, 0x793a, 0x77f0, 0x1763, 0xfc71, 0x77bf, 0x0, 0x1);
        gbc.writeMem(0x6b53, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x793a);
        EXPECT(gbc.pc(), 0x6b54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 03BE
        gbc.setState(0x4b0e, 0x7057, 0x9b20, 0xe384, 0x5e19, 0xca97, 0x1, 0x0);
        gbc.writeMem(0x4b0e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7057);
        EXPECT(gbc.pc(), 0x4b0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 03BF
        gbc.setState(0x69ad, 0x89fc, 0xab60, 0x1d94, 0x9011, 0x98ae, 0x0, 0x0);
        gbc.writeMem(0x69ad, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x89fc);
        EXPECT(gbc.pc(), 0x69ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 03C1
        gbc.setState(0x62ed, 0x4c, 0xc270, 0x5fec, 0xa53d, 0xaefa, 0x0, 0x0);
        gbc.writeMem(0x62ed, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4c);
        EXPECT(gbc.pc(), 0x62ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 03C2
        gbc.setState(0x833d, 0x51db, 0x1860, 0x734a, 0xae4b, 0x39dd, 0x1, 0x0);
        gbc.writeMem(0x833d, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x51db);
        EXPECT(gbc.pc(), 0x833e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x833d), 0x45);
        // 45 03C3
        gbc.setState(0xdca7, 0x9710, 0x4090, 0x93d7, 0xc0e5, 0xea2b, 0x1, 0x1);
        gbc.writeMem(0xdca7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9710);
        EXPECT(gbc.pc(), 0xdca8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdca7), 0x45);
        // 45 03C4
        gbc.setState(0x180f, 0x7e13, 0x73e0, 0xfa2b, 0x7435, 0x8e3f, 0x0, 0x1);
        gbc.writeMem(0x180f, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7e13);
        EXPECT(gbc.pc(), 0x1810);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 03C5
        gbc.setState(0x17bd, 0x3176, 0x0, 0xffa4, 0xc69, 0x51b5, 0x1, 0x1);
        gbc.writeMem(0x17bd, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3176);
        EXPECT(gbc.pc(), 0x17be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 03C6
        gbc.setState(0x5c2e, 0x7af7, 0xe860, 0x9d22, 0xebfa, 0x97d, 0x1, 0x1);
        gbc.writeMem(0x5c2e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7af7);
        EXPECT(gbc.pc(), 0x5c2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 03C7
        gbc.setState(0x67e5, 0xbde4, 0x28e0, 0xabc3, 0x2a0b, 0xaaec, 0x0, 0x1);
        gbc.writeMem(0x67e5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xbde4);
        EXPECT(gbc.pc(), 0x67e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 03C8
        gbc.setState(0x1a6a, 0xb056, 0x5570, 0x7e7d, 0x704e, 0xf12b, 0x0, 0x1);
        gbc.writeMem(0x1a6a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb056);
        EXPECT(gbc.pc(), 0x1a6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 03C9
        gbc.setState(0x3740, 0x3aab, 0xfa30, 0xc871, 0xe192, 0xf8a9, 0x0, 0x0);
        gbc.writeMem(0x3740, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3aab);
        EXPECT(gbc.pc(), 0x3741);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 03CA
        gbc.setState(0x9e86, 0xe841, 0x5180, 0xe09b, 0xbdb4, 0xeffc, 0x0, 0x0);
        gbc.writeMem(0x9e86, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe841);
        EXPECT(gbc.pc(), 0x9e87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e86), 0x45);
        // 45 03CB
        gbc.setState(0x4e83, 0xa7d4, 0x8000, 0x8d51, 0x1416, 0x95d4, 0x0, 0x1);
        gbc.writeMem(0x4e83, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa7d4);
        EXPECT(gbc.pc(), 0x4e84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 03CC
        gbc.setState(0xcca4, 0x6974, 0x9d30, 0xea4e, 0xcd09, 0xd770, 0x0, 0x1);
        gbc.writeMem(0xcca4, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6974);
        EXPECT(gbc.pc(), 0xcca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcca4), 0x45);
        // 45 03CD
        gbc.setState(0x66c8, 0x71c7, 0xd6a0, 0xa46d, 0x2655, 0x23d6, 0x0, 0x0);
        gbc.writeMem(0x66c8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x71c7);
        EXPECT(gbc.pc(), 0x66c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 03CE
        gbc.setState(0xe0a5, 0x439f, 0x74a0, 0xc60e, 0x9c6a, 0x4eb9, 0x0, 0x0);
        gbc.writeMem(0xe0a5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x439f);
        EXPECT(gbc.pc(), 0xe0a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0a5), 0x45);
        // 45 03CF
        gbc.setState(0xd801, 0xcb2e, 0x2f20, 0x95fe, 0x3b68, 0x75ff, 0x0, 0x1);
        gbc.writeMem(0xd801, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xcb2e);
        EXPECT(gbc.pc(), 0xd802);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd801), 0x45);
        // 45 03D0
        gbc.setState(0x9d23, 0x82aa, 0x6390, 0x3f39, 0x4804, 0x46cc, 0x0, 0x1);
        gbc.writeMem(0x9d23, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x82aa);
        EXPECT(gbc.pc(), 0x9d24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d23), 0x45);
        // 45 03D1
        gbc.setState(0x882, 0x443b, 0xa080, 0xab87, 0xb17b, 0x51f4, 0x1, 0x0);
        gbc.writeMem(0x882, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x443b);
        EXPECT(gbc.pc(), 0x883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 03D2
        gbc.setState(0x4ce1, 0x767, 0xee40, 0x2e85, 0xe484, 0x1ae2, 0x0, 0x0);
        gbc.writeMem(0x4ce1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x767);
        EXPECT(gbc.pc(), 0x4ce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 03D3
        gbc.setState(0xbc3, 0x4ccd, 0x74b0, 0x1684, 0x7406, 0x2b25, 0x1, 0x1);
        gbc.writeMem(0xbc3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4ccd);
        EXPECT(gbc.pc(), 0xbc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 03D4
        gbc.setState(0x907c, 0x552f, 0xfb90, 0x8046, 0x43f9, 0xae1e, 0x1, 0x1);
        gbc.writeMem(0x907c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x552f);
        EXPECT(gbc.pc(), 0x907d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x907c), 0x45);
        // 45 03D5
        gbc.setState(0xd3f7, 0x9aa5, 0x8a90, 0x243f, 0x208, 0x2b26, 0x1, 0x1);
        gbc.writeMem(0xd3f7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9aa5);
        EXPECT(gbc.pc(), 0xd3f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f7), 0x45);
        // 45 03D6
        gbc.setState(0x3291, 0xbce2, 0xb140, 0xdefb, 0x5239, 0x1832, 0x1, 0x0);
        gbc.writeMem(0x3291, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbce2);
        EXPECT(gbc.pc(), 0x3292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 45 03D7
        gbc.setState(0x16d6, 0xe862, 0x9e30, 0x7cc9, 0xc25e, 0xf7c2, 0x0, 0x1);
        gbc.writeMem(0x16d6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe862);
        EXPECT(gbc.pc(), 0x16d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 03D8
        gbc.setState(0xdca5, 0x828b, 0x3f20, 0x3eaa, 0xaff, 0xe18a, 0x0, 0x1);
        gbc.writeMem(0xdca5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x828b);
        EXPECT(gbc.pc(), 0xdca6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca5), 0x45);
        // 45 03D9
        gbc.setState(0x9b18, 0x6e7e, 0xaeb0, 0x8ddd, 0x821e, 0x8976, 0x1, 0x0);
        gbc.writeMem(0x9b18, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6e7e);
        EXPECT(gbc.pc(), 0x9b19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b18), 0x45);
        // 45 03DA
        gbc.setState(0x8aa1, 0x9218, 0xbc10, 0xebef, 0x56df, 0xf310, 0x1, 0x1);
        gbc.writeMem(0x8aa1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9218);
        EXPECT(gbc.pc(), 0x8aa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aa1), 0x45);
        // 45 03DB
        gbc.setState(0x5138, 0x4f5c, 0x8820, 0xff59, 0xd3b9, 0xea05, 0x1, 0x1);
        gbc.writeMem(0x5138, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4f5c);
        EXPECT(gbc.pc(), 0x5139);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 45 03DC
        gbc.setState(0xb5dc, 0xeda6, 0x9250, 0x1894, 0x57c8, 0x2091, 0x1, 0x0);
        gbc.writeMem(0xb5dc, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xeda6);
        EXPECT(gbc.pc(), 0xb5dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5dc), 0x45);
        // 45 03DE
        gbc.setState(0xe968, 0x16a9, 0xf8b0, 0xc479, 0x82d2, 0xb36c, 0x0, 0x0);
        gbc.writeMem(0xe968, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x16a9);
        EXPECT(gbc.pc(), 0xe969);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe968), 0x45);
        // 45 03DF
        gbc.setState(0x9b4c, 0x3e5c, 0xd480, 0xa130, 0xb42e, 0xa285, 0x0, 0x0);
        gbc.writeMem(0x9b4c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3e5c);
        EXPECT(gbc.pc(), 0x9b4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b4c), 0x45);
        // 45 03E0
        gbc.setState(0xb16e, 0x16b5, 0xed0, 0x308a, 0x7d94, 0x9eeb, 0x1, 0x1);
        gbc.writeMem(0xb16e, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x16b5);
        EXPECT(gbc.pc(), 0xb16f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb16e), 0x45);
        // 45 03E2
        gbc.setState(0x2cbb, 0xced3, 0x17b0, 0x5bf9, 0x830, 0xbcd6, 0x1, 0x1);
        gbc.writeMem(0x2cbb, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xced3);
        EXPECT(gbc.pc(), 0x2cbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 45 03E3
        gbc.setState(0x34bd, 0x6bdf, 0x9710, 0xfb7e, 0x3787, 0x2fbd, 0x0, 0x0);
        gbc.writeMem(0x34bd, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x6bdf);
        EXPECT(gbc.pc(), 0x34be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 45 03E5
        gbc.setState(0xc954, 0x64f3, 0x6410, 0xfcd9, 0x319d, 0x9e9a, 0x0, 0x0);
        gbc.writeMem(0xc954, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x64f3);
        EXPECT(gbc.pc(), 0xc955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc954), 0x45);
        // 45 03E6
        gbc.setState(0x8c55, 0xe9e2, 0x6d40, 0xcfe8, 0xa0c0, 0x1cfe, 0x1, 0x1);
        gbc.writeMem(0x8c55, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe9e2);
        EXPECT(gbc.pc(), 0x8c56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c55), 0x45);
        // 45 03E7
        gbc.setState(0x2570, 0x62a, 0x1a30, 0xf7d9, 0x205b, 0x17f2, 0x0, 0x0);
        gbc.writeMem(0x2570, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x62a);
        EXPECT(gbc.pc(), 0x2571);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
