    TEST(gbcemu, opcode_cb_62) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 62 0000
        gbc.setState(0x18f6, 0x84af, 0xb570, 0x8064, 0x1d74, 0x4954, 0x1, 0x0);
        gbc.writeMem(0x18f6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x84af, gbc.sp());
        EXPECT(0x18f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0002
        gbc.setState(0xc048, 0x26c, 0x890, 0xf65a, 0x4bac, 0x4274, 0x0, 0x1);
        gbc.writeMem(0xc048, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x26c, gbc.sp());
        EXPECT(0xc04a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc048));
        EXPECT(0x62, gbc.readMem(0xc049));
        // CB 62 0003
        gbc.setState(0x390d, 0xe240, 0x1340, 0xd92d, 0x5ff4, 0x6590, 0x1, 0x1);
        gbc.writeMem(0x390d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe240, gbc.sp());
        EXPECT(0x390f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0004
        gbc.setState(0xc23d, 0xae93, 0x940, 0xc89a, 0x56bd, 0x30af, 0x1, 0x0);
        gbc.writeMem(0xc23d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xae93, gbc.sp());
        EXPECT(0xc23f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc23d));
        EXPECT(0x62, gbc.readMem(0xc23e));
        // CB 62 0005
        gbc.setState(0xa0c5, 0x8c06, 0x63f0, 0x9bc, 0xdcb0, 0xf9d6, 0x1, 0x0);
        gbc.writeMem(0xa0c5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8c06, gbc.sp());
        EXPECT(0xa0c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c5));
        EXPECT(0x62, gbc.readMem(0xa0c6));
        // CB 62 0006
        gbc.setState(0x95fa, 0xc11d, 0x9fd0, 0x2139, 0xd515, 0x6e47, 0x0, 0x1);
        gbc.writeMem(0x95fa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc11d, gbc.sp());
        EXPECT(0x95fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95fa));
        EXPECT(0x62, gbc.readMem(0x95fb));
        // CB 62 0007
        gbc.setState(0x3f24, 0x380d, 0x24c0, 0x14f3, 0xe175, 0x14a9, 0x0, 0x1);
        gbc.writeMem(0x3f24, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x380d, gbc.sp());
        EXPECT(0x3f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0008
        gbc.setState(0x3931, 0x6d21, 0x6930, 0xba0d, 0xff15, 0x8a2, 0x1, 0x1);
        gbc.writeMem(0x3931, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6d21, gbc.sp());
        EXPECT(0x3933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0009
        gbc.setState(0xe69e, 0xe050, 0xe090, 0xfeb1, 0xd187, 0xc6b3, 0x0, 0x1);
        gbc.writeMem(0xe69e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe050, gbc.sp());
        EXPECT(0xe6a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe69e));
        EXPECT(0x62, gbc.readMem(0xe69f));
        // CB 62 000A
        gbc.setState(0x7d4e, 0xc044, 0xf160, 0xe070, 0xd82d, 0xfe5, 0x0, 0x0);
        gbc.writeMem(0x7d4e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc044, gbc.sp());
        EXPECT(0x7d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 000B
        gbc.setState(0x5d40, 0xdec9, 0x8570, 0x4baf, 0xf9c7, 0xa379, 0x1, 0x0);
        gbc.writeMem(0x5d40, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdec9, gbc.sp());
        EXPECT(0x5d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 000C
        gbc.setState(0x4ea5, 0x3ec3, 0x8450, 0x480d, 0xbaa8, 0xcbc6, 0x0, 0x0);
        gbc.writeMem(0x4ea5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3ec3, gbc.sp());
        EXPECT(0x4ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 000D
        gbc.setState(0x4f34, 0xf0fc, 0xa890, 0x9190, 0x5743, 0xaf0a, 0x0, 0x0);
        gbc.writeMem(0x4f34, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf0fc, gbc.sp());
        EXPECT(0x4f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 000E
        gbc.setState(0x4c1a, 0x5fc9, 0x53b0, 0x32a1, 0x8c2e, 0xf80a, 0x0, 0x1);
        gbc.writeMem(0x4c1a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5fc9, gbc.sp());
        EXPECT(0x4c1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 000F
        gbc.setState(0x934, 0x6385, 0xb870, 0x163e, 0x966e, 0x3a73, 0x0, 0x0);
        gbc.writeMem(0x934, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6385, gbc.sp());
        EXPECT(0x936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0010
        gbc.setState(0xace2, 0x3296, 0x7f90, 0xc97b, 0xd019, 0x6b43, 0x1, 0x0);
        gbc.writeMem(0xace2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3296, gbc.sp());
        EXPECT(0xace4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace2));
        EXPECT(0x62, gbc.readMem(0xace3));
        // CB 62 0011
        gbc.setState(0x8323, 0x3fac, 0x44e0, 0x5a94, 0x7520, 0x6608, 0x0, 0x0);
        gbc.writeMem(0x8323, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3fac, gbc.sp());
        EXPECT(0x8325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8323));
        EXPECT(0x62, gbc.readMem(0x8324));
        // CB 62 0012
        gbc.setState(0xa70c, 0xfb68, 0xda10, 0xee5d, 0x303f, 0xb4b4, 0x0, 0x0);
        gbc.writeMem(0xa70c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfb68, gbc.sp());
        EXPECT(0xa70e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa70c));
        EXPECT(0x62, gbc.readMem(0xa70d));
        // CB 62 0013
        gbc.setState(0xa6a9, 0x86d, 0xb0a0, 0x910e, 0x3523, 0xa5cd, 0x1, 0x0);
        gbc.writeMem(0xa6a9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x86d, gbc.sp());
        EXPECT(0xa6ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a9));
        EXPECT(0x62, gbc.readMem(0xa6aa));
        // CB 62 0014
        gbc.setState(0x3ac4, 0x8da7, 0x4cf0, 0xbfdb, 0xc3d9, 0xa5cb, 0x0, 0x1);
        gbc.writeMem(0x3ac4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8da7, gbc.sp());
        EXPECT(0x3ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0015
        gbc.setState(0x8ca7, 0x86ad, 0xf910, 0x131f, 0x2778, 0xa10f, 0x1, 0x0);
        gbc.writeMem(0x8ca7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x86ad, gbc.sp());
        EXPECT(0x8ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca7));
        EXPECT(0x62, gbc.readMem(0x8ca8));
        // CB 62 0016
        gbc.setState(0x943b, 0x7be0, 0xa150, 0xe56a, 0xe93f, 0x7528, 0x1, 0x0);
        gbc.writeMem(0x943b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7be0, gbc.sp());
        EXPECT(0x943d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x943b));
        EXPECT(0x62, gbc.readMem(0x943c));
        // CB 62 0017
        gbc.setState(0x711c, 0x9d67, 0x6770, 0x79a9, 0xd708, 0xd817, 0x1, 0x0);
        gbc.writeMem(0x711c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9d67, gbc.sp());
        EXPECT(0x711e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0018
        gbc.setState(0x5a40, 0x7c28, 0x1ff0, 0xc6e5, 0x8b7a, 0xe552, 0x1, 0x1);
        gbc.writeMem(0x5a40, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7c28, gbc.sp());
        EXPECT(0x5a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 001A
        gbc.setState(0x8bc0, 0x16b, 0x7150, 0x9a4c, 0x5bc8, 0x4975, 0x0, 0x1);
        gbc.writeMem(0x8bc0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x16b, gbc.sp());
        EXPECT(0x8bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc0));
        EXPECT(0x62, gbc.readMem(0x8bc1));
        // CB 62 001B
        gbc.setState(0x7a08, 0x72b8, 0x3cf0, 0x1e97, 0xfabe, 0x4ecd, 0x0, 0x0);
        gbc.writeMem(0x7a08, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x72b8, gbc.sp());
        EXPECT(0x7a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 001C
        gbc.setState(0xdabe, 0x3e18, 0x2840, 0xa919, 0x1188, 0xa86b, 0x1, 0x1);
        gbc.writeMem(0xdabe, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3e18, gbc.sp());
        EXPECT(0xdac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdabe));
        EXPECT(0x62, gbc.readMem(0xdabf));
        // CB 62 001D
        gbc.setState(0x3d3d, 0x5274, 0x5400, 0x72c7, 0x4871, 0xe751, 0x1, 0x0);
        gbc.writeMem(0x3d3d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5274, gbc.sp());
        EXPECT(0x3d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 001E
        gbc.setState(0xb10a, 0x3d2c, 0x8950, 0x1f54, 0xd646, 0xbf89, 0x1, 0x0);
        gbc.writeMem(0xb10a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3d2c, gbc.sp());
        EXPECT(0xb10c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10a));
        EXPECT(0x62, gbc.readMem(0xb10b));
        // CB 62 001F
        gbc.setState(0xab3c, 0x898a, 0x44d0, 0x1c23, 0x1fd4, 0xb93d, 0x0, 0x0);
        gbc.writeMem(0xab3c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x898a, gbc.sp());
        EXPECT(0xab3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab3c));
        EXPECT(0x62, gbc.readMem(0xab3d));
        // CB 62 0020
        gbc.setState(0xc197, 0xbbeb, 0x3b50, 0x674f, 0x636, 0x2a41, 0x0, 0x1);
        gbc.writeMem(0xc197, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbbeb, gbc.sp());
        EXPECT(0xc199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc197));
        EXPECT(0x62, gbc.readMem(0xc198));
        // CB 62 0021
        gbc.setState(0xc5c3, 0x407a, 0x57c0, 0x68ce, 0x2694, 0x5c80, 0x1, 0x0);
        gbc.writeMem(0xc5c3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x407a, gbc.sp());
        EXPECT(0xc5c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c3));
        EXPECT(0x62, gbc.readMem(0xc5c4));
        // CB 62 0022
        gbc.setState(0x95b, 0xe211, 0x6a00, 0xeb22, 0x8914, 0x6b4, 0x1, 0x0);
        gbc.writeMem(0x95b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe211, gbc.sp());
        EXPECT(0x95d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0023
        gbc.setState(0x5789, 0x148a, 0xcb10, 0x4155, 0xdc69, 0x7e97, 0x0, 0x1);
        gbc.writeMem(0x5789, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x148a, gbc.sp());
        EXPECT(0x578b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0024
        gbc.setState(0xc918, 0x17e4, 0xde30, 0x8b62, 0x9a69, 0x9173, 0x1, 0x1);
        gbc.writeMem(0xc918, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x17e4, gbc.sp());
        EXPECT(0xc91a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc918));
        EXPECT(0x62, gbc.readMem(0xc919));
        // CB 62 0025
        gbc.setState(0x1d5d, 0xbb96, 0xfcc0, 0x578e, 0x7251, 0x2d42, 0x1, 0x1);
        gbc.writeMem(0x1d5d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xbb96, gbc.sp());
        EXPECT(0x1d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0026
        gbc.setState(0x5cf2, 0xb95a, 0x7690, 0x2a20, 0x5035, 0x7a5f, 0x1, 0x1);
        gbc.writeMem(0x5cf2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb95a, gbc.sp());
        EXPECT(0x5cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0027
        gbc.setState(0x5fe5, 0x546d, 0x2120, 0x3043, 0x4c42, 0x4026, 0x1, 0x1);
        gbc.writeMem(0x5fe5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x546d, gbc.sp());
        EXPECT(0x5fe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0028
        gbc.setState(0x4093, 0x9e78, 0x62b0, 0xfa5b, 0xa1b, 0xfa97, 0x1, 0x1);
        gbc.writeMem(0x4093, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9e78, gbc.sp());
        EXPECT(0x4095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0029
        gbc.setState(0x4986, 0x53a0, 0xd420, 0xc646, 0xe8c7, 0x1b56, 0x0, 0x1);
        gbc.writeMem(0x4986, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x53a0, gbc.sp());
        EXPECT(0x4988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 002A
        gbc.setState(0xda0f, 0xd093, 0x710, 0x9599, 0x7bb4, 0x4d1, 0x1, 0x0);
        gbc.writeMem(0xda0f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd093, gbc.sp());
        EXPECT(0xda11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda0f));
        EXPECT(0x62, gbc.readMem(0xda10));
        // CB 62 002B
        gbc.setState(0xa00b, 0x1ee, 0x9820, 0x7260, 0x2ca9, 0xadf1, 0x1, 0x1);
        gbc.writeMem(0xa00b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1ee, gbc.sp());
        EXPECT(0xa00d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00b));
        EXPECT(0x62, gbc.readMem(0xa00c));
        // CB 62 002C
        gbc.setState(0xaca3, 0xcafd, 0x3cd0, 0x79c0, 0x56a2, 0xb5a, 0x1, 0x0);
        gbc.writeMem(0xaca3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xcafd, gbc.sp());
        EXPECT(0xaca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca3));
        EXPECT(0x62, gbc.readMem(0xaca4));
        // CB 62 002E
        gbc.setState(0x8122, 0x4f26, 0xe60, 0x78b5, 0x4f52, 0xba86, 0x0, 0x0);
        gbc.writeMem(0x8122, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4f26, gbc.sp());
        EXPECT(0x8124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8122));
        EXPECT(0x62, gbc.readMem(0x8123));
        // CB 62 002F
        gbc.setState(0x6604, 0x9d65, 0x35a0, 0x6b8d, 0x12eb, 0x473b, 0x1, 0x0);
        gbc.writeMem(0x6604, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9d65, gbc.sp());
        EXPECT(0x6606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0030
        gbc.setState(0xbed0, 0xfe11, 0xbae0, 0xf9cc, 0xd6d0, 0xde2a, 0x0, 0x0);
        gbc.writeMem(0xbed0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfe11, gbc.sp());
        EXPECT(0xbed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed0));
        EXPECT(0x62, gbc.readMem(0xbed1));
        // CB 62 0031
        gbc.setState(0xa5cb, 0xe59b, 0xf100, 0x188b, 0x8482, 0x1bd2, 0x0, 0x1);
        gbc.writeMem(0xa5cb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe59b, gbc.sp());
        EXPECT(0xa5cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5cb));
        EXPECT(0x62, gbc.readMem(0xa5cc));
        // CB 62 0032
        gbc.setState(0xd870, 0xced8, 0x1300, 0x933f, 0x76a4, 0x27b2, 0x0, 0x1);
        gbc.writeMem(0xd870, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xced8, gbc.sp());
        EXPECT(0xd872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd870));
        EXPECT(0x62, gbc.readMem(0xd871));
        // CB 62 0033
        gbc.setState(0x35f5, 0x55a5, 0x89f0, 0xe45, 0x7ecf, 0xc7fb, 0x1, 0x1);
        gbc.writeMem(0x35f5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x55a5, gbc.sp());
        EXPECT(0x35f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0034
        gbc.setState(0xd388, 0xda13, 0xbe50, 0xd703, 0x7d88, 0x26e5, 0x1, 0x1);
        gbc.writeMem(0xd388, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xda13, gbc.sp());
        EXPECT(0xd38a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd388));
        EXPECT(0x62, gbc.readMem(0xd389));
        // CB 62 0035
        gbc.setState(0x392c, 0x7780, 0x6520, 0x645c, 0x8845, 0x4f86, 0x1, 0x1);
        gbc.writeMem(0x392c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7780, gbc.sp());
        EXPECT(0x392e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0036
        gbc.setState(0x488e, 0x1cfe, 0x7b60, 0x48b8, 0x547f, 0x75d4, 0x1, 0x0);
        gbc.writeMem(0x488e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1cfe, gbc.sp());
        EXPECT(0x4890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0037
        gbc.setState(0x493f, 0x16bc, 0x4070, 0x96e6, 0x6b7c, 0xc989, 0x1, 0x1);
        gbc.writeMem(0x493f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x16bc, gbc.sp());
        EXPECT(0x4941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0038
        gbc.setState(0xd147, 0xbd7, 0x37a0, 0x8964, 0xe30, 0x1f3b, 0x1, 0x0);
        gbc.writeMem(0xd147, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbd7, gbc.sp());
        EXPECT(0xd149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd147));
        EXPECT(0x62, gbc.readMem(0xd148));
        // CB 62 0039
        gbc.setState(0xa1f3, 0x40a2, 0x6520, 0xb202, 0x84eb, 0xd55f, 0x1, 0x1);
        gbc.writeMem(0xa1f3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x40a2, gbc.sp());
        EXPECT(0xa1f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f3));
        EXPECT(0x62, gbc.readMem(0xa1f4));
        // CB 62 003A
        gbc.setState(0x61a8, 0xd182, 0x8c70, 0x97bd, 0xbe, 0x40fc, 0x0, 0x0);
        gbc.writeMem(0x61a8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd182, gbc.sp());
        EXPECT(0x61aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 003B
        gbc.setState(0x7558, 0x8e1b, 0x5220, 0xc95c, 0xa9cf, 0x2dce, 0x1, 0x1);
        gbc.writeMem(0x7558, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8e1b, gbc.sp());
        EXPECT(0x755a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 003C
        gbc.setState(0x1ff0, 0x2607, 0x4700, 0x4dab, 0x115c, 0x7c76, 0x0, 0x0);
        gbc.writeMem(0x1ff0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2607, gbc.sp());
        EXPECT(0x1ff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 003D
        gbc.setState(0x93e5, 0x1ed9, 0xd4e0, 0xe120, 0xb99c, 0x450b, 0x1, 0x1);
        gbc.writeMem(0x93e5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1ed9, gbc.sp());
        EXPECT(0x93e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e5));
        EXPECT(0x62, gbc.readMem(0x93e6));
        // CB 62 003E
        gbc.setState(0xba23, 0xc2dc, 0x22e0, 0xfb65, 0xc626, 0xb42f, 0x0, 0x1);
        gbc.writeMem(0xba23, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc2dc, gbc.sp());
        EXPECT(0xba25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba23));
        EXPECT(0x62, gbc.readMem(0xba24));
        // CB 62 003F
        gbc.setState(0xc076, 0xb0dc, 0xfab0, 0x8c3a, 0xc1cd, 0xe43b, 0x1, 0x1);
        gbc.writeMem(0xc076, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb0dc, gbc.sp());
        EXPECT(0xc078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc076));
        EXPECT(0x62, gbc.readMem(0xc077));
        // CB 62 0040
        gbc.setState(0xdf30, 0x7b51, 0xf140, 0xe74c, 0xba3, 0x74da, 0x1, 0x1);
        gbc.writeMem(0xdf30, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7b51, gbc.sp());
        EXPECT(0xdf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf30));
        EXPECT(0x62, gbc.readMem(0xdf31));
        // CB 62 0041
        gbc.setState(0xef9d, 0xf02b, 0x7ec0, 0x9a72, 0xd401, 0x454a, 0x0, 0x1);
        gbc.writeMem(0xef9d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf02b, gbc.sp());
        EXPECT(0xef9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef9d));
        EXPECT(0x62, gbc.readMem(0xef9e));
        // CB 62 0042
        gbc.setState(0x95bb, 0xe250, 0xddd0, 0xd6f7, 0xcfbc, 0xdb74, 0x0, 0x1);
        gbc.writeMem(0x95bb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe250, gbc.sp());
        EXPECT(0x95bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95bb));
        EXPECT(0x62, gbc.readMem(0x95bc));
        // CB 62 0043
        gbc.setState(0xacf7, 0x86bc, 0x7950, 0x109e, 0xd4cd, 0xa4aa, 0x0, 0x0);
        gbc.writeMem(0xacf7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x86bc, gbc.sp());
        EXPECT(0xacf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf7));
        EXPECT(0x62, gbc.readMem(0xacf8));
        // CB 62 0044
        gbc.setState(0xe2af, 0x6fce, 0xa750, 0x6179, 0x80e4, 0x35f0, 0x1, 0x1);
        gbc.writeMem(0xe2af, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6fce, gbc.sp());
        EXPECT(0xe2b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2af));
        EXPECT(0x62, gbc.readMem(0xe2b0));
        // CB 62 0045
        gbc.setState(0x7af2, 0xc6a3, 0xfcf0, 0xca49, 0x58ed, 0x2d57, 0x1, 0x0);
        gbc.writeMem(0x7af2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc6a3, gbc.sp());
        EXPECT(0x7af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0046
        gbc.setState(0xd9c0, 0x4d26, 0x23a0, 0xb8d4, 0xde0c, 0xc292, 0x1, 0x0);
        gbc.writeMem(0xd9c0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4d26, gbc.sp());
        EXPECT(0xd9c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c0));
        EXPECT(0x62, gbc.readMem(0xd9c1));
        // CB 62 0047
        gbc.setState(0xb113, 0x4be9, 0x7510, 0x4240, 0x6c84, 0x2ab6, 0x1, 0x0);
        gbc.writeMem(0xb113, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4be9, gbc.sp());
        EXPECT(0xb115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb113));
        EXPECT(0x62, gbc.readMem(0xb114));
        // CB 62 0048
        gbc.setState(0x2fdf, 0x574d, 0xa930, 0x404, 0x7b4, 0x7161, 0x0, 0x0);
        gbc.writeMem(0x2fdf, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x574d, gbc.sp());
        EXPECT(0x2fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0049
        gbc.setState(0xa70b, 0x99b0, 0xf300, 0x629a, 0x9d4f, 0xb6b6, 0x1, 0x1);
        gbc.writeMem(0xa70b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x99b0, gbc.sp());
        EXPECT(0xa70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa70b));
        EXPECT(0x62, gbc.readMem(0xa70c));
        // CB 62 004A
        gbc.setState(0xacae, 0x3898, 0x6940, 0xb7f4, 0x81cb, 0x6364, 0x1, 0x0);
        gbc.writeMem(0xacae, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3898, gbc.sp());
        EXPECT(0xacb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacae));
        EXPECT(0x62, gbc.readMem(0xacaf));
        // CB 62 004B
        gbc.setState(0x85e5, 0xc13, 0xdd90, 0x551e, 0x21b2, 0xd118, 0x1, 0x0);
        gbc.writeMem(0x85e5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc13, gbc.sp());
        EXPECT(0x85e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e5));
        EXPECT(0x62, gbc.readMem(0x85e6));
        // CB 62 004C
        gbc.setState(0xdc2a, 0x2308, 0xa200, 0x3a33, 0x3d13, 0xc2b, 0x0, 0x1);
        gbc.writeMem(0xdc2a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2308, gbc.sp());
        EXPECT(0xdc2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc2a));
        EXPECT(0x62, gbc.readMem(0xdc2b));
        // CB 62 004D
        gbc.setState(0x24d2, 0x7a0f, 0x5780, 0x9884, 0x4820, 0xa6da, 0x1, 0x1);
        gbc.writeMem(0x24d2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7a0f, gbc.sp());
        EXPECT(0x24d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 004E
        gbc.setState(0x64e7, 0xf06a, 0x3110, 0x7a66, 0xf8e5, 0x812a, 0x0, 0x0);
        gbc.writeMem(0x64e7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf06a, gbc.sp());
        EXPECT(0x64e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 004F
        gbc.setState(0x8540, 0x1d74, 0xca80, 0xf302, 0x8de2, 0x6ed0, 0x1, 0x1);
        gbc.writeMem(0x8540, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1d74, gbc.sp());
        EXPECT(0x8542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8540));
        EXPECT(0x62, gbc.readMem(0x8541));
        // CB 62 0050
        gbc.setState(0x7414, 0x72a6, 0xc4e0, 0x76e0, 0xf7, 0xf1b9, 0x0, 0x0);
        gbc.writeMem(0x7414, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x72a6, gbc.sp());
        EXPECT(0x7416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0051
        gbc.setState(0x6d2f, 0xf76f, 0x58e0, 0xb9ee, 0x5368, 0xb507, 0x1, 0x1);
        gbc.writeMem(0x6d2f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf76f, gbc.sp());
        EXPECT(0x6d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0052
        gbc.setState(0x1706, 0x6eb, 0xecd0, 0xf220, 0xdc6e, 0x4fb6, 0x0, 0x0);
        gbc.writeMem(0x1706, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6eb, gbc.sp());
        EXPECT(0x1708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0053
        gbc.setState(0x2a62, 0x6a8f, 0x270, 0x69eb, 0x2563, 0x230e, 0x0, 0x0);
        gbc.writeMem(0x2a62, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6a8f, gbc.sp());
        EXPECT(0x2a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0054
        gbc.setState(0x9d04, 0x6761, 0x1060, 0x83ba, 0x5236, 0xdc44, 0x0, 0x0);
        gbc.writeMem(0x9d04, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6761, gbc.sp());
        EXPECT(0x9d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d04));
        EXPECT(0x62, gbc.readMem(0x9d05));
        // CB 62 0055
        gbc.setState(0xa3d9, 0xd62d, 0x7b40, 0x55bb, 0x74be, 0x8cdb, 0x0, 0x1);
        gbc.writeMem(0xa3d9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd62d, gbc.sp());
        EXPECT(0xa3db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d9));
        EXPECT(0x62, gbc.readMem(0xa3da));
        // CB 62 0056
        gbc.setState(0x8013, 0x7873, 0x3600, 0x5253, 0x3127, 0xe06d, 0x1, 0x1);
        gbc.writeMem(0x8013, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7873, gbc.sp());
        EXPECT(0x8015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8013));
        EXPECT(0x62, gbc.readMem(0x8014));
        // CB 62 0057
        gbc.setState(0xde58, 0x40a8, 0x5af0, 0xeb0f, 0x66bf, 0x40e5, 0x1, 0x1);
        gbc.writeMem(0xde58, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x40a8, gbc.sp());
        EXPECT(0xde5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde58));
        EXPECT(0x62, gbc.readMem(0xde59));
        // CB 62 0058
        gbc.setState(0x416a, 0x9c05, 0x8750, 0x81f3, 0xf26f, 0x3100, 0x1, 0x0);
        gbc.writeMem(0x416a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9c05, gbc.sp());
        EXPECT(0x416c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0059
        gbc.setState(0x393, 0x9479, 0xa450, 0x71cf, 0xe3bd, 0xb9c, 0x0, 0x1);
        gbc.writeMem(0x393, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9479, gbc.sp());
        EXPECT(0x395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 005A
        gbc.setState(0x6ec3, 0x9809, 0xdf20, 0xe7c2, 0x5263, 0x5322, 0x0, 0x1);
        gbc.writeMem(0x6ec3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9809, gbc.sp());
        EXPECT(0x6ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 005B
        gbc.setState(0x1af0, 0x7a13, 0x9760, 0x9186, 0xb96d, 0x1ae5, 0x0, 0x0);
        gbc.writeMem(0x1af0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7a13, gbc.sp());
        EXPECT(0x1af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 005C
        gbc.setState(0xefe3, 0x70ba, 0x85d0, 0x41bb, 0x4005, 0xf28f, 0x1, 0x1);
        gbc.writeMem(0xefe3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x70ba, gbc.sp());
        EXPECT(0xefe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe3));
        EXPECT(0x62, gbc.readMem(0xefe4));
        // CB 62 005D
        gbc.setState(0x8370, 0xfa84, 0x9bd0, 0x1aa5, 0x5e09, 0x3210, 0x0, 0x0);
        gbc.writeMem(0x8370, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfa84, gbc.sp());
        EXPECT(0x8372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8370));
        EXPECT(0x62, gbc.readMem(0x8371));
        // CB 62 005E
        gbc.setState(0xc721, 0x102c, 0xdc50, 0x8f2e, 0x2746, 0xe1e5, 0x0, 0x0);
        gbc.writeMem(0xc721, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x102c, gbc.sp());
        EXPECT(0xc723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc721));
        EXPECT(0x62, gbc.readMem(0xc722));
        // CB 62 005F
        gbc.setState(0x8aa3, 0x72f2, 0xdfa0, 0x144, 0x3542, 0xc720, 0x1, 0x1);
        gbc.writeMem(0x8aa3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x72f2, gbc.sp());
        EXPECT(0x8aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa3));
        EXPECT(0x62, gbc.readMem(0x8aa4));
        // CB 62 0060
        gbc.setState(0x49a4, 0xb17b, 0xbd00, 0xc049, 0x9212, 0x48cb, 0x1, 0x0);
        gbc.writeMem(0x49a4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb17b, gbc.sp());
        EXPECT(0x49a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0062
        gbc.setState(0x879b, 0xeec1, 0xef90, 0xb437, 0x4fa5, 0xd7de, 0x1, 0x1);
        gbc.writeMem(0x879b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xeec1, gbc.sp());
        EXPECT(0x879d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x879b));
        EXPECT(0x62, gbc.readMem(0x879c));
        // CB 62 0063
        gbc.setState(0x2f9b, 0x8ffc, 0x550, 0x6e2f, 0x20d3, 0x49fe, 0x1, 0x1);
        gbc.writeMem(0x2f9b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8ffc, gbc.sp());
        EXPECT(0x2f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0064
        gbc.setState(0xcf30, 0xd6d1, 0x4b80, 0xab74, 0x95d4, 0x5afc, 0x1, 0x0);
        gbc.writeMem(0xcf30, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd6d1, gbc.sp());
        EXPECT(0xcf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf30));
        EXPECT(0x62, gbc.readMem(0xcf31));
        // CB 62 0065
        gbc.setState(0x9fa9, 0x3ae, 0x7450, 0x2815, 0xa460, 0x9331, 0x0, 0x1);
        gbc.writeMem(0x9fa9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3ae, gbc.sp());
        EXPECT(0x9fab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa9));
        EXPECT(0x62, gbc.readMem(0x9faa));
        // CB 62 0066
        gbc.setState(0xedbe, 0xf732, 0x58f0, 0xba74, 0x6cea, 0xbdc9, 0x0, 0x1);
        gbc.writeMem(0xedbe, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf732, gbc.sp());
        EXPECT(0xedc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedbe));
        EXPECT(0x62, gbc.readMem(0xedbf));
        // CB 62 0067
        gbc.setState(0x8a56, 0x8fe5, 0x5290, 0xe5b7, 0xc74f, 0xbf9, 0x0, 0x0);
        gbc.writeMem(0x8a56, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8fe5, gbc.sp());
        EXPECT(0x8a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a56));
        EXPECT(0x62, gbc.readMem(0x8a57));
        // CB 62 0068
        gbc.setState(0x898f, 0x6826, 0x5660, 0x8c4d, 0x1b3, 0xd53d, 0x0, 0x1);
        gbc.writeMem(0x898f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6826, gbc.sp());
        EXPECT(0x8991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x898f));
        EXPECT(0x62, gbc.readMem(0x8990));
        // CB 62 0069
        gbc.setState(0xe1ce, 0x90f2, 0x3050, 0xe908, 0xc14c, 0xc4af, 0x1, 0x0);
        gbc.writeMem(0xe1ce, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x90f2, gbc.sp());
        EXPECT(0xe1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ce));
        EXPECT(0x62, gbc.readMem(0xe1cf));
        // CB 62 006A
        gbc.setState(0xa0b4, 0x6e04, 0xb890, 0xf3bd, 0xbab7, 0xf78d, 0x1, 0x1);
        gbc.writeMem(0xa0b4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6e04, gbc.sp());
        EXPECT(0xa0b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b4));
        EXPECT(0x62, gbc.readMem(0xa0b5));
        // CB 62 006B
        gbc.setState(0x1b26, 0xbf6b, 0xac40, 0xa2ae, 0x322, 0x42af, 0x1, 0x0);
        gbc.writeMem(0x1b26, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbf6b, gbc.sp());
        EXPECT(0x1b28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 006C
        gbc.setState(0x17fa, 0x169b, 0x1a30, 0x5863, 0xbf5, 0x223a, 0x1, 0x0);
        gbc.writeMem(0x17fa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x169b, gbc.sp());
        EXPECT(0x17fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 006D
        gbc.setState(0xcad9, 0xd0fc, 0x7110, 0xb2ad, 0xa1a9, 0xcfac, 0x1, 0x1);
        gbc.writeMem(0xcad9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd0fc, gbc.sp());
        EXPECT(0xcadb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad9));
        EXPECT(0x62, gbc.readMem(0xcada));
        // CB 62 006E
        gbc.setState(0x858, 0x67e9, 0xa1d0, 0x1b2a, 0xb868, 0x9012, 0x0, 0x0);
        gbc.writeMem(0x858, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x67e9, gbc.sp());
        EXPECT(0x85a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 006F
        gbc.setState(0x71e9, 0xd00b, 0x2020, 0x6a01, 0x1949, 0xe82d, 0x0, 0x1);
        gbc.writeMem(0x71e9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd00b, gbc.sp());
        EXPECT(0x71eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0070
        gbc.setState(0x7eb2, 0xd6af, 0xa9a0, 0x62c4, 0x10b, 0x421d, 0x0, 0x0);
        gbc.writeMem(0x7eb2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd6af, gbc.sp());
        EXPECT(0x7eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0071
        gbc.setState(0x4399, 0xbb7, 0x6d0, 0x1de4, 0xb26d, 0x4d65, 0x1, 0x0);
        gbc.writeMem(0x4399, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbb7, gbc.sp());
        EXPECT(0x439b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0072
        gbc.setState(0xc8bd, 0x43d4, 0x5400, 0xec8a, 0xe632, 0x1f3a, 0x1, 0x0);
        gbc.writeMem(0xc8bd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x43d4, gbc.sp());
        EXPECT(0xc8bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8bd));
        EXPECT(0x62, gbc.readMem(0xc8be));
        // CB 62 0073
        gbc.setState(0x1c72, 0x6301, 0xcdb0, 0x44cb, 0x2610, 0x665e, 0x1, 0x0);
        gbc.writeMem(0x1c72, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6301, gbc.sp());
        EXPECT(0x1c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0074
        gbc.setState(0x7fef, 0x45a3, 0x13c0, 0x206c, 0xf108, 0x97c5, 0x1, 0x0);
        gbc.writeMem(0x7fef, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x45a3, gbc.sp());
        EXPECT(0x7ff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0075
        gbc.setState(0x3eae, 0x7855, 0xfd70, 0x4e59, 0xb00d, 0xe70, 0x0, 0x0);
        gbc.writeMem(0x3eae, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7855, gbc.sp());
        EXPECT(0x3eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0076
        gbc.setState(0xb36e, 0xb8b8, 0x2740, 0xd35f, 0x4482, 0xc7cb, 0x0, 0x1);
        gbc.writeMem(0xb36e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb8b8, gbc.sp());
        EXPECT(0xb370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb36e));
        EXPECT(0x62, gbc.readMem(0xb36f));
        // CB 62 0077
        gbc.setState(0xda04, 0xef00, 0x9340, 0x8211, 0x9dbb, 0x34b9, 0x0, 0x0);
        gbc.writeMem(0xda04, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xef00, gbc.sp());
        EXPECT(0xda06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda04));
        EXPECT(0x62, gbc.readMem(0xda05));
        // CB 62 0078
        gbc.setState(0x7994, 0x1815, 0xc020, 0xec67, 0x229, 0x75cc, 0x0, 0x1);
        gbc.writeMem(0x7994, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1815, gbc.sp());
        EXPECT(0x7996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0079
        gbc.setState(0x4775, 0x4b8c, 0x40c0, 0x372, 0x1ab8, 0x6b47, 0x1, 0x0);
        gbc.writeMem(0x4775, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4b8c, gbc.sp());
        EXPECT(0x4777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 007A
        gbc.setState(0xcd97, 0xe475, 0xb370, 0x568f, 0x8f57, 0x2061, 0x1, 0x0);
        gbc.writeMem(0xcd97, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe475, gbc.sp());
        EXPECT(0xcd99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd97));
        EXPECT(0x62, gbc.readMem(0xcd98));
        // CB 62 007B
        gbc.setState(0x80e1, 0xf17, 0xb7f0, 0x2f30, 0x3bfa, 0xa8fb, 0x0, 0x0);
        gbc.writeMem(0x80e1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf17, gbc.sp());
        EXPECT(0x80e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e1));
        EXPECT(0x62, gbc.readMem(0x80e2));
        // CB 62 007C
        gbc.setState(0x55bc, 0xceef, 0x7f70, 0x9a9f, 0x5381, 0x4c68, 0x0, 0x0);
        gbc.writeMem(0x55bc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xceef, gbc.sp());
        EXPECT(0x55be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 007D
        gbc.setState(0xd8f9, 0x3dad, 0x84b0, 0x87b4, 0xd925, 0x3aa5, 0x1, 0x0);
        gbc.writeMem(0xd8f9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3dad, gbc.sp());
        EXPECT(0xd8fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8f9));
        EXPECT(0x62, gbc.readMem(0xd8fa));
        // CB 62 007E
        gbc.setState(0x9ee8, 0x5979, 0x6500, 0xf9ac, 0x5c59, 0xecd5, 0x1, 0x0);
        gbc.writeMem(0x9ee8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5979, gbc.sp());
        EXPECT(0x9eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee8));
        EXPECT(0x62, gbc.readMem(0x9ee9));
        // CB 62 007F
        gbc.setState(0x698c, 0xb013, 0x22e0, 0xa73d, 0xab5f, 0x80a8, 0x0, 0x1);
        gbc.writeMem(0x698c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb013, gbc.sp());
        EXPECT(0x698e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0080
        gbc.setState(0xeaad, 0x2b57, 0xa1d0, 0xd4e8, 0x343f, 0xce32, 0x1, 0x0);
        gbc.writeMem(0xeaad, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2b57, gbc.sp());
        EXPECT(0xeaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaad));
        EXPECT(0x62, gbc.readMem(0xeaae));
        // CB 62 0081
        gbc.setState(0x2ee2, 0x5a0, 0xf80, 0x8f94, 0x4bb8, 0x2ca8, 0x0, 0x1);
        gbc.writeMem(0x2ee2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5a0, gbc.sp());
        EXPECT(0x2ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0082
        gbc.setState(0x292, 0x7a47, 0x54e0, 0x791e, 0x5095, 0x2061, 0x1, 0x0);
        gbc.writeMem(0x292, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7a47, gbc.sp());
        EXPECT(0x294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0083
        gbc.setState(0x96ca, 0xa50a, 0xa7e0, 0x1572, 0x9e0d, 0x57d1, 0x0, 0x0);
        gbc.writeMem(0x96ca, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa50a, gbc.sp());
        EXPECT(0x96cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ca));
        EXPECT(0x62, gbc.readMem(0x96cb));
        // CB 62 0084
        gbc.setState(0x7db3, 0x711, 0x2e70, 0x5a1e, 0x8cbe, 0xbcf7, 0x1, 0x0);
        gbc.writeMem(0x7db3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x711, gbc.sp());
        EXPECT(0x7db5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0085
        gbc.setState(0x4729, 0x4d0c, 0x3ce0, 0x618e, 0xbc62, 0xb5b4, 0x0, 0x0);
        gbc.writeMem(0x4729, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4d0c, gbc.sp());
        EXPECT(0x472b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0086
        gbc.setState(0x4cd1, 0x4fb2, 0x520, 0x960a, 0x4f6a, 0xbe87, 0x1, 0x0);
        gbc.writeMem(0x4cd1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4fb2, gbc.sp());
        EXPECT(0x4cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0088
        gbc.setState(0xa5d0, 0xf82a, 0x54d0, 0x1db5, 0x3a70, 0xd334, 0x1, 0x0);
        gbc.writeMem(0xa5d0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf82a, gbc.sp());
        EXPECT(0xa5d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d0));
        EXPECT(0x62, gbc.readMem(0xa5d1));
        // CB 62 0089
        gbc.setState(0x2bbe, 0x36a8, 0x7eb0, 0x8b93, 0x9116, 0xf8b2, 0x0, 0x1);
        gbc.writeMem(0x2bbe, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x36a8, gbc.sp());
        EXPECT(0x2bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 008A
        gbc.setState(0x24c4, 0x9fb3, 0xd7d0, 0xf3f0, 0xa190, 0x2e6e, 0x0, 0x0);
        gbc.writeMem(0x24c4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9fb3, gbc.sp());
        EXPECT(0x24c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 008B
        gbc.setState(0x2da3, 0xd469, 0x4be0, 0x7f55, 0x6fa1, 0xb016, 0x0, 0x1);
        gbc.writeMem(0x2da3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd469, gbc.sp());
        EXPECT(0x2da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 008C
        gbc.setState(0x2e68, 0xb772, 0x56d0, 0x67a0, 0x3678, 0x8cd9, 0x1, 0x0);
        gbc.writeMem(0x2e68, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb772, gbc.sp());
        EXPECT(0x2e6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 008D
        gbc.setState(0x5a06, 0x7d0d, 0x33c0, 0x317a, 0x1681, 0x1b0f, 0x1, 0x0);
        gbc.writeMem(0x5a06, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7d0d, gbc.sp());
        EXPECT(0x5a08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 008E
        gbc.setState(0x66dd, 0x6226, 0xcc10, 0x2a17, 0xcfb9, 0xb4e6, 0x1, 0x0);
        gbc.writeMem(0x66dd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6226, gbc.sp());
        EXPECT(0x66df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 008F
        gbc.setState(0x1e45, 0xde3d, 0x7b50, 0xb48f, 0x1130, 0x13e3, 0x1, 0x1);
        gbc.writeMem(0x1e45, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xde3d, gbc.sp());
        EXPECT(0x1e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0090
        gbc.setState(0xe530, 0x7c2c, 0x4d70, 0x4dd5, 0x6291, 0x2d46, 0x1, 0x1);
        gbc.writeMem(0xe530, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7c2c, gbc.sp());
        EXPECT(0xe532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe530));
        EXPECT(0x62, gbc.readMem(0xe531));
        // CB 62 0091
        gbc.setState(0x5244, 0xd0e5, 0x3990, 0xf796, 0xd250, 0x6c22, 0x1, 0x1);
        gbc.writeMem(0x5244, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd0e5, gbc.sp());
        EXPECT(0x5246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0092
        gbc.setState(0x78e5, 0x4db6, 0xd940, 0xe03b, 0xe6f2, 0x5335, 0x0, 0x1);
        gbc.writeMem(0x78e5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4db6, gbc.sp());
        EXPECT(0x78e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0093
        gbc.setState(0xed22, 0x61a2, 0x5f90, 0xda0e, 0x78d0, 0xbe38, 0x1, 0x1);
        gbc.writeMem(0xed22, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x61a2, gbc.sp());
        EXPECT(0xed24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed22));
        EXPECT(0x62, gbc.readMem(0xed23));
        // CB 62 0094
        gbc.setState(0xea64, 0xed10, 0x66b0, 0xcd4, 0xe1a0, 0x699, 0x1, 0x0);
        gbc.writeMem(0xea64, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xed10, gbc.sp());
        EXPECT(0xea66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea64));
        EXPECT(0x62, gbc.readMem(0xea65));
        // CB 62 0096
        gbc.setState(0xb4e3, 0xd9fd, 0x3fc0, 0x68ff, 0x79e9, 0xed95, 0x0, 0x0);
        gbc.writeMem(0xb4e3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd9fd, gbc.sp());
        EXPECT(0xb4e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e3));
        EXPECT(0x62, gbc.readMem(0xb4e4));
        // CB 62 0097
        gbc.setState(0x4bb1, 0x64cb, 0xc450, 0x4535, 0x7805, 0xa170, 0x1, 0x0);
        gbc.writeMem(0x4bb1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x64cb, gbc.sp());
        EXPECT(0x4bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0098
        gbc.setState(0xe619, 0x3cb0, 0xed30, 0xe9dc, 0xd0f6, 0xbe79, 0x0, 0x0);
        gbc.writeMem(0xe619, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3cb0, gbc.sp());
        EXPECT(0xe61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe619));
        EXPECT(0x62, gbc.readMem(0xe61a));
        // CB 62 0099
        gbc.setState(0x7211, 0x3cd3, 0x49f0, 0xeacc, 0x8107, 0x1472, 0x0, 0x1);
        gbc.writeMem(0x7211, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3cd3, gbc.sp());
        EXPECT(0x7213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 009A
        gbc.setState(0x2366, 0xd469, 0xf8c0, 0x4a9f, 0xc8a6, 0x752a, 0x0, 0x1);
        gbc.writeMem(0x2366, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd469, gbc.sp());
        EXPECT(0x2368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 009B
        gbc.setState(0x85d9, 0x9322, 0x5140, 0x1917, 0x3c8a, 0xf34c, 0x0, 0x0);
        gbc.writeMem(0x85d9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9322, gbc.sp());
        EXPECT(0x85db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d9));
        EXPECT(0x62, gbc.readMem(0x85da));
        // CB 62 009C
        gbc.setState(0x2087, 0x9861, 0x8020, 0x8acd, 0x96b, 0xc958, 0x1, 0x1);
        gbc.writeMem(0x2087, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9861, gbc.sp());
        EXPECT(0x2089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 009D
        gbc.setState(0x890c, 0xe364, 0x8360, 0xb62d, 0xa54, 0xdad8, 0x1, 0x1);
        gbc.writeMem(0x890c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe364, gbc.sp());
        EXPECT(0x890e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x890c));
        EXPECT(0x62, gbc.readMem(0x890d));
        // CB 62 009E
        gbc.setState(0xcb7e, 0x11bd, 0x1f00, 0xd0d, 0x3dca, 0x21cc, 0x0, 0x0);
        gbc.writeMem(0xcb7e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x11bd, gbc.sp());
        EXPECT(0xcb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb7e));
        EXPECT(0x62, gbc.readMem(0xcb7f));
        // CB 62 009F
        gbc.setState(0xb4de, 0xfd4b, 0x4df0, 0xb109, 0x2de7, 0x7ed2, 0x0, 0x1);
        gbc.writeMem(0xb4de, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfd4b, gbc.sp());
        EXPECT(0xb4e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4de));
        EXPECT(0x62, gbc.readMem(0xb4df));
        // CB 62 00A0
        gbc.setState(0xe3fa, 0xbcb8, 0x1100, 0xe2e8, 0x1cb9, 0xf246, 0x1, 0x0);
        gbc.writeMem(0xe3fa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbcb8, gbc.sp());
        EXPECT(0xe3fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3fa));
        EXPECT(0x62, gbc.readMem(0xe3fb));
        // CB 62 00A1
        gbc.setState(0xdd66, 0xfb71, 0x8890, 0x694d, 0x8be4, 0x8e9c, 0x0, 0x0);
        gbc.writeMem(0xdd66, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfb71, gbc.sp());
        EXPECT(0xdd68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd66));
        EXPECT(0x62, gbc.readMem(0xdd67));
        // CB 62 00A2
        gbc.setState(0xc1ee, 0xa08c, 0xd6d0, 0xefba, 0xf74b, 0x98ac, 0x0, 0x0);
        gbc.writeMem(0xc1ee, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa08c, gbc.sp());
        EXPECT(0xc1f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ee));
        EXPECT(0x62, gbc.readMem(0xc1ef));
        // CB 62 00A3
        gbc.setState(0x3e99, 0xca04, 0xc310, 0x40d3, 0x47ec, 0xd958, 0x1, 0x0);
        gbc.writeMem(0x3e99, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xca04, gbc.sp());
        EXPECT(0x3e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00A4
        gbc.setState(0x71e9, 0xda81, 0x93a0, 0xbd43, 0x3381, 0xb36f, 0x1, 0x1);
        gbc.writeMem(0x71e9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xda81, gbc.sp());
        EXPECT(0x71eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00A5
        gbc.setState(0x63fa, 0xf16b, 0xb140, 0x6ba, 0xf95e, 0x64d5, 0x0, 0x0);
        gbc.writeMem(0x63fa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf16b, gbc.sp());
        EXPECT(0x63fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00A6
        gbc.setState(0xa05d, 0x689, 0x6600, 0x58bd, 0x2385, 0xaaa3, 0x0, 0x1);
        gbc.writeMem(0xa05d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x689, gbc.sp());
        EXPECT(0xa05f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa05d));
        EXPECT(0x62, gbc.readMem(0xa05e));
        // CB 62 00A7
        gbc.setState(0xbea8, 0xbe51, 0x690, 0x37ed, 0xe64c, 0xd4ad, 0x1, 0x0);
        gbc.writeMem(0xbea8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbe51, gbc.sp());
        EXPECT(0xbeaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea8));
        EXPECT(0x62, gbc.readMem(0xbea9));
        // CB 62 00A8
        gbc.setState(0xd998, 0xcd6e, 0x29a0, 0xbfd, 0xfafb, 0xb911, 0x0, 0x1);
        gbc.writeMem(0xd998, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xcd6e, gbc.sp());
        EXPECT(0xd99a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd998));
        EXPECT(0x62, gbc.readMem(0xd999));
        // CB 62 00A9
        gbc.setState(0x6318, 0xd8e4, 0xc9d0, 0x358f, 0x7865, 0x885e, 0x1, 0x1);
        gbc.writeMem(0x6318, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd8e4, gbc.sp());
        EXPECT(0x631a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00AA
        gbc.setState(0x49ae, 0x643b, 0xf770, 0x2371, 0x7fd0, 0x92b8, 0x1, 0x1);
        gbc.writeMem(0x49ae, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x643b, gbc.sp());
        EXPECT(0x49b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00AB
        gbc.setState(0x696d, 0xda8f, 0x52d0, 0x9260, 0xdf5d, 0x99ad, 0x1, 0x1);
        gbc.writeMem(0x696d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xda8f, gbc.sp());
        EXPECT(0x696f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00AC
        gbc.setState(0x667b, 0x4bdd, 0x6970, 0x71fe, 0x82be, 0x441d, 0x0, 0x1);
        gbc.writeMem(0x667b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4bdd, gbc.sp());
        EXPECT(0x667d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00AD
        gbc.setState(0x1d81, 0x3025, 0x9220, 0x27c3, 0xbb59, 0xfa48, 0x1, 0x0);
        gbc.writeMem(0x1d81, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3025, gbc.sp());
        EXPECT(0x1d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00AE
        gbc.setState(0x73b5, 0xfd3e, 0xd050, 0x2739, 0x86f3, 0x19fb, 0x0, 0x1);
        gbc.writeMem(0x73b5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfd3e, gbc.sp());
        EXPECT(0x73b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00AF
        gbc.setState(0x391a, 0xf7eb, 0x4100, 0xc51f, 0x6aee, 0x4ac, 0x0, 0x1);
        gbc.writeMem(0x391a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf7eb, gbc.sp());
        EXPECT(0x391c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00B0
        gbc.setState(0xefd9, 0xc2bd, 0x67b0, 0x242f, 0x7726, 0x36f5, 0x0, 0x1);
        gbc.writeMem(0xefd9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc2bd, gbc.sp());
        EXPECT(0xefdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd9));
        EXPECT(0x62, gbc.readMem(0xefda));
        // CB 62 00B1
        gbc.setState(0x9bfd, 0x5d19, 0xdd00, 0xb633, 0xc7b, 0x9352, 0x1, 0x0);
        gbc.writeMem(0x9bfd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5d19, gbc.sp());
        EXPECT(0x9bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bfd));
        EXPECT(0x62, gbc.readMem(0x9bfe));
        // CB 62 00B2
        gbc.setState(0xebf4, 0x1186, 0xfce0, 0x2ce3, 0x6d43, 0x6df0, 0x1, 0x0);
        gbc.writeMem(0xebf4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1186, gbc.sp());
        EXPECT(0xebf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf4));
        EXPECT(0x62, gbc.readMem(0xebf5));
        // CB 62 00B3
        gbc.setState(0x3c8e, 0xd8fe, 0xcde0, 0xbeab, 0xc660, 0x370f, 0x0, 0x1);
        gbc.writeMem(0x3c8e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd8fe, gbc.sp());
        EXPECT(0x3c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00B4
        gbc.setState(0xa87c, 0x6fb1, 0x8a50, 0x35ed, 0xcc84, 0x9255, 0x1, 0x1);
        gbc.writeMem(0xa87c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6fb1, gbc.sp());
        EXPECT(0xa87e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa87c));
        EXPECT(0x62, gbc.readMem(0xa87d));
        // CB 62 00B5
        gbc.setState(0x6d95, 0xcce, 0x2460, 0x4b08, 0xf6a8, 0x9b88, 0x0, 0x1);
        gbc.writeMem(0x6d95, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcce, gbc.sp());
        EXPECT(0x6d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00B6
        gbc.setState(0xac4e, 0x5b31, 0x7460, 0x52ca, 0x1cb, 0xf9c6, 0x1, 0x1);
        gbc.writeMem(0xac4e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5b31, gbc.sp());
        EXPECT(0xac50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac4e));
        EXPECT(0x62, gbc.readMem(0xac4f));
        // CB 62 00B7
        gbc.setState(0x5952, 0x5fd4, 0xb050, 0x1e09, 0x5578, 0x5dc2, 0x1, 0x1);
        gbc.writeMem(0x5952, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5fd4, gbc.sp());
        EXPECT(0x5954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00B8
        gbc.setState(0xa947, 0x2065, 0xa1d0, 0x9e60, 0xb52d, 0x85f0, 0x0, 0x0);
        gbc.writeMem(0xa947, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2065, gbc.sp());
        EXPECT(0xa949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa947));
        EXPECT(0x62, gbc.readMem(0xa948));
        // CB 62 00B9
        gbc.setState(0xd32c, 0x873, 0xbc60, 0x197f, 0x1976, 0x5335, 0x0, 0x1);
        gbc.writeMem(0xd32c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x873, gbc.sp());
        EXPECT(0xd32e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32c));
        EXPECT(0x62, gbc.readMem(0xd32d));
        // CB 62 00BA
        gbc.setState(0x6366, 0xe6c, 0xbc00, 0xe910, 0xc599, 0x5ab8, 0x1, 0x0);
        gbc.writeMem(0x6366, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe6c, gbc.sp());
        EXPECT(0x6368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00BB
        gbc.setState(0x8d10, 0x2d8a, 0xa930, 0xfd1, 0xde33, 0xb7e9, 0x1, 0x0);
        gbc.writeMem(0x8d10, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2d8a, gbc.sp());
        EXPECT(0x8d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d10));
        EXPECT(0x62, gbc.readMem(0x8d11));
        // CB 62 00BD
        gbc.setState(0xb7a9, 0x7d8f, 0xf2c0, 0x9176, 0x9021, 0xbb8a, 0x0, 0x1);
        gbc.writeMem(0xb7a9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7d8f, gbc.sp());
        EXPECT(0xb7ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a9));
        EXPECT(0x62, gbc.readMem(0xb7aa));
        // CB 62 00BF
        gbc.setState(0x5a6f, 0xd77c, 0x1450, 0xc89b, 0xb880, 0x493f, 0x0, 0x1);
        gbc.writeMem(0x5a6f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd77c, gbc.sp());
        EXPECT(0x5a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00C0
        gbc.setState(0x527a, 0x2761, 0xb770, 0x5a71, 0x3eda, 0xdbf3, 0x1, 0x0);
        gbc.writeMem(0x527a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2761, gbc.sp());
        EXPECT(0x527c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00C1
        gbc.setState(0x9ec4, 0x54d9, 0x520, 0x3c21, 0xcc58, 0x3548, 0x0, 0x1);
        gbc.writeMem(0x9ec4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x54d9, gbc.sp());
        EXPECT(0x9ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec4));
        EXPECT(0x62, gbc.readMem(0x9ec5));
        // CB 62 00C3
        gbc.setState(0x5e42, 0xfa19, 0x1650, 0xda3c, 0x173, 0x43d9, 0x0, 0x1);
        gbc.writeMem(0x5e42, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfa19, gbc.sp());
        EXPECT(0x5e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00C4
        gbc.setState(0xe1e1, 0x838b, 0xcbe0, 0xcb59, 0x5111, 0x2d2c, 0x1, 0x1);
        gbc.writeMem(0xe1e1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x838b, gbc.sp());
        EXPECT(0xe1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e1));
        EXPECT(0x62, gbc.readMem(0xe1e2));
        // CB 62 00C5
        gbc.setState(0xccf8, 0x216, 0xd230, 0x6949, 0xcc76, 0xd353, 0x0, 0x0);
        gbc.writeMem(0xccf8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x216, gbc.sp());
        EXPECT(0xccfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf8));
        EXPECT(0x62, gbc.readMem(0xccf9));
        // CB 62 00C6
        gbc.setState(0x5242, 0x1823, 0xd90, 0xdd59, 0xa16e, 0x652e, 0x1, 0x0);
        gbc.writeMem(0x5242, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1823, gbc.sp());
        EXPECT(0x5244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00C7
        gbc.setState(0xd7cf, 0x909c, 0x4050, 0x5c76, 0xd595, 0xfaa7, 0x1, 0x1);
        gbc.writeMem(0xd7cf, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x909c, gbc.sp());
        EXPECT(0xd7d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7cf));
        EXPECT(0x62, gbc.readMem(0xd7d0));
        // CB 62 00C8
        gbc.setState(0x2c2d, 0x82ff, 0x3d90, 0x4304, 0x8846, 0xef9b, 0x1, 0x1);
        gbc.writeMem(0x2c2d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x82ff, gbc.sp());
        EXPECT(0x2c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00C9
        gbc.setState(0x67c7, 0x2d94, 0x3450, 0x4174, 0xd204, 0x7bbe, 0x0, 0x1);
        gbc.writeMem(0x67c7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2d94, gbc.sp());
        EXPECT(0x67c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00CA
        gbc.setState(0x7b89, 0x5f60, 0xdf00, 0x48da, 0x5a5c, 0x97d8, 0x0, 0x0);
        gbc.writeMem(0x7b89, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5f60, gbc.sp());
        EXPECT(0x7b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00CB
        gbc.setState(0xb076, 0x4a5a, 0x420, 0x2d67, 0xea52, 0x5567, 0x0, 0x1);
        gbc.writeMem(0xb076, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4a5a, gbc.sp());
        EXPECT(0xb078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb076));
        EXPECT(0x62, gbc.readMem(0xb077));
        // CB 62 00CC
        gbc.setState(0x3979, 0x2a6f, 0xdeb0, 0xf5c8, 0xc685, 0x29c3, 0x1, 0x0);
        gbc.writeMem(0x3979, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2a6f, gbc.sp());
        EXPECT(0x397b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00CD
        gbc.setState(0x3b78, 0x70e6, 0xe660, 0x7b5d, 0xa826, 0x17ec, 0x1, 0x0);
        gbc.writeMem(0x3b78, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x70e6, gbc.sp());
        EXPECT(0x3b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00CE
        gbc.setState(0x84b5, 0x8a07, 0x2520, 0x77d7, 0xa77e, 0x8e0d, 0x0, 0x1);
        gbc.writeMem(0x84b5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8a07, gbc.sp());
        EXPECT(0x84b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b5));
        EXPECT(0x62, gbc.readMem(0x84b6));
        // CB 62 00CF
        gbc.setState(0x3337, 0x699b, 0x5df0, 0xce59, 0x164d, 0xb9d2, 0x1, 0x0);
        gbc.writeMem(0x3337, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x699b, gbc.sp());
        EXPECT(0x3339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00D0
        gbc.setState(0x518f, 0xef2c, 0x42e0, 0x4005, 0xe279, 0x1467, 0x0, 0x0);
        gbc.writeMem(0x518f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xef2c, gbc.sp());
        EXPECT(0x5191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00D1
        gbc.setState(0x290a, 0x83ba, 0xb40, 0x3074, 0x8b62, 0x22f9, 0x0, 0x0);
        gbc.writeMem(0x290a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x83ba, gbc.sp());
        EXPECT(0x290c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00D2
        gbc.setState(0x959a, 0xc899, 0x3ef0, 0x6adb, 0x13dd, 0xb01e, 0x0, 0x1);
        gbc.writeMem(0x959a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc899, gbc.sp());
        EXPECT(0x959c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x959a));
        EXPECT(0x62, gbc.readMem(0x959b));
        // CB 62 00D3
        gbc.setState(0xd281, 0x2760, 0x9100, 0xc38d, 0x525b, 0x6a34, 0x1, 0x1);
        gbc.writeMem(0xd281, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2760, gbc.sp());
        EXPECT(0xd283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd281));
        EXPECT(0x62, gbc.readMem(0xd282));
        // CB 62 00D4
        gbc.setState(0xca9f, 0xfb51, 0x3bd0, 0xea1f, 0x98c1, 0x8789, 0x0, 0x0);
        gbc.writeMem(0xca9f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfb51, gbc.sp());
        EXPECT(0xcaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca9f));
        EXPECT(0x62, gbc.readMem(0xcaa0));
        // CB 62 00D6
        gbc.setState(0x431a, 0x8fba, 0xe080, 0xbe01, 0x67a6, 0x26fe, 0x1, 0x1);
        gbc.writeMem(0x431a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8fba, gbc.sp());
        EXPECT(0x431c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00D7
        gbc.setState(0x99, 0x21a8, 0x3b60, 0xf3d7, 0xa2a1, 0xb25a, 0x1, 0x1);
        gbc.writeMem(0x99, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x21a8, gbc.sp());
        EXPECT(0x9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00D8
        gbc.setState(0xa79a, 0x4a55, 0x4ba0, 0x900c, 0x4d2a, 0xb3ee, 0x0, 0x0);
        gbc.writeMem(0xa79a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4a55, gbc.sp());
        EXPECT(0xa79c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa79a));
        EXPECT(0x62, gbc.readMem(0xa79b));
        // CB 62 00D9
        gbc.setState(0x47b8, 0xd86a, 0x4300, 0x1bb0, 0xfd45, 0xf077, 0x0, 0x1);
        gbc.writeMem(0x47b8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd86a, gbc.sp());
        EXPECT(0x47ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00DB
        gbc.setState(0xe0f3, 0xa8b9, 0xff20, 0x6b95, 0xcfe7, 0x96a2, 0x0, 0x0);
        gbc.writeMem(0xe0f3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa8b9, gbc.sp());
        EXPECT(0xe0f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f3));
        EXPECT(0x62, gbc.readMem(0xe0f4));
        // CB 62 00DC
        gbc.setState(0x157b, 0xe7df, 0x8810, 0x520c, 0x8af3, 0xb123, 0x1, 0x1);
        gbc.writeMem(0x157b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe7df, gbc.sp());
        EXPECT(0x157d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00DD
        gbc.setState(0x5efa, 0x8a8f, 0xedf0, 0xb959, 0xf, 0x4417, 0x1, 0x0);
        gbc.writeMem(0x5efa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8a8f, gbc.sp());
        EXPECT(0x5efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00DE
        gbc.setState(0x344, 0xb69d, 0x1010, 0xe9d7, 0x1cea, 0x6dc8, 0x0, 0x1);
        gbc.writeMem(0x344, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb69d, gbc.sp());
        EXPECT(0x346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00DF
        gbc.setState(0x224d, 0x411c, 0x17c0, 0x2658, 0xecb4, 0x53a2, 0x0, 0x1);
        gbc.writeMem(0x224d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x411c, gbc.sp());
        EXPECT(0x224f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00E0
        gbc.setState(0xe1be, 0x78da, 0x5c10, 0x31f7, 0xd0d8, 0x387b, 0x1, 0x0);
        gbc.writeMem(0xe1be, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x78da, gbc.sp());
        EXPECT(0xe1c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1be));
        EXPECT(0x62, gbc.readMem(0xe1bf));
        // CB 62 00E1
        gbc.setState(0x3c54, 0xa7b9, 0x71a0, 0x72f1, 0xeca7, 0x52c8, 0x0, 0x0);
        gbc.writeMem(0x3c54, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa7b9, gbc.sp());
        EXPECT(0x3c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00E2
        gbc.setState(0x2031, 0xdce9, 0xd980, 0xcc5b, 0x7c19, 0xf43f, 0x1, 0x1);
        gbc.writeMem(0x2031, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdce9, gbc.sp());
        EXPECT(0x2033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00E3
        gbc.setState(0xec6, 0xc66d, 0x4ee0, 0xc1f5, 0x2417, 0x4929, 0x0, 0x0);
        gbc.writeMem(0xec6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc66d, gbc.sp());
        EXPECT(0xec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00E4
        gbc.setState(0x103e, 0xa51d, 0xfd80, 0x20c8, 0x4b6, 0x3f6c, 0x0, 0x1);
        gbc.writeMem(0x103e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa51d, gbc.sp());
        EXPECT(0x1040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00E6
        gbc.setState(0x4ebd, 0x401f, 0x9b90, 0x9e8b, 0xeef7, 0x49ab, 0x1, 0x1);
        gbc.writeMem(0x4ebd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x401f, gbc.sp());
        EXPECT(0x4ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00E7
        gbc.setState(0xce71, 0x32d2, 0x9f00, 0x1d75, 0x2e9b, 0x9ae5, 0x0, 0x1);
        gbc.writeMem(0xce71, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x32d2, gbc.sp());
        EXPECT(0xce73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce71));
        EXPECT(0x62, gbc.readMem(0xce72));
        // CB 62 00E8
        gbc.setState(0x9052, 0x6380, 0xc070, 0x7b35, 0xc0d, 0xb387, 0x0, 0x1);
        gbc.writeMem(0x9052, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6380, gbc.sp());
        EXPECT(0x9054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9052));
        EXPECT(0x62, gbc.readMem(0x9053));
        // CB 62 00E9
        gbc.setState(0x2006, 0xd590, 0x1f20, 0x364d, 0x6553, 0xd569, 0x0, 0x1);
        gbc.writeMem(0x2006, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd590, gbc.sp());
        EXPECT(0x2008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00EA
        gbc.setState(0x8c67, 0x6f03, 0x5220, 0xd5ac, 0xb534, 0x2a63, 0x1, 0x1);
        gbc.writeMem(0x8c67, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6f03, gbc.sp());
        EXPECT(0x8c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c67));
        EXPECT(0x62, gbc.readMem(0x8c68));
        // CB 62 00EB
        gbc.setState(0xe19c, 0xa1f7, 0x48a0, 0xba04, 0x25ce, 0x7acf, 0x1, 0x1);
        gbc.writeMem(0xe19c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa1f7, gbc.sp());
        EXPECT(0xe19e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe19c));
        EXPECT(0x62, gbc.readMem(0xe19d));
        // CB 62 00EC
        gbc.setState(0x21a6, 0x4a53, 0x10c0, 0xc564, 0xcc25, 0xce89, 0x1, 0x1);
        gbc.writeMem(0x21a6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4a53, gbc.sp());
        EXPECT(0x21a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00EE
        gbc.setState(0xcdc6, 0xe28d, 0x8260, 0xcbfe, 0x7407, 0xf3b3, 0x0, 0x1);
        gbc.writeMem(0xcdc6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe28d, gbc.sp());
        EXPECT(0xcdc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdc6));
        EXPECT(0x62, gbc.readMem(0xcdc7));
        // CB 62 00EF
        gbc.setState(0xbd2f, 0x5239, 0x75d0, 0xa057, 0x5fa, 0xed6c, 0x1, 0x1);
        gbc.writeMem(0xbd2f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5239, gbc.sp());
        EXPECT(0xbd31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd2f));
        EXPECT(0x62, gbc.readMem(0xbd30));
        // CB 62 00F0
        gbc.setState(0x3db6, 0x8a2f, 0x5bb0, 0x8a4c, 0xc717, 0x7fc0, 0x0, 0x1);
        gbc.writeMem(0x3db6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8a2f, gbc.sp());
        EXPECT(0x3db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00F2
        gbc.setState(0x5277, 0x410c, 0x2410, 0x7dfd, 0x19c3, 0xbb14, 0x0, 0x1);
        gbc.writeMem(0x5277, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x410c, gbc.sp());
        EXPECT(0x5279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00F3
        gbc.setState(0x23ac, 0xa2da, 0xee70, 0x3990, 0x47cf, 0x3ff2, 0x0, 0x0);
        gbc.writeMem(0x23ac, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa2da, gbc.sp());
        EXPECT(0x23ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00F5
        gbc.setState(0xd7ff, 0xe9a7, 0xf910, 0x8989, 0x4da9, 0x8d4, 0x0, 0x0);
        gbc.writeMem(0xd7ff, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe9a7, gbc.sp());
        EXPECT(0xd801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ff));
        EXPECT(0x62, gbc.readMem(0xd800));
        // CB 62 00F6
        gbc.setState(0xda0c, 0x2c96, 0xd2a0, 0x379, 0xbb05, 0x1ba, 0x0, 0x1);
        gbc.writeMem(0xda0c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2c96, gbc.sp());
        EXPECT(0xda0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda0c));
        EXPECT(0x62, gbc.readMem(0xda0d));
        // CB 62 00F7
        gbc.setState(0xed19, 0xf95, 0x13c0, 0x8ead, 0x45ce, 0xa015, 0x1, 0x1);
        gbc.writeMem(0xed19, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf95, gbc.sp());
        EXPECT(0xed1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed19));
        EXPECT(0x62, gbc.readMem(0xed1a));
        // CB 62 00F8
        gbc.setState(0x641e, 0xf6d2, 0x26a0, 0xf31e, 0x88ea, 0x527f, 0x0, 0x1);
        gbc.writeMem(0x641e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf6d2, gbc.sp());
        EXPECT(0x6420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 00FA
        gbc.setState(0x22a, 0x8bc1, 0x5390, 0x3bfe, 0xb945, 0x97ef, 0x1, 0x0);
        gbc.writeMem(0x22a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8bc1, gbc.sp());
        EXPECT(0x22c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00FB
        gbc.setState(0xdc3f, 0x9c5f, 0xd9b0, 0x13e0, 0xe01f, 0x56a9, 0x1, 0x0);
        gbc.writeMem(0xdc3f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9c5f, gbc.sp());
        EXPECT(0xdc41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc3f));
        EXPECT(0x62, gbc.readMem(0xdc40));
        // CB 62 00FD
        gbc.setState(0x5be4, 0x20b8, 0xde50, 0x47d9, 0x203a, 0xe49, 0x0, 0x0);
        gbc.writeMem(0x5be4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x20b8, gbc.sp());
        EXPECT(0x5be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00FE
        gbc.setState(0x6410, 0x2213, 0x1790, 0x4b9b, 0x334, 0x9ec9, 0x0, 0x1);
        gbc.writeMem(0x6410, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2213, gbc.sp());
        EXPECT(0x6412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 00FF
        gbc.setState(0x4a4d, 0x2056, 0xa7e0, 0x4223, 0x72fa, 0xf0d5, 0x1, 0x0);
        gbc.writeMem(0x4a4d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2056, gbc.sp());
        EXPECT(0x4a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0100
        gbc.setState(0xc64b, 0x6021, 0xb110, 0x5eb7, 0xafcc, 0xab69, 0x1, 0x0);
        gbc.writeMem(0xc64b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6021, gbc.sp());
        EXPECT(0xc64d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc64b));
        EXPECT(0x62, gbc.readMem(0xc64c));
        // CB 62 0101
        gbc.setState(0x8e41, 0x484d, 0x2150, 0x6a70, 0xb768, 0xdbbb, 0x1, 0x0);
        gbc.writeMem(0x8e41, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x484d, gbc.sp());
        EXPECT(0x8e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e41));
        EXPECT(0x62, gbc.readMem(0x8e42));
        // CB 62 0102
        gbc.setState(0xb722, 0xfc87, 0xf4c0, 0x3d58, 0x41ff, 0xab2, 0x0, 0x0);
        gbc.writeMem(0xb722, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfc87, gbc.sp());
        EXPECT(0xb724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb722));
        EXPECT(0x62, gbc.readMem(0xb723));
        // CB 62 0103
        gbc.setState(0xdf08, 0x806, 0x5490, 0x1008, 0x2276, 0xfb71, 0x0, 0x1);
        gbc.writeMem(0xdf08, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x806, gbc.sp());
        EXPECT(0xdf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf08));
        EXPECT(0x62, gbc.readMem(0xdf09));
        // CB 62 0104
        gbc.setState(0x1d8e, 0xb432, 0x59e0, 0x1965, 0x31dc, 0x7dc3, 0x0, 0x1);
        gbc.writeMem(0x1d8e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb432, gbc.sp());
        EXPECT(0x1d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0105
        gbc.setState(0xb366, 0xd589, 0x5dc0, 0x2bc2, 0x4019, 0x12f9, 0x1, 0x1);
        gbc.writeMem(0xb366, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd589, gbc.sp());
        EXPECT(0xb368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb366));
        EXPECT(0x62, gbc.readMem(0xb367));
        // CB 62 0106
        gbc.setState(0x5e7e, 0xa166, 0x5750, 0xb4da, 0xfcb9, 0xe277, 0x0, 0x1);
        gbc.writeMem(0x5e7e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa166, gbc.sp());
        EXPECT(0x5e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0107
        gbc.setState(0xb8e6, 0x4d2a, 0x90, 0xc7ce, 0xfb2e, 0x4b59, 0x0, 0x0);
        gbc.writeMem(0xb8e6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4d2a, gbc.sp());
        EXPECT(0xb8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e6));
        EXPECT(0x62, gbc.readMem(0xb8e7));
        // CB 62 0108
        gbc.setState(0xca06, 0x8de4, 0xdb80, 0x4198, 0xc903, 0x93c7, 0x0, 0x1);
        gbc.writeMem(0xca06, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8de4, gbc.sp());
        EXPECT(0xca08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca06));
        EXPECT(0x62, gbc.readMem(0xca07));
        // CB 62 0109
        gbc.setState(0xedd7, 0x930f, 0x30b0, 0xa138, 0xee1b, 0xe9b2, 0x1, 0x0);
        gbc.writeMem(0xedd7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x930f, gbc.sp());
        EXPECT(0xedd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd7));
        EXPECT(0x62, gbc.readMem(0xedd8));
        // CB 62 010A
        gbc.setState(0xdd64, 0x7094, 0xd130, 0xfba4, 0x2533, 0x9d66, 0x1, 0x1);
        gbc.writeMem(0xdd64, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7094, gbc.sp());
        EXPECT(0xdd66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd64));
        EXPECT(0x62, gbc.readMem(0xdd65));
        // CB 62 010B
        gbc.setState(0x7d7b, 0x3526, 0x57b0, 0x7f2a, 0xdeb6, 0xdc45, 0x0, 0x1);
        gbc.writeMem(0x7d7b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3526, gbc.sp());
        EXPECT(0x7d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 010C
        gbc.setState(0x282d, 0x82b6, 0xd830, 0x9255, 0xc2a9, 0xa0ad, 0x1, 0x1);
        gbc.writeMem(0x282d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x82b6, gbc.sp());
        EXPECT(0x282f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 010D
        gbc.setState(0xd5b6, 0x9b2c, 0x9c0, 0xcc3f, 0xdb12, 0x96b6, 0x0, 0x1);
        gbc.writeMem(0xd5b6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9b2c, gbc.sp());
        EXPECT(0xd5b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b6));
        EXPECT(0x62, gbc.readMem(0xd5b7));
        // CB 62 010F
        gbc.setState(0x6e27, 0x4c0, 0x83a0, 0x5134, 0xa911, 0x82aa, 0x0, 0x1);
        gbc.writeMem(0x6e27, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4c0, gbc.sp());
        EXPECT(0x6e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0110
        gbc.setState(0xd495, 0x9987, 0xf2e0, 0xa63c, 0xd432, 0xb9f3, 0x0, 0x1);
        gbc.writeMem(0xd495, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9987, gbc.sp());
        EXPECT(0xd497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd495));
        EXPECT(0x62, gbc.readMem(0xd496));
        // CB 62 0111
        gbc.setState(0xbd6e, 0xc2d2, 0xbe40, 0x3c72, 0xbd15, 0xddcd, 0x1, 0x1);
        gbc.writeMem(0xbd6e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc2d2, gbc.sp());
        EXPECT(0xbd70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd6e));
        EXPECT(0x62, gbc.readMem(0xbd6f));
        // CB 62 0113
        gbc.setState(0x9c37, 0x3063, 0x4fb0, 0x17dc, 0xaa16, 0x60c8, 0x1, 0x0);
        gbc.writeMem(0x9c37, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3063, gbc.sp());
        EXPECT(0x9c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c37));
        EXPECT(0x62, gbc.readMem(0x9c38));
        // CB 62 0114
        gbc.setState(0xdc9c, 0xe996, 0xa60, 0x70f0, 0x31a7, 0x1ee7, 0x1, 0x0);
        gbc.writeMem(0xdc9c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe996, gbc.sp());
        EXPECT(0xdc9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc9c));
        EXPECT(0x62, gbc.readMem(0xdc9d));
        // CB 62 0115
        gbc.setState(0x4656, 0xb2ba, 0x3170, 0xd753, 0x49ca, 0x47b5, 0x0, 0x1);
        gbc.writeMem(0x4656, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb2ba, gbc.sp());
        EXPECT(0x4658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0116
        gbc.setState(0xee8e, 0x4e3f, 0xc1a0, 0xe706, 0x5ecd, 0x4cd6, 0x1, 0x0);
        gbc.writeMem(0xee8e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4e3f, gbc.sp());
        EXPECT(0xee90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee8e));
        EXPECT(0x62, gbc.readMem(0xee8f));
        // CB 62 0117
        gbc.setState(0xb478, 0x6335, 0x5980, 0x8a0d, 0xd1f2, 0x115c, 0x1, 0x1);
        gbc.writeMem(0xb478, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6335, gbc.sp());
        EXPECT(0xb47a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb478));
        EXPECT(0x62, gbc.readMem(0xb479));
        // CB 62 0118
        gbc.setState(0x4f81, 0x5a, 0x7480, 0xba13, 0xe3b3, 0x30b0, 0x0, 0x1);
        gbc.writeMem(0x4f81, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5a, gbc.sp());
        EXPECT(0x4f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0119
        gbc.setState(0x68aa, 0x9aaa, 0x23c0, 0xa68e, 0xcdb, 0xcd2e, 0x1, 0x0);
        gbc.writeMem(0x68aa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9aaa, gbc.sp());
        EXPECT(0x68ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 011A
        gbc.setState(0x940c, 0x486c, 0xe7d0, 0x3c23, 0x86ff, 0xbd31, 0x0, 0x1);
        gbc.writeMem(0x940c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x486c, gbc.sp());
        EXPECT(0x940e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940c));
        EXPECT(0x62, gbc.readMem(0x940d));
        // CB 62 011B
        gbc.setState(0x2c8c, 0xa4ad, 0x8e50, 0xfda8, 0x180a, 0x7c9, 0x0, 0x0);
        gbc.writeMem(0x2c8c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa4ad, gbc.sp());
        EXPECT(0x2c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 011C
        gbc.setState(0x2e5b, 0xd4f1, 0x6bc0, 0xfaa4, 0x54b1, 0x6414, 0x0, 0x1);
        gbc.writeMem(0x2e5b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd4f1, gbc.sp());
        EXPECT(0x2e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 011D
        gbc.setState(0xe077, 0x29f3, 0xd0a0, 0xdc7f, 0x1950, 0x57d1, 0x0, 0x1);
        gbc.writeMem(0xe077, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x29f3, gbc.sp());
        EXPECT(0xe079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe077));
        EXPECT(0x62, gbc.readMem(0xe078));
        // CB 62 011E
        gbc.setState(0xd207, 0xc41, 0x6ca0, 0x7f7b, 0xb993, 0xd97e, 0x1, 0x1);
        gbc.writeMem(0xd207, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc41, gbc.sp());
        EXPECT(0xd209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd207));
        EXPECT(0x62, gbc.readMem(0xd208));
        // CB 62 011F
        gbc.setState(0x185e, 0x14d, 0xfbf0, 0x5803, 0xcb05, 0x77bf, 0x0, 0x0);
        gbc.writeMem(0x185e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x14d, gbc.sp());
        EXPECT(0x1860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0120
        gbc.setState(0xde78, 0xe856, 0x4c0, 0x27ad, 0xe7d8, 0xbea0, 0x1, 0x0);
        gbc.writeMem(0xde78, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe856, gbc.sp());
        EXPECT(0xde7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde78));
        EXPECT(0x62, gbc.readMem(0xde79));
        // CB 62 0121
        gbc.setState(0x5928, 0x6c12, 0xe940, 0x9f1c, 0x93c5, 0xd44c, 0x1, 0x1);
        gbc.writeMem(0x5928, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6c12, gbc.sp());
        EXPECT(0x592a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0122
        gbc.setState(0xc1c0, 0x44b9, 0x5ae0, 0x2caf, 0xa8d7, 0x6fb2, 0x0, 0x0);
        gbc.writeMem(0xc1c0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x44b9, gbc.sp());
        EXPECT(0xc1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c0));
        EXPECT(0x62, gbc.readMem(0xc1c1));
        // CB 62 0123
        gbc.setState(0x1ff, 0xdc4f, 0x8320, 0x6e49, 0x8189, 0xa984, 0x0, 0x0);
        gbc.writeMem(0x1ff, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xdc4f, gbc.sp());
        EXPECT(0x201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0124
        gbc.setState(0x2ba5, 0x35e0, 0x9140, 0xb93d, 0xea18, 0x333f, 0x1, 0x1);
        gbc.writeMem(0x2ba5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x35e0, gbc.sp());
        EXPECT(0x2ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0125
        gbc.setState(0xbf55, 0x506, 0xb280, 0x60bf, 0x832a, 0x11f6, 0x1, 0x1);
        gbc.writeMem(0xbf55, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x506, gbc.sp());
        EXPECT(0xbf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf55));
        EXPECT(0x62, gbc.readMem(0xbf56));
        // CB 62 0126
        gbc.setState(0xd8db, 0xa3e4, 0xc670, 0xe49d, 0xdd5d, 0xc930, 0x1, 0x0);
        gbc.writeMem(0xd8db, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa3e4, gbc.sp());
        EXPECT(0xd8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8db));
        EXPECT(0x62, gbc.readMem(0xd8dc));
        // CB 62 0127
        gbc.setState(0x4a9f, 0x8693, 0xf9e0, 0xf92c, 0x9d73, 0xb2d5, 0x0, 0x0);
        gbc.writeMem(0x4a9f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8693, gbc.sp());
        EXPECT(0x4aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0128
        gbc.setState(0x63b, 0x6842, 0xb790, 0x2c42, 0x7e61, 0xe954, 0x0, 0x1);
        gbc.writeMem(0x63b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6842, gbc.sp());
        EXPECT(0x63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0129
        gbc.setState(0x10d2, 0x213, 0xd100, 0x77e, 0xbf32, 0x4a1e, 0x1, 0x0);
        gbc.writeMem(0x10d2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x213, gbc.sp());
        EXPECT(0x10d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 012A
        gbc.setState(0xbaaa, 0x567, 0x5470, 0xc0bb, 0x8c04, 0x6b30, 0x1, 0x0);
        gbc.writeMem(0xbaaa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x567, gbc.sp());
        EXPECT(0xbaac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaaa));
        EXPECT(0x62, gbc.readMem(0xbaab));
        // CB 62 012B
        gbc.setState(0xe80a, 0x9d6f, 0x96c0, 0xb024, 0xba97, 0x1631, 0x0, 0x1);
        gbc.writeMem(0xe80a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9d6f, gbc.sp());
        EXPECT(0xe80c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe80a));
        EXPECT(0x62, gbc.readMem(0xe80b));
        // CB 62 012C
        gbc.setState(0xd6cc, 0x21e5, 0x15e0, 0x3acf, 0x38cf, 0xf825, 0x1, 0x1);
        gbc.writeMem(0xd6cc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x21e5, gbc.sp());
        EXPECT(0xd6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6cc));
        EXPECT(0x62, gbc.readMem(0xd6cd));
        // CB 62 012D
        gbc.setState(0x6a27, 0x5964, 0xe710, 0xd1c6, 0xc10c, 0x11cd, 0x0, 0x1);
        gbc.writeMem(0x6a27, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5964, gbc.sp());
        EXPECT(0x6a29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 012E
        gbc.setState(0xa110, 0x1743, 0x7d40, 0xfced, 0xf0e1, 0x2a4c, 0x1, 0x1);
        gbc.writeMem(0xa110, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1743, gbc.sp());
        EXPECT(0xa112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa110));
        EXPECT(0x62, gbc.readMem(0xa111));
        // CB 62 012F
        gbc.setState(0x6aac, 0xbccf, 0xc200, 0x5f45, 0x6d42, 0x69cd, 0x1, 0x1);
        gbc.writeMem(0x6aac, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbccf, gbc.sp());
        EXPECT(0x6aae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0130
        gbc.setState(0x9922, 0x5775, 0xf800, 0x8625, 0x117b, 0xb7d2, 0x1, 0x1);
        gbc.writeMem(0x9922, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5775, gbc.sp());
        EXPECT(0x9924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9922));
        EXPECT(0x62, gbc.readMem(0x9923));
        // CB 62 0131
        gbc.setState(0xa0c9, 0x2d78, 0xd9c0, 0x1b5b, 0xe8bc, 0xcd60, 0x0, 0x0);
        gbc.writeMem(0xa0c9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2d78, gbc.sp());
        EXPECT(0xa0cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c9));
        EXPECT(0x62, gbc.readMem(0xa0ca));
        // CB 62 0132
        gbc.setState(0x3563, 0x5bf8, 0x94e0, 0xa34d, 0x8998, 0x9447, 0x1, 0x1);
        gbc.writeMem(0x3563, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5bf8, gbc.sp());
        EXPECT(0x3565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0133
        gbc.setState(0xd521, 0x355c, 0x5bf0, 0xfe52, 0xa6ea, 0x5af7, 0x0, 0x0);
        gbc.writeMem(0xd521, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x355c, gbc.sp());
        EXPECT(0xd523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd521));
        EXPECT(0x62, gbc.readMem(0xd522));
        // CB 62 0134
        gbc.setState(0xe96c, 0x349a, 0x48e0, 0xb176, 0xd5b7, 0x1c5f, 0x1, 0x0);
        gbc.writeMem(0xe96c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x349a, gbc.sp());
        EXPECT(0xe96e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96c));
        EXPECT(0x62, gbc.readMem(0xe96d));
        // CB 62 0135
        gbc.setState(0xaeb8, 0x9c70, 0x4950, 0x741e, 0xaa82, 0x369d, 0x0, 0x1);
        gbc.writeMem(0xaeb8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9c70, gbc.sp());
        EXPECT(0xaeba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb8));
        EXPECT(0x62, gbc.readMem(0xaeb9));
        // CB 62 0136
        gbc.setState(0xa2c, 0xa920, 0xa350, 0xdd75, 0x244b, 0x11fa, 0x0, 0x1);
        gbc.writeMem(0xa2c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa920, gbc.sp());
        EXPECT(0xa2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0137
        gbc.setState(0x9783, 0x18b2, 0xbd30, 0x6dba, 0xe8e9, 0x496c, 0x0, 0x1);
        gbc.writeMem(0x9783, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x18b2, gbc.sp());
        EXPECT(0x9785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9783));
        EXPECT(0x62, gbc.readMem(0x9784));
        // CB 62 0138
        gbc.setState(0x29ce, 0xd863, 0x76b0, 0x68d8, 0x73c7, 0x940e, 0x0, 0x0);
        gbc.writeMem(0x29ce, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd863, gbc.sp());
        EXPECT(0x29d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0139
        gbc.setState(0x4e83, 0x91de, 0x91e0, 0xccdf, 0xd8e0, 0x24e0, 0x1, 0x0);
        gbc.writeMem(0x4e83, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x91de, gbc.sp());
        EXPECT(0x4e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 013A
        gbc.setState(0xd427, 0x1b56, 0x60d0, 0x4bbd, 0x45e8, 0x4b03, 0x0, 0x1);
        gbc.writeMem(0xd427, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1b56, gbc.sp());
        EXPECT(0xd429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd427));
        EXPECT(0x62, gbc.readMem(0xd428));
        // CB 62 013B
        gbc.setState(0x3ec1, 0x3bc2, 0x66d0, 0xc002, 0xf882, 0x30b1, 0x0, 0x1);
        gbc.writeMem(0x3ec1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3bc2, gbc.sp());
        EXPECT(0x3ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 013C
        gbc.setState(0xe0eb, 0xd71c, 0xebe0, 0x9c72, 0xd2d1, 0x8e45, 0x1, 0x0);
        gbc.writeMem(0xe0eb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd71c, gbc.sp());
        EXPECT(0xe0ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0eb));
        EXPECT(0x62, gbc.readMem(0xe0ec));
        // CB 62 013D
        gbc.setState(0xc828, 0x20a9, 0x9190, 0x5559, 0x2d67, 0xb127, 0x1, 0x0);
        gbc.writeMem(0xc828, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x20a9, gbc.sp());
        EXPECT(0xc82a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc828));
        EXPECT(0x62, gbc.readMem(0xc829));
        // CB 62 013E
        gbc.setState(0x9390, 0xbb47, 0x7ff0, 0x6b44, 0xe936, 0xed62, 0x0, 0x0);
        gbc.writeMem(0x9390, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbb47, gbc.sp());
        EXPECT(0x9392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9390));
        EXPECT(0x62, gbc.readMem(0x9391));
        // CB 62 013F
        gbc.setState(0xd405, 0x3f12, 0xed00, 0xddaf, 0x5b76, 0xedf6, 0x0, 0x0);
        gbc.writeMem(0xd405, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3f12, gbc.sp());
        EXPECT(0xd407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd405));
        EXPECT(0x62, gbc.readMem(0xd406));
        // CB 62 0140
        gbc.setState(0xd02e, 0x2ea1, 0x5080, 0xd04c, 0xbf74, 0xb5e8, 0x0, 0x0);
        gbc.writeMem(0xd02e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2ea1, gbc.sp());
        EXPECT(0xd030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd02e));
        EXPECT(0x62, gbc.readMem(0xd02f));
        // CB 62 0141
        gbc.setState(0x276a, 0x34d9, 0xe750, 0x17d2, 0xb65b, 0x85cc, 0x0, 0x0);
        gbc.writeMem(0x276a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x34d9, gbc.sp());
        EXPECT(0x276c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0142
        gbc.setState(0x4277, 0xdfb0, 0xfac0, 0xb2cb, 0x46f5, 0x46d1, 0x0, 0x0);
        gbc.writeMem(0x4277, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdfb0, gbc.sp());
        EXPECT(0x4279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0143
        gbc.setState(0x1da2, 0xc03e, 0x5d50, 0xa4c8, 0x9d19, 0x1432, 0x1, 0x1);
        gbc.writeMem(0x1da2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc03e, gbc.sp());
        EXPECT(0x1da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0144
        gbc.setState(0x5133, 0x5fdb, 0x880, 0xc950, 0xc0d, 0x54cc, 0x1, 0x0);
        gbc.writeMem(0x5133, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5fdb, gbc.sp());
        EXPECT(0x5135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0145
        gbc.setState(0x78d1, 0x967, 0xd1f0, 0xe5e3, 0xe980, 0x3441, 0x1, 0x0);
        gbc.writeMem(0x78d1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x967, gbc.sp());
        EXPECT(0x78d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0146
        gbc.setState(0x727c, 0x7a06, 0xb50, 0x603, 0x356d, 0x7e71, 0x0, 0x0);
        gbc.writeMem(0x727c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7a06, gbc.sp());
        EXPECT(0x727e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0147
        gbc.setState(0xafb, 0x8393, 0x8950, 0x351b, 0xa5f2, 0x15e3, 0x0, 0x1);
        gbc.writeMem(0xafb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8393, gbc.sp());
        EXPECT(0xafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0148
        gbc.setState(0xbc7c, 0x863c, 0x4320, 0xa7d0, 0x78ab, 0x55a5, 0x0, 0x0);
        gbc.writeMem(0xbc7c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x863c, gbc.sp());
        EXPECT(0xbc7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc7c));
        EXPECT(0x62, gbc.readMem(0xbc7d));
        // CB 62 0149
        gbc.setState(0xd0dc, 0x94a2, 0x7920, 0x939a, 0xd593, 0x4964, 0x1, 0x1);
        gbc.writeMem(0xd0dc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x94a2, gbc.sp());
        EXPECT(0xd0de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0dc));
        EXPECT(0x62, gbc.readMem(0xd0dd));
        // CB 62 014A
        gbc.setState(0x3e6b, 0xd04c, 0xdd0, 0xee2a, 0x7418, 0x7ac9, 0x0, 0x1);
        gbc.writeMem(0x3e6b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd04c, gbc.sp());
        EXPECT(0x3e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 014B
        gbc.setState(0xaed3, 0x473a, 0x7b70, 0xe124, 0xbcb6, 0x81de, 0x1, 0x1);
        gbc.writeMem(0xaed3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x473a, gbc.sp());
        EXPECT(0xaed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed3));
        EXPECT(0x62, gbc.readMem(0xaed4));
        // CB 62 014C
        gbc.setState(0xebc8, 0xe5d0, 0xec80, 0x9e99, 0xe75e, 0xf9df, 0x1, 0x1);
        gbc.writeMem(0xebc8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe5d0, gbc.sp());
        EXPECT(0xebca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc8));
        EXPECT(0x62, gbc.readMem(0xebc9));
        // CB 62 014E
        gbc.setState(0x1cbe, 0xfbfe, 0x2e90, 0x23e4, 0xb617, 0xf5b5, 0x0, 0x0);
        gbc.writeMem(0x1cbe, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xfbfe, gbc.sp());
        EXPECT(0x1cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 014F
        gbc.setState(0xe264, 0xd19f, 0x4790, 0xf562, 0xbde6, 0x96e4, 0x1, 0x1);
        gbc.writeMem(0xe264, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd19f, gbc.sp());
        EXPECT(0xe266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe264));
        EXPECT(0x62, gbc.readMem(0xe265));
        // CB 62 0150
        gbc.setState(0x42d9, 0x345b, 0x7650, 0x3a23, 0xc9a9, 0xceef, 0x1, 0x0);
        gbc.writeMem(0x42d9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x345b, gbc.sp());
        EXPECT(0x42db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0151
        gbc.setState(0x1c64, 0xd868, 0x1170, 0xbf1d, 0x7de2, 0xa621, 0x1, 0x1);
        gbc.writeMem(0x1c64, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd868, gbc.sp());
        EXPECT(0x1c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0152
        gbc.setState(0x6015, 0xc5b6, 0x9cf0, 0xf898, 0xcd4c, 0x435b, 0x1, 0x0);
        gbc.writeMem(0x6015, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc5b6, gbc.sp());
        EXPECT(0x6017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0153
        gbc.setState(0x27fc, 0x7c83, 0x1bd0, 0x77b2, 0x69e4, 0xb03a, 0x0, 0x1);
        gbc.writeMem(0x27fc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7c83, gbc.sp());
        EXPECT(0x27fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0154
        gbc.setState(0x1a67, 0xf9a0, 0x3350, 0x225f, 0xbd3f, 0x12d, 0x0, 0x1);
        gbc.writeMem(0x1a67, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf9a0, gbc.sp());
        EXPECT(0x1a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0155
        gbc.setState(0xbbe6, 0xd395, 0x36d0, 0xaef9, 0xa217, 0x3556, 0x0, 0x0);
        gbc.writeMem(0xbbe6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd395, gbc.sp());
        EXPECT(0xbbe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe6));
        EXPECT(0x62, gbc.readMem(0xbbe7));
        // CB 62 0156
        gbc.setState(0x422d, 0x7934, 0x99e0, 0xf30b, 0x2407, 0xe34, 0x1, 0x0);
        gbc.writeMem(0x422d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7934, gbc.sp());
        EXPECT(0x422f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0157
        gbc.setState(0xb232, 0xc413, 0x1f30, 0x46f3, 0xd2db, 0xe2d7, 0x0, 0x1);
        gbc.writeMem(0xb232, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc413, gbc.sp());
        EXPECT(0xb234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb232));
        EXPECT(0x62, gbc.readMem(0xb233));
        // CB 62 0158
        gbc.setState(0x2c8, 0x14b2, 0xea10, 0x84e8, 0xf402, 0x7a10, 0x0, 0x1);
        gbc.writeMem(0x2c8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x14b2, gbc.sp());
        EXPECT(0x2ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0159
        gbc.setState(0x31ef, 0x9818, 0x7f40, 0x4270, 0xa79c, 0xec72, 0x1, 0x1);
        gbc.writeMem(0x31ef, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9818, gbc.sp());
        EXPECT(0x31f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 015A
        gbc.setState(0xea98, 0x6631, 0x8b10, 0xec84, 0x788, 0x2b26, 0x0, 0x0);
        gbc.writeMem(0xea98, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6631, gbc.sp());
        EXPECT(0xea9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea98));
        EXPECT(0x62, gbc.readMem(0xea99));
        // CB 62 015B
        gbc.setState(0x72cb, 0x332e, 0x1370, 0xcb01, 0x3981, 0x2428, 0x1, 0x0);
        gbc.writeMem(0x72cb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x332e, gbc.sp());
        EXPECT(0x72cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 015C
        gbc.setState(0x333b, 0xd99, 0x39f0, 0x6a3f, 0xf248, 0x95bc, 0x0, 0x1);
        gbc.writeMem(0x333b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd99, gbc.sp());
        EXPECT(0x333d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 015D
        gbc.setState(0xcc9a, 0x5e4c, 0xe430, 0xebc9, 0xbb2f, 0xabea, 0x0, 0x1);
        gbc.writeMem(0xcc9a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5e4c, gbc.sp());
        EXPECT(0xcc9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc9a));
        EXPECT(0x62, gbc.readMem(0xcc9b));
        // CB 62 015E
        gbc.setState(0x20a6, 0x6510, 0xdff0, 0x14be, 0xc892, 0xc030, 0x0, 0x0);
        gbc.writeMem(0x20a6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6510, gbc.sp());
        EXPECT(0x20a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 015F
        gbc.setState(0x307a, 0x4f55, 0x14a0, 0xb188, 0xa312, 0x2e3, 0x0, 0x1);
        gbc.writeMem(0x307a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4f55, gbc.sp());
        EXPECT(0x307c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0160
        gbc.setState(0x91c0, 0xedcc, 0x6110, 0xa8fa, 0x43aa, 0x4fb3, 0x0, 0x0);
        gbc.writeMem(0x91c0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xedcc, gbc.sp());
        EXPECT(0x91c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c0));
        EXPECT(0x62, gbc.readMem(0x91c1));
        // CB 62 0161
        gbc.setState(0x94d5, 0x2211, 0xb380, 0x9a12, 0x3c70, 0xf70d, 0x1, 0x1);
        gbc.writeMem(0x94d5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2211, gbc.sp());
        EXPECT(0x94d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d5));
        EXPECT(0x62, gbc.readMem(0x94d6));
        // CB 62 0162
        gbc.setState(0x7b1d, 0x3ced, 0xea10, 0xa30, 0xbdcd, 0xe739, 0x0, 0x1);
        gbc.writeMem(0x7b1d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3ced, gbc.sp());
        EXPECT(0x7b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0163
        gbc.setState(0x6db6, 0x76ac, 0x3040, 0xd005, 0x30b, 0x8342, 0x1, 0x0);
        gbc.writeMem(0x6db6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x76ac, gbc.sp());
        EXPECT(0x6db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0165
        gbc.setState(0xe900, 0xfe49, 0x9f30, 0xf83f, 0xf0be, 0x5b17, 0x0, 0x1);
        gbc.writeMem(0xe900, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfe49, gbc.sp());
        EXPECT(0xe902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe900));
        EXPECT(0x62, gbc.readMem(0xe901));
        // CB 62 0166
        gbc.setState(0x6068, 0xa1b6, 0xcad0, 0xb119, 0x20a5, 0xab6, 0x1, 0x1);
        gbc.writeMem(0x6068, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa1b6, gbc.sp());
        EXPECT(0x606a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0167
        gbc.setState(0x96e0, 0xcb75, 0x5c30, 0xbe36, 0x746, 0xc328, 0x1, 0x0);
        gbc.writeMem(0x96e0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcb75, gbc.sp());
        EXPECT(0x96e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e0));
        EXPECT(0x62, gbc.readMem(0x96e1));
        // CB 62 0168
        gbc.setState(0xf44, 0xee15, 0x4b00, 0xc5c4, 0x420c, 0xe784, 0x1, 0x0);
        gbc.writeMem(0xf44, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xee15, gbc.sp());
        EXPECT(0xf46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0169
        gbc.setState(0x2dc9, 0xdcfa, 0x91a0, 0xb69d, 0xc1be, 0x8f59, 0x1, 0x0);
        gbc.writeMem(0x2dc9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdcfa, gbc.sp());
        EXPECT(0x2dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 016A
        gbc.setState(0xb467, 0x9d40, 0xb8d0, 0x4712, 0x7dc5, 0x82b2, 0x0, 0x0);
        gbc.writeMem(0xb467, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9d40, gbc.sp());
        EXPECT(0xb469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb467));
        EXPECT(0x62, gbc.readMem(0xb468));
        // CB 62 016B
        gbc.setState(0x6b3b, 0xc1be, 0xede0, 0xb6de, 0x8aff, 0xc967, 0x0, 0x1);
        gbc.writeMem(0x6b3b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc1be, gbc.sp());
        EXPECT(0x6b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 016C
        gbc.setState(0xb7d0, 0x1090, 0x650, 0x4028, 0x4c7b, 0x90fe, 0x0, 0x1);
        gbc.writeMem(0xb7d0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1090, gbc.sp());
        EXPECT(0xb7d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d0));
        EXPECT(0x62, gbc.readMem(0xb7d1));
        // CB 62 016D
        gbc.setState(0xadad, 0x7a4b, 0x5c60, 0xb0b2, 0xe5e3, 0x970f, 0x0, 0x1);
        gbc.writeMem(0xadad, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7a4b, gbc.sp());
        EXPECT(0xadaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadad));
        EXPECT(0x62, gbc.readMem(0xadae));
        // CB 62 016E
        gbc.setState(0x48af, 0xd130, 0x2ab0, 0x94e9, 0xf89b, 0xc1fc, 0x1, 0x1);
        gbc.writeMem(0x48af, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd130, gbc.sp());
        EXPECT(0x48b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0170
        gbc.setState(0xce44, 0x4c7, 0x5aa0, 0xae75, 0x207, 0xd3ee, 0x1, 0x1);
        gbc.writeMem(0xce44, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4c7, gbc.sp());
        EXPECT(0xce46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce44));
        EXPECT(0x62, gbc.readMem(0xce45));
        // CB 62 0171
        gbc.setState(0x798d, 0x2abe, 0xdb0, 0xe935, 0x7c37, 0x9b88, 0x0, 0x1);
        gbc.writeMem(0x798d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2abe, gbc.sp());
        EXPECT(0x798f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0172
        gbc.setState(0xa96, 0xd2d9, 0xf9f0, 0x91a3, 0x8736, 0x5658, 0x0, 0x1);
        gbc.writeMem(0xa96, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd2d9, gbc.sp());
        EXPECT(0xa98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0173
        gbc.setState(0x6d3d, 0xec13, 0xb480, 0x9fa0, 0xad5e, 0x3550, 0x1, 0x1);
        gbc.writeMem(0x6d3d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xec13, gbc.sp());
        EXPECT(0x6d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0174
        gbc.setState(0xd686, 0xda4c, 0xb1a0, 0xc944, 0xf79c, 0x5f3d, 0x0, 0x0);
        gbc.writeMem(0xd686, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xda4c, gbc.sp());
        EXPECT(0xd688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd686));
        EXPECT(0x62, gbc.readMem(0xd687));
        // CB 62 0175
        gbc.setState(0xa13a, 0xebf7, 0x9120, 0x926c, 0x4e82, 0x6883, 0x0, 0x1);
        gbc.writeMem(0xa13a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xebf7, gbc.sp());
        EXPECT(0xa13c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa13a));
        EXPECT(0x62, gbc.readMem(0xa13b));
        // CB 62 0176
        gbc.setState(0x3489, 0xf3b1, 0xe2c0, 0x5e65, 0x3048, 0x9372, 0x1, 0x1);
        gbc.writeMem(0x3489, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf3b1, gbc.sp());
        EXPECT(0x348b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0177
        gbc.setState(0xd751, 0x102e, 0x7230, 0x962f, 0x1256, 0xd96b, 0x0, 0x1);
        gbc.writeMem(0xd751, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x102e, gbc.sp());
        EXPECT(0xd753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd751));
        EXPECT(0x62, gbc.readMem(0xd752));
        // CB 62 0178
        gbc.setState(0x61a0, 0xc9c, 0x8d0, 0xc820, 0x2922, 0x6ae1, 0x1, 0x0);
        gbc.writeMem(0x61a0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc9c, gbc.sp());
        EXPECT(0x61a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0179
        gbc.setState(0xeafe, 0x398, 0xa2d0, 0xbf4f, 0x25ef, 0xb93b, 0x0, 0x1);
        gbc.writeMem(0xeafe, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x398, gbc.sp());
        EXPECT(0xeb00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeafe));
        EXPECT(0x62, gbc.readMem(0xeaff));
        // CB 62 017A
        gbc.setState(0xe200, 0x2f84, 0xb10, 0x4684, 0x3f08, 0xe21c, 0x1, 0x1);
        gbc.writeMem(0xe200, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2f84, gbc.sp());
        EXPECT(0xe202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe200));
        EXPECT(0x62, gbc.readMem(0xe201));
        // CB 62 017B
        gbc.setState(0x628c, 0x5723, 0xfa10, 0x4705, 0xb01, 0x25cf, 0x0, 0x0);
        gbc.writeMem(0x628c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5723, gbc.sp());
        EXPECT(0x628e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 017C
        gbc.setState(0x435b, 0xacfb, 0x13d0, 0xf761, 0xb51e, 0x86e8, 0x0, 0x0);
        gbc.writeMem(0x435b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xacfb, gbc.sp());
        EXPECT(0x435d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 017D
        gbc.setState(0x7f43, 0x1503, 0xb900, 0xf524, 0x2d37, 0x244e, 0x0, 0x0);
        gbc.writeMem(0x7f43, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1503, gbc.sp());
        EXPECT(0x7f45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 017E
        gbc.setState(0xcd64, 0xff4a, 0x7f70, 0x7f42, 0x456a, 0xaed9, 0x0, 0x1);
        gbc.writeMem(0xcd64, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xff4a, gbc.sp());
        EXPECT(0xcd66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd64));
        EXPECT(0x62, gbc.readMem(0xcd65));
        // CB 62 0180
        gbc.setState(0x5ca6, 0x6455, 0xc610, 0x8bca, 0xc805, 0x2d7f, 0x1, 0x0);
        gbc.writeMem(0x5ca6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6455, gbc.sp());
        EXPECT(0x5ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0181
        gbc.setState(0x1c3e, 0x62c3, 0x7b50, 0x1d57, 0xafd3, 0xeb5c, 0x0, 0x1);
        gbc.writeMem(0x1c3e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x62c3, gbc.sp());
        EXPECT(0x1c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0182
        gbc.setState(0x8692, 0x8e15, 0xa540, 0x9def, 0x6f0e, 0x507c, 0x0, 0x1);
        gbc.writeMem(0x8692, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8e15, gbc.sp());
        EXPECT(0x8694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8692));
        EXPECT(0x62, gbc.readMem(0x8693));
        // CB 62 0183
        gbc.setState(0x29e3, 0x7877, 0x34b0, 0xe93f, 0x3e4e, 0x5b9e, 0x0, 0x0);
        gbc.writeMem(0x29e3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7877, gbc.sp());
        EXPECT(0x29e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0184
        gbc.setState(0x628b, 0x619c, 0xec0, 0x7a11, 0xadeb, 0x2dec, 0x1, 0x0);
        gbc.writeMem(0x628b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x619c, gbc.sp());
        EXPECT(0x628d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0185
        gbc.setState(0x9632, 0x390, 0x1a80, 0x4a95, 0xb6a0, 0x3b04, 0x0, 0x1);
        gbc.writeMem(0x9632, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x390, gbc.sp());
        EXPECT(0x9634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9632));
        EXPECT(0x62, gbc.readMem(0x9633));
        // CB 62 0186
        gbc.setState(0xc5c3, 0x147d, 0x9030, 0x59b4, 0x9192, 0xd617, 0x1, 0x0);
        gbc.writeMem(0xc5c3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x147d, gbc.sp());
        EXPECT(0xc5c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c3));
        EXPECT(0x62, gbc.readMem(0xc5c4));
        // CB 62 0187
        gbc.setState(0x8283, 0xe41d, 0xf280, 0xe210, 0x7433, 0x5fdc, 0x0, 0x1);
        gbc.writeMem(0x8283, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe41d, gbc.sp());
        EXPECT(0x8285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8283));
        EXPECT(0x62, gbc.readMem(0x8284));
        // CB 62 0189
        gbc.setState(0x224, 0x624c, 0xd8f0, 0x4c81, 0x9321, 0x38bd, 0x0, 0x0);
        gbc.writeMem(0x224, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x624c, gbc.sp());
        EXPECT(0x226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 018A
        gbc.setState(0x1a89, 0x98d8, 0x470, 0xc70, 0xb462, 0xc598, 0x0, 0x0);
        gbc.writeMem(0x1a89, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x98d8, gbc.sp());
        EXPECT(0x1a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 018B
        gbc.setState(0xa8c8, 0xfe33, 0x84e0, 0x8d2d, 0xf973, 0x7e0c, 0x1, 0x0);
        gbc.writeMem(0xa8c8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfe33, gbc.sp());
        EXPECT(0xa8ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c8));
        EXPECT(0x62, gbc.readMem(0xa8c9));
        // CB 62 018C
        gbc.setState(0xc486, 0x3739, 0x910, 0x4b32, 0x298, 0x4c4a, 0x0, 0x0);
        gbc.writeMem(0xc486, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3739, gbc.sp());
        EXPECT(0xc488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc486));
        EXPECT(0x62, gbc.readMem(0xc487));
        // CB 62 018D
        gbc.setState(0x3248, 0xd3ee, 0x9cf0, 0x8cfe, 0xfa00, 0xe7e9, 0x0, 0x0);
        gbc.writeMem(0x3248, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd3ee, gbc.sp());
        EXPECT(0x324a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 018E
        gbc.setState(0x637f, 0x6497, 0x9e40, 0x4c38, 0x5151, 0xdd3d, 0x0, 0x0);
        gbc.writeMem(0x637f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6497, gbc.sp());
        EXPECT(0x6381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 018F
        gbc.setState(0xe65d, 0x4491, 0x11e0, 0xdce9, 0xa0ec, 0xef3d, 0x0, 0x1);
        gbc.writeMem(0xe65d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4491, gbc.sp());
        EXPECT(0xe65f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe65d));
        EXPECT(0x62, gbc.readMem(0xe65e));
        // CB 62 0190
        gbc.setState(0xd343, 0x99af, 0x8f90, 0x702, 0xb7a0, 0xb921, 0x0, 0x1);
        gbc.writeMem(0xd343, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x99af, gbc.sp());
        EXPECT(0xd345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd343));
        EXPECT(0x62, gbc.readMem(0xd344));
        // CB 62 0191
        gbc.setState(0x4708, 0x596f, 0x3a10, 0xe336, 0x9bdc, 0xdb59, 0x1, 0x1);
        gbc.writeMem(0x4708, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x596f, gbc.sp());
        EXPECT(0x470a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0192
        gbc.setState(0x8482, 0xb4e, 0x5c90, 0x9b47, 0xfcd1, 0x89d, 0x0, 0x1);
        gbc.writeMem(0x8482, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb4e, gbc.sp());
        EXPECT(0x8484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8482));
        EXPECT(0x62, gbc.readMem(0x8483));
        // CB 62 0193
        gbc.setState(0xa307, 0x2ab5, 0x6250, 0x2e09, 0xc069, 0x6d0a, 0x1, 0x0);
        gbc.writeMem(0xa307, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2ab5, gbc.sp());
        EXPECT(0xa309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa307));
        EXPECT(0x62, gbc.readMem(0xa308));
        // CB 62 0194
        gbc.setState(0x22c2, 0xe556, 0x90c0, 0xf78a, 0x429d, 0x3bb5, 0x1, 0x0);
        gbc.writeMem(0x22c2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe556, gbc.sp());
        EXPECT(0x22c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0195
        gbc.setState(0x8347, 0xa7c2, 0x78b0, 0x6747, 0x422b, 0x7434, 0x0, 0x1);
        gbc.writeMem(0x8347, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa7c2, gbc.sp());
        EXPECT(0x8349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8347));
        EXPECT(0x62, gbc.readMem(0x8348));
        // CB 62 0197
        gbc.setState(0xac1d, 0x6fb6, 0x46d0, 0xbe54, 0xbef4, 0x68f7, 0x1, 0x1);
        gbc.writeMem(0xac1d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6fb6, gbc.sp());
        EXPECT(0xac1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac1d));
        EXPECT(0x62, gbc.readMem(0xac1e));
        // CB 62 0198
        gbc.setState(0x4f46, 0xb401, 0xa0, 0xe0d, 0x5549, 0x5d11, 0x0, 0x0);
        gbc.writeMem(0x4f46, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb401, gbc.sp());
        EXPECT(0x4f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 019A
        gbc.setState(0xe0aa, 0x3305, 0xc040, 0xecfa, 0x2bf6, 0x12ce, 0x1, 0x1);
        gbc.writeMem(0xe0aa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3305, gbc.sp());
        EXPECT(0xe0ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0aa));
        EXPECT(0x62, gbc.readMem(0xe0ab));
        // CB 62 019B
        gbc.setState(0xa458, 0x57d9, 0x6210, 0x6634, 0xfcea, 0x8abc, 0x0, 0x1);
        gbc.writeMem(0xa458, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x57d9, gbc.sp());
        EXPECT(0xa45a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa458));
        EXPECT(0x62, gbc.readMem(0xa459));
        // CB 62 019C
        gbc.setState(0x4a3b, 0xd7d7, 0x3a0, 0x907b, 0xb38b, 0x1b20, 0x0, 0x0);
        gbc.writeMem(0x4a3b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd7d7, gbc.sp());
        EXPECT(0x4a3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 019D
        gbc.setState(0xcbd, 0xe7f, 0x3f60, 0x17c3, 0xd48d, 0x6bed, 0x1, 0x0);
        gbc.writeMem(0xcbd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe7f, gbc.sp());
        EXPECT(0xcbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 019E
        gbc.setState(0xb410, 0x2930, 0x8590, 0xa3ce, 0x928a, 0x3e66, 0x1, 0x0);
        gbc.writeMem(0xb410, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2930, gbc.sp());
        EXPECT(0xb412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb410));
        EXPECT(0x62, gbc.readMem(0xb411));
        // CB 62 019F
        gbc.setState(0xc8f, 0xbe53, 0x7320, 0xbee, 0xc3ff, 0xb350, 0x1, 0x0);
        gbc.writeMem(0xc8f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbe53, gbc.sp());
        EXPECT(0xc91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01A0
        gbc.setState(0xa508, 0x4dc8, 0x1680, 0xf9bc, 0x333f, 0x494a, 0x1, 0x0);
        gbc.writeMem(0xa508, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4dc8, gbc.sp());
        EXPECT(0xa50a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa508));
        EXPECT(0x62, gbc.readMem(0xa509));
        // CB 62 01A1
        gbc.setState(0xa062, 0x151c, 0xe940, 0x9910, 0x2845, 0x9fc9, 0x1, 0x0);
        gbc.writeMem(0xa062, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x151c, gbc.sp());
        EXPECT(0xa064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa062));
        EXPECT(0x62, gbc.readMem(0xa063));
        // CB 62 01A2
        gbc.setState(0x425e, 0xb7e1, 0x4350, 0xc6e4, 0x8ca, 0x73f0, 0x1, 0x0);
        gbc.writeMem(0x425e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb7e1, gbc.sp());
        EXPECT(0x4260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01A3
        gbc.setState(0xc54c, 0xa62f, 0x1b20, 0xb112, 0x2116, 0x430d, 0x1, 0x1);
        gbc.writeMem(0xc54c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa62f, gbc.sp());
        EXPECT(0xc54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54c));
        EXPECT(0x62, gbc.readMem(0xc54d));
        // CB 62 01A4
        gbc.setState(0x11dc, 0xa774, 0x31e0, 0x98f1, 0x9a54, 0xe056, 0x0, 0x1);
        gbc.writeMem(0x11dc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa774, gbc.sp());
        EXPECT(0x11de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01A5
        gbc.setState(0x925e, 0x2fee, 0x3030, 0xcce8, 0xac98, 0xf315, 0x1, 0x1);
        gbc.writeMem(0x925e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2fee, gbc.sp());
        EXPECT(0x9260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x925e));
        EXPECT(0x62, gbc.readMem(0x925f));
        // CB 62 01A6
        gbc.setState(0x84fc, 0xf136, 0x20b0, 0xe3c1, 0x5aa8, 0xe422, 0x1, 0x1);
        gbc.writeMem(0x84fc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf136, gbc.sp());
        EXPECT(0x84fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84fc));
        EXPECT(0x62, gbc.readMem(0x84fd));
        // CB 62 01A7
        gbc.setState(0xe3b, 0xef62, 0x5550, 0xf61e, 0x307b, 0x50a8, 0x1, 0x0);
        gbc.writeMem(0xe3b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xef62, gbc.sp());
        EXPECT(0xe3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01A8
        gbc.setState(0xb805, 0xf291, 0x10b0, 0x755c, 0xec3c, 0x4232, 0x1, 0x0);
        gbc.writeMem(0xb805, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf291, gbc.sp());
        EXPECT(0xb807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb805));
        EXPECT(0x62, gbc.readMem(0xb806));
        // CB 62 01A9
        gbc.setState(0x93a, 0xd18d, 0x6340, 0xdbde, 0xb0e3, 0x7108, 0x0, 0x0);
        gbc.writeMem(0x93a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd18d, gbc.sp());
        EXPECT(0x93c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01AA
        gbc.setState(0x6e5d, 0x3f18, 0x5d50, 0x5735, 0xa40d, 0x373f, 0x1, 0x1);
        gbc.writeMem(0x6e5d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3f18, gbc.sp());
        EXPECT(0x6e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01AB
        gbc.setState(0xe4f3, 0x1e65, 0x5770, 0x2a9a, 0x42a9, 0x7458, 0x1, 0x0);
        gbc.writeMem(0xe4f3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1e65, gbc.sp());
        EXPECT(0xe4f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f3));
        EXPECT(0x62, gbc.readMem(0xe4f4));
        // CB 62 01AC
        gbc.setState(0x3035, 0x3b7, 0x1dc0, 0x1533, 0xc6b, 0x9a10, 0x1, 0x0);
        gbc.writeMem(0x3035, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3b7, gbc.sp());
        EXPECT(0x3037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01AD
        gbc.setState(0x7325, 0x9523, 0x7f80, 0x2d73, 0x79ab, 0x65a9, 0x1, 0x0);
        gbc.writeMem(0x7325, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9523, gbc.sp());
        EXPECT(0x7327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01AE
        gbc.setState(0x2f84, 0xc4e6, 0xa7e0, 0x98cd, 0xd386, 0x83dd, 0x1, 0x1);
        gbc.writeMem(0x2f84, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc4e6, gbc.sp());
        EXPECT(0x2f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01AF
        gbc.setState(0x9a4d, 0x85bf, 0x5260, 0xe4a6, 0xcf11, 0x4e5e, 0x1, 0x0);
        gbc.writeMem(0x9a4d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x85bf, gbc.sp());
        EXPECT(0x9a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a4d));
        EXPECT(0x62, gbc.readMem(0x9a4e));
        // CB 62 01B0
        gbc.setState(0xb634, 0x7d52, 0xa200, 0xecca, 0xd740, 0x4a28, 0x1, 0x1);
        gbc.writeMem(0xb634, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7d52, gbc.sp());
        EXPECT(0xb636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb634));
        EXPECT(0x62, gbc.readMem(0xb635));
        // CB 62 01B1
        gbc.setState(0x6dac, 0x8aed, 0x5540, 0x49d7, 0x68ea, 0x69b6, 0x1, 0x0);
        gbc.writeMem(0x6dac, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8aed, gbc.sp());
        EXPECT(0x6dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01B2
        gbc.setState(0xcf5, 0x6887, 0x3000, 0x64ff, 0x8617, 0x7c37, 0x0, 0x0);
        gbc.writeMem(0xcf5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6887, gbc.sp());
        EXPECT(0xcf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01B3
        gbc.setState(0x8946, 0x8fd6, 0xd000, 0xaf19, 0x655e, 0x457, 0x0, 0x1);
        gbc.writeMem(0x8946, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8fd6, gbc.sp());
        EXPECT(0x8948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8946));
        EXPECT(0x62, gbc.readMem(0x8947));
        // CB 62 01B5
        gbc.setState(0x87c, 0x2ac9, 0xc1c0, 0xb650, 0x9e2b, 0x24ae, 0x0, 0x1);
        gbc.writeMem(0x87c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2ac9, gbc.sp());
        EXPECT(0x87e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01B6
        gbc.setState(0x573f, 0x2c62, 0x6ff0, 0x8b, 0xdc2, 0x67dc, 0x1, 0x0);
        gbc.writeMem(0x573f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2c62, gbc.sp());
        EXPECT(0x5741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01B7
        gbc.setState(0x864c, 0xc1e4, 0xc120, 0x848d, 0x66a6, 0x69f0, 0x1, 0x1);
        gbc.writeMem(0x864c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc1e4, gbc.sp());
        EXPECT(0x864e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x864c));
        EXPECT(0x62, gbc.readMem(0x864d));
        // CB 62 01B8
        gbc.setState(0x6970, 0x7187, 0xb6d0, 0x9f88, 0x7015, 0xd5f2, 0x0, 0x0);
        gbc.writeMem(0x6970, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7187, gbc.sp());
        EXPECT(0x6972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01B9
        gbc.setState(0x57a7, 0xac68, 0x17e0, 0x272e, 0xdf2b, 0x2620, 0x0, 0x1);
        gbc.writeMem(0x57a7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xac68, gbc.sp());
        EXPECT(0x57a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01BA
        gbc.setState(0x6585, 0xdca4, 0x6fd0, 0xe1b0, 0xa2a0, 0xe442, 0x0, 0x1);
        gbc.writeMem(0x6585, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdca4, gbc.sp());
        EXPECT(0x6587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01BC
        gbc.setState(0x1469, 0x22bc, 0x2f0, 0xb01a, 0x2df5, 0x7557, 0x1, 0x0);
        gbc.writeMem(0x1469, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x22bc, gbc.sp());
        EXPECT(0x146b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01BE
        gbc.setState(0xb932, 0xe92a, 0xf870, 0x232, 0xf5b2, 0x2d4d, 0x0, 0x1);
        gbc.writeMem(0xb932, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe92a, gbc.sp());
        EXPECT(0xb934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb932));
        EXPECT(0x62, gbc.readMem(0xb933));
        // CB 62 01BF
        gbc.setState(0x3a2, 0x441a, 0x76b0, 0x9fc5, 0x4dc6, 0x1eb9, 0x1, 0x1);
        gbc.writeMem(0x3a2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x441a, gbc.sp());
        EXPECT(0x3a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01C0
        gbc.setState(0xc75, 0x5bb1, 0xaf10, 0x15b7, 0xdf03, 0x28d, 0x1, 0x1);
        gbc.writeMem(0xc75, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5bb1, gbc.sp());
        EXPECT(0xc77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01C1
        gbc.setState(0x8fbf, 0xc39b, 0xc330, 0x73c4, 0x733e, 0x729, 0x0, 0x1);
        gbc.writeMem(0x8fbf, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc39b, gbc.sp());
        EXPECT(0x8fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fbf));
        EXPECT(0x62, gbc.readMem(0x8fc0));
        // CB 62 01C2
        gbc.setState(0xaeaf, 0x1c3e, 0x4a80, 0x4101, 0x3da5, 0x83fb, 0x1, 0x0);
        gbc.writeMem(0xaeaf, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1c3e, gbc.sp());
        EXPECT(0xaeb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeaf));
        EXPECT(0x62, gbc.readMem(0xaeb0));
        // CB 62 01C3
        gbc.setState(0x4e04, 0xa51b, 0x75d0, 0x29ea, 0x1a8c, 0x3a6a, 0x1, 0x0);
        gbc.writeMem(0x4e04, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa51b, gbc.sp());
        EXPECT(0x4e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01C4
        gbc.setState(0x4d9f, 0x9b2a, 0xbd70, 0x5629, 0xb0f0, 0xea4c, 0x0, 0x1);
        gbc.writeMem(0x4d9f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9b2a, gbc.sp());
        EXPECT(0x4da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01C5
        gbc.setState(0xc464, 0x9a58, 0x3c00, 0xb2c1, 0xc7e9, 0x2b58, 0x1, 0x0);
        gbc.writeMem(0xc464, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9a58, gbc.sp());
        EXPECT(0xc466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc464));
        EXPECT(0x62, gbc.readMem(0xc465));
        // CB 62 01C6
        gbc.setState(0xcf63, 0x4009, 0x6a30, 0xe78a, 0xaf55, 0x9c9b, 0x1, 0x0);
        gbc.writeMem(0xcf63, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4009, gbc.sp());
        EXPECT(0xcf65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf63));
        EXPECT(0x62, gbc.readMem(0xcf64));
        // CB 62 01C7
        gbc.setState(0xca50, 0xed78, 0xf270, 0x789c, 0xc1e7, 0x4c05, 0x1, 0x1);
        gbc.writeMem(0xca50, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xed78, gbc.sp());
        EXPECT(0xca52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca50));
        EXPECT(0x62, gbc.readMem(0xca51));
        // CB 62 01C8
        gbc.setState(0x86aa, 0x94d7, 0x800, 0xd996, 0xee83, 0x8b1f, 0x1, 0x0);
        gbc.writeMem(0x86aa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x94d7, gbc.sp());
        EXPECT(0x86ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86aa));
        EXPECT(0x62, gbc.readMem(0x86ab));
        // CB 62 01C9
        gbc.setState(0xb94e, 0xe947, 0xf6a0, 0x3e5a, 0xd311, 0x22e9, 0x1, 0x0);
        gbc.writeMem(0xb94e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe947, gbc.sp());
        EXPECT(0xb950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb94e));
        EXPECT(0x62, gbc.readMem(0xb94f));
        // CB 62 01CA
        gbc.setState(0x9dac, 0xf28a, 0x2e60, 0x49c3, 0xccd, 0x36f4, 0x1, 0x0);
        gbc.writeMem(0x9dac, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf28a, gbc.sp());
        EXPECT(0x9dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dac));
        EXPECT(0x62, gbc.readMem(0x9dad));
        // CB 62 01CB
        gbc.setState(0x6854, 0xcde1, 0x8e40, 0x1332, 0x383e, 0x4cc3, 0x1, 0x1);
        gbc.writeMem(0x6854, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcde1, gbc.sp());
        EXPECT(0x6856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01CC
        gbc.setState(0x7691, 0xc005, 0x1030, 0xae5c, 0x653f, 0xa0d6, 0x0, 0x0);
        gbc.writeMem(0x7691, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc005, gbc.sp());
        EXPECT(0x7693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01CD
        gbc.setState(0x369d, 0x742, 0x8f40, 0x2702, 0xb374, 0x298e, 0x0, 0x0);
        gbc.writeMem(0x369d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x742, gbc.sp());
        EXPECT(0x369f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01CE
        gbc.setState(0xcfcb, 0xe80f, 0xda10, 0x5eca, 0x7441, 0x5c49, 0x1, 0x0);
        gbc.writeMem(0xcfcb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe80f, gbc.sp());
        EXPECT(0xcfcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfcb));
        EXPECT(0x62, gbc.readMem(0xcfcc));
        // CB 62 01D0
        gbc.setState(0x43db, 0x7a64, 0x4de0, 0xfc29, 0x596e, 0x6b52, 0x0, 0x1);
        gbc.writeMem(0x43db, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7a64, gbc.sp());
        EXPECT(0x43dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01D1
        gbc.setState(0x9adc, 0xb9ab, 0xf610, 0xb7ad, 0x1f6c, 0xe484, 0x1, 0x1);
        gbc.writeMem(0x9adc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb9ab, gbc.sp());
        EXPECT(0x9ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9adc));
        EXPECT(0x62, gbc.readMem(0x9add));
        // CB 62 01D2
        gbc.setState(0xe9d2, 0x4e9b, 0xae20, 0xf416, 0x29d8, 0x1445, 0x1, 0x0);
        gbc.writeMem(0xe9d2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4e9b, gbc.sp());
        EXPECT(0xe9d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d2));
        EXPECT(0x62, gbc.readMem(0xe9d3));
        // CB 62 01D3
        gbc.setState(0x3ef6, 0x5a7d, 0x900, 0x3c65, 0x5189, 0x16ea, 0x1, 0x0);
        gbc.writeMem(0x3ef6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5a7d, gbc.sp());
        EXPECT(0x3ef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01D4
        gbc.setState(0x64a, 0xfe50, 0x43d0, 0x8cb2, 0x3404, 0x87e1, 0x1, 0x1);
        gbc.writeMem(0x64a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfe50, gbc.sp());
        EXPECT(0x64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01D5
        gbc.setState(0xce9, 0x1a95, 0x7b20, 0xbebc, 0x4032, 0x4cb3, 0x0, 0x1);
        gbc.writeMem(0xce9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1a95, gbc.sp());
        EXPECT(0xceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01D6
        gbc.setState(0x136e, 0x9b19, 0x9500, 0xce28, 0x6a68, 0x6d4a, 0x1, 0x0);
        gbc.writeMem(0x136e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9b19, gbc.sp());
        EXPECT(0x1370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01D7
        gbc.setState(0x6c59, 0xc63a, 0x6700, 0xab85, 0x8776, 0xab77, 0x0, 0x0);
        gbc.writeMem(0x6c59, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc63a, gbc.sp());
        EXPECT(0x6c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01D8
        gbc.setState(0xceaa, 0x2c1, 0xd5d0, 0xb65c, 0xff9a, 0x5e92, 0x0, 0x1);
        gbc.writeMem(0xceaa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2c1, gbc.sp());
        EXPECT(0xceac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceaa));
        EXPECT(0x62, gbc.readMem(0xceab));
        // CB 62 01D9
        gbc.setState(0xbc4a, 0x7735, 0xae40, 0x922c, 0x421d, 0xeca7, 0x1, 0x0);
        gbc.writeMem(0xbc4a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7735, gbc.sp());
        EXPECT(0xbc4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc4a));
        EXPECT(0x62, gbc.readMem(0xbc4b));
        // CB 62 01DA
        gbc.setState(0xa54a, 0x7af0, 0x91e0, 0xf20e, 0xdd92, 0x978b, 0x1, 0x1);
        gbc.writeMem(0xa54a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7af0, gbc.sp());
        EXPECT(0xa54c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa54a));
        EXPECT(0x62, gbc.readMem(0xa54b));
        // CB 62 01DB
        gbc.setState(0x1def, 0x40ae, 0x75e0, 0xb7a9, 0x13c2, 0xb0bb, 0x0, 0x0);
        gbc.writeMem(0x1def, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x40ae, gbc.sp());
        EXPECT(0x1df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01DC
        gbc.setState(0x4734, 0x99fd, 0x3b50, 0xaa9e, 0x1513, 0x83c2, 0x0, 0x1);
        gbc.writeMem(0x4734, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x99fd, gbc.sp());
        EXPECT(0x4736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01DD
        gbc.setState(0x72d5, 0x8a7d, 0xb890, 0xcf21, 0x472b, 0x931b, 0x0, 0x1);
        gbc.writeMem(0x72d5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8a7d, gbc.sp());
        EXPECT(0x72d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01DE
        gbc.setState(0xb28b, 0x4e5f, 0xffa0, 0xe9e9, 0x545e, 0x33ae, 0x1, 0x1);
        gbc.writeMem(0xb28b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4e5f, gbc.sp());
        EXPECT(0xb28d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb28b));
        EXPECT(0x62, gbc.readMem(0xb28c));
        // CB 62 01DF
        gbc.setState(0x3031, 0xaebb, 0x8700, 0x9c77, 0x8a97, 0xb8db, 0x0, 0x1);
        gbc.writeMem(0x3031, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xaebb, gbc.sp());
        EXPECT(0x3033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01E0
        gbc.setState(0x320, 0xe199, 0xa2d0, 0x1ca4, 0xe01c, 0x976a, 0x1, 0x0);
        gbc.writeMem(0x320, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe199, gbc.sp());
        EXPECT(0x322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01E1
        gbc.setState(0xc828, 0xab7f, 0x4150, 0xc8ad, 0x772a, 0xe5f6, 0x0, 0x0);
        gbc.writeMem(0xc828, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xab7f, gbc.sp());
        EXPECT(0xc82a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc828));
        EXPECT(0x62, gbc.readMem(0xc829));
        // CB 62 01E2
        gbc.setState(0x131, 0x25cf, 0x2510, 0xa92f, 0x7725, 0x9fda, 0x1, 0x1);
        gbc.writeMem(0x131, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x25cf, gbc.sp());
        EXPECT(0x133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01E3
        gbc.setState(0xef9e, 0x330f, 0x7ca0, 0xe0b7, 0x15e5, 0xad53, 0x0, 0x0);
        gbc.writeMem(0xef9e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x330f, gbc.sp());
        EXPECT(0xefa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef9e));
        EXPECT(0x62, gbc.readMem(0xef9f));
        // CB 62 01E4
        gbc.setState(0x24e6, 0x65eb, 0xff40, 0xb329, 0xaeb3, 0xc4fb, 0x0, 0x0);
        gbc.writeMem(0x24e6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x65eb, gbc.sp());
        EXPECT(0x24e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01E5
        gbc.setState(0x3169, 0x89a5, 0xe8a0, 0x9f42, 0xec7a, 0x19dc, 0x0, 0x0);
        gbc.writeMem(0x3169, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x89a5, gbc.sp());
        EXPECT(0x316b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01E6
        gbc.setState(0x16ae, 0x3a77, 0xfba0, 0x831c, 0x1b8a, 0xc3e7, 0x1, 0x0);
        gbc.writeMem(0x16ae, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3a77, gbc.sp());
        EXPECT(0x16b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01E7
        gbc.setState(0x1451, 0x6321, 0xe130, 0x500, 0x8284, 0xff51, 0x0, 0x0);
        gbc.writeMem(0x1451, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6321, gbc.sp());
        EXPECT(0x1453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01E8
        gbc.setState(0x7f64, 0xc4c6, 0x3a90, 0xb406, 0x2cdb, 0x1e10, 0x1, 0x0);
        gbc.writeMem(0x7f64, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc4c6, gbc.sp());
        EXPECT(0x7f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01E9
        gbc.setState(0x3636, 0x3923, 0x8340, 0x337e, 0x1cb7, 0xce22, 0x1, 0x1);
        gbc.writeMem(0x3636, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3923, gbc.sp());
        EXPECT(0x3638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01EA
        gbc.setState(0x8993, 0xdf7f, 0x9130, 0x4f75, 0x433d, 0x8f07, 0x0, 0x1);
        gbc.writeMem(0x8993, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdf7f, gbc.sp());
        EXPECT(0x8995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8993));
        EXPECT(0x62, gbc.readMem(0x8994));
        // CB 62 01EB
        gbc.setState(0xb3ef, 0xcac6, 0x7260, 0xc323, 0x85a9, 0x956c, 0x1, 0x1);
        gbc.writeMem(0xb3ef, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcac6, gbc.sp());
        EXPECT(0xb3f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ef));
        EXPECT(0x62, gbc.readMem(0xb3f0));
        // CB 62 01EC
        gbc.setState(0x4e79, 0xfd50, 0xe620, 0xd56b, 0x2e54, 0xac97, 0x1, 0x1);
        gbc.writeMem(0x4e79, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfd50, gbc.sp());
        EXPECT(0x4e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01ED
        gbc.setState(0xd5b3, 0x9092, 0x1b10, 0x10e, 0xa004, 0xb2f6, 0x0, 0x1);
        gbc.writeMem(0xd5b3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9092, gbc.sp());
        EXPECT(0xd5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b3));
        EXPECT(0x62, gbc.readMem(0xd5b4));
        // CB 62 01EE
        gbc.setState(0x6793, 0x126b, 0x2610, 0x12b0, 0xaa37, 0xd44c, 0x1, 0x1);
        gbc.writeMem(0x6793, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x126b, gbc.sp());
        EXPECT(0x6795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01EF
        gbc.setState(0x3b27, 0x6cef, 0x8250, 0x26f9, 0xcaba, 0xa1df, 0x1, 0x1);
        gbc.writeMem(0x3b27, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6cef, gbc.sp());
        EXPECT(0x3b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01F0
        gbc.setState(0x7dd5, 0xabed, 0x7660, 0x5e69, 0xb280, 0xf614, 0x0, 0x0);
        gbc.writeMem(0x7dd5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xabed, gbc.sp());
        EXPECT(0x7dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01F1
        gbc.setState(0xd90d, 0x9224, 0x6d0, 0xb097, 0xc0ec, 0x99f3, 0x0, 0x0);
        gbc.writeMem(0xd90d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9224, gbc.sp());
        EXPECT(0xd90f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90d));
        EXPECT(0x62, gbc.readMem(0xd90e));
        // CB 62 01F2
        gbc.setState(0x65f3, 0x847a, 0xb320, 0xfb26, 0xc574, 0x2c1b, 0x0, 0x1);
        gbc.writeMem(0x65f3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x847a, gbc.sp());
        EXPECT(0x65f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01F3
        gbc.setState(0xc4fd, 0x2002, 0x78e0, 0xd8f0, 0x291, 0x9121, 0x1, 0x0);
        gbc.writeMem(0xc4fd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2002, gbc.sp());
        EXPECT(0xc4ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4fd));
        EXPECT(0x62, gbc.readMem(0xc4fe));
        // CB 62 01F4
        gbc.setState(0x7bdb, 0x8b9a, 0xc370, 0xbf98, 0xb6eb, 0x5064, 0x0, 0x0);
        gbc.writeMem(0x7bdb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8b9a, gbc.sp());
        EXPECT(0x7bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 01F5
        gbc.setState(0x902, 0x29d, 0xdb00, 0x8b40, 0xea9c, 0x4288, 0x1, 0x1);
        gbc.writeMem(0x902, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x29d, gbc.sp());
        EXPECT(0x904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01F6
        gbc.setState(0x97a6, 0x1710, 0xd0e0, 0x1930, 0xa723, 0xdabe, 0x0, 0x1);
        gbc.writeMem(0x97a6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1710, gbc.sp());
        EXPECT(0x97a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a6));
        EXPECT(0x62, gbc.readMem(0x97a7));
        // CB 62 01F7
        gbc.setState(0xc0, 0xef63, 0x84a0, 0x783a, 0xac3, 0xaade, 0x0, 0x1);
        gbc.writeMem(0xc0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xef63, gbc.sp());
        EXPECT(0xc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01F8
        gbc.setState(0xb5ff, 0xdef8, 0xbf90, 0xc1e2, 0x91a3, 0x9920, 0x1, 0x0);
        gbc.writeMem(0xb5ff, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdef8, gbc.sp());
        EXPECT(0xb601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ff));
        EXPECT(0x62, gbc.readMem(0xb600));
        // CB 62 01F9
        gbc.setState(0xc7eb, 0xf411, 0xc200, 0x2abd, 0x5abe, 0xcd2a, 0x0, 0x1);
        gbc.writeMem(0xc7eb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf411, gbc.sp());
        EXPECT(0xc7ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7eb));
        EXPECT(0x62, gbc.readMem(0xc7ec));
        // CB 62 01FA
        gbc.setState(0xa3e3, 0x8aa1, 0xddd0, 0xc58d, 0x3be0, 0x7637, 0x0, 0x1);
        gbc.writeMem(0xa3e3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8aa1, gbc.sp());
        EXPECT(0xa3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e3));
        EXPECT(0x62, gbc.readMem(0xa3e4));
        // CB 62 01FC
        gbc.setState(0x7e01, 0x1b6a, 0xdd00, 0xea5d, 0x4675, 0x4925, 0x1, 0x1);
        gbc.writeMem(0x7e01, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1b6a, gbc.sp());
        EXPECT(0x7e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 01FE
        gbc.setState(0x8909, 0x1e4, 0x4530, 0xb043, 0xeea9, 0x420b, 0x1, 0x0);
        gbc.writeMem(0x8909, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1e4, gbc.sp());
        EXPECT(0x890b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8909));
        EXPECT(0x62, gbc.readMem(0x890a));
        // CB 62 01FF
        gbc.setState(0x880, 0x7e46, 0xcb30, 0x7cde, 0x7390, 0x6c4d, 0x0, 0x1);
        gbc.writeMem(0x880, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7e46, gbc.sp());
        EXPECT(0x882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0200
        gbc.setState(0x2a57, 0xa08e, 0x2c80, 0xaae, 0xa877, 0xcc2e, 0x0, 0x1);
        gbc.writeMem(0x2a57, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa08e, gbc.sp());
        EXPECT(0x2a59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0201
        gbc.setState(0xae27, 0x5874, 0x8c00, 0x7b6c, 0x476a, 0x2fb2, 0x1, 0x0);
        gbc.writeMem(0xae27, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5874, gbc.sp());
        EXPECT(0xae29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae27));
        EXPECT(0x62, gbc.readMem(0xae28));
        // CB 62 0202
        gbc.setState(0xefe7, 0x98e, 0x3050, 0x888a, 0x2b0, 0x5f76, 0x1, 0x1);
        gbc.writeMem(0xefe7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x98e, gbc.sp());
        EXPECT(0xefe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe7));
        EXPECT(0x62, gbc.readMem(0xefe8));
        // CB 62 0203
        gbc.setState(0xc427, 0x9ceb, 0xe9f0, 0x1eee, 0x9ea3, 0xfedd, 0x1, 0x0);
        gbc.writeMem(0xc427, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9ceb, gbc.sp());
        EXPECT(0xc429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc427));
        EXPECT(0x62, gbc.readMem(0xc428));
        // CB 62 0204
        gbc.setState(0xaf5b, 0x743e, 0xb3b0, 0x399f, 0xce9f, 0x4fad, 0x1, 0x1);
        gbc.writeMem(0xaf5b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x743e, gbc.sp());
        EXPECT(0xaf5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5b));
        EXPECT(0x62, gbc.readMem(0xaf5c));
        // CB 62 0206
        gbc.setState(0x3b69, 0xc259, 0xce70, 0x7d38, 0xc911, 0x23b5, 0x0, 0x1);
        gbc.writeMem(0x3b69, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc259, gbc.sp());
        EXPECT(0x3b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0207
        gbc.setState(0x4a87, 0x1064, 0x5ac0, 0xc36c, 0x5dfd, 0x3f84, 0x0, 0x1);
        gbc.writeMem(0x4a87, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1064, gbc.sp());
        EXPECT(0x4a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0209
        gbc.setState(0x8645, 0xc4fe, 0x8520, 0xefb3, 0x9c5c, 0x7edc, 0x1, 0x0);
        gbc.writeMem(0x8645, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc4fe, gbc.sp());
        EXPECT(0x8647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8645));
        EXPECT(0x62, gbc.readMem(0x8646));
        // CB 62 020A
        gbc.setState(0x6c4a, 0xf95e, 0x3c20, 0xd86f, 0x8383, 0x4ad5, 0x0, 0x1);
        gbc.writeMem(0x6c4a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf95e, gbc.sp());
        EXPECT(0x6c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 020B
        gbc.setState(0xa991, 0x75ea, 0x8160, 0xf73c, 0xea80, 0x6334, 0x1, 0x0);
        gbc.writeMem(0xa991, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x75ea, gbc.sp());
        EXPECT(0xa993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa991));
        EXPECT(0x62, gbc.readMem(0xa992));
        // CB 62 020C
        gbc.setState(0x30a1, 0x6efb, 0x2900, 0x96a8, 0x4a02, 0x61e8, 0x0, 0x1);
        gbc.writeMem(0x30a1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6efb, gbc.sp());
        EXPECT(0x30a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 020D
        gbc.setState(0xbaa3, 0xaef8, 0x9160, 0xb2e3, 0x72b2, 0xf1fb, 0x0, 0x0);
        gbc.writeMem(0xbaa3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xaef8, gbc.sp());
        EXPECT(0xbaa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa3));
        EXPECT(0x62, gbc.readMem(0xbaa4));
        // CB 62 020E
        gbc.setState(0xe98e, 0x187f, 0xb090, 0x6e33, 0x4f0, 0x935a, 0x1, 0x1);
        gbc.writeMem(0xe98e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x187f, gbc.sp());
        EXPECT(0xe990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe98e));
        EXPECT(0x62, gbc.readMem(0xe98f));
        // CB 62 020F
        gbc.setState(0x7ede, 0xc934, 0x1bc0, 0x7af, 0x1293, 0xdb70, 0x1, 0x0);
        gbc.writeMem(0x7ede, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc934, gbc.sp());
        EXPECT(0x7ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0210
        gbc.setState(0x871c, 0x721e, 0xd6b0, 0xc610, 0xd30b, 0x8589, 0x1, 0x1);
        gbc.writeMem(0x871c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x721e, gbc.sp());
        EXPECT(0x871e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x871c));
        EXPECT(0x62, gbc.readMem(0x871d));
        // CB 62 0211
        gbc.setState(0xe33b, 0x26a1, 0x52f0, 0x88d8, 0x24be, 0x6603, 0x0, 0x1);
        gbc.writeMem(0xe33b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x26a1, gbc.sp());
        EXPECT(0xe33d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33b));
        EXPECT(0x62, gbc.readMem(0xe33c));
        // CB 62 0212
        gbc.setState(0x247f, 0x12a4, 0xade0, 0x50bb, 0x4bf0, 0xf1b, 0x1, 0x0);
        gbc.writeMem(0x247f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x12a4, gbc.sp());
        EXPECT(0x2481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0213
        gbc.setState(0x1acd, 0xc7f7, 0xbcc0, 0x4923, 0xf17, 0xb103, 0x0, 0x1);
        gbc.writeMem(0x1acd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc7f7, gbc.sp());
        EXPECT(0x1acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0214
        gbc.setState(0xe671, 0x5506, 0xdca0, 0xb43d, 0x9c04, 0x5436, 0x0, 0x1);
        gbc.writeMem(0xe671, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5506, gbc.sp());
        EXPECT(0xe673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe671));
        EXPECT(0x62, gbc.readMem(0xe672));
        // CB 62 0215
        gbc.setState(0x74fa, 0x5a70, 0x9dd0, 0x8f7b, 0x4ee9, 0xb994, 0x1, 0x1);
        gbc.writeMem(0x74fa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5a70, gbc.sp());
        EXPECT(0x74fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0216
        gbc.setState(0xd24, 0xeb09, 0xc560, 0x140c, 0x3e0a, 0xb4cc, 0x1, 0x0);
        gbc.writeMem(0xd24, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xeb09, gbc.sp());
        EXPECT(0xd26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0217
        gbc.setState(0x9937, 0x2f8e, 0x380, 0x2512, 0xc87a, 0xfa6, 0x1, 0x1);
        gbc.writeMem(0x9937, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2f8e, gbc.sp());
        EXPECT(0x9939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9937));
        EXPECT(0x62, gbc.readMem(0x9938));
        // CB 62 0218
        gbc.setState(0x37e0, 0x1093, 0x4250, 0x5147, 0x84d8, 0x216d, 0x0, 0x1);
        gbc.writeMem(0x37e0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1093, gbc.sp());
        EXPECT(0x37e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0219
        gbc.setState(0xdae4, 0x39b8, 0xbb30, 0x45a5, 0xe298, 0x6d8f, 0x0, 0x0);
        gbc.writeMem(0xdae4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x39b8, gbc.sp());
        EXPECT(0xdae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae4));
        EXPECT(0x62, gbc.readMem(0xdae5));
        // CB 62 021A
        gbc.setState(0xc6fd, 0xaee5, 0x98d0, 0x7b76, 0x460d, 0x2056, 0x0, 0x0);
        gbc.writeMem(0xc6fd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xaee5, gbc.sp());
        EXPECT(0xc6ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6fd));
        EXPECT(0x62, gbc.readMem(0xc6fe));
        // CB 62 021B
        gbc.setState(0x2a98, 0x50d2, 0x4b60, 0x257e, 0xdf42, 0x3c03, 0x0, 0x1);
        gbc.writeMem(0x2a98, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x50d2, gbc.sp());
        EXPECT(0x2a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 021C
        gbc.setState(0x6f81, 0x2fc9, 0x990, 0xd306, 0x91a5, 0x5ef6, 0x0, 0x1);
        gbc.writeMem(0x6f81, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2fc9, gbc.sp());
        EXPECT(0x6f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 021D
        gbc.setState(0x9f45, 0xc5e, 0x5440, 0xb51c, 0xe279, 0x14c8, 0x0, 0x0);
        gbc.writeMem(0x9f45, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc5e, gbc.sp());
        EXPECT(0x9f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f45));
        EXPECT(0x62, gbc.readMem(0x9f46));
        // CB 62 021E
        gbc.setState(0xc62f, 0x6811, 0x3b00, 0xf108, 0x704f, 0xe66b, 0x1, 0x1);
        gbc.writeMem(0xc62f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6811, gbc.sp());
        EXPECT(0xc631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc62f));
        EXPECT(0x62, gbc.readMem(0xc630));
        // CB 62 021F
        gbc.setState(0x5ce2, 0x62f1, 0x5ba0, 0x6abc, 0x64c7, 0xcd84, 0x1, 0x1);
        gbc.writeMem(0x5ce2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x62f1, gbc.sp());
        EXPECT(0x5ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0220
        gbc.setState(0x5f26, 0xd43e, 0x37a0, 0xc1fc, 0x80c9, 0x9c5c, 0x0, 0x0);
        gbc.writeMem(0x5f26, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd43e, gbc.sp());
        EXPECT(0x5f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0221
        gbc.setState(0x1524, 0xda77, 0xb5f0, 0xd4f, 0x88e4, 0x4f6, 0x0, 0x1);
        gbc.writeMem(0x1524, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xda77, gbc.sp());
        EXPECT(0x1526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0222
        gbc.setState(0xc4b5, 0x3aa3, 0xfcf0, 0x1b03, 0x2619, 0x30, 0x1, 0x1);
        gbc.writeMem(0xc4b5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3aa3, gbc.sp());
        EXPECT(0xc4b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b5));
        EXPECT(0x62, gbc.readMem(0xc4b6));
        // CB 62 0223
        gbc.setState(0x980c, 0x520f, 0xccb0, 0x7db1, 0xd00e, 0xa33b, 0x1, 0x1);
        gbc.writeMem(0x980c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x520f, gbc.sp());
        EXPECT(0x980e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x980c));
        EXPECT(0x62, gbc.readMem(0x980d));
        // CB 62 0224
        gbc.setState(0xe314, 0x5715, 0xe190, 0xa423, 0xe46a, 0xc87, 0x1, 0x0);
        gbc.writeMem(0xe314, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5715, gbc.sp());
        EXPECT(0xe316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe314));
        EXPECT(0x62, gbc.readMem(0xe315));
        // CB 62 0225
        gbc.setState(0xce78, 0xc43a, 0x59b0, 0xbccd, 0xef1a, 0x21a6, 0x1, 0x1);
        gbc.writeMem(0xce78, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc43a, gbc.sp());
        EXPECT(0xce7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce78));
        EXPECT(0x62, gbc.readMem(0xce79));
        // CB 62 0226
        gbc.setState(0x4881, 0xab65, 0x90b0, 0xe179, 0x15bc, 0x9977, 0x1, 0x1);
        gbc.writeMem(0x4881, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xab65, gbc.sp());
        EXPECT(0x4883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0227
        gbc.setState(0x5d77, 0x3483, 0xa70, 0x1c83, 0x827b, 0x87d1, 0x0, 0x1);
        gbc.writeMem(0x5d77, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3483, gbc.sp());
        EXPECT(0x5d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0228
        gbc.setState(0xc946, 0xb162, 0xf360, 0x8c32, 0xd041, 0x97d2, 0x0, 0x1);
        gbc.writeMem(0xc946, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb162, gbc.sp());
        EXPECT(0xc948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc946));
        EXPECT(0x62, gbc.readMem(0xc947));
        // CB 62 0229
        gbc.setState(0x1325, 0x44ac, 0x2db0, 0x4af5, 0x3d0e, 0x1ad1, 0x0, 0x1);
        gbc.writeMem(0x1325, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x44ac, gbc.sp());
        EXPECT(0x1327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 022A
        gbc.setState(0x1583, 0xa213, 0x11f0, 0x3f50, 0xa8cd, 0xb4a3, 0x0, 0x1);
        gbc.writeMem(0x1583, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa213, gbc.sp());
        EXPECT(0x1585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 022B
        gbc.setState(0x8cdf, 0x762a, 0x9410, 0xdc94, 0x26b5, 0x1ff7, 0x0, 0x1);
        gbc.writeMem(0x8cdf, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x762a, gbc.sp());
        EXPECT(0x8ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cdf));
        EXPECT(0x62, gbc.readMem(0x8ce0));
        // CB 62 022C
        gbc.setState(0x6aba, 0xc56c, 0x1a0, 0x6710, 0x9f94, 0xbaef, 0x0, 0x0);
        gbc.writeMem(0x6aba, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc56c, gbc.sp());
        EXPECT(0x6abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 022D
        gbc.setState(0x1866, 0x6681, 0x8580, 0x4e2f, 0x427, 0xfaeb, 0x0, 0x1);
        gbc.writeMem(0x1866, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6681, gbc.sp());
        EXPECT(0x1868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 022E
        gbc.setState(0xa162, 0x7322, 0x36d0, 0x756, 0xba34, 0x13d9, 0x1, 0x1);
        gbc.writeMem(0xa162, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7322, gbc.sp());
        EXPECT(0xa164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa162));
        EXPECT(0x62, gbc.readMem(0xa163));
        // CB 62 022F
        gbc.setState(0x9c29, 0x7f3, 0x68e0, 0x354c, 0x14d6, 0x4c3f, 0x0, 0x1);
        gbc.writeMem(0x9c29, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7f3, gbc.sp());
        EXPECT(0x9c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c29));
        EXPECT(0x62, gbc.readMem(0x9c2a));
        // CB 62 0230
        gbc.setState(0x1a2, 0xe37a, 0xc8c0, 0x3f06, 0xc2ae, 0xa61a, 0x0, 0x1);
        gbc.writeMem(0x1a2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe37a, gbc.sp());
        EXPECT(0x1a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0231
        gbc.setState(0x7e12, 0x3b34, 0xbeb0, 0xe30d, 0x7e2, 0xf0e5, 0x1, 0x1);
        gbc.writeMem(0x7e12, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3b34, gbc.sp());
        EXPECT(0x7e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0232
        gbc.setState(0x2c87, 0x32c5, 0x5ce0, 0xa872, 0xe54b, 0xb1a6, 0x1, 0x0);
        gbc.writeMem(0x2c87, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x32c5, gbc.sp());
        EXPECT(0x2c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0233
        gbc.setState(0x23e9, 0xea3, 0x1dc0, 0x88d2, 0x5d2, 0x9f3f, 0x1, 0x1);
        gbc.writeMem(0x23e9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xea3, gbc.sp());
        EXPECT(0x23eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0234
        gbc.setState(0xd6e7, 0x4b33, 0x7030, 0xf7c4, 0x9cb1, 0x1b04, 0x0, 0x0);
        gbc.writeMem(0xd6e7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4b33, gbc.sp());
        EXPECT(0xd6e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6e7));
        EXPECT(0x62, gbc.readMem(0xd6e8));
        // CB 62 0235
        gbc.setState(0xd343, 0xd607, 0x8ad0, 0xbcd3, 0xac6e, 0xb79e, 0x1, 0x0);
        gbc.writeMem(0xd343, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd607, gbc.sp());
        EXPECT(0xd345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd343));
        EXPECT(0x62, gbc.readMem(0xd344));
        // CB 62 0236
        gbc.setState(0x9ab6, 0x99aa, 0x9cb0, 0x7c94, 0x42c1, 0x9a23, 0x0, 0x1);
        gbc.writeMem(0x9ab6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x99aa, gbc.sp());
        EXPECT(0x9ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab6));
        EXPECT(0x62, gbc.readMem(0x9ab7));
        // CB 62 0237
        gbc.setState(0x8df8, 0x1266, 0x7340, 0xdbe9, 0xa5cb, 0xa294, 0x1, 0x1);
        gbc.writeMem(0x8df8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1266, gbc.sp());
        EXPECT(0x8dfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df8));
        EXPECT(0x62, gbc.readMem(0x8df9));
        // CB 62 0238
        gbc.setState(0x2e92, 0x6a6c, 0xcb30, 0xf97b, 0xd33f, 0x6f41, 0x0, 0x1);
        gbc.writeMem(0x2e92, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6a6c, gbc.sp());
        EXPECT(0x2e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0239
        gbc.setState(0xc27c, 0x8ce6, 0x1040, 0x31bb, 0x7e5c, 0xdbbb, 0x0, 0x1);
        gbc.writeMem(0xc27c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8ce6, gbc.sp());
        EXPECT(0xc27e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc27c));
        EXPECT(0x62, gbc.readMem(0xc27d));
        // CB 62 023A
        gbc.setState(0x5740, 0xe13, 0xc420, 0x9d3e, 0xb089, 0x5536, 0x0, 0x1);
        gbc.writeMem(0x5740, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe13, gbc.sp());
        EXPECT(0x5742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 023B
        gbc.setState(0xacea, 0x547c, 0x8550, 0x63b1, 0x5d37, 0x5097, 0x0, 0x1);
        gbc.writeMem(0xacea, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x547c, gbc.sp());
        EXPECT(0xacec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacea));
        EXPECT(0x62, gbc.readMem(0xaceb));
        // CB 62 023C
        gbc.setState(0xd005, 0x4c4d, 0xd410, 0x6725, 0x4c97, 0x40ea, 0x1, 0x1);
        gbc.writeMem(0xd005, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4c4d, gbc.sp());
        EXPECT(0xd007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd005));
        EXPECT(0x62, gbc.readMem(0xd006));
        // CB 62 023D
        gbc.setState(0x73dd, 0xefed, 0x88a0, 0xae3e, 0x6fb5, 0x93d0, 0x0, 0x1);
        gbc.writeMem(0x73dd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xefed, gbc.sp());
        EXPECT(0x73df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 023E
        gbc.setState(0x1456, 0xe6ab, 0x4360, 0x8a06, 0x901c, 0x2fe3, 0x0, 0x1);
        gbc.writeMem(0x1456, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe6ab, gbc.sp());
        EXPECT(0x1458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 023F
        gbc.setState(0x6166, 0xaa59, 0xc100, 0xdedf, 0x3822, 0xe854, 0x1, 0x0);
        gbc.writeMem(0x6166, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xaa59, gbc.sp());
        EXPECT(0x6168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0240
        gbc.setState(0x84d3, 0xbd7b, 0xac50, 0x571b, 0x6fab, 0xa5e6, 0x1, 0x1);
        gbc.writeMem(0x84d3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbd7b, gbc.sp());
        EXPECT(0x84d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d3));
        EXPECT(0x62, gbc.readMem(0x84d4));
        // CB 62 0241
        gbc.setState(0x910a, 0xdf5c, 0xde90, 0xee9b, 0x8942, 0xe969, 0x0, 0x1);
        gbc.writeMem(0x910a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdf5c, gbc.sp());
        EXPECT(0x910c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x910a));
        EXPECT(0x62, gbc.readMem(0x910b));
        // CB 62 0242
        gbc.setState(0x76e8, 0x4ed3, 0xa500, 0x164c, 0xed34, 0xb27, 0x0, 0x1);
        gbc.writeMem(0x76e8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4ed3, gbc.sp());
        EXPECT(0x76ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0243
        gbc.setState(0x8bb8, 0xdfb6, 0xe940, 0xbb8f, 0x35, 0xeae8, 0x1, 0x0);
        gbc.writeMem(0x8bb8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdfb6, gbc.sp());
        EXPECT(0x8bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb8));
        EXPECT(0x62, gbc.readMem(0x8bb9));
        // CB 62 0244
        gbc.setState(0x3dc2, 0xc9d4, 0xead0, 0x9229, 0xd1a2, 0xe031, 0x0, 0x0);
        gbc.writeMem(0x3dc2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc9d4, gbc.sp());
        EXPECT(0x3dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0245
        gbc.setState(0x6148, 0xf51e, 0x2820, 0x833b, 0x56b4, 0x628d, 0x0, 0x1);
        gbc.writeMem(0x6148, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf51e, gbc.sp());
        EXPECT(0x614a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0246
        gbc.setState(0xe64d, 0x8070, 0x5dc0, 0xcb01, 0xe48f, 0xcdd2, 0x0, 0x0);
        gbc.writeMem(0xe64d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8070, gbc.sp());
        EXPECT(0xe64f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64d));
        EXPECT(0x62, gbc.readMem(0xe64e));
        // CB 62 0247
        gbc.setState(0x7477, 0x3c65, 0x42a0, 0x503e, 0x2990, 0x5c94, 0x0, 0x1);
        gbc.writeMem(0x7477, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3c65, gbc.sp());
        EXPECT(0x7479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0248
        gbc.setState(0x93be, 0xe200, 0x4e0, 0xb9d0, 0xf1ef, 0x927, 0x0, 0x1);
        gbc.writeMem(0x93be, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe200, gbc.sp());
        EXPECT(0x93c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93be));
        EXPECT(0x62, gbc.readMem(0x93bf));
        // CB 62 0249
        gbc.setState(0x813d, 0x579f, 0xb0b0, 0x1525, 0xbb40, 0x172b, 0x1, 0x0);
        gbc.writeMem(0x813d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x579f, gbc.sp());
        EXPECT(0x813f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813d));
        EXPECT(0x62, gbc.readMem(0x813e));
        // CB 62 024A
        gbc.setState(0xd0fc, 0x776d, 0x8d0, 0x4b4e, 0xcbc2, 0x7da3, 0x1, 0x0);
        gbc.writeMem(0xd0fc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x776d, gbc.sp());
        EXPECT(0xd0fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0fc));
        EXPECT(0x62, gbc.readMem(0xd0fd));
        // CB 62 024B
        gbc.setState(0xca21, 0xdbb3, 0xc4e0, 0x695b, 0x9667, 0x480, 0x0, 0x1);
        gbc.writeMem(0xca21, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdbb3, gbc.sp());
        EXPECT(0xca23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca21));
        EXPECT(0x62, gbc.readMem(0xca22));
        // CB 62 024C
        gbc.setState(0x2c27, 0xfd5d, 0xab00, 0x728d, 0xeb9a, 0xb25, 0x1, 0x0);
        gbc.writeMem(0x2c27, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfd5d, gbc.sp());
        EXPECT(0x2c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 024D
        gbc.setState(0xdc31, 0xeabd, 0x8500, 0xe58f, 0xbf37, 0x3f64, 0x1, 0x1);
        gbc.writeMem(0xdc31, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xeabd, gbc.sp());
        EXPECT(0xdc33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc31));
        EXPECT(0x62, gbc.readMem(0xdc32));
        // CB 62 024E
        gbc.setState(0x43a3, 0xe471, 0x42f0, 0xe6b, 0xeb13, 0xcf30, 0x0, 0x1);
        gbc.writeMem(0x43a3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe471, gbc.sp());
        EXPECT(0x43a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 024F
        gbc.setState(0xb669, 0x5330, 0x3170, 0x2f19, 0xcfe7, 0x33da, 0x0, 0x0);
        gbc.writeMem(0xb669, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5330, gbc.sp());
        EXPECT(0xb66b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb669));
        EXPECT(0x62, gbc.readMem(0xb66a));
        // CB 62 0250
        gbc.setState(0xa04a, 0x2499, 0x51d0, 0xe940, 0x4a88, 0x2b19, 0x0, 0x1);
        gbc.writeMem(0xa04a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2499, gbc.sp());
        EXPECT(0xa04c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa04a));
        EXPECT(0x62, gbc.readMem(0xa04b));
        // CB 62 0251
        gbc.setState(0xe2a8, 0xdd9d, 0x9980, 0x5a1f, 0xf0dc, 0xfca, 0x1, 0x1);
        gbc.writeMem(0xe2a8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdd9d, gbc.sp());
        EXPECT(0xe2aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a8));
        EXPECT(0x62, gbc.readMem(0xe2a9));
        // CB 62 0252
        gbc.setState(0x257b, 0x9bd8, 0x4640, 0x3897, 0x9978, 0x73d7, 0x0, 0x0);
        gbc.writeMem(0x257b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9bd8, gbc.sp());
        EXPECT(0x257d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0253
        gbc.setState(0xc570, 0xb8fc, 0x9d70, 0xebbb, 0xfba, 0x84e6, 0x1, 0x0);
        gbc.writeMem(0xc570, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb8fc, gbc.sp());
        EXPECT(0xc572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc570));
        EXPECT(0x62, gbc.readMem(0xc571));
        // CB 62 0254
        gbc.setState(0xe8b6, 0xb68, 0x5a60, 0x3eae, 0xc08, 0x274c, 0x1, 0x1);
        gbc.writeMem(0xe8b6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb68, gbc.sp());
        EXPECT(0xe8b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b6));
        EXPECT(0x62, gbc.readMem(0xe8b7));
        // CB 62 0255
        gbc.setState(0x6ca9, 0xa8f6, 0x320, 0x6926, 0x4f1b, 0x64bc, 0x0, 0x1);
        gbc.writeMem(0x6ca9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa8f6, gbc.sp());
        EXPECT(0x6cab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0256
        gbc.setState(0x8c6d, 0x3b49, 0xd2e0, 0xf4af, 0xdc75, 0xf60b, 0x0, 0x1);
        gbc.writeMem(0x8c6d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3b49, gbc.sp());
        EXPECT(0x8c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c6d));
        EXPECT(0x62, gbc.readMem(0x8c6e));
        // CB 62 0257
        gbc.setState(0x1087, 0xa7ec, 0xd820, 0xabcb, 0x78a3, 0xce4a, 0x0, 0x1);
        gbc.writeMem(0x1087, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa7ec, gbc.sp());
        EXPECT(0x1089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0258
        gbc.setState(0x291, 0xd95c, 0xbbc0, 0x90c9, 0xe2cb, 0xbafe, 0x1, 0x1);
        gbc.writeMem(0x291, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd95c, gbc.sp());
        EXPECT(0x293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0259
        gbc.setState(0x56cc, 0x83f4, 0xc950, 0xfc45, 0xb402, 0xbb98, 0x1, 0x0);
        gbc.writeMem(0x56cc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x83f4, gbc.sp());
        EXPECT(0x56ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 025A
        gbc.setState(0xd0d2, 0x3047, 0x86b0, 0xd1f3, 0x700e, 0xebf4, 0x1, 0x0);
        gbc.writeMem(0xd0d2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3047, gbc.sp());
        EXPECT(0xd0d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d2));
        EXPECT(0x62, gbc.readMem(0xd0d3));
        // CB 62 025B
        gbc.setState(0x6f9c, 0xcb02, 0x72a0, 0x7269, 0xf550, 0xcda, 0x0, 0x0);
        gbc.writeMem(0x6f9c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcb02, gbc.sp());
        EXPECT(0x6f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 025C
        gbc.setState(0x9fee, 0xf324, 0x74b0, 0xbedb, 0x9aeb, 0x8d5b, 0x0, 0x0);
        gbc.writeMem(0x9fee, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf324, gbc.sp());
        EXPECT(0x9ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fee));
        EXPECT(0x62, gbc.readMem(0x9fef));
        // CB 62 025E
        gbc.setState(0xef1c, 0xb1e9, 0x4f40, 0xb0cb, 0xcfb3, 0x1b23, 0x0, 0x1);
        gbc.writeMem(0xef1c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb1e9, gbc.sp());
        EXPECT(0xef1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef1c));
        EXPECT(0x62, gbc.readMem(0xef1d));
        // CB 62 025F
        gbc.setState(0xb0d0, 0xfc1d, 0x80b0, 0x1c0a, 0xcad, 0x7ad5, 0x1, 0x1);
        gbc.writeMem(0xb0d0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfc1d, gbc.sp());
        EXPECT(0xb0d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d0));
        EXPECT(0x62, gbc.readMem(0xb0d1));
        // CB 62 0260
        gbc.setState(0x60c2, 0x3827, 0x780, 0xfa39, 0x9280, 0x43f8, 0x0, 0x1);
        gbc.writeMem(0x60c2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3827, gbc.sp());
        EXPECT(0x60c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0261
        gbc.setState(0xa0bd, 0xe03, 0xee0, 0x66d2, 0xd8bc, 0x4d8, 0x0, 0x1);
        gbc.writeMem(0xa0bd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe03, gbc.sp());
        EXPECT(0xa0bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0bd));
        EXPECT(0x62, gbc.readMem(0xa0be));
        // CB 62 0262
        gbc.setState(0x9201, 0x23c8, 0x2c0, 0xb363, 0xa5f7, 0x5c06, 0x1, 0x0);
        gbc.writeMem(0x9201, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x23c8, gbc.sp());
        EXPECT(0x9203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9201));
        EXPECT(0x62, gbc.readMem(0x9202));
        // CB 62 0263
        gbc.setState(0x849, 0x4d20, 0x1830, 0x8b63, 0xa40c, 0x280, 0x1, 0x0);
        gbc.writeMem(0x849, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4d20, gbc.sp());
        EXPECT(0x84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0264
        gbc.setState(0x2f18, 0xd27f, 0x970, 0x70e9, 0xd004, 0x7ff0, 0x0, 0x0);
        gbc.writeMem(0x2f18, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd27f, gbc.sp());
        EXPECT(0x2f1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0265
        gbc.setState(0xd4ab, 0x8430, 0x12e0, 0x166c, 0xb990, 0xfceb, 0x1, 0x0);
        gbc.writeMem(0xd4ab, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8430, gbc.sp());
        EXPECT(0xd4ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ab));
        EXPECT(0x62, gbc.readMem(0xd4ac));
        // CB 62 0266
        gbc.setState(0x2b33, 0x3a6f, 0xea40, 0x6848, 0x93d8, 0x80f6, 0x0, 0x1);
        gbc.writeMem(0x2b33, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3a6f, gbc.sp());
        EXPECT(0x2b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0267
        gbc.setState(0x9427, 0x9cdb, 0x2230, 0x2009, 0x99f1, 0x81a, 0x1, 0x0);
        gbc.writeMem(0x9427, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9cdb, gbc.sp());
        EXPECT(0x9429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9427));
        EXPECT(0x62, gbc.readMem(0x9428));
        // CB 62 0268
        gbc.setState(0xac9f, 0xff64, 0x91b0, 0xc6b3, 0x4d37, 0x1d33, 0x1, 0x0);
        gbc.writeMem(0xac9f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xff64, gbc.sp());
        EXPECT(0xaca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac9f));
        EXPECT(0x62, gbc.readMem(0xaca0));
        // CB 62 0269
        gbc.setState(0x878a, 0x497b, 0x6380, 0x433, 0x60bc, 0xcb1b, 0x0, 0x1);
        gbc.writeMem(0x878a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x497b, gbc.sp());
        EXPECT(0x878c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x878a));
        EXPECT(0x62, gbc.readMem(0x878b));
        // CB 62 026A
        gbc.setState(0xb85f, 0xf16f, 0xda0, 0x733d, 0x1d36, 0xd687, 0x1, 0x1);
        gbc.writeMem(0xb85f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf16f, gbc.sp());
        EXPECT(0xb861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb85f));
        EXPECT(0x62, gbc.readMem(0xb860));
        // CB 62 026B
        gbc.setState(0x3179, 0x68d9, 0xe0b0, 0xfc2d, 0x9f74, 0xfb4a, 0x0, 0x0);
        gbc.writeMem(0x3179, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x68d9, gbc.sp());
        EXPECT(0x317b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 026C
        gbc.setState(0x1dd1, 0x1357, 0xc3a0, 0xbddb, 0x7d15, 0x777f, 0x1, 0x1);
        gbc.writeMem(0x1dd1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1357, gbc.sp());
        EXPECT(0x1dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 026D
        gbc.setState(0x5655, 0x2cb9, 0x94b0, 0xcbc9, 0x7ebb, 0xfe8, 0x1, 0x0);
        gbc.writeMem(0x5655, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2cb9, gbc.sp());
        EXPECT(0x5657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 026F
        gbc.setState(0xd15e, 0xb157, 0x1820, 0xc6c9, 0x9382, 0xb256, 0x0, 0x0);
        gbc.writeMem(0xd15e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb157, gbc.sp());
        EXPECT(0xd160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15e));
        EXPECT(0x62, gbc.readMem(0xd15f));
        // CB 62 0270
        gbc.setState(0x7cde, 0xdd8, 0x9420, 0x6a41, 0xa36b, 0x112b, 0x0, 0x0);
        gbc.writeMem(0x7cde, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdd8, gbc.sp());
        EXPECT(0x7ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0271
        gbc.setState(0x2a17, 0xbb6e, 0x9b80, 0x26a3, 0x7af3, 0x89bd, 0x0, 0x1);
        gbc.writeMem(0x2a17, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbb6e, gbc.sp());
        EXPECT(0x2a19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0272
        gbc.setState(0x2b65, 0x5b45, 0x65e0, 0x34b7, 0x567b, 0xed71, 0x1, 0x0);
        gbc.writeMem(0x2b65, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5b45, gbc.sp());
        EXPECT(0x2b67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0274
        gbc.setState(0xabcd, 0x1f41, 0x1a00, 0xa80e, 0x6dde, 0x8288, 0x0, 0x0);
        gbc.writeMem(0xabcd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1f41, gbc.sp());
        EXPECT(0xabcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabcd));
        EXPECT(0x62, gbc.readMem(0xabce));
        // CB 62 0275
        gbc.setState(0xca9f, 0x7f5a, 0x690, 0xeba6, 0x2565, 0x5a84, 0x0, 0x0);
        gbc.writeMem(0xca9f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7f5a, gbc.sp());
        EXPECT(0xcaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca9f));
        EXPECT(0x62, gbc.readMem(0xcaa0));
        // CB 62 0276
        gbc.setState(0x18c1, 0xd9fa, 0x9100, 0xafed, 0xa348, 0xc52, 0x0, 0x1);
        gbc.writeMem(0x18c1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd9fa, gbc.sp());
        EXPECT(0x18c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0277
        gbc.setState(0xbf8f, 0x1293, 0x8120, 0x3218, 0xc2e1, 0x14bd, 0x1, 0x1);
        gbc.writeMem(0xbf8f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1293, gbc.sp());
        EXPECT(0xbf91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8f));
        EXPECT(0x62, gbc.readMem(0xbf90));
        // CB 62 0278
        gbc.setState(0x52be, 0x1722, 0xd570, 0xdec1, 0xf0cd, 0xbd2d, 0x1, 0x0);
        gbc.writeMem(0x52be, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1722, gbc.sp());
        EXPECT(0x52c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0279
        gbc.setState(0x67ba, 0x46cf, 0xf050, 0x3732, 0x8b23, 0xb7f, 0x1, 0x0);
        gbc.writeMem(0x67ba, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x46cf, gbc.sp());
        EXPECT(0x67bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 027A
        gbc.setState(0x6d13, 0x7a2b, 0xbc80, 0x5ba0, 0x1265, 0x9047, 0x0, 0x1);
        gbc.writeMem(0x6d13, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7a2b, gbc.sp());
        EXPECT(0x6d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 027B
        gbc.setState(0xeca1, 0x6326, 0xd470, 0x674e, 0x66d0, 0x8cbd, 0x0, 0x1);
        gbc.writeMem(0xeca1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6326, gbc.sp());
        EXPECT(0xeca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca1));
        EXPECT(0x62, gbc.readMem(0xeca2));
        // CB 62 027C
        gbc.setState(0xcb48, 0xe987, 0x5370, 0xec49, 0x920e, 0x72b0, 0x0, 0x1);
        gbc.writeMem(0xcb48, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe987, gbc.sp());
        EXPECT(0xcb4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb48));
        EXPECT(0x62, gbc.readMem(0xcb49));
        // CB 62 027D
        gbc.setState(0x7e7a, 0x5538, 0xf370, 0x8d7e, 0x37fa, 0x7b53, 0x0, 0x1);
        gbc.writeMem(0x7e7a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5538, gbc.sp());
        EXPECT(0x7e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 027E
        gbc.setState(0x86ce, 0xbcf9, 0x3670, 0xae71, 0x8f9, 0x96ec, 0x1, 0x1);
        gbc.writeMem(0x86ce, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbcf9, gbc.sp());
        EXPECT(0x86d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ce));
        EXPECT(0x62, gbc.readMem(0x86cf));
        // CB 62 027F
        gbc.setState(0xa944, 0x820e, 0xa6c0, 0x8fd7, 0xe0fa, 0xdb85, 0x1, 0x1);
        gbc.writeMem(0xa944, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x820e, gbc.sp());
        EXPECT(0xa946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa944));
        EXPECT(0x62, gbc.readMem(0xa945));
        // CB 62 0280
        gbc.setState(0xc539, 0xd5c, 0xbee0, 0x4b53, 0x423d, 0xb805, 0x1, 0x0);
        gbc.writeMem(0xc539, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd5c, gbc.sp());
        EXPECT(0xc53b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc539));
        EXPECT(0x62, gbc.readMem(0xc53a));
        // CB 62 0281
        gbc.setState(0xa0bb, 0x883f, 0xcbd0, 0x60db, 0xb521, 0xbe1a, 0x0, 0x1);
        gbc.writeMem(0xa0bb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x883f, gbc.sp());
        EXPECT(0xa0bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0bb));
        EXPECT(0x62, gbc.readMem(0xa0bc));
        // CB 62 0282
        gbc.setState(0xc297, 0x5efb, 0xbf10, 0x67bf, 0x3a31, 0x69d3, 0x1, 0x0);
        gbc.writeMem(0xc297, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5efb, gbc.sp());
        EXPECT(0xc299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc297));
        EXPECT(0x62, gbc.readMem(0xc298));
        // CB 62 0284
        gbc.setState(0x8341, 0x4176, 0x14b0, 0x298e, 0xc7e8, 0x1279, 0x1, 0x1);
        gbc.writeMem(0x8341, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4176, gbc.sp());
        EXPECT(0x8343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8341));
        EXPECT(0x62, gbc.readMem(0x8342));
        // CB 62 0285
        gbc.setState(0x60f9, 0x7183, 0xb3b0, 0x8065, 0x9d39, 0xa81f, 0x1, 0x1);
        gbc.writeMem(0x60f9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7183, gbc.sp());
        EXPECT(0x60fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0286
        gbc.setState(0x351, 0xbd1e, 0x1a70, 0x5dd, 0x1e67, 0x40bd, 0x1, 0x0);
        gbc.writeMem(0x351, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbd1e, gbc.sp());
        EXPECT(0x353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0287
        gbc.setState(0xa5ac, 0x75ad, 0x6890, 0xde09, 0xf1b8, 0x1b1a, 0x1, 0x0);
        gbc.writeMem(0xa5ac, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x75ad, gbc.sp());
        EXPECT(0xa5ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ac));
        EXPECT(0x62, gbc.readMem(0xa5ad));
        // CB 62 0288
        gbc.setState(0xd079, 0x93ab, 0x53f0, 0xe63b, 0xc774, 0x24a9, 0x1, 0x1);
        gbc.writeMem(0xd079, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x93ab, gbc.sp());
        EXPECT(0xd07b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd079));
        EXPECT(0x62, gbc.readMem(0xd07a));
        // CB 62 0289
        gbc.setState(0x519a, 0xe80b, 0x2070, 0xf198, 0x5544, 0x6967, 0x1, 0x0);
        gbc.writeMem(0x519a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe80b, gbc.sp());
        EXPECT(0x519c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 028A
        gbc.setState(0x46ab, 0xd9ba, 0x19c0, 0xa6ec, 0x4be1, 0xe2cb, 0x1, 0x0);
        gbc.writeMem(0x46ab, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd9ba, gbc.sp());
        EXPECT(0x46ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 028B
        gbc.setState(0x7f33, 0x3557, 0x8cf0, 0x9280, 0x1b6, 0x48e0, 0x1, 0x0);
        gbc.writeMem(0x7f33, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3557, gbc.sp());
        EXPECT(0x7f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 028C
        gbc.setState(0xcb8f, 0xfab0, 0x5c60, 0xc37e, 0x9cfd, 0x709e, 0x0, 0x0);
        gbc.writeMem(0xcb8f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfab0, gbc.sp());
        EXPECT(0xcb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8f));
        EXPECT(0x62, gbc.readMem(0xcb90));
        // CB 62 028D
        gbc.setState(0xefb, 0xfd1b, 0xf390, 0x5a50, 0xcc92, 0xda56, 0x1, 0x0);
        gbc.writeMem(0xefb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfd1b, gbc.sp());
        EXPECT(0xefd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 028E
        gbc.setState(0x4934, 0x5a24, 0xe540, 0x6134, 0x8f99, 0xb29d, 0x1, 0x1);
        gbc.writeMem(0x4934, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5a24, gbc.sp());
        EXPECT(0x4936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 028F
        gbc.setState(0x70d1, 0xaf15, 0x2420, 0x33a6, 0x6125, 0x779e, 0x1, 0x0);
        gbc.writeMem(0x70d1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xaf15, gbc.sp());
        EXPECT(0x70d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0290
        gbc.setState(0xb0af, 0x7a2d, 0xe6f0, 0xaa89, 0xd7dc, 0x9337, 0x0, 0x1);
        gbc.writeMem(0xb0af, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7a2d, gbc.sp());
        EXPECT(0xb0b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0af));
        EXPECT(0x62, gbc.readMem(0xb0b0));
        // CB 62 0291
        gbc.setState(0x4f65, 0x2e50, 0xf9e0, 0x1639, 0xcfee, 0x5fd6, 0x1, 0x1);
        gbc.writeMem(0x4f65, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2e50, gbc.sp());
        EXPECT(0x4f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0292
        gbc.setState(0xef11, 0xc0d0, 0x3a70, 0xe2c1, 0xd09d, 0xabf1, 0x0, 0x1);
        gbc.writeMem(0xef11, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc0d0, gbc.sp());
        EXPECT(0xef13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef11));
        EXPECT(0x62, gbc.readMem(0xef12));
        // CB 62 0293
        gbc.setState(0x862a, 0x35f7, 0x8450, 0x8ef7, 0xbc68, 0x2f32, 0x1, 0x1);
        gbc.writeMem(0x862a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x35f7, gbc.sp());
        EXPECT(0x862c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x862a));
        EXPECT(0x62, gbc.readMem(0x862b));
        // CB 62 0294
        gbc.setState(0x9e44, 0xc41b, 0xb890, 0xff28, 0x6e8a, 0xc495, 0x0, 0x0);
        gbc.writeMem(0x9e44, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc41b, gbc.sp());
        EXPECT(0x9e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e44));
        EXPECT(0x62, gbc.readMem(0x9e45));
        // CB 62 0295
        gbc.setState(0x6bfa, 0xca8f, 0xfca0, 0xd9d9, 0xd0d, 0xc06b, 0x1, 0x1);
        gbc.writeMem(0x6bfa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xca8f, gbc.sp());
        EXPECT(0x6bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0296
        gbc.setState(0x8ef6, 0x3238, 0x2f60, 0x9cd4, 0x98c2, 0x772a, 0x1, 0x1);
        gbc.writeMem(0x8ef6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3238, gbc.sp());
        EXPECT(0x8ef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef6));
        EXPECT(0x62, gbc.readMem(0x8ef7));
        // CB 62 0297
        gbc.setState(0xb313, 0xb20b, 0xa0e0, 0x95cf, 0xf875, 0xf848, 0x0, 0x0);
        gbc.writeMem(0xb313, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb20b, gbc.sp());
        EXPECT(0xb315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb313));
        EXPECT(0x62, gbc.readMem(0xb314));
        // CB 62 0298
        gbc.setState(0x4da9, 0xbf90, 0x3d60, 0x744c, 0x9d51, 0xa2a4, 0x0, 0x1);
        gbc.writeMem(0x4da9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbf90, gbc.sp());
        EXPECT(0x4dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0299
        gbc.setState(0x7808, 0x5c8f, 0x1d10, 0xf464, 0xd960, 0x3eb0, 0x1, 0x1);
        gbc.writeMem(0x7808, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5c8f, gbc.sp());
        EXPECT(0x780a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 029A
        gbc.setState(0xd26a, 0x80cd, 0x80e0, 0xe585, 0xd599, 0xebc, 0x0, 0x1);
        gbc.writeMem(0xd26a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x80cd, gbc.sp());
        EXPECT(0xd26c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd26a));
        EXPECT(0x62, gbc.readMem(0xd26b));
        // CB 62 029B
        gbc.setState(0x4c8b, 0xf0a8, 0x9510, 0xeab4, 0x6b28, 0xd469, 0x0, 0x1);
        gbc.writeMem(0x4c8b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf0a8, gbc.sp());
        EXPECT(0x4c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 029C
        gbc.setState(0xded1, 0x970d, 0x7f60, 0x210b, 0x609a, 0x2b97, 0x1, 0x0);
        gbc.writeMem(0xded1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x970d, gbc.sp());
        EXPECT(0xded3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded1));
        EXPECT(0x62, gbc.readMem(0xded2));
        // CB 62 029D
        gbc.setState(0x200c, 0xcd91, 0x8b60, 0xf080, 0x615, 0x3cbd, 0x0, 0x0);
        gbc.writeMem(0x200c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcd91, gbc.sp());
        EXPECT(0x200e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 029E
        gbc.setState(0x563e, 0xe4d4, 0xfd0, 0x5e42, 0x522e, 0xa257, 0x1, 0x0);
        gbc.writeMem(0x563e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe4d4, gbc.sp());
        EXPECT(0x5640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 029F
        gbc.setState(0xbc9c, 0xfbb2, 0x5840, 0xb8e8, 0x886e, 0xdd74, 0x1, 0x0);
        gbc.writeMem(0xbc9c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfbb2, gbc.sp());
        EXPECT(0xbc9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9c));
        EXPECT(0x62, gbc.readMem(0xbc9d));
        // CB 62 02A0
        gbc.setState(0x45d2, 0xf69e, 0x3820, 0x4442, 0x25eb, 0x2900, 0x0, 0x1);
        gbc.writeMem(0x45d2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf69e, gbc.sp());
        EXPECT(0x45d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02A1
        gbc.setState(0x1456, 0x2b81, 0x1f00, 0x3084, 0x8702, 0xee5d, 0x1, 0x1);
        gbc.writeMem(0x1456, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2b81, gbc.sp());
        EXPECT(0x1458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02A2
        gbc.setState(0x10fd, 0x31e5, 0xe4f0, 0xdcbc, 0x2b93, 0xe276, 0x1, 0x0);
        gbc.writeMem(0x10fd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x31e5, gbc.sp());
        EXPECT(0x10ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02A3
        gbc.setState(0xb5f3, 0xef9a, 0x9140, 0x2921, 0xd659, 0x58c2, 0x1, 0x1);
        gbc.writeMem(0xb5f3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xef9a, gbc.sp());
        EXPECT(0xb5f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f3));
        EXPECT(0x62, gbc.readMem(0xb5f4));
        // CB 62 02A4
        gbc.setState(0xd0e9, 0x4cf8, 0xe790, 0x513d, 0x4765, 0x230e, 0x0, 0x0);
        gbc.writeMem(0xd0e9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4cf8, gbc.sp());
        EXPECT(0xd0eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e9));
        EXPECT(0x62, gbc.readMem(0xd0ea));
        // CB 62 02A5
        gbc.setState(0x431c, 0xf0df, 0x3f10, 0x4eaf, 0x24b2, 0x7b4b, 0x1, 0x1);
        gbc.writeMem(0x431c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf0df, gbc.sp());
        EXPECT(0x431e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02A7
        gbc.setState(0x9a2c, 0xce48, 0x96d0, 0x970c, 0x52e7, 0xca0c, 0x0, 0x0);
        gbc.writeMem(0x9a2c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xce48, gbc.sp());
        EXPECT(0x9a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a2c));
        EXPECT(0x62, gbc.readMem(0x9a2d));
        // CB 62 02A8
        gbc.setState(0xa318, 0x8b44, 0x92a0, 0x4c5a, 0x7dd9, 0x216b, 0x0, 0x0);
        gbc.writeMem(0xa318, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8b44, gbc.sp());
        EXPECT(0xa31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa318));
        EXPECT(0x62, gbc.readMem(0xa319));
        // CB 62 02A9
        gbc.setState(0x64f0, 0x21a4, 0x5b60, 0x691d, 0xefa, 0xe100, 0x0, 0x1);
        gbc.writeMem(0x64f0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x21a4, gbc.sp());
        EXPECT(0x64f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02AA
        gbc.setState(0x7a04, 0x852a, 0xc0e0, 0x3844, 0x1f89, 0x9f45, 0x1, 0x0);
        gbc.writeMem(0x7a04, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x852a, gbc.sp());
        EXPECT(0x7a06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02AB
        gbc.setState(0x9edf, 0xaac5, 0xee20, 0x8d63, 0xab1d, 0x2548, 0x1, 0x1);
        gbc.writeMem(0x9edf, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xaac5, gbc.sp());
        EXPECT(0x9ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9edf));
        EXPECT(0x62, gbc.readMem(0x9ee0));
        // CB 62 02AC
        gbc.setState(0x56c5, 0x7bd6, 0x8660, 0x1a1d, 0xa620, 0x5373, 0x0, 0x1);
        gbc.writeMem(0x56c5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7bd6, gbc.sp());
        EXPECT(0x56c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02AD
        gbc.setState(0x95eb, 0xf948, 0xa2f0, 0xd2f8, 0x4880, 0x22b2, 0x0, 0x1);
        gbc.writeMem(0x95eb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf948, gbc.sp());
        EXPECT(0x95ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95eb));
        EXPECT(0x62, gbc.readMem(0x95ec));
        // CB 62 02AE
        gbc.setState(0xd27c, 0xfacc, 0x4e80, 0xa56b, 0x86c6, 0xbc6a, 0x1, 0x0);
        gbc.writeMem(0xd27c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfacc, gbc.sp());
        EXPECT(0xd27e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd27c));
        EXPECT(0x62, gbc.readMem(0xd27d));
        // CB 62 02AF
        gbc.setState(0xb45d, 0x2b33, 0x6210, 0xfc1d, 0x908a, 0x93bc, 0x0, 0x1);
        gbc.writeMem(0xb45d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2b33, gbc.sp());
        EXPECT(0xb45f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb45d));
        EXPECT(0x62, gbc.readMem(0xb45e));
        // CB 62 02B0
        gbc.setState(0xe62c, 0x990e, 0x9e70, 0x7fa4, 0xf4d0, 0x938d, 0x1, 0x0);
        gbc.writeMem(0xe62c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x990e, gbc.sp());
        EXPECT(0xe62e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62c));
        EXPECT(0x62, gbc.readMem(0xe62d));
        // CB 62 02B2
        gbc.setState(0xa9c4, 0x542, 0xcd60, 0xdade, 0xa6e6, 0xb283, 0x0, 0x1);
        gbc.writeMem(0xa9c4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x542, gbc.sp());
        EXPECT(0xa9c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c4));
        EXPECT(0x62, gbc.readMem(0xa9c5));
        // CB 62 02B3
        gbc.setState(0x18ee, 0xd717, 0x5310, 0x24ea, 0x5ad0, 0xcda4, 0x1, 0x0);
        gbc.writeMem(0x18ee, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd717, gbc.sp());
        EXPECT(0x18f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02B4
        gbc.setState(0x52b1, 0xe94f, 0xbb40, 0x13af, 0xe1a4, 0x3840, 0x1, 0x1);
        gbc.writeMem(0x52b1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe94f, gbc.sp());
        EXPECT(0x52b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02B5
        gbc.setState(0x90b3, 0xfbad, 0xa410, 0x927a, 0xbcad, 0x6abb, 0x1, 0x0);
        gbc.writeMem(0x90b3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfbad, gbc.sp());
        EXPECT(0x90b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b3));
        EXPECT(0x62, gbc.readMem(0x90b4));
        // CB 62 02B6
        gbc.setState(0x6b4b, 0x1706, 0x7d80, 0x3557, 0xeb2a, 0xf7fe, 0x0, 0x0);
        gbc.writeMem(0x6b4b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1706, gbc.sp());
        EXPECT(0x6b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02B7
        gbc.setState(0x5506, 0xe195, 0x3e90, 0x8203, 0x9adc, 0x99bc, 0x0, 0x0);
        gbc.writeMem(0x5506, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe195, gbc.sp());
        EXPECT(0x5508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02B8
        gbc.setState(0x8fcd, 0xed87, 0xb110, 0x11c9, 0xe3a7, 0xc9bb, 0x1, 0x1);
        gbc.writeMem(0x8fcd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xed87, gbc.sp());
        EXPECT(0x8fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fcd));
        EXPECT(0x62, gbc.readMem(0x8fce));
        // CB 62 02B9
        gbc.setState(0x486e, 0x8d43, 0xa690, 0x8e5a, 0x5d43, 0x4c43, 0x1, 0x0);
        gbc.writeMem(0x486e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8d43, gbc.sp());
        EXPECT(0x4870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02BB
        gbc.setState(0x349, 0x2d0c, 0x6150, 0x28b5, 0x834f, 0x516b, 0x1, 0x0);
        gbc.writeMem(0x349, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2d0c, gbc.sp());
        EXPECT(0x34b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02BC
        gbc.setState(0xe76, 0x711, 0xa100, 0x1ecd, 0xe11a, 0x7309, 0x0, 0x0);
        gbc.writeMem(0xe76, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x711, gbc.sp());
        EXPECT(0xe78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02BD
        gbc.setState(0x20f0, 0x917c, 0xb0, 0xc059, 0xd997, 0x7276, 0x0, 0x1);
        gbc.writeMem(0x20f0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x917c, gbc.sp());
        EXPECT(0x20f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02BE
        gbc.setState(0x5bf3, 0x9431, 0x23c0, 0xcf55, 0x11b4, 0xfc2b, 0x0, 0x1);
        gbc.writeMem(0x5bf3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9431, gbc.sp());
        EXPECT(0x5bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02C0
        gbc.setState(0x1699, 0xa20e, 0x87b0, 0xdbf6, 0x8294, 0x7bcb, 0x0, 0x1);
        gbc.writeMem(0x1699, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa20e, gbc.sp());
        EXPECT(0x169b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02C1
        gbc.setState(0xce47, 0x77b8, 0x340, 0x575d, 0x36d7, 0x687c, 0x1, 0x1);
        gbc.writeMem(0xce47, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x77b8, gbc.sp());
        EXPECT(0xce49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce47));
        EXPECT(0x62, gbc.readMem(0xce48));
        // CB 62 02C2
        gbc.setState(0x577a, 0x6090, 0x74a0, 0x4b00, 0x2332, 0xea5, 0x0, 0x0);
        gbc.writeMem(0x577a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6090, gbc.sp());
        EXPECT(0x577c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02C3
        gbc.setState(0x24ee, 0x40bf, 0xa720, 0x43e9, 0xd708, 0x7c29, 0x0, 0x0);
        gbc.writeMem(0x24ee, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x40bf, gbc.sp());
        EXPECT(0x24f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02C5
        gbc.setState(0x9603, 0xf12e, 0x73e0, 0x30c, 0x256b, 0xac41, 0x0, 0x1);
        gbc.writeMem(0x9603, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf12e, gbc.sp());
        EXPECT(0x9605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9603));
        EXPECT(0x62, gbc.readMem(0x9604));
        // CB 62 02C6
        gbc.setState(0x32de, 0x7382, 0x360, 0xd17e, 0x3cb0, 0x79a5, 0x1, 0x1);
        gbc.writeMem(0x32de, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7382, gbc.sp());
        EXPECT(0x32e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02C8
        gbc.setState(0x4005, 0x5614, 0x6090, 0x5cb4, 0x915b, 0x75a3, 0x1, 0x1);
        gbc.writeMem(0x4005, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5614, gbc.sp());
        EXPECT(0x4007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02C9
        gbc.setState(0x159e, 0xdac0, 0x2dc0, 0xec6a, 0x5e19, 0xaeb1, 0x1, 0x1);
        gbc.writeMem(0x159e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdac0, gbc.sp());
        EXPECT(0x15a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02CA
        gbc.setState(0xc993, 0x2a0b, 0x4010, 0x3f7f, 0x213d, 0x5871, 0x0, 0x0);
        gbc.writeMem(0xc993, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2a0b, gbc.sp());
        EXPECT(0xc995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc993));
        EXPECT(0x62, gbc.readMem(0xc994));
        // CB 62 02CB
        gbc.setState(0x6f26, 0x77e6, 0x3a50, 0xe6ed, 0x454b, 0x2b21, 0x1, 0x1);
        gbc.writeMem(0x6f26, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x77e6, gbc.sp());
        EXPECT(0x6f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02CC
        gbc.setState(0x8efb, 0xc498, 0x71b0, 0xf458, 0xf4b0, 0x89ea, 0x0, 0x0);
        gbc.writeMem(0x8efb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc498, gbc.sp());
        EXPECT(0x8efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8efb));
        EXPECT(0x62, gbc.readMem(0x8efc));
        // CB 62 02CD
        gbc.setState(0x6b16, 0x66a2, 0xe110, 0xcf9b, 0xf8ec, 0x4ac5, 0x0, 0x0);
        gbc.writeMem(0x6b16, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x66a2, gbc.sp());
        EXPECT(0x6b18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02CE
        gbc.setState(0xeb2e, 0x977e, 0xa710, 0x3c3a, 0xb08d, 0x5428, 0x1, 0x0);
        gbc.writeMem(0xeb2e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x977e, gbc.sp());
        EXPECT(0xeb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2e));
        EXPECT(0x62, gbc.readMem(0xeb2f));
        // CB 62 02CF
        gbc.setState(0x20c5, 0xdf65, 0x5cd0, 0xaa59, 0xddd2, 0xd695, 0x0, 0x0);
        gbc.writeMem(0x20c5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdf65, gbc.sp());
        EXPECT(0x20c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02D1
        gbc.setState(0x94b4, 0x9671, 0xf430, 0x1b93, 0xc9c3, 0x9ded, 0x0, 0x1);
        gbc.writeMem(0x94b4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9671, gbc.sp());
        EXPECT(0x94b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94b4));
        EXPECT(0x62, gbc.readMem(0x94b5));
        // CB 62 02D2
        gbc.setState(0x27c7, 0xebd1, 0x2560, 0x4aef, 0x2904, 0x1d14, 0x1, 0x0);
        gbc.writeMem(0x27c7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xebd1, gbc.sp());
        EXPECT(0x27c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02D3
        gbc.setState(0xc704, 0x5fef, 0xc5c0, 0xfedd, 0x7563, 0x9370, 0x1, 0x0);
        gbc.writeMem(0xc704, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5fef, gbc.sp());
        EXPECT(0xc706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc704));
        EXPECT(0x62, gbc.readMem(0xc705));
        // CB 62 02D4
        gbc.setState(0xad05, 0xb557, 0xe8a0, 0x3b36, 0xe053, 0xe571, 0x0, 0x0);
        gbc.writeMem(0xad05, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb557, gbc.sp());
        EXPECT(0xad07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad05));
        EXPECT(0x62, gbc.readMem(0xad06));
        // CB 62 02D5
        gbc.setState(0x1a61, 0x4590, 0x3ba0, 0x1733, 0x7012, 0x212c, 0x0, 0x1);
        gbc.writeMem(0x1a61, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4590, gbc.sp());
        EXPECT(0x1a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02D6
        gbc.setState(0x5afc, 0x2492, 0xa510, 0xff65, 0x7cd8, 0xff5, 0x0, 0x0);
        gbc.writeMem(0x5afc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2492, gbc.sp());
        EXPECT(0x5afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02D7
        gbc.setState(0x3d60, 0xc01d, 0x86a0, 0xd0d3, 0xdc33, 0xd7ee, 0x1, 0x1);
        gbc.writeMem(0x3d60, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc01d, gbc.sp());
        EXPECT(0x3d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02D8
        gbc.setState(0x3dcd, 0x1db5, 0x4500, 0x1ef, 0xfd0c, 0xdb2b, 0x1, 0x1);
        gbc.writeMem(0x3dcd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1db5, gbc.sp());
        EXPECT(0x3dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02D9
        gbc.setState(0xa867, 0x39df, 0x5110, 0x8d, 0xb785, 0xca6, 0x1, 0x0);
        gbc.writeMem(0xa867, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x39df, gbc.sp());
        EXPECT(0xa869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa867));
        EXPECT(0x62, gbc.readMem(0xa868));
        // CB 62 02DA
        gbc.setState(0x2c5, 0xa79c, 0xbef0, 0x8af4, 0xb412, 0x5c6e, 0x1, 0x1);
        gbc.writeMem(0x2c5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa79c, gbc.sp());
        EXPECT(0x2c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02DB
        gbc.setState(0x48dd, 0xcc61, 0xad0, 0xec72, 0xedb2, 0xc369, 0x1, 0x1);
        gbc.writeMem(0x48dd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcc61, gbc.sp());
        EXPECT(0x48df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02DC
        gbc.setState(0x6830, 0x17ef, 0xfe20, 0xe12, 0x22ee, 0x3df9, 0x0, 0x0);
        gbc.writeMem(0x6830, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x17ef, gbc.sp());
        EXPECT(0x6832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02DD
        gbc.setState(0xe529, 0xa8e9, 0xc100, 0x2d6a, 0x3609, 0xa9e1, 0x0, 0x1);
        gbc.writeMem(0xe529, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa8e9, gbc.sp());
        EXPECT(0xe52b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe529));
        EXPECT(0x62, gbc.readMem(0xe52a));
        // CB 62 02DF
        gbc.setState(0x6964, 0xddd1, 0xc550, 0x46d2, 0xe6da, 0xea1f, 0x1, 0x0);
        gbc.writeMem(0x6964, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xddd1, gbc.sp());
        EXPECT(0x6966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02E0
        gbc.setState(0x3d29, 0x7da5, 0xfcc0, 0xdb88, 0xecd6, 0x4f35, 0x1, 0x1);
        gbc.writeMem(0x3d29, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7da5, gbc.sp());
        EXPECT(0x3d2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02E1
        gbc.setState(0x8bf3, 0x61ef, 0x8d0, 0x4968, 0x4da7, 0x779b, 0x1, 0x1);
        gbc.writeMem(0x8bf3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x61ef, gbc.sp());
        EXPECT(0x8bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf3));
        EXPECT(0x62, gbc.readMem(0x8bf4));
        // CB 62 02E2
        gbc.setState(0x2540, 0x3332, 0xa0d0, 0x817b, 0x1f64, 0xdb2d, 0x0, 0x1);
        gbc.writeMem(0x2540, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3332, gbc.sp());
        EXPECT(0x2542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02E3
        gbc.setState(0x4af5, 0x1fe6, 0x20f0, 0xa629, 0xe3bd, 0x135a, 0x0, 0x1);
        gbc.writeMem(0x4af5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1fe6, gbc.sp());
        EXPECT(0x4af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02E4
        gbc.setState(0x43db, 0x125a, 0x3a20, 0xab70, 0x8e33, 0xd550, 0x0, 0x0);
        gbc.writeMem(0x43db, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x125a, gbc.sp());
        EXPECT(0x43dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02E5
        gbc.setState(0x709c, 0x4214, 0x4390, 0x86, 0x8d74, 0x2538, 0x0, 0x0);
        gbc.writeMem(0x709c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4214, gbc.sp());
        EXPECT(0x709e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02E6
        gbc.setState(0xc60c, 0x3d9, 0xccb0, 0x131f, 0xbbf3, 0xf236, 0x0, 0x0);
        gbc.writeMem(0xc60c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3d9, gbc.sp());
        EXPECT(0xc60e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc60c));
        EXPECT(0x62, gbc.readMem(0xc60d));
        // CB 62 02E7
        gbc.setState(0xbfbe, 0x5e5f, 0x5270, 0x9f13, 0x460a, 0x2d3e, 0x1, 0x1);
        gbc.writeMem(0xbfbe, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5e5f, gbc.sp());
        EXPECT(0xbfc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfbe));
        EXPECT(0x62, gbc.readMem(0xbfbf));
        // CB 62 02E8
        gbc.setState(0xb54a, 0x6c7a, 0xb020, 0x5af9, 0x4096, 0xa21c, 0x0, 0x0);
        gbc.writeMem(0xb54a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6c7a, gbc.sp());
        EXPECT(0xb54c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb54a));
        EXPECT(0x62, gbc.readMem(0xb54b));
        // CB 62 02E9
        gbc.setState(0x4413, 0xebfb, 0x49a0, 0x2e1e, 0x9ef9, 0xa651, 0x1, 0x0);
        gbc.writeMem(0x4413, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xebfb, gbc.sp());
        EXPECT(0x4415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02EA
        gbc.setState(0x9683, 0x9461, 0x7bd0, 0x37da, 0x1323, 0xa4de, 0x1, 0x0);
        gbc.writeMem(0x9683, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9461, gbc.sp());
        EXPECT(0x9685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9683));
        EXPECT(0x62, gbc.readMem(0x9684));
        // CB 62 02EB
        gbc.setState(0x73c, 0x1df5, 0x370, 0xa179, 0x8c07, 0x858d, 0x1, 0x0);
        gbc.writeMem(0x73c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1df5, gbc.sp());
        EXPECT(0x73e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02EC
        gbc.setState(0x3814, 0xd015, 0x9600, 0xe029, 0x895d, 0x99, 0x0, 0x0);
        gbc.writeMem(0x3814, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd015, gbc.sp());
        EXPECT(0x3816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02ED
        gbc.setState(0x509d, 0x575, 0xa520, 0x61ca, 0x6c99, 0x9790, 0x0, 0x0);
        gbc.writeMem(0x509d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x575, gbc.sp());
        EXPECT(0x509f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02EE
        gbc.setState(0x415c, 0x73d, 0x33c0, 0x25e9, 0x7b6f, 0x46a7, 0x1, 0x0);
        gbc.writeMem(0x415c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x73d, gbc.sp());
        EXPECT(0x415e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02EF
        gbc.setState(0x9461, 0x7219, 0xe1f0, 0x4f5, 0xd8, 0xd950, 0x0, 0x0);
        gbc.writeMem(0x9461, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7219, gbc.sp());
        EXPECT(0x9463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9461));
        EXPECT(0x62, gbc.readMem(0x9462));
        // CB 62 02F0
        gbc.setState(0xea34, 0x9912, 0x9350, 0xa29, 0xa654, 0xb0c0, 0x0, 0x0);
        gbc.writeMem(0xea34, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9912, gbc.sp());
        EXPECT(0xea36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea34));
        EXPECT(0x62, gbc.readMem(0xea35));
        // CB 62 02F2
        gbc.setState(0x97b2, 0xf1f1, 0x83e0, 0xcc9a, 0x9632, 0x9f41, 0x1, 0x1);
        gbc.writeMem(0x97b2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf1f1, gbc.sp());
        EXPECT(0x97b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b2));
        EXPECT(0x62, gbc.readMem(0x97b3));
        // CB 62 02F3
        gbc.setState(0x6869, 0x4603, 0x33f0, 0x44a1, 0x5695, 0x505b, 0x1, 0x1);
        gbc.writeMem(0x6869, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4603, gbc.sp());
        EXPECT(0x686b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02F4
        gbc.setState(0x94eb, 0xfecb, 0x2450, 0xd1b5, 0x5f1a, 0x9353, 0x1, 0x0);
        gbc.writeMem(0x94eb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfecb, gbc.sp());
        EXPECT(0x94ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94eb));
        EXPECT(0x62, gbc.readMem(0x94ec));
        // CB 62 02F5
        gbc.setState(0xb9e4, 0x5292, 0x5040, 0xa9de, 0x93d, 0x2c58, 0x1, 0x0);
        gbc.writeMem(0xb9e4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5292, gbc.sp());
        EXPECT(0xb9e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9e4));
        EXPECT(0x62, gbc.readMem(0xb9e5));
        // CB 62 02F6
        gbc.setState(0x26f, 0xbc3e, 0x1f0, 0xa32d, 0xc890, 0xce65, 0x1, 0x1);
        gbc.writeMem(0x26f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbc3e, gbc.sp());
        EXPECT(0x271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02F7
        gbc.setState(0xc79b, 0x1b84, 0x7470, 0x4818, 0xdf22, 0x244d, 0x1, 0x0);
        gbc.writeMem(0xc79b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1b84, gbc.sp());
        EXPECT(0xc79d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc79b));
        EXPECT(0x62, gbc.readMem(0xc79c));
        // CB 62 02F8
        gbc.setState(0x1518, 0x4ade, 0xb440, 0xed90, 0xebd3, 0xc11c, 0x1, 0x0);
        gbc.writeMem(0x1518, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4ade, gbc.sp());
        EXPECT(0x151a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02F9
        gbc.setState(0x642a, 0x8683, 0x8500, 0x940e, 0x7c1e, 0xbe89, 0x1, 0x1);
        gbc.writeMem(0x642a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8683, gbc.sp());
        EXPECT(0x642c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 02FA
        gbc.setState(0xd691, 0x1429, 0xaa50, 0x2971, 0x2f65, 0xe02a, 0x0, 0x0);
        gbc.writeMem(0xd691, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1429, gbc.sp());
        EXPECT(0xd693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd691));
        EXPECT(0x62, gbc.readMem(0xd692));
        // CB 62 02FB
        gbc.setState(0x826d, 0x6101, 0x66c0, 0xc0d2, 0x6254, 0x237d, 0x1, 0x0);
        gbc.writeMem(0x826d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6101, gbc.sp());
        EXPECT(0x826f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x826d));
        EXPECT(0x62, gbc.readMem(0x826e));
        // CB 62 02FC
        gbc.setState(0x2d0f, 0x92c8, 0x7110, 0x6dfa, 0x5252, 0x5799, 0x0, 0x1);
        gbc.writeMem(0x2d0f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x92c8, gbc.sp());
        EXPECT(0x2d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 02FD
        gbc.setState(0x8add, 0x304f, 0xc030, 0xd638, 0xd200, 0x7140, 0x0, 0x0);
        gbc.writeMem(0x8add, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x304f, gbc.sp());
        EXPECT(0x8adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8add));
        EXPECT(0x62, gbc.readMem(0x8ade));
        // CB 62 02FE
        gbc.setState(0x94a6, 0x114e, 0x1b60, 0xe78d, 0xd76, 0xa306, 0x1, 0x0);
        gbc.writeMem(0x94a6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x114e, gbc.sp());
        EXPECT(0x94a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94a6));
        EXPECT(0x62, gbc.readMem(0x94a7));
        // CB 62 02FF
        gbc.setState(0x4a01, 0x6488, 0x3fd0, 0xe554, 0xda69, 0x70a2, 0x0, 0x0);
        gbc.writeMem(0x4a01, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6488, gbc.sp());
        EXPECT(0x4a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0300
        gbc.setState(0xc4c9, 0x312, 0x7c00, 0x89b7, 0x769d, 0x2f64, 0x1, 0x1);
        gbc.writeMem(0xc4c9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x312, gbc.sp());
        EXPECT(0xc4cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c9));
        EXPECT(0x62, gbc.readMem(0xc4ca));
        // CB 62 0301
        gbc.setState(0x964, 0x397a, 0x9270, 0x8175, 0x8b77, 0xcce1, 0x0, 0x0);
        gbc.writeMem(0x964, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x397a, gbc.sp());
        EXPECT(0x966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0302
        gbc.setState(0xc59d, 0x63ff, 0xc020, 0xa8bc, 0xf66e, 0x835b, 0x1, 0x1);
        gbc.writeMem(0xc59d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x63ff, gbc.sp());
        EXPECT(0xc59f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59d));
        EXPECT(0x62, gbc.readMem(0xc59e));
        // CB 62 0303
        gbc.setState(0x4ee5, 0x6a8d, 0x80, 0x150e, 0x2ede, 0x2390, 0x0, 0x1);
        gbc.writeMem(0x4ee5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6a8d, gbc.sp());
        EXPECT(0x4ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0304
        gbc.setState(0xace2, 0xa99a, 0x9890, 0x1a5c, 0x25da, 0x8eec, 0x1, 0x1);
        gbc.writeMem(0xace2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa99a, gbc.sp());
        EXPECT(0xace4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace2));
        EXPECT(0x62, gbc.readMem(0xace3));
        // CB 62 0305
        gbc.setState(0x8248, 0x14e3, 0x76c0, 0x438, 0x5518, 0x96ba, 0x1, 0x0);
        gbc.writeMem(0x8248, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x14e3, gbc.sp());
        EXPECT(0x824a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8248));
        EXPECT(0x62, gbc.readMem(0x8249));
        // CB 62 0306
        gbc.setState(0x83fa, 0x1fc9, 0x2280, 0x577d, 0x387c, 0x905a, 0x1, 0x0);
        gbc.writeMem(0x83fa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1fc9, gbc.sp());
        EXPECT(0x83fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83fa));
        EXPECT(0x62, gbc.readMem(0x83fb));
        // CB 62 0307
        gbc.setState(0x25b7, 0xebf1, 0x4410, 0x9ad0, 0xb59d, 0x1654, 0x0, 0x0);
        gbc.writeMem(0x25b7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xebf1, gbc.sp());
        EXPECT(0x25b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0308
        gbc.setState(0x1496, 0xa5a5, 0x9ae0, 0xb4b7, 0xe1de, 0x8a99, 0x0, 0x1);
        gbc.writeMem(0x1496, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa5a5, gbc.sp());
        EXPECT(0x1498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0309
        gbc.setState(0xdae1, 0x4827, 0x3ed0, 0x6565, 0x690b, 0x64de, 0x1, 0x1);
        gbc.writeMem(0xdae1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4827, gbc.sp());
        EXPECT(0xdae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae1));
        EXPECT(0x62, gbc.readMem(0xdae2));
        // CB 62 030A
        gbc.setState(0x3b1, 0x80cb, 0xec00, 0xe6e, 0x73b1, 0x6e67, 0x0, 0x0);
        gbc.writeMem(0x3b1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x80cb, gbc.sp());
        EXPECT(0x3b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 030B
        gbc.setState(0x9476, 0xb837, 0x7440, 0x60f4, 0x975e, 0x3248, 0x0, 0x0);
        gbc.writeMem(0x9476, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb837, gbc.sp());
        EXPECT(0x9478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9476));
        EXPECT(0x62, gbc.readMem(0x9477));
        // CB 62 030C
        gbc.setState(0xd971, 0x80b8, 0x38a0, 0xda6a, 0xa36d, 0x9e8d, 0x0, 0x0);
        gbc.writeMem(0xd971, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x80b8, gbc.sp());
        EXPECT(0xd973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd971));
        EXPECT(0x62, gbc.readMem(0xd972));
        // CB 62 030D
        gbc.setState(0xa5e1, 0x6757, 0xf540, 0x7eee, 0x30dc, 0x27e2, 0x1, 0x1);
        gbc.writeMem(0xa5e1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6757, gbc.sp());
        EXPECT(0xa5e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e1));
        EXPECT(0x62, gbc.readMem(0xa5e2));
        // CB 62 030E
        gbc.setState(0x3d2f, 0xcb7c, 0xb800, 0x8f0f, 0x99ca, 0x622b, 0x1, 0x1);
        gbc.writeMem(0x3d2f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcb7c, gbc.sp());
        EXPECT(0x3d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 030F
        gbc.setState(0xe3f4, 0x7646, 0xbfa0, 0x9561, 0x3a63, 0x8d85, 0x1, 0x1);
        gbc.writeMem(0xe3f4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7646, gbc.sp());
        EXPECT(0xe3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f4));
        EXPECT(0x62, gbc.readMem(0xe3f5));
        // CB 62 0312
        gbc.setState(0x8390, 0x8df7, 0xfe30, 0xfa07, 0x59d7, 0x4d06, 0x1, 0x1);
        gbc.writeMem(0x8390, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8df7, gbc.sp());
        EXPECT(0x8392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8390));
        EXPECT(0x62, gbc.readMem(0x8391));
        // CB 62 0314
        gbc.setState(0xb32e, 0x371d, 0x5a20, 0x5962, 0x2edc, 0xbda6, 0x1, 0x1);
        gbc.writeMem(0xb32e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x371d, gbc.sp());
        EXPECT(0xb330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32e));
        EXPECT(0x62, gbc.readMem(0xb32f));
        // CB 62 0315
        gbc.setState(0x5013, 0x4b39, 0x8e90, 0x996c, 0xbe3f, 0x2662, 0x1, 0x0);
        gbc.writeMem(0x5013, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4b39, gbc.sp());
        EXPECT(0x5015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0316
        gbc.setState(0x4d5f, 0x2c18, 0x4f00, 0x5c33, 0x9e9e, 0x6915, 0x1, 0x0);
        gbc.writeMem(0x4d5f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2c18, gbc.sp());
        EXPECT(0x4d61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0317
        gbc.setState(0x93df, 0x4ce9, 0xc30, 0x36b4, 0xac52, 0x24d9, 0x1, 0x1);
        gbc.writeMem(0x93df, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4ce9, gbc.sp());
        EXPECT(0x93e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93df));
        EXPECT(0x62, gbc.readMem(0x93e0));
        // CB 62 0318
        gbc.setState(0x6199, 0x73dd, 0x27d0, 0xd312, 0x3733, 0x8a57, 0x1, 0x1);
        gbc.writeMem(0x6199, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x73dd, gbc.sp());
        EXPECT(0x619b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0319
        gbc.setState(0x7876, 0x7646, 0x47f0, 0x99aa, 0xfbbe, 0xd0ed, 0x1, 0x0);
        gbc.writeMem(0x7876, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7646, gbc.sp());
        EXPECT(0x7878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 031A
        gbc.setState(0x5a35, 0x5b9a, 0xa0d0, 0xc338, 0x499a, 0x5ff5, 0x1, 0x1);
        gbc.writeMem(0x5a35, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5b9a, gbc.sp());
        EXPECT(0x5a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 031B
        gbc.setState(0x225a, 0xee89, 0xe860, 0x7e2e, 0xf611, 0x6c5c, 0x1, 0x0);
        gbc.writeMem(0x225a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xee89, gbc.sp());
        EXPECT(0x225c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 031C
        gbc.setState(0x364b, 0x339, 0x1d30, 0x4975, 0x1eed, 0x3e, 0x0, 0x0);
        gbc.writeMem(0x364b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x339, gbc.sp());
        EXPECT(0x364d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 031D
        gbc.setState(0x5fe2, 0xb495, 0xcf30, 0x3bcc, 0x250c, 0xfee3, 0x1, 0x1);
        gbc.writeMem(0x5fe2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb495, gbc.sp());
        EXPECT(0x5fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 031E
        gbc.setState(0x79f6, 0x5425, 0xdcc0, 0xf71f, 0xebb7, 0xd4c, 0x0, 0x0);
        gbc.writeMem(0x79f6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5425, gbc.sp());
        EXPECT(0x79f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 031F
        gbc.setState(0xa8a9, 0x40ee, 0x71f0, 0x4585, 0x3cfd, 0xc430, 0x0, 0x0);
        gbc.writeMem(0xa8a9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x40ee, gbc.sp());
        EXPECT(0xa8ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8a9));
        EXPECT(0x62, gbc.readMem(0xa8aa));
        // CB 62 0320
        gbc.setState(0x6d37, 0xb70e, 0xa110, 0xe739, 0x9d81, 0x7d95, 0x0, 0x0);
        gbc.writeMem(0x6d37, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb70e, gbc.sp());
        EXPECT(0x6d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0321
        gbc.setState(0x7aa8, 0xad62, 0x3f70, 0x1aff, 0x72da, 0x2271, 0x0, 0x1);
        gbc.writeMem(0x7aa8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xad62, gbc.sp());
        EXPECT(0x7aaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0322
        gbc.setState(0xc07c, 0x86c5, 0x3f40, 0xc0c8, 0xc7d4, 0x7e3, 0x1, 0x0);
        gbc.writeMem(0xc07c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x86c5, gbc.sp());
        EXPECT(0xc07e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc07c));
        EXPECT(0x62, gbc.readMem(0xc07d));
        // CB 62 0323
        gbc.setState(0x702c, 0x1b4d, 0x34b0, 0xe2c2, 0x1483, 0xa1e0, 0x0, 0x1);
        gbc.writeMem(0x702c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1b4d, gbc.sp());
        EXPECT(0x702e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0324
        gbc.setState(0xba06, 0x5137, 0xba0, 0xd830, 0xe857, 0xdf8b, 0x0, 0x0);
        gbc.writeMem(0xba06, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5137, gbc.sp());
        EXPECT(0xba08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba06));
        EXPECT(0x62, gbc.readMem(0xba07));
        // CB 62 0325
        gbc.setState(0x3d1e, 0xac9e, 0xeec0, 0x89cc, 0xe76a, 0x1258, 0x1, 0x1);
        gbc.writeMem(0x3d1e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xac9e, gbc.sp());
        EXPECT(0x3d20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0326
        gbc.setState(0x38e1, 0x757d, 0xc380, 0x7f24, 0xef5f, 0xee98, 0x1, 0x0);
        gbc.writeMem(0x38e1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x757d, gbc.sp());
        EXPECT(0x38e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0327
        gbc.setState(0x77e1, 0x334a, 0xf890, 0x267d, 0x3e62, 0x9aa5, 0x1, 0x0);
        gbc.writeMem(0x77e1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x334a, gbc.sp());
        EXPECT(0x77e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0328
        gbc.setState(0xbcfb, 0x57a9, 0x9e10, 0x38e4, 0x489a, 0xdd28, 0x1, 0x1);
        gbc.writeMem(0xbcfb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x57a9, gbc.sp());
        EXPECT(0xbcfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcfb));
        EXPECT(0x62, gbc.readMem(0xbcfc));
        // CB 62 0329
        gbc.setState(0x36b6, 0x8bb6, 0xab00, 0xff0e, 0x7b28, 0xb9f3, 0x1, 0x0);
        gbc.writeMem(0x36b6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8bb6, gbc.sp());
        EXPECT(0x36b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 032A
        gbc.setState(0x6797, 0x1e1a, 0xcf00, 0xae68, 0xac7b, 0xf6f, 0x1, 0x1);
        gbc.writeMem(0x6797, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1e1a, gbc.sp());
        EXPECT(0x6799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 032B
        gbc.setState(0xe910, 0x239a, 0xa5b0, 0xa8e, 0xc7b5, 0xf026, 0x0, 0x0);
        gbc.writeMem(0xe910, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x239a, gbc.sp());
        EXPECT(0xe912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe910));
        EXPECT(0x62, gbc.readMem(0xe911));
        // CB 62 032C
        gbc.setState(0xd038, 0xd4ad, 0x5f40, 0x6ba1, 0xe878, 0x14de, 0x0, 0x0);
        gbc.writeMem(0xd038, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd4ad, gbc.sp());
        EXPECT(0xd03a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd038));
        EXPECT(0x62, gbc.readMem(0xd039));
        // CB 62 032D
        gbc.setState(0x49f7, 0xf0d, 0x2ea0, 0x5580, 0xe065, 0xd465, 0x1, 0x0);
        gbc.writeMem(0x49f7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf0d, gbc.sp());
        EXPECT(0x49f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 032E
        gbc.setState(0x3146, 0xe919, 0x5a70, 0x71e2, 0x7642, 0xea2c, 0x0, 0x1);
        gbc.writeMem(0x3146, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe919, gbc.sp());
        EXPECT(0x3148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 032F
        gbc.setState(0xdc47, 0xe82c, 0x9800, 0xc00e, 0x3d32, 0xb8f0, 0x1, 0x0);
        gbc.writeMem(0xdc47, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe82c, gbc.sp());
        EXPECT(0xdc49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc47));
        EXPECT(0x62, gbc.readMem(0xdc48));
        // CB 62 0330
        gbc.setState(0x398, 0xfc6c, 0x97b0, 0xf186, 0x35ab, 0x551f, 0x1, 0x0);
        gbc.writeMem(0x398, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfc6c, gbc.sp());
        EXPECT(0x39a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0331
        gbc.setState(0x3ba8, 0x14e8, 0xd1a0, 0x6942, 0xf546, 0x26ef, 0x1, 0x0);
        gbc.writeMem(0x3ba8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x14e8, gbc.sp());
        EXPECT(0x3baa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0334
        gbc.setState(0xae50, 0x167f, 0x36f0, 0x6fce, 0xe63e, 0xc529, 0x1, 0x1);
        gbc.writeMem(0xae50, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x167f, gbc.sp());
        EXPECT(0xae52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae50));
        EXPECT(0x62, gbc.readMem(0xae51));
        // CB 62 0335
        gbc.setState(0x2cd1, 0x1d31, 0xa110, 0x3ab4, 0x658, 0x7df, 0x1, 0x0);
        gbc.writeMem(0x2cd1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1d31, gbc.sp());
        EXPECT(0x2cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0336
        gbc.setState(0x58b9, 0xb21e, 0x9ea0, 0xf8fc, 0x3163, 0x675c, 0x0, 0x0);
        gbc.writeMem(0x58b9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb21e, gbc.sp());
        EXPECT(0x58bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0337
        gbc.setState(0x61c3, 0x8e59, 0x4d40, 0x5c3a, 0xb962, 0xace, 0x0, 0x1);
        gbc.writeMem(0x61c3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8e59, gbc.sp());
        EXPECT(0x61c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0338
        gbc.setState(0xd70b, 0x2ff2, 0xb360, 0x6e52, 0xcddb, 0x5870, 0x1, 0x0);
        gbc.writeMem(0xd70b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2ff2, gbc.sp());
        EXPECT(0xd70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd70b));
        EXPECT(0x62, gbc.readMem(0xd70c));
        // CB 62 0339
        gbc.setState(0xedfc, 0xa470, 0x4920, 0x1315, 0xcf3e, 0x52ef, 0x1, 0x0);
        gbc.writeMem(0xedfc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa470, gbc.sp());
        EXPECT(0xedfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedfc));
        EXPECT(0x62, gbc.readMem(0xedfd));
        // CB 62 033A
        gbc.setState(0x173d, 0x8b85, 0x4f10, 0x78c5, 0x870e, 0x661d, 0x0, 0x1);
        gbc.writeMem(0x173d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8b85, gbc.sp());
        EXPECT(0x173f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 033B
        gbc.setState(0xc6b4, 0x6727, 0x89f0, 0x3080, 0xd4f6, 0x6f6e, 0x1, 0x0);
        gbc.writeMem(0xc6b4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6727, gbc.sp());
        EXPECT(0xc6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b4));
        EXPECT(0x62, gbc.readMem(0xc6b5));
        // CB 62 033C
        gbc.setState(0x5812, 0x16b8, 0x7550, 0x4164, 0x57e9, 0xefb3, 0x1, 0x0);
        gbc.writeMem(0x5812, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x16b8, gbc.sp());
        EXPECT(0x5814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 033D
        gbc.setState(0xb48b, 0xb4ed, 0xd560, 0x6ca9, 0x8b8b, 0x9554, 0x1, 0x0);
        gbc.writeMem(0xb48b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb4ed, gbc.sp());
        EXPECT(0xb48d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb48b));
        EXPECT(0x62, gbc.readMem(0xb48c));
        // CB 62 033E
        gbc.setState(0x7e50, 0xe00b, 0x2700, 0xf0dc, 0xa64c, 0x67c3, 0x0, 0x1);
        gbc.writeMem(0x7e50, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe00b, gbc.sp());
        EXPECT(0x7e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 033F
        gbc.setState(0xa2f9, 0x39ac, 0x7530, 0x75b6, 0x539d, 0xf8e9, 0x1, 0x0);
        gbc.writeMem(0xa2f9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x39ac, gbc.sp());
        EXPECT(0xa2fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f9));
        EXPECT(0x62, gbc.readMem(0xa2fa));
        // CB 62 0340
        gbc.setState(0x7c83, 0x3a9, 0xcac0, 0x36f3, 0xabc0, 0xf7ad, 0x0, 0x1);
        gbc.writeMem(0x7c83, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3a9, gbc.sp());
        EXPECT(0x7c85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0341
        gbc.setState(0xec58, 0x4050, 0x3140, 0x6384, 0xaaad, 0x2459, 0x1, 0x0);
        gbc.writeMem(0xec58, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4050, gbc.sp());
        EXPECT(0xec5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec58));
        EXPECT(0x62, gbc.readMem(0xec59));
        // CB 62 0342
        gbc.setState(0xbfc5, 0x153c, 0xd940, 0xa5ce, 0xfb21, 0x3e7f, 0x0, 0x0);
        gbc.writeMem(0xbfc5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x153c, gbc.sp());
        EXPECT(0xbfc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc5));
        EXPECT(0x62, gbc.readMem(0xbfc6));
        // CB 62 0343
        gbc.setState(0xeb6c, 0xc7c4, 0xf6b0, 0x582b, 0xa2d5, 0x4c5e, 0x0, 0x0);
        gbc.writeMem(0xeb6c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc7c4, gbc.sp());
        EXPECT(0xeb6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb6c));
        EXPECT(0x62, gbc.readMem(0xeb6d));
        // CB 62 0344
        gbc.setState(0xba4e, 0x73ef, 0x19c0, 0x641c, 0x4059, 0xc76b, 0x0, 0x1);
        gbc.writeMem(0xba4e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x73ef, gbc.sp());
        EXPECT(0xba50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba4e));
        EXPECT(0x62, gbc.readMem(0xba4f));
        // CB 62 0345
        gbc.setState(0x876f, 0xc12a, 0xe190, 0xce23, 0x66cd, 0x36a7, 0x0, 0x1);
        gbc.writeMem(0x876f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc12a, gbc.sp());
        EXPECT(0x8771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x876f));
        EXPECT(0x62, gbc.readMem(0x8770));
        // CB 62 0346
        gbc.setState(0xdc4b, 0xbd5f, 0x3830, 0x5220, 0x85dd, 0xe6df, 0x0, 0x0);
        gbc.writeMem(0xdc4b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbd5f, gbc.sp());
        EXPECT(0xdc4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc4b));
        EXPECT(0x62, gbc.readMem(0xdc4c));
        // CB 62 0347
        gbc.setState(0xc3d5, 0xc11c, 0x4470, 0xa861, 0xcb1b, 0xe92c, 0x0, 0x1);
        gbc.writeMem(0xc3d5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc11c, gbc.sp());
        EXPECT(0xc3d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d5));
        EXPECT(0x62, gbc.readMem(0xc3d6));
        // CB 62 0348
        gbc.setState(0xdcf9, 0x2f06, 0x1c90, 0x982a, 0x5fe6, 0x86e0, 0x1, 0x0);
        gbc.writeMem(0xdcf9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2f06, gbc.sp());
        EXPECT(0xdcfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf9));
        EXPECT(0x62, gbc.readMem(0xdcfa));
        // CB 62 0349
        gbc.setState(0xed6, 0x8c0c, 0x13d0, 0xfebe, 0x4e4e, 0xe8de, 0x0, 0x1);
        gbc.writeMem(0xed6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8c0c, gbc.sp());
        EXPECT(0xed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 034A
        gbc.setState(0x9b11, 0xd396, 0x32e0, 0x7760, 0x6d5a, 0x76e3, 0x0, 0x0);
        gbc.writeMem(0x9b11, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd396, gbc.sp());
        EXPECT(0x9b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b11));
        EXPECT(0x62, gbc.readMem(0x9b12));
        // CB 62 034B
        gbc.setState(0xbb55, 0x171b, 0x6c50, 0x407, 0xd1da, 0x4738, 0x0, 0x0);
        gbc.writeMem(0xbb55, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x171b, gbc.sp());
        EXPECT(0xbb57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb55));
        EXPECT(0x62, gbc.readMem(0xbb56));
        // CB 62 034C
        gbc.setState(0x75d, 0x736, 0xe290, 0xeb6a, 0xbfe8, 0x8ab3, 0x1, 0x1);
        gbc.writeMem(0x75d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x736, gbc.sp());
        EXPECT(0x75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 034D
        gbc.setState(0xe197, 0x3c19, 0x1900, 0x2371, 0x6b2f, 0x29cf, 0x0, 0x0);
        gbc.writeMem(0xe197, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3c19, gbc.sp());
        EXPECT(0xe199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe197));
        EXPECT(0x62, gbc.readMem(0xe198));
        // CB 62 034E
        gbc.setState(0x6300, 0xbba3, 0xea40, 0x5847, 0xd0a4, 0xf388, 0x1, 0x1);
        gbc.writeMem(0x6300, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbba3, gbc.sp());
        EXPECT(0x6302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 034F
        gbc.setState(0x25e, 0x2c1f, 0x11e0, 0xdc66, 0xf242, 0x68d0, 0x0, 0x1);
        gbc.writeMem(0x25e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2c1f, gbc.sp());
        EXPECT(0x260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0350
        gbc.setState(0x6351, 0x3f27, 0xd030, 0x5002, 0x6e4d, 0xbef9, 0x1, 0x0);
        gbc.writeMem(0x6351, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3f27, gbc.sp());
        EXPECT(0x6353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0351
        gbc.setState(0x3f4f, 0x6280, 0x1cf0, 0xca, 0xf3b2, 0x76a4, 0x0, 0x1);
        gbc.writeMem(0x3f4f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6280, gbc.sp());
        EXPECT(0x3f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0352
        gbc.setState(0x9cd, 0x709d, 0xa10, 0x865f, 0xac04, 0x843c, 0x0, 0x0);
        gbc.writeMem(0x9cd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x709d, gbc.sp());
        EXPECT(0x9cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0353
        gbc.setState(0x9acc, 0xb96, 0x2fb0, 0x457e, 0x4033, 0x5334, 0x1, 0x0);
        gbc.writeMem(0x9acc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb96, gbc.sp());
        EXPECT(0x9ace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9acc));
        EXPECT(0x62, gbc.readMem(0x9acd));
        // CB 62 0354
        gbc.setState(0x11a0, 0x2bcc, 0x1d30, 0xf3ad, 0x2764, 0x9538, 0x0, 0x0);
        gbc.writeMem(0x11a0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2bcc, gbc.sp());
        EXPECT(0x11a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0355
        gbc.setState(0x668f, 0x2ea, 0x550, 0xf25a, 0x5fff, 0x4b44, 0x0, 0x1);
        gbc.writeMem(0x668f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2ea, gbc.sp());
        EXPECT(0x6691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0356
        gbc.setState(0xd53, 0x7837, 0x63f0, 0xc890, 0x6bcd, 0xe677, 0x1, 0x1);
        gbc.writeMem(0xd53, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7837, gbc.sp());
        EXPECT(0xd55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0357
        gbc.setState(0xc588, 0xfa12, 0x4ee0, 0x5041, 0xe170, 0x7aa0, 0x1, 0x1);
        gbc.writeMem(0xc588, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfa12, gbc.sp());
        EXPECT(0xc58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc588));
        EXPECT(0x62, gbc.readMem(0xc589));
        // CB 62 0358
        gbc.setState(0x2c7, 0x7178, 0x8450, 0xbab2, 0xf247, 0xe884, 0x0, 0x1);
        gbc.writeMem(0x2c7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7178, gbc.sp());
        EXPECT(0x2c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0359
        gbc.setState(0x3483, 0xf536, 0xc870, 0x6ec3, 0x34e4, 0x8ba4, 0x1, 0x1);
        gbc.writeMem(0x3483, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf536, gbc.sp());
        EXPECT(0x3485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 035A
        gbc.setState(0xd230, 0xe622, 0x6ac0, 0x611d, 0xcf50, 0xd2b9, 0x1, 0x1);
        gbc.writeMem(0xd230, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe622, gbc.sp());
        EXPECT(0xd232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd230));
        EXPECT(0x62, gbc.readMem(0xd231));
        // CB 62 035B
        gbc.setState(0x7b2a, 0x8ba3, 0x5850, 0xb47c, 0x17fc, 0xee3c, 0x0, 0x1);
        gbc.writeMem(0x7b2a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8ba3, gbc.sp());
        EXPECT(0x7b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 035D
        gbc.setState(0x35fc, 0xcc5d, 0x8b80, 0x5999, 0x49ba, 0x484a, 0x1, 0x0);
        gbc.writeMem(0x35fc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcc5d, gbc.sp());
        EXPECT(0x35fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 035F
        gbc.setState(0xdc1, 0x4e69, 0x8130, 0x46f4, 0x4fa, 0xe886, 0x0, 0x0);
        gbc.writeMem(0xdc1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4e69, gbc.sp());
        EXPECT(0xdc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0360
        gbc.setState(0x8184, 0xa039, 0xde10, 0xa02c, 0x35d2, 0x5252, 0x1, 0x0);
        gbc.writeMem(0x8184, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa039, gbc.sp());
        EXPECT(0x8186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8184));
        EXPECT(0x62, gbc.readMem(0x8185));
        // CB 62 0361
        gbc.setState(0x410, 0x39a3, 0xd90, 0xd0a5, 0x4ced, 0x4971, 0x0, 0x0);
        gbc.writeMem(0x410, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x39a3, gbc.sp());
        EXPECT(0x412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0362
        gbc.setState(0x1157, 0x45de, 0x3b40, 0xef0c, 0x364a, 0x968f, 0x1, 0x1);
        gbc.writeMem(0x1157, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x45de, gbc.sp());
        EXPECT(0x1159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0363
        gbc.setState(0x114f, 0x2143, 0xecf0, 0x30c3, 0x6e5d, 0xbd11, 0x0, 0x0);
        gbc.writeMem(0x114f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2143, gbc.sp());
        EXPECT(0x1151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0364
        gbc.setState(0x6aa3, 0x98da, 0x3830, 0x6128, 0xcf3, 0x754c, 0x1, 0x1);
        gbc.writeMem(0x6aa3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x98da, gbc.sp());
        EXPECT(0x6aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0365
        gbc.setState(0xe023, 0x3475, 0xf4b0, 0x75f, 0xe4a6, 0x6190, 0x1, 0x1);
        gbc.writeMem(0xe023, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3475, gbc.sp());
        EXPECT(0xe025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe023));
        EXPECT(0x62, gbc.readMem(0xe024));
        // CB 62 0366
        gbc.setState(0xc7ff, 0xcf52, 0x2c0, 0x9a99, 0x6bd, 0x6426, 0x1, 0x1);
        gbc.writeMem(0xc7ff, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcf52, gbc.sp());
        EXPECT(0xc801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ff));
        EXPECT(0x62, gbc.readMem(0xc800));
        // CB 62 0367
        gbc.setState(0xb2f6, 0xe03d, 0xb1a0, 0x9817, 0x5f2a, 0x2f2d, 0x1, 0x1);
        gbc.writeMem(0xb2f6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe03d, gbc.sp());
        EXPECT(0xb2f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f6));
        EXPECT(0x62, gbc.readMem(0xb2f7));
        // CB 62 0368
        gbc.setState(0xd89a, 0x362a, 0x1c90, 0x90ec, 0x8b11, 0xd42b, 0x0, 0x1);
        gbc.writeMem(0xd89a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x362a, gbc.sp());
        EXPECT(0xd89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89a));
        EXPECT(0x62, gbc.readMem(0xd89b));
        // CB 62 0369
        gbc.setState(0x6fa2, 0x3b2c, 0xd00, 0x15e6, 0x9561, 0xf017, 0x0, 0x0);
        gbc.writeMem(0x6fa2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3b2c, gbc.sp());
        EXPECT(0x6fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 036A
        gbc.setState(0xa533, 0xb3d2, 0x8aa0, 0x6b, 0x8df, 0xf8e3, 0x1, 0x1);
        gbc.writeMem(0xa533, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb3d2, gbc.sp());
        EXPECT(0xa535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa533));
        EXPECT(0x62, gbc.readMem(0xa534));
        // CB 62 036B
        gbc.setState(0x847f, 0x8627, 0x1ed0, 0x575c, 0x5b5, 0x3195, 0x0, 0x1);
        gbc.writeMem(0x847f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8627, gbc.sp());
        EXPECT(0x8481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x847f));
        EXPECT(0x62, gbc.readMem(0x8480));
        // CB 62 036C
        gbc.setState(0xb54, 0xbd7d, 0xad10, 0x45c6, 0xf61e, 0x7080, 0x0, 0x0);
        gbc.writeMem(0xb54, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbd7d, gbc.sp());
        EXPECT(0xb56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 036D
        gbc.setState(0x90c3, 0xff1d, 0xad40, 0xe31d, 0x55b5, 0x6bf7, 0x0, 0x0);
        gbc.writeMem(0x90c3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xff1d, gbc.sp());
        EXPECT(0x90c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c3));
        EXPECT(0x62, gbc.readMem(0x90c4));
        // CB 62 036E
        gbc.setState(0x74bb, 0x38d3, 0x86c0, 0x534b, 0xfc1a, 0xc646, 0x1, 0x1);
        gbc.writeMem(0x74bb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x38d3, gbc.sp());
        EXPECT(0x74bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 036F
        gbc.setState(0xd7d9, 0x4b0d, 0x7e60, 0x5e97, 0xb36d, 0x804b, 0x1, 0x1);
        gbc.writeMem(0xd7d9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4b0d, gbc.sp());
        EXPECT(0xd7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d9));
        EXPECT(0x62, gbc.readMem(0xd7da));
        // CB 62 0370
        gbc.setState(0x1379, 0x9288, 0xbb00, 0xd757, 0xfc60, 0xb7f, 0x1, 0x0);
        gbc.writeMem(0x1379, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9288, gbc.sp());
        EXPECT(0x137b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0371
        gbc.setState(0x65f0, 0x478b, 0x4860, 0x837b, 0xb3ca, 0x166, 0x1, 0x1);
        gbc.writeMem(0x65f0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x478b, gbc.sp());
        EXPECT(0x65f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0372
        gbc.setState(0xebb4, 0x44eb, 0x8410, 0xb759, 0x3453, 0x2767, 0x0, 0x1);
        gbc.writeMem(0xebb4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x44eb, gbc.sp());
        EXPECT(0xebb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb4));
        EXPECT(0x62, gbc.readMem(0xebb5));
        // CB 62 0373
        gbc.setState(0xd05d, 0x932a, 0xbea0, 0xe87, 0xc3da, 0x5033, 0x0, 0x1);
        gbc.writeMem(0xd05d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x932a, gbc.sp());
        EXPECT(0xd05f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd05d));
        EXPECT(0x62, gbc.readMem(0xd05e));
        // CB 62 0374
        gbc.setState(0x97cc, 0x17ad, 0x8560, 0xbd4d, 0x9c0a, 0x59d0, 0x1, 0x0);
        gbc.writeMem(0x97cc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x17ad, gbc.sp());
        EXPECT(0x97ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97cc));
        EXPECT(0x62, gbc.readMem(0x97cd));
        // CB 62 0375
        gbc.setState(0xb8f9, 0x29de, 0x61e0, 0x4caa, 0xad8d, 0x33e2, 0x0, 0x1);
        gbc.writeMem(0xb8f9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x29de, gbc.sp());
        EXPECT(0xb8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f9));
        EXPECT(0x62, gbc.readMem(0xb8fa));
        // CB 62 0376
        gbc.setState(0xe381, 0x960e, 0xa480, 0xa077, 0x1735, 0x2b22, 0x1, 0x1);
        gbc.writeMem(0xe381, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x960e, gbc.sp());
        EXPECT(0xe383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe381));
        EXPECT(0x62, gbc.readMem(0xe382));
        // CB 62 0377
        gbc.setState(0x8ced, 0x9cb6, 0xe8e0, 0xc1a7, 0x7df6, 0x9eae, 0x1, 0x0);
        gbc.writeMem(0x8ced, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9cb6, gbc.sp());
        EXPECT(0x8cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ced));
        EXPECT(0x62, gbc.readMem(0x8cee));
        // CB 62 0378
        gbc.setState(0xe88a, 0xf658, 0x36e0, 0x6df1, 0xb7c6, 0x1005, 0x1, 0x0);
        gbc.writeMem(0xe88a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf658, gbc.sp());
        EXPECT(0xe88c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe88a));
        EXPECT(0x62, gbc.readMem(0xe88b));
        // CB 62 0379
        gbc.setState(0x10bc, 0x7705, 0xaf70, 0x7f4, 0xbcf9, 0x89af, 0x1, 0x1);
        gbc.writeMem(0x10bc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7705, gbc.sp());
        EXPECT(0x10be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 037A
        gbc.setState(0x42c, 0xcc51, 0xffa0, 0x456c, 0xbc98, 0xdc83, 0x0, 0x0);
        gbc.writeMem(0x42c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcc51, gbc.sp());
        EXPECT(0x42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 037B
        gbc.setState(0xa541, 0x9295, 0x3180, 0x7a7f, 0xbace, 0x73ea, 0x1, 0x1);
        gbc.writeMem(0xa541, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9295, gbc.sp());
        EXPECT(0xa543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa541));
        EXPECT(0x62, gbc.readMem(0xa542));
        // CB 62 037C
        gbc.setState(0x8923, 0x7abe, 0x1c60, 0x46b4, 0x6760, 0xe735, 0x0, 0x0);
        gbc.writeMem(0x8923, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7abe, gbc.sp());
        EXPECT(0x8925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8923));
        EXPECT(0x62, gbc.readMem(0x8924));
        // CB 62 037D
        gbc.setState(0xd413, 0x147f, 0x9be0, 0xf286, 0x2bb3, 0x4fcb, 0x0, 0x0);
        gbc.writeMem(0xd413, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x147f, gbc.sp());
        EXPECT(0xd415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd413));
        EXPECT(0x62, gbc.readMem(0xd414));
        // CB 62 037E
        gbc.setState(0x901, 0xdca3, 0x7ab0, 0x4f4e, 0xe89f, 0xa003, 0x0, 0x0);
        gbc.writeMem(0x901, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdca3, gbc.sp());
        EXPECT(0x903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0380
        gbc.setState(0xe4ba, 0x47ff, 0x6e70, 0x8a59, 0x53c5, 0xb0d6, 0x1, 0x1);
        gbc.writeMem(0xe4ba, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x47ff, gbc.sp());
        EXPECT(0xe4bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ba));
        EXPECT(0x62, gbc.readMem(0xe4bb));
        // CB 62 0381
        gbc.setState(0x327, 0xe0b2, 0x5150, 0xf39f, 0xa0df, 0x5360, 0x0, 0x0);
        gbc.writeMem(0x327, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe0b2, gbc.sp());
        EXPECT(0x329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0382
        gbc.setState(0xaf4b, 0x1b0e, 0x4600, 0xa97b, 0x20d6, 0x381f, 0x1, 0x0);
        gbc.writeMem(0xaf4b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1b0e, gbc.sp());
        EXPECT(0xaf4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf4b));
        EXPECT(0x62, gbc.readMem(0xaf4c));
        // CB 62 0383
        gbc.setState(0x8780, 0x87e0, 0x46b0, 0x304f, 0x148b, 0x7eb2, 0x0, 0x1);
        gbc.writeMem(0x8780, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x87e0, gbc.sp());
        EXPECT(0x8782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8780));
        EXPECT(0x62, gbc.readMem(0x8781));
        // CB 62 0384
        gbc.setState(0x27d6, 0x94a9, 0xa770, 0x1a, 0xce42, 0x3a9e, 0x0, 0x1);
        gbc.writeMem(0x27d6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x94a9, gbc.sp());
        EXPECT(0x27d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0385
        gbc.setState(0x6e48, 0xbb4e, 0x7620, 0x15ce, 0x3e6e, 0x16db, 0x0, 0x1);
        gbc.writeMem(0x6e48, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbb4e, gbc.sp());
        EXPECT(0x6e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0386
        gbc.setState(0xbb64, 0x77ed, 0x5e30, 0x801b, 0xd946, 0x7f47, 0x0, 0x0);
        gbc.writeMem(0xbb64, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x77ed, gbc.sp());
        EXPECT(0xbb66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb64));
        EXPECT(0x62, gbc.readMem(0xbb65));
        // CB 62 0387
        gbc.setState(0x8fb9, 0x7419, 0xad90, 0xf51c, 0xdd39, 0x19a4, 0x1, 0x1);
        gbc.writeMem(0x8fb9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7419, gbc.sp());
        EXPECT(0x8fbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb9));
        EXPECT(0x62, gbc.readMem(0x8fba));
        // CB 62 0389
        gbc.setState(0xbf2f, 0x70c8, 0x24c0, 0x31b0, 0xc90a, 0xe722, 0x0, 0x1);
        gbc.writeMem(0xbf2f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x70c8, gbc.sp());
        EXPECT(0xbf31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf2f));
        EXPECT(0x62, gbc.readMem(0xbf30));
        // CB 62 038A
        gbc.setState(0x9432, 0xfae, 0x3760, 0x3d4e, 0x5092, 0x5927, 0x1, 0x0);
        gbc.writeMem(0x9432, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfae, gbc.sp());
        EXPECT(0x9434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9432));
        EXPECT(0x62, gbc.readMem(0x9433));
        // CB 62 038B
        gbc.setState(0xeaaf, 0xbdc5, 0xebd0, 0x5f99, 0x9e95, 0xb621, 0x0, 0x0);
        gbc.writeMem(0xeaaf, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbdc5, gbc.sp());
        EXPECT(0xeab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaaf));
        EXPECT(0x62, gbc.readMem(0xeab0));
        // CB 62 038C
        gbc.setState(0xdaf8, 0xd8ca, 0x9220, 0x591c, 0x7789, 0x7e5b, 0x1, 0x0);
        gbc.writeMem(0xdaf8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd8ca, gbc.sp());
        EXPECT(0xdafa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf8));
        EXPECT(0x62, gbc.readMem(0xdaf9));
        // CB 62 038D
        gbc.setState(0x200c, 0xff98, 0x67f0, 0xc2f8, 0x2427, 0xf406, 0x0, 0x1);
        gbc.writeMem(0x200c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xff98, gbc.sp());
        EXPECT(0x200e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 038E
        gbc.setState(0x320a, 0x4466, 0xa5f0, 0x9ef2, 0x15b9, 0x24a9, 0x0, 0x1);
        gbc.writeMem(0x320a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4466, gbc.sp());
        EXPECT(0x320c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 038F
        gbc.setState(0xa246, 0x1a38, 0xf740, 0xfbf2, 0xe07e, 0x3a63, 0x0, 0x1);
        gbc.writeMem(0xa246, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1a38, gbc.sp());
        EXPECT(0xa248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa246));
        EXPECT(0x62, gbc.readMem(0xa247));
        // CB 62 0390
        gbc.setState(0x30e8, 0xc2b9, 0x41f0, 0x14fe, 0x4186, 0xf10f, 0x0, 0x0);
        gbc.writeMem(0x30e8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc2b9, gbc.sp());
        EXPECT(0x30ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0391
        gbc.setState(0xd1d7, 0x4fae, 0x20e0, 0x3ca0, 0x7ad6, 0x3cfc, 0x0, 0x1);
        gbc.writeMem(0xd1d7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4fae, gbc.sp());
        EXPECT(0xd1d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d7));
        EXPECT(0x62, gbc.readMem(0xd1d8));
        // CB 62 0393
        gbc.setState(0xac07, 0x8f6a, 0x4450, 0xc4fd, 0x94f1, 0x254e, 0x1, 0x0);
        gbc.writeMem(0xac07, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8f6a, gbc.sp());
        EXPECT(0xac09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac07));
        EXPECT(0x62, gbc.readMem(0xac08));
        // CB 62 0394
        gbc.setState(0x90ab, 0x49b4, 0x27d0, 0xcf8d, 0xad36, 0x700e, 0x1, 0x0);
        gbc.writeMem(0x90ab, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x49b4, gbc.sp());
        EXPECT(0x90ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ab));
        EXPECT(0x62, gbc.readMem(0x90ac));
        // CB 62 0395
        gbc.setState(0x2439, 0xc3dd, 0x2dd0, 0xb3b4, 0xad38, 0x29a4, 0x1, 0x0);
        gbc.writeMem(0x2439, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc3dd, gbc.sp());
        EXPECT(0x243b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0396
        gbc.setState(0x1c43, 0xb40f, 0x9a00, 0xea89, 0xaef, 0x5254, 0x1, 0x1);
        gbc.writeMem(0x1c43, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb40f, gbc.sp());
        EXPECT(0x1c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 0397
        gbc.setState(0x6bf, 0xecbc, 0x8b0, 0x9b2a, 0xe602, 0x8eb8, 0x0, 0x0);
        gbc.writeMem(0x6bf, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xecbc, gbc.sp());
        EXPECT(0x6c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 0398
        gbc.setState(0x847e, 0x5074, 0xd6a0, 0xce54, 0x3ac4, 0x28a4, 0x1, 0x1);
        gbc.writeMem(0x847e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5074, gbc.sp());
        EXPECT(0x8480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x847e));
        EXPECT(0x62, gbc.readMem(0x847f));
        // CB 62 0399
        gbc.setState(0x73eb, 0xa8b1, 0xfca0, 0xafbf, 0xd4bf, 0xcedb, 0x0, 0x1);
        gbc.writeMem(0x73eb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa8b1, gbc.sp());
        EXPECT(0x73ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 039A
        gbc.setState(0x54e2, 0xbad6, 0x7770, 0xff41, 0xb631, 0xb516, 0x0, 0x1);
        gbc.writeMem(0x54e2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbad6, gbc.sp());
        EXPECT(0x54e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 039B
        gbc.setState(0x598f, 0x4465, 0xf520, 0xb0a6, 0xecf3, 0xb1f3, 0x0, 0x0);
        gbc.writeMem(0x598f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4465, gbc.sp());
        EXPECT(0x5991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 039C
        gbc.setState(0xc12, 0x1f80, 0xa200, 0xd60d, 0x9c87, 0xbd75, 0x1, 0x1);
        gbc.writeMem(0xc12, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1f80, gbc.sp());
        EXPECT(0xc14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 039D
        gbc.setState(0x24eb, 0x9455, 0x6200, 0xb5f7, 0xbb56, 0xea75, 0x0, 0x1);
        gbc.writeMem(0x24eb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9455, gbc.sp());
        EXPECT(0x24ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 039E
        gbc.setState(0x7bfe, 0xa1fd, 0xe420, 0x3dfc, 0x6279, 0xa85, 0x0, 0x1);
        gbc.writeMem(0x7bfe, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa1fd, gbc.sp());
        EXPECT(0x7c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 039F
        gbc.setState(0x271c, 0xa72d, 0x3fd0, 0x35f4, 0x737e, 0xc85, 0x1, 0x0);
        gbc.writeMem(0x271c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa72d, gbc.sp());
        EXPECT(0x271e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03A0
        gbc.setState(0xad6f, 0x2332, 0x6c40, 0x65f7, 0xfb7a, 0x6c0, 0x1, 0x1);
        gbc.writeMem(0xad6f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2332, gbc.sp());
        EXPECT(0xad71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad6f));
        EXPECT(0x62, gbc.readMem(0xad70));
        // CB 62 03A1
        gbc.setState(0x6ed7, 0xb9ee, 0x72a0, 0xc35d, 0x498a, 0x8e7, 0x0, 0x1);
        gbc.writeMem(0x6ed7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb9ee, gbc.sp());
        EXPECT(0x6ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03A3
        gbc.setState(0xc963, 0x52b3, 0xc860, 0xa351, 0x3d74, 0xe568, 0x1, 0x1);
        gbc.writeMem(0xc963, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x52b3, gbc.sp());
        EXPECT(0xc965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc963));
        EXPECT(0x62, gbc.readMem(0xc964));
        // CB 62 03A4
        gbc.setState(0x5aa0, 0x85ec, 0xe310, 0xf959, 0x9212, 0x6e86, 0x0, 0x1);
        gbc.writeMem(0x5aa0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x85ec, gbc.sp());
        EXPECT(0x5aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03A5
        gbc.setState(0xe68b, 0xc477, 0x91f0, 0x7b1a, 0x2e2b, 0xdd50, 0x0, 0x1);
        gbc.writeMem(0xe68b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc477, gbc.sp());
        EXPECT(0xe68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe68b));
        EXPECT(0x62, gbc.readMem(0xe68c));
        // CB 62 03A6
        gbc.setState(0xbdd9, 0x4f4e, 0x90f0, 0x1aab, 0x1daa, 0x50fd, 0x0, 0x1);
        gbc.writeMem(0xbdd9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4f4e, gbc.sp());
        EXPECT(0xbddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd9));
        EXPECT(0x62, gbc.readMem(0xbdda));
        // CB 62 03A7
        gbc.setState(0x615b, 0xa447, 0x1040, 0x929e, 0x9cc0, 0x2d91, 0x0, 0x1);
        gbc.writeMem(0x615b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa447, gbc.sp());
        EXPECT(0x615d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03A8
        gbc.setState(0x9feb, 0xa32f, 0x1b20, 0x9341, 0x912d, 0x22bc, 0x0, 0x1);
        gbc.writeMem(0x9feb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa32f, gbc.sp());
        EXPECT(0x9fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9feb));
        EXPECT(0x62, gbc.readMem(0x9fec));
        // CB 62 03A9
        gbc.setState(0x584d, 0xd3f2, 0x49a0, 0x37a9, 0xc83, 0x4e66, 0x0, 0x0);
        gbc.writeMem(0x584d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd3f2, gbc.sp());
        EXPECT(0x584f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03AA
        gbc.setState(0xc05b, 0xbd66, 0x8600, 0xdbb0, 0xafd5, 0xefc7, 0x1, 0x0);
        gbc.writeMem(0xc05b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbd66, gbc.sp());
        EXPECT(0xc05d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc05b));
        EXPECT(0x62, gbc.readMem(0xc05c));
        // CB 62 03AB
        gbc.setState(0xef3b, 0xad59, 0xb360, 0xf71a, 0x198e, 0xb17a, 0x0, 0x1);
        gbc.writeMem(0xef3b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xad59, gbc.sp());
        EXPECT(0xef3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3b));
        EXPECT(0x62, gbc.readMem(0xef3c));
        // CB 62 03AC
        gbc.setState(0xc41a, 0x3abd, 0x9120, 0xea63, 0xd7f1, 0x7e2d, 0x0, 0x0);
        gbc.writeMem(0xc41a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3abd, gbc.sp());
        EXPECT(0xc41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc41a));
        EXPECT(0x62, gbc.readMem(0xc41b));
        // CB 62 03AD
        gbc.setState(0x65e3, 0x8f8a, 0xd00, 0x1d6b, 0x2b7, 0xd6ba, 0x1, 0x1);
        gbc.writeMem(0x65e3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8f8a, gbc.sp());
        EXPECT(0x65e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03AE
        gbc.setState(0x2f9a, 0x8fc9, 0xd550, 0x2177, 0xe9dc, 0x16e0, 0x0, 0x1);
        gbc.writeMem(0x2f9a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8fc9, gbc.sp());
        EXPECT(0x2f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03AF
        gbc.setState(0x35ea, 0x2f37, 0xebe0, 0xd86, 0x4af1, 0x806b, 0x1, 0x1);
        gbc.writeMem(0x35ea, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2f37, gbc.sp());
        EXPECT(0x35ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03B0
        gbc.setState(0x4016, 0x11d2, 0x2870, 0x2f45, 0xfcd0, 0xf6ce, 0x1, 0x1);
        gbc.writeMem(0x4016, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x11d2, gbc.sp());
        EXPECT(0x4018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03B1
        gbc.setState(0x2032, 0xcc00, 0x4690, 0xa9fe, 0x36d2, 0x5e4b, 0x1, 0x1);
        gbc.writeMem(0x2032, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcc00, gbc.sp());
        EXPECT(0x2034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03B2
        gbc.setState(0x7bf4, 0x383, 0x6190, 0x43c2, 0x17b8, 0xd94a, 0x0, 0x1);
        gbc.writeMem(0x7bf4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x383, gbc.sp());
        EXPECT(0x7bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03B3
        gbc.setState(0x4ae1, 0x3a86, 0x5c50, 0x74fb, 0x3cf5, 0x71df, 0x1, 0x1);
        gbc.writeMem(0x4ae1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3a86, gbc.sp());
        EXPECT(0x4ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03B4
        gbc.setState(0x479c, 0xbcf6, 0x98b0, 0x8142, 0x9b7d, 0xa8a5, 0x1, 0x1);
        gbc.writeMem(0x479c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbcf6, gbc.sp());
        EXPECT(0x479e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03B5
        gbc.setState(0x4bdc, 0x57c, 0x4020, 0x4434, 0x9a58, 0xb52e, 0x1, 0x1);
        gbc.writeMem(0x4bdc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x57c, gbc.sp());
        EXPECT(0x4bde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03B7
        gbc.setState(0x5e09, 0x4dc6, 0x7710, 0xb0a9, 0x8afe, 0x8814, 0x1, 0x0);
        gbc.writeMem(0x5e09, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4dc6, gbc.sp());
        EXPECT(0x5e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03B8
        gbc.setState(0x43aa, 0x665c, 0x4780, 0x73ff, 0x6865, 0x896d, 0x0, 0x0);
        gbc.writeMem(0x43aa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x665c, gbc.sp());
        EXPECT(0x43ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03B9
        gbc.setState(0xcc1b, 0x899a, 0xb940, 0xa4b6, 0x91f, 0x9aea, 0x0, 0x1);
        gbc.writeMem(0xcc1b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x899a, gbc.sp());
        EXPECT(0xcc1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc1b));
        EXPECT(0x62, gbc.readMem(0xcc1c));
        // CB 62 03BA
        gbc.setState(0xab38, 0xf27e, 0x8920, 0x7631, 0x3ce2, 0x656e, 0x0, 0x1);
        gbc.writeMem(0xab38, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf27e, gbc.sp());
        EXPECT(0xab3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab38));
        EXPECT(0x62, gbc.readMem(0xab39));
        // CB 62 03BB
        gbc.setState(0x1292, 0xd396, 0xc210, 0x6a30, 0x3035, 0x17a9, 0x0, 0x0);
        gbc.writeMem(0x1292, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd396, gbc.sp());
        EXPECT(0x1294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03BC
        gbc.setState(0x5b5e, 0xb4c0, 0x9f60, 0x5a6e, 0x7ff5, 0x7396, 0x1, 0x1);
        gbc.writeMem(0x5b5e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb4c0, gbc.sp());
        EXPECT(0x5b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03BD
        gbc.setState(0xa5b3, 0x29b7, 0xdae0, 0x21c5, 0xbe54, 0x1219, 0x0, 0x1);
        gbc.writeMem(0xa5b3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x29b7, gbc.sp());
        EXPECT(0xa5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5b3));
        EXPECT(0x62, gbc.readMem(0xa5b4));
        // CB 62 03BE
        gbc.setState(0x25c0, 0x55fa, 0x260, 0xe66b, 0xc1a7, 0xb673, 0x0, 0x0);
        gbc.writeMem(0x25c0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x55fa, gbc.sp());
        EXPECT(0x25c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03BF
        gbc.setState(0x90ea, 0x1a3, 0xb280, 0xb74d, 0xe452, 0xd2e, 0x0, 0x0);
        gbc.writeMem(0x90ea, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1a3, gbc.sp());
        EXPECT(0x90ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ea));
        EXPECT(0x62, gbc.readMem(0x90eb));
        // CB 62 03C0
        gbc.setState(0x499a, 0xb23, 0xed50, 0x71c, 0xc271, 0x2524, 0x1, 0x0);
        gbc.writeMem(0x499a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb23, gbc.sp());
        EXPECT(0x499c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03C1
        gbc.setState(0xd0ab, 0x20f1, 0x1fe0, 0xc258, 0x1a82, 0x6f01, 0x0, 0x0);
        gbc.writeMem(0xd0ab, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x20f1, gbc.sp());
        EXPECT(0xd0ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ab));
        EXPECT(0x62, gbc.readMem(0xd0ac));
        // CB 62 03C2
        gbc.setState(0xbaca, 0xd544, 0xd210, 0x61d4, 0x50ca, 0x9592, 0x1, 0x0);
        gbc.writeMem(0xbaca, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd544, gbc.sp());
        EXPECT(0xbacc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaca));
        EXPECT(0x62, gbc.readMem(0xbacb));
        // CB 62 03C3
        gbc.setState(0x9988, 0xe2eb, 0x350, 0x5501, 0x46ad, 0xed1e, 0x1, 0x1);
        gbc.writeMem(0x9988, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe2eb, gbc.sp());
        EXPECT(0x998a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9988));
        EXPECT(0x62, gbc.readMem(0x9989));
        // CB 62 03C4
        gbc.setState(0x4a0d, 0xb57c, 0xae80, 0xbdc2, 0x8e8b, 0x5c62, 0x0, 0x0);
        gbc.writeMem(0x4a0d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb57c, gbc.sp());
        EXPECT(0x4a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03C5
        gbc.setState(0x18f7, 0xf9a6, 0x75d0, 0x10c9, 0x6a45, 0xd788, 0x0, 0x1);
        gbc.writeMem(0x18f7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf9a6, gbc.sp());
        EXPECT(0x18f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03C6
        gbc.setState(0xa7d8, 0x5b1b, 0xd8a0, 0xf913, 0x24da, 0x2056, 0x1, 0x0);
        gbc.writeMem(0xa7d8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5b1b, gbc.sp());
        EXPECT(0xa7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d8));
        EXPECT(0x62, gbc.readMem(0xa7d9));
        // CB 62 03C7
        gbc.setState(0xdb3f, 0xbe2b, 0xd10, 0x60a1, 0xa1f6, 0xa6c0, 0x1, 0x1);
        gbc.writeMem(0xdb3f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbe2b, gbc.sp());
        EXPECT(0xdb41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3f));
        EXPECT(0x62, gbc.readMem(0xdb40));
        // CB 62 03C8
        gbc.setState(0x5aa8, 0x9828, 0x13f0, 0x115c, 0xda15, 0x950f, 0x0, 0x0);
        gbc.writeMem(0x5aa8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9828, gbc.sp());
        EXPECT(0x5aaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03C9
        gbc.setState(0x40e5, 0x9bf7, 0xd430, 0x324d, 0xa665, 0x7bf7, 0x0, 0x0);
        gbc.writeMem(0x40e5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9bf7, gbc.sp());
        EXPECT(0x40e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03CA
        gbc.setState(0xeac2, 0x4646, 0xd3b0, 0x76e1, 0xa6d0, 0x9231, 0x1, 0x1);
        gbc.writeMem(0xeac2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4646, gbc.sp());
        EXPECT(0xeac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac2));
        EXPECT(0x62, gbc.readMem(0xeac3));
        // CB 62 03CB
        gbc.setState(0x2b0c, 0x9d59, 0xef10, 0x5198, 0xdbfb, 0xd63e, 0x0, 0x1);
        gbc.writeMem(0x2b0c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9d59, gbc.sp());
        EXPECT(0x2b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03CC
        gbc.setState(0x3631, 0xf4d1, 0x5a60, 0xaae0, 0x4802, 0xb41a, 0x0, 0x1);
        gbc.writeMem(0x3631, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf4d1, gbc.sp());
        EXPECT(0x3633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03CD
        gbc.setState(0xac2c, 0x8d87, 0xf7b0, 0x47e0, 0xe3f8, 0x134f, 0x1, 0x1);
        gbc.writeMem(0xac2c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8d87, gbc.sp());
        EXPECT(0xac2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2c));
        EXPECT(0x62, gbc.readMem(0xac2d));
        // CB 62 03CE
        gbc.setState(0x3ca7, 0x6746, 0xe2e0, 0xe48e, 0xd10f, 0x32d0, 0x1, 0x0);
        gbc.writeMem(0x3ca7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6746, gbc.sp());
        EXPECT(0x3ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03CF
        gbc.setState(0x850f, 0xb86, 0x4450, 0x89bc, 0x98d3, 0xf069, 0x1, 0x1);
        gbc.writeMem(0x850f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb86, gbc.sp());
        EXPECT(0x8511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x850f));
        EXPECT(0x62, gbc.readMem(0x8510));
        // CB 62 03D0
        gbc.setState(0x41b7, 0x4300, 0x65a0, 0xe206, 0xb72d, 0x56ed, 0x1, 0x0);
        gbc.writeMem(0x41b7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4300, gbc.sp());
        EXPECT(0x41b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03D1
        gbc.setState(0x4882, 0xd1bb, 0xbd70, 0x57c6, 0x72f6, 0xa355, 0x1, 0x0);
        gbc.writeMem(0x4882, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd1bb, gbc.sp());
        EXPECT(0x4884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03D2
        gbc.setState(0xa003, 0x6485, 0x1230, 0xda8f, 0xbd3b, 0xbdf1, 0x0, 0x1);
        gbc.writeMem(0xa003, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6485, gbc.sp());
        EXPECT(0xa005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa003));
        EXPECT(0x62, gbc.readMem(0xa004));
        // CB 62 03D3
        gbc.setState(0x107e, 0xa3ab, 0xc060, 0xfbf1, 0xf46f, 0x3067, 0x1, 0x1);
        gbc.writeMem(0x107e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa3ab, gbc.sp());
        EXPECT(0x1080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03D4
        gbc.setState(0x96e8, 0x962a, 0xfe20, 0xc947, 0xd754, 0x89da, 0x0, 0x0);
        gbc.writeMem(0x96e8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x962a, gbc.sp());
        EXPECT(0x96ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e8));
        EXPECT(0x62, gbc.readMem(0x96e9));
        // CB 62 03D5
        gbc.setState(0x5945, 0x7372, 0x4780, 0x6f53, 0x5637, 0xf99b, 0x0, 0x0);
        gbc.writeMem(0x5945, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7372, gbc.sp());
        EXPECT(0x5947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03D6
        gbc.setState(0x2819, 0x6cf5, 0x4c30, 0x9214, 0xe363, 0xce54, 0x0, 0x1);
        gbc.writeMem(0x2819, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6cf5, gbc.sp());
        EXPECT(0x281b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03D7
        gbc.setState(0x3643, 0xfd4d, 0x8b50, 0x764c, 0x78aa, 0x8a95, 0x1, 0x1);
        gbc.writeMem(0x3643, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfd4d, gbc.sp());
        EXPECT(0x3645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03D8
        gbc.setState(0xbeae, 0x8cba, 0x9780, 0x3b33, 0x4726, 0x5062, 0x0, 0x0);
        gbc.writeMem(0xbeae, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8cba, gbc.sp());
        EXPECT(0xbeb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeae));
        EXPECT(0x62, gbc.readMem(0xbeaf));
        // CB 62 03D9
        gbc.setState(0xb48b, 0x80d6, 0xea40, 0xcd03, 0x50d2, 0xd6fa, 0x1, 0x0);
        gbc.writeMem(0xb48b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x80d6, gbc.sp());
        EXPECT(0xb48d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb48b));
        EXPECT(0x62, gbc.readMem(0xb48c));
        // CB 62 03DA
        gbc.setState(0xaddb, 0x6db6, 0xd410, 0x3ae0, 0xda1d, 0xd14a, 0x0, 0x0);
        gbc.writeMem(0xaddb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6db6, gbc.sp());
        EXPECT(0xaddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaddb));
        EXPECT(0x62, gbc.readMem(0xaddc));
        // CB 62 03DB
        gbc.setState(0xc91e, 0xf208, 0x4690, 0x3b03, 0x1342, 0x5861, 0x1, 0x1);
        gbc.writeMem(0xc91e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf208, gbc.sp());
        EXPECT(0xc920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc91e));
        EXPECT(0x62, gbc.readMem(0xc91f));
        // CB 62 03DC
        gbc.setState(0x4e28, 0x54e0, 0x20c0, 0xa27c, 0xfcf4, 0xbe2f, 0x0, 0x1);
        gbc.writeMem(0x4e28, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x54e0, gbc.sp());
        EXPECT(0x4e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03DD
        gbc.setState(0x4b2c, 0x4ac7, 0xb9b0, 0x7dbe, 0x2f2, 0xee4a, 0x0, 0x1);
        gbc.writeMem(0x4b2c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4ac7, gbc.sp());
        EXPECT(0x4b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03DE
        gbc.setState(0xc668, 0xb500, 0xf9d0, 0xffac, 0xb425, 0x2bce, 0x0, 0x1);
        gbc.writeMem(0xc668, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb500, gbc.sp());
        EXPECT(0xc66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc668));
        EXPECT(0x62, gbc.readMem(0xc669));
        // CB 62 03DF
        gbc.setState(0x76d5, 0xdf28, 0xebc0, 0x96a6, 0xb404, 0xca91, 0x0, 0x1);
        gbc.writeMem(0x76d5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdf28, gbc.sp());
        EXPECT(0x76d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03E0
        gbc.setState(0x3e31, 0x6516, 0x8210, 0xec1b, 0x69a7, 0xeccf, 0x1, 0x1);
        gbc.writeMem(0x3e31, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6516, gbc.sp());
        EXPECT(0x3e33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03E1
        gbc.setState(0x3ebb, 0x4af4, 0x5f10, 0x89a, 0xbce2, 0x3414, 0x1, 0x0);
        gbc.writeMem(0x3ebb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4af4, gbc.sp());
        EXPECT(0x3ebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03E2
        gbc.setState(0xacc5, 0x96c3, 0xe180, 0x894d, 0x19fc, 0x5361, 0x0, 0x0);
        gbc.writeMem(0xacc5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x96c3, gbc.sp());
        EXPECT(0xacc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc5));
        EXPECT(0x62, gbc.readMem(0xacc6));
        // CB 62 03E3
        gbc.setState(0x2f0c, 0x501e, 0x2560, 0x7d7c, 0x33d6, 0xbccb, 0x1, 0x0);
        gbc.writeMem(0x2f0c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x501e, gbc.sp());
        EXPECT(0x2f0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03E4
        gbc.setState(0x5246, 0x5a33, 0xc6a0, 0xf18f, 0x4b00, 0x1a63, 0x1, 0x0);
        gbc.writeMem(0x5246, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5a33, gbc.sp());
        EXPECT(0x5248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 62 03E5
        gbc.setState(0xfb5, 0xb8f6, 0xf70, 0x9f68, 0x4bbb, 0xd75f, 0x0, 0x0);
        gbc.writeMem(0xfb5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb8f6, gbc.sp());
        EXPECT(0xfb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03E6
        gbc.setState(0x3436, 0xb2a1, 0x9df0, 0x8f57, 0xd004, 0x8753, 0x1, 0x1);
        gbc.writeMem(0x3436, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb2a1, gbc.sp());
        EXPECT(0x3438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 62 03E7
        gbc.setState(0xa19a, 0x623e, 0x96b0, 0x68d, 0xb7f7, 0x9813, 0x0, 0x0);
        gbc.writeMem(0xa19a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x623e, gbc.sp());
        EXPECT(0xa19c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa19a));
        EXPECT(0x62, gbc.readMem(0xa19b));
    }
