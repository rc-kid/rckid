    TEST(gbcemu, opcode_93) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 93 0000
        gbc.setState(0x4f22, 0x56f2, 0x1140, 0x81ee, 0x440c, 0xfc60, 0x1, 0x0);
        gbc.writeMem(0x4f22, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x56f2);
        EXPECT(gbc.pc(), 0x4f23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0001
        gbc.setState(0x79a3, 0x4baf, 0x58b0, 0x676f, 0x3b1f, 0xf7, 0x0, 0x1);
        gbc.writeMem(0x79a3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4baf);
        EXPECT(gbc.pc(), 0x79a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0002
        gbc.setState(0x35cb, 0x25ec, 0xa480, 0xb5e2, 0x36df, 0x8aa9, 0x1, 0x0);
        gbc.writeMem(0x35cb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x25ec);
        EXPECT(gbc.pc(), 0x35cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0003
        gbc.setState(0x7988, 0x2010, 0xe680, 0xaade, 0xff6c, 0x58e, 0x1, 0x1);
        gbc.writeMem(0x7988, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2010);
        EXPECT(gbc.pc(), 0x7989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0004
        gbc.setState(0x22e2, 0xf7f4, 0xc870, 0x6748, 0xf4ab, 0x3264, 0x0, 0x1);
        gbc.writeMem(0x22e2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf7f4);
        EXPECT(gbc.pc(), 0x22e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0005
        gbc.setState(0x4b8c, 0x8c9f, 0x8e90, 0x4f44, 0xc339, 0x8ca3, 0x0, 0x1);
        gbc.writeMem(0x4b8c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8c9f);
        EXPECT(gbc.pc(), 0x4b8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0006
        gbc.setState(0x26f9, 0xeebe, 0xa990, 0x53fb, 0x1817, 0xddae, 0x1, 0x1);
        gbc.writeMem(0x26f9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xeebe);
        EXPECT(gbc.pc(), 0x26fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0007
        gbc.setState(0x4309, 0xaf29, 0x8960, 0x4ded, 0x5afb, 0xaa64, 0x0, 0x1);
        gbc.writeMem(0x4309, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xaf29);
        EXPECT(gbc.pc(), 0x430a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0008
        gbc.setState(0x4d72, 0x3c80, 0x4500, 0xe45f, 0xeecf, 0xd9d, 0x1, 0x1);
        gbc.writeMem(0x4d72, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3c80);
        EXPECT(gbc.pc(), 0x4d73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0009
        gbc.setState(0x76fd, 0x2c18, 0x72c0, 0xd1e8, 0x85f3, 0x3180, 0x0, 0x1);
        gbc.writeMem(0x76fd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2c18);
        EXPECT(gbc.pc(), 0x76fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 000A
        gbc.setState(0xa216, 0x55f7, 0x960, 0xcac4, 0x656a, 0xac4f, 0x1, 0x0);
        gbc.writeMem(0xa216, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x55f7);
        EXPECT(gbc.pc(), 0xa217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa216), 0x93);
        // 93 000B
        gbc.setState(0x8d9, 0xe19, 0x2e0, 0x67f, 0x1f6b, 0x1e93, 0x0, 0x0);
        gbc.writeMem(0x8d9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe19);
        EXPECT(gbc.pc(), 0x8da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 000C
        gbc.setState(0x4a90, 0x6ec9, 0x5b80, 0x8bfd, 0xb450, 0x678b, 0x0, 0x0);
        gbc.writeMem(0x4a90, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6ec9);
        EXPECT(gbc.pc(), 0x4a91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 000D
        gbc.setState(0x1925, 0x100f, 0xc7d0, 0x3826, 0x1fd7, 0xe18d, 0x1, 0x1);
        gbc.writeMem(0x1925, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x100f);
        EXPECT(gbc.pc(), 0x1926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 000E
        gbc.setState(0xc0a4, 0xdae9, 0x6d80, 0x65c2, 0x27ab, 0x4969, 0x1, 0x1);
        gbc.writeMem(0xc0a4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xdae9);
        EXPECT(gbc.pc(), 0xc0a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0a4), 0x93);
        // 93 000F
        gbc.setState(0xe83f, 0x4ccf, 0x6050, 0x734, 0xc6aa, 0x9de, 0x1, 0x1);
        gbc.writeMem(0xe83f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4ccf);
        EXPECT(gbc.pc(), 0xe840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe83f), 0x93);
        // 93 0010
        gbc.setState(0x40b1, 0x6d57, 0x14f0, 0xdeb5, 0x28f4, 0x9491, 0x0, 0x1);
        gbc.writeMem(0x40b1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6d57);
        EXPECT(gbc.pc(), 0x40b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0011
        gbc.setState(0xa88f, 0x7aba, 0xb880, 0x7ace, 0x321f, 0xcc7a, 0x1, 0x0);
        gbc.writeMem(0xa88f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7aba);
        EXPECT(gbc.pc(), 0xa890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa88f), 0x93);
        // 93 0012
        gbc.setState(0x4c6d, 0x43e3, 0x42c0, 0xaf9, 0x76aa, 0xd655, 0x1, 0x0);
        gbc.writeMem(0x4c6d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x43e3);
        EXPECT(gbc.pc(), 0x4c6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0013
        gbc.setState(0xbebd, 0x2e2e, 0xe5f0, 0xa7c0, 0x299, 0xbe3e, 0x1, 0x0);
        gbc.writeMem(0xbebd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2e2e);
        EXPECT(gbc.pc(), 0xbebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbebd), 0x93);
        // 93 0014
        gbc.setState(0x8654, 0x2a45, 0x4070, 0x7fd6, 0xbe62, 0x12e5, 0x1, 0x0);
        gbc.writeMem(0x8654, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2a45);
        EXPECT(gbc.pc(), 0x8655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8654), 0x93);
        // 93 0015
        gbc.setState(0x3bdc, 0x54d3, 0xd450, 0x5db6, 0xdd4e, 0xc2bf, 0x0, 0x0);
        gbc.writeMem(0x3bdc, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x54d3);
        EXPECT(gbc.pc(), 0x3bdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0016
        gbc.setState(0x9486, 0x136c, 0xe580, 0xc142, 0xe60, 0x5f71, 0x1, 0x1);
        gbc.writeMem(0x9486, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x136c);
        EXPECT(gbc.pc(), 0x9487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9486), 0x93);
        // 93 0017
        gbc.setState(0xe31f, 0x92da, 0xff40, 0x6e51, 0x632, 0x41b9, 0x1, 0x0);
        gbc.writeMem(0xe31f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x92da);
        EXPECT(gbc.pc(), 0xe320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe31f), 0x93);
        // 93 0018
        gbc.setState(0xd807, 0xc088, 0x7310, 0xabea, 0x5f41, 0xeaf0, 0x1, 0x0);
        gbc.writeMem(0xd807, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc088);
        EXPECT(gbc.pc(), 0xd808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd807), 0x93);
        // 93 0019
        gbc.setState(0x4a79, 0xaf7b, 0x30a0, 0xf9e2, 0x4c74, 0xe101, 0x1, 0x0);
        gbc.writeMem(0x4a79, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xaf7b);
        EXPECT(gbc.pc(), 0x4a7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 001A
        gbc.setState(0x3789, 0xcdb8, 0xfc90, 0x910e, 0xd694, 0x6d15, 0x0, 0x1);
        gbc.writeMem(0x3789, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xcdb8);
        EXPECT(gbc.pc(), 0x378a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 001C
        gbc.setState(0xa6ad, 0x63d2, 0x4ab0, 0x88e, 0xb8a, 0x3d5f, 0x0, 0x1);
        gbc.writeMem(0xa6ad, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x63d2);
        EXPECT(gbc.pc(), 0xa6ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ad), 0x93);
        // 93 001D
        gbc.setState(0x1019, 0xc54, 0xdbb0, 0x311, 0x19b7, 0x3b73, 0x0, 0x1);
        gbc.writeMem(0x1019, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc54);
        EXPECT(gbc.pc(), 0x101a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 001E
        gbc.setState(0x5d5, 0xfcbf, 0xbf10, 0xd8a5, 0xad8, 0x77aa, 0x1, 0x0);
        gbc.writeMem(0x5d5, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xfcbf);
        EXPECT(gbc.pc(), 0x5d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 001F
        gbc.setState(0xb09d, 0x4eb4, 0x20f0, 0xf5aa, 0x3066, 0xc29, 0x1, 0x0);
        gbc.writeMem(0xb09d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4eb4);
        EXPECT(gbc.pc(), 0xb09e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb09d), 0x93);
        // 93 0020
        gbc.setState(0xe4aa, 0x5e12, 0x8ae0, 0xe534, 0x342, 0xda9b, 0x0, 0x0);
        gbc.writeMem(0xe4aa, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5e12);
        EXPECT(gbc.pc(), 0xe4ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4aa), 0x93);
        // 93 0021
        gbc.setState(0xb5ab, 0x1c66, 0x5250, 0x832a, 0xa430, 0x96b9, 0x1, 0x0);
        gbc.writeMem(0xb5ab, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1c66);
        EXPECT(gbc.pc(), 0xb5ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5ab), 0x93);
        // 93 0022
        gbc.setState(0x213c, 0x2592, 0x75b0, 0xca9c, 0x9cf, 0x3839, 0x0, 0x0);
        gbc.writeMem(0x213c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2592);
        EXPECT(gbc.pc(), 0x213d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0023
        gbc.setState(0x5d41, 0xaed2, 0x1cd0, 0x3944, 0x9ac0, 0x5603, 0x0, 0x1);
        gbc.writeMem(0x5d41, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xaed2);
        EXPECT(gbc.pc(), 0x5d42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0024
        gbc.setState(0x7e33, 0x53c4, 0x4b90, 0xd309, 0x6ee0, 0xdc1, 0x1, 0x0);
        gbc.writeMem(0x7e33, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x53c4);
        EXPECT(gbc.pc(), 0x7e34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0025
        gbc.setState(0x12b2, 0x6bc8, 0x2280, 0x2561, 0x2e01, 0x4dc, 0x1, 0x0);
        gbc.writeMem(0x12b2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6bc8);
        EXPECT(gbc.pc(), 0x12b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0027
        gbc.setState(0x3462, 0x6281, 0x9ae0, 0xb40e, 0xc44c, 0xb23d, 0x1, 0x1);
        gbc.writeMem(0x3462, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6281);
        EXPECT(gbc.pc(), 0x3463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0028
        gbc.setState(0x977a, 0x710f, 0x6060, 0xea66, 0x1920, 0xb077, 0x1, 0x0);
        gbc.writeMem(0x977a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x710f);
        EXPECT(gbc.pc(), 0x977b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x977a), 0x93);
        // 93 0029
        gbc.setState(0x9d30, 0x5dc7, 0x5b50, 0xaafd, 0xf195, 0x983, 0x1, 0x0);
        gbc.writeMem(0x9d30, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5dc7);
        EXPECT(gbc.pc(), 0x9d31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d30), 0x93);
        // 93 002A
        gbc.setState(0x3f8, 0xe35b, 0x5610, 0x5d06, 0x1384, 0xd4b4, 0x0, 0x1);
        gbc.writeMem(0x3f8, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe35b);
        EXPECT(gbc.pc(), 0x3f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 002B
        gbc.setState(0x6307, 0xa387, 0xaf70, 0x66c, 0x38d9, 0x7ddf, 0x0, 0x0);
        gbc.writeMem(0x6307, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa387);
        EXPECT(gbc.pc(), 0x6308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 002C
        gbc.setState(0x6a02, 0xdcb7, 0x8480, 0xac9f, 0x8aa9, 0x2b2f, 0x0, 0x1);
        gbc.writeMem(0x6a02, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xdcb7);
        EXPECT(gbc.pc(), 0x6a03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 002D
        gbc.setState(0xd444, 0x92bc, 0xb120, 0xd492, 0x1348, 0xe91c, 0x0, 0x0);
        gbc.writeMem(0xd444, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x92bc);
        EXPECT(gbc.pc(), 0xd445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd444), 0x93);
        // 93 002E
        gbc.setState(0xdb06, 0x9ac4, 0x88b0, 0x3f21, 0xb749, 0xa898, 0x1, 0x0);
        gbc.writeMem(0xdb06, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9ac4);
        EXPECT(gbc.pc(), 0xdb07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb06), 0x93);
        // 93 002F
        gbc.setState(0xd8bb, 0x4e5b, 0x7530, 0x724b, 0x1a0, 0xa75d, 0x1, 0x0);
        gbc.writeMem(0xd8bb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x4e5b);
        EXPECT(gbc.pc(), 0xd8bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8bb), 0x93);
        // 93 0030
        gbc.setState(0x3a68, 0xa88, 0x690, 0x1257, 0xbcf5, 0xf5fe, 0x0, 0x0);
        gbc.writeMem(0x3a68, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa88);
        EXPECT(gbc.pc(), 0x3a69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0031
        gbc.setState(0xd61d, 0x7d40, 0xf9c0, 0xfc16, 0x8575, 0x271e, 0x1, 0x1);
        gbc.writeMem(0xd61d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7d40);
        EXPECT(gbc.pc(), 0xd61e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd61d), 0x93);
        // 93 0032
        gbc.setState(0x9b48, 0xfa3e, 0x91c0, 0xd756, 0x8f2, 0x620c, 0x0, 0x0);
        gbc.writeMem(0x9b48, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xfa3e);
        EXPECT(gbc.pc(), 0x9b49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b48), 0x93);
        // 93 0033
        gbc.setState(0x1ee6, 0x49a2, 0x5840, 0x18e6, 0x777d, 0xf24a, 0x1, 0x1);
        gbc.writeMem(0x1ee6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x49a2);
        EXPECT(gbc.pc(), 0x1ee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0034
        gbc.setState(0xcda3, 0x4cdf, 0x7370, 0x5d70, 0x7e57, 0x4fa4, 0x0, 0x0);
        gbc.writeMem(0xcda3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4cdf);
        EXPECT(gbc.pc(), 0xcda4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcda3), 0x93);
        // 93 0035
        gbc.setState(0xba15, 0x271d, 0x86d0, 0x11c, 0x460a, 0x363a, 0x0, 0x0);
        gbc.writeMem(0xba15, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x271d);
        EXPECT(gbc.pc(), 0xba16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba15), 0x93);
        // 93 0036
        gbc.setState(0x94c, 0x5bc1, 0xa220, 0x3218, 0x5742, 0x5df1, 0x0, 0x1);
        gbc.writeMem(0x94c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5bc1);
        EXPECT(gbc.pc(), 0x94d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0037
        gbc.setState(0xb430, 0x60ff, 0xb9c0, 0xd589, 0xb0e7, 0x58da, 0x0, 0x1);
        gbc.writeMem(0xb430, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x60ff);
        EXPECT(gbc.pc(), 0xb431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb430), 0x93);
        // 93 0038
        gbc.setState(0x8776, 0x8e41, 0xef10, 0x6175, 0xf563, 0x3538, 0x1, 0x0);
        gbc.writeMem(0x8776, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8e41);
        EXPECT(gbc.pc(), 0x8777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8776), 0x93);
        // 93 0039
        gbc.setState(0x1290, 0x6acd, 0x64b0, 0xcb16, 0x2fec, 0x57c8, 0x1, 0x0);
        gbc.writeMem(0x1290, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6acd);
        EXPECT(gbc.pc(), 0x1291);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 003A
        gbc.setState(0x510e, 0x795a, 0x7db0, 0xa3c0, 0x7e30, 0x77af, 0x0, 0x1);
        gbc.writeMem(0x510e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x795a);
        EXPECT(gbc.pc(), 0x510f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 003B
        gbc.setState(0x2f27, 0x39c1, 0x6f30, 0xf8fc, 0x9368, 0xfdc6, 0x1, 0x0);
        gbc.writeMem(0x2f27, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x39c1);
        EXPECT(gbc.pc(), 0x2f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 003C
        gbc.setState(0xd258, 0x3118, 0x23f0, 0x651a, 0xcdd8, 0xf462, 0x1, 0x0);
        gbc.writeMem(0xd258, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3118);
        EXPECT(gbc.pc(), 0xd259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd258), 0x93);
        // 93 003E
        gbc.setState(0x57b5, 0xf98d, 0xed70, 0x227e, 0x838, 0x207b, 0x0, 0x1);
        gbc.writeMem(0x57b5, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf98d);
        EXPECT(gbc.pc(), 0x57b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0040
        gbc.setState(0xa1aa, 0x41ce, 0xfe90, 0x6098, 0x32d4, 0x893f, 0x0, 0x0);
        gbc.writeMem(0xa1aa, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x41ce);
        EXPECT(gbc.pc(), 0xa1ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1aa), 0x93);
        // 93 0041
        gbc.setState(0x3271, 0xc100, 0xca0, 0xae7a, 0x7dcf, 0x42cc, 0x0, 0x1);
        gbc.writeMem(0x3271, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc100);
        EXPECT(gbc.pc(), 0x3272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0042
        gbc.setState(0x6c11, 0xb9b5, 0x4910, 0xb1e5, 0x427, 0x767, 0x1, 0x1);
        gbc.writeMem(0x6c11, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb9b5);
        EXPECT(gbc.pc(), 0x6c12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0043
        gbc.setState(0xe337, 0xec8b, 0x2910, 0x9dbe, 0xea5d, 0x4eb3, 0x1, 0x0);
        gbc.writeMem(0xe337, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xec8b);
        EXPECT(gbc.pc(), 0xe338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe337), 0x93);
        // 93 0044
        gbc.setState(0xeb66, 0x6cfe, 0x71a0, 0x6650, 0x146f, 0xf898, 0x0, 0x1);
        gbc.writeMem(0xeb66, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6cfe);
        EXPECT(gbc.pc(), 0xeb67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb66), 0x93);
        // 93 0045
        gbc.setState(0x174e, 0x672b, 0x16b0, 0xad1a, 0xb9d7, 0x8989, 0x1, 0x1);
        gbc.writeMem(0x174e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x672b);
        EXPECT(gbc.pc(), 0x174f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0046
        gbc.setState(0x1a52, 0x1289, 0x4770, 0xfa8a, 0x2ea9, 0x88ad, 0x0, 0x1);
        gbc.writeMem(0x1a52, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1289);
        EXPECT(gbc.pc(), 0x1a53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0048
        gbc.setState(0x3a6a, 0x3264, 0xc9d0, 0xc4bc, 0x108b, 0x9b95, 0x0, 0x1);
        gbc.writeMem(0x3a6a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3264);
        EXPECT(gbc.pc(), 0x3a6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0049
        gbc.setState(0x58ea, 0x2b7b, 0x68d0, 0x5501, 0xf5d, 0xda58, 0x0, 0x1);
        gbc.writeMem(0x58ea, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2b7b);
        EXPECT(gbc.pc(), 0x58eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 004A
        gbc.setState(0x959, 0xfe99, 0x220, 0x36f1, 0xd2c4, 0x351d, 0x0, 0x1);
        gbc.writeMem(0x959, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfe99);
        EXPECT(gbc.pc(), 0x95a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 004B
        gbc.setState(0xd7ea, 0x9585, 0xc030, 0x189a, 0x80c7, 0x32e3, 0x1, 0x0);
        gbc.writeMem(0xd7ea, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9585);
        EXPECT(gbc.pc(), 0xd7eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ea), 0x93);
        // 93 004C
        gbc.setState(0x100, 0x5526, 0x3c10, 0x194f, 0x5ddc, 0xcbfc, 0x1, 0x1);
        gbc.writeMem(0x100, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x5526);
        EXPECT(gbc.pc(), 0x101);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 004D
        gbc.setState(0x9318, 0x4457, 0xb700, 0x8788, 0xd16d, 0x7c0f, 0x1, 0x0);
        gbc.writeMem(0x9318, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4457);
        EXPECT(gbc.pc(), 0x9319);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9318), 0x93);
        // 93 004E
        gbc.setState(0x6f46, 0x3eee, 0x6ac0, 0x5d69, 0x28d8, 0xa4cf, 0x1, 0x0);
        gbc.writeMem(0x6f46, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3eee);
        EXPECT(gbc.pc(), 0x6f47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 004F
        gbc.setState(0x7b02, 0xa845, 0x8460, 0x9deb, 0x13e, 0xe2e0, 0x1, 0x0);
        gbc.writeMem(0x7b02, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa845);
        EXPECT(gbc.pc(), 0x7b03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0050
        gbc.setState(0x5e13, 0x4697, 0x71e0, 0xb8dc, 0x7a04, 0x496a, 0x0, 0x1);
        gbc.writeMem(0x5e13, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4697);
        EXPECT(gbc.pc(), 0x5e14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0051
        gbc.setState(0xd38c, 0x1a77, 0xb160, 0xcda9, 0x8aa9, 0xb7fb, 0x0, 0x1);
        gbc.writeMem(0xd38c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1a77);
        EXPECT(gbc.pc(), 0xd38d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd38c), 0x93);
        // 93 0052
        gbc.setState(0x8e50, 0xa731, 0xcc0, 0xb7ff, 0xfd1a, 0xabce, 0x0, 0x1);
        gbc.writeMem(0x8e50, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa731);
        EXPECT(gbc.pc(), 0x8e51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e50), 0x93);
        // 93 0053
        gbc.setState(0x9644, 0x520a, 0x3070, 0x78c6, 0x7ab3, 0x85ab, 0x1, 0x1);
        gbc.writeMem(0x9644, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x520a);
        EXPECT(gbc.pc(), 0x9645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9644), 0x93);
        // 93 0054
        gbc.setState(0xcfc0, 0xdecf, 0x3f30, 0xac1e, 0xe891, 0x9fde, 0x0, 0x0);
        gbc.writeMem(0xcfc0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xdecf);
        EXPECT(gbc.pc(), 0xcfc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfc0), 0x93);
        // 93 0055
        gbc.setState(0x387c, 0x2cd6, 0x3b20, 0x692a, 0xbb89, 0xe5, 0x0, 0x1);
        gbc.writeMem(0x387c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2cd6);
        EXPECT(gbc.pc(), 0x387d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0056
        gbc.setState(0x606f, 0x8741, 0xa090, 0x3344, 0x990b, 0x8e7b, 0x0, 0x1);
        gbc.writeMem(0x606f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8741);
        EXPECT(gbc.pc(), 0x6070);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0057
        gbc.setState(0xe359, 0x2a4e, 0x8d80, 0x90e6, 0x4da5, 0x2d2e, 0x1, 0x0);
        gbc.writeMem(0xe359, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2a4e);
        EXPECT(gbc.pc(), 0xe35a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe359), 0x93);
        // 93 0058
        gbc.setState(0x9f3d, 0x983a, 0xbef0, 0x8871, 0xffae, 0x24a9, 0x1, 0x0);
        gbc.writeMem(0x9f3d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x983a);
        EXPECT(gbc.pc(), 0x9f3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f3d), 0x93);
        // 93 0059
        gbc.setState(0x3759, 0xabad, 0x49c0, 0xad38, 0xae6e, 0xdddc, 0x0, 0x0);
        gbc.writeMem(0x3759, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xabad);
        EXPECT(gbc.pc(), 0x375a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 005A
        gbc.setState(0x370f, 0x2ffc, 0xe200, 0xc7d0, 0xfd2a, 0xee90, 0x1, 0x0);
        gbc.writeMem(0x370f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2ffc);
        EXPECT(gbc.pc(), 0x3710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 005B
        gbc.setState(0x8c86, 0x5ab, 0xf2d0, 0xb2a2, 0xccbd, 0xef14, 0x1, 0x1);
        gbc.writeMem(0x8c86, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5ab);
        EXPECT(gbc.pc(), 0x8c87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c86), 0x93);
        // 93 005C
        gbc.setState(0x31be, 0x10fc, 0xae20, 0xad1, 0x68bc, 0x91f2, 0x1, 0x1);
        gbc.writeMem(0x31be, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x10fc);
        EXPECT(gbc.pc(), 0x31bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 005D
        gbc.setState(0x11a, 0x8a61, 0x6f30, 0xa359, 0x52e3, 0xe3c9, 0x0, 0x1);
        gbc.writeMem(0x11a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8a61);
        EXPECT(gbc.pc(), 0x11b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 005E
        gbc.setState(0x77f6, 0x587, 0xcdf0, 0xcfca, 0xf8b, 0x8859, 0x0, 0x0);
        gbc.writeMem(0x77f6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x587);
        EXPECT(gbc.pc(), 0x77f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 005F
        gbc.setState(0x360, 0x5b7c, 0xd150, 0xf9c, 0xeda3, 0x48ce, 0x1, 0x1);
        gbc.writeMem(0x360, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5b7c);
        EXPECT(gbc.pc(), 0x361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0060
        gbc.setState(0x9cf7, 0x5c5, 0x9720, 0x1f76, 0x6abc, 0x5c65, 0x0, 0x0);
        gbc.writeMem(0x9cf7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5c5);
        EXPECT(gbc.pc(), 0x9cf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cf7), 0x93);
        // 93 0061
        gbc.setState(0x4010, 0x16b7, 0x4c40, 0x1ae8, 0xb32d, 0x9a0e, 0x0, 0x0);
        gbc.writeMem(0x4010, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x16b7);
        EXPECT(gbc.pc(), 0x4011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0062
        gbc.setState(0xd97b, 0xffa9, 0x4070, 0x3c8, 0x9157, 0x6029, 0x0, 0x1);
        gbc.writeMem(0xd97b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xffa9);
        EXPECT(gbc.pc(), 0xd97c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd97b), 0x93);
        // 93 0063
        gbc.setState(0x4617, 0xe5d6, 0xc900, 0x6507, 0x40ec, 0x863d, 0x1, 0x0);
        gbc.writeMem(0x4617, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe5d6);
        EXPECT(gbc.pc(), 0x4618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0064
        gbc.setState(0x30f4, 0x475, 0x170, 0xfa64, 0x49fd, 0x2c76, 0x0, 0x0);
        gbc.writeMem(0x30f4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x475);
        EXPECT(gbc.pc(), 0x30f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0065
        gbc.setState(0x6024, 0xf600, 0x47b0, 0xdafd, 0x2632, 0x28a1, 0x0, 0x1);
        gbc.writeMem(0x6024, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf600);
        EXPECT(gbc.pc(), 0x6025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0066
        gbc.setState(0x501f, 0x2c82, 0xa300, 0x7b04, 0x4626, 0x537f, 0x0, 0x0);
        gbc.writeMem(0x501f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2c82);
        EXPECT(gbc.pc(), 0x5020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0067
        gbc.setState(0xbdd0, 0x3caa, 0x7e0, 0xd5b4, 0xe5fc, 0xc4f7, 0x0, 0x0);
        gbc.writeMem(0xbdd0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3caa);
        EXPECT(gbc.pc(), 0xbdd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdd0), 0x93);
        // 93 0068
        gbc.setState(0x8ae7, 0xc9e2, 0x1ff0, 0x955a, 0xfc62, 0xf4fe, 0x1, 0x1);
        gbc.writeMem(0x8ae7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc9e2);
        EXPECT(gbc.pc(), 0x8ae8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae7), 0x93);
        // 93 0069
        gbc.setState(0x384a, 0x1228, 0x1610, 0xe41a, 0x543, 0x4f4a, 0x0, 0x1);
        gbc.writeMem(0x384a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1228);
        EXPECT(gbc.pc(), 0x384b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 006A
        gbc.setState(0x6171, 0xaca0, 0xf090, 0x9fa2, 0xd399, 0x7be7, 0x0, 0x0);
        gbc.writeMem(0x6171, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xaca0);
        EXPECT(gbc.pc(), 0x6172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 006C
        gbc.setState(0xa3c1, 0x5f11, 0xabc0, 0x4481, 0x7f1, 0xc9ce, 0x0, 0x0);
        gbc.writeMem(0xa3c1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5f11);
        EXPECT(gbc.pc(), 0xa3c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c1), 0x93);
        // 93 006D
        gbc.setState(0x36e6, 0x56ea, 0xfc20, 0x6942, 0x9315, 0xbc52, 0x0, 0x1);
        gbc.writeMem(0x36e6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x56ea);
        EXPECT(gbc.pc(), 0x36e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 006E
        gbc.setState(0x2420, 0x3014, 0x3390, 0xa1dc, 0x74f2, 0xa449, 0x0, 0x1);
        gbc.writeMem(0x2420, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3014);
        EXPECT(gbc.pc(), 0x2421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 006F
        gbc.setState(0x9a32, 0x8620, 0x2c30, 0xd736, 0x7736, 0x5f82, 0x1, 0x0);
        gbc.writeMem(0x9a32, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8620);
        EXPECT(gbc.pc(), 0x9a33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a32), 0x93);
        // 93 0070
        gbc.setState(0xe734, 0xc0ec, 0x7fc0, 0x9a4f, 0xce58, 0xda1c, 0x1, 0x1);
        gbc.writeMem(0xe734, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc0ec);
        EXPECT(gbc.pc(), 0xe735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe734), 0x93);
        // 93 0072
        gbc.setState(0x2dc7, 0xaadd, 0x3760, 0xc23c, 0x97aa, 0xdca0, 0x0, 0x0);
        gbc.writeMem(0x2dc7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xaadd);
        EXPECT(gbc.pc(), 0x2dc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0073
        gbc.setState(0x9d58, 0x3d37, 0x5970, 0x9f61, 0xb7b3, 0x5e4f, 0x0, 0x1);
        gbc.writeMem(0x9d58, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x3d37);
        EXPECT(gbc.pc(), 0x9d59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d58), 0x93);
        // 93 0074
        gbc.setState(0xe9ae, 0x2e5f, 0x54a0, 0x6c7b, 0x4391, 0xebf6, 0x1, 0x1);
        gbc.writeMem(0xe9ae, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2e5f);
        EXPECT(gbc.pc(), 0xe9af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ae), 0x93);
        // 93 0075
        gbc.setState(0xa090, 0x7f88, 0x1980, 0x4854, 0x4ae2, 0xf347, 0x1, 0x0);
        gbc.writeMem(0xa090, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7f88);
        EXPECT(gbc.pc(), 0xa091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa090), 0x93);
        // 93 0076
        gbc.setState(0x21fe, 0xdef6, 0x200, 0xbf22, 0xdc47, 0xc714, 0x1, 0x1);
        gbc.writeMem(0x21fe, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xdef6);
        EXPECT(gbc.pc(), 0x21ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0077
        gbc.setState(0xaf93, 0xc284, 0x53a0, 0xa8cd, 0x9439, 0x9ff5, 0x1, 0x1);
        gbc.writeMem(0xaf93, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc284);
        EXPECT(gbc.pc(), 0xaf94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf93), 0x93);
        // 93 0078
        gbc.setState(0x6e08, 0x83b5, 0x4a50, 0x8e4, 0xc949, 0xcd1a, 0x1, 0x0);
        gbc.writeMem(0x6e08, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x83b5);
        EXPECT(gbc.pc(), 0x6e09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0079
        gbc.setState(0xc467, 0xaba7, 0xfb20, 0x8cdd, 0x34a8, 0xdc93, 0x1, 0x1);
        gbc.writeMem(0xc467, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xaba7);
        EXPECT(gbc.pc(), 0xc468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc467), 0x93);
        // 93 007A
        gbc.setState(0x193e, 0x2727, 0x1980, 0xd76d, 0x2ff9, 0x3aac, 0x1, 0x0);
        gbc.writeMem(0x193e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2727);
        EXPECT(gbc.pc(), 0x193f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 007B
        gbc.setState(0x2aaa, 0x648c, 0x98f0, 0xe7bd, 0x12e1, 0x880a, 0x0, 0x0);
        gbc.writeMem(0x2aaa, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x648c);
        EXPECT(gbc.pc(), 0x2aab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 007D
        gbc.setState(0x4b4a, 0x1ad7, 0x7d80, 0x19e0, 0x7ac8, 0x7469, 0x0, 0x1);
        gbc.writeMem(0x4b4a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1ad7);
        EXPECT(gbc.pc(), 0x4b4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 007E
        gbc.setState(0x941b, 0x77af, 0xa4d0, 0xdb7d, 0xe369, 0x77d, 0x1, 0x1);
        gbc.writeMem(0x941b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x77af);
        EXPECT(gbc.pc(), 0x941c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x941b), 0x93);
        // 93 007F
        gbc.setState(0x2d6e, 0x99c2, 0xf7c0, 0x7e8c, 0xc70e, 0xa3e3, 0x1, 0x1);
        gbc.writeMem(0x2d6e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x99c2);
        EXPECT(gbc.pc(), 0x2d6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0080
        gbc.setState(0x9549, 0x8e40, 0x6f20, 0x9cd1, 0xc217, 0x1f81, 0x0, 0x0);
        gbc.writeMem(0x9549, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8e40);
        EXPECT(gbc.pc(), 0x954a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9549), 0x93);
        // 93 0081
        gbc.setState(0x9eab, 0x90d8, 0xd6d0, 0x153c, 0x5598, 0x81a4, 0x0, 0x1);
        gbc.writeMem(0x9eab, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x90d8);
        EXPECT(gbc.pc(), 0x9eac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eab), 0x93);
        // 93 0082
        gbc.setState(0xc0f2, 0xadcf, 0x67f0, 0xb2c, 0xbd6a, 0x6ecb, 0x0, 0x0);
        gbc.writeMem(0xc0f2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xadcf);
        EXPECT(gbc.pc(), 0xc0f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0f2), 0x93);
        // 93 0083
        gbc.setState(0x55da, 0x2f24, 0x11d0, 0xc6bb, 0x6b34, 0x9807, 0x1, 0x0);
        gbc.writeMem(0x55da, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2f24);
        EXPECT(gbc.pc(), 0x55db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0084
        gbc.setState(0x6c8a, 0x56a6, 0xdd40, 0x5b00, 0xe93c, 0x5777, 0x1, 0x1);
        gbc.writeMem(0x6c8a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x56a6);
        EXPECT(gbc.pc(), 0x6c8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0085
        gbc.setState(0x615d, 0x8f28, 0x5400, 0x5baf, 0x63b0, 0x93f8, 0x0, 0x0);
        gbc.writeMem(0x615d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8f28);
        EXPECT(gbc.pc(), 0x615e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0086
        gbc.setState(0x778a, 0xc699, 0x8220, 0x3a21, 0x5a7d, 0xa09c, 0x1, 0x1);
        gbc.writeMem(0x778a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc699);
        EXPECT(gbc.pc(), 0x778b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0087
        gbc.setState(0xe84c, 0xf74e, 0x95a0, 0x714c, 0xa93c, 0x18f1, 0x1, 0x0);
        gbc.writeMem(0xe84c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf74e);
        EXPECT(gbc.pc(), 0xe84d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe84c), 0x93);
        // 93 0088
        gbc.setState(0xdf0d, 0xa12e, 0x6be0, 0x1666, 0xb536, 0x8360, 0x1, 0x1);
        gbc.writeMem(0xdf0d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa12e);
        EXPECT(gbc.pc(), 0xdf0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf0d), 0x93);
        // 93 0089
        gbc.setState(0x295d, 0x619e, 0x6030, 0x8434, 0x637c, 0xd613, 0x0, 0x1);
        gbc.writeMem(0x295d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x619e);
        EXPECT(gbc.pc(), 0x295e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 008A
        gbc.setState(0x2995, 0x3ef0, 0x8020, 0xac2c, 0xf5fc, 0x68b3, 0x0, 0x0);
        gbc.writeMem(0x2995, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x3ef0);
        EXPECT(gbc.pc(), 0x2996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 008B
        gbc.setState(0x570d, 0x7340, 0xe1b0, 0x35c5, 0xe49d, 0x7366, 0x1, 0x1);
        gbc.writeMem(0x570d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7340);
        EXPECT(gbc.pc(), 0x570e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 008C
        gbc.setState(0x51b0, 0x889e, 0xa6c0, 0x1f47, 0x2ca7, 0x596f, 0x1, 0x1);
        gbc.writeMem(0x51b0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x889e);
        EXPECT(gbc.pc(), 0x51b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 008D
        gbc.setState(0x918c, 0xff12, 0x3f20, 0x7fc5, 0xc3b6, 0x52e1, 0x0, 0x0);
        gbc.writeMem(0x918c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xff12);
        EXPECT(gbc.pc(), 0x918d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x918c), 0x93);
        // 93 008E
        gbc.setState(0xdfe, 0x553, 0x2ca0, 0x6609, 0xeb93, 0xfd76, 0x1, 0x0);
        gbc.writeMem(0xdfe, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x553);
        EXPECT(gbc.pc(), 0xdff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 008F
        gbc.setState(0xb01b, 0x3657, 0xc410, 0x1abf, 0x8129, 0xa3ee, 0x1, 0x1);
        gbc.writeMem(0xb01b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3657);
        EXPECT(gbc.pc(), 0xb01c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb01b), 0x93);
        // 93 0090
        gbc.setState(0xa0a7, 0xd456, 0xc650, 0x91ee, 0x69d4, 0xc955, 0x0, 0x1);
        gbc.writeMem(0xa0a7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd456);
        EXPECT(gbc.pc(), 0xa0a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0a7), 0x93);
        // 93 0091
        gbc.setState(0x397e, 0x7765, 0x24b0, 0x45a9, 0xc0d9, 0x7622, 0x0, 0x0);
        gbc.writeMem(0x397e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7765);
        EXPECT(gbc.pc(), 0x397f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0092
        gbc.setState(0xa6ce, 0x32df, 0x6310, 0x9525, 0x5ead, 0x5d8b, 0x1, 0x1);
        gbc.writeMem(0xa6ce, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x32df);
        EXPECT(gbc.pc(), 0xa6cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ce), 0x93);
        // 93 0093
        gbc.setState(0xc97b, 0xbba6, 0xa510, 0x8466, 0xc360, 0x2d19, 0x1, 0x0);
        gbc.writeMem(0xc97b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xbba6);
        EXPECT(gbc.pc(), 0xc97c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc97b), 0x93);
        // 93 0094
        gbc.setState(0xd68d, 0x4bf2, 0x290, 0x4d1a, 0xc55, 0x6333, 0x1, 0x0);
        gbc.writeMem(0xd68d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4bf2);
        EXPECT(gbc.pc(), 0xd68e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd68d), 0x93);
        // 93 0095
        gbc.setState(0xd75b, 0x3d96, 0x8be0, 0x730, 0x340c, 0xb4f, 0x0, 0x1);
        gbc.writeMem(0xd75b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x3d96);
        EXPECT(gbc.pc(), 0xd75c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd75b), 0x93);
        // 93 0096
        gbc.setState(0x9bfe, 0x3411, 0xe920, 0xb712, 0xfb5e, 0x137f, 0x1, 0x0);
        gbc.writeMem(0x9bfe, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3411);
        EXPECT(gbc.pc(), 0x9bff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bfe), 0x93);
        // 93 0097
        gbc.setState(0x5fe0, 0x597f, 0x2a10, 0x4a50, 0xc766, 0xc963, 0x1, 0x0);
        gbc.writeMem(0x5fe0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x597f);
        EXPECT(gbc.pc(), 0x5fe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0098
        gbc.setState(0x81ea, 0x51b, 0xa210, 0x175f, 0xd910, 0x7976, 0x1, 0x0);
        gbc.writeMem(0x81ea, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x51b);
        EXPECT(gbc.pc(), 0x81eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ea), 0x93);
        // 93 0099
        gbc.setState(0xe2f3, 0xd369, 0x5b00, 0x4d3b, 0x6705, 0xd344, 0x0, 0x0);
        gbc.writeMem(0xe2f3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd369);
        EXPECT(gbc.pc(), 0xe2f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2f3), 0x93);
        // 93 009A
        gbc.setState(0xbbdb, 0xef83, 0xfe10, 0xe4b8, 0xda3a, 0xe0ab, 0x0, 0x1);
        gbc.writeMem(0xbbdb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xef83);
        EXPECT(gbc.pc(), 0xbbdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbdb), 0x93);
        // 93 009B
        gbc.setState(0x13e9, 0x185e, 0x2270, 0x598f, 0x7eed, 0x1248, 0x1, 0x0);
        gbc.writeMem(0x13e9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x185e);
        EXPECT(gbc.pc(), 0x13ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 009C
        gbc.setState(0x75de, 0x516d, 0x49b0, 0x3756, 0x1b08, 0x2406, 0x1, 0x0);
        gbc.writeMem(0x75de, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x516d);
        EXPECT(gbc.pc(), 0x75df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 009D
        gbc.setState(0xcd27, 0x8b32, 0x8610, 0xc33f, 0x8df3, 0x6104, 0x0, 0x1);
        gbc.writeMem(0xcd27, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8b32);
        EXPECT(gbc.pc(), 0xcd28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd27), 0x93);
        // 93 009E
        gbc.setState(0x94fe, 0xed4e, 0xa650, 0xf2c3, 0x402c, 0xdba1, 0x1, 0x0);
        gbc.writeMem(0x94fe, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xed4e);
        EXPECT(gbc.pc(), 0x94ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94fe), 0x93);
        // 93 009F
        gbc.setState(0x4a33, 0x2668, 0x2240, 0x38da, 0x4d3b, 0x3f84, 0x1, 0x0);
        gbc.writeMem(0x4a33, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2668);
        EXPECT(gbc.pc(), 0x4a34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 00A0
        gbc.setState(0x1117, 0xeeb7, 0xdc10, 0xa870, 0x5b58, 0xf651, 0x1, 0x0);
        gbc.writeMem(0x1117, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xeeb7);
        EXPECT(gbc.pc(), 0x1118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 00A2
        gbc.setState(0xe38e, 0x921e, 0x4a40, 0x9d39, 0xbe88, 0x3d05, 0x1, 0x0);
        gbc.writeMem(0xe38e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x921e);
        EXPECT(gbc.pc(), 0xe38f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe38e), 0x93);
        // 93 00A3
        gbc.setState(0x682e, 0xc2a3, 0xfd10, 0xfb74, 0xa9d9, 0x9520, 0x1, 0x1);
        gbc.writeMem(0x682e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc2a3);
        EXPECT(gbc.pc(), 0x682f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 00A4
        gbc.setState(0x7a12, 0x1d9b, 0xa220, 0xd22e, 0x34eb, 0xeb9, 0x0, 0x1);
        gbc.writeMem(0x7a12, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1d9b);
        EXPECT(gbc.pc(), 0x7a13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 00A5
        gbc.setState(0x4da6, 0x1506, 0xc810, 0xb448, 0x399c, 0xc97c, 0x0, 0x1);
        gbc.writeMem(0x4da6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1506);
        EXPECT(gbc.pc(), 0x4da7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 00A6
        gbc.setState(0x957f, 0x8386, 0x37a0, 0xee43, 0xc1e5, 0x9f37, 0x0, 0x1);
        gbc.writeMem(0x957f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8386);
        EXPECT(gbc.pc(), 0x9580);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x957f), 0x93);
        // 93 00A7
        gbc.setState(0x6702, 0x7e47, 0xd2c0, 0x2c67, 0x7482, 0xc45d, 0x1, 0x1);
        gbc.writeMem(0x6702, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7e47);
        EXPECT(gbc.pc(), 0x6703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 00A8
        gbc.setState(0x20a7, 0xd66e, 0x2030, 0x9671, 0xd9a2, 0x94ff, 0x1, 0x1);
        gbc.writeMem(0x20a7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd66e);
        EXPECT(gbc.pc(), 0x20a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 00AA
        gbc.setState(0x9702, 0xf024, 0xc7a0, 0x7d41, 0xf2f2, 0x522e, 0x1, 0x0);
        gbc.writeMem(0x9702, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf024);
        EXPECT(gbc.pc(), 0x9703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9702), 0x93);
        // 93 00AB
        gbc.setState(0x1a1a, 0x40f, 0x4e60, 0x6a0d, 0xc886, 0x2631, 0x1, 0x1);
        gbc.writeMem(0x1a1a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x40f);
        EXPECT(gbc.pc(), 0x1a1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 00AC
        gbc.setState(0xbe39, 0x39c1, 0x37d0, 0xb0ac, 0x4124, 0x8f65, 0x0, 0x0);
        gbc.writeMem(0xbe39, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x39c1);
        EXPECT(gbc.pc(), 0xbe3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe39), 0x93);
        // 93 00AD
        gbc.setState(0xbe13, 0xa3, 0x2f40, 0xbc7a, 0xda01, 0x2c06, 0x0, 0x1);
        gbc.writeMem(0xbe13, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa3);
        EXPECT(gbc.pc(), 0xbe14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe13), 0x93);
        // 93 00AE
        gbc.setState(0x5f27, 0x92da, 0xf50, 0x4329, 0x407c, 0x12e, 0x1, 0x0);
        gbc.writeMem(0x5f27, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x92da);
        EXPECT(gbc.pc(), 0x5f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 00AF
        gbc.setState(0x6ec9, 0xb7be, 0x5c80, 0x9772, 0xa3e7, 0xce04, 0x1, 0x0);
        gbc.writeMem(0x6ec9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb7be);
        EXPECT(gbc.pc(), 0x6eca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 00B0
        gbc.setState(0x4494, 0xd828, 0xa6f0, 0xdc16, 0xb0eb, 0xc794, 0x0, 0x0);
        gbc.writeMem(0x4494, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd828);
        EXPECT(gbc.pc(), 0x4495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 00B1
        gbc.setState(0x239a, 0xaf75, 0xe800, 0x1e46, 0x16f2, 0x83b1, 0x0, 0x1);
        gbc.writeMem(0x239a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xaf75);
        EXPECT(gbc.pc(), 0x239b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 00B2
        gbc.setState(0xb6bd, 0x3ec5, 0x710, 0xb880, 0xc17, 0x8d22, 0x0, 0x0);
        gbc.writeMem(0xb6bd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3ec5);
        EXPECT(gbc.pc(), 0xb6be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6bd), 0x93);
        // 93 00B3
        gbc.setState(0xf88, 0x5226, 0x3ef0, 0xe54c, 0x4c3d, 0x4955, 0x0, 0x0);
        gbc.writeMem(0xf88, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5226);
        EXPECT(gbc.pc(), 0xf89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 00B4
        gbc.setState(0x7434, 0xb66d, 0x3260, 0x74d0, 0xa6ad, 0x9eed, 0x1, 0x0);
        gbc.writeMem(0x7434, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb66d);
        EXPECT(gbc.pc(), 0x7435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 00B5
        gbc.setState(0x9cea, 0x43a2, 0x1850, 0xb2c6, 0x8ded, 0xb9d3, 0x0, 0x1);
        gbc.writeMem(0x9cea, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x43a2);
        EXPECT(gbc.pc(), 0x9ceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cea), 0x93);
        // 93 00B7
        gbc.setState(0x30d3, 0x9b6e, 0xcca0, 0x89f, 0x2ecb, 0x8421, 0x1, 0x0);
        gbc.writeMem(0x30d3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9b6e);
        EXPECT(gbc.pc(), 0x30d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 00B8
        gbc.setState(0x6480, 0x373, 0x12f0, 0x3afd, 0x7515, 0x8600, 0x1, 0x0);
        gbc.writeMem(0x6480, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x373);
        EXPECT(gbc.pc(), 0x6481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 00B9
        gbc.setState(0x6f83, 0xa20d, 0x85f0, 0x888d, 0xaf96, 0x5250, 0x0, 0x0);
        gbc.writeMem(0x6f83, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa20d);
        EXPECT(gbc.pc(), 0x6f84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 00BA
        gbc.setState(0xd57e, 0xf89d, 0x1eb0, 0xc848, 0x1489, 0x6ab1, 0x1, 0x0);
        gbc.writeMem(0xd57e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf89d);
        EXPECT(gbc.pc(), 0xd57f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd57e), 0x93);
        // 93 00BB
        gbc.setState(0x995a, 0x2f4, 0x87a0, 0x24f0, 0x7af1, 0x60f4, 0x1, 0x1);
        gbc.writeMem(0x995a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2f4);
        EXPECT(gbc.pc(), 0x995b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x995a), 0x93);
        // 93 00BC
        gbc.setState(0x24f5, 0xdfb0, 0x21f0, 0xa48c, 0x9c60, 0xe8a4, 0x0, 0x0);
        gbc.writeMem(0x24f5, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xdfb0);
        EXPECT(gbc.pc(), 0x24f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 00BD
        gbc.setState(0xd26f, 0xd85a, 0x1a40, 0x6e6f, 0x8d72, 0xae5e, 0x1, 0x1);
        gbc.writeMem(0xd26f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd85a);
        EXPECT(gbc.pc(), 0xd270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd26f), 0x93);
        // 93 00BE
        gbc.setState(0x5f90, 0x186d, 0xa3d0, 0x4494, 0x48dc, 0xadc7, 0x0, 0x0);
        gbc.writeMem(0x5f90, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x186d);
        EXPECT(gbc.pc(), 0x5f91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 00BF
        gbc.setState(0x8943, 0x31ba, 0x1dc0, 0xbb7b, 0x8c3f, 0x8bba, 0x1, 0x0);
        gbc.writeMem(0x8943, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x31ba);
        EXPECT(gbc.pc(), 0x8944);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8943), 0x93);
        // 93 00C0
        gbc.setState(0x8809, 0x9952, 0x2e80, 0x159d, 0x7301, 0xb299, 0x1, 0x1);
        gbc.writeMem(0x8809, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x9952);
        EXPECT(gbc.pc(), 0x880a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8809), 0x93);
        // 93 00C1
        gbc.setState(0x865e, 0xbaa1, 0x1d60, 0xc55d, 0xc7a9, 0x2367, 0x1, 0x1);
        gbc.writeMem(0x865e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbaa1);
        EXPECT(gbc.pc(), 0x865f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x865e), 0x93);
        // 93 00C2
        gbc.setState(0xac57, 0x14a2, 0x780, 0xd629, 0xa0c6, 0xe739, 0x0, 0x1);
        gbc.writeMem(0xac57, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x14a2);
        EXPECT(gbc.pc(), 0xac58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac57), 0x93);
        // 93 00C3
        gbc.setState(0xadf3, 0xa413, 0xf90, 0x5c6c, 0x7fb8, 0x6152, 0x0, 0x0);
        gbc.writeMem(0xadf3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa413);
        EXPECT(gbc.pc(), 0xadf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf3), 0x93);
        // 93 00C4
        gbc.setState(0xdb58, 0x2156, 0xda10, 0xb74, 0x1a0e, 0xf59f, 0x1, 0x0);
        gbc.writeMem(0xdb58, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2156);
        EXPECT(gbc.pc(), 0xdb59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb58), 0x93);
        // 93 00C5
        gbc.setState(0xc0bf, 0x8e3d, 0xfb30, 0x110a, 0x31af, 0x47ea, 0x1, 0x1);
        gbc.writeMem(0xc0bf, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8e3d);
        EXPECT(gbc.pc(), 0xc0c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0bf), 0x93);
        // 93 00C6
        gbc.setState(0xb444, 0x6a9, 0xcea0, 0x98b1, 0xac0c, 0xe131, 0x0, 0x1);
        gbc.writeMem(0xb444, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6a9);
        EXPECT(gbc.pc(), 0xb445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb444), 0x93);
        // 93 00C7
        gbc.setState(0xffe, 0x42c, 0x22c0, 0x3338, 0x4cf8, 0x9d38, 0x1, 0x0);
        gbc.writeMem(0xffe, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x42c);
        EXPECT(gbc.pc(), 0xfff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 00C8
        gbc.setState(0xd33f, 0x424e, 0x9c00, 0xf8db, 0xa513, 0x842e, 0x0, 0x0);
        gbc.writeMem(0xd33f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x424e);
        EXPECT(gbc.pc(), 0xd340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd33f), 0x93);
        // 93 00C9
        gbc.setState(0x38be, 0x46ce, 0x5550, 0x1ff1, 0xa33c, 0x411c, 0x0, 0x0);
        gbc.writeMem(0x38be, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x46ce);
        EXPECT(gbc.pc(), 0x38bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 00CA
        gbc.setState(0xc6ef, 0x957a, 0xb860, 0x5ff1, 0xed86, 0xcbfb, 0x1, 0x0);
        gbc.writeMem(0xc6ef, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x957a);
        EXPECT(gbc.pc(), 0xc6f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ef), 0x93);
        // 93 00CB
        gbc.setState(0xba19, 0xbf94, 0xb140, 0x2e0, 0xc595, 0x5823, 0x1, 0x0);
        gbc.writeMem(0xba19, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xbf94);
        EXPECT(gbc.pc(), 0xba1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba19), 0x93);
        // 93 00CC
        gbc.setState(0xda55, 0x5244, 0x4d50, 0x6d26, 0x2296, 0xe107, 0x0, 0x1);
        gbc.writeMem(0xda55, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5244);
        EXPECT(gbc.pc(), 0xda56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda55), 0x93);
        // 93 00CD
        gbc.setState(0x700a, 0x925, 0xaf60, 0x8283, 0x832, 0xd3d6, 0x1, 0x1);
        gbc.writeMem(0x700a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x925);
        EXPECT(gbc.pc(), 0x700b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 00CE
        gbc.setState(0xc318, 0xfeaa, 0xf90, 0x24f4, 0x2843, 0x45f5, 0x1, 0x0);
        gbc.writeMem(0xc318, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xfeaa);
        EXPECT(gbc.pc(), 0xc319);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc318), 0x93);
        // 93 00CF
        gbc.setState(0x167e, 0x2a76, 0xf680, 0x71b4, 0xc226, 0xe50c, 0x0, 0x1);
        gbc.writeMem(0x167e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2a76);
        EXPECT(gbc.pc(), 0x167f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 00D0
        gbc.setState(0x37fe, 0xda25, 0xfea0, 0x68d2, 0x3069, 0xa55a, 0x1, 0x0);
        gbc.writeMem(0x37fe, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xda25);
        EXPECT(gbc.pc(), 0x37ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 00D1
        gbc.setState(0xc072, 0xf511, 0x3170, 0x4c63, 0x7fda, 0x475d, 0x1, 0x0);
        gbc.writeMem(0xc072, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf511);
        EXPECT(gbc.pc(), 0xc073);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc072), 0x93);
        // 93 00D2
        gbc.setState(0x78cf, 0xcd33, 0x22e0, 0x4c1, 0x2ef2, 0x2e33, 0x0, 0x1);
        gbc.writeMem(0x78cf, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xcd33);
        EXPECT(gbc.pc(), 0x78d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 00D3
        gbc.setState(0xb44, 0x4059, 0xf90, 0x4f39, 0xf9e, 0x5614, 0x1, 0x0);
        gbc.writeMem(0xb44, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4059);
        EXPECT(gbc.pc(), 0xb45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 00D4
        gbc.setState(0x6281, 0x89d2, 0xb470, 0x5fdd, 0x3e3a, 0xa1e9, 0x1, 0x1);
        gbc.writeMem(0x6281, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x89d2);
        EXPECT(gbc.pc(), 0x6282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 00D5
        gbc.setState(0x155d, 0x93a, 0x5370, 0xd669, 0xb626, 0x8f09, 0x1, 0x0);
        gbc.writeMem(0x155d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x93a);
        EXPECT(gbc.pc(), 0x155e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 00D6
        gbc.setState(0x55a8, 0x30ff, 0x4a00, 0x33e7, 0x68c1, 0xc8d4, 0x0, 0x0);
        gbc.writeMem(0x55a8, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x30ff);
        EXPECT(gbc.pc(), 0x55a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 00D8
        gbc.setState(0x4b56, 0xe79e, 0x1590, 0x4a56, 0x170d, 0x3955, 0x0, 0x1);
        gbc.writeMem(0x4b56, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe79e);
        EXPECT(gbc.pc(), 0x4b57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 00D9
        gbc.setState(0xca55, 0xf655, 0x2460, 0x1e08, 0xb39e, 0xdae, 0x0, 0x1);
        gbc.writeMem(0xca55, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf655);
        EXPECT(gbc.pc(), 0xca56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca55), 0x93);
        // 93 00DA
        gbc.setState(0x9619, 0x9d05, 0xbe70, 0x97d5, 0xfdcc, 0x7c34, 0x0, 0x0);
        gbc.writeMem(0x9619, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9d05);
        EXPECT(gbc.pc(), 0x961a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9619), 0x93);
        // 93 00DB
        gbc.setState(0xfa, 0x4fdb, 0x6810, 0x1bcc, 0xf5ef, 0xc1db, 0x0, 0x0);
        gbc.writeMem(0xfa, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4fdb);
        EXPECT(gbc.pc(), 0xfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 00DC
        gbc.setState(0x5f4a, 0x316d, 0x8880, 0x8756, 0xe8a1, 0x6f6c, 0x0, 0x0);
        gbc.writeMem(0x5f4a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x316d);
        EXPECT(gbc.pc(), 0x5f4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 00DD
        gbc.setState(0x16a0, 0x9221, 0x2a90, 0x8cac, 0xde51, 0x75c7, 0x0, 0x1);
        gbc.writeMem(0x16a0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9221);
        EXPECT(gbc.pc(), 0x16a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 00DE
        gbc.setState(0xd8cb, 0xdb80, 0xff40, 0x926c, 0x5086, 0x7c75, 0x1, 0x0);
        gbc.writeMem(0xd8cb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xdb80);
        EXPECT(gbc.pc(), 0xd8cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8cb), 0x93);
        // 93 00DF
        gbc.setState(0xcc76, 0x8647, 0x48c0, 0x9e6f, 0x625, 0xfedd, 0x0, 0x1);
        gbc.writeMem(0xcc76, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8647);
        EXPECT(gbc.pc(), 0xcc77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc76), 0x93);
        // 93 00E0
        gbc.setState(0xd9c2, 0x9518, 0xbe40, 0x914a, 0xd5b0, 0x5a34, 0x0, 0x1);
        gbc.writeMem(0xd9c2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9518);
        EXPECT(gbc.pc(), 0xd9c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9c2), 0x93);
        // 93 00E1
        gbc.setState(0x4502, 0xac12, 0x1e10, 0xd468, 0xd85b, 0x3904, 0x0, 0x0);
        gbc.writeMem(0x4502, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xac12);
        EXPECT(gbc.pc(), 0x4503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 00E2
        gbc.setState(0x11f3, 0x4fb7, 0x9e40, 0xd9df, 0x792b, 0xcbcd, 0x1, 0x0);
        gbc.writeMem(0x11f3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4fb7);
        EXPECT(gbc.pc(), 0x11f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 00E3
        gbc.setState(0x7f58, 0x8ebd, 0xe1f0, 0x2808, 0x8ab, 0x205d, 0x1, 0x0);
        gbc.writeMem(0x7f58, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8ebd);
        EXPECT(gbc.pc(), 0x7f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 00E4
        gbc.setState(0x510f, 0xc38c, 0xc340, 0x1fca, 0x7e56, 0x4f90, 0x0, 0x1);
        gbc.writeMem(0x510f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc38c);
        EXPECT(gbc.pc(), 0x5110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 00E5
        gbc.setState(0x77c4, 0x3375, 0x57e0, 0x78ec, 0x946f, 0x67fe, 0x1, 0x1);
        gbc.writeMem(0x77c4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3375);
        EXPECT(gbc.pc(), 0x77c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 00E6
        gbc.setState(0x9bfc, 0xa0f6, 0xa3e0, 0x155c, 0xc748, 0xa71a, 0x1, 0x0);
        gbc.writeMem(0x9bfc, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa0f6);
        EXPECT(gbc.pc(), 0x9bfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bfc), 0x93);
        // 93 00E7
        gbc.setState(0x1fd9, 0xfda7, 0xc1a0, 0x2a81, 0x2623, 0x5c17, 0x0, 0x0);
        gbc.writeMem(0x1fd9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xfda7);
        EXPECT(gbc.pc(), 0x1fda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 00E8
        gbc.setState(0x65cc, 0x94e9, 0x7ff0, 0xe730, 0x2e32, 0x4c1e, 0x0, 0x0);
        gbc.writeMem(0x65cc, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x94e9);
        EXPECT(gbc.pc(), 0x65cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 00E9
        gbc.setState(0xec24, 0xb195, 0xe9b0, 0x537d, 0x9521, 0x2c2f, 0x1, 0x1);
        gbc.writeMem(0xec24, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb195);
        EXPECT(gbc.pc(), 0xec25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec24), 0x93);
        // 93 00EA
        gbc.setState(0x8185, 0x2d28, 0x54c0, 0x2002, 0xb58a, 0xb384, 0x1, 0x0);
        gbc.writeMem(0x8185, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2d28);
        EXPECT(gbc.pc(), 0x8186);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8185), 0x93);
        // 93 00EB
        gbc.setState(0xed69, 0x8cf1, 0xd9e0, 0x65c0, 0x1720, 0x875a, 0x0, 0x0);
        gbc.writeMem(0xed69, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8cf1);
        EXPECT(gbc.pc(), 0xed6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed69), 0x93);
        // 93 00EC
        gbc.setState(0x7c0d, 0xc9c5, 0xc9a0, 0x8951, 0x5f57, 0xbbce, 0x0, 0x0);
        gbc.writeMem(0x7c0d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc9c5);
        EXPECT(gbc.pc(), 0x7c0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 00ED
        gbc.setState(0xa4e4, 0x4f81, 0xe5f0, 0x2b60, 0x84ae, 0x1a96, 0x0, 0x1);
        gbc.writeMem(0xa4e4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4f81);
        EXPECT(gbc.pc(), 0xa4e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e4), 0x93);
        // 93 00EE
        gbc.setState(0xd015, 0xd2d4, 0xff50, 0xb79e, 0x6a7a, 0x82de, 0x1, 0x1);
        gbc.writeMem(0xd015, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd2d4);
        EXPECT(gbc.pc(), 0xd016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd015), 0x93);
        // 93 00EF
        gbc.setState(0xc149, 0x119b, 0x8730, 0x2514, 0x137b, 0xa8e0, 0x1, 0x0);
        gbc.writeMem(0xc149, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x119b);
        EXPECT(gbc.pc(), 0xc14a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc149), 0x93);
        // 93 00F0
        gbc.setState(0x6f5f, 0xf0, 0x1f0, 0x4603, 0x67d7, 0x8135, 0x0, 0x1);
        gbc.writeMem(0x6f5f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf0);
        EXPECT(gbc.pc(), 0x6f60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 00F1
        gbc.setState(0xc343, 0x7b91, 0xa70, 0x20b7, 0xdd69, 0x6ab1, 0x1, 0x1);
        gbc.writeMem(0xc343, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7b91);
        EXPECT(gbc.pc(), 0xc344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc343), 0x93);
        // 93 00F2
        gbc.setState(0x9f92, 0xc13f, 0x46a0, 0xc17b, 0xaad8, 0x1691, 0x1, 0x0);
        gbc.writeMem(0x9f92, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc13f);
        EXPECT(gbc.pc(), 0x9f93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f92), 0x93);
        // 93 00F3
        gbc.setState(0xb6c, 0xabb1, 0x9440, 0x5a0f, 0x4743, 0xe567, 0x1, 0x1);
        gbc.writeMem(0xb6c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xabb1);
        EXPECT(gbc.pc(), 0xb6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 00F4
        gbc.setState(0x3dcc, 0x4809, 0x50d0, 0x942f, 0xc854, 0x1161, 0x0, 0x0);
        gbc.writeMem(0x3dcc, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4809);
        EXPECT(gbc.pc(), 0x3dcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 00F5
        gbc.setState(0x2d7b, 0x2495, 0xf4b0, 0x59b3, 0x66d8, 0x73ee, 0x0, 0x1);
        gbc.writeMem(0x2d7b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2495);
        EXPECT(gbc.pc(), 0x2d7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 00F6
        gbc.setState(0x6e0e, 0x94ae, 0xfd90, 0xd560, 0x5a32, 0x4669, 0x1, 0x1);
        gbc.writeMem(0x6e0e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x94ae);
        EXPECT(gbc.pc(), 0x6e0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 00F7
        gbc.setState(0xb544, 0xbf23, 0x1650, 0x51a2, 0x3a3a, 0x9d12, 0x0, 0x0);
        gbc.writeMem(0xb544, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xbf23);
        EXPECT(gbc.pc(), 0xb545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb544), 0x93);
        // 93 00F8
        gbc.setState(0x9fd1, 0x14f2, 0xc610, 0xd5ce, 0xf71b, 0xcfa3, 0x1, 0x0);
        gbc.writeMem(0x9fd1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x14f2);
        EXPECT(gbc.pc(), 0x9fd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd1), 0x93);
        // 93 00F9
        gbc.setState(0x5005, 0xf3c, 0x2350, 0xea37, 0xaacb, 0x9bc2, 0x1, 0x1);
        gbc.writeMem(0x5005, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf3c);
        EXPECT(gbc.pc(), 0x5006);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 00FA
        gbc.setState(0xddad, 0x5a99, 0x5de0, 0x7d72, 0x5dba, 0xdda9, 0x1, 0x0);
        gbc.writeMem(0xddad, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5a99);
        EXPECT(gbc.pc(), 0xddae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddad), 0x93);
        // 93 00FB
        gbc.setState(0x3314, 0xb20d, 0x2610, 0x57ad, 0x726b, 0x51ff, 0x1, 0x1);
        gbc.writeMem(0x3314, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb20d);
        EXPECT(gbc.pc(), 0x3315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 00FC
        gbc.setState(0x756, 0x2b7c, 0x6d10, 0xf6c0, 0x7375, 0xc87b, 0x1, 0x1);
        gbc.writeMem(0x756, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2b7c);
        EXPECT(gbc.pc(), 0x757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 00FD
        gbc.setState(0xc67b, 0xe354, 0xee90, 0xa432, 0xfc90, 0x738b, 0x0, 0x0);
        gbc.writeMem(0xc67b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe354);
        EXPECT(gbc.pc(), 0xc67c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc67b), 0x93);
        // 93 00FE
        gbc.setState(0x2b8a, 0x85b5, 0x6c40, 0x8f8, 0xd76a, 0x2ec1, 0x0, 0x1);
        gbc.writeMem(0x2b8a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x85b5);
        EXPECT(gbc.pc(), 0x2b8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 00FF
        gbc.setState(0xc6e4, 0x98fd, 0x83d0, 0xab68, 0x1590, 0xf731, 0x0, 0x1);
        gbc.writeMem(0xc6e4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x98fd);
        EXPECT(gbc.pc(), 0xc6e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e4), 0x93);
        // 93 0100
        gbc.setState(0x993e, 0x9ae1, 0x4550, 0xa164, 0x38a6, 0xa083, 0x1, 0x0);
        gbc.writeMem(0x993e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9ae1);
        EXPECT(gbc.pc(), 0x993f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x993e), 0x93);
        // 93 0101
        gbc.setState(0x8e7f, 0x45c0, 0x8480, 0xc7df, 0x42e1, 0xb7f1, 0x0, 0x0);
        gbc.writeMem(0x8e7f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x45c0);
        EXPECT(gbc.pc(), 0x8e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e7f), 0x93);
        // 93 0102
        gbc.setState(0x3548, 0x407a, 0xf720, 0x83a9, 0x5e5a, 0xd998, 0x0, 0x0);
        gbc.writeMem(0x3548, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x407a);
        EXPECT(gbc.pc(), 0x3549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0103
        gbc.setState(0x1c0d, 0xe53, 0x9780, 0xe879, 0xbf52, 0x1167, 0x1, 0x0);
        gbc.writeMem(0x1c0d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe53);
        EXPECT(gbc.pc(), 0x1c0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0104
        gbc.setState(0xd902, 0x6337, 0x1e90, 0x6408, 0x36b1, 0xe4bf, 0x0, 0x1);
        gbc.writeMem(0xd902, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6337);
        EXPECT(gbc.pc(), 0xd903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd902), 0x93);
        // 93 0105
        gbc.setState(0x911c, 0x7893, 0xdea0, 0x81de, 0x2e12, 0xf8c5, 0x1, 0x0);
        gbc.writeMem(0x911c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7893);
        EXPECT(gbc.pc(), 0x911d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x911c), 0x93);
        // 93 0106
        gbc.setState(0x4237, 0x383c, 0xd460, 0x6db, 0xb2c6, 0xe12a, 0x1, 0x1);
        gbc.writeMem(0x4237, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x383c);
        EXPECT(gbc.pc(), 0x4238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0107
        gbc.setState(0xcc9, 0xea70, 0xe910, 0x85df, 0x3fe6, 0xfb18, 0x1, 0x0);
        gbc.writeMem(0xcc9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xea70);
        EXPECT(gbc.pc(), 0xcca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0108
        gbc.setState(0x188a, 0x9bb9, 0x96c0, 0xaf26, 0x822c, 0xa625, 0x1, 0x0);
        gbc.writeMem(0x188a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9bb9);
        EXPECT(gbc.pc(), 0x188b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0109
        gbc.setState(0x806d, 0x80c6, 0x48e0, 0x53f3, 0xe11f, 0xda85, 0x0, 0x1);
        gbc.writeMem(0x806d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x80c6);
        EXPECT(gbc.pc(), 0x806e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x806d), 0x93);
        // 93 010A
        gbc.setState(0x7be, 0x5a87, 0x83c0, 0xe1a4, 0xeff1, 0x739c, 0x0, 0x0);
        gbc.writeMem(0x7be, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5a87);
        EXPECT(gbc.pc(), 0x7bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 010B
        gbc.setState(0x5a28, 0x8bc3, 0xac90, 0xaf5d, 0x5840, 0xff24, 0x0, 0x1);
        gbc.writeMem(0x5a28, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8bc3);
        EXPECT(gbc.pc(), 0x5a29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 010C
        gbc.setState(0x67e4, 0xa8b2, 0xf7a0, 0x1cb1, 0xcf7e, 0xa1a2, 0x1, 0x0);
        gbc.writeMem(0x67e4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa8b2);
        EXPECT(gbc.pc(), 0x67e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 010D
        gbc.setState(0x732f, 0x13f, 0x7580, 0xb872, 0xed51, 0xa442, 0x0, 0x1);
        gbc.writeMem(0x732f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x13f);
        EXPECT(gbc.pc(), 0x7330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 010E
        gbc.setState(0xa3d8, 0x381, 0x55a0, 0x839f, 0x2405, 0xf96, 0x1, 0x0);
        gbc.writeMem(0xa3d8, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x381);
        EXPECT(gbc.pc(), 0xa3d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3d8), 0x93);
        // 93 010F
        gbc.setState(0x283d, 0x32ba, 0xe10, 0xf374, 0xc4a3, 0xe183, 0x0, 0x1);
        gbc.writeMem(0x283d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x32ba);
        EXPECT(gbc.pc(), 0x283e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0110
        gbc.setState(0xbe2a, 0xdf1a, 0xc1f0, 0x5ea4, 0x49ce, 0xe283, 0x1, 0x0);
        gbc.writeMem(0xbe2a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xdf1a);
        EXPECT(gbc.pc(), 0xbe2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe2a), 0x93);
        // 93 0111
        gbc.setState(0xc04d, 0x9eb0, 0x8740, 0xd905, 0x2902, 0x17cb, 0x1, 0x1);
        gbc.writeMem(0xc04d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9eb0);
        EXPECT(gbc.pc(), 0xc04e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc04d), 0x93);
        // 93 0112
        gbc.setState(0x3895, 0xd82c, 0xdd30, 0xd88c, 0xdd3a, 0xff37, 0x0, 0x0);
        gbc.writeMem(0x3895, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd82c);
        EXPECT(gbc.pc(), 0x3896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0113
        gbc.setState(0x8e65, 0x3841, 0xc050, 0xd52a, 0xcdaa, 0xe26, 0x0, 0x0);
        gbc.writeMem(0x8e65, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3841);
        EXPECT(gbc.pc(), 0x8e66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e65), 0x93);
        // 93 0114
        gbc.setState(0xa80b, 0xc273, 0x36a0, 0xa427, 0xc204, 0xcea8, 0x1, 0x0);
        gbc.writeMem(0xa80b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc273);
        EXPECT(gbc.pc(), 0xa80c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa80b), 0x93);
        // 93 0115
        gbc.setState(0x8064, 0x4c7f, 0x66e0, 0x47ad, 0x22e5, 0xf29f, 0x1, 0x0);
        gbc.writeMem(0x8064, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4c7f);
        EXPECT(gbc.pc(), 0x8065);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8064), 0x93);
        // 93 0116
        gbc.setState(0xecf3, 0x5ce1, 0x2ff0, 0x48c, 0x8f80, 0xe3cb, 0x1, 0x1);
        gbc.writeMem(0xecf3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5ce1);
        EXPECT(gbc.pc(), 0xecf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecf3), 0x93);
        // 93 0117
        gbc.setState(0x8d9a, 0x9af6, 0xc960, 0x3e29, 0x893e, 0xede0, 0x0, 0x0);
        gbc.writeMem(0x8d9a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9af6);
        EXPECT(gbc.pc(), 0x8d9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d9a), 0x93);
        // 93 0118
        gbc.setState(0xe000, 0xb3fa, 0x1d40, 0x8907, 0x2172, 0x9fab, 0x0, 0x1);
        gbc.writeMem(0xe000, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb3fa);
        EXPECT(gbc.pc(), 0xe001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe000), 0x93);
        // 93 0119
        gbc.setState(0x1fad, 0xc6dd, 0x1bb0, 0x255d, 0xe386, 0xb401, 0x0, 0x1);
        gbc.writeMem(0x1fad, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc6dd);
        EXPECT(gbc.pc(), 0x1fae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 011A
        gbc.setState(0xb869, 0x7d63, 0xb6b0, 0xdd7d, 0xd755, 0xe55b, 0x0, 0x1);
        gbc.writeMem(0xb869, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7d63);
        EXPECT(gbc.pc(), 0xb86a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb869), 0x93);
        // 93 011B
        gbc.setState(0xeda0, 0xde18, 0x5490, 0x2620, 0xf923, 0xd1b6, 0x1, 0x1);
        gbc.writeMem(0xeda0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xde18);
        EXPECT(gbc.pc(), 0xeda1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda0), 0x93);
        // 93 011C
        gbc.setState(0x1749, 0x94f3, 0xe940, 0x5551, 0x205a, 0xfa5, 0x0, 0x0);
        gbc.writeMem(0x1749, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x94f3);
        EXPECT(gbc.pc(), 0x174a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 011D
        gbc.setState(0x18ea, 0xa8ad, 0xe030, 0x40dc, 0x163b, 0xf417, 0x1, 0x0);
        gbc.writeMem(0x18ea, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa8ad);
        EXPECT(gbc.pc(), 0x18eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 011E
        gbc.setState(0x61b7, 0x82d5, 0xdd80, 0xe330, 0x95a2, 0x125b, 0x1, 0x0);
        gbc.writeMem(0x61b7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x82d5);
        EXPECT(gbc.pc(), 0x61b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 011F
        gbc.setState(0xdd9a, 0xf1be, 0xfc80, 0xffc9, 0x20f7, 0x61af, 0x0, 0x1);
        gbc.writeMem(0xdd9a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf1be);
        EXPECT(gbc.pc(), 0xdd9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd9a), 0x93);
        // 93 0120
        gbc.setState(0x6a9a, 0x2d78, 0x8b10, 0xca8a, 0xeffb, 0x7489, 0x1, 0x0);
        gbc.writeMem(0x6a9a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2d78);
        EXPECT(gbc.pc(), 0x6a9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0121
        gbc.setState(0xb6f6, 0xf22b, 0xbfb0, 0x5fd, 0xedef, 0xca3a, 0x0, 0x1);
        gbc.writeMem(0xb6f6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf22b);
        EXPECT(gbc.pc(), 0xb6f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6f6), 0x93);
        // 93 0122
        gbc.setState(0x4481, 0x220f, 0xbba0, 0x5552, 0x829b, 0xc57a, 0x0, 0x1);
        gbc.writeMem(0x4481, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x220f);
        EXPECT(gbc.pc(), 0x4482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0123
        gbc.setState(0x12cb, 0x7a6f, 0x21b0, 0xed2, 0x1f93, 0xc0a4, 0x1, 0x0);
        gbc.writeMem(0x12cb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7a6f);
        EXPECT(gbc.pc(), 0x12cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0124
        gbc.setState(0xbc93, 0xc6bf, 0x2750, 0xb3cb, 0x51d4, 0x2a98, 0x0, 0x1);
        gbc.writeMem(0xbc93, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc6bf);
        EXPECT(gbc.pc(), 0xbc94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc93), 0x93);
        // 93 0125
        gbc.setState(0xa092, 0x1a00, 0x8d10, 0xba52, 0x14cc, 0x7017, 0x0, 0x0);
        gbc.writeMem(0xa092, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1a00);
        EXPECT(gbc.pc(), 0xa093);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa092), 0x93);
        // 93 0126
        gbc.setState(0x9117, 0x168f, 0x5650, 0x6efc, 0x33e8, 0xb88b, 0x0, 0x1);
        gbc.writeMem(0x9117, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x168f);
        EXPECT(gbc.pc(), 0x9118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9117), 0x93);
        // 93 0127
        gbc.setState(0x4498, 0xdfa3, 0x16c0, 0x4890, 0xd3e, 0xcc03, 0x0, 0x0);
        gbc.writeMem(0x4498, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xdfa3);
        EXPECT(gbc.pc(), 0x4499);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0128
        gbc.setState(0xd2a2, 0x1002, 0xf880, 0x364b, 0x7dc, 0x839c, 0x1, 0x1);
        gbc.writeMem(0xd2a2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1002);
        EXPECT(gbc.pc(), 0xd2a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2a2), 0x93);
        // 93 0129
        gbc.setState(0xc40, 0x9b7b, 0xf0b0, 0xa60, 0x3870, 0x8a44, 0x1, 0x1);
        gbc.writeMem(0xc40, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9b7b);
        EXPECT(gbc.pc(), 0xc41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 012A
        gbc.setState(0x1569, 0x2893, 0xe160, 0xd09d, 0xab23, 0x1c8, 0x1, 0x0);
        gbc.writeMem(0x1569, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2893);
        EXPECT(gbc.pc(), 0x156a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 012B
        gbc.setState(0x1d40, 0xeda0, 0x58e0, 0xe412, 0x264c, 0x7a3, 0x0, 0x0);
        gbc.writeMem(0x1d40, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xeda0);
        EXPECT(gbc.pc(), 0x1d41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 012C
        gbc.setState(0x9b8f, 0x8ea0, 0xa5c0, 0x1036, 0x113a, 0xc140, 0x0, 0x1);
        gbc.writeMem(0x9b8f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8ea0);
        EXPECT(gbc.pc(), 0x9b90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b8f), 0x93);
        // 93 012D
        gbc.setState(0x7bbe, 0xda37, 0xa800, 0xa066, 0x362c, 0xa411, 0x0, 0x0);
        gbc.writeMem(0x7bbe, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xda37);
        EXPECT(gbc.pc(), 0x7bbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 012E
        gbc.setState(0x929b, 0x9b2, 0x97b0, 0xe00e, 0x9688, 0x7885, 0x0, 0x0);
        gbc.writeMem(0x929b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9b2);
        EXPECT(gbc.pc(), 0x929c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x929b), 0x93);
        // 93 012F
        gbc.setState(0x5666, 0x39fd, 0x1a80, 0xe8ed, 0x8361, 0xc076, 0x0, 0x0);
        gbc.writeMem(0x5666, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x39fd);
        EXPECT(gbc.pc(), 0x5667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0130
        gbc.setState(0x35fd, 0x38e2, 0x9190, 0x431d, 0xf345, 0xc328, 0x0, 0x1);
        gbc.writeMem(0x35fd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x38e2);
        EXPECT(gbc.pc(), 0x35fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0131
        gbc.setState(0x4eaa, 0xfab9, 0x1b40, 0x74de, 0x77cf, 0xf9fe, 0x1, 0x0);
        gbc.writeMem(0x4eaa, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xfab9);
        EXPECT(gbc.pc(), 0x4eab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0132
        gbc.setState(0xe75d, 0x8eef, 0x1420, 0x8d17, 0xa0f, 0x559, 0x0, 0x1);
        gbc.writeMem(0xe75d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8eef);
        EXPECT(gbc.pc(), 0xe75e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe75d), 0x93);
        // 93 0133
        gbc.setState(0x1dc6, 0xdb17, 0xd3b0, 0xb8d6, 0x10d2, 0xb05d, 0x1, 0x0);
        gbc.writeMem(0x1dc6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xdb17);
        EXPECT(gbc.pc(), 0x1dc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0135
        gbc.setState(0xc994, 0x7af9, 0x8100, 0x80e1, 0xc89d, 0xdf01, 0x0, 0x0);
        gbc.writeMem(0xc994, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x7af9);
        EXPECT(gbc.pc(), 0xc995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc994), 0x93);
        // 93 0136
        gbc.setState(0xa1c7, 0x1c05, 0x570, 0x9e4a, 0x1e3f, 0xea63, 0x1, 0x0);
        gbc.writeMem(0xa1c7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1c05);
        EXPECT(gbc.pc(), 0xa1c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1c7), 0x93);
        // 93 0137
        gbc.setState(0xde59, 0xa5fa, 0xdb70, 0x3d63, 0x24a5, 0xa476, 0x1, 0x0);
        gbc.writeMem(0xde59, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa5fa);
        EXPECT(gbc.pc(), 0xde5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde59), 0x93);
        // 93 0138
        gbc.setState(0x4b58, 0x92b6, 0x47c0, 0xaa7d, 0x92e6, 0x186b, 0x0, 0x0);
        gbc.writeMem(0x4b58, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x92b6);
        EXPECT(gbc.pc(), 0x4b59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0139
        gbc.setState(0x2fa8, 0xe490, 0xe920, 0xd35a, 0x112b, 0xb6e6, 0x0, 0x1);
        gbc.writeMem(0x2fa8, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe490);
        EXPECT(gbc.pc(), 0x2fa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 013A
        gbc.setState(0x6a81, 0x68b4, 0xa120, 0x66ce, 0x1931, 0xc588, 0x0, 0x1);
        gbc.writeMem(0x6a81, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x68b4);
        EXPECT(gbc.pc(), 0x6a82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 013B
        gbc.setState(0x4c53, 0xaac2, 0x37e0, 0x1680, 0x849e, 0x3163, 0x0, 0x0);
        gbc.writeMem(0x4c53, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xaac2);
        EXPECT(gbc.pc(), 0x4c54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 013C
        gbc.setState(0xc0eb, 0x8e82, 0xb630, 0x38c8, 0xd612, 0xc691, 0x1, 0x0);
        gbc.writeMem(0xc0eb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8e82);
        EXPECT(gbc.pc(), 0xc0ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0eb), 0x93);
        // 93 013E
        gbc.setState(0x8042, 0x8549, 0x3140, 0x5811, 0x5c29, 0xebf3, 0x1, 0x0);
        gbc.writeMem(0x8042, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8549);
        EXPECT(gbc.pc(), 0x8043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8042), 0x93);
        // 93 013F
        gbc.setState(0x8dae, 0xa9b5, 0x410, 0x444c, 0xb2f6, 0xe178, 0x0, 0x1);
        gbc.writeMem(0x8dae, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa9b5);
        EXPECT(gbc.pc(), 0x8daf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dae), 0x93);
        // 93 0140
        gbc.setState(0x5c5e, 0x58c8, 0xb0b0, 0x99db, 0x2139, 0xcec3, 0x0, 0x1);
        gbc.writeMem(0x5c5e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x58c8);
        EXPECT(gbc.pc(), 0x5c5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0141
        gbc.setState(0x854b, 0x3d28, 0xf4f0, 0x2e32, 0x3de5, 0xdf00, 0x0, 0x1);
        gbc.writeMem(0x854b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3d28);
        EXPECT(gbc.pc(), 0x854c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x854b), 0x93);
        // 93 0143
        gbc.setState(0x860b, 0xc7e4, 0x67b0, 0x514a, 0x8d20, 0x7982, 0x1, 0x1);
        gbc.writeMem(0x860b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc7e4);
        EXPECT(gbc.pc(), 0x860c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x860b), 0x93);
        // 93 0144
        gbc.setState(0xef1e, 0xb6a6, 0x1bb0, 0xf493, 0x570e, 0x3540, 0x1, 0x1);
        gbc.writeMem(0xef1e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb6a6);
        EXPECT(gbc.pc(), 0xef1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef1e), 0x93);
        // 93 0145
        gbc.setState(0xe4db, 0xd627, 0xc3c0, 0xbbbb, 0xf7c2, 0xc80d, 0x1, 0x1);
        gbc.writeMem(0xe4db, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd627);
        EXPECT(gbc.pc(), 0xe4dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4db), 0x93);
        // 93 0146
        gbc.setState(0x4532, 0xd831, 0x48f0, 0xdd6d, 0xf934, 0xb283, 0x0, 0x0);
        gbc.writeMem(0x4532, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd831);
        EXPECT(gbc.pc(), 0x4533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0147
        gbc.setState(0x1530, 0x350c, 0xc7d0, 0x8372, 0xd919, 0x4bfc, 0x1, 0x1);
        gbc.writeMem(0x1530, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x350c);
        EXPECT(gbc.pc(), 0x1531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0148
        gbc.setState(0xa3b, 0xfe64, 0xa6f0, 0xaee, 0x8f09, 0x4b19, 0x1, 0x0);
        gbc.writeMem(0xa3b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfe64);
        EXPECT(gbc.pc(), 0xa3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0149
        gbc.setState(0xebfb, 0x16c2, 0x9b40, 0x6f96, 0xb99e, 0xacd3, 0x0, 0x0);
        gbc.writeMem(0xebfb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x16c2);
        EXPECT(gbc.pc(), 0xebfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebfb), 0x93);
        // 93 014A
        gbc.setState(0x75df, 0x4865, 0xe4d0, 0x3b7f, 0x887b, 0x6b87, 0x0, 0x0);
        gbc.writeMem(0x75df, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x4865);
        EXPECT(gbc.pc(), 0x75e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 014B
        gbc.setState(0x38ab, 0x4708, 0x7560, 0x43c2, 0x1c9d, 0x72fd, 0x0, 0x0);
        gbc.writeMem(0x38ab, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4708);
        EXPECT(gbc.pc(), 0x38ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 014C
        gbc.setState(0x6453, 0xc2e1, 0x82f0, 0x9ea2, 0x3d28, 0x7034, 0x0, 0x1);
        gbc.writeMem(0x6453, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc2e1);
        EXPECT(gbc.pc(), 0x6454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 014D
        gbc.setState(0x3e81, 0x838f, 0xb70, 0xcf95, 0x2d39, 0x8109, 0x0, 0x0);
        gbc.writeMem(0x3e81, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x838f);
        EXPECT(gbc.pc(), 0x3e82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 014E
        gbc.setState(0x10f, 0xc790, 0x4e90, 0x214a, 0x71ec, 0x2a79, 0x0, 0x1);
        gbc.writeMem(0x10f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc790);
        EXPECT(gbc.pc(), 0x110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 014F
        gbc.setState(0x22e0, 0x21d6, 0x8c90, 0x1165, 0x366a, 0x803f, 0x1, 0x1);
        gbc.writeMem(0x22e0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x21d6);
        EXPECT(gbc.pc(), 0x22e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0150
        gbc.setState(0x42c6, 0x5da8, 0xdca0, 0x1393, 0x4e03, 0xecd8, 0x1, 0x1);
        gbc.writeMem(0x42c6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5da8);
        EXPECT(gbc.pc(), 0x42c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0151
        gbc.setState(0x97a9, 0xf022, 0x6ea0, 0xb693, 0x1872, 0xbb6a, 0x1, 0x1);
        gbc.writeMem(0x97a9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf022);
        EXPECT(gbc.pc(), 0x97aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97a9), 0x93);
        // 93 0152
        gbc.setState(0x42d, 0x1da4, 0x50d0, 0x5984, 0x38a4, 0x2901, 0x1, 0x1);
        gbc.writeMem(0x42d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1da4);
        EXPECT(gbc.pc(), 0x42e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0153
        gbc.setState(0x9512, 0x111e, 0xaaa0, 0x6a40, 0x3a4, 0x5b52, 0x0, 0x1);
        gbc.writeMem(0x9512, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x111e);
        EXPECT(gbc.pc(), 0x9513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9512), 0x93);
        // 93 0154
        gbc.setState(0x6712, 0x1bc0, 0x8a20, 0x8863, 0x1b77, 0xc638, 0x1, 0x1);
        gbc.writeMem(0x6712, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1bc0);
        EXPECT(gbc.pc(), 0x6713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0155
        gbc.setState(0xd1ad, 0x2a52, 0xa560, 0x9a74, 0x4794, 0x7fd7, 0x1, 0x0);
        gbc.writeMem(0xd1ad, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2a52);
        EXPECT(gbc.pc(), 0xd1ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ad), 0x93);
        // 93 0156
        gbc.setState(0xab3d, 0x8037, 0x2220, 0x6ef3, 0xcb21, 0x63ef, 0x1, 0x0);
        gbc.writeMem(0xab3d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8037);
        EXPECT(gbc.pc(), 0xab3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab3d), 0x93);
        // 93 0157
        gbc.setState(0x54f6, 0x1c80, 0x3000, 0xc7b6, 0x9c42, 0x355c, 0x1, 0x1);
        gbc.writeMem(0x54f6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1c80);
        EXPECT(gbc.pc(), 0x54f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0158
        gbc.setState(0xc089, 0x4bf1, 0xe180, 0x2df1, 0x9152, 0x866, 0x0, 0x0);
        gbc.writeMem(0xc089, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4bf1);
        EXPECT(gbc.pc(), 0xc08a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc089), 0x93);
        // 93 0159
        gbc.setState(0x1d6d, 0x1ed3, 0xb850, 0xc6db, 0x6bb2, 0x5498, 0x0, 0x0);
        gbc.writeMem(0x1d6d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1ed3);
        EXPECT(gbc.pc(), 0x1d6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 015A
        gbc.setState(0x7303, 0x2d58, 0xeab0, 0x6867, 0x6f9, 0xcfb5, 0x0, 0x0);
        gbc.writeMem(0x7303, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2d58);
        EXPECT(gbc.pc(), 0x7304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 015B
        gbc.setState(0xa1cd, 0x85e5, 0xc040, 0xd9d4, 0xb6c9, 0x6297, 0x0, 0x0);
        gbc.writeMem(0xa1cd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x85e5);
        EXPECT(gbc.pc(), 0xa1ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1cd), 0x93);
        // 93 015C
        gbc.setState(0x4ac9, 0xb5fa, 0xe760, 0x1707, 0xf232, 0x539c, 0x1, 0x1);
        gbc.writeMem(0x4ac9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb5fa);
        EXPECT(gbc.pc(), 0x4aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 015D
        gbc.setState(0x93dd, 0x2908, 0xc0e0, 0x2a79, 0xf3e7, 0xe054, 0x0, 0x0);
        gbc.writeMem(0x93dd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2908);
        EXPECT(gbc.pc(), 0x93de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93dd), 0x93);
        // 93 015E
        gbc.setState(0x565b, 0xdbb3, 0x5fd0, 0x1821, 0x5212, 0x4b52, 0x0, 0x1);
        gbc.writeMem(0x565b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xdbb3);
        EXPECT(gbc.pc(), 0x565c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 015F
        gbc.setState(0x7e32, 0x6e4a, 0xa320, 0x8f4, 0xe77c, 0x707a, 0x1, 0x0);
        gbc.writeMem(0x7e32, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6e4a);
        EXPECT(gbc.pc(), 0x7e33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0160
        gbc.setState(0x79b7, 0xed18, 0xf240, 0xf7d5, 0xc0dd, 0x7b43, 0x1, 0x0);
        gbc.writeMem(0x79b7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xed18);
        EXPECT(gbc.pc(), 0x79b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0161
        gbc.setState(0x273a, 0x123a, 0x1d80, 0xee37, 0x11d9, 0x2bb1, 0x1, 0x1);
        gbc.writeMem(0x273a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x123a);
        EXPECT(gbc.pc(), 0x273b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0162
        gbc.setState(0xc31a, 0x813e, 0xe2b0, 0x79b6, 0xc021, 0x687, 0x1, 0x1);
        gbc.writeMem(0xc31a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x813e);
        EXPECT(gbc.pc(), 0xc31b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc31a), 0x93);
        // 93 0163
        gbc.setState(0x2b08, 0x9f6c, 0x91a0, 0x418a, 0x9e45, 0x8094, 0x0, 0x0);
        gbc.writeMem(0x2b08, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9f6c);
        EXPECT(gbc.pc(), 0x2b09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0164
        gbc.setState(0x7cef, 0x9f02, 0xe2e0, 0xcf8f, 0x5b2d, 0x3d8b, 0x1, 0x0);
        gbc.writeMem(0x7cef, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9f02);
        EXPECT(gbc.pc(), 0x7cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0165
        gbc.setState(0x1587, 0xaf52, 0x4d00, 0xceb1, 0x2260, 0x3ba2, 0x1, 0x1);
        gbc.writeMem(0x1587, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xaf52);
        EXPECT(gbc.pc(), 0x1588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0166
        gbc.setState(0x2034, 0x4445, 0x1ea0, 0x9335, 0xfa17, 0x9a3c, 0x1, 0x1);
        gbc.writeMem(0x2034, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4445);
        EXPECT(gbc.pc(), 0x2035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0167
        gbc.setState(0x119b, 0x24b2, 0xafb0, 0x8b44, 0x7e2, 0x5031, 0x0, 0x1);
        gbc.writeMem(0x119b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x24b2);
        EXPECT(gbc.pc(), 0x119c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0168
        gbc.setState(0xbe64, 0xc52e, 0xf4e0, 0xe9e1, 0x8edb, 0x7e74, 0x1, 0x1);
        gbc.writeMem(0xbe64, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc52e);
        EXPECT(gbc.pc(), 0xbe65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe64), 0x93);
        // 93 0169
        gbc.setState(0x4851, 0xb77b, 0x3750, 0xd355, 0xd6b2, 0x306a, 0x1, 0x1);
        gbc.writeMem(0x4851, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb77b);
        EXPECT(gbc.pc(), 0x4852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 016A
        gbc.setState(0x1e9c, 0xe851, 0x3b30, 0x1021, 0x2479, 0xe089, 0x0, 0x0);
        gbc.writeMem(0x1e9c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe851);
        EXPECT(gbc.pc(), 0x1e9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 016B
        gbc.setState(0x3460, 0x1153, 0x5be0, 0x4b1f, 0x3f3d, 0x3e9b, 0x1, 0x1);
        gbc.writeMem(0x3460, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1153);
        EXPECT(gbc.pc(), 0x3461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 016D
        gbc.setState(0x4dc3, 0x100b, 0xfbd0, 0xa454, 0xbfd2, 0x5293, 0x1, 0x1);
        gbc.writeMem(0x4dc3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x100b);
        EXPECT(gbc.pc(), 0x4dc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 016E
        gbc.setState(0xae34, 0xd15a, 0x4280, 0x39d5, 0x8b7, 0xe96c, 0x1, 0x1);
        gbc.writeMem(0xae34, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd15a);
        EXPECT(gbc.pc(), 0xae35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae34), 0x93);
        // 93 016F
        gbc.setState(0x2843, 0x493f, 0xb4e0, 0x8b68, 0xce2c, 0xe0c, 0x1, 0x1);
        gbc.writeMem(0x2843, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x493f);
        EXPECT(gbc.pc(), 0x2844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0170
        gbc.setState(0xe94b, 0x8604, 0xc5d0, 0xae81, 0x2bde, 0xa568, 0x0, 0x1);
        gbc.writeMem(0xe94b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8604);
        EXPECT(gbc.pc(), 0xe94c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe94b), 0x93);
        // 93 0171
        gbc.setState(0x237f, 0xf8b, 0xe680, 0xbc63, 0x748f, 0x16ac, 0x0, 0x0);
        gbc.writeMem(0x237f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf8b);
        EXPECT(gbc.pc(), 0x2380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0172
        gbc.setState(0x9288, 0x3056, 0xb660, 0xb19e, 0x349d, 0xbf67, 0x1, 0x0);
        gbc.writeMem(0x9288, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3056);
        EXPECT(gbc.pc(), 0x9289);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9288), 0x93);
        // 93 0173
        gbc.setState(0x7b16, 0x557e, 0x310, 0x252d, 0xfa2e, 0x339a, 0x1, 0x1);
        gbc.writeMem(0x7b16, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x557e);
        EXPECT(gbc.pc(), 0x7b17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0174
        gbc.setState(0xe5a7, 0xb6b4, 0x3e20, 0xb8e, 0x2b7f, 0xcf7f, 0x0, 0x1);
        gbc.writeMem(0xe5a7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb6b4);
        EXPECT(gbc.pc(), 0xe5a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5a7), 0x93);
        // 93 0175
        gbc.setState(0xeb0c, 0x4f99, 0xc470, 0x40ae, 0x9e3b, 0x4f66, 0x1, 0x1);
        gbc.writeMem(0xeb0c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4f99);
        EXPECT(gbc.pc(), 0xeb0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb0c), 0x93);
        // 93 0176
        gbc.setState(0xb3ab, 0x3152, 0x5bf0, 0x3566, 0xa4a6, 0x67bd, 0x0, 0x1);
        gbc.writeMem(0xb3ab, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3152);
        EXPECT(gbc.pc(), 0xb3ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3ab), 0x93);
        // 93 0177
        gbc.setState(0xbebb, 0x1342, 0x1c30, 0x1a66, 0x720f, 0xf1d9, 0x1, 0x0);
        gbc.writeMem(0xbebb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1342);
        EXPECT(gbc.pc(), 0xbebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbebb), 0x93);
        // 93 0178
        gbc.setState(0xe2e2, 0xe659, 0xdf10, 0xc691, 0x3c2e, 0xdb0f, 0x1, 0x1);
        gbc.writeMem(0xe2e2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe659);
        EXPECT(gbc.pc(), 0xe2e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2e2), 0x93);
        // 93 0179
        gbc.setState(0x6e0f, 0x6a81, 0xeaf0, 0xa3fd, 0xc28f, 0xec3b, 0x0, 0x0);
        gbc.writeMem(0x6e0f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6a81);
        EXPECT(gbc.pc(), 0x6e10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 017A
        gbc.setState(0x4673, 0xbcb4, 0xf2a0, 0xcd9, 0x5733, 0xa31f, 0x1, 0x1);
        gbc.writeMem(0x4673, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xbcb4);
        EXPECT(gbc.pc(), 0x4674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 017B
        gbc.setState(0x7adb, 0x5eed, 0x2e90, 0x4710, 0x2c50, 0x2bab, 0x0, 0x0);
        gbc.writeMem(0x7adb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5eed);
        EXPECT(gbc.pc(), 0x7adc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 017C
        gbc.setState(0x1942, 0xb4db, 0x78b0, 0x1fd0, 0x9235, 0x9491, 0x0, 0x0);
        gbc.writeMem(0x1942, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb4db);
        EXPECT(gbc.pc(), 0x1943);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 017D
        gbc.setState(0x3420, 0x4551, 0x56b0, 0x3f87, 0x3a4d, 0xe0aa, 0x0, 0x0);
        gbc.writeMem(0x3420, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4551);
        EXPECT(gbc.pc(), 0x3421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 017E
        gbc.setState(0xc1a0, 0x7a9, 0x7790, 0x9eed, 0x69aa, 0xf95e, 0x1, 0x1);
        gbc.writeMem(0xc1a0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7a9);
        EXPECT(gbc.pc(), 0xc1a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a0), 0x93);
        // 93 017F
        gbc.setState(0x8b7d, 0x8880, 0x97d0, 0x9940, 0x88e9, 0xe398, 0x0, 0x0);
        gbc.writeMem(0x8b7d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8880);
        EXPECT(gbc.pc(), 0x8b7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b7d), 0x93);
        // 93 0180
        gbc.setState(0xa804, 0xa46a, 0xae80, 0xa3b8, 0xb35d, 0x2cd5, 0x1, 0x0);
        gbc.writeMem(0xa804, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa46a);
        EXPECT(gbc.pc(), 0xa805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa804), 0x93);
        // 93 0181
        gbc.setState(0x5b03, 0x91de, 0x5930, 0x660b, 0x33f2, 0x3090, 0x0, 0x1);
        gbc.writeMem(0x5b03, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x91de);
        EXPECT(gbc.pc(), 0x5b04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0182
        gbc.setState(0xcd57, 0xd818, 0x870, 0xbd95, 0x6c9a, 0x9c88, 0x1, 0x1);
        gbc.writeMem(0xcd57, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd818);
        EXPECT(gbc.pc(), 0xcd58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd57), 0x93);
        // 93 0183
        gbc.setState(0xc32c, 0x70b2, 0xc4d0, 0xfb46, 0x4bd9, 0x7931, 0x1, 0x1);
        gbc.writeMem(0xc32c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x70b2);
        EXPECT(gbc.pc(), 0xc32d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc32c), 0x93);
        // 93 0184
        gbc.setState(0x94d4, 0xdbbe, 0xca70, 0xc17b, 0x4aa6, 0x55a4, 0x0, 0x1);
        gbc.writeMem(0x94d4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xdbbe);
        EXPECT(gbc.pc(), 0x94d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d4), 0x93);
        // 93 0185
        gbc.setState(0x21c9, 0xe287, 0x1a20, 0x89bb, 0x4b7e, 0x276c, 0x0, 0x1);
        gbc.writeMem(0x21c9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe287);
        EXPECT(gbc.pc(), 0x21ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0186
        gbc.setState(0x1c03, 0x2b00, 0xc7d0, 0xa9a6, 0x9927, 0x703c, 0x1, 0x0);
        gbc.writeMem(0x1c03, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2b00);
        EXPECT(gbc.pc(), 0x1c04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0187
        gbc.setState(0x2aae, 0x4d60, 0x52f0, 0xc767, 0xbe02, 0xc148, 0x0, 0x0);
        gbc.writeMem(0x2aae, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4d60);
        EXPECT(gbc.pc(), 0x2aaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0188
        gbc.setState(0x4f3f, 0xb027, 0xb090, 0x1292, 0xe70e, 0x3c5c, 0x0, 0x0);
        gbc.writeMem(0x4f3f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb027);
        EXPECT(gbc.pc(), 0x4f40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0189
        gbc.setState(0xb719, 0x34f4, 0x8220, 0x69c8, 0xc4c8, 0xef16, 0x1, 0x1);
        gbc.writeMem(0xb719, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x34f4);
        EXPECT(gbc.pc(), 0xb71a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb719), 0x93);
        // 93 018A
        gbc.setState(0xbd75, 0xade2, 0x9890, 0x1e66, 0x44e0, 0x34ba, 0x1, 0x1);
        gbc.writeMem(0xbd75, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xade2);
        EXPECT(gbc.pc(), 0xbd76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd75), 0x93);
        // 93 018C
        gbc.setState(0x4afd, 0xd0ef, 0x9b60, 0x1f07, 0xad2f, 0xc2ed, 0x1, 0x0);
        gbc.writeMem(0x4afd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd0ef);
        EXPECT(gbc.pc(), 0x4afe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 018D
        gbc.setState(0x8e9a, 0x57b5, 0x360, 0x8154, 0xe273, 0xc6db, 0x1, 0x1);
        gbc.writeMem(0x8e9a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x57b5);
        EXPECT(gbc.pc(), 0x8e9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e9a), 0x93);
        // 93 018E
        gbc.setState(0xb901, 0x46dd, 0x9650, 0x7de3, 0x7302, 0x57a6, 0x1, 0x1);
        gbc.writeMem(0xb901, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x46dd);
        EXPECT(gbc.pc(), 0xb902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb901), 0x93);
        // 93 0190
        gbc.setState(0x3b3d, 0x5877, 0x7c20, 0x4ce5, 0xd0e9, 0x4874, 0x0, 0x0);
        gbc.writeMem(0x3b3d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5877);
        EXPECT(gbc.pc(), 0x3b3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0191
        gbc.setState(0x5dba, 0x7607, 0x6d00, 0x2ea5, 0xd8c1, 0x6d5f, 0x0, 0x1);
        gbc.writeMem(0x5dba, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7607);
        EXPECT(gbc.pc(), 0x5dbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0192
        gbc.setState(0x3346, 0xe88f, 0xb3c0, 0x1fff, 0xa92b, 0xd6e2, 0x0, 0x0);
        gbc.writeMem(0x3346, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe88f);
        EXPECT(gbc.pc(), 0x3347);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0193
        gbc.setState(0xa9ae, 0xe722, 0x2b90, 0xc9fd, 0xabbe, 0xb6da, 0x0, 0x1);
        gbc.writeMem(0xa9ae, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe722);
        EXPECT(gbc.pc(), 0xa9af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ae), 0x93);
        // 93 0194
        gbc.setState(0x87f6, 0xb563, 0xbd50, 0xb0b2, 0x5469, 0xd393, 0x1, 0x1);
        gbc.writeMem(0x87f6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb563);
        EXPECT(gbc.pc(), 0x87f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f6), 0x93);
        // 93 0195
        gbc.setState(0x86f4, 0x2862, 0xc010, 0xbcd, 0x7f1a, 0x1249, 0x1, 0x0);
        gbc.writeMem(0x86f4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2862);
        EXPECT(gbc.pc(), 0x86f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f4), 0x93);
        // 93 0196
        gbc.setState(0x41bc, 0xd715, 0x500, 0x6bd0, 0x3286, 0x6740, 0x0, 0x1);
        gbc.writeMem(0x41bc, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd715);
        EXPECT(gbc.pc(), 0x41bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0197
        gbc.setState(0xbe42, 0xb4f8, 0xa300, 0xd0f7, 0x2093, 0xa85b, 0x0, 0x1);
        gbc.writeMem(0xbe42, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb4f8);
        EXPECT(gbc.pc(), 0xbe43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe42), 0x93);
        // 93 0198
        gbc.setState(0xc7c9, 0xf403, 0x8a80, 0xb78c, 0x437d, 0xb9c7, 0x1, 0x1);
        gbc.writeMem(0xc7c9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf403);
        EXPECT(gbc.pc(), 0xc7ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7c9), 0x93);
        // 93 0199
        gbc.setState(0x5d13, 0xd172, 0x1b20, 0xf656, 0xb797, 0xd6e9, 0x0, 0x1);
        gbc.writeMem(0x5d13, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd172);
        EXPECT(gbc.pc(), 0x5d14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 019A
        gbc.setState(0xc50a, 0xa695, 0xd7a0, 0xe887, 0x49db, 0xe305, 0x0, 0x1);
        gbc.writeMem(0xc50a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa695);
        EXPECT(gbc.pc(), 0xc50b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc50a), 0x93);
        // 93 019B
        gbc.setState(0x405c, 0x66b9, 0xd900, 0xa521, 0x7a21, 0x9961, 0x1, 0x1);
        gbc.writeMem(0x405c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x66b9);
        EXPECT(gbc.pc(), 0x405d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 019C
        gbc.setState(0x241e, 0xaf26, 0xc2a0, 0x3b1e, 0x9092, 0xb58f, 0x1, 0x0);
        gbc.writeMem(0x241e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xaf26);
        EXPECT(gbc.pc(), 0x241f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 019D
        gbc.setState(0x416c, 0x2db5, 0x98d0, 0x7038, 0xd967, 0x71, 0x0, 0x1);
        gbc.writeMem(0x416c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2db5);
        EXPECT(gbc.pc(), 0x416d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 019E
        gbc.setState(0x4f09, 0x2261, 0xf580, 0x7bdb, 0x533, 0xc9d9, 0x1, 0x1);
        gbc.writeMem(0x4f09, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2261);
        EXPECT(gbc.pc(), 0x4f0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 019F
        gbc.setState(0xa345, 0x1a11, 0x7df0, 0x5c94, 0xe155, 0x8d27, 0x0, 0x1);
        gbc.writeMem(0xa345, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1a11);
        EXPECT(gbc.pc(), 0xa346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa345), 0x93);
        // 93 01A0
        gbc.setState(0xa6e4, 0xe33e, 0x2c10, 0x7838, 0x449c, 0x9f86, 0x1, 0x0);
        gbc.writeMem(0xa6e4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe33e);
        EXPECT(gbc.pc(), 0xa6e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6e4), 0x93);
        // 93 01A1
        gbc.setState(0xb932, 0xe76, 0xa720, 0x28a2, 0x6237, 0x362f, 0x0, 0x1);
        gbc.writeMem(0xb932, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe76);
        EXPECT(gbc.pc(), 0xb933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb932), 0x93);
        // 93 01A2
        gbc.setState(0x446f, 0xc529, 0x5dd0, 0x3d55, 0xc882, 0x8e35, 0x1, 0x0);
        gbc.writeMem(0x446f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc529);
        EXPECT(gbc.pc(), 0x4470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 01A3
        gbc.setState(0x3cde, 0x9fc1, 0x71e0, 0x6ad1, 0x8f35, 0x41f0, 0x0, 0x1);
        gbc.writeMem(0x3cde, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9fc1);
        EXPECT(gbc.pc(), 0x3cdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 01A4
        gbc.setState(0xe536, 0xb530, 0x2cc0, 0x16b1, 0x4f68, 0xdfcc, 0x1, 0x0);
        gbc.writeMem(0xe536, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb530);
        EXPECT(gbc.pc(), 0xe537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe536), 0x93);
        // 93 01A5
        gbc.setState(0xcb31, 0xb8be, 0xa790, 0xdf8c, 0x43d9, 0xac4a, 0x1, 0x1);
        gbc.writeMem(0xcb31, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb8be);
        EXPECT(gbc.pc(), 0xcb32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb31), 0x93);
        // 93 01A6
        gbc.setState(0x2f47, 0xc5cf, 0x98e0, 0xbeaa, 0xf1d0, 0x8a82, 0x1, 0x0);
        gbc.writeMem(0x2f47, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc5cf);
        EXPECT(gbc.pc(), 0x2f48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 01A8
        gbc.setState(0x13ad, 0x29b0, 0xde0, 0xf5e5, 0x681, 0xef24, 0x1, 0x0);
        gbc.writeMem(0x13ad, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x29b0);
        EXPECT(gbc.pc(), 0x13ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 01A9
        gbc.setState(0x4858, 0x303a, 0xf240, 0x9f18, 0x9fa8, 0xe00b, 0x1, 0x1);
        gbc.writeMem(0x4858, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x303a);
        EXPECT(gbc.pc(), 0x4859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 01AA
        gbc.setState(0x9999, 0xf3e5, 0x87a0, 0x87f5, 0x3600, 0x2bd1, 0x0, 0x0);
        gbc.writeMem(0x9999, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf3e5);
        EXPECT(gbc.pc(), 0x999a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9999), 0x93);
        // 93 01AB
        gbc.setState(0xa5cb, 0x427b, 0x19c0, 0x2495, 0xd00b, 0x18d4, 0x0, 0x1);
        gbc.writeMem(0xa5cb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x427b);
        EXPECT(gbc.pc(), 0xa5cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5cb), 0x93);
        // 93 01AC
        gbc.setState(0x4b2c, 0xb879, 0xed00, 0x3c62, 0x7b9e, 0x26b, 0x0, 0x0);
        gbc.writeMem(0x4b2c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb879);
        EXPECT(gbc.pc(), 0x4b2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 01AD
        gbc.setState(0xcb25, 0x71c7, 0x7300, 0xd680, 0x58ae, 0x28f5, 0x0, 0x1);
        gbc.writeMem(0xcb25, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x71c7);
        EXPECT(gbc.pc(), 0xcb26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb25), 0x93);
        // 93 01AE
        gbc.setState(0xb83f, 0x28c6, 0x42b0, 0xbf5f, 0x5e7b, 0x8492, 0x0, 0x0);
        gbc.writeMem(0xb83f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x28c6);
        EXPECT(gbc.pc(), 0xb840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb83f), 0x93);
        // 93 01AF
        gbc.setState(0x962a, 0x2b82, 0x8a10, 0x3b4f, 0x373d, 0x1141, 0x0, 0x0);
        gbc.writeMem(0x962a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2b82);
        EXPECT(gbc.pc(), 0x962b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x962a), 0x93);
        // 93 01B0
        gbc.setState(0x7ee1, 0xf3c2, 0x2330, 0x973c, 0x2be, 0xe34a, 0x1, 0x1);
        gbc.writeMem(0x7ee1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf3c2);
        EXPECT(gbc.pc(), 0x7ee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 01B1
        gbc.setState(0x5c4, 0x20e1, 0x8270, 0x4aff, 0x141a, 0x73b0, 0x1, 0x1);
        gbc.writeMem(0x5c4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x20e1);
        EXPECT(gbc.pc(), 0x5c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 01B2
        gbc.setState(0xe622, 0xfaea, 0x20, 0xf5cb, 0x7c5, 0x6adc, 0x0, 0x1);
        gbc.writeMem(0xe622, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xfaea);
        EXPECT(gbc.pc(), 0xe623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe622), 0x93);
        // 93 01B3
        gbc.setState(0x608b, 0x6273, 0x62a0, 0x9b05, 0xd150, 0x99a3, 0x0, 0x0);
        gbc.writeMem(0x608b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6273);
        EXPECT(gbc.pc(), 0x608c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 01B5
        gbc.setState(0xc42c, 0x1e20, 0xa9f0, 0xdaba, 0x3d96, 0x3370, 0x0, 0x1);
        gbc.writeMem(0xc42c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x1e20);
        EXPECT(gbc.pc(), 0xc42d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc42c), 0x93);
        // 93 01B6
        gbc.setState(0xad5, 0xf077, 0xa280, 0x7d14, 0xc3, 0x392d, 0x1, 0x0);
        gbc.writeMem(0xad5, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf077);
        EXPECT(gbc.pc(), 0xad6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 01B7
        gbc.setState(0x6f1, 0x61a3, 0x19b0, 0x3f4b, 0xa716, 0x83d3, 0x0, 0x1);
        gbc.writeMem(0x6f1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x61a3);
        EXPECT(gbc.pc(), 0x6f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 01B8
        gbc.setState(0x1f90, 0xcd10, 0xb940, 0x8745, 0xa817, 0x4c0a, 0x1, 0x1);
        gbc.writeMem(0x1f90, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xcd10);
        EXPECT(gbc.pc(), 0x1f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 01B9
        gbc.setState(0x5ce, 0x5336, 0xc230, 0x61c0, 0xfb39, 0x444, 0x1, 0x0);
        gbc.writeMem(0x5ce, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5336);
        EXPECT(gbc.pc(), 0x5cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 01BB
        gbc.setState(0x9ae7, 0x68d7, 0xa860, 0x2a11, 0xfdba, 0x5669, 0x1, 0x0);
        gbc.writeMem(0x9ae7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x68d7);
        EXPECT(gbc.pc(), 0x9ae8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ae7), 0x93);
        // 93 01BC
        gbc.setState(0xcdb7, 0xa721, 0x74c0, 0xcc3f, 0x5e88, 0x63be, 0x0, 0x1);
        gbc.writeMem(0xcdb7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xa721);
        EXPECT(gbc.pc(), 0xcdb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb7), 0x93);
        // 93 01BD
        gbc.setState(0x21a, 0xaab, 0x5360, 0x663c, 0x3b67, 0x64db, 0x0, 0x1);
        gbc.writeMem(0x21a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xaab);
        EXPECT(gbc.pc(), 0x21b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 01BE
        gbc.setState(0x23a, 0x6dfa, 0xddd0, 0x653, 0x3589, 0x483d, 0x1, 0x0);
        gbc.writeMem(0x23a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6dfa);
        EXPECT(gbc.pc(), 0x23b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 01BF
        gbc.setState(0xc5bf, 0xdae6, 0xe30, 0x36f4, 0x9d8d, 0x8136, 0x1, 0x1);
        gbc.writeMem(0xc5bf, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xdae6);
        EXPECT(gbc.pc(), 0xc5c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5bf), 0x93);
        // 93 01C0
        gbc.setState(0x290b, 0xac5, 0x60e0, 0x61ac, 0x6b77, 0x259b, 0x1, 0x0);
        gbc.writeMem(0x290b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xac5);
        EXPECT(gbc.pc(), 0x290c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 01C1
        gbc.setState(0x359a, 0xd0b3, 0x9cd0, 0x168c, 0x5fa0, 0x58ef, 0x0, 0x1);
        gbc.writeMem(0x359a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd0b3);
        EXPECT(gbc.pc(), 0x359b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 01C2
        gbc.setState(0x3674, 0xaa5f, 0x3d30, 0xaca, 0x5411, 0xe2c4, 0x0, 0x1);
        gbc.writeMem(0x3674, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xaa5f);
        EXPECT(gbc.pc(), 0x3675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 01C3
        gbc.setState(0x7edd, 0x9d75, 0x9a60, 0xf11b, 0xd00a, 0xe9c3, 0x1, 0x0);
        gbc.writeMem(0x7edd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9d75);
        EXPECT(gbc.pc(), 0x7ede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 01C4
        gbc.setState(0xd623, 0xd7f4, 0x54c0, 0xa9b9, 0x2043, 0x1750, 0x1, 0x0);
        gbc.writeMem(0xd623, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd7f4);
        EXPECT(gbc.pc(), 0xd624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd623), 0x93);
        // 93 01C5
        gbc.setState(0xcf58, 0x1638, 0x35c0, 0x1575, 0x52fa, 0xda05, 0x0, 0x0);
        gbc.writeMem(0xcf58, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1638);
        EXPECT(gbc.pc(), 0xcf59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf58), 0x93);
        // 93 01C6
        gbc.setState(0x1223, 0x1307, 0xa90, 0x6c38, 0xd0a4, 0x6c9b, 0x0, 0x1);
        gbc.writeMem(0x1223, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1307);
        EXPECT(gbc.pc(), 0x1224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 01C7
        gbc.setState(0x2148, 0x6c49, 0xf0a0, 0x463f, 0x4146, 0x8ece, 0x1, 0x0);
        gbc.writeMem(0x2148, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6c49);
        EXPECT(gbc.pc(), 0x2149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 01C8
        gbc.setState(0x3602, 0x14af, 0xcdc0, 0x1d9d, 0xfeed, 0x1d51, 0x0, 0x0);
        gbc.writeMem(0x3602, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x14af);
        EXPECT(gbc.pc(), 0x3603);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 01C9
        gbc.setState(0x27e6, 0x20fa, 0x1f00, 0x616f, 0xfb30, 0x5b0, 0x0, 0x0);
        gbc.writeMem(0x27e6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x20fa);
        EXPECT(gbc.pc(), 0x27e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 01CA
        gbc.setState(0x1781, 0xe49e, 0x5d0, 0x68c9, 0x35e7, 0x31ac, 0x1, 0x1);
        gbc.writeMem(0x1781, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe49e);
        EXPECT(gbc.pc(), 0x1782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 01CC
        gbc.setState(0x59a4, 0x7255, 0x62a0, 0x9151, 0xbe86, 0xa1e1, 0x1, 0x1);
        gbc.writeMem(0x59a4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7255);
        EXPECT(gbc.pc(), 0x59a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 01CD
        gbc.setState(0x346f, 0xb43e, 0xaff0, 0x76aa, 0x8201, 0xa736, 0x0, 0x1);
        gbc.writeMem(0x346f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb43e);
        EXPECT(gbc.pc(), 0x3470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 01CE
        gbc.setState(0x4cee, 0xcd13, 0xa870, 0x4664, 0x9d0c, 0x4cd0, 0x0, 0x0);
        gbc.writeMem(0x4cee, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xcd13);
        EXPECT(gbc.pc(), 0x4cef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 01CF
        gbc.setState(0xb2e2, 0x81b5, 0x38d0, 0x3dbb, 0x4424, 0x4db0, 0x1, 0x0);
        gbc.writeMem(0xb2e2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x81b5);
        EXPECT(gbc.pc(), 0xb2e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e2), 0x93);
        // 93 01D0
        gbc.setState(0x248a, 0x6c9, 0xfbe0, 0x822e, 0x6865, 0xf4fd, 0x0, 0x1);
        gbc.writeMem(0x248a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6c9);
        EXPECT(gbc.pc(), 0x248b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 01D1
        gbc.setState(0x872c, 0x4651, 0x2a80, 0x10e7, 0x513, 0xce67, 0x1, 0x1);
        gbc.writeMem(0x872c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4651);
        EXPECT(gbc.pc(), 0x872d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x872c), 0x93);
        // 93 01D2
        gbc.setState(0x3bc1, 0x2106, 0xbc00, 0xa6bb, 0x4efb, 0xb0b8, 0x1, 0x0);
        gbc.writeMem(0x3bc1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2106);
        EXPECT(gbc.pc(), 0x3bc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 01D4
        gbc.setState(0xcf12, 0x4a15, 0x1e50, 0xa021, 0x9763, 0x2b29, 0x0, 0x0);
        gbc.writeMem(0xcf12, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4a15);
        EXPECT(gbc.pc(), 0xcf13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf12), 0x93);
        // 93 01D5
        gbc.setState(0x3c61, 0xbd44, 0x1870, 0x1aae, 0x8651, 0xb31, 0x0, 0x0);
        gbc.writeMem(0x3c61, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbd44);
        EXPECT(gbc.pc(), 0x3c62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 01D6
        gbc.setState(0xc4b, 0x2667, 0x3c30, 0xbbb3, 0xc47, 0x3aa0, 0x1, 0x1);
        gbc.writeMem(0xc4b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2667);
        EXPECT(gbc.pc(), 0xc4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 01D7
        gbc.setState(0x8d5d, 0xda5d, 0xdf80, 0xde3b, 0x1d5a, 0x1783, 0x1, 0x1);
        gbc.writeMem(0x8d5d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xda5d);
        EXPECT(gbc.pc(), 0x8d5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d5d), 0x93);
        // 93 01D8
        gbc.setState(0x2b29, 0x6975, 0x390, 0xc8c8, 0xe54c, 0x1d1d, 0x0, 0x0);
        gbc.writeMem(0x2b29, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6975);
        EXPECT(gbc.pc(), 0x2b2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 01D9
        gbc.setState(0x35e6, 0xbe32, 0x5fd0, 0xee8a, 0xaa28, 0x398d, 0x1, 0x0);
        gbc.writeMem(0x35e6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xbe32);
        EXPECT(gbc.pc(), 0x35e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 01DA
        gbc.setState(0x2df, 0x8182, 0xa990, 0xdcb4, 0x53cc, 0x2f19, 0x0, 0x0);
        gbc.writeMem(0x2df, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8182);
        EXPECT(gbc.pc(), 0x2e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 01DB
        gbc.setState(0x63e4, 0x5c91, 0x99d0, 0x446, 0x6491, 0x99b7, 0x0, 0x1);
        gbc.writeMem(0x63e4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5c91);
        EXPECT(gbc.pc(), 0x63e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 01DC
        gbc.setState(0xb644, 0x7824, 0x62b0, 0x14d4, 0xaee9, 0x89e6, 0x0, 0x0);
        gbc.writeMem(0xb644, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7824);
        EXPECT(gbc.pc(), 0xb645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb644), 0x93);
        // 93 01DD
        gbc.setState(0x575c, 0x1403, 0x7580, 0x5113, 0xed16, 0x3f0f, 0x0, 0x0);
        gbc.writeMem(0x575c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1403);
        EXPECT(gbc.pc(), 0x575d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 01DE
        gbc.setState(0x410a, 0xcfb1, 0xf8c0, 0x932, 0x6666, 0x6e7f, 0x0, 0x1);
        gbc.writeMem(0x410a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xcfb1);
        EXPECT(gbc.pc(), 0x410b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 01DF
        gbc.setState(0x458f, 0xa08, 0xaa0, 0x9197, 0x234d, 0x63dd, 0x0, 0x1);
        gbc.writeMem(0x458f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa08);
        EXPECT(gbc.pc(), 0x4590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 01E0
        gbc.setState(0xb425, 0xa17a, 0xbf50, 0x16c1, 0x5e3, 0xf641, 0x1, 0x1);
        gbc.writeMem(0xb425, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa17a);
        EXPECT(gbc.pc(), 0xb426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb425), 0x93);
        // 93 01E1
        gbc.setState(0x57de, 0x5720, 0x4cf0, 0x4dd5, 0x476, 0x65f9, 0x1, 0x0);
        gbc.writeMem(0x57de, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5720);
        EXPECT(gbc.pc(), 0x57df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 01E2
        gbc.setState(0x891d, 0xb261, 0xb200, 0xbeb1, 0xe1ab, 0x1e1, 0x1, 0x1);
        gbc.writeMem(0x891d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb261);
        EXPECT(gbc.pc(), 0x891e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x891d), 0x93);
        // 93 01E3
        gbc.setState(0x853c, 0x162a, 0x35e0, 0xd2f8, 0x5f5f, 0x1e24, 0x1, 0x0);
        gbc.writeMem(0x853c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x162a);
        EXPECT(gbc.pc(), 0x853d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x853c), 0x93);
        // 93 01E4
        gbc.setState(0x7206, 0x5a31, 0x3880, 0x4578, 0x8df8, 0xb1d2, 0x1, 0x0);
        gbc.writeMem(0x7206, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5a31);
        EXPECT(gbc.pc(), 0x7207);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 01E5
        gbc.setState(0x6ffa, 0xaf0e, 0x6680, 0x43c, 0x71e1, 0x73a6, 0x0, 0x0);
        gbc.writeMem(0x6ffa, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xaf0e);
        EXPECT(gbc.pc(), 0x6ffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 01E7
        gbc.setState(0xd2a6, 0xdc8d, 0x86a0, 0xb15, 0xe213, 0x24cb, 0x0, 0x0);
        gbc.writeMem(0xd2a6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xdc8d);
        EXPECT(gbc.pc(), 0xd2a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2a6), 0x93);
        // 93 01E8
        gbc.setState(0xa1b9, 0xba68, 0x7180, 0x8841, 0x5ae0, 0x846c, 0x0, 0x0);
        gbc.writeMem(0xa1b9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xba68);
        EXPECT(gbc.pc(), 0xa1ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b9), 0x93);
        // 93 01E9
        gbc.setState(0x9865, 0x4c27, 0x73f0, 0x3415, 0x674d, 0x2ab5, 0x0, 0x0);
        gbc.writeMem(0x9865, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4c27);
        EXPECT(gbc.pc(), 0x9866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9865), 0x93);
        // 93 01EA
        gbc.setState(0x455d, 0x7fc3, 0x3b60, 0x4ae7, 0x548, 0xc14e, 0x0, 0x0);
        gbc.writeMem(0x455d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7fc3);
        EXPECT(gbc.pc(), 0x455e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 01EC
        gbc.setState(0x91c3, 0x73ad, 0x5f00, 0x8d6e, 0x8985, 0xafec, 0x1, 0x0);
        gbc.writeMem(0x91c3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x73ad);
        EXPECT(gbc.pc(), 0x91c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c3), 0x93);
        // 93 01ED
        gbc.setState(0x393, 0xdd52, 0x8700, 0x8b9d, 0x4450, 0x12b2, 0x0, 0x1);
        gbc.writeMem(0x393, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xdd52);
        EXPECT(gbc.pc(), 0x394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 01EE
        gbc.setState(0x2da3, 0x1a73, 0xba10, 0x693c, 0x8737, 0x584f, 0x1, 0x0);
        gbc.writeMem(0x2da3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x1a73);
        EXPECT(gbc.pc(), 0x2da4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 01EF
        gbc.setState(0xa1fb, 0xe462, 0xccc0, 0xeefc, 0x3dcc, 0x3f7c, 0x1, 0x1);
        gbc.writeMem(0xa1fb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe462);
        EXPECT(gbc.pc(), 0xa1fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1fb), 0x93);
        // 93 01F0
        gbc.setState(0xb632, 0xc337, 0x1530, 0xadbc, 0x5a4e, 0xf7cf, 0x0, 0x0);
        gbc.writeMem(0xb632, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc337);
        EXPECT(gbc.pc(), 0xb633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb632), 0x93);
        // 93 01F1
        gbc.setState(0x89c3, 0x648c, 0x7410, 0xca54, 0x5b87, 0x976d, 0x0, 0x0);
        gbc.writeMem(0x89c3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x648c);
        EXPECT(gbc.pc(), 0x89c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89c3), 0x93);
        // 93 01F2
        gbc.setState(0x53da, 0x359f, 0x6c60, 0xae72, 0xefa4, 0x8992, 0x1, 0x1);
        gbc.writeMem(0x53da, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x359f);
        EXPECT(gbc.pc(), 0x53db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 01F3
        gbc.setState(0xd2e7, 0xd382, 0x3f90, 0xd74b, 0xc5c0, 0xb6fa, 0x1, 0x1);
        gbc.writeMem(0xd2e7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd382);
        EXPECT(gbc.pc(), 0xd2e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2e7), 0x93);
        // 93 01F4
        gbc.setState(0xeead, 0x1152, 0x6f60, 0x4315, 0x3318, 0xb7b0, 0x0, 0x0);
        gbc.writeMem(0xeead, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1152);
        EXPECT(gbc.pc(), 0xeeae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeead), 0x93);
        // 93 01F5
        gbc.setState(0xcd81, 0xedbb, 0xcee0, 0x56c4, 0x7be5, 0xb7c3, 0x1, 0x0);
        gbc.writeMem(0xcd81, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xedbb);
        EXPECT(gbc.pc(), 0xcd82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd81), 0x93);
        // 93 01F6
        gbc.setState(0x8ca, 0xa9b4, 0xb430, 0x4c48, 0xf021, 0x31b3, 0x1, 0x0);
        gbc.writeMem(0x8ca, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa9b4);
        EXPECT(gbc.pc(), 0x8cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 01F7
        gbc.setState(0xecb0, 0xc06c, 0x2860, 0x7c5f, 0xd49b, 0x5505, 0x0, 0x1);
        gbc.writeMem(0xecb0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc06c);
        EXPECT(gbc.pc(), 0xecb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecb0), 0x93);
        // 93 01F8
        gbc.setState(0x8b2d, 0xc2ee, 0xf410, 0xb932, 0x130d, 0xe8f7, 0x1, 0x1);
        gbc.writeMem(0x8b2d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc2ee);
        EXPECT(gbc.pc(), 0x8b2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b2d), 0x93);
        // 93 01F9
        gbc.setState(0xa86f, 0xeb6a, 0xacb0, 0x4fb3, 0x8c95, 0x8bab, 0x0, 0x0);
        gbc.writeMem(0xa86f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xeb6a);
        EXPECT(gbc.pc(), 0xa870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa86f), 0x93);
        // 93 01FA
        gbc.setState(0x364e, 0x4171, 0x6390, 0xe298, 0x89f9, 0xbfdf, 0x0, 0x0);
        gbc.writeMem(0x364e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4171);
        EXPECT(gbc.pc(), 0x364f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 01FB
        gbc.setState(0x525d, 0xd570, 0x1dc0, 0xd05b, 0xdf5b, 0x7846, 0x0, 0x0);
        gbc.writeMem(0x525d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd570);
        EXPECT(gbc.pc(), 0x525e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 01FC
        gbc.setState(0xc6ae, 0x866d, 0x3b40, 0x9951, 0xffdc, 0x3c3b, 0x0, 0x0);
        gbc.writeMem(0xc6ae, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x866d);
        EXPECT(gbc.pc(), 0xc6af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ae), 0x93);
        // 93 01FF
        gbc.setState(0x8523, 0x1f01, 0x7b80, 0x1a9c, 0xd4ec, 0xebb5, 0x1, 0x1);
        gbc.writeMem(0x8523, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1f01);
        EXPECT(gbc.pc(), 0x8524);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8523), 0x93);
        // 93 0200
        gbc.setState(0x6d4e, 0x8f1f, 0x5a00, 0xe030, 0x10fe, 0x336b, 0x0, 0x1);
        gbc.writeMem(0x6d4e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8f1f);
        EXPECT(gbc.pc(), 0x6d4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0201
        gbc.setState(0xb4a3, 0xa361, 0x7270, 0x1363, 0xb5e9, 0x3105, 0x1, 0x0);
        gbc.writeMem(0xb4a3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa361);
        EXPECT(gbc.pc(), 0xb4a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4a3), 0x93);
        // 93 0202
        gbc.setState(0xea40, 0xe1d2, 0xfe10, 0xeb4f, 0x5990, 0x7a6c, 0x1, 0x0);
        gbc.writeMem(0xea40, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe1d2);
        EXPECT(gbc.pc(), 0xea41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea40), 0x93);
        // 93 0203
        gbc.setState(0x8119, 0x8b0b, 0x6900, 0xde8a, 0x7b3, 0x3dfe, 0x0, 0x0);
        gbc.writeMem(0x8119, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8b0b);
        EXPECT(gbc.pc(), 0x811a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8119), 0x93);
        // 93 0204
        gbc.setState(0x125f, 0x15c8, 0x3cf0, 0xf6e, 0x2981, 0x5020, 0x1, 0x1);
        gbc.writeMem(0x125f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x15c8);
        EXPECT(gbc.pc(), 0x1260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0206
        gbc.setState(0xbb77, 0x5434, 0xfb10, 0x8dae, 0x3298, 0x8b93, 0x1, 0x1);
        gbc.writeMem(0xbb77, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5434);
        EXPECT(gbc.pc(), 0xbb78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb77), 0x93);
        // 93 0207
        gbc.setState(0x4d52, 0xc1a9, 0x9920, 0x5479, 0x7610, 0xa95e, 0x1, 0x0);
        gbc.writeMem(0x4d52, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc1a9);
        EXPECT(gbc.pc(), 0x4d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0208
        gbc.setState(0x7bb1, 0xd357, 0x30d0, 0xdd3a, 0x430d, 0x3e69, 0x0, 0x0);
        gbc.writeMem(0x7bb1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd357);
        EXPECT(gbc.pc(), 0x7bb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0209
        gbc.setState(0x8a46, 0xecba, 0xa220, 0x3772, 0x6e4e, 0x446, 0x0, 0x0);
        gbc.writeMem(0x8a46, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xecba);
        EXPECT(gbc.pc(), 0x8a47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a46), 0x93);
        // 93 020A
        gbc.setState(0xe2ae, 0x2644, 0x8d90, 0x5970, 0xa2a2, 0x781d, 0x0, 0x1);
        gbc.writeMem(0xe2ae, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2644);
        EXPECT(gbc.pc(), 0xe2af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ae), 0x93);
        // 93 020B
        gbc.setState(0x8132, 0x5e71, 0x4020, 0xb719, 0x70db, 0xf4cf, 0x0, 0x0);
        gbc.writeMem(0x8132, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5e71);
        EXPECT(gbc.pc(), 0x8133);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8132), 0x93);
        // 93 020C
        gbc.setState(0x4905, 0xe29f, 0x7770, 0xf9ad, 0xc306, 0xe659, 0x0, 0x0);
        gbc.writeMem(0x4905, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe29f);
        EXPECT(gbc.pc(), 0x4906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 020D
        gbc.setState(0x6cf2, 0x511f, 0x9c60, 0xac4, 0x6c40, 0xcb2, 0x1, 0x0);
        gbc.writeMem(0x6cf2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x511f);
        EXPECT(gbc.pc(), 0x6cf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 020E
        gbc.setState(0x9a7f, 0x4ba1, 0x1a50, 0x3bb8, 0xfc55, 0xeaa1, 0x1, 0x0);
        gbc.writeMem(0x9a7f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4ba1);
        EXPECT(gbc.pc(), 0x9a80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a7f), 0x93);
        // 93 020F
        gbc.setState(0x7338, 0xf2dc, 0xc2d0, 0xf6e7, 0x2989, 0xbaa4, 0x1, 0x0);
        gbc.writeMem(0x7338, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf2dc);
        EXPECT(gbc.pc(), 0x7339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0210
        gbc.setState(0x9a36, 0x5824, 0xeb20, 0x4097, 0x68be, 0x86e5, 0x0, 0x1);
        gbc.writeMem(0x9a36, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5824);
        EXPECT(gbc.pc(), 0x9a37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a36), 0x93);
        // 93 0211
        gbc.setState(0x7799, 0xfc88, 0xe570, 0x1ded, 0x15f8, 0x9027, 0x1, 0x0);
        gbc.writeMem(0x7799, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xfc88);
        EXPECT(gbc.pc(), 0x779a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0212
        gbc.setState(0xa1f7, 0x87bb, 0x5ef0, 0x978, 0x40cf, 0x6f70, 0x1, 0x0);
        gbc.writeMem(0xa1f7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x87bb);
        EXPECT(gbc.pc(), 0xa1f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f7), 0x93);
        // 93 0213
        gbc.setState(0x9c75, 0x21c1, 0x5bb0, 0x8055, 0xbaa, 0xd17b, 0x0, 0x0);
        gbc.writeMem(0x9c75, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x21c1);
        EXPECT(gbc.pc(), 0x9c76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c75), 0x93);
        // 93 0214
        gbc.setState(0xa75d, 0xe4b1, 0xe970, 0xce48, 0xc645, 0xd6a5, 0x1, 0x1);
        gbc.writeMem(0xa75d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe4b1);
        EXPECT(gbc.pc(), 0xa75e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa75d), 0x93);
        // 93 0216
        gbc.setState(0x7066, 0xf219, 0x2890, 0x3494, 0xdca5, 0x28d5, 0x0, 0x1);
        gbc.writeMem(0x7066, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf219);
        EXPECT(gbc.pc(), 0x7067);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0217
        gbc.setState(0xdd9c, 0x93f3, 0xedd0, 0x6f1d, 0x6106, 0xf1bc, 0x1, 0x1);
        gbc.writeMem(0xdd9c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x93f3);
        EXPECT(gbc.pc(), 0xdd9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd9c), 0x93);
        // 93 0218
        gbc.setState(0xc74f, 0x4fa7, 0xd1e0, 0x19f3, 0x47cb, 0x44a4, 0x1, 0x0);
        gbc.writeMem(0xc74f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4fa7);
        EXPECT(gbc.pc(), 0xc750);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc74f), 0x93);
        // 93 0219
        gbc.setState(0xc1f2, 0x694d, 0x1550, 0x6f1, 0xf58c, 0x4ed6, 0x1, 0x1);
        gbc.writeMem(0xc1f2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x694d);
        EXPECT(gbc.pc(), 0xc1f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1f2), 0x93);
        // 93 021A
        gbc.setState(0xe81, 0x94f2, 0x44b0, 0x505d, 0x78d1, 0x89fb, 0x1, 0x1);
        gbc.writeMem(0xe81, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x94f2);
        EXPECT(gbc.pc(), 0xe82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 021D
        gbc.setState(0x83d3, 0x119d, 0xb7a0, 0x254f, 0x4d26, 0xb75f, 0x0, 0x0);
        gbc.writeMem(0x83d3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x119d);
        EXPECT(gbc.pc(), 0x83d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83d3), 0x93);
        // 93 021E
        gbc.setState(0x801f, 0xc5b, 0xbe50, 0x9e02, 0xbe38, 0xaa, 0x1, 0x1);
        gbc.writeMem(0x801f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc5b);
        EXPECT(gbc.pc(), 0x8020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x801f), 0x93);
        // 93 021F
        gbc.setState(0x5aad, 0x4894, 0x7020, 0x15c5, 0xe6b1, 0x9dc0, 0x1, 0x1);
        gbc.writeMem(0x5aad, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4894);
        EXPECT(gbc.pc(), 0x5aae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0220
        gbc.setState(0xc77d, 0xa107, 0x2420, 0x25be, 0x1b9d, 0x5351, 0x1, 0x1);
        gbc.writeMem(0xc77d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa107);
        EXPECT(gbc.pc(), 0xc77e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc77d), 0x93);
        // 93 0221
        gbc.setState(0x13b2, 0xbe2e, 0x6b90, 0x9085, 0xe3e1, 0xdebf, 0x0, 0x0);
        gbc.writeMem(0x13b2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xbe2e);
        EXPECT(gbc.pc(), 0x13b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0222
        gbc.setState(0x6146, 0x1ebe, 0x8cc0, 0xf0f2, 0x1a6b, 0xb144, 0x1, 0x0);
        gbc.writeMem(0x6146, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1ebe);
        EXPECT(gbc.pc(), 0x6147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0223
        gbc.setState(0xb0d2, 0xf885, 0x5c10, 0xefc9, 0x7392, 0x2e43, 0x0, 0x1);
        gbc.writeMem(0xb0d2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf885);
        EXPECT(gbc.pc(), 0xb0d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0d2), 0x93);
        // 93 0224
        gbc.setState(0xa149, 0x90f4, 0x9020, 0x6e13, 0xe4ba, 0x930, 0x0, 0x0);
        gbc.writeMem(0xa149, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x90f4);
        EXPECT(gbc.pc(), 0xa14a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa149), 0x93);
        // 93 0225
        gbc.setState(0xda2a, 0xf148, 0x8990, 0xae02, 0x8558, 0x58d1, 0x0, 0x0);
        gbc.writeMem(0xda2a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf148);
        EXPECT(gbc.pc(), 0xda2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda2a), 0x93);
        // 93 0226
        gbc.setState(0x7b2a, 0xbed1, 0x2ee0, 0xe7e0, 0x1ba7, 0xea15, 0x0, 0x0);
        gbc.writeMem(0x7b2a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbed1);
        EXPECT(gbc.pc(), 0x7b2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0227
        gbc.setState(0x2239, 0x4f84, 0xad30, 0x46f5, 0x214a, 0x9fb6, 0x1, 0x1);
        gbc.writeMem(0x2239, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4f84);
        EXPECT(gbc.pc(), 0x223a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0228
        gbc.setState(0xb945, 0xd8fc, 0x8040, 0xbef8, 0x648, 0x3544, 0x1, 0x0);
        gbc.writeMem(0xb945, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd8fc);
        EXPECT(gbc.pc(), 0xb946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb945), 0x93);
        // 93 0229
        gbc.setState(0x641, 0x4ff0, 0xbb20, 0xc524, 0x4962, 0x5dcd, 0x1, 0x0);
        gbc.writeMem(0x641, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4ff0);
        EXPECT(gbc.pc(), 0x642);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 022A
        gbc.setState(0xdee7, 0xe664, 0xbf0, 0x9328, 0xaad2, 0xf1a1, 0x0, 0x1);
        gbc.writeMem(0xdee7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe664);
        EXPECT(gbc.pc(), 0xdee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdee7), 0x93);
        // 93 022B
        gbc.setState(0xdb30, 0xc96a, 0xd6e0, 0xf83b, 0xb918, 0xf8e7, 0x1, 0x1);
        gbc.writeMem(0xdb30, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc96a);
        EXPECT(gbc.pc(), 0xdb31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb30), 0x93);
        // 93 022C
        gbc.setState(0x3e34, 0xa647, 0x7de0, 0x86e0, 0x1700, 0x7e6c, 0x1, 0x1);
        gbc.writeMem(0x3e34, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa647);
        EXPECT(gbc.pc(), 0x3e35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 022D
        gbc.setState(0x6c14, 0xc335, 0xb0b0, 0x2e8c, 0x4d61, 0x805, 0x1, 0x1);
        gbc.writeMem(0x6c14, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc335);
        EXPECT(gbc.pc(), 0x6c15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 022E
        gbc.setState(0xad36, 0x58, 0x79f0, 0xcada, 0xf769, 0x75c8, 0x1, 0x0);
        gbc.writeMem(0xad36, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x58);
        EXPECT(gbc.pc(), 0xad37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad36), 0x93);
        // 93 022F
        gbc.setState(0x9419, 0x570a, 0x5ce0, 0x1f2c, 0x5ae4, 0x97fc, 0x1, 0x1);
        gbc.writeMem(0x9419, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x570a);
        EXPECT(gbc.pc(), 0x941a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9419), 0x93);
        // 93 0230
        gbc.setState(0x4b60, 0xfa0d, 0x6b30, 0x7ab7, 0x7c48, 0x2102, 0x0, 0x0);
        gbc.writeMem(0x4b60, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xfa0d);
        EXPECT(gbc.pc(), 0x4b61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0231
        gbc.setState(0xd448, 0xe34d, 0x2070, 0x630e, 0xdfc, 0xd49e, 0x0, 0x1);
        gbc.writeMem(0xd448, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe34d);
        EXPECT(gbc.pc(), 0xd449);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd448), 0x93);
        // 93 0232
        gbc.setState(0xaa89, 0x8a74, 0x8480, 0x5eaf, 0xa253, 0x3921, 0x1, 0x1);
        gbc.writeMem(0xaa89, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8a74);
        EXPECT(gbc.pc(), 0xaa8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa89), 0x93);
        // 93 0233
        gbc.setState(0x5a09, 0xf140, 0xadf0, 0x7ca0, 0xe8e9, 0xf6da, 0x1, 0x1);
        gbc.writeMem(0x5a09, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf140);
        EXPECT(gbc.pc(), 0x5a0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0234
        gbc.setState(0x8e76, 0x27f6, 0x7680, 0xa514, 0x1ffb, 0x9e43, 0x1, 0x0);
        gbc.writeMem(0x8e76, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x27f6);
        EXPECT(gbc.pc(), 0x8e77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e76), 0x93);
        // 93 0235
        gbc.setState(0xb6a0, 0x8fdb, 0x5ba0, 0x45aa, 0xea30, 0x390e, 0x1, 0x1);
        gbc.writeMem(0xb6a0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8fdb);
        EXPECT(gbc.pc(), 0xb6a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6a0), 0x93);
        // 93 0236
        gbc.setState(0x372d, 0x7cca, 0x16b0, 0x96ae, 0xa907, 0x3d3a, 0x1, 0x1);
        gbc.writeMem(0x372d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7cca);
        EXPECT(gbc.pc(), 0x372e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0237
        gbc.setState(0x5ec4, 0xeda6, 0xc710, 0x41d9, 0x6358, 0xea9a, 0x0, 0x1);
        gbc.writeMem(0x5ec4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xeda6);
        EXPECT(gbc.pc(), 0x5ec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0239
        gbc.setState(0x5fa0, 0x122c, 0x8960, 0x7cf8, 0x3181, 0xcad6, 0x1, 0x1);
        gbc.writeMem(0x5fa0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x122c);
        EXPECT(gbc.pc(), 0x5fa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 023A
        gbc.setState(0x449a, 0xb800, 0x3740, 0xd854, 0x33db, 0x4f6d, 0x0, 0x0);
        gbc.writeMem(0x449a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb800);
        EXPECT(gbc.pc(), 0x449b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 023B
        gbc.setState(0xb3f5, 0x3714, 0xb6f0, 0x1e8c, 0x9d74, 0x304d, 0x1, 0x0);
        gbc.writeMem(0xb3f5, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3714);
        EXPECT(gbc.pc(), 0xb3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3f5), 0x93);
        // 93 023C
        gbc.setState(0x5089, 0xe502, 0x10d0, 0x51bc, 0xd61c, 0x2fbc, 0x1, 0x0);
        gbc.writeMem(0x5089, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe502);
        EXPECT(gbc.pc(), 0x508a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 023E
        gbc.setState(0x126a, 0xcb72, 0xbde0, 0xa026, 0x6ae0, 0x802a, 0x0, 0x0);
        gbc.writeMem(0x126a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xcb72);
        EXPECT(gbc.pc(), 0x126b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 023F
        gbc.setState(0x3b6d, 0x2134, 0xe680, 0x8545, 0x62e9, 0x1195, 0x1, 0x1);
        gbc.writeMem(0x3b6d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2134);
        EXPECT(gbc.pc(), 0x3b6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0240
        gbc.setState(0x2075, 0x2933, 0xb1e0, 0x3256, 0xac2d, 0x2f2d, 0x1, 0x0);
        gbc.writeMem(0x2075, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2933);
        EXPECT(gbc.pc(), 0x2076);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0241
        gbc.setState(0xe3a1, 0x3a07, 0xee50, 0x7c6, 0xfca3, 0x690c, 0x0, 0x1);
        gbc.writeMem(0xe3a1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3a07);
        EXPECT(gbc.pc(), 0xe3a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3a1), 0x93);
        // 93 0243
        gbc.setState(0xd111, 0x50ff, 0xddb0, 0xe71f, 0xfd8, 0x644a, 0x1, 0x1);
        gbc.writeMem(0xd111, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x50ff);
        EXPECT(gbc.pc(), 0xd112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd111), 0x93);
        // 93 0244
        gbc.setState(0x80ea, 0xabc8, 0xf070, 0xb508, 0xb27d, 0xfa3a, 0x1, 0x1);
        gbc.writeMem(0x80ea, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xabc8);
        EXPECT(gbc.pc(), 0x80eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ea), 0x93);
        // 93 0245
        gbc.setState(0xb5af, 0xc0, 0x7140, 0x40b4, 0x251c, 0x7f33, 0x1, 0x0);
        gbc.writeMem(0xb5af, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc0);
        EXPECT(gbc.pc(), 0xb5b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5af), 0x93);
        // 93 0246
        gbc.setState(0x7bcc, 0x345b, 0xfb70, 0x4ea1, 0x986e, 0x4b9e, 0x1, 0x0);
        gbc.writeMem(0x7bcc, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x345b);
        EXPECT(gbc.pc(), 0x7bcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0247
        gbc.setState(0x657, 0xb4f8, 0xb010, 0x18ac, 0x6120, 0xa0e0, 0x1, 0x0);
        gbc.writeMem(0x657, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb4f8);
        EXPECT(gbc.pc(), 0x658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0248
        gbc.setState(0x729f, 0x7df, 0xf0e0, 0x5328, 0xd304, 0x92c6, 0x0, 0x1);
        gbc.writeMem(0x729f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7df);
        EXPECT(gbc.pc(), 0x72a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0249
        gbc.setState(0x4bd8, 0x7494, 0x810, 0xa9c7, 0x57dc, 0xe0ef, 0x1, 0x1);
        gbc.writeMem(0x4bd8, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x7494);
        EXPECT(gbc.pc(), 0x4bd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 024A
        gbc.setState(0x1fda, 0x7e20, 0x4c0, 0x4993, 0x195d, 0xbc25, 0x0, 0x0);
        gbc.writeMem(0x1fda, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7e20);
        EXPECT(gbc.pc(), 0x1fdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 024B
        gbc.setState(0x4f11, 0x3f3, 0x6cb0, 0xd18, 0xa6b9, 0x89c4, 0x0, 0x0);
        gbc.writeMem(0x4f11, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3f3);
        EXPECT(gbc.pc(), 0x4f12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 024C
        gbc.setState(0xe991, 0x3a88, 0x7450, 0x870, 0xf803, 0x9ab9, 0x1, 0x0);
        gbc.writeMem(0xe991, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3a88);
        EXPECT(gbc.pc(), 0xe992);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe991), 0x93);
        // 93 024D
        gbc.setState(0xea, 0x92ea, 0x460, 0x8bc9, 0xa9d0, 0x1746, 0x1, 0x0);
        gbc.writeMem(0xea, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x92ea);
        EXPECT(gbc.pc(), 0xeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 024E
        gbc.setState(0x66a, 0x3f9e, 0xcd20, 0x4f24, 0xa146, 0xf943, 0x0, 0x1);
        gbc.writeMem(0x66a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3f9e);
        EXPECT(gbc.pc(), 0x66b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 024F
        gbc.setState(0x50f4, 0x89a5, 0xb870, 0xe0d, 0xb201, 0x4a5e, 0x1, 0x0);
        gbc.writeMem(0x50f4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x89a5);
        EXPECT(gbc.pc(), 0x50f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0250
        gbc.setState(0xd047, 0x982c, 0x75d0, 0xfe94, 0xec60, 0xf072, 0x1, 0x1);
        gbc.writeMem(0xd047, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x982c);
        EXPECT(gbc.pc(), 0xd048);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd047), 0x93);
        // 93 0251
        gbc.setState(0xc3ba, 0xab69, 0x7dd0, 0x8600, 0x7a1a, 0x601, 0x1, 0x0);
        gbc.writeMem(0xc3ba, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xab69);
        EXPECT(gbc.pc(), 0xc3bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ba), 0x93);
        // 93 0252
        gbc.setState(0x83e1, 0x1c6f, 0xd40, 0xd9a8, 0xcaba, 0x47f, 0x1, 0x0);
        gbc.writeMem(0x83e1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1c6f);
        EXPECT(gbc.pc(), 0x83e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83e1), 0x93);
        // 93 0253
        gbc.setState(0xbd8e, 0xf8af, 0xc7c0, 0xf824, 0xc015, 0xc8d5, 0x1, 0x1);
        gbc.writeMem(0xbd8e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf8af);
        EXPECT(gbc.pc(), 0xbd8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd8e), 0x93);
        // 93 0254
        gbc.setState(0x51dd, 0xa191, 0x2060, 0xf84e, 0x44e4, 0xfa7d, 0x0, 0x0);
        gbc.writeMem(0x51dd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa191);
        EXPECT(gbc.pc(), 0x51de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0255
        gbc.setState(0x8b60, 0x5236, 0x4a50, 0x9079, 0x3261, 0x24c0, 0x0, 0x1);
        gbc.writeMem(0x8b60, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5236);
        EXPECT(gbc.pc(), 0x8b61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b60), 0x93);
        // 93 0256
        gbc.setState(0x5189, 0x2e20, 0x8e40, 0xe15f, 0x3990, 0xe6ab, 0x1, 0x0);
        gbc.writeMem(0x5189, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2e20);
        EXPECT(gbc.pc(), 0x518a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0257
        gbc.setState(0x3f0, 0xac82, 0x5f50, 0x5a6, 0x3637, 0x6b04, 0x0, 0x1);
        gbc.writeMem(0x3f0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xac82);
        EXPECT(gbc.pc(), 0x3f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0258
        gbc.setState(0x2207, 0x3e13, 0xe350, 0xd82, 0x67b1, 0xd702, 0x1, 0x1);
        gbc.writeMem(0x2207, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3e13);
        EXPECT(gbc.pc(), 0x2208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0259
        gbc.setState(0xd116, 0x26f2, 0x1310, 0xd8b2, 0xe989, 0xfee5, 0x0, 0x0);
        gbc.writeMem(0xd116, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x26f2);
        EXPECT(gbc.pc(), 0xd117);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd116), 0x93);
        // 93 025A
        gbc.setState(0x8b4a, 0xed1, 0x5990, 0xbec2, 0xb292, 0x341e, 0x0, 0x0);
        gbc.writeMem(0x8b4a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xed1);
        EXPECT(gbc.pc(), 0x8b4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b4a), 0x93);
        // 93 025B
        gbc.setState(0x208c, 0x9c3e, 0x280, 0x61c5, 0xadb9, 0x6eae, 0x1, 0x0);
        gbc.writeMem(0x208c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9c3e);
        EXPECT(gbc.pc(), 0x208d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 025C
        gbc.setState(0xda29, 0x37d3, 0x7450, 0x6f9e, 0x5c3e, 0xa21d, 0x0, 0x0);
        gbc.writeMem(0xda29, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x37d3);
        EXPECT(gbc.pc(), 0xda2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda29), 0x93);
        // 93 025D
        gbc.setState(0x1c9, 0xee06, 0x5e80, 0xebaf, 0xa493, 0x3f37, 0x1, 0x0);
        gbc.writeMem(0x1c9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xee06);
        EXPECT(gbc.pc(), 0x1ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 025E
        gbc.setState(0xb8bd, 0xd71f, 0x8430, 0xc271, 0x6dd7, 0x454a, 0x1, 0x1);
        gbc.writeMem(0xb8bd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd71f);
        EXPECT(gbc.pc(), 0xb8be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8bd), 0x93);
        // 93 025F
        gbc.setState(0xeadc, 0xc1d1, 0x5dd0, 0x343, 0x4d81, 0x3800, 0x1, 0x1);
        gbc.writeMem(0xeadc, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc1d1);
        EXPECT(gbc.pc(), 0xeadd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeadc), 0x93);
        // 93 0261
        gbc.setState(0xd096, 0x4123, 0x7b70, 0x15fe, 0xc1cd, 0x3ff2, 0x0, 0x1);
        gbc.writeMem(0xd096, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x4123);
        EXPECT(gbc.pc(), 0xd097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd096), 0x93);
        // 93 0263
        gbc.setState(0xcd3f, 0xadf6, 0x1300, 0xae9d, 0xf108, 0xf9a, 0x1, 0x1);
        gbc.writeMem(0xcd3f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xadf6);
        EXPECT(gbc.pc(), 0xcd40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3f), 0x93);
        // 93 0264
        gbc.setState(0x2660, 0x9775, 0xad90, 0x4682, 0xd540, 0x2304, 0x1, 0x0);
        gbc.writeMem(0x2660, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9775);
        EXPECT(gbc.pc(), 0x2661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0265
        gbc.setState(0x189d, 0x6a, 0xdcd0, 0x8786, 0xe6fd, 0xb5da, 0x1, 0x1);
        gbc.writeMem(0x189d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6a);
        EXPECT(gbc.pc(), 0x189e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0266
        gbc.setState(0x1032, 0xcb89, 0xe0f0, 0xbfa, 0xc31, 0x9de3, 0x1, 0x0);
        gbc.writeMem(0x1032, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xcb89);
        EXPECT(gbc.pc(), 0x1033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0267
        gbc.setState(0x3c42, 0xe578, 0x3eb0, 0xdbc7, 0x8a29, 0xc0bd, 0x0, 0x1);
        gbc.writeMem(0x3c42, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe578);
        EXPECT(gbc.pc(), 0x3c43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0268
        gbc.setState(0x38fd, 0x9889, 0xc10, 0xa941, 0xee18, 0x8ce4, 0x0, 0x0);
        gbc.writeMem(0x38fd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9889);
        EXPECT(gbc.pc(), 0x38fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0269
        gbc.setState(0x2e81, 0xb400, 0x7f80, 0x8994, 0x5615, 0xccc8, 0x0, 0x0);
        gbc.writeMem(0x2e81, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb400);
        EXPECT(gbc.pc(), 0x2e82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 026A
        gbc.setState(0x26b8, 0xe9e8, 0xc750, 0x79c1, 0xccb0, 0xdc8f, 0x1, 0x1);
        gbc.writeMem(0x26b8, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe9e8);
        EXPECT(gbc.pc(), 0x26b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 026B
        gbc.setState(0x25aa, 0x9af4, 0xcef0, 0x7e61, 0x56e1, 0xc9fc, 0x0, 0x1);
        gbc.writeMem(0x25aa, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9af4);
        EXPECT(gbc.pc(), 0x25ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 026C
        gbc.setState(0x89a6, 0x772a, 0x4860, 0x4b60, 0xe34c, 0x3433, 0x0, 0x0);
        gbc.writeMem(0x89a6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x772a);
        EXPECT(gbc.pc(), 0x89a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89a6), 0x93);
        // 93 026F
        gbc.setState(0xe969, 0x3c90, 0x43a0, 0x1371, 0x8a09, 0x8aba, 0x0, 0x1);
        gbc.writeMem(0xe969, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3c90);
        EXPECT(gbc.pc(), 0xe96a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe969), 0x93);
        // 93 0270
        gbc.setState(0xc2f5, 0x3fc7, 0xe410, 0xcb2, 0x3a38, 0x4f42, 0x0, 0x0);
        gbc.writeMem(0xc2f5, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3fc7);
        EXPECT(gbc.pc(), 0xc2f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2f5), 0x93);
        // 93 0271
        gbc.setState(0xe28, 0xca7d, 0xa030, 0xa1e5, 0x351, 0xeb2a, 0x0, 0x1);
        gbc.writeMem(0xe28, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xca7d);
        EXPECT(gbc.pc(), 0xe29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0272
        gbc.setState(0x9ae5, 0x65b9, 0x42f0, 0x5f07, 0xa832, 0x745d, 0x1, 0x1);
        gbc.writeMem(0x9ae5, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x65b9);
        EXPECT(gbc.pc(), 0x9ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ae5), 0x93);
        // 93 0273
        gbc.setState(0xb5c0, 0xac02, 0x85c0, 0x5053, 0x62f5, 0x5e53, 0x0, 0x0);
        gbc.writeMem(0xb5c0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xac02);
        EXPECT(gbc.pc(), 0xb5c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5c0), 0x93);
        // 93 0274
        gbc.setState(0x9317, 0x7dc1, 0xe870, 0x6ed5, 0x6083, 0x879, 0x1, 0x0);
        gbc.writeMem(0x9317, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7dc1);
        EXPECT(gbc.pc(), 0x9318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9317), 0x93);
        // 93 0275
        gbc.setState(0x4e60, 0x5ee0, 0x3670, 0x11b8, 0xf6ab, 0x9eff, 0x1, 0x1);
        gbc.writeMem(0x4e60, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5ee0);
        EXPECT(gbc.pc(), 0x4e61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0276
        gbc.setState(0x91ec, 0x7747, 0xf930, 0xe8e1, 0xecf, 0xa52, 0x0, 0x1);
        gbc.writeMem(0x91ec, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7747);
        EXPECT(gbc.pc(), 0x91ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ec), 0x93);
        // 93 0277
        gbc.setState(0x6d0f, 0xdbec, 0x51b0, 0xa713, 0x5e01, 0x704c, 0x0, 0x1);
        gbc.writeMem(0x6d0f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xdbec);
        EXPECT(gbc.pc(), 0x6d10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0278
        gbc.setState(0xe3c6, 0x2dad, 0xd260, 0xd84a, 0x3b9c, 0xfdee, 0x1, 0x1);
        gbc.writeMem(0xe3c6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2dad);
        EXPECT(gbc.pc(), 0xe3c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3c6), 0x93);
        // 93 0279
        gbc.setState(0xc256, 0xf718, 0x9960, 0xadae, 0xf7dc, 0xc61f, 0x0, 0x1);
        gbc.writeMem(0xc256, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf718);
        EXPECT(gbc.pc(), 0xc257);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc256), 0x93);
        // 93 027A
        gbc.setState(0x3ff3, 0x662e, 0x780, 0xaa5, 0x708, 0xd645, 0x1, 0x0);
        gbc.writeMem(0x3ff3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x662e);
        EXPECT(gbc.pc(), 0x3ff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 027B
        gbc.setState(0x4c31, 0x6889, 0x2610, 0xc0df, 0x7b8e, 0xccc3, 0x1, 0x1);
        gbc.writeMem(0x4c31, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6889);
        EXPECT(gbc.pc(), 0x4c32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 027C
        gbc.setState(0x9208, 0x5c24, 0x5da0, 0x7f45, 0xfee2, 0xece3, 0x0, 0x0);
        gbc.writeMem(0x9208, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5c24);
        EXPECT(gbc.pc(), 0x9209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9208), 0x93);
        // 93 027D
        gbc.setState(0xb2a6, 0x6c9, 0xb6f0, 0xede, 0x7796, 0x951b, 0x0, 0x1);
        gbc.writeMem(0xb2a6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6c9);
        EXPECT(gbc.pc(), 0xb2a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a6), 0x93);
        // 93 027E
        gbc.setState(0xc486, 0x29c1, 0x52a0, 0x3581, 0x3654, 0xa9bb, 0x0, 0x0);
        gbc.writeMem(0xc486, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x29c1);
        EXPECT(gbc.pc(), 0xc487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc486), 0x93);
        // 93 027F
        gbc.setState(0x4910, 0x3387, 0x35d0, 0x2420, 0xbb77, 0x72bc, 0x1, 0x0);
        gbc.writeMem(0x4910, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3387);
        EXPECT(gbc.pc(), 0x4911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0281
        gbc.setState(0xa61c, 0x67b9, 0x7ee0, 0xccc5, 0xa7cc, 0x92a6, 0x0, 0x1);
        gbc.writeMem(0xa61c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x67b9);
        EXPECT(gbc.pc(), 0xa61d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa61c), 0x93);
        // 93 0282
        gbc.setState(0xcd1b, 0x37d1, 0x84b0, 0x3aea, 0xd597, 0x5c38, 0x0, 0x1);
        gbc.writeMem(0xcd1b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x37d1);
        EXPECT(gbc.pc(), 0xcd1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd1b), 0x93);
        // 93 0283
        gbc.setState(0x9301, 0x78d9, 0x8050, 0xc7e9, 0x3efe, 0xd35, 0x0, 0x1);
        gbc.writeMem(0x9301, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x78d9);
        EXPECT(gbc.pc(), 0x9302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9301), 0x93);
        // 93 0284
        gbc.setState(0xdf91, 0x3cb3, 0xbb00, 0x2607, 0x8ae4, 0x2064, 0x1, 0x0);
        gbc.writeMem(0xdf91, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3cb3);
        EXPECT(gbc.pc(), 0xdf92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf91), 0x93);
        // 93 0285
        gbc.setState(0x5f9f, 0xbdea, 0x6160, 0x16a, 0xc31c, 0xb46c, 0x1, 0x1);
        gbc.writeMem(0x5f9f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xbdea);
        EXPECT(gbc.pc(), 0x5fa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0286
        gbc.setState(0xbd2c, 0xd564, 0xfc70, 0x6e99, 0xa68, 0x1af5, 0x0, 0x0);
        gbc.writeMem(0xbd2c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd564);
        EXPECT(gbc.pc(), 0xbd2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd2c), 0x93);
        // 93 0287
        gbc.setState(0xeacf, 0xf98d, 0x1630, 0x3494, 0xed37, 0x5c94, 0x1, 0x0);
        gbc.writeMem(0xeacf, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf98d);
        EXPECT(gbc.pc(), 0xead0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeacf), 0x93);
        // 93 0288
        gbc.setState(0x9f83, 0x6acf, 0x4400, 0xafd9, 0x4e51, 0xd2ef, 0x1, 0x0);
        gbc.writeMem(0x9f83, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6acf);
        EXPECT(gbc.pc(), 0x9f84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f83), 0x93);
        // 93 0289
        gbc.setState(0x234d, 0x3efa, 0xa750, 0x8df7, 0x4ce7, 0x850c, 0x1, 0x1);
        gbc.writeMem(0x234d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3efa);
        EXPECT(gbc.pc(), 0x234e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 028A
        gbc.setState(0xd4d1, 0x42ec, 0x60b0, 0xfae8, 0xd9c4, 0x8928, 0x1, 0x0);
        gbc.writeMem(0xd4d1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x42ec);
        EXPECT(gbc.pc(), 0xd4d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4d1), 0x93);
        // 93 028B
        gbc.setState(0xb7bf, 0xfc0b, 0x73f0, 0xa989, 0x5bff, 0x936b, 0x1, 0x0);
        gbc.writeMem(0xb7bf, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xfc0b);
        EXPECT(gbc.pc(), 0xb7c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7bf), 0x93);
        // 93 028C
        gbc.setState(0xe07b, 0xa3d3, 0xc1f0, 0x8d34, 0x3153, 0x534e, 0x0, 0x1);
        gbc.writeMem(0xe07b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa3d3);
        EXPECT(gbc.pc(), 0xe07c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe07b), 0x93);
        // 93 028D
        gbc.setState(0x2a05, 0xc0fb, 0xf880, 0x65bc, 0x16e3, 0x396f, 0x0, 0x0);
        gbc.writeMem(0x2a05, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc0fb);
        EXPECT(gbc.pc(), 0x2a06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 028E
        gbc.setState(0x4bcd, 0xef80, 0x3910, 0x94e0, 0xf1b6, 0x912f, 0x1, 0x1);
        gbc.writeMem(0x4bcd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xef80);
        EXPECT(gbc.pc(), 0x4bce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 028F
        gbc.setState(0xca3, 0xe82e, 0x3100, 0x6544, 0x5f86, 0x831c, 0x0, 0x1);
        gbc.writeMem(0xca3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe82e);
        EXPECT(gbc.pc(), 0xca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0292
        gbc.setState(0xcf36, 0xd845, 0x5ad0, 0x1674, 0x8a02, 0x4832, 0x0, 0x1);
        gbc.writeMem(0xcf36, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd845);
        EXPECT(gbc.pc(), 0xcf37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf36), 0x93);
        // 93 0293
        gbc.setState(0x1d71, 0xc415, 0x72c0, 0x2f26, 0x7b5d, 0xa5d5, 0x1, 0x0);
        gbc.writeMem(0x1d71, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc415);
        EXPECT(gbc.pc(), 0x1d72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0294
        gbc.setState(0x78bf, 0xd0b6, 0x1560, 0x956f, 0x68f4, 0x9df1, 0x0, 0x1);
        gbc.writeMem(0x78bf, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd0b6);
        EXPECT(gbc.pc(), 0x78c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0295
        gbc.setState(0x9d68, 0x2c8f, 0xb0f0, 0x7176, 0xf214, 0xbdad, 0x1, 0x0);
        gbc.writeMem(0x9d68, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2c8f);
        EXPECT(gbc.pc(), 0x9d69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d68), 0x93);
        // 93 0296
        gbc.setState(0x27f3, 0x2f88, 0xdcb0, 0x2674, 0x4b93, 0x3a61, 0x0, 0x1);
        gbc.writeMem(0x27f3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2f88);
        EXPECT(gbc.pc(), 0x27f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0297
        gbc.setState(0x5eb7, 0x1115, 0xfca0, 0x9865, 0xe8c, 0xa994, 0x1, 0x0);
        gbc.writeMem(0x5eb7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1115);
        EXPECT(gbc.pc(), 0x5eb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0298
        gbc.setState(0x1b28, 0x3983, 0xd820, 0x3fa7, 0xfebd, 0xbd8c, 0x0, 0x0);
        gbc.writeMem(0x1b28, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3983);
        EXPECT(gbc.pc(), 0x1b29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0299
        gbc.setState(0xcec8, 0x3358, 0x2650, 0xa8c1, 0x9aee, 0x1a3c, 0x0, 0x1);
        gbc.writeMem(0xcec8, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3358);
        EXPECT(gbc.pc(), 0xcec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcec8), 0x93);
        // 93 029B
        gbc.setState(0xed10, 0x8e4a, 0xaf60, 0xf7cb, 0xa57b, 0x970f, 0x1, 0x0);
        gbc.writeMem(0xed10, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8e4a);
        EXPECT(gbc.pc(), 0xed11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed10), 0x93);
        // 93 029C
        gbc.setState(0x6793, 0x2b0b, 0xc810, 0x6f67, 0xb3e5, 0xab55, 0x1, 0x0);
        gbc.writeMem(0x6793, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2b0b);
        EXPECT(gbc.pc(), 0x6794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 029D
        gbc.setState(0xdf54, 0x8093, 0x4300, 0x321f, 0xd744, 0xdb8a, 0x0, 0x1);
        gbc.writeMem(0xdf54, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8093);
        EXPECT(gbc.pc(), 0xdf55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf54), 0x93);
        // 93 029E
        gbc.setState(0x2f7d, 0x7e65, 0xf970, 0x59b6, 0x61b6, 0x1cbe, 0x1, 0x0);
        gbc.writeMem(0x2f7d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7e65);
        EXPECT(gbc.pc(), 0x2f7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 029F
        gbc.setState(0xcfdf, 0x582c, 0x7950, 0x87df, 0x5a0a, 0x1929, 0x1, 0x0);
        gbc.writeMem(0xcfdf, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x582c);
        EXPECT(gbc.pc(), 0xcfe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfdf), 0x93);
        // 93 02A0
        gbc.setState(0xd9b4, 0x946c, 0x6ae0, 0xeba3, 0x8b93, 0x746a, 0x0, 0x1);
        gbc.writeMem(0xd9b4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x946c);
        EXPECT(gbc.pc(), 0xd9b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9b4), 0x93);
        // 93 02A1
        gbc.setState(0x23a8, 0x8768, 0xda70, 0x616e, 0x8883, 0x538f, 0x0, 0x1);
        gbc.writeMem(0x23a8, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8768);
        EXPECT(gbc.pc(), 0x23a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 02A2
        gbc.setState(0xcb33, 0xa92, 0x8fc0, 0x4428, 0x6227, 0xefc0, 0x1, 0x0);
        gbc.writeMem(0xcb33, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa92);
        EXPECT(gbc.pc(), 0xcb34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb33), 0x93);
        // 93 02A3
        gbc.setState(0x2812, 0xe885, 0x8b20, 0xdd2d, 0x4374, 0x65e8, 0x0, 0x0);
        gbc.writeMem(0x2812, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe885);
        EXPECT(gbc.pc(), 0x2813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 02A4
        gbc.setState(0xba11, 0xd1, 0xb650, 0xf817, 0xdb8c, 0x6f8a, 0x1, 0x1);
        gbc.writeMem(0xba11, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd1);
        EXPECT(gbc.pc(), 0xba12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba11), 0x93);
        // 93 02A5
        gbc.setState(0xda68, 0x35cb, 0xcd10, 0xcede, 0xec02, 0x1c4d, 0x1, 0x0);
        gbc.writeMem(0xda68, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x35cb);
        EXPECT(gbc.pc(), 0xda69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda68), 0x93);
        // 93 02A6
        gbc.setState(0x9027, 0x606d, 0x2ae0, 0xd195, 0xf497, 0x75f7, 0x0, 0x0);
        gbc.writeMem(0x9027, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x606d);
        EXPECT(gbc.pc(), 0x9028);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9027), 0x93);
        // 93 02A7
        gbc.setState(0x8885, 0x2725, 0x93c0, 0x7b4f, 0x5121, 0xe584, 0x0, 0x1);
        gbc.writeMem(0x8885, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2725);
        EXPECT(gbc.pc(), 0x8886);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8885), 0x93);
        // 93 02A8
        gbc.setState(0xea39, 0xfa03, 0x4e70, 0xbd13, 0xc3da, 0x61f9, 0x0, 0x1);
        gbc.writeMem(0xea39, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfa03);
        EXPECT(gbc.pc(), 0xea3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea39), 0x93);
        // 93 02A9
        gbc.setState(0xb90f, 0x8bb3, 0x6510, 0x3372, 0xd55a, 0x24b3, 0x0, 0x1);
        gbc.writeMem(0xb90f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8bb3);
        EXPECT(gbc.pc(), 0xb910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb90f), 0x93);
        // 93 02AA
        gbc.setState(0xc5ab, 0x492c, 0xee00, 0xb70f, 0x7c7, 0xf97, 0x1, 0x1);
        gbc.writeMem(0xc5ab, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x492c);
        EXPECT(gbc.pc(), 0xc5ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ab), 0x93);
        // 93 02AB
        gbc.setState(0x1358, 0xe31b, 0x5920, 0x1969, 0x82b4, 0x6cdc, 0x1, 0x1);
        gbc.writeMem(0x1358, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe31b);
        EXPECT(gbc.pc(), 0x1359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 02AC
        gbc.setState(0x86aa, 0x920c, 0x82b0, 0xc675, 0x28ad, 0xe2ee, 0x1, 0x1);
        gbc.writeMem(0x86aa, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x920c);
        EXPECT(gbc.pc(), 0x86ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86aa), 0x93);
        // 93 02AD
        gbc.setState(0xa73c, 0xcaf5, 0x6bb0, 0x85f, 0xb196, 0x3df0, 0x1, 0x0);
        gbc.writeMem(0xa73c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xcaf5);
        EXPECT(gbc.pc(), 0xa73d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa73c), 0x93);
        // 93 02AE
        gbc.setState(0x5805, 0x8116, 0xde30, 0x1409, 0xd02a, 0xf692, 0x0, 0x0);
        gbc.writeMem(0x5805, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x8116);
        EXPECT(gbc.pc(), 0x5806);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 02AF
        gbc.setState(0x3470, 0xb27d, 0xcd30, 0xc40f, 0x4cd0, 0x58fc, 0x1, 0x1);
        gbc.writeMem(0x3470, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb27d);
        EXPECT(gbc.pc(), 0x3471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 02B0
        gbc.setState(0x5e4d, 0xdd04, 0x71d0, 0x7bde, 0x7d6f, 0xa9c9, 0x0, 0x1);
        gbc.writeMem(0x5e4d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xdd04);
        EXPECT(gbc.pc(), 0x5e4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 02B1
        gbc.setState(0x6876, 0x64d, 0x6d80, 0x5943, 0x9fb5, 0x5f18, 0x0, 0x1);
        gbc.writeMem(0x6876, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x64d);
        EXPECT(gbc.pc(), 0x6877);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 02B2
        gbc.setState(0x88a3, 0x5e41, 0xace0, 0x24bb, 0xb4b0, 0x418c, 0x0, 0x0);
        gbc.writeMem(0x88a3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5e41);
        EXPECT(gbc.pc(), 0x88a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88a3), 0x93);
        // 93 02B3
        gbc.setState(0xe0c8, 0xb2bf, 0x5310, 0xbe42, 0x9b00, 0xee92, 0x1, 0x1);
        gbc.writeMem(0xe0c8, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb2bf);
        EXPECT(gbc.pc(), 0xe0c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0c8), 0x93);
        // 93 02B4
        gbc.setState(0x2b33, 0x375d, 0xe100, 0x6d36, 0x1644, 0x4544, 0x1, 0x0);
        gbc.writeMem(0x2b33, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x375d);
        EXPECT(gbc.pc(), 0x2b34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 02B5
        gbc.setState(0xafbc, 0xaae, 0x5b40, 0xc92c, 0x7f7e, 0xde9b, 0x1, 0x1);
        gbc.writeMem(0xafbc, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xaae);
        EXPECT(gbc.pc(), 0xafbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafbc), 0x93);
        // 93 02B6
        gbc.setState(0x8428, 0x6b8e, 0x9d00, 0xc958, 0x2ad4, 0x7748, 0x0, 0x1);
        gbc.writeMem(0x8428, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6b8e);
        EXPECT(gbc.pc(), 0x8429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8428), 0x93);
        // 93 02B7
        gbc.setState(0x66e1, 0xcdc1, 0x3f00, 0xc09b, 0xc945, 0x3d7a, 0x1, 0x1);
        gbc.writeMem(0x66e1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcdc1);
        EXPECT(gbc.pc(), 0x66e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 02B8
        gbc.setState(0xdf95, 0x13b9, 0xc830, 0x97cd, 0x4205, 0x6627, 0x1, 0x1);
        gbc.writeMem(0xdf95, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x13b9);
        EXPECT(gbc.pc(), 0xdf96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf95), 0x93);
        // 93 02B9
        gbc.setState(0xbad9, 0x8e8f, 0xac00, 0x6cba, 0xfacc, 0x4f57, 0x0, 0x1);
        gbc.writeMem(0xbad9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8e8f);
        EXPECT(gbc.pc(), 0xbada);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad9), 0x93);
        // 93 02BA
        gbc.setState(0x5a0f, 0x34d0, 0x1fe0, 0x4813, 0x38c1, 0x7d65, 0x1, 0x1);
        gbc.writeMem(0x5a0f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x34d0);
        EXPECT(gbc.pc(), 0x5a10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 02BB
        gbc.setState(0x7aca, 0x3f7, 0x87a0, 0xa114, 0x2157, 0xb66d, 0x0, 0x1);
        gbc.writeMem(0x7aca, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3f7);
        EXPECT(gbc.pc(), 0x7acb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 02BC
        gbc.setState(0x7ef2, 0x6ddf, 0x3ea0, 0xa8cf, 0x1248, 0x354d, 0x0, 0x1);
        gbc.writeMem(0x7ef2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6ddf);
        EXPECT(gbc.pc(), 0x7ef3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 02BD
        gbc.setState(0x3768, 0xdb35, 0x11a0, 0x68, 0x3053, 0xe66, 0x1, 0x0);
        gbc.writeMem(0x3768, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xdb35);
        EXPECT(gbc.pc(), 0x3769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 02BE
        gbc.setState(0x218a, 0x7c8e, 0xd400, 0xab50, 0xfa9f, 0xd03d, 0x0, 0x0);
        gbc.writeMem(0x218a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7c8e);
        EXPECT(gbc.pc(), 0x218b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 02BF
        gbc.setState(0x141b, 0xbfb7, 0x1b00, 0x3ea1, 0x782b, 0x344b, 0x1, 0x0);
        gbc.writeMem(0x141b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xbfb7);
        EXPECT(gbc.pc(), 0x141c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 02C0
        gbc.setState(0x3ba6, 0x655c, 0x8730, 0xd9f9, 0x7a27, 0x3e6e, 0x0, 0x1);
        gbc.writeMem(0x3ba6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x655c);
        EXPECT(gbc.pc(), 0x3ba7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 02C1
        gbc.setState(0x7d24, 0x82da, 0x1af0, 0xc31, 0xc690, 0x66d0, 0x0, 0x0);
        gbc.writeMem(0x7d24, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x82da);
        EXPECT(gbc.pc(), 0x7d25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 02C2
        gbc.setState(0x38bb, 0xf9ab, 0x25c0, 0x17c2, 0x7e2c, 0xdf0c, 0x0, 0x1);
        gbc.writeMem(0x38bb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf9ab);
        EXPECT(gbc.pc(), 0x38bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 02C3
        gbc.setState(0x27a3, 0x40e4, 0xeef0, 0xe00, 0x59, 0x59a0, 0x0, 0x1);
        gbc.writeMem(0x27a3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x40e4);
        EXPECT(gbc.pc(), 0x27a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 02C4
        gbc.setState(0xd42b, 0xd4ee, 0xd640, 0xbc44, 0x3fa1, 0xac36, 0x0, 0x1);
        gbc.writeMem(0xd42b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd4ee);
        EXPECT(gbc.pc(), 0xd42c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd42b), 0x93);
        // 93 02C5
        gbc.setState(0xe346, 0x82d, 0x9970, 0x8c54, 0x8c1e, 0x7890, 0x1, 0x0);
        gbc.writeMem(0xe346, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x82d);
        EXPECT(gbc.pc(), 0xe347);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe346), 0x93);
        // 93 02C6
        gbc.setState(0xe2db, 0x3d8e, 0xea80, 0x3b99, 0x73b5, 0x9867, 0x0, 0x0);
        gbc.writeMem(0xe2db, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3d8e);
        EXPECT(gbc.pc(), 0xe2dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2db), 0x93);
        // 93 02C7
        gbc.setState(0xbc8e, 0x1aa1, 0xc850, 0x3255, 0x12f4, 0x8bf8, 0x1, 0x1);
        gbc.writeMem(0xbc8e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1aa1);
        EXPECT(gbc.pc(), 0xbc8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc8e), 0x93);
        // 93 02C8
        gbc.setState(0xeabb, 0x9fa3, 0x6540, 0x6e36, 0xb148, 0xf02a, 0x0, 0x1);
        gbc.writeMem(0xeabb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9fa3);
        EXPECT(gbc.pc(), 0xeabc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeabb), 0x93);
        // 93 02C9
        gbc.setState(0x7108, 0xfe15, 0x9460, 0x5ed2, 0x9077, 0x3e32, 0x0, 0x0);
        gbc.writeMem(0x7108, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xfe15);
        EXPECT(gbc.pc(), 0x7109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 02CA
        gbc.setState(0x1974, 0x2ce0, 0x81d0, 0xf4a9, 0x123a, 0xff29, 0x0, 0x0);
        gbc.writeMem(0x1974, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2ce0);
        EXPECT(gbc.pc(), 0x1975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 02CB
        gbc.setState(0x60c9, 0x731f, 0x4730, 0xd470, 0x1582, 0x76ed, 0x0, 0x0);
        gbc.writeMem(0x60c9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x731f);
        EXPECT(gbc.pc(), 0x60ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 02CC
        gbc.setState(0xb741, 0xa72, 0x6210, 0x1d34, 0xc5e6, 0x2e65, 0x0, 0x0);
        gbc.writeMem(0xb741, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa72);
        EXPECT(gbc.pc(), 0xb742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb741), 0x93);
        // 93 02CD
        gbc.setState(0x3bc7, 0xe7f0, 0x7790, 0x2613, 0x7709, 0x6c7a, 0x0, 0x1);
        gbc.writeMem(0x3bc7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe7f0);
        EXPECT(gbc.pc(), 0x3bc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 02CE
        gbc.setState(0x484a, 0x257e, 0xe210, 0xee97, 0x2380, 0x1011, 0x0, 0x1);
        gbc.writeMem(0x484a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x257e);
        EXPECT(gbc.pc(), 0x484b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 02CF
        gbc.setState(0x43, 0x2cf4, 0xeb30, 0xc8f5, 0x6488, 0xef2c, 0x1, 0x0);
        gbc.writeMem(0x43, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2cf4);
        EXPECT(gbc.pc(), 0x44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 02D0
        gbc.setState(0x5af4, 0xdddf, 0xc9d0, 0x9568, 0x7660, 0x3b4b, 0x0, 0x0);
        gbc.writeMem(0x5af4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xdddf);
        EXPECT(gbc.pc(), 0x5af5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 02D1
        gbc.setState(0x8a0e, 0x7da4, 0x97b0, 0xad1f, 0xbd58, 0xce12, 0x0, 0x0);
        gbc.writeMem(0x8a0e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7da4);
        EXPECT(gbc.pc(), 0x8a0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a0e), 0x93);
        // 93 02D3
        gbc.setState(0x1b9c, 0x330d, 0xcfb0, 0x368, 0x2705, 0x1b76, 0x0, 0x1);
        gbc.writeMem(0x1b9c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x330d);
        EXPECT(gbc.pc(), 0x1b9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 02D4
        gbc.setState(0x3c0c, 0xee55, 0x2c60, 0x3cee, 0x4513, 0x4f9c, 0x0, 0x0);
        gbc.writeMem(0x3c0c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xee55);
        EXPECT(gbc.pc(), 0x3c0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 02D5
        gbc.setState(0x8bcf, 0x79cc, 0x22b0, 0x452a, 0x9d03, 0x7e52, 0x0, 0x1);
        gbc.writeMem(0x8bcf, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x79cc);
        EXPECT(gbc.pc(), 0x8bd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bcf), 0x93);
        // 93 02D6
        gbc.setState(0xa4c2, 0xfeaa, 0xa9f0, 0x66e5, 0x21ac, 0x7d35, 0x0, 0x1);
        gbc.writeMem(0xa4c2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xfeaa);
        EXPECT(gbc.pc(), 0xa4c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c2), 0x93);
        // 93 02D7
        gbc.setState(0xa704, 0xe106, 0x51f0, 0xf796, 0x3582, 0xb46b, 0x0, 0x0);
        gbc.writeMem(0xa704, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe106);
        EXPECT(gbc.pc(), 0xa705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa704), 0x93);
        // 93 02D8
        gbc.setState(0x9cdb, 0xc8eb, 0xb290, 0x72c7, 0x6245, 0xadcc, 0x0, 0x1);
        gbc.writeMem(0x9cdb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc8eb);
        EXPECT(gbc.pc(), 0x9cdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cdb), 0x93);
        // 93 02D9
        gbc.setState(0x5581, 0x1d42, 0x6e30, 0x40f1, 0x190d, 0x2524, 0x1, 0x0);
        gbc.writeMem(0x5581, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1d42);
        EXPECT(gbc.pc(), 0x5582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 02DA
        gbc.setState(0x75b, 0xba65, 0x620, 0xc370, 0x2ab1, 0xf006, 0x1, 0x1);
        gbc.writeMem(0x75b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xba65);
        EXPECT(gbc.pc(), 0x75c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 02DC
        gbc.setState(0xa98f, 0x9257, 0xfb80, 0x13b8, 0xdfc4, 0x4ee5, 0x0, 0x1);
        gbc.writeMem(0xa98f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9257);
        EXPECT(gbc.pc(), 0xa990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa98f), 0x93);
        // 93 02DD
        gbc.setState(0x2fc6, 0x4046, 0xba10, 0x855f, 0x4ce9, 0x7239, 0x1, 0x0);
        gbc.writeMem(0x2fc6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4046);
        EXPECT(gbc.pc(), 0x2fc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 02DE
        gbc.setState(0xa5bd, 0x256e, 0xba10, 0x6e1c, 0x3705, 0x132e, 0x1, 0x0);
        gbc.writeMem(0xa5bd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x256e);
        EXPECT(gbc.pc(), 0xa5be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5bd), 0x93);
        // 93 02DF
        gbc.setState(0xe2ee, 0x8026, 0xcdb0, 0x4bae, 0x5b42, 0x77b1, 0x0, 0x1);
        gbc.writeMem(0xe2ee, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8026);
        EXPECT(gbc.pc(), 0xe2ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2ee), 0x93);
        // 93 02E0
        gbc.setState(0x9276, 0x3f4c, 0xd8c0, 0xbf1a, 0xacae, 0xfab1, 0x0, 0x0);
        gbc.writeMem(0x9276, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3f4c);
        EXPECT(gbc.pc(), 0x9277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9276), 0x93);
        // 93 02E1
        gbc.setState(0xbbea, 0x745e, 0xb9c0, 0x177, 0xf88, 0xaf2, 0x0, 0x1);
        gbc.writeMem(0xbbea, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x745e);
        EXPECT(gbc.pc(), 0xbbeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbea), 0x93);
        // 93 02E2
        gbc.setState(0xc8e1, 0xefde, 0x6420, 0x9056, 0xb820, 0x953b, 0x1, 0x0);
        gbc.writeMem(0xc8e1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xefde);
        EXPECT(gbc.pc(), 0xc8e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8e1), 0x93);
        // 93 02E3
        gbc.setState(0xa6ad, 0xcad4, 0xce80, 0x6c55, 0x9dde, 0x9d0b, 0x0, 0x0);
        gbc.writeMem(0xa6ad, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xcad4);
        EXPECT(gbc.pc(), 0xa6ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ad), 0x93);
        // 93 02E4
        gbc.setState(0x3b75, 0x461f, 0xcfa0, 0x1295, 0x5b4d, 0x8849, 0x1, 0x1);
        gbc.writeMem(0x3b75, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x461f);
        EXPECT(gbc.pc(), 0x3b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 02E5
        gbc.setState(0xceb1, 0x428e, 0x3180, 0x823f, 0x7b9c, 0x824e, 0x1, 0x1);
        gbc.writeMem(0xceb1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x428e);
        EXPECT(gbc.pc(), 0xceb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb1), 0x93);
        // 93 02E6
        gbc.setState(0x4ed, 0x423f, 0xca70, 0x173e, 0x77c6, 0x9d01, 0x0, 0x0);
        gbc.writeMem(0x4ed, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x423f);
        EXPECT(gbc.pc(), 0x4ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 02E7
        gbc.setState(0x5c61, 0xf001, 0x8bd0, 0xe4a2, 0x9ebc, 0x1296, 0x1, 0x0);
        gbc.writeMem(0x5c61, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf001);
        EXPECT(gbc.pc(), 0x5c62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 02E8
        gbc.setState(0xb99f, 0xd52, 0xc550, 0xbc6b, 0xb448, 0xca55, 0x1, 0x1);
        gbc.writeMem(0xb99f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd52);
        EXPECT(gbc.pc(), 0xb9a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb99f), 0x93);
        // 93 02E9
        gbc.setState(0xe28f, 0xec7a, 0x1290, 0xdccc, 0x6be4, 0x6331, 0x0, 0x0);
        gbc.writeMem(0xe28f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xec7a);
        EXPECT(gbc.pc(), 0xe290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe28f), 0x93);
        // 93 02EA
        gbc.setState(0x85ed, 0xd088, 0xc540, 0x3ff2, 0x10c8, 0x5b1b, 0x1, 0x0);
        gbc.writeMem(0x85ed, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xd088);
        EXPECT(gbc.pc(), 0x85ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ed), 0x93);
        // 93 02EB
        gbc.setState(0x69d6, 0xa68f, 0xe740, 0xf868, 0x9dec, 0x2e1, 0x1, 0x0);
        gbc.writeMem(0x69d6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa68f);
        EXPECT(gbc.pc(), 0x69d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 02EC
        gbc.setState(0x8c2d, 0xe414, 0xc080, 0xa437, 0xcc8, 0x9c75, 0x0, 0x0);
        gbc.writeMem(0x8c2d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe414);
        EXPECT(gbc.pc(), 0x8c2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c2d), 0x93);
        // 93 02ED
        gbc.setState(0x3dc6, 0x87e8, 0x1580, 0xfaec, 0x619a, 0x6bcd, 0x1, 0x0);
        gbc.writeMem(0x3dc6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x87e8);
        EXPECT(gbc.pc(), 0x3dc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 02EE
        gbc.setState(0x681a, 0x47e2, 0xf7f0, 0x5b9f, 0xb9d, 0x87d5, 0x0, 0x1);
        gbc.writeMem(0x681a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x47e2);
        EXPECT(gbc.pc(), 0x681b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 02EF
        gbc.setState(0x7f3a, 0x202d, 0x50f0, 0xab17, 0xb93, 0x2072, 0x1, 0x1);
        gbc.writeMem(0x7f3a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x202d);
        EXPECT(gbc.pc(), 0x7f3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 02F0
        gbc.setState(0x39cf, 0x8256, 0x20f0, 0x88d6, 0xe536, 0x2a24, 0x1, 0x0);
        gbc.writeMem(0x39cf, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8256);
        EXPECT(gbc.pc(), 0x39d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 02F1
        gbc.setState(0x5d72, 0x415d, 0x2600, 0x5de6, 0x2e7e, 0x90be, 0x0, 0x1);
        gbc.writeMem(0x5d72, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x415d);
        EXPECT(gbc.pc(), 0x5d73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 02F2
        gbc.setState(0xf57, 0xd200, 0x9c50, 0x6ad1, 0x4518, 0xc149, 0x1, 0x1);
        gbc.writeMem(0xf57, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd200);
        EXPECT(gbc.pc(), 0xf58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 02F3
        gbc.setState(0xbf13, 0xa3bc, 0x31b0, 0xf318, 0xd6e4, 0x7681, 0x1, 0x1);
        gbc.writeMem(0xbf13, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa3bc);
        EXPECT(gbc.pc(), 0xbf14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf13), 0x93);
        // 93 02F4
        gbc.setState(0x4e50, 0x7fc2, 0x2c20, 0xdaf2, 0x7fb5, 0xeeb6, 0x0, 0x1);
        gbc.writeMem(0x4e50, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7fc2);
        EXPECT(gbc.pc(), 0x4e51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 02F5
        gbc.setState(0x64f5, 0x3852, 0xd010, 0xd6f2, 0xb168, 0x95f0, 0x0, 0x0);
        gbc.writeMem(0x64f5, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3852);
        EXPECT(gbc.pc(), 0x64f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 02F6
        gbc.setState(0xaa1e, 0x171d, 0x1210, 0xcb86, 0xb32d, 0x3d16, 0x0, 0x1);
        gbc.writeMem(0xaa1e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x171d);
        EXPECT(gbc.pc(), 0xaa1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa1e), 0x93);
        // 93 02F7
        gbc.setState(0xc15c, 0x445a, 0xceb0, 0x241b, 0xe6c3, 0xecb8, 0x0, 0x1);
        gbc.writeMem(0xc15c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x445a);
        EXPECT(gbc.pc(), 0xc15d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc15c), 0x93);
        // 93 02F8
        gbc.setState(0xef1c, 0xad9a, 0xfb50, 0xdcd7, 0x2688, 0xdbb6, 0x1, 0x0);
        gbc.writeMem(0xef1c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xad9a);
        EXPECT(gbc.pc(), 0xef1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef1c), 0x93);
        // 93 02F9
        gbc.setState(0xb31f, 0x91be, 0x5920, 0x21e8, 0xec6b, 0xbf40, 0x0, 0x0);
        gbc.writeMem(0xb31f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x91be);
        EXPECT(gbc.pc(), 0xb320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb31f), 0x93);
        // 93 02FA
        gbc.setState(0x6254, 0x63fc, 0xa060, 0xabe, 0xfefe, 0x2a1c, 0x0, 0x0);
        gbc.writeMem(0x6254, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x63fc);
        EXPECT(gbc.pc(), 0x6255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 02FB
        gbc.setState(0x7fd, 0xffed, 0x89d0, 0x9fb5, 0x68db, 0x69dc, 0x0, 0x1);
        gbc.writeMem(0x7fd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xffed);
        EXPECT(gbc.pc(), 0x7fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 02FC
        gbc.setState(0x18ed, 0x7a91, 0x3280, 0x51c4, 0x96f7, 0xc216, 0x1, 0x1);
        gbc.writeMem(0x18ed, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7a91);
        EXPECT(gbc.pc(), 0x18ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 02FD
        gbc.setState(0xb64b, 0x6201, 0x6470, 0xfc2f, 0x9e94, 0x2b04, 0x1, 0x0);
        gbc.writeMem(0xb64b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6201);
        EXPECT(gbc.pc(), 0xb64c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb64b), 0x93);
        // 93 02FE
        gbc.setState(0x888b, 0x77c4, 0xbb50, 0x5887, 0xb242, 0x5a72, 0x1, 0x0);
        gbc.writeMem(0x888b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x77c4);
        EXPECT(gbc.pc(), 0x888c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x888b), 0x93);
        // 93 02FF
        gbc.setState(0x6de3, 0xdb51, 0x22f0, 0xd0c, 0xac4f, 0xab7a, 0x0, 0x0);
        gbc.writeMem(0x6de3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xdb51);
        EXPECT(gbc.pc(), 0x6de4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0300
        gbc.setState(0x7841, 0xa9df, 0x8fa0, 0xb920, 0xcf80, 0x2e49, 0x1, 0x1);
        gbc.writeMem(0x7841, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa9df);
        EXPECT(gbc.pc(), 0x7842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0301
        gbc.setState(0xa643, 0x4520, 0x6440, 0x13cd, 0x8d74, 0xa7e3, 0x1, 0x0);
        gbc.writeMem(0xa643, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4520);
        EXPECT(gbc.pc(), 0xa644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa643), 0x93);
        // 93 0302
        gbc.setState(0xba1c, 0xc75, 0x69f0, 0xe11e, 0xf3fb, 0xc154, 0x0, 0x1);
        gbc.writeMem(0xba1c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc75);
        EXPECT(gbc.pc(), 0xba1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba1c), 0x93);
        // 93 0303
        gbc.setState(0x57ea, 0x8c9f, 0xb720, 0x83b2, 0xcbec, 0x97f5, 0x1, 0x1);
        gbc.writeMem(0x57ea, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8c9f);
        EXPECT(gbc.pc(), 0x57eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0304
        gbc.setState(0x1357, 0xbbfc, 0x1f50, 0x5db4, 0xfa80, 0x2599, 0x0, 0x1);
        gbc.writeMem(0x1357, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xbbfc);
        EXPECT(gbc.pc(), 0x1358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0305
        gbc.setState(0x5247, 0x8f87, 0x6860, 0x47b1, 0xba86, 0x9e0, 0x1, 0x0);
        gbc.writeMem(0x5247, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8f87);
        EXPECT(gbc.pc(), 0x5248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0306
        gbc.setState(0x8089, 0x34e9, 0x46f0, 0x196a, 0x1414, 0xa9f9, 0x0, 0x1);
        gbc.writeMem(0x8089, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x34e9);
        EXPECT(gbc.pc(), 0x808a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8089), 0x93);
        // 93 0307
        gbc.setState(0xad19, 0x724f, 0x8c30, 0xd8ce, 0x32ae, 0x59b3, 0x0, 0x1);
        gbc.writeMem(0xad19, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x724f);
        EXPECT(gbc.pc(), 0xad1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad19), 0x93);
        // 93 0308
        gbc.setState(0x9119, 0x9273, 0x8310, 0x46de, 0xc2b1, 0xe7b6, 0x0, 0x0);
        gbc.writeMem(0x9119, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9273);
        EXPECT(gbc.pc(), 0x911a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9119), 0x93);
        // 93 0309
        gbc.setState(0x8c05, 0x8ef6, 0x1a60, 0xfae6, 0x1697, 0x2156, 0x1, 0x1);
        gbc.writeMem(0x8c05, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8ef6);
        EXPECT(gbc.pc(), 0x8c06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c05), 0x93);
        // 93 030A
        gbc.setState(0xd14d, 0xdc97, 0xcd40, 0x6ca6, 0xfc91, 0x44e8, 0x1, 0x1);
        gbc.writeMem(0xd14d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xdc97);
        EXPECT(gbc.pc(), 0xd14e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd14d), 0x93);
        // 93 030B
        gbc.setState(0x1c41, 0x349e, 0xf0c0, 0xe9d1, 0xbbe4, 0xff46, 0x1, 0x1);
        gbc.writeMem(0x1c41, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x349e);
        EXPECT(gbc.pc(), 0x1c42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 030C
        gbc.setState(0x5e0a, 0xe23d, 0xa270, 0xe75d, 0x1895, 0x5bbc, 0x0, 0x1);
        gbc.writeMem(0x5e0a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe23d);
        EXPECT(gbc.pc(), 0x5e0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 030D
        gbc.setState(0xce4e, 0x1194, 0x94b0, 0x9635, 0x73db, 0x62c5, 0x1, 0x0);
        gbc.writeMem(0xce4e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1194);
        EXPECT(gbc.pc(), 0xce4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce4e), 0x93);
        // 93 030F
        gbc.setState(0xbcad, 0x451a, 0x9e50, 0xf925, 0x656, 0xba31, 0x1, 0x0);
        gbc.writeMem(0xbcad, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x451a);
        EXPECT(gbc.pc(), 0xbcae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcad), 0x93);
        // 93 0311
        gbc.setState(0x8884, 0x2881, 0xdf00, 0x99da, 0xa2b, 0x249e, 0x1, 0x1);
        gbc.writeMem(0x8884, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2881);
        EXPECT(gbc.pc(), 0x8885);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8884), 0x93);
        // 93 0312
        gbc.setState(0x76b, 0xd528, 0xf760, 0x2fe1, 0x2ee2, 0xdc50, 0x0, 0x0);
        gbc.writeMem(0x76b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd528);
        EXPECT(gbc.pc(), 0x76c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0313
        gbc.setState(0xecb, 0x86, 0x3ec0, 0xa55f, 0x69e3, 0xcd14, 0x0, 0x1);
        gbc.writeMem(0xecb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x86);
        EXPECT(gbc.pc(), 0xecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0314
        gbc.setState(0xa474, 0xc83b, 0x3be0, 0xc2bf, 0xcfef, 0x7bc5, 0x0, 0x1);
        gbc.writeMem(0xa474, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc83b);
        EXPECT(gbc.pc(), 0xa475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa474), 0x93);
        // 93 0315
        gbc.setState(0xc6e4, 0xc84d, 0x3ec0, 0x5174, 0x5b5f, 0x1bbb, 0x0, 0x1);
        gbc.writeMem(0xc6e4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc84d);
        EXPECT(gbc.pc(), 0xc6e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e4), 0x93);
        // 93 0316
        gbc.setState(0x7bd5, 0x6b57, 0xe410, 0xab52, 0xc855, 0x1abc, 0x0, 0x0);
        gbc.writeMem(0x7bd5, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6b57);
        EXPECT(gbc.pc(), 0x7bd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0317
        gbc.setState(0x8d75, 0x4e0b, 0x5dd0, 0xb8f8, 0x9598, 0xc3d8, 0x1, 0x1);
        gbc.writeMem(0x8d75, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4e0b);
        EXPECT(gbc.pc(), 0x8d76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d75), 0x93);
        // 93 0318
        gbc.setState(0x381d, 0xf0a8, 0xa7d0, 0xd4d3, 0xe85d, 0x140d, 0x1, 0x0);
        gbc.writeMem(0x381d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf0a8);
        EXPECT(gbc.pc(), 0x381e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0319
        gbc.setState(0x9cf6, 0xc3c7, 0x7d50, 0xbbf8, 0x942a, 0x3a4e, 0x1, 0x0);
        gbc.writeMem(0x9cf6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc3c7);
        EXPECT(gbc.pc(), 0x9cf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf6), 0x93);
        // 93 031A
        gbc.setState(0x5047, 0x17e9, 0xae20, 0x4356, 0xba80, 0xde88, 0x0, 0x1);
        gbc.writeMem(0x5047, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x17e9);
        EXPECT(gbc.pc(), 0x5048);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 031B
        gbc.setState(0x8301, 0xce8c, 0x6290, 0xfb82, 0xebef, 0x6b4c, 0x1, 0x1);
        gbc.writeMem(0x8301, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xce8c);
        EXPECT(gbc.pc(), 0x8302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8301), 0x93);
        // 93 031C
        gbc.setState(0xd77e, 0x6163, 0x5f80, 0x2256, 0x4194, 0x2ea4, 0x1, 0x0);
        gbc.writeMem(0xd77e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6163);
        EXPECT(gbc.pc(), 0xd77f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd77e), 0x93);
        // 93 031D
        gbc.setState(0xb418, 0x5fff, 0x6520, 0x8b03, 0xc33a, 0x5422, 0x1, 0x1);
        gbc.writeMem(0xb418, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5fff);
        EXPECT(gbc.pc(), 0xb419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb418), 0x93);
        // 93 031E
        gbc.setState(0xbdb3, 0x203e, 0xd5b0, 0x4e1, 0x5fc1, 0x931d, 0x0, 0x0);
        gbc.writeMem(0xbdb3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x203e);
        EXPECT(gbc.pc(), 0xbdb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb3), 0x93);
        // 93 031F
        gbc.setState(0xc8e9, 0xb1ba, 0x8d30, 0x87b7, 0x9504, 0xb04a, 0x1, 0x1);
        gbc.writeMem(0xc8e9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb1ba);
        EXPECT(gbc.pc(), 0xc8ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8e9), 0x93);
        // 93 0320
        gbc.setState(0xd763, 0xc23f, 0x1930, 0xec93, 0x3bd4, 0xc0b1, 0x0, 0x0);
        gbc.writeMem(0xd763, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc23f);
        EXPECT(gbc.pc(), 0xd764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd763), 0x93);
        // 93 0322
        gbc.setState(0x3649, 0x17b1, 0x4410, 0xb16, 0xece8, 0xa5b0, 0x1, 0x1);
        gbc.writeMem(0x3649, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x17b1);
        EXPECT(gbc.pc(), 0x364a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0323
        gbc.setState(0x6f6, 0x5bb1, 0x4690, 0xd465, 0x53c3, 0xc184, 0x1, 0x1);
        gbc.writeMem(0x6f6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5bb1);
        EXPECT(gbc.pc(), 0x6f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0324
        gbc.setState(0x63d6, 0xe4f9, 0xb100, 0x86b6, 0xa9a9, 0x464b, 0x0, 0x0);
        gbc.writeMem(0x63d6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe4f9);
        EXPECT(gbc.pc(), 0x63d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0325
        gbc.setState(0x973c, 0xdf01, 0xb60, 0x9212, 0xd275, 0x4aca, 0x0, 0x0);
        gbc.writeMem(0x973c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdf01);
        EXPECT(gbc.pc(), 0x973d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x973c), 0x93);
        // 93 0326
        gbc.setState(0x5255, 0x8ef5, 0x8e90, 0x42a6, 0x90bb, 0x7e49, 0x0, 0x0);
        gbc.writeMem(0x5255, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8ef5);
        EXPECT(gbc.pc(), 0x5256);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0327
        gbc.setState(0x7d03, 0x3479, 0x3d00, 0x9972, 0xd000, 0x73c3, 0x0, 0x0);
        gbc.writeMem(0x7d03, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3479);
        EXPECT(gbc.pc(), 0x7d04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0328
        gbc.setState(0xd35a, 0x8d21, 0x8130, 0x9cd0, 0x965d, 0xedc6, 0x1, 0x0);
        gbc.writeMem(0xd35a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8d21);
        EXPECT(gbc.pc(), 0xd35b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd35a), 0x93);
        // 93 0329
        gbc.setState(0xdfde, 0x52ab, 0xac70, 0x5baa, 0x4e67, 0x562e, 0x0, 0x0);
        gbc.writeMem(0xdfde, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x52ab);
        EXPECT(gbc.pc(), 0xdfdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfde), 0x93);
        // 93 032A
        gbc.setState(0x99ad, 0x6e5e, 0x5530, 0xf01f, 0xafc3, 0xb69a, 0x1, 0x0);
        gbc.writeMem(0x99ad, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6e5e);
        EXPECT(gbc.pc(), 0x99ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99ad), 0x93);
        // 93 032B
        gbc.setState(0xea5b, 0xe04f, 0xeb50, 0x8732, 0x81d5, 0x6c2e, 0x1, 0x0);
        gbc.writeMem(0xea5b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe04f);
        EXPECT(gbc.pc(), 0xea5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea5b), 0x93);
        // 93 032C
        gbc.setState(0x6a0d, 0x67da, 0x8420, 0x1d83, 0xc9a5, 0xfe48, 0x1, 0x1);
        gbc.writeMem(0x6a0d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x67da);
        EXPECT(gbc.pc(), 0x6a0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 032D
        gbc.setState(0xafdd, 0x377, 0xcc60, 0xd392, 0x9980, 0x64ff, 0x1, 0x0);
        gbc.writeMem(0xafdd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x377);
        EXPECT(gbc.pc(), 0xafde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafdd), 0x93);
        // 93 032E
        gbc.setState(0x2c8d, 0xe2e9, 0x250, 0xa799, 0x3744, 0xbf68, 0x1, 0x1);
        gbc.writeMem(0x2c8d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe2e9);
        EXPECT(gbc.pc(), 0x2c8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 032F
        gbc.setState(0x49b2, 0x392e, 0x1070, 0x99ba, 0xb615, 0x4794, 0x0, 0x0);
        gbc.writeMem(0x49b2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x392e);
        EXPECT(gbc.pc(), 0x49b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0330
        gbc.setState(0xef4a, 0xd54d, 0xd910, 0x3b1f, 0x576d, 0x726, 0x1, 0x0);
        gbc.writeMem(0xef4a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd54d);
        EXPECT(gbc.pc(), 0xef4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef4a), 0x93);
        // 93 0331
        gbc.setState(0x4e2a, 0xd6ff, 0xa680, 0x5f7, 0xa2f9, 0xa45d, 0x1, 0x0);
        gbc.writeMem(0x4e2a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd6ff);
        EXPECT(gbc.pc(), 0x4e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0332
        gbc.setState(0x489b, 0x9295, 0xbd40, 0x99b7, 0x20d2, 0xdb3c, 0x0, 0x0);
        gbc.writeMem(0x489b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9295);
        EXPECT(gbc.pc(), 0x489c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0333
        gbc.setState(0x52c, 0x2083, 0xc610, 0xaceb, 0xb1eb, 0x84a, 0x0, 0x1);
        gbc.writeMem(0x52c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2083);
        EXPECT(gbc.pc(), 0x52d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0334
        gbc.setState(0x369e, 0x5b1a, 0xa10, 0xc9cd, 0xe141, 0x6229, 0x1, 0x0);
        gbc.writeMem(0x369e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5b1a);
        EXPECT(gbc.pc(), 0x369f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0335
        gbc.setState(0x4076, 0x6b1d, 0x170, 0xee3e, 0x54ae, 0x76cd, 0x1, 0x1);
        gbc.writeMem(0x4076, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6b1d);
        EXPECT(gbc.pc(), 0x4077);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0336
        gbc.setState(0x1bab, 0xa57, 0xb5b0, 0x7441, 0x198b, 0x410c, 0x0, 0x1);
        gbc.writeMem(0x1bab, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa57);
        EXPECT(gbc.pc(), 0x1bac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0338
        gbc.setState(0xe803, 0xeba9, 0xffb0, 0xd80b, 0xc966, 0x9c85, 0x1, 0x1);
        gbc.writeMem(0xe803, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xeba9);
        EXPECT(gbc.pc(), 0xe804);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe803), 0x93);
        // 93 0339
        gbc.setState(0x5649, 0xbc14, 0xcba0, 0x593c, 0x35c5, 0x78fe, 0x1, 0x0);
        gbc.writeMem(0x5649, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xbc14);
        EXPECT(gbc.pc(), 0x564a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 033A
        gbc.setState(0xae41, 0xb129, 0x1da0, 0x7a41, 0xd385, 0xed69, 0x1, 0x1);
        gbc.writeMem(0xae41, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb129);
        EXPECT(gbc.pc(), 0xae42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae41), 0x93);
        // 93 033B
        gbc.setState(0x2cb1, 0xabf1, 0x4fc0, 0xb105, 0x6cbd, 0xcbe8, 0x0, 0x0);
        gbc.writeMem(0x2cb1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xabf1);
        EXPECT(gbc.pc(), 0x2cb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 033C
        gbc.setState(0x89af, 0x1836, 0xc350, 0x75ac, 0x79e7, 0x50b6, 0x1, 0x0);
        gbc.writeMem(0x89af, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1836);
        EXPECT(gbc.pc(), 0x89b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89af), 0x93);
        // 93 033D
        gbc.setState(0x859c, 0xa881, 0x3050, 0x2a97, 0x2f31, 0xc4e7, 0x1, 0x0);
        gbc.writeMem(0x859c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa881);
        EXPECT(gbc.pc(), 0x859d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x859c), 0x93);
        // 93 033E
        gbc.setState(0xdfe0, 0x2887, 0xc8d0, 0xe4ca, 0x5006, 0x78d3, 0x1, 0x1);
        gbc.writeMem(0xdfe0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2887);
        EXPECT(gbc.pc(), 0xdfe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfe0), 0x93);
        // 93 033F
        gbc.setState(0xbc64, 0xc71e, 0xc850, 0x7d82, 0x5fde, 0x58ac, 0x0, 0x0);
        gbc.writeMem(0xbc64, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc71e);
        EXPECT(gbc.pc(), 0xbc65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc64), 0x93);
        // 93 0340
        gbc.setState(0x1cc9, 0x62d9, 0xb840, 0x79d6, 0x5366, 0xd6cf, 0x0, 0x1);
        gbc.writeMem(0x1cc9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x62d9);
        EXPECT(gbc.pc(), 0x1cca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0341
        gbc.setState(0x4f0d, 0x5e67, 0x2e70, 0x5354, 0xb234, 0x1851, 0x0, 0x0);
        gbc.writeMem(0x4f0d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5e67);
        EXPECT(gbc.pc(), 0x4f0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0342
        gbc.setState(0x9b62, 0x5bae, 0xece0, 0xf2ba, 0xe22a, 0x33fd, 0x0, 0x1);
        gbc.writeMem(0x9b62, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5bae);
        EXPECT(gbc.pc(), 0x9b63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b62), 0x93);
        // 93 0344
        gbc.setState(0x2082, 0x842b, 0xd430, 0x49c5, 0x836a, 0xcd5d, 0x1, 0x0);
        gbc.writeMem(0x2082, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x842b);
        EXPECT(gbc.pc(), 0x2083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0345
        gbc.setState(0x90cd, 0xe4bb, 0xe800, 0x1ba5, 0x2057, 0x751b, 0x0, 0x1);
        gbc.writeMem(0x90cd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe4bb);
        EXPECT(gbc.pc(), 0x90ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90cd), 0x93);
        // 93 0346
        gbc.setState(0xc2a, 0x1414, 0x4be0, 0x9780, 0xe96d, 0x4b82, 0x1, 0x0);
        gbc.writeMem(0xc2a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1414);
        EXPECT(gbc.pc(), 0xc2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0348
        gbc.setState(0x1499, 0x678f, 0x4c70, 0x84f0, 0x6d52, 0x9329, 0x0, 0x1);
        gbc.writeMem(0x1499, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x678f);
        EXPECT(gbc.pc(), 0x149a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 034A
        gbc.setState(0xac09, 0xb72a, 0xb630, 0x32, 0xb8cc, 0x299, 0x0, 0x1);
        gbc.writeMem(0xac09, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xb72a);
        EXPECT(gbc.pc(), 0xac0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac09), 0x93);
        // 93 034B
        gbc.setState(0xd261, 0xb55a, 0xb2f0, 0xe713, 0x34ec, 0x578b, 0x0, 0x0);
        gbc.writeMem(0xd261, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb55a);
        EXPECT(gbc.pc(), 0xd262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd261), 0x93);
        // 93 034C
        gbc.setState(0x604a, 0x9753, 0x2b90, 0x9e45, 0x871d, 0x5b95, 0x1, 0x1);
        gbc.writeMem(0x604a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9753);
        EXPECT(gbc.pc(), 0x604b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 034D
        gbc.setState(0x711d, 0x4d9c, 0x24d0, 0xc8bd, 0xd7e9, 0x5b13, 0x1, 0x1);
        gbc.writeMem(0x711d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4d9c);
        EXPECT(gbc.pc(), 0x711e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 034E
        gbc.setState(0xb5e2, 0xa780, 0xc2b0, 0xe033, 0x3db1, 0x1a6f, 0x1, 0x0);
        gbc.writeMem(0xb5e2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa780);
        EXPECT(gbc.pc(), 0xb5e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5e2), 0x93);
        // 93 034F
        gbc.setState(0x20cd, 0x1bc2, 0x400, 0x5cc2, 0x65d9, 0x18ff, 0x0, 0x1);
        gbc.writeMem(0x20cd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1bc2);
        EXPECT(gbc.pc(), 0x20ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0350
        gbc.setState(0x7a86, 0x4df, 0xe590, 0x61fc, 0xf120, 0x9043, 0x1, 0x1);
        gbc.writeMem(0x7a86, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4df);
        EXPECT(gbc.pc(), 0x7a87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0351
        gbc.setState(0x42e9, 0x1142, 0x4d80, 0xe6f1, 0xd984, 0x5151, 0x0, 0x0);
        gbc.writeMem(0x42e9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1142);
        EXPECT(gbc.pc(), 0x42ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0353
        gbc.setState(0x64c5, 0x2fd4, 0xf170, 0x353e, 0x6f57, 0xcf0e, 0x0, 0x0);
        gbc.writeMem(0x64c5, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2fd4);
        EXPECT(gbc.pc(), 0x64c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0354
        gbc.setState(0xa7e7, 0x26be, 0xbe50, 0x478c, 0xbd81, 0x5a2b, 0x1, 0x1);
        gbc.writeMem(0xa7e7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x26be);
        EXPECT(gbc.pc(), 0xa7e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7e7), 0x93);
        // 93 0355
        gbc.setState(0x94dc, 0x9f63, 0x54c0, 0xa0f, 0xede5, 0xed6b, 0x1, 0x1);
        gbc.writeMem(0x94dc, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9f63);
        EXPECT(gbc.pc(), 0x94dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94dc), 0x93);
        // 93 0356
        gbc.setState(0x9cf5, 0xa23b, 0xafe0, 0x83f8, 0x284c, 0x99ac, 0x1, 0x0);
        gbc.writeMem(0x9cf5, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa23b);
        EXPECT(gbc.pc(), 0x9cf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf5), 0x93);
        // 93 0357
        gbc.setState(0x98e7, 0x3b52, 0xeb70, 0x979d, 0xbb14, 0xaf70, 0x0, 0x0);
        gbc.writeMem(0x98e7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3b52);
        EXPECT(gbc.pc(), 0x98e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e7), 0x93);
        // 93 0358
        gbc.setState(0xc3b8, 0x51cf, 0x1210, 0x72c3, 0x72f5, 0x70b2, 0x1, 0x1);
        gbc.writeMem(0xc3b8, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x51cf);
        EXPECT(gbc.pc(), 0xc3b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3b8), 0x93);
        // 93 0359
        gbc.setState(0x350f, 0xddf7, 0x6550, 0xf9f, 0xc43e, 0xdfb7, 0x1, 0x0);
        gbc.writeMem(0x350f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xddf7);
        EXPECT(gbc.pc(), 0x3510);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 035A
        gbc.setState(0x4a, 0x908b, 0x5ed0, 0xd3cf, 0xcc66, 0x3c18, 0x1, 0x0);
        gbc.writeMem(0x4a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x908b);
        EXPECT(gbc.pc(), 0x4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 035B
        gbc.setState(0x815a, 0x6277, 0x7b00, 0x6cbf, 0xf916, 0xcdc9, 0x0, 0x0);
        gbc.writeMem(0x815a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6277);
        EXPECT(gbc.pc(), 0x815b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x815a), 0x93);
        // 93 035C
        gbc.setState(0x8f53, 0xfc0, 0x99d0, 0x4c1a, 0xd3c4, 0xdb67, 0x1, 0x0);
        gbc.writeMem(0x8f53, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfc0);
        EXPECT(gbc.pc(), 0x8f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f53), 0x93);
        // 93 035D
        gbc.setState(0xc8a3, 0x40e5, 0x36b0, 0xc7a3, 0x339b, 0xac8a, 0x0, 0x0);
        gbc.writeMem(0xc8a3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x40e5);
        EXPECT(gbc.pc(), 0xc8a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a3), 0x93);
        // 93 035F
        gbc.setState(0xada0, 0x4aa3, 0xcf60, 0x6dc9, 0xcb84, 0xdcec, 0x1, 0x0);
        gbc.writeMem(0xada0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4aa3);
        EXPECT(gbc.pc(), 0xada1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada0), 0x93);
        // 93 0360
        gbc.setState(0xcffb, 0xef26, 0xeab0, 0x9875, 0x13ea, 0x1b08, 0x1, 0x1);
        gbc.writeMem(0xcffb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xef26);
        EXPECT(gbc.pc(), 0xcffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcffb), 0x93);
        // 93 0361
        gbc.setState(0x952, 0x2d17, 0xb8f0, 0x83ed, 0xd267, 0x7d2f, 0x0, 0x0);
        gbc.writeMem(0x952, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2d17);
        EXPECT(gbc.pc(), 0x953);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0362
        gbc.setState(0xe737, 0xe9b3, 0x390, 0x54e6, 0x96f4, 0xe62, 0x0, 0x0);
        gbc.writeMem(0xe737, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe9b3);
        EXPECT(gbc.pc(), 0xe738);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe737), 0x93);
        // 93 0363
        gbc.setState(0xcde5, 0x8279, 0xb4e0, 0xd23, 0x4153, 0x96d4, 0x1, 0x1);
        gbc.writeMem(0xcde5, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8279);
        EXPECT(gbc.pc(), 0xcde6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcde5), 0x93);
        // 93 0364
        gbc.setState(0x42df, 0x64db, 0x1f80, 0x24fd, 0x14aa, 0x6543, 0x1, 0x1);
        gbc.writeMem(0x42df, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x64db);
        EXPECT(gbc.pc(), 0x42e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0365
        gbc.setState(0xb7e0, 0xec0, 0xcac0, 0x1e4d, 0xf5e1, 0xf98d, 0x0, 0x1);
        gbc.writeMem(0xb7e0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xec0);
        EXPECT(gbc.pc(), 0xb7e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e0), 0x93);
        // 93 0366
        gbc.setState(0x96ff, 0x7eee, 0x8710, 0x7961, 0x4331, 0x3f2d, 0x0, 0x1);
        gbc.writeMem(0x96ff, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7eee);
        EXPECT(gbc.pc(), 0x9700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ff), 0x93);
        // 93 0367
        gbc.setState(0xc9cb, 0xfe92, 0xbcd0, 0x9d67, 0xcc18, 0xd435, 0x1, 0x1);
        gbc.writeMem(0xc9cb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xfe92);
        EXPECT(gbc.pc(), 0xc9cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9cb), 0x93);
        // 93 0369
        gbc.setState(0xc746, 0xbfcf, 0x3a10, 0x6bc0, 0x488e, 0x784f, 0x0, 0x0);
        gbc.writeMem(0xc746, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xbfcf);
        EXPECT(gbc.pc(), 0xc747);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc746), 0x93);
        // 93 036A
        gbc.setState(0xa467, 0x8cb4, 0xc410, 0x39, 0xe42c, 0xd067, 0x1, 0x0);
        gbc.writeMem(0xa467, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8cb4);
        EXPECT(gbc.pc(), 0xa468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa467), 0x93);
        // 93 036B
        gbc.setState(0x715b, 0x9efe, 0x91d0, 0x610a, 0x1658, 0x4585, 0x1, 0x1);
        gbc.writeMem(0x715b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9efe);
        EXPECT(gbc.pc(), 0x715c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 036C
        gbc.setState(0xa28f, 0x7ff, 0xb700, 0x7757, 0x1389, 0x3c78, 0x0, 0x1);
        gbc.writeMem(0xa28f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7ff);
        EXPECT(gbc.pc(), 0xa290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa28f), 0x93);
        // 93 036D
        gbc.setState(0xae0, 0x2cf7, 0xbba0, 0xed3c, 0xe394, 0xeb7a, 0x1, 0x0);
        gbc.writeMem(0xae0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2cf7);
        EXPECT(gbc.pc(), 0xae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 036E
        gbc.setState(0xeb14, 0x32c7, 0x3000, 0x870a, 0x7c21, 0x6cfa, 0x0, 0x0);
        gbc.writeMem(0xeb14, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x32c7);
        EXPECT(gbc.pc(), 0xeb15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb14), 0x93);
        // 93 036F
        gbc.setState(0x84c7, 0x9134, 0xe850, 0x3aa9, 0x1c5e, 0x6ba1, 0x0, 0x0);
        gbc.writeMem(0x84c7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9134);
        EXPECT(gbc.pc(), 0x84c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c7), 0x93);
        // 93 0370
        gbc.setState(0x80d6, 0x3522, 0x3e70, 0xde5b, 0x7a9, 0xeefc, 0x0, 0x0);
        gbc.writeMem(0x80d6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3522);
        EXPECT(gbc.pc(), 0x80d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80d6), 0x93);
        // 93 0371
        gbc.setState(0x5daa, 0xfe05, 0x2c90, 0x5ae, 0x6859, 0x3d68, 0x1, 0x0);
        gbc.writeMem(0x5daa, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xfe05);
        EXPECT(gbc.pc(), 0x5dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0372
        gbc.setState(0xa9aa, 0xc7ce, 0x3200, 0x90fd, 0xbe22, 0x93af, 0x0, 0x0);
        gbc.writeMem(0xa9aa, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc7ce);
        EXPECT(gbc.pc(), 0xa9ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9aa), 0x93);
        // 93 0373
        gbc.setState(0x7991, 0xa290, 0x6b30, 0x3eac, 0x9e03, 0x7c79, 0x1, 0x0);
        gbc.writeMem(0x7991, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa290);
        EXPECT(gbc.pc(), 0x7992);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0376
        gbc.setState(0x4ad6, 0xe7e, 0xba80, 0xc0a0, 0x3477, 0xf071, 0x1, 0x0);
        gbc.writeMem(0x4ad6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe7e);
        EXPECT(gbc.pc(), 0x4ad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0377
        gbc.setState(0x4db0, 0x2706, 0x16d0, 0x679, 0x594f, 0x37ae, 0x1, 0x1);
        gbc.writeMem(0x4db0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2706);
        EXPECT(gbc.pc(), 0x4db1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0378
        gbc.setState(0x5cec, 0xe11c, 0x5cc0, 0x8124, 0x8428, 0xb2ad, 0x1, 0x0);
        gbc.writeMem(0x5cec, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe11c);
        EXPECT(gbc.pc(), 0x5ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0379
        gbc.setState(0x6711, 0x968c, 0x2d20, 0xdbf7, 0xca85, 0xafe8, 0x0, 0x0);
        gbc.writeMem(0x6711, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x968c);
        EXPECT(gbc.pc(), 0x6712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 037A
        gbc.setState(0x465f, 0x39e5, 0xb040, 0x9bc6, 0xf1f6, 0xbcba, 0x1, 0x1);
        gbc.writeMem(0x465f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x39e5);
        EXPECT(gbc.pc(), 0x4660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 037B
        gbc.setState(0x5b8b, 0x7388, 0xf130, 0x7f5c, 0x37db, 0x563a, 0x0, 0x0);
        gbc.writeMem(0x5b8b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7388);
        EXPECT(gbc.pc(), 0x5b8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 037C
        gbc.setState(0xe06c, 0xd1f4, 0xd8e0, 0xdad2, 0xe053, 0x5fcd, 0x0, 0x1);
        gbc.writeMem(0xe06c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd1f4);
        EXPECT(gbc.pc(), 0xe06d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe06c), 0x93);
        // 93 037D
        gbc.setState(0x7491, 0x13ab, 0x6100, 0x1e7d, 0x7502, 0x9650, 0x0, 0x1);
        gbc.writeMem(0x7491, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x13ab);
        EXPECT(gbc.pc(), 0x7492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 037E
        gbc.setState(0x9855, 0x440c, 0x8a0, 0x7bde, 0x9ef, 0xa9dd, 0x1, 0x1);
        gbc.writeMem(0x9855, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x440c);
        EXPECT(gbc.pc(), 0x9856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9855), 0x93);
        // 93 037F
        gbc.setState(0xe618, 0x8461, 0xa9b0, 0xdcc1, 0xd22b, 0x7a5, 0x0, 0x0);
        gbc.writeMem(0xe618, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8461);
        EXPECT(gbc.pc(), 0xe619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe618), 0x93);
        // 93 0380
        gbc.setState(0x57d4, 0xb231, 0xdef0, 0xee54, 0x7706, 0x89e, 0x1, 0x0);
        gbc.writeMem(0x57d4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb231);
        EXPECT(gbc.pc(), 0x57d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0381
        gbc.setState(0xcaf8, 0xeeba, 0xa20, 0x895c, 0x399c, 0xe263, 0x0, 0x0);
        gbc.writeMem(0xcaf8, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xeeba);
        EXPECT(gbc.pc(), 0xcaf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaf8), 0x93);
        // 93 0382
        gbc.setState(0x4f44, 0xf2bf, 0xf2e0, 0x96b2, 0x4e90, 0x5f3a, 0x1, 0x1);
        gbc.writeMem(0x4f44, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf2bf);
        EXPECT(gbc.pc(), 0x4f45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0383
        gbc.setState(0xee63, 0xc89e, 0x4a70, 0x9b3a, 0xe2af, 0x537c, 0x1, 0x1);
        gbc.writeMem(0xee63, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc89e);
        EXPECT(gbc.pc(), 0xee64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee63), 0x93);
        // 93 0385
        gbc.setState(0xb750, 0xfde4, 0x3350, 0x95ef, 0xe4d, 0xbf21, 0x1, 0x0);
        gbc.writeMem(0xb750, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xfde4);
        EXPECT(gbc.pc(), 0xb751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb750), 0x93);
        // 93 0386
        gbc.setState(0xd3be, 0x6e7f, 0xd0b0, 0x998c, 0x98b2, 0x6f3c, 0x0, 0x0);
        gbc.writeMem(0xd3be, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6e7f);
        EXPECT(gbc.pc(), 0xd3bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3be), 0x93);
        // 93 0387
        gbc.setState(0x30c0, 0x4eb5, 0x7a00, 0x33cf, 0x1239, 0x85fe, 0x1, 0x1);
        gbc.writeMem(0x30c0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4eb5);
        EXPECT(gbc.pc(), 0x30c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 0389
        gbc.setState(0x4f21, 0xf092, 0x560, 0x18fe, 0xb4e7, 0xe142, 0x1, 0x1);
        gbc.writeMem(0x4f21, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf092);
        EXPECT(gbc.pc(), 0x4f22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 038A
        gbc.setState(0x7d3f, 0xca1, 0xb810, 0xe3f2, 0xb61f, 0xdf6f, 0x0, 0x0);
        gbc.writeMem(0x7d3f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xca1);
        EXPECT(gbc.pc(), 0x7d40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 038B
        gbc.setState(0x297f, 0x3bb9, 0x9230, 0x4d78, 0xeaa6, 0x188e, 0x1, 0x1);
        gbc.writeMem(0x297f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3bb9);
        EXPECT(gbc.pc(), 0x2980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 038C
        gbc.setState(0xbaf9, 0x8f6e, 0xc010, 0x5519, 0x1dd1, 0x45eb, 0x0, 0x1);
        gbc.writeMem(0xbaf9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8f6e);
        EXPECT(gbc.pc(), 0xbafa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaf9), 0x93);
        // 93 038D
        gbc.setState(0x9808, 0x1eb, 0xf80, 0xf782, 0x9b13, 0xa130, 0x0, 0x0);
        gbc.writeMem(0x9808, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1eb);
        EXPECT(gbc.pc(), 0x9809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9808), 0x93);
        // 93 038E
        gbc.setState(0x5d67, 0x78b9, 0x7320, 0x64f2, 0xa2dc, 0x53c1, 0x1, 0x0);
        gbc.writeMem(0x5d67, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x78b9);
        EXPECT(gbc.pc(), 0x5d68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 038F
        gbc.setState(0x7cfe, 0x9d51, 0xcc50, 0xaeca, 0x66f5, 0x4fa3, 0x0, 0x1);
        gbc.writeMem(0x7cfe, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9d51);
        EXPECT(gbc.pc(), 0x7cff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0390
        gbc.setState(0xe8b9, 0x9d21, 0x6c80, 0x848, 0xac70, 0xecd4, 0x1, 0x0);
        gbc.writeMem(0xe8b9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9d21);
        EXPECT(gbc.pc(), 0xe8ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8b9), 0x93);
        // 93 0391
        gbc.setState(0xd7bb, 0x72ff, 0x1f50, 0x3308, 0x7b6e, 0x5119, 0x0, 0x1);
        gbc.writeMem(0xd7bb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x72ff);
        EXPECT(gbc.pc(), 0xd7bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7bb), 0x93);
        // 93 0392
        gbc.setState(0x3e3a, 0xd645, 0x45e0, 0x89e5, 0xfe3d, 0x463b, 0x0, 0x1);
        gbc.writeMem(0x3e3a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd645);
        EXPECT(gbc.pc(), 0x3e3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0393
        gbc.setState(0xb073, 0xf20, 0x70c0, 0x8c0d, 0xe4c3, 0x3c3a, 0x1, 0x1);
        gbc.writeMem(0xb073, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf20);
        EXPECT(gbc.pc(), 0xb074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb073), 0x93);
        // 93 0394
        gbc.setState(0xac8c, 0xba94, 0x2250, 0x3c9f, 0x854f, 0x6c8e, 0x1, 0x0);
        gbc.writeMem(0xac8c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xba94);
        EXPECT(gbc.pc(), 0xac8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac8c), 0x93);
        // 93 0395
        gbc.setState(0xe15b, 0xa171, 0xb750, 0x3b53, 0x1de7, 0xd408, 0x0, 0x1);
        gbc.writeMem(0xe15b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa171);
        EXPECT(gbc.pc(), 0xe15c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe15b), 0x93);
        // 93 0396
        gbc.setState(0x11b2, 0xaeaa, 0x78e0, 0x59d0, 0x215c, 0xbf91, 0x1, 0x0);
        gbc.writeMem(0x11b2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xaeaa);
        EXPECT(gbc.pc(), 0x11b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 0397
        gbc.setState(0x171d, 0xd169, 0xa140, 0xd9e6, 0x3fb1, 0x8d36, 0x0, 0x1);
        gbc.writeMem(0x171d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd169);
        EXPECT(gbc.pc(), 0x171e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 0398
        gbc.setState(0x3951, 0xc7ef, 0x2620, 0x3c45, 0x50bb, 0x156, 0x1, 0x1);
        gbc.writeMem(0x3951, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc7ef);
        EXPECT(gbc.pc(), 0x3952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 0399
        gbc.setState(0x4fb8, 0x8ce, 0x20f0, 0x96c, 0x466a, 0xa633, 0x1, 0x1);
        gbc.writeMem(0x4fb8, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8ce);
        EXPECT(gbc.pc(), 0x4fb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 039A
        gbc.setState(0x384a, 0xbe95, 0xbae0, 0xcb15, 0x6ed9, 0x2031, 0x1, 0x1);
        gbc.writeMem(0x384a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbe95);
        EXPECT(gbc.pc(), 0x384b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 039B
        gbc.setState(0xb835, 0xcb3, 0x8930, 0xcbb6, 0x4848, 0xf7a5, 0x1, 0x1);
        gbc.writeMem(0xb835, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcb3);
        EXPECT(gbc.pc(), 0xb836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb835), 0x93);
        // 93 039C
        gbc.setState(0xbef1, 0x48f1, 0xf120, 0xeed5, 0x19ec, 0x9848, 0x0, 0x1);
        gbc.writeMem(0xbef1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x48f1);
        EXPECT(gbc.pc(), 0xbef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbef1), 0x93);
        // 93 039D
        gbc.setState(0x2a67, 0xe0d2, 0x9850, 0x21cc, 0x7e6, 0x7110, 0x0, 0x1);
        gbc.writeMem(0x2a67, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe0d2);
        EXPECT(gbc.pc(), 0x2a68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 039E
        gbc.setState(0x8d26, 0x6de6, 0x9c00, 0xca93, 0xda61, 0xa636, 0x0, 0x0);
        gbc.writeMem(0x8d26, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6de6);
        EXPECT(gbc.pc(), 0x8d27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d26), 0x93);
        // 93 039F
        gbc.setState(0x7ddd, 0x426f, 0xc760, 0xbeab, 0x5347, 0xf568, 0x0, 0x1);
        gbc.writeMem(0x7ddd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x426f);
        EXPECT(gbc.pc(), 0x7dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 03A0
        gbc.setState(0x1bc0, 0xb61d, 0xa100, 0x4f0, 0xdf64, 0xfdc, 0x0, 0x0);
        gbc.writeMem(0x1bc0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb61d);
        EXPECT(gbc.pc(), 0x1bc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 03A1
        gbc.setState(0x501c, 0x295a, 0x3870, 0x6b31, 0xca, 0xc3fa, 0x1, 0x0);
        gbc.writeMem(0x501c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x295a);
        EXPECT(gbc.pc(), 0x501d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 03A2
        gbc.setState(0x16fb, 0xdf09, 0x170, 0x7e68, 0x7265, 0x5aa9, 0x1, 0x1);
        gbc.writeMem(0x16fb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xdf09);
        EXPECT(gbc.pc(), 0x16fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 03A3
        gbc.setState(0xc3d, 0x8e47, 0x7830, 0x1b40, 0x62c0, 0x6da9, 0x1, 0x1);
        gbc.writeMem(0xc3d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8e47);
        EXPECT(gbc.pc(), 0xc3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 03A4
        gbc.setState(0xba85, 0x6c0a, 0xaac0, 0x5f00, 0x80a1, 0xfa6f, 0x1, 0x0);
        gbc.writeMem(0xba85, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6c0a);
        EXPECT(gbc.pc(), 0xba86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba85), 0x93);
        // 93 03A5
        gbc.setState(0x6b3d, 0xc2bb, 0xcc70, 0x77f5, 0xbed0, 0x4641, 0x0, 0x0);
        gbc.writeMem(0x6b3d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc2bb);
        EXPECT(gbc.pc(), 0x6b3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 03A6
        gbc.setState(0x96bb, 0x9d3, 0xe170, 0x7590, 0x1ac3, 0x7e3f, 0x1, 0x1);
        gbc.writeMem(0x96bb, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9d3);
        EXPECT(gbc.pc(), 0x96bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96bb), 0x93);
        // 93 03A7
        gbc.setState(0xb140, 0xabc5, 0x9320, 0xeebf, 0xa419, 0x6442, 0x1, 0x0);
        gbc.writeMem(0xb140, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xabc5);
        EXPECT(gbc.pc(), 0xb141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb140), 0x93);
        // 93 03A8
        gbc.setState(0xae97, 0x7a60, 0x18f0, 0x95e5, 0x8cbf, 0xa89d, 0x1, 0x1);
        gbc.writeMem(0xae97, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7a60);
        EXPECT(gbc.pc(), 0xae98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae97), 0x93);
        // 93 03A9
        gbc.setState(0xd827, 0xd23a, 0x4ca0, 0xadf4, 0xf3f1, 0x4394, 0x0, 0x1);
        gbc.writeMem(0xd827, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd23a);
        EXPECT(gbc.pc(), 0xd828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd827), 0x93);
        // 93 03AA
        gbc.setState(0x52e3, 0x11b6, 0x7b00, 0xb8ad, 0x59f6, 0xf5a5, 0x0, 0x0);
        gbc.writeMem(0x52e3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x11b6);
        EXPECT(gbc.pc(), 0x52e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 03AC
        gbc.setState(0xd402, 0x8fd7, 0x68d0, 0xf1aa, 0xea85, 0xa12, 0x0, 0x0);
        gbc.writeMem(0xd402, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8fd7);
        EXPECT(gbc.pc(), 0xd403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd402), 0x93);
        // 93 03AD
        gbc.setState(0x9b39, 0x6251, 0xc950, 0xa9c4, 0xc2d3, 0xbee3, 0x0, 0x0);
        gbc.writeMem(0x9b39, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x6251);
        EXPECT(gbc.pc(), 0x9b3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b39), 0x93);
        // 93 03AE
        gbc.setState(0x687b, 0xda76, 0xc7f0, 0x954d, 0x9f12, 0xdd17, 0x0, 0x0);
        gbc.writeMem(0x687b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xda76);
        EXPECT(gbc.pc(), 0x687c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 03AF
        gbc.setState(0x5df2, 0xcca7, 0x88b0, 0x6b4b, 0xa1aa, 0x7960, 0x0, 0x0);
        gbc.writeMem(0x5df2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xcca7);
        EXPECT(gbc.pc(), 0x5df3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 03B0
        gbc.setState(0xd550, 0x1fa7, 0x96b0, 0x1564, 0x933c, 0xb3df, 0x0, 0x1);
        gbc.writeMem(0xd550, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1fa7);
        EXPECT(gbc.pc(), 0xd551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd550), 0x93);
        // 93 03B1
        gbc.setState(0xd254, 0x1c0e, 0x8490, 0x93b7, 0x91dc, 0xd637, 0x0, 0x1);
        gbc.writeMem(0xd254, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1c0e);
        EXPECT(gbc.pc(), 0xd255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd254), 0x93);
        // 93 03B2
        gbc.setState(0xb3a5, 0x4a15, 0xf530, 0xafc1, 0x53fe, 0xd5d3, 0x1, 0x0);
        gbc.writeMem(0xb3a5, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4a15);
        EXPECT(gbc.pc(), 0xb3a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3a5), 0x93);
        // 93 03B3
        gbc.setState(0xce9f, 0x61c7, 0xec40, 0x3fb2, 0x675b, 0x813b, 0x1, 0x0);
        gbc.writeMem(0xce9f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x61c7);
        EXPECT(gbc.pc(), 0xcea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce9f), 0x93);
        // 93 03B4
        gbc.setState(0x6f6f, 0x457f, 0xade0, 0x2d2, 0x364d, 0x70d1, 0x0, 0x0);
        gbc.writeMem(0x6f6f, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x457f);
        EXPECT(gbc.pc(), 0x6f70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 03B5
        gbc.setState(0xa270, 0xe2ec, 0x2520, 0x5db9, 0xd6f1, 0x589d, 0x1, 0x0);
        gbc.writeMem(0xa270, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe2ec);
        EXPECT(gbc.pc(), 0xa271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa270), 0x93);
        // 93 03B6
        gbc.setState(0xdaac, 0x3332, 0xfaa0, 0xc531, 0x3bbc, 0xe209, 0x1, 0x0);
        gbc.writeMem(0xdaac, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3332);
        EXPECT(gbc.pc(), 0xdaad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaac), 0x93);
        // 93 03B7
        gbc.setState(0xbd43, 0x2798, 0x9520, 0x79a7, 0x689e, 0x4391, 0x1, 0x0);
        gbc.writeMem(0xbd43, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2798);
        EXPECT(gbc.pc(), 0xbd44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd43), 0x93);
        // 93 03B8
        gbc.setState(0xa8e8, 0x2cf6, 0xe10, 0xc1f8, 0x95c1, 0x5397, 0x1, 0x0);
        gbc.writeMem(0xa8e8, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2cf6);
        EXPECT(gbc.pc(), 0xa8e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8e8), 0x93);
        // 93 03B9
        gbc.setState(0xd832, 0x6b9f, 0xa1e0, 0x86fa, 0x18ab, 0xbcb4, 0x1, 0x1);
        gbc.writeMem(0xd832, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6b9f);
        EXPECT(gbc.pc(), 0xd833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd832), 0x93);
        // 93 03BA
        gbc.setState(0xa4d0, 0xce70, 0xa900, 0x4900, 0x96ea, 0x1cad, 0x0, 0x1);
        gbc.writeMem(0xa4d0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xce70);
        EXPECT(gbc.pc(), 0xa4d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d0), 0x93);
        // 93 03BB
        gbc.setState(0x6b68, 0x194c, 0xcdb0, 0xa749, 0x3140, 0x50af, 0x0, 0x0);
        gbc.writeMem(0x6b68, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x194c);
        EXPECT(gbc.pc(), 0x6b69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 03BC
        gbc.setState(0x31d7, 0x9a34, 0x7150, 0x3cf, 0x325c, 0xf8e2, 0x0, 0x1);
        gbc.writeMem(0x31d7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9a34);
        EXPECT(gbc.pc(), 0x31d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 03BD
        gbc.setState(0x4b4, 0xd779, 0xd790, 0x845d, 0xf2e, 0x747a, 0x0, 0x1);
        gbc.writeMem(0x4b4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd779);
        EXPECT(gbc.pc(), 0x4b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 03BE
        gbc.setState(0x4d0, 0x82ce, 0x5890, 0x73c8, 0x9c81, 0xdce, 0x1, 0x0);
        gbc.writeMem(0x4d0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x82ce);
        EXPECT(gbc.pc(), 0x4d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 03BF
        gbc.setState(0xe892, 0xbc9f, 0x2cb0, 0x5102, 0x6601, 0xa31e, 0x1, 0x1);
        gbc.writeMem(0xe892, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbc9f);
        EXPECT(gbc.pc(), 0xe893);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe892), 0x93);
        // 93 03C0
        gbc.setState(0x1ee2, 0xd9e2, 0x3f50, 0x9a59, 0x1c8a, 0x5240, 0x1, 0x1);
        gbc.writeMem(0x1ee2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd9e2);
        EXPECT(gbc.pc(), 0x1ee3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 03C1
        gbc.setState(0x8b02, 0x6424, 0xea90, 0x2a50, 0x58f5, 0x84eb, 0x0, 0x1);
        gbc.writeMem(0x8b02, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6424);
        EXPECT(gbc.pc(), 0x8b03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b02), 0x93);
        // 93 03C2
        gbc.setState(0xb06c, 0x2fbc, 0x6040, 0x1d08, 0x9a7d, 0x3234, 0x0, 0x0);
        gbc.writeMem(0xb06c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2fbc);
        EXPECT(gbc.pc(), 0xb06d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb06c), 0x93);
        // 93 03C3
        gbc.setState(0x1258, 0xd3a6, 0x9ea0, 0x38e7, 0x305a, 0xe3e7, 0x1, 0x0);
        gbc.writeMem(0x1258, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd3a6);
        EXPECT(gbc.pc(), 0x1259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 03C4
        gbc.setState(0x8197, 0x7cdd, 0x2370, 0x842, 0xe9e, 0x95f6, 0x1, 0x0);
        gbc.writeMem(0x8197, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7cdd);
        EXPECT(gbc.pc(), 0x8198);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8197), 0x93);
        // 93 03C5
        gbc.setState(0xa6e3, 0x2d79, 0xac90, 0xb880, 0x5d9b, 0xc76e, 0x0, 0x1);
        gbc.writeMem(0xa6e3, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2d79);
        EXPECT(gbc.pc(), 0xa6e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6e3), 0x93);
        // 93 03C6
        gbc.setState(0x7c1d, 0x72d4, 0x9b40, 0x7c13, 0xd9b9, 0xa3d1, 0x1, 0x1);
        gbc.writeMem(0x7c1d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x72d4);
        EXPECT(gbc.pc(), 0x7c1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 03C7
        gbc.setState(0x4f4d, 0x6861, 0x9da0, 0xde72, 0xd1ec, 0xedbc, 0x0, 0x1);
        gbc.writeMem(0x4f4d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6861);
        EXPECT(gbc.pc(), 0x4f4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 03C8
        gbc.setState(0x2f1d, 0xf431, 0x8280, 0x284e, 0x6ad5, 0xaa4a, 0x1, 0x1);
        gbc.writeMem(0x2f1d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf431);
        EXPECT(gbc.pc(), 0x2f1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 03C9
        gbc.setState(0xe643, 0x2df9, 0x4c90, 0x882c, 0x9202, 0x86b8, 0x0, 0x1);
        gbc.writeMem(0xe643, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2df9);
        EXPECT(gbc.pc(), 0xe644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe643), 0x93);
        // 93 03CA
        gbc.setState(0xcfc1, 0xd4bf, 0x1910, 0xedfd, 0xb214, 0x6b7c, 0x0, 0x0);
        gbc.writeMem(0xcfc1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd4bf);
        EXPECT(gbc.pc(), 0xcfc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfc1), 0x93);
        // 93 03CB
        gbc.setState(0xaf4e, 0xa2e0, 0x60e0, 0x63e3, 0xddd7, 0x39f2, 0x0, 0x1);
        gbc.writeMem(0xaf4e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa2e0);
        EXPECT(gbc.pc(), 0xaf4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf4e), 0x93);
        // 93 03CC
        gbc.setState(0x7840, 0x6757, 0xa6d0, 0x5e47, 0xa189, 0x4c80, 0x0, 0x1);
        gbc.writeMem(0x7840, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6757);
        EXPECT(gbc.pc(), 0x7841);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 03CD
        gbc.setState(0x3039, 0xac4d, 0x71b0, 0x4da3, 0x1df, 0x9f1e, 0x1, 0x0);
        gbc.writeMem(0x3039, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xac4d);
        EXPECT(gbc.pc(), 0x303a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 03CE
        gbc.setState(0x1cf6, 0x6835, 0x6380, 0xbc8c, 0x833b, 0x6c18, 0x1, 0x0);
        gbc.writeMem(0x1cf6, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6835);
        EXPECT(gbc.pc(), 0x1cf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 93 03CF
        gbc.setState(0xef70, 0xd692, 0xcbe0, 0x82cf, 0xbd94, 0xceca, 0x1, 0x0);
        gbc.writeMem(0xef70, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd692);
        EXPECT(gbc.pc(), 0xef71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef70), 0x93);
        // 93 03D0
        gbc.setState(0x50a9, 0x840f, 0xf7d0, 0x206, 0xd4e2, 0x73, 0x1, 0x0);
        gbc.writeMem(0x50a9, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x840f);
        EXPECT(gbc.pc(), 0x50aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 03D1
        gbc.setState(0x8c0d, 0x90f3, 0xee70, 0x9643, 0x4e22, 0x80f9, 0x0, 0x0);
        gbc.writeMem(0x8c0d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x90f3);
        EXPECT(gbc.pc(), 0x8c0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c0d), 0x93);
        // 93 03D2
        gbc.setState(0xa665, 0x9c69, 0x9120, 0x3f62, 0x8e37, 0x9bc6, 0x1, 0x1);
        gbc.writeMem(0xa665, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9c69);
        EXPECT(gbc.pc(), 0xa666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa665), 0x93);
        // 93 03D3
        gbc.setState(0xacf0, 0xdf8d, 0xa350, 0x20ec, 0x7455, 0x8db4, 0x1, 0x0);
        gbc.writeMem(0xacf0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xdf8d);
        EXPECT(gbc.pc(), 0xacf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacf0), 0x93);
        // 93 03D4
        gbc.setState(0xec7b, 0x52a, 0x4530, 0x53d1, 0x9a06, 0x1c9c, 0x0, 0x0);
        gbc.writeMem(0xec7b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x52a);
        EXPECT(gbc.pc(), 0xec7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec7b), 0x93);
        // 93 03D6
        gbc.setState(0x236e, 0x4f0c, 0x2400, 0x2806, 0x695, 0x92c1, 0x1, 0x1);
        gbc.writeMem(0x236e, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4f0c);
        EXPECT(gbc.pc(), 0x236f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 03D7
        gbc.setState(0x666b, 0xebcc, 0x6b70, 0x1c9e, 0xf781, 0x232c, 0x1, 0x0);
        gbc.writeMem(0x666b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xebcc);
        EXPECT(gbc.pc(), 0x666c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 03D9
        gbc.setState(0x2114, 0xe5e1, 0xd720, 0x346e, 0xaa92, 0x568d, 0x0, 0x0);
        gbc.writeMem(0x2114, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe5e1);
        EXPECT(gbc.pc(), 0x2115);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 03DA
        gbc.setState(0x596d, 0xd7b3, 0xca20, 0x1e0c, 0xcfe7, 0x10b0, 0x0, 0x1);
        gbc.writeMem(0x596d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd7b3);
        EXPECT(gbc.pc(), 0x596e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 03DB
        gbc.setState(0x6346, 0x5256, 0x2c60, 0xe5c, 0x8031, 0x428a, 0x0, 0x1);
        gbc.writeMem(0x6346, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5256);
        EXPECT(gbc.pc(), 0x6347);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 03DC
        gbc.setState(0x786d, 0x502a, 0x51c0, 0xf31d, 0xfb40, 0x9ba1, 0x0, 0x0);
        gbc.writeMem(0x786d, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x502a);
        EXPECT(gbc.pc(), 0x786e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 03DD
        gbc.setState(0xc12, 0xf65d, 0xef80, 0xf770, 0xbb36, 0xd608, 0x1, 0x1);
        gbc.writeMem(0xc12, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf65d);
        EXPECT(gbc.pc(), 0xc13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 03DE
        gbc.setState(0x64b, 0xf58e, 0xb460, 0x1e5a, 0x8b62, 0x75c6, 0x0, 0x0);
        gbc.writeMem(0x64b, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf58e);
        EXPECT(gbc.pc(), 0x64c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 03DF
        gbc.setState(0xa1ba, 0x69c5, 0xe470, 0x2392, 0x9202, 0xec8d, 0x1, 0x1);
        gbc.writeMem(0xa1ba, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x69c5);
        EXPECT(gbc.pc(), 0xa1bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1ba), 0x93);
        // 93 03E0
        gbc.setState(0x45c2, 0x6b85, 0x5520, 0xd27b, 0x7f93, 0xa7a3, 0x0, 0x1);
        gbc.writeMem(0x45c2, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6b85);
        EXPECT(gbc.pc(), 0x45c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 03E1
        gbc.setState(0xbcbd, 0x1ccb, 0x87c0, 0x5c9e, 0x34d2, 0x54e5, 0x0, 0x1);
        gbc.writeMem(0xbcbd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1ccb);
        EXPECT(gbc.pc(), 0xbcbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcbd), 0x93);
        // 93 03E2
        gbc.setState(0x3b86, 0x2850, 0xdc50, 0x348, 0xc991, 0xf1f0, 0x1, 0x1);
        gbc.writeMem(0x3b86, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2850);
        EXPECT(gbc.pc(), 0x3b87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 93 03E3
        gbc.setState(0x47f1, 0x8773, 0x88a0, 0x939d, 0x4ade, 0xf2ec, 0x0, 0x0);
        gbc.writeMem(0x47f1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8773);
        EXPECT(gbc.pc(), 0x47f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 93 03E4
        gbc.setState(0x4dc0, 0xb9f0, 0x2e80, 0x76b5, 0x6bd8, 0xacbf, 0x0, 0x0);
        gbc.writeMem(0x4dc0, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb9f0);
        EXPECT(gbc.pc(), 0x4dc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 93 03E5
        gbc.setState(0xcd8c, 0x21a3, 0xca80, 0x5f0c, 0xc978, 0x3d9c, 0x1, 0x1);
        gbc.writeMem(0xcd8c, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x21a3);
        EXPECT(gbc.pc(), 0xcd8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd8c), 0x93);
        // 93 03E6
        gbc.setState(0x95ed, 0x7905, 0xd7e0, 0xe48d, 0xbb52, 0x1062, 0x1, 0x0);
        gbc.writeMem(0x95ed, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7905);
        EXPECT(gbc.pc(), 0x95ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ed), 0x93);
        // 93 03E7
        gbc.setState(0x7d23, 0x5401, 0x2f00, 0xcb94, 0xe79c, 0xc7e4, 0x0, 0x0);
        gbc.writeMem(0x7d23, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5401);
        EXPECT(gbc.pc(), 0x7d24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
    }
