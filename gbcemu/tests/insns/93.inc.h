    TEST(gbcemu, opcode_93) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 93 0000
        gbc.setState(0x4f22, 0x56f2, 0x1140, 0x81ee, 0x440c, 0xfc60, 0x1, 0x0);
        gbc.writeMem(0x4f22, { 0x93 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x56f2, gbc.sp());
        EXPECT(0x4f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0001
        gbc.setState(0x79a3, 0x4baf, 0x58b0, 0x676f, 0x3b1f, 0xf7, 0x0, 0x1);
        gbc.writeMem(0x79a3, { 0x93 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4baf, gbc.sp());
        EXPECT(0x79a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0002
        gbc.setState(0x35cb, 0x25ec, 0xa480, 0xb5e2, 0x36df, 0x8aa9, 0x1, 0x0);
        gbc.writeMem(0x35cb, { 0x93 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x25ec, gbc.sp());
        EXPECT(0x35cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0003
        gbc.setState(0x7988, 0x2010, 0xe680, 0xaade, 0xff6c, 0x58e, 0x1, 0x1);
        gbc.writeMem(0x7988, { 0x93 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2010, gbc.sp());
        EXPECT(0x7989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0004
        gbc.setState(0x22e2, 0xf7f4, 0xc870, 0x6748, 0xf4ab, 0x3264, 0x0, 0x1);
        gbc.writeMem(0x22e2, { 0x93 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf7f4, gbc.sp());
        EXPECT(0x22e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0005
        gbc.setState(0x4b8c, 0x8c9f, 0x8e90, 0x4f44, 0xc339, 0x8ca3, 0x0, 0x1);
        gbc.writeMem(0x4b8c, { 0x93 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8c9f, gbc.sp());
        EXPECT(0x4b8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0006
        gbc.setState(0x26f9, 0xeebe, 0xa990, 0x53fb, 0x1817, 0xddae, 0x1, 0x1);
        gbc.writeMem(0x26f9, { 0x93 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xeebe, gbc.sp());
        EXPECT(0x26fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0007
        gbc.setState(0x4309, 0xaf29, 0x8960, 0x4ded, 0x5afb, 0xaa64, 0x0, 0x1);
        gbc.writeMem(0x4309, { 0x93 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xaf29, gbc.sp());
        EXPECT(0x430a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0008
        gbc.setState(0x4d72, 0x3c80, 0x4500, 0xe45f, 0xeecf, 0xd9d, 0x1, 0x1);
        gbc.writeMem(0x4d72, { 0x93 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3c80, gbc.sp());
        EXPECT(0x4d73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0009
        gbc.setState(0x76fd, 0x2c18, 0x72c0, 0xd1e8, 0x85f3, 0x3180, 0x0, 0x1);
        gbc.writeMem(0x76fd, { 0x93 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2c18, gbc.sp());
        EXPECT(0x76fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 000A
        gbc.setState(0xa216, 0x55f7, 0x960, 0xcac4, 0x656a, 0xac4f, 0x1, 0x0);
        gbc.writeMem(0xa216, { 0x93 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x55f7, gbc.sp());
        EXPECT(0xa217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa216));
        // 93 000B
        gbc.setState(0x8d9, 0xe19, 0x2e0, 0x67f, 0x1f6b, 0x1e93, 0x0, 0x0);
        gbc.writeMem(0x8d9, { 0x93 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe19, gbc.sp());
        EXPECT(0x8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 000C
        gbc.setState(0x4a90, 0x6ec9, 0x5b80, 0x8bfd, 0xb450, 0x678b, 0x0, 0x0);
        gbc.writeMem(0x4a90, { 0x93 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6ec9, gbc.sp());
        EXPECT(0x4a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 000D
        gbc.setState(0x1925, 0x100f, 0xc7d0, 0x3826, 0x1fd7, 0xe18d, 0x1, 0x1);
        gbc.writeMem(0x1925, { 0x93 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x100f, gbc.sp());
        EXPECT(0x1926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 000E
        gbc.setState(0xc0a4, 0xdae9, 0x6d80, 0x65c2, 0x27ab, 0x4969, 0x1, 0x1);
        gbc.writeMem(0xc0a4, { 0x93 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdae9, gbc.sp());
        EXPECT(0xc0a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc0a4));
        // 93 000F
        gbc.setState(0xe83f, 0x4ccf, 0x6050, 0x734, 0xc6aa, 0x9de, 0x1, 0x1);
        gbc.writeMem(0xe83f, { 0x93 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4ccf, gbc.sp());
        EXPECT(0xe840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe83f));
        // 93 0010
        gbc.setState(0x40b1, 0x6d57, 0x14f0, 0xdeb5, 0x28f4, 0x9491, 0x0, 0x1);
        gbc.writeMem(0x40b1, { 0x93 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6d57, gbc.sp());
        EXPECT(0x40b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0011
        gbc.setState(0xa88f, 0x7aba, 0xb880, 0x7ace, 0x321f, 0xcc7a, 0x1, 0x0);
        gbc.writeMem(0xa88f, { 0x93 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7aba, gbc.sp());
        EXPECT(0xa890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa88f));
        // 93 0012
        gbc.setState(0x4c6d, 0x43e3, 0x42c0, 0xaf9, 0x76aa, 0xd655, 0x1, 0x0);
        gbc.writeMem(0x4c6d, { 0x93 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x43e3, gbc.sp());
        EXPECT(0x4c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0013
        gbc.setState(0xbebd, 0x2e2e, 0xe5f0, 0xa7c0, 0x299, 0xbe3e, 0x1, 0x0);
        gbc.writeMem(0xbebd, { 0x93 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2e2e, gbc.sp());
        EXPECT(0xbebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbebd));
        // 93 0014
        gbc.setState(0x8654, 0x2a45, 0x4070, 0x7fd6, 0xbe62, 0x12e5, 0x1, 0x0);
        gbc.writeMem(0x8654, { 0x93 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2a45, gbc.sp());
        EXPECT(0x8655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8654));
        // 93 0015
        gbc.setState(0x3bdc, 0x54d3, 0xd450, 0x5db6, 0xdd4e, 0xc2bf, 0x0, 0x0);
        gbc.writeMem(0x3bdc, { 0x93 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x54d3, gbc.sp());
        EXPECT(0x3bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0016
        gbc.setState(0x9486, 0x136c, 0xe580, 0xc142, 0xe60, 0x5f71, 0x1, 0x1);
        gbc.writeMem(0x9486, { 0x93 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x136c, gbc.sp());
        EXPECT(0x9487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9486));
        // 93 0017
        gbc.setState(0xe31f, 0x92da, 0xff40, 0x6e51, 0x632, 0x41b9, 0x1, 0x0);
        gbc.writeMem(0xe31f, { 0x93 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x92da, gbc.sp());
        EXPECT(0xe320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe31f));
        // 93 0018
        gbc.setState(0xd807, 0xc088, 0x7310, 0xabea, 0x5f41, 0xeaf0, 0x1, 0x0);
        gbc.writeMem(0xd807, { 0x93 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc088, gbc.sp());
        EXPECT(0xd808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd807));
        // 93 0019
        gbc.setState(0x4a79, 0xaf7b, 0x30a0, 0xf9e2, 0x4c74, 0xe101, 0x1, 0x0);
        gbc.writeMem(0x4a79, { 0x93 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xaf7b, gbc.sp());
        EXPECT(0x4a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 001A
        gbc.setState(0x3789, 0xcdb8, 0xfc90, 0x910e, 0xd694, 0x6d15, 0x0, 0x1);
        gbc.writeMem(0x3789, { 0x93 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcdb8, gbc.sp());
        EXPECT(0x378a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 001C
        gbc.setState(0xa6ad, 0x63d2, 0x4ab0, 0x88e, 0xb8a, 0x3d5f, 0x0, 0x1);
        gbc.writeMem(0xa6ad, { 0x93 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x63d2, gbc.sp());
        EXPECT(0xa6ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa6ad));
        // 93 001D
        gbc.setState(0x1019, 0xc54, 0xdbb0, 0x311, 0x19b7, 0x3b73, 0x0, 0x1);
        gbc.writeMem(0x1019, { 0x93 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc54, gbc.sp());
        EXPECT(0x101a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 001E
        gbc.setState(0x5d5, 0xfcbf, 0xbf10, 0xd8a5, 0xad8, 0x77aa, 0x1, 0x0);
        gbc.writeMem(0x5d5, { 0x93 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfcbf, gbc.sp());
        EXPECT(0x5d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 001F
        gbc.setState(0xb09d, 0x4eb4, 0x20f0, 0xf5aa, 0x3066, 0xc29, 0x1, 0x0);
        gbc.writeMem(0xb09d, { 0x93 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4eb4, gbc.sp());
        EXPECT(0xb09e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb09d));
        // 93 0020
        gbc.setState(0xe4aa, 0x5e12, 0x8ae0, 0xe534, 0x342, 0xda9b, 0x0, 0x0);
        gbc.writeMem(0xe4aa, { 0x93 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5e12, gbc.sp());
        EXPECT(0xe4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe4aa));
        // 93 0021
        gbc.setState(0xb5ab, 0x1c66, 0x5250, 0x832a, 0xa430, 0x96b9, 0x1, 0x0);
        gbc.writeMem(0xb5ab, { 0x93 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1c66, gbc.sp());
        EXPECT(0xb5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb5ab));
        // 93 0022
        gbc.setState(0x213c, 0x2592, 0x75b0, 0xca9c, 0x9cf, 0x3839, 0x0, 0x0);
        gbc.writeMem(0x213c, { 0x93 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2592, gbc.sp());
        EXPECT(0x213d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0023
        gbc.setState(0x5d41, 0xaed2, 0x1cd0, 0x3944, 0x9ac0, 0x5603, 0x0, 0x1);
        gbc.writeMem(0x5d41, { 0x93 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xaed2, gbc.sp());
        EXPECT(0x5d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0024
        gbc.setState(0x7e33, 0x53c4, 0x4b90, 0xd309, 0x6ee0, 0xdc1, 0x1, 0x0);
        gbc.writeMem(0x7e33, { 0x93 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x53c4, gbc.sp());
        EXPECT(0x7e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0025
        gbc.setState(0x12b2, 0x6bc8, 0x2280, 0x2561, 0x2e01, 0x4dc, 0x1, 0x0);
        gbc.writeMem(0x12b2, { 0x93 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6bc8, gbc.sp());
        EXPECT(0x12b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0027
        gbc.setState(0x3462, 0x6281, 0x9ae0, 0xb40e, 0xc44c, 0xb23d, 0x1, 0x1);
        gbc.writeMem(0x3462, { 0x93 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6281, gbc.sp());
        EXPECT(0x3463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0028
        gbc.setState(0x977a, 0x710f, 0x6060, 0xea66, 0x1920, 0xb077, 0x1, 0x0);
        gbc.writeMem(0x977a, { 0x93 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x710f, gbc.sp());
        EXPECT(0x977b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x977a));
        // 93 0029
        gbc.setState(0x9d30, 0x5dc7, 0x5b50, 0xaafd, 0xf195, 0x983, 0x1, 0x0);
        gbc.writeMem(0x9d30, { 0x93 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5dc7, gbc.sp());
        EXPECT(0x9d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9d30));
        // 93 002A
        gbc.setState(0x3f8, 0xe35b, 0x5610, 0x5d06, 0x1384, 0xd4b4, 0x0, 0x1);
        gbc.writeMem(0x3f8, { 0x93 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe35b, gbc.sp());
        EXPECT(0x3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 002B
        gbc.setState(0x6307, 0xa387, 0xaf70, 0x66c, 0x38d9, 0x7ddf, 0x0, 0x0);
        gbc.writeMem(0x6307, { 0x93 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa387, gbc.sp());
        EXPECT(0x6308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 002C
        gbc.setState(0x6a02, 0xdcb7, 0x8480, 0xac9f, 0x8aa9, 0x2b2f, 0x0, 0x1);
        gbc.writeMem(0x6a02, { 0x93 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xdcb7, gbc.sp());
        EXPECT(0x6a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 002D
        gbc.setState(0xd444, 0x92bc, 0xb120, 0xd492, 0x1348, 0xe91c, 0x0, 0x0);
        gbc.writeMem(0xd444, { 0x93 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x92bc, gbc.sp());
        EXPECT(0xd445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd444));
        // 93 002E
        gbc.setState(0xdb06, 0x9ac4, 0x88b0, 0x3f21, 0xb749, 0xa898, 0x1, 0x0);
        gbc.writeMem(0xdb06, { 0x93 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9ac4, gbc.sp());
        EXPECT(0xdb07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xdb06));
        // 93 002F
        gbc.setState(0xd8bb, 0x4e5b, 0x7530, 0x724b, 0x1a0, 0xa75d, 0x1, 0x0);
        gbc.writeMem(0xd8bb, { 0x93 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4e5b, gbc.sp());
        EXPECT(0xd8bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd8bb));
        // 93 0030
        gbc.setState(0x3a68, 0xa88, 0x690, 0x1257, 0xbcf5, 0xf5fe, 0x0, 0x0);
        gbc.writeMem(0x3a68, { 0x93 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa88, gbc.sp());
        EXPECT(0x3a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0031
        gbc.setState(0xd61d, 0x7d40, 0xf9c0, 0xfc16, 0x8575, 0x271e, 0x1, 0x1);
        gbc.writeMem(0xd61d, { 0x93 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7d40, gbc.sp());
        EXPECT(0xd61e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd61d));
        // 93 0032
        gbc.setState(0x9b48, 0xfa3e, 0x91c0, 0xd756, 0x8f2, 0x620c, 0x0, 0x0);
        gbc.writeMem(0x9b48, { 0x93 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfa3e, gbc.sp());
        EXPECT(0x9b49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9b48));
        // 93 0033
        gbc.setState(0x1ee6, 0x49a2, 0x5840, 0x18e6, 0x777d, 0xf24a, 0x1, 0x1);
        gbc.writeMem(0x1ee6, { 0x93 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x49a2, gbc.sp());
        EXPECT(0x1ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0034
        gbc.setState(0xcda3, 0x4cdf, 0x7370, 0x5d70, 0x7e57, 0x4fa4, 0x0, 0x0);
        gbc.writeMem(0xcda3, { 0x93 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4cdf, gbc.sp());
        EXPECT(0xcda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcda3));
        // 93 0035
        gbc.setState(0xba15, 0x271d, 0x86d0, 0x11c, 0x460a, 0x363a, 0x0, 0x0);
        gbc.writeMem(0xba15, { 0x93 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x271d, gbc.sp());
        EXPECT(0xba16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xba15));
        // 93 0036
        gbc.setState(0x94c, 0x5bc1, 0xa220, 0x3218, 0x5742, 0x5df1, 0x0, 0x1);
        gbc.writeMem(0x94c, { 0x93 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5bc1, gbc.sp());
        EXPECT(0x94d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0037
        gbc.setState(0xb430, 0x60ff, 0xb9c0, 0xd589, 0xb0e7, 0x58da, 0x0, 0x1);
        gbc.writeMem(0xb430, { 0x93 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x60ff, gbc.sp());
        EXPECT(0xb431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb430));
        // 93 0038
        gbc.setState(0x8776, 0x8e41, 0xef10, 0x6175, 0xf563, 0x3538, 0x1, 0x0);
        gbc.writeMem(0x8776, { 0x93 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8e41, gbc.sp());
        EXPECT(0x8777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8776));
        // 93 0039
        gbc.setState(0x1290, 0x6acd, 0x64b0, 0xcb16, 0x2fec, 0x57c8, 0x1, 0x0);
        gbc.writeMem(0x1290, { 0x93 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6acd, gbc.sp());
        EXPECT(0x1291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 003A
        gbc.setState(0x510e, 0x795a, 0x7db0, 0xa3c0, 0x7e30, 0x77af, 0x0, 0x1);
        gbc.writeMem(0x510e, { 0x93 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x795a, gbc.sp());
        EXPECT(0x510f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 003B
        gbc.setState(0x2f27, 0x39c1, 0x6f30, 0xf8fc, 0x9368, 0xfdc6, 0x1, 0x0);
        gbc.writeMem(0x2f27, { 0x93 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x39c1, gbc.sp());
        EXPECT(0x2f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 003C
        gbc.setState(0xd258, 0x3118, 0x23f0, 0x651a, 0xcdd8, 0xf462, 0x1, 0x0);
        gbc.writeMem(0xd258, { 0x93 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3118, gbc.sp());
        EXPECT(0xd259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd258));
        // 93 003E
        gbc.setState(0x57b5, 0xf98d, 0xed70, 0x227e, 0x838, 0x207b, 0x0, 0x1);
        gbc.writeMem(0x57b5, { 0x93 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf98d, gbc.sp());
        EXPECT(0x57b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0040
        gbc.setState(0xa1aa, 0x41ce, 0xfe90, 0x6098, 0x32d4, 0x893f, 0x0, 0x0);
        gbc.writeMem(0xa1aa, { 0x93 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x41ce, gbc.sp());
        EXPECT(0xa1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa1aa));
        // 93 0041
        gbc.setState(0x3271, 0xc100, 0xca0, 0xae7a, 0x7dcf, 0x42cc, 0x0, 0x1);
        gbc.writeMem(0x3271, { 0x93 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc100, gbc.sp());
        EXPECT(0x3272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0042
        gbc.setState(0x6c11, 0xb9b5, 0x4910, 0xb1e5, 0x427, 0x767, 0x1, 0x1);
        gbc.writeMem(0x6c11, { 0x93 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb9b5, gbc.sp());
        EXPECT(0x6c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0043
        gbc.setState(0xe337, 0xec8b, 0x2910, 0x9dbe, 0xea5d, 0x4eb3, 0x1, 0x0);
        gbc.writeMem(0xe337, { 0x93 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xec8b, gbc.sp());
        EXPECT(0xe338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe337));
        // 93 0044
        gbc.setState(0xeb66, 0x6cfe, 0x71a0, 0x6650, 0x146f, 0xf898, 0x0, 0x1);
        gbc.writeMem(0xeb66, { 0x93 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6cfe, gbc.sp());
        EXPECT(0xeb67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xeb66));
        // 93 0045
        gbc.setState(0x174e, 0x672b, 0x16b0, 0xad1a, 0xb9d7, 0x8989, 0x1, 0x1);
        gbc.writeMem(0x174e, { 0x93 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x672b, gbc.sp());
        EXPECT(0x174f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0046
        gbc.setState(0x1a52, 0x1289, 0x4770, 0xfa8a, 0x2ea9, 0x88ad, 0x0, 0x1);
        gbc.writeMem(0x1a52, { 0x93 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1289, gbc.sp());
        EXPECT(0x1a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0048
        gbc.setState(0x3a6a, 0x3264, 0xc9d0, 0xc4bc, 0x108b, 0x9b95, 0x0, 0x1);
        gbc.writeMem(0x3a6a, { 0x93 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3264, gbc.sp());
        EXPECT(0x3a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0049
        gbc.setState(0x58ea, 0x2b7b, 0x68d0, 0x5501, 0xf5d, 0xda58, 0x0, 0x1);
        gbc.writeMem(0x58ea, { 0x93 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2b7b, gbc.sp());
        EXPECT(0x58eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 004A
        gbc.setState(0x959, 0xfe99, 0x220, 0x36f1, 0xd2c4, 0x351d, 0x0, 0x1);
        gbc.writeMem(0x959, { 0x93 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfe99, gbc.sp());
        EXPECT(0x95a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 004B
        gbc.setState(0xd7ea, 0x9585, 0xc030, 0x189a, 0x80c7, 0x32e3, 0x1, 0x0);
        gbc.writeMem(0xd7ea, { 0x93 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9585, gbc.sp());
        EXPECT(0xd7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd7ea));
        // 93 004C
        gbc.setState(0x100, 0x5526, 0x3c10, 0x194f, 0x5ddc, 0xcbfc, 0x1, 0x1);
        gbc.writeMem(0x100, { 0x93 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5526, gbc.sp());
        EXPECT(0x101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 004D
        gbc.setState(0x9318, 0x4457, 0xb700, 0x8788, 0xd16d, 0x7c0f, 0x1, 0x0);
        gbc.writeMem(0x9318, { 0x93 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4457, gbc.sp());
        EXPECT(0x9319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9318));
        // 93 004E
        gbc.setState(0x6f46, 0x3eee, 0x6ac0, 0x5d69, 0x28d8, 0xa4cf, 0x1, 0x0);
        gbc.writeMem(0x6f46, { 0x93 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3eee, gbc.sp());
        EXPECT(0x6f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 004F
        gbc.setState(0x7b02, 0xa845, 0x8460, 0x9deb, 0x13e, 0xe2e0, 0x1, 0x0);
        gbc.writeMem(0x7b02, { 0x93 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa845, gbc.sp());
        EXPECT(0x7b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0050
        gbc.setState(0x5e13, 0x4697, 0x71e0, 0xb8dc, 0x7a04, 0x496a, 0x0, 0x1);
        gbc.writeMem(0x5e13, { 0x93 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4697, gbc.sp());
        EXPECT(0x5e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0051
        gbc.setState(0xd38c, 0x1a77, 0xb160, 0xcda9, 0x8aa9, 0xb7fb, 0x0, 0x1);
        gbc.writeMem(0xd38c, { 0x93 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1a77, gbc.sp());
        EXPECT(0xd38d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd38c));
        // 93 0052
        gbc.setState(0x8e50, 0xa731, 0xcc0, 0xb7ff, 0xfd1a, 0xabce, 0x0, 0x1);
        gbc.writeMem(0x8e50, { 0x93 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa731, gbc.sp());
        EXPECT(0x8e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8e50));
        // 93 0053
        gbc.setState(0x9644, 0x520a, 0x3070, 0x78c6, 0x7ab3, 0x85ab, 0x1, 0x1);
        gbc.writeMem(0x9644, { 0x93 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x520a, gbc.sp());
        EXPECT(0x9645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9644));
        // 93 0054
        gbc.setState(0xcfc0, 0xdecf, 0x3f30, 0xac1e, 0xe891, 0x9fde, 0x0, 0x0);
        gbc.writeMem(0xcfc0, { 0x93 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdecf, gbc.sp());
        EXPECT(0xcfc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcfc0));
        // 93 0055
        gbc.setState(0x387c, 0x2cd6, 0x3b20, 0x692a, 0xbb89, 0xe5, 0x0, 0x1);
        gbc.writeMem(0x387c, { 0x93 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2cd6, gbc.sp());
        EXPECT(0x387d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0056
        gbc.setState(0x606f, 0x8741, 0xa090, 0x3344, 0x990b, 0x8e7b, 0x0, 0x1);
        gbc.writeMem(0x606f, { 0x93 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8741, gbc.sp());
        EXPECT(0x6070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0057
        gbc.setState(0xe359, 0x2a4e, 0x8d80, 0x90e6, 0x4da5, 0x2d2e, 0x1, 0x0);
        gbc.writeMem(0xe359, { 0x93 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2a4e, gbc.sp());
        EXPECT(0xe35a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe359));
        // 93 0058
        gbc.setState(0x9f3d, 0x983a, 0xbef0, 0x8871, 0xffae, 0x24a9, 0x1, 0x0);
        gbc.writeMem(0x9f3d, { 0x93 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x983a, gbc.sp());
        EXPECT(0x9f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9f3d));
        // 93 0059
        gbc.setState(0x3759, 0xabad, 0x49c0, 0xad38, 0xae6e, 0xdddc, 0x0, 0x0);
        gbc.writeMem(0x3759, { 0x93 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xabad, gbc.sp());
        EXPECT(0x375a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 005A
        gbc.setState(0x370f, 0x2ffc, 0xe200, 0xc7d0, 0xfd2a, 0xee90, 0x1, 0x0);
        gbc.writeMem(0x370f, { 0x93 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2ffc, gbc.sp());
        EXPECT(0x3710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 005B
        gbc.setState(0x8c86, 0x5ab, 0xf2d0, 0xb2a2, 0xccbd, 0xef14, 0x1, 0x1);
        gbc.writeMem(0x8c86, { 0x93 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5ab, gbc.sp());
        EXPECT(0x8c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8c86));
        // 93 005C
        gbc.setState(0x31be, 0x10fc, 0xae20, 0xad1, 0x68bc, 0x91f2, 0x1, 0x1);
        gbc.writeMem(0x31be, { 0x93 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x10fc, gbc.sp());
        EXPECT(0x31bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 005D
        gbc.setState(0x11a, 0x8a61, 0x6f30, 0xa359, 0x52e3, 0xe3c9, 0x0, 0x1);
        gbc.writeMem(0x11a, { 0x93 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8a61, gbc.sp());
        EXPECT(0x11b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 005E
        gbc.setState(0x77f6, 0x587, 0xcdf0, 0xcfca, 0xf8b, 0x8859, 0x0, 0x0);
        gbc.writeMem(0x77f6, { 0x93 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x587, gbc.sp());
        EXPECT(0x77f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 005F
        gbc.setState(0x360, 0x5b7c, 0xd150, 0xf9c, 0xeda3, 0x48ce, 0x1, 0x1);
        gbc.writeMem(0x360, { 0x93 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5b7c, gbc.sp());
        EXPECT(0x361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0060
        gbc.setState(0x9cf7, 0x5c5, 0x9720, 0x1f76, 0x6abc, 0x5c65, 0x0, 0x0);
        gbc.writeMem(0x9cf7, { 0x93 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5c5, gbc.sp());
        EXPECT(0x9cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9cf7));
        // 93 0061
        gbc.setState(0x4010, 0x16b7, 0x4c40, 0x1ae8, 0xb32d, 0x9a0e, 0x0, 0x0);
        gbc.writeMem(0x4010, { 0x93 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x16b7, gbc.sp());
        EXPECT(0x4011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0062
        gbc.setState(0xd97b, 0xffa9, 0x4070, 0x3c8, 0x9157, 0x6029, 0x0, 0x1);
        gbc.writeMem(0xd97b, { 0x93 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xffa9, gbc.sp());
        EXPECT(0xd97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd97b));
        // 93 0063
        gbc.setState(0x4617, 0xe5d6, 0xc900, 0x6507, 0x40ec, 0x863d, 0x1, 0x0);
        gbc.writeMem(0x4617, { 0x93 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe5d6, gbc.sp());
        EXPECT(0x4618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0064
        gbc.setState(0x30f4, 0x475, 0x170, 0xfa64, 0x49fd, 0x2c76, 0x0, 0x0);
        gbc.writeMem(0x30f4, { 0x93 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x475, gbc.sp());
        EXPECT(0x30f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0065
        gbc.setState(0x6024, 0xf600, 0x47b0, 0xdafd, 0x2632, 0x28a1, 0x0, 0x1);
        gbc.writeMem(0x6024, { 0x93 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf600, gbc.sp());
        EXPECT(0x6025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0066
        gbc.setState(0x501f, 0x2c82, 0xa300, 0x7b04, 0x4626, 0x537f, 0x0, 0x0);
        gbc.writeMem(0x501f, { 0x93 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2c82, gbc.sp());
        EXPECT(0x5020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0067
        gbc.setState(0xbdd0, 0x3caa, 0x7e0, 0xd5b4, 0xe5fc, 0xc4f7, 0x0, 0x0);
        gbc.writeMem(0xbdd0, { 0x93 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3caa, gbc.sp());
        EXPECT(0xbdd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbdd0));
        // 93 0068
        gbc.setState(0x8ae7, 0xc9e2, 0x1ff0, 0x955a, 0xfc62, 0xf4fe, 0x1, 0x1);
        gbc.writeMem(0x8ae7, { 0x93 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc9e2, gbc.sp());
        EXPECT(0x8ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8ae7));
        // 93 0069
        gbc.setState(0x384a, 0x1228, 0x1610, 0xe41a, 0x543, 0x4f4a, 0x0, 0x1);
        gbc.writeMem(0x384a, { 0x93 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1228, gbc.sp());
        EXPECT(0x384b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 006A
        gbc.setState(0x6171, 0xaca0, 0xf090, 0x9fa2, 0xd399, 0x7be7, 0x0, 0x0);
        gbc.writeMem(0x6171, { 0x93 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xaca0, gbc.sp());
        EXPECT(0x6172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 006C
        gbc.setState(0xa3c1, 0x5f11, 0xabc0, 0x4481, 0x7f1, 0xc9ce, 0x0, 0x0);
        gbc.writeMem(0xa3c1, { 0x93 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5f11, gbc.sp());
        EXPECT(0xa3c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa3c1));
        // 93 006D
        gbc.setState(0x36e6, 0x56ea, 0xfc20, 0x6942, 0x9315, 0xbc52, 0x0, 0x1);
        gbc.writeMem(0x36e6, { 0x93 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x56ea, gbc.sp());
        EXPECT(0x36e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 006E
        gbc.setState(0x2420, 0x3014, 0x3390, 0xa1dc, 0x74f2, 0xa449, 0x0, 0x1);
        gbc.writeMem(0x2420, { 0x93 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3014, gbc.sp());
        EXPECT(0x2421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 006F
        gbc.setState(0x9a32, 0x8620, 0x2c30, 0xd736, 0x7736, 0x5f82, 0x1, 0x0);
        gbc.writeMem(0x9a32, { 0x93 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8620, gbc.sp());
        EXPECT(0x9a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9a32));
        // 93 0070
        gbc.setState(0xe734, 0xc0ec, 0x7fc0, 0x9a4f, 0xce58, 0xda1c, 0x1, 0x1);
        gbc.writeMem(0xe734, { 0x93 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc0ec, gbc.sp());
        EXPECT(0xe735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe734));
        // 93 0072
        gbc.setState(0x2dc7, 0xaadd, 0x3760, 0xc23c, 0x97aa, 0xdca0, 0x0, 0x0);
        gbc.writeMem(0x2dc7, { 0x93 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xaadd, gbc.sp());
        EXPECT(0x2dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0073
        gbc.setState(0x9d58, 0x3d37, 0x5970, 0x9f61, 0xb7b3, 0x5e4f, 0x0, 0x1);
        gbc.writeMem(0x9d58, { 0x93 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3d37, gbc.sp());
        EXPECT(0x9d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9d58));
        // 93 0074
        gbc.setState(0xe9ae, 0x2e5f, 0x54a0, 0x6c7b, 0x4391, 0xebf6, 0x1, 0x1);
        gbc.writeMem(0xe9ae, { 0x93 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2e5f, gbc.sp());
        EXPECT(0xe9af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe9ae));
        // 93 0075
        gbc.setState(0xa090, 0x7f88, 0x1980, 0x4854, 0x4ae2, 0xf347, 0x1, 0x0);
        gbc.writeMem(0xa090, { 0x93 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7f88, gbc.sp());
        EXPECT(0xa091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa090));
        // 93 0076
        gbc.setState(0x21fe, 0xdef6, 0x200, 0xbf22, 0xdc47, 0xc714, 0x1, 0x1);
        gbc.writeMem(0x21fe, { 0x93 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdef6, gbc.sp());
        EXPECT(0x21ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0077
        gbc.setState(0xaf93, 0xc284, 0x53a0, 0xa8cd, 0x9439, 0x9ff5, 0x1, 0x1);
        gbc.writeMem(0xaf93, { 0x93 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc284, gbc.sp());
        EXPECT(0xaf94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xaf93));
        // 93 0078
        gbc.setState(0x6e08, 0x83b5, 0x4a50, 0x8e4, 0xc949, 0xcd1a, 0x1, 0x0);
        gbc.writeMem(0x6e08, { 0x93 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x83b5, gbc.sp());
        EXPECT(0x6e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0079
        gbc.setState(0xc467, 0xaba7, 0xfb20, 0x8cdd, 0x34a8, 0xdc93, 0x1, 0x1);
        gbc.writeMem(0xc467, { 0x93 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xaba7, gbc.sp());
        EXPECT(0xc468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc467));
        // 93 007A
        gbc.setState(0x193e, 0x2727, 0x1980, 0xd76d, 0x2ff9, 0x3aac, 0x1, 0x0);
        gbc.writeMem(0x193e, { 0x93 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2727, gbc.sp());
        EXPECT(0x193f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 007B
        gbc.setState(0x2aaa, 0x648c, 0x98f0, 0xe7bd, 0x12e1, 0x880a, 0x0, 0x0);
        gbc.writeMem(0x2aaa, { 0x93 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x648c, gbc.sp());
        EXPECT(0x2aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 007D
        gbc.setState(0x4b4a, 0x1ad7, 0x7d80, 0x19e0, 0x7ac8, 0x7469, 0x0, 0x1);
        gbc.writeMem(0x4b4a, { 0x93 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1ad7, gbc.sp());
        EXPECT(0x4b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 007E
        gbc.setState(0x941b, 0x77af, 0xa4d0, 0xdb7d, 0xe369, 0x77d, 0x1, 0x1);
        gbc.writeMem(0x941b, { 0x93 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x77af, gbc.sp());
        EXPECT(0x941c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x941b));
        // 93 007F
        gbc.setState(0x2d6e, 0x99c2, 0xf7c0, 0x7e8c, 0xc70e, 0xa3e3, 0x1, 0x1);
        gbc.writeMem(0x2d6e, { 0x93 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x99c2, gbc.sp());
        EXPECT(0x2d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0080
        gbc.setState(0x9549, 0x8e40, 0x6f20, 0x9cd1, 0xc217, 0x1f81, 0x0, 0x0);
        gbc.writeMem(0x9549, { 0x93 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8e40, gbc.sp());
        EXPECT(0x954a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9549));
        // 93 0081
        gbc.setState(0x9eab, 0x90d8, 0xd6d0, 0x153c, 0x5598, 0x81a4, 0x0, 0x1);
        gbc.writeMem(0x9eab, { 0x93 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x90d8, gbc.sp());
        EXPECT(0x9eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9eab));
        // 93 0082
        gbc.setState(0xc0f2, 0xadcf, 0x67f0, 0xb2c, 0xbd6a, 0x6ecb, 0x0, 0x0);
        gbc.writeMem(0xc0f2, { 0x93 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xadcf, gbc.sp());
        EXPECT(0xc0f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc0f2));
        // 93 0083
        gbc.setState(0x55da, 0x2f24, 0x11d0, 0xc6bb, 0x6b34, 0x9807, 0x1, 0x0);
        gbc.writeMem(0x55da, { 0x93 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2f24, gbc.sp());
        EXPECT(0x55db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0084
        gbc.setState(0x6c8a, 0x56a6, 0xdd40, 0x5b00, 0xe93c, 0x5777, 0x1, 0x1);
        gbc.writeMem(0x6c8a, { 0x93 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x56a6, gbc.sp());
        EXPECT(0x6c8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0085
        gbc.setState(0x615d, 0x8f28, 0x5400, 0x5baf, 0x63b0, 0x93f8, 0x0, 0x0);
        gbc.writeMem(0x615d, { 0x93 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8f28, gbc.sp());
        EXPECT(0x615e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0086
        gbc.setState(0x778a, 0xc699, 0x8220, 0x3a21, 0x5a7d, 0xa09c, 0x1, 0x1);
        gbc.writeMem(0x778a, { 0x93 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc699, gbc.sp());
        EXPECT(0x778b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0087
        gbc.setState(0xe84c, 0xf74e, 0x95a0, 0x714c, 0xa93c, 0x18f1, 0x1, 0x0);
        gbc.writeMem(0xe84c, { 0x93 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf74e, gbc.sp());
        EXPECT(0xe84d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe84c));
        // 93 0088
        gbc.setState(0xdf0d, 0xa12e, 0x6be0, 0x1666, 0xb536, 0x8360, 0x1, 0x1);
        gbc.writeMem(0xdf0d, { 0x93 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa12e, gbc.sp());
        EXPECT(0xdf0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xdf0d));
        // 93 0089
        gbc.setState(0x295d, 0x619e, 0x6030, 0x8434, 0x637c, 0xd613, 0x0, 0x1);
        gbc.writeMem(0x295d, { 0x93 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x619e, gbc.sp());
        EXPECT(0x295e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 008A
        gbc.setState(0x2995, 0x3ef0, 0x8020, 0xac2c, 0xf5fc, 0x68b3, 0x0, 0x0);
        gbc.writeMem(0x2995, { 0x93 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3ef0, gbc.sp());
        EXPECT(0x2996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 008B
        gbc.setState(0x570d, 0x7340, 0xe1b0, 0x35c5, 0xe49d, 0x7366, 0x1, 0x1);
        gbc.writeMem(0x570d, { 0x93 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7340, gbc.sp());
        EXPECT(0x570e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 008C
        gbc.setState(0x51b0, 0x889e, 0xa6c0, 0x1f47, 0x2ca7, 0x596f, 0x1, 0x1);
        gbc.writeMem(0x51b0, { 0x93 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x889e, gbc.sp());
        EXPECT(0x51b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 008D
        gbc.setState(0x918c, 0xff12, 0x3f20, 0x7fc5, 0xc3b6, 0x52e1, 0x0, 0x0);
        gbc.writeMem(0x918c, { 0x93 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xff12, gbc.sp());
        EXPECT(0x918d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x918c));
        // 93 008E
        gbc.setState(0xdfe, 0x553, 0x2ca0, 0x6609, 0xeb93, 0xfd76, 0x1, 0x0);
        gbc.writeMem(0xdfe, { 0x93 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x553, gbc.sp());
        EXPECT(0xdff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 008F
        gbc.setState(0xb01b, 0x3657, 0xc410, 0x1abf, 0x8129, 0xa3ee, 0x1, 0x1);
        gbc.writeMem(0xb01b, { 0x93 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3657, gbc.sp());
        EXPECT(0xb01c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb01b));
        // 93 0090
        gbc.setState(0xa0a7, 0xd456, 0xc650, 0x91ee, 0x69d4, 0xc955, 0x0, 0x1);
        gbc.writeMem(0xa0a7, { 0x93 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd456, gbc.sp());
        EXPECT(0xa0a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa0a7));
        // 93 0091
        gbc.setState(0x397e, 0x7765, 0x24b0, 0x45a9, 0xc0d9, 0x7622, 0x0, 0x0);
        gbc.writeMem(0x397e, { 0x93 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7765, gbc.sp());
        EXPECT(0x397f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0092
        gbc.setState(0xa6ce, 0x32df, 0x6310, 0x9525, 0x5ead, 0x5d8b, 0x1, 0x1);
        gbc.writeMem(0xa6ce, { 0x93 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x32df, gbc.sp());
        EXPECT(0xa6cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa6ce));
        // 93 0093
        gbc.setState(0xc97b, 0xbba6, 0xa510, 0x8466, 0xc360, 0x2d19, 0x1, 0x0);
        gbc.writeMem(0xc97b, { 0x93 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbba6, gbc.sp());
        EXPECT(0xc97c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc97b));
        // 93 0094
        gbc.setState(0xd68d, 0x4bf2, 0x290, 0x4d1a, 0xc55, 0x6333, 0x1, 0x0);
        gbc.writeMem(0xd68d, { 0x93 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4bf2, gbc.sp());
        EXPECT(0xd68e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd68d));
        // 93 0095
        gbc.setState(0xd75b, 0x3d96, 0x8be0, 0x730, 0x340c, 0xb4f, 0x0, 0x1);
        gbc.writeMem(0xd75b, { 0x93 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3d96, gbc.sp());
        EXPECT(0xd75c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd75b));
        // 93 0096
        gbc.setState(0x9bfe, 0x3411, 0xe920, 0xb712, 0xfb5e, 0x137f, 0x1, 0x0);
        gbc.writeMem(0x9bfe, { 0x93 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3411, gbc.sp());
        EXPECT(0x9bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9bfe));
        // 93 0097
        gbc.setState(0x5fe0, 0x597f, 0x2a10, 0x4a50, 0xc766, 0xc963, 0x1, 0x0);
        gbc.writeMem(0x5fe0, { 0x93 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x597f, gbc.sp());
        EXPECT(0x5fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0098
        gbc.setState(0x81ea, 0x51b, 0xa210, 0x175f, 0xd910, 0x7976, 0x1, 0x0);
        gbc.writeMem(0x81ea, { 0x93 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x51b, gbc.sp());
        EXPECT(0x81eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x81ea));
        // 93 0099
        gbc.setState(0xe2f3, 0xd369, 0x5b00, 0x4d3b, 0x6705, 0xd344, 0x0, 0x0);
        gbc.writeMem(0xe2f3, { 0x93 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd369, gbc.sp());
        EXPECT(0xe2f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe2f3));
        // 93 009A
        gbc.setState(0xbbdb, 0xef83, 0xfe10, 0xe4b8, 0xda3a, 0xe0ab, 0x0, 0x1);
        gbc.writeMem(0xbbdb, { 0x93 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xef83, gbc.sp());
        EXPECT(0xbbdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbbdb));
        // 93 009B
        gbc.setState(0x13e9, 0x185e, 0x2270, 0x598f, 0x7eed, 0x1248, 0x1, 0x0);
        gbc.writeMem(0x13e9, { 0x93 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x185e, gbc.sp());
        EXPECT(0x13ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 009C
        gbc.setState(0x75de, 0x516d, 0x49b0, 0x3756, 0x1b08, 0x2406, 0x1, 0x0);
        gbc.writeMem(0x75de, { 0x93 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x516d, gbc.sp());
        EXPECT(0x75df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 009D
        gbc.setState(0xcd27, 0x8b32, 0x8610, 0xc33f, 0x8df3, 0x6104, 0x0, 0x1);
        gbc.writeMem(0xcd27, { 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8b32, gbc.sp());
        EXPECT(0xcd28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcd27));
        // 93 009E
        gbc.setState(0x94fe, 0xed4e, 0xa650, 0xf2c3, 0x402c, 0xdba1, 0x1, 0x0);
        gbc.writeMem(0x94fe, { 0x93 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xed4e, gbc.sp());
        EXPECT(0x94ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x94fe));
        // 93 009F
        gbc.setState(0x4a33, 0x2668, 0x2240, 0x38da, 0x4d3b, 0x3f84, 0x1, 0x0);
        gbc.writeMem(0x4a33, { 0x93 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2668, gbc.sp());
        EXPECT(0x4a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00A0
        gbc.setState(0x1117, 0xeeb7, 0xdc10, 0xa870, 0x5b58, 0xf651, 0x1, 0x0);
        gbc.writeMem(0x1117, { 0x93 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xeeb7, gbc.sp());
        EXPECT(0x1118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00A2
        gbc.setState(0xe38e, 0x921e, 0x4a40, 0x9d39, 0xbe88, 0x3d05, 0x1, 0x0);
        gbc.writeMem(0xe38e, { 0x93 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x921e, gbc.sp());
        EXPECT(0xe38f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe38e));
        // 93 00A3
        gbc.setState(0x682e, 0xc2a3, 0xfd10, 0xfb74, 0xa9d9, 0x9520, 0x1, 0x1);
        gbc.writeMem(0x682e, { 0x93 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc2a3, gbc.sp());
        EXPECT(0x682f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00A4
        gbc.setState(0x7a12, 0x1d9b, 0xa220, 0xd22e, 0x34eb, 0xeb9, 0x0, 0x1);
        gbc.writeMem(0x7a12, { 0x93 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1d9b, gbc.sp());
        EXPECT(0x7a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00A5
        gbc.setState(0x4da6, 0x1506, 0xc810, 0xb448, 0x399c, 0xc97c, 0x0, 0x1);
        gbc.writeMem(0x4da6, { 0x93 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1506, gbc.sp());
        EXPECT(0x4da7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00A6
        gbc.setState(0x957f, 0x8386, 0x37a0, 0xee43, 0xc1e5, 0x9f37, 0x0, 0x1);
        gbc.writeMem(0x957f, { 0x93 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8386, gbc.sp());
        EXPECT(0x9580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x957f));
        // 93 00A7
        gbc.setState(0x6702, 0x7e47, 0xd2c0, 0x2c67, 0x7482, 0xc45d, 0x1, 0x1);
        gbc.writeMem(0x6702, { 0x93 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7e47, gbc.sp());
        EXPECT(0x6703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00A8
        gbc.setState(0x20a7, 0xd66e, 0x2030, 0x9671, 0xd9a2, 0x94ff, 0x1, 0x1);
        gbc.writeMem(0x20a7, { 0x93 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd66e, gbc.sp());
        EXPECT(0x20a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00AA
        gbc.setState(0x9702, 0xf024, 0xc7a0, 0x7d41, 0xf2f2, 0x522e, 0x1, 0x0);
        gbc.writeMem(0x9702, { 0x93 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf024, gbc.sp());
        EXPECT(0x9703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9702));
        // 93 00AB
        gbc.setState(0x1a1a, 0x40f, 0x4e60, 0x6a0d, 0xc886, 0x2631, 0x1, 0x1);
        gbc.writeMem(0x1a1a, { 0x93 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x40f, gbc.sp());
        EXPECT(0x1a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00AC
        gbc.setState(0xbe39, 0x39c1, 0x37d0, 0xb0ac, 0x4124, 0x8f65, 0x0, 0x0);
        gbc.writeMem(0xbe39, { 0x93 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x39c1, gbc.sp());
        EXPECT(0xbe3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbe39));
        // 93 00AD
        gbc.setState(0xbe13, 0xa3, 0x2f40, 0xbc7a, 0xda01, 0x2c06, 0x0, 0x1);
        gbc.writeMem(0xbe13, { 0x93 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa3, gbc.sp());
        EXPECT(0xbe14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbe13));
        // 93 00AE
        gbc.setState(0x5f27, 0x92da, 0xf50, 0x4329, 0x407c, 0x12e, 0x1, 0x0);
        gbc.writeMem(0x5f27, { 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x92da, gbc.sp());
        EXPECT(0x5f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00AF
        gbc.setState(0x6ec9, 0xb7be, 0x5c80, 0x9772, 0xa3e7, 0xce04, 0x1, 0x0);
        gbc.writeMem(0x6ec9, { 0x93 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb7be, gbc.sp());
        EXPECT(0x6eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00B0
        gbc.setState(0x4494, 0xd828, 0xa6f0, 0xdc16, 0xb0eb, 0xc794, 0x0, 0x0);
        gbc.writeMem(0x4494, { 0x93 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd828, gbc.sp());
        EXPECT(0x4495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00B1
        gbc.setState(0x239a, 0xaf75, 0xe800, 0x1e46, 0x16f2, 0x83b1, 0x0, 0x1);
        gbc.writeMem(0x239a, { 0x93 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xaf75, gbc.sp());
        EXPECT(0x239b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00B2
        gbc.setState(0xb6bd, 0x3ec5, 0x710, 0xb880, 0xc17, 0x8d22, 0x0, 0x0);
        gbc.writeMem(0xb6bd, { 0x93 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3ec5, gbc.sp());
        EXPECT(0xb6be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb6bd));
        // 93 00B3
        gbc.setState(0xf88, 0x5226, 0x3ef0, 0xe54c, 0x4c3d, 0x4955, 0x0, 0x0);
        gbc.writeMem(0xf88, { 0x93 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5226, gbc.sp());
        EXPECT(0xf89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00B4
        gbc.setState(0x7434, 0xb66d, 0x3260, 0x74d0, 0xa6ad, 0x9eed, 0x1, 0x0);
        gbc.writeMem(0x7434, { 0x93 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb66d, gbc.sp());
        EXPECT(0x7435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00B5
        gbc.setState(0x9cea, 0x43a2, 0x1850, 0xb2c6, 0x8ded, 0xb9d3, 0x0, 0x1);
        gbc.writeMem(0x9cea, { 0x93 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x43a2, gbc.sp());
        EXPECT(0x9ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9cea));
        // 93 00B7
        gbc.setState(0x30d3, 0x9b6e, 0xcca0, 0x89f, 0x2ecb, 0x8421, 0x1, 0x0);
        gbc.writeMem(0x30d3, { 0x93 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9b6e, gbc.sp());
        EXPECT(0x30d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00B8
        gbc.setState(0x6480, 0x373, 0x12f0, 0x3afd, 0x7515, 0x8600, 0x1, 0x0);
        gbc.writeMem(0x6480, { 0x93 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x373, gbc.sp());
        EXPECT(0x6481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00B9
        gbc.setState(0x6f83, 0xa20d, 0x85f0, 0x888d, 0xaf96, 0x5250, 0x0, 0x0);
        gbc.writeMem(0x6f83, { 0x93 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa20d, gbc.sp());
        EXPECT(0x6f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00BA
        gbc.setState(0xd57e, 0xf89d, 0x1eb0, 0xc848, 0x1489, 0x6ab1, 0x1, 0x0);
        gbc.writeMem(0xd57e, { 0x93 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf89d, gbc.sp());
        EXPECT(0xd57f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd57e));
        // 93 00BB
        gbc.setState(0x995a, 0x2f4, 0x87a0, 0x24f0, 0x7af1, 0x60f4, 0x1, 0x1);
        gbc.writeMem(0x995a, { 0x93 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2f4, gbc.sp());
        EXPECT(0x995b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x995a));
        // 93 00BC
        gbc.setState(0x24f5, 0xdfb0, 0x21f0, 0xa48c, 0x9c60, 0xe8a4, 0x0, 0x0);
        gbc.writeMem(0x24f5, { 0x93 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdfb0, gbc.sp());
        EXPECT(0x24f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00BD
        gbc.setState(0xd26f, 0xd85a, 0x1a40, 0x6e6f, 0x8d72, 0xae5e, 0x1, 0x1);
        gbc.writeMem(0xd26f, { 0x93 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd85a, gbc.sp());
        EXPECT(0xd270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd26f));
        // 93 00BE
        gbc.setState(0x5f90, 0x186d, 0xa3d0, 0x4494, 0x48dc, 0xadc7, 0x0, 0x0);
        gbc.writeMem(0x5f90, { 0x93 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x186d, gbc.sp());
        EXPECT(0x5f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00BF
        gbc.setState(0x8943, 0x31ba, 0x1dc0, 0xbb7b, 0x8c3f, 0x8bba, 0x1, 0x0);
        gbc.writeMem(0x8943, { 0x93 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x31ba, gbc.sp());
        EXPECT(0x8944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8943));
        // 93 00C0
        gbc.setState(0x8809, 0x9952, 0x2e80, 0x159d, 0x7301, 0xb299, 0x1, 0x1);
        gbc.writeMem(0x8809, { 0x93 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9952, gbc.sp());
        EXPECT(0x880a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8809));
        // 93 00C1
        gbc.setState(0x865e, 0xbaa1, 0x1d60, 0xc55d, 0xc7a9, 0x2367, 0x1, 0x1);
        gbc.writeMem(0x865e, { 0x93 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbaa1, gbc.sp());
        EXPECT(0x865f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x865e));
        // 93 00C2
        gbc.setState(0xac57, 0x14a2, 0x780, 0xd629, 0xa0c6, 0xe739, 0x0, 0x1);
        gbc.writeMem(0xac57, { 0x93 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x14a2, gbc.sp());
        EXPECT(0xac58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xac57));
        // 93 00C3
        gbc.setState(0xadf3, 0xa413, 0xf90, 0x5c6c, 0x7fb8, 0x6152, 0x0, 0x0);
        gbc.writeMem(0xadf3, { 0x93 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa413, gbc.sp());
        EXPECT(0xadf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xadf3));
        // 93 00C4
        gbc.setState(0xdb58, 0x2156, 0xda10, 0xb74, 0x1a0e, 0xf59f, 0x1, 0x0);
        gbc.writeMem(0xdb58, { 0x93 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2156, gbc.sp());
        EXPECT(0xdb59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xdb58));
        // 93 00C5
        gbc.setState(0xc0bf, 0x8e3d, 0xfb30, 0x110a, 0x31af, 0x47ea, 0x1, 0x1);
        gbc.writeMem(0xc0bf, { 0x93 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8e3d, gbc.sp());
        EXPECT(0xc0c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc0bf));
        // 93 00C6
        gbc.setState(0xb444, 0x6a9, 0xcea0, 0x98b1, 0xac0c, 0xe131, 0x0, 0x1);
        gbc.writeMem(0xb444, { 0x93 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6a9, gbc.sp());
        EXPECT(0xb445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb444));
        // 93 00C7
        gbc.setState(0xffe, 0x42c, 0x22c0, 0x3338, 0x4cf8, 0x9d38, 0x1, 0x0);
        gbc.writeMem(0xffe, { 0x93 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x42c, gbc.sp());
        EXPECT(0xfff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00C8
        gbc.setState(0xd33f, 0x424e, 0x9c00, 0xf8db, 0xa513, 0x842e, 0x0, 0x0);
        gbc.writeMem(0xd33f, { 0x93 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x424e, gbc.sp());
        EXPECT(0xd340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd33f));
        // 93 00C9
        gbc.setState(0x38be, 0x46ce, 0x5550, 0x1ff1, 0xa33c, 0x411c, 0x0, 0x0);
        gbc.writeMem(0x38be, { 0x93 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x46ce, gbc.sp());
        EXPECT(0x38bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00CA
        gbc.setState(0xc6ef, 0x957a, 0xb860, 0x5ff1, 0xed86, 0xcbfb, 0x1, 0x0);
        gbc.writeMem(0xc6ef, { 0x93 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x957a, gbc.sp());
        EXPECT(0xc6f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc6ef));
        // 93 00CB
        gbc.setState(0xba19, 0xbf94, 0xb140, 0x2e0, 0xc595, 0x5823, 0x1, 0x0);
        gbc.writeMem(0xba19, { 0x93 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbf94, gbc.sp());
        EXPECT(0xba1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xba19));
        // 93 00CC
        gbc.setState(0xda55, 0x5244, 0x4d50, 0x6d26, 0x2296, 0xe107, 0x0, 0x1);
        gbc.writeMem(0xda55, { 0x93 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5244, gbc.sp());
        EXPECT(0xda56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xda55));
        // 93 00CD
        gbc.setState(0x700a, 0x925, 0xaf60, 0x8283, 0x832, 0xd3d6, 0x1, 0x1);
        gbc.writeMem(0x700a, { 0x93 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x925, gbc.sp());
        EXPECT(0x700b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00CE
        gbc.setState(0xc318, 0xfeaa, 0xf90, 0x24f4, 0x2843, 0x45f5, 0x1, 0x0);
        gbc.writeMem(0xc318, { 0x93 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfeaa, gbc.sp());
        EXPECT(0xc319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc318));
        // 93 00CF
        gbc.setState(0x167e, 0x2a76, 0xf680, 0x71b4, 0xc226, 0xe50c, 0x0, 0x1);
        gbc.writeMem(0x167e, { 0x93 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2a76, gbc.sp());
        EXPECT(0x167f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00D0
        gbc.setState(0x37fe, 0xda25, 0xfea0, 0x68d2, 0x3069, 0xa55a, 0x1, 0x0);
        gbc.writeMem(0x37fe, { 0x93 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xda25, gbc.sp());
        EXPECT(0x37ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00D1
        gbc.setState(0xc072, 0xf511, 0x3170, 0x4c63, 0x7fda, 0x475d, 0x1, 0x0);
        gbc.writeMem(0xc072, { 0x93 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf511, gbc.sp());
        EXPECT(0xc073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc072));
        // 93 00D2
        gbc.setState(0x78cf, 0xcd33, 0x22e0, 0x4c1, 0x2ef2, 0x2e33, 0x0, 0x1);
        gbc.writeMem(0x78cf, { 0x93 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcd33, gbc.sp());
        EXPECT(0x78d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00D3
        gbc.setState(0xb44, 0x4059, 0xf90, 0x4f39, 0xf9e, 0x5614, 0x1, 0x0);
        gbc.writeMem(0xb44, { 0x93 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4059, gbc.sp());
        EXPECT(0xb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00D4
        gbc.setState(0x6281, 0x89d2, 0xb470, 0x5fdd, 0x3e3a, 0xa1e9, 0x1, 0x1);
        gbc.writeMem(0x6281, { 0x93 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x89d2, gbc.sp());
        EXPECT(0x6282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00D5
        gbc.setState(0x155d, 0x93a, 0x5370, 0xd669, 0xb626, 0x8f09, 0x1, 0x0);
        gbc.writeMem(0x155d, { 0x93 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x93a, gbc.sp());
        EXPECT(0x155e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00D6
        gbc.setState(0x55a8, 0x30ff, 0x4a00, 0x33e7, 0x68c1, 0xc8d4, 0x0, 0x0);
        gbc.writeMem(0x55a8, { 0x93 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x30ff, gbc.sp());
        EXPECT(0x55a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00D8
        gbc.setState(0x4b56, 0xe79e, 0x1590, 0x4a56, 0x170d, 0x3955, 0x0, 0x1);
        gbc.writeMem(0x4b56, { 0x93 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe79e, gbc.sp());
        EXPECT(0x4b57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00D9
        gbc.setState(0xca55, 0xf655, 0x2460, 0x1e08, 0xb39e, 0xdae, 0x0, 0x1);
        gbc.writeMem(0xca55, { 0x93 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf655, gbc.sp());
        EXPECT(0xca56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xca55));
        // 93 00DA
        gbc.setState(0x9619, 0x9d05, 0xbe70, 0x97d5, 0xfdcc, 0x7c34, 0x0, 0x0);
        gbc.writeMem(0x9619, { 0x93 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9d05, gbc.sp());
        EXPECT(0x961a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9619));
        // 93 00DB
        gbc.setState(0xfa, 0x4fdb, 0x6810, 0x1bcc, 0xf5ef, 0xc1db, 0x0, 0x0);
        gbc.writeMem(0xfa, { 0x93 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4fdb, gbc.sp());
        EXPECT(0xfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00DC
        gbc.setState(0x5f4a, 0x316d, 0x8880, 0x8756, 0xe8a1, 0x6f6c, 0x0, 0x0);
        gbc.writeMem(0x5f4a, { 0x93 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x316d, gbc.sp());
        EXPECT(0x5f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00DD
        gbc.setState(0x16a0, 0x9221, 0x2a90, 0x8cac, 0xde51, 0x75c7, 0x0, 0x1);
        gbc.writeMem(0x16a0, { 0x93 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9221, gbc.sp());
        EXPECT(0x16a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00DE
        gbc.setState(0xd8cb, 0xdb80, 0xff40, 0x926c, 0x5086, 0x7c75, 0x1, 0x0);
        gbc.writeMem(0xd8cb, { 0x93 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xdb80, gbc.sp());
        EXPECT(0xd8cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd8cb));
        // 93 00DF
        gbc.setState(0xcc76, 0x8647, 0x48c0, 0x9e6f, 0x625, 0xfedd, 0x0, 0x1);
        gbc.writeMem(0xcc76, { 0x93 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8647, gbc.sp());
        EXPECT(0xcc77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcc76));
        // 93 00E0
        gbc.setState(0xd9c2, 0x9518, 0xbe40, 0x914a, 0xd5b0, 0x5a34, 0x0, 0x1);
        gbc.writeMem(0xd9c2, { 0x93 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9518, gbc.sp());
        EXPECT(0xd9c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd9c2));
        // 93 00E1
        gbc.setState(0x4502, 0xac12, 0x1e10, 0xd468, 0xd85b, 0x3904, 0x0, 0x0);
        gbc.writeMem(0x4502, { 0x93 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xac12, gbc.sp());
        EXPECT(0x4503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00E2
        gbc.setState(0x11f3, 0x4fb7, 0x9e40, 0xd9df, 0x792b, 0xcbcd, 0x1, 0x0);
        gbc.writeMem(0x11f3, { 0x93 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4fb7, gbc.sp());
        EXPECT(0x11f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00E3
        gbc.setState(0x7f58, 0x8ebd, 0xe1f0, 0x2808, 0x8ab, 0x205d, 0x1, 0x0);
        gbc.writeMem(0x7f58, { 0x93 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8ebd, gbc.sp());
        EXPECT(0x7f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00E4
        gbc.setState(0x510f, 0xc38c, 0xc340, 0x1fca, 0x7e56, 0x4f90, 0x0, 0x1);
        gbc.writeMem(0x510f, { 0x93 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc38c, gbc.sp());
        EXPECT(0x5110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00E5
        gbc.setState(0x77c4, 0x3375, 0x57e0, 0x78ec, 0x946f, 0x67fe, 0x1, 0x1);
        gbc.writeMem(0x77c4, { 0x93 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3375, gbc.sp());
        EXPECT(0x77c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00E6
        gbc.setState(0x9bfc, 0xa0f6, 0xa3e0, 0x155c, 0xc748, 0xa71a, 0x1, 0x0);
        gbc.writeMem(0x9bfc, { 0x93 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa0f6, gbc.sp());
        EXPECT(0x9bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9bfc));
        // 93 00E7
        gbc.setState(0x1fd9, 0xfda7, 0xc1a0, 0x2a81, 0x2623, 0x5c17, 0x0, 0x0);
        gbc.writeMem(0x1fd9, { 0x93 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfda7, gbc.sp());
        EXPECT(0x1fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00E8
        gbc.setState(0x65cc, 0x94e9, 0x7ff0, 0xe730, 0x2e32, 0x4c1e, 0x0, 0x0);
        gbc.writeMem(0x65cc, { 0x93 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x94e9, gbc.sp());
        EXPECT(0x65cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00E9
        gbc.setState(0xec24, 0xb195, 0xe9b0, 0x537d, 0x9521, 0x2c2f, 0x1, 0x1);
        gbc.writeMem(0xec24, { 0x93 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb195, gbc.sp());
        EXPECT(0xec25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xec24));
        // 93 00EA
        gbc.setState(0x8185, 0x2d28, 0x54c0, 0x2002, 0xb58a, 0xb384, 0x1, 0x0);
        gbc.writeMem(0x8185, { 0x93 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2d28, gbc.sp());
        EXPECT(0x8186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8185));
        // 93 00EB
        gbc.setState(0xed69, 0x8cf1, 0xd9e0, 0x65c0, 0x1720, 0x875a, 0x0, 0x0);
        gbc.writeMem(0xed69, { 0x93 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8cf1, gbc.sp());
        EXPECT(0xed6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xed69));
        // 93 00EC
        gbc.setState(0x7c0d, 0xc9c5, 0xc9a0, 0x8951, 0x5f57, 0xbbce, 0x0, 0x0);
        gbc.writeMem(0x7c0d, { 0x93 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc9c5, gbc.sp());
        EXPECT(0x7c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00ED
        gbc.setState(0xa4e4, 0x4f81, 0xe5f0, 0x2b60, 0x84ae, 0x1a96, 0x0, 0x1);
        gbc.writeMem(0xa4e4, { 0x93 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4f81, gbc.sp());
        EXPECT(0xa4e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa4e4));
        // 93 00EE
        gbc.setState(0xd015, 0xd2d4, 0xff50, 0xb79e, 0x6a7a, 0x82de, 0x1, 0x1);
        gbc.writeMem(0xd015, { 0x93 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd2d4, gbc.sp());
        EXPECT(0xd016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd015));
        // 93 00EF
        gbc.setState(0xc149, 0x119b, 0x8730, 0x2514, 0x137b, 0xa8e0, 0x1, 0x0);
        gbc.writeMem(0xc149, { 0x93 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x119b, gbc.sp());
        EXPECT(0xc14a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc149));
        // 93 00F0
        gbc.setState(0x6f5f, 0xf0, 0x1f0, 0x4603, 0x67d7, 0x8135, 0x0, 0x1);
        gbc.writeMem(0x6f5f, { 0x93 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf0, gbc.sp());
        EXPECT(0x6f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00F1
        gbc.setState(0xc343, 0x7b91, 0xa70, 0x20b7, 0xdd69, 0x6ab1, 0x1, 0x1);
        gbc.writeMem(0xc343, { 0x93 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7b91, gbc.sp());
        EXPECT(0xc344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc343));
        // 93 00F2
        gbc.setState(0x9f92, 0xc13f, 0x46a0, 0xc17b, 0xaad8, 0x1691, 0x1, 0x0);
        gbc.writeMem(0x9f92, { 0x93 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc13f, gbc.sp());
        EXPECT(0x9f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9f92));
        // 93 00F3
        gbc.setState(0xb6c, 0xabb1, 0x9440, 0x5a0f, 0x4743, 0xe567, 0x1, 0x1);
        gbc.writeMem(0xb6c, { 0x93 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xabb1, gbc.sp());
        EXPECT(0xb6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00F4
        gbc.setState(0x3dcc, 0x4809, 0x50d0, 0x942f, 0xc854, 0x1161, 0x0, 0x0);
        gbc.writeMem(0x3dcc, { 0x93 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4809, gbc.sp());
        EXPECT(0x3dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00F5
        gbc.setState(0x2d7b, 0x2495, 0xf4b0, 0x59b3, 0x66d8, 0x73ee, 0x0, 0x1);
        gbc.writeMem(0x2d7b, { 0x93 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2495, gbc.sp());
        EXPECT(0x2d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00F6
        gbc.setState(0x6e0e, 0x94ae, 0xfd90, 0xd560, 0x5a32, 0x4669, 0x1, 0x1);
        gbc.writeMem(0x6e0e, { 0x93 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x94ae, gbc.sp());
        EXPECT(0x6e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00F7
        gbc.setState(0xb544, 0xbf23, 0x1650, 0x51a2, 0x3a3a, 0x9d12, 0x0, 0x0);
        gbc.writeMem(0xb544, { 0x93 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbf23, gbc.sp());
        EXPECT(0xb545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb544));
        // 93 00F8
        gbc.setState(0x9fd1, 0x14f2, 0xc610, 0xd5ce, 0xf71b, 0xcfa3, 0x1, 0x0);
        gbc.writeMem(0x9fd1, { 0x93 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x14f2, gbc.sp());
        EXPECT(0x9fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9fd1));
        // 93 00F9
        gbc.setState(0x5005, 0xf3c, 0x2350, 0xea37, 0xaacb, 0x9bc2, 0x1, 0x1);
        gbc.writeMem(0x5005, { 0x93 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf3c, gbc.sp());
        EXPECT(0x5006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00FA
        gbc.setState(0xddad, 0x5a99, 0x5de0, 0x7d72, 0x5dba, 0xdda9, 0x1, 0x0);
        gbc.writeMem(0xddad, { 0x93 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5a99, gbc.sp());
        EXPECT(0xddae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xddad));
        // 93 00FB
        gbc.setState(0x3314, 0xb20d, 0x2610, 0x57ad, 0x726b, 0x51ff, 0x1, 0x1);
        gbc.writeMem(0x3314, { 0x93 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb20d, gbc.sp());
        EXPECT(0x3315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00FC
        gbc.setState(0x756, 0x2b7c, 0x6d10, 0xf6c0, 0x7375, 0xc87b, 0x1, 0x1);
        gbc.writeMem(0x756, { 0x93 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2b7c, gbc.sp());
        EXPECT(0x757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 00FD
        gbc.setState(0xc67b, 0xe354, 0xee90, 0xa432, 0xfc90, 0x738b, 0x0, 0x0);
        gbc.writeMem(0xc67b, { 0x93 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe354, gbc.sp());
        EXPECT(0xc67c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc67b));
        // 93 00FE
        gbc.setState(0x2b8a, 0x85b5, 0x6c40, 0x8f8, 0xd76a, 0x2ec1, 0x0, 0x1);
        gbc.writeMem(0x2b8a, { 0x93 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x85b5, gbc.sp());
        EXPECT(0x2b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 00FF
        gbc.setState(0xc6e4, 0x98fd, 0x83d0, 0xab68, 0x1590, 0xf731, 0x0, 0x1);
        gbc.writeMem(0xc6e4, { 0x93 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x98fd, gbc.sp());
        EXPECT(0xc6e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc6e4));
        // 93 0100
        gbc.setState(0x993e, 0x9ae1, 0x4550, 0xa164, 0x38a6, 0xa083, 0x1, 0x0);
        gbc.writeMem(0x993e, { 0x93 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9ae1, gbc.sp());
        EXPECT(0x993f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x993e));
        // 93 0101
        gbc.setState(0x8e7f, 0x45c0, 0x8480, 0xc7df, 0x42e1, 0xb7f1, 0x0, 0x0);
        gbc.writeMem(0x8e7f, { 0x93 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x45c0, gbc.sp());
        EXPECT(0x8e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8e7f));
        // 93 0102
        gbc.setState(0x3548, 0x407a, 0xf720, 0x83a9, 0x5e5a, 0xd998, 0x0, 0x0);
        gbc.writeMem(0x3548, { 0x93 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x407a, gbc.sp());
        EXPECT(0x3549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0103
        gbc.setState(0x1c0d, 0xe53, 0x9780, 0xe879, 0xbf52, 0x1167, 0x1, 0x0);
        gbc.writeMem(0x1c0d, { 0x93 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe53, gbc.sp());
        EXPECT(0x1c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0104
        gbc.setState(0xd902, 0x6337, 0x1e90, 0x6408, 0x36b1, 0xe4bf, 0x0, 0x1);
        gbc.writeMem(0xd902, { 0x93 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6337, gbc.sp());
        EXPECT(0xd903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd902));
        // 93 0105
        gbc.setState(0x911c, 0x7893, 0xdea0, 0x81de, 0x2e12, 0xf8c5, 0x1, 0x0);
        gbc.writeMem(0x911c, { 0x93 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7893, gbc.sp());
        EXPECT(0x911d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x911c));
        // 93 0106
        gbc.setState(0x4237, 0x383c, 0xd460, 0x6db, 0xb2c6, 0xe12a, 0x1, 0x1);
        gbc.writeMem(0x4237, { 0x93 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x383c, gbc.sp());
        EXPECT(0x4238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0107
        gbc.setState(0xcc9, 0xea70, 0xe910, 0x85df, 0x3fe6, 0xfb18, 0x1, 0x0);
        gbc.writeMem(0xcc9, { 0x93 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xea70, gbc.sp());
        EXPECT(0xcca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0108
        gbc.setState(0x188a, 0x9bb9, 0x96c0, 0xaf26, 0x822c, 0xa625, 0x1, 0x0);
        gbc.writeMem(0x188a, { 0x93 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9bb9, gbc.sp());
        EXPECT(0x188b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0109
        gbc.setState(0x806d, 0x80c6, 0x48e0, 0x53f3, 0xe11f, 0xda85, 0x0, 0x1);
        gbc.writeMem(0x806d, { 0x93 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x80c6, gbc.sp());
        EXPECT(0x806e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x806d));
        // 93 010A
        gbc.setState(0x7be, 0x5a87, 0x83c0, 0xe1a4, 0xeff1, 0x739c, 0x0, 0x0);
        gbc.writeMem(0x7be, { 0x93 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5a87, gbc.sp());
        EXPECT(0x7bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 010B
        gbc.setState(0x5a28, 0x8bc3, 0xac90, 0xaf5d, 0x5840, 0xff24, 0x0, 0x1);
        gbc.writeMem(0x5a28, { 0x93 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8bc3, gbc.sp());
        EXPECT(0x5a29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 010C
        gbc.setState(0x67e4, 0xa8b2, 0xf7a0, 0x1cb1, 0xcf7e, 0xa1a2, 0x1, 0x0);
        gbc.writeMem(0x67e4, { 0x93 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa8b2, gbc.sp());
        EXPECT(0x67e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 010D
        gbc.setState(0x732f, 0x13f, 0x7580, 0xb872, 0xed51, 0xa442, 0x0, 0x1);
        gbc.writeMem(0x732f, { 0x93 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x13f, gbc.sp());
        EXPECT(0x7330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 010E
        gbc.setState(0xa3d8, 0x381, 0x55a0, 0x839f, 0x2405, 0xf96, 0x1, 0x0);
        gbc.writeMem(0xa3d8, { 0x93 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x381, gbc.sp());
        EXPECT(0xa3d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa3d8));
        // 93 010F
        gbc.setState(0x283d, 0x32ba, 0xe10, 0xf374, 0xc4a3, 0xe183, 0x0, 0x1);
        gbc.writeMem(0x283d, { 0x93 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x32ba, gbc.sp());
        EXPECT(0x283e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0110
        gbc.setState(0xbe2a, 0xdf1a, 0xc1f0, 0x5ea4, 0x49ce, 0xe283, 0x1, 0x0);
        gbc.writeMem(0xbe2a, { 0x93 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdf1a, gbc.sp());
        EXPECT(0xbe2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbe2a));
        // 93 0111
        gbc.setState(0xc04d, 0x9eb0, 0x8740, 0xd905, 0x2902, 0x17cb, 0x1, 0x1);
        gbc.writeMem(0xc04d, { 0x93 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9eb0, gbc.sp());
        EXPECT(0xc04e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc04d));
        // 93 0112
        gbc.setState(0x3895, 0xd82c, 0xdd30, 0xd88c, 0xdd3a, 0xff37, 0x0, 0x0);
        gbc.writeMem(0x3895, { 0x93 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd82c, gbc.sp());
        EXPECT(0x3896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0113
        gbc.setState(0x8e65, 0x3841, 0xc050, 0xd52a, 0xcdaa, 0xe26, 0x0, 0x0);
        gbc.writeMem(0x8e65, { 0x93 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3841, gbc.sp());
        EXPECT(0x8e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8e65));
        // 93 0114
        gbc.setState(0xa80b, 0xc273, 0x36a0, 0xa427, 0xc204, 0xcea8, 0x1, 0x0);
        gbc.writeMem(0xa80b, { 0x93 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc273, gbc.sp());
        EXPECT(0xa80c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa80b));
        // 93 0115
        gbc.setState(0x8064, 0x4c7f, 0x66e0, 0x47ad, 0x22e5, 0xf29f, 0x1, 0x0);
        gbc.writeMem(0x8064, { 0x93 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4c7f, gbc.sp());
        EXPECT(0x8065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8064));
        // 93 0116
        gbc.setState(0xecf3, 0x5ce1, 0x2ff0, 0x48c, 0x8f80, 0xe3cb, 0x1, 0x1);
        gbc.writeMem(0xecf3, { 0x93 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5ce1, gbc.sp());
        EXPECT(0xecf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xecf3));
        // 93 0117
        gbc.setState(0x8d9a, 0x9af6, 0xc960, 0x3e29, 0x893e, 0xede0, 0x0, 0x0);
        gbc.writeMem(0x8d9a, { 0x93 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9af6, gbc.sp());
        EXPECT(0x8d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8d9a));
        // 93 0118
        gbc.setState(0xe000, 0xb3fa, 0x1d40, 0x8907, 0x2172, 0x9fab, 0x0, 0x1);
        gbc.writeMem(0xe000, { 0x93 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb3fa, gbc.sp());
        EXPECT(0xe001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe000));
        // 93 0119
        gbc.setState(0x1fad, 0xc6dd, 0x1bb0, 0x255d, 0xe386, 0xb401, 0x0, 0x1);
        gbc.writeMem(0x1fad, { 0x93 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc6dd, gbc.sp());
        EXPECT(0x1fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 011A
        gbc.setState(0xb869, 0x7d63, 0xb6b0, 0xdd7d, 0xd755, 0xe55b, 0x0, 0x1);
        gbc.writeMem(0xb869, { 0x93 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7d63, gbc.sp());
        EXPECT(0xb86a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb869));
        // 93 011B
        gbc.setState(0xeda0, 0xde18, 0x5490, 0x2620, 0xf923, 0xd1b6, 0x1, 0x1);
        gbc.writeMem(0xeda0, { 0x93 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xde18, gbc.sp());
        EXPECT(0xeda1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xeda0));
        // 93 011C
        gbc.setState(0x1749, 0x94f3, 0xe940, 0x5551, 0x205a, 0xfa5, 0x0, 0x0);
        gbc.writeMem(0x1749, { 0x93 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x94f3, gbc.sp());
        EXPECT(0x174a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 011D
        gbc.setState(0x18ea, 0xa8ad, 0xe030, 0x40dc, 0x163b, 0xf417, 0x1, 0x0);
        gbc.writeMem(0x18ea, { 0x93 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa8ad, gbc.sp());
        EXPECT(0x18eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 011E
        gbc.setState(0x61b7, 0x82d5, 0xdd80, 0xe330, 0x95a2, 0x125b, 0x1, 0x0);
        gbc.writeMem(0x61b7, { 0x93 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x82d5, gbc.sp());
        EXPECT(0x61b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 011F
        gbc.setState(0xdd9a, 0xf1be, 0xfc80, 0xffc9, 0x20f7, 0x61af, 0x0, 0x1);
        gbc.writeMem(0xdd9a, { 0x93 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf1be, gbc.sp());
        EXPECT(0xdd9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xdd9a));
        // 93 0120
        gbc.setState(0x6a9a, 0x2d78, 0x8b10, 0xca8a, 0xeffb, 0x7489, 0x1, 0x0);
        gbc.writeMem(0x6a9a, { 0x93 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2d78, gbc.sp());
        EXPECT(0x6a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0121
        gbc.setState(0xb6f6, 0xf22b, 0xbfb0, 0x5fd, 0xedef, 0xca3a, 0x0, 0x1);
        gbc.writeMem(0xb6f6, { 0x93 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf22b, gbc.sp());
        EXPECT(0xb6f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb6f6));
        // 93 0122
        gbc.setState(0x4481, 0x220f, 0xbba0, 0x5552, 0x829b, 0xc57a, 0x0, 0x1);
        gbc.writeMem(0x4481, { 0x93 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x220f, gbc.sp());
        EXPECT(0x4482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0123
        gbc.setState(0x12cb, 0x7a6f, 0x21b0, 0xed2, 0x1f93, 0xc0a4, 0x1, 0x0);
        gbc.writeMem(0x12cb, { 0x93 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7a6f, gbc.sp());
        EXPECT(0x12cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0124
        gbc.setState(0xbc93, 0xc6bf, 0x2750, 0xb3cb, 0x51d4, 0x2a98, 0x0, 0x1);
        gbc.writeMem(0xbc93, { 0x93 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc6bf, gbc.sp());
        EXPECT(0xbc94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbc93));
        // 93 0125
        gbc.setState(0xa092, 0x1a00, 0x8d10, 0xba52, 0x14cc, 0x7017, 0x0, 0x0);
        gbc.writeMem(0xa092, { 0x93 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1a00, gbc.sp());
        EXPECT(0xa093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa092));
        // 93 0126
        gbc.setState(0x9117, 0x168f, 0x5650, 0x6efc, 0x33e8, 0xb88b, 0x0, 0x1);
        gbc.writeMem(0x9117, { 0x93 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x168f, gbc.sp());
        EXPECT(0x9118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9117));
        // 93 0127
        gbc.setState(0x4498, 0xdfa3, 0x16c0, 0x4890, 0xd3e, 0xcc03, 0x0, 0x0);
        gbc.writeMem(0x4498, { 0x93 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdfa3, gbc.sp());
        EXPECT(0x4499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0128
        gbc.setState(0xd2a2, 0x1002, 0xf880, 0x364b, 0x7dc, 0x839c, 0x1, 0x1);
        gbc.writeMem(0xd2a2, { 0x93 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1002, gbc.sp());
        EXPECT(0xd2a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd2a2));
        // 93 0129
        gbc.setState(0xc40, 0x9b7b, 0xf0b0, 0xa60, 0x3870, 0x8a44, 0x1, 0x1);
        gbc.writeMem(0xc40, { 0x93 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9b7b, gbc.sp());
        EXPECT(0xc41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 012A
        gbc.setState(0x1569, 0x2893, 0xe160, 0xd09d, 0xab23, 0x1c8, 0x1, 0x0);
        gbc.writeMem(0x1569, { 0x93 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2893, gbc.sp());
        EXPECT(0x156a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 012B
        gbc.setState(0x1d40, 0xeda0, 0x58e0, 0xe412, 0x264c, 0x7a3, 0x0, 0x0);
        gbc.writeMem(0x1d40, { 0x93 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xeda0, gbc.sp());
        EXPECT(0x1d41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 012C
        gbc.setState(0x9b8f, 0x8ea0, 0xa5c0, 0x1036, 0x113a, 0xc140, 0x0, 0x1);
        gbc.writeMem(0x9b8f, { 0x93 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8ea0, gbc.sp());
        EXPECT(0x9b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9b8f));
        // 93 012D
        gbc.setState(0x7bbe, 0xda37, 0xa800, 0xa066, 0x362c, 0xa411, 0x0, 0x0);
        gbc.writeMem(0x7bbe, { 0x93 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xda37, gbc.sp());
        EXPECT(0x7bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 012E
        gbc.setState(0x929b, 0x9b2, 0x97b0, 0xe00e, 0x9688, 0x7885, 0x0, 0x0);
        gbc.writeMem(0x929b, { 0x93 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9b2, gbc.sp());
        EXPECT(0x929c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x929b));
        // 93 012F
        gbc.setState(0x5666, 0x39fd, 0x1a80, 0xe8ed, 0x8361, 0xc076, 0x0, 0x0);
        gbc.writeMem(0x5666, { 0x93 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x39fd, gbc.sp());
        EXPECT(0x5667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0130
        gbc.setState(0x35fd, 0x38e2, 0x9190, 0x431d, 0xf345, 0xc328, 0x0, 0x1);
        gbc.writeMem(0x35fd, { 0x93 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x38e2, gbc.sp());
        EXPECT(0x35fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0131
        gbc.setState(0x4eaa, 0xfab9, 0x1b40, 0x74de, 0x77cf, 0xf9fe, 0x1, 0x0);
        gbc.writeMem(0x4eaa, { 0x93 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfab9, gbc.sp());
        EXPECT(0x4eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0132
        gbc.setState(0xe75d, 0x8eef, 0x1420, 0x8d17, 0xa0f, 0x559, 0x0, 0x1);
        gbc.writeMem(0xe75d, { 0x93 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8eef, gbc.sp());
        EXPECT(0xe75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe75d));
        // 93 0133
        gbc.setState(0x1dc6, 0xdb17, 0xd3b0, 0xb8d6, 0x10d2, 0xb05d, 0x1, 0x0);
        gbc.writeMem(0x1dc6, { 0x93 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdb17, gbc.sp());
        EXPECT(0x1dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0135
        gbc.setState(0xc994, 0x7af9, 0x8100, 0x80e1, 0xc89d, 0xdf01, 0x0, 0x0);
        gbc.writeMem(0xc994, { 0x93 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7af9, gbc.sp());
        EXPECT(0xc995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc994));
        // 93 0136
        gbc.setState(0xa1c7, 0x1c05, 0x570, 0x9e4a, 0x1e3f, 0xea63, 0x1, 0x0);
        gbc.writeMem(0xa1c7, { 0x93 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1c05, gbc.sp());
        EXPECT(0xa1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa1c7));
        // 93 0137
        gbc.setState(0xde59, 0xa5fa, 0xdb70, 0x3d63, 0x24a5, 0xa476, 0x1, 0x0);
        gbc.writeMem(0xde59, { 0x93 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa5fa, gbc.sp());
        EXPECT(0xde5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xde59));
        // 93 0138
        gbc.setState(0x4b58, 0x92b6, 0x47c0, 0xaa7d, 0x92e6, 0x186b, 0x0, 0x0);
        gbc.writeMem(0x4b58, { 0x93 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x92b6, gbc.sp());
        EXPECT(0x4b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0139
        gbc.setState(0x2fa8, 0xe490, 0xe920, 0xd35a, 0x112b, 0xb6e6, 0x0, 0x1);
        gbc.writeMem(0x2fa8, { 0x93 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe490, gbc.sp());
        EXPECT(0x2fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 013A
        gbc.setState(0x6a81, 0x68b4, 0xa120, 0x66ce, 0x1931, 0xc588, 0x0, 0x1);
        gbc.writeMem(0x6a81, { 0x93 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x68b4, gbc.sp());
        EXPECT(0x6a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 013B
        gbc.setState(0x4c53, 0xaac2, 0x37e0, 0x1680, 0x849e, 0x3163, 0x0, 0x0);
        gbc.writeMem(0x4c53, { 0x93 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xaac2, gbc.sp());
        EXPECT(0x4c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 013C
        gbc.setState(0xc0eb, 0x8e82, 0xb630, 0x38c8, 0xd612, 0xc691, 0x1, 0x0);
        gbc.writeMem(0xc0eb, { 0x93 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8e82, gbc.sp());
        EXPECT(0xc0ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc0eb));
        // 93 013E
        gbc.setState(0x8042, 0x8549, 0x3140, 0x5811, 0x5c29, 0xebf3, 0x1, 0x0);
        gbc.writeMem(0x8042, { 0x93 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8549, gbc.sp());
        EXPECT(0x8043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8042));
        // 93 013F
        gbc.setState(0x8dae, 0xa9b5, 0x410, 0x444c, 0xb2f6, 0xe178, 0x0, 0x1);
        gbc.writeMem(0x8dae, { 0x93 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa9b5, gbc.sp());
        EXPECT(0x8daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8dae));
        // 93 0140
        gbc.setState(0x5c5e, 0x58c8, 0xb0b0, 0x99db, 0x2139, 0xcec3, 0x0, 0x1);
        gbc.writeMem(0x5c5e, { 0x93 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x58c8, gbc.sp());
        EXPECT(0x5c5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0141
        gbc.setState(0x854b, 0x3d28, 0xf4f0, 0x2e32, 0x3de5, 0xdf00, 0x0, 0x1);
        gbc.writeMem(0x854b, { 0x93 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3d28, gbc.sp());
        EXPECT(0x854c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x854b));
        // 93 0143
        gbc.setState(0x860b, 0xc7e4, 0x67b0, 0x514a, 0x8d20, 0x7982, 0x1, 0x1);
        gbc.writeMem(0x860b, { 0x93 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc7e4, gbc.sp());
        EXPECT(0x860c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x860b));
        // 93 0144
        gbc.setState(0xef1e, 0xb6a6, 0x1bb0, 0xf493, 0x570e, 0x3540, 0x1, 0x1);
        gbc.writeMem(0xef1e, { 0x93 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb6a6, gbc.sp());
        EXPECT(0xef1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xef1e));
        // 93 0145
        gbc.setState(0xe4db, 0xd627, 0xc3c0, 0xbbbb, 0xf7c2, 0xc80d, 0x1, 0x1);
        gbc.writeMem(0xe4db, { 0x93 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd627, gbc.sp());
        EXPECT(0xe4dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe4db));
        // 93 0146
        gbc.setState(0x4532, 0xd831, 0x48f0, 0xdd6d, 0xf934, 0xb283, 0x0, 0x0);
        gbc.writeMem(0x4532, { 0x93 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd831, gbc.sp());
        EXPECT(0x4533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0147
        gbc.setState(0x1530, 0x350c, 0xc7d0, 0x8372, 0xd919, 0x4bfc, 0x1, 0x1);
        gbc.writeMem(0x1530, { 0x93 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x350c, gbc.sp());
        EXPECT(0x1531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0148
        gbc.setState(0xa3b, 0xfe64, 0xa6f0, 0xaee, 0x8f09, 0x4b19, 0x1, 0x0);
        gbc.writeMem(0xa3b, { 0x93 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfe64, gbc.sp());
        EXPECT(0xa3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0149
        gbc.setState(0xebfb, 0x16c2, 0x9b40, 0x6f96, 0xb99e, 0xacd3, 0x0, 0x0);
        gbc.writeMem(0xebfb, { 0x93 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x16c2, gbc.sp());
        EXPECT(0xebfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xebfb));
        // 93 014A
        gbc.setState(0x75df, 0x4865, 0xe4d0, 0x3b7f, 0x887b, 0x6b87, 0x0, 0x0);
        gbc.writeMem(0x75df, { 0x93 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4865, gbc.sp());
        EXPECT(0x75e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 014B
        gbc.setState(0x38ab, 0x4708, 0x7560, 0x43c2, 0x1c9d, 0x72fd, 0x0, 0x0);
        gbc.writeMem(0x38ab, { 0x93 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4708, gbc.sp());
        EXPECT(0x38ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 014C
        gbc.setState(0x6453, 0xc2e1, 0x82f0, 0x9ea2, 0x3d28, 0x7034, 0x0, 0x1);
        gbc.writeMem(0x6453, { 0x93 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc2e1, gbc.sp());
        EXPECT(0x6454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 014D
        gbc.setState(0x3e81, 0x838f, 0xb70, 0xcf95, 0x2d39, 0x8109, 0x0, 0x0);
        gbc.writeMem(0x3e81, { 0x93 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x838f, gbc.sp());
        EXPECT(0x3e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 014E
        gbc.setState(0x10f, 0xc790, 0x4e90, 0x214a, 0x71ec, 0x2a79, 0x0, 0x1);
        gbc.writeMem(0x10f, { 0x93 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc790, gbc.sp());
        EXPECT(0x110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 014F
        gbc.setState(0x22e0, 0x21d6, 0x8c90, 0x1165, 0x366a, 0x803f, 0x1, 0x1);
        gbc.writeMem(0x22e0, { 0x93 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x21d6, gbc.sp());
        EXPECT(0x22e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0150
        gbc.setState(0x42c6, 0x5da8, 0xdca0, 0x1393, 0x4e03, 0xecd8, 0x1, 0x1);
        gbc.writeMem(0x42c6, { 0x93 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5da8, gbc.sp());
        EXPECT(0x42c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0151
        gbc.setState(0x97a9, 0xf022, 0x6ea0, 0xb693, 0x1872, 0xbb6a, 0x1, 0x1);
        gbc.writeMem(0x97a9, { 0x93 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf022, gbc.sp());
        EXPECT(0x97aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x97a9));
        // 93 0152
        gbc.setState(0x42d, 0x1da4, 0x50d0, 0x5984, 0x38a4, 0x2901, 0x1, 0x1);
        gbc.writeMem(0x42d, { 0x93 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1da4, gbc.sp());
        EXPECT(0x42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0153
        gbc.setState(0x9512, 0x111e, 0xaaa0, 0x6a40, 0x3a4, 0x5b52, 0x0, 0x1);
        gbc.writeMem(0x9512, { 0x93 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x111e, gbc.sp());
        EXPECT(0x9513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9512));
        // 93 0154
        gbc.setState(0x6712, 0x1bc0, 0x8a20, 0x8863, 0x1b77, 0xc638, 0x1, 0x1);
        gbc.writeMem(0x6712, { 0x93 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1bc0, gbc.sp());
        EXPECT(0x6713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0155
        gbc.setState(0xd1ad, 0x2a52, 0xa560, 0x9a74, 0x4794, 0x7fd7, 0x1, 0x0);
        gbc.writeMem(0xd1ad, { 0x93 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2a52, gbc.sp());
        EXPECT(0xd1ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd1ad));
        // 93 0156
        gbc.setState(0xab3d, 0x8037, 0x2220, 0x6ef3, 0xcb21, 0x63ef, 0x1, 0x0);
        gbc.writeMem(0xab3d, { 0x93 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8037, gbc.sp());
        EXPECT(0xab3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xab3d));
        // 93 0157
        gbc.setState(0x54f6, 0x1c80, 0x3000, 0xc7b6, 0x9c42, 0x355c, 0x1, 0x1);
        gbc.writeMem(0x54f6, { 0x93 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1c80, gbc.sp());
        EXPECT(0x54f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0158
        gbc.setState(0xc089, 0x4bf1, 0xe180, 0x2df1, 0x9152, 0x866, 0x0, 0x0);
        gbc.writeMem(0xc089, { 0x93 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4bf1, gbc.sp());
        EXPECT(0xc08a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc089));
        // 93 0159
        gbc.setState(0x1d6d, 0x1ed3, 0xb850, 0xc6db, 0x6bb2, 0x5498, 0x0, 0x0);
        gbc.writeMem(0x1d6d, { 0x93 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1ed3, gbc.sp());
        EXPECT(0x1d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 015A
        gbc.setState(0x7303, 0x2d58, 0xeab0, 0x6867, 0x6f9, 0xcfb5, 0x0, 0x0);
        gbc.writeMem(0x7303, { 0x93 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2d58, gbc.sp());
        EXPECT(0x7304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 015B
        gbc.setState(0xa1cd, 0x85e5, 0xc040, 0xd9d4, 0xb6c9, 0x6297, 0x0, 0x0);
        gbc.writeMem(0xa1cd, { 0x93 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x85e5, gbc.sp());
        EXPECT(0xa1ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa1cd));
        // 93 015C
        gbc.setState(0x4ac9, 0xb5fa, 0xe760, 0x1707, 0xf232, 0x539c, 0x1, 0x1);
        gbc.writeMem(0x4ac9, { 0x93 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb5fa, gbc.sp());
        EXPECT(0x4aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 015D
        gbc.setState(0x93dd, 0x2908, 0xc0e0, 0x2a79, 0xf3e7, 0xe054, 0x0, 0x0);
        gbc.writeMem(0x93dd, { 0x93 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2908, gbc.sp());
        EXPECT(0x93de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x93dd));
        // 93 015E
        gbc.setState(0x565b, 0xdbb3, 0x5fd0, 0x1821, 0x5212, 0x4b52, 0x0, 0x1);
        gbc.writeMem(0x565b, { 0x93 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdbb3, gbc.sp());
        EXPECT(0x565c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 015F
        gbc.setState(0x7e32, 0x6e4a, 0xa320, 0x8f4, 0xe77c, 0x707a, 0x1, 0x0);
        gbc.writeMem(0x7e32, { 0x93 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6e4a, gbc.sp());
        EXPECT(0x7e33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0160
        gbc.setState(0x79b7, 0xed18, 0xf240, 0xf7d5, 0xc0dd, 0x7b43, 0x1, 0x0);
        gbc.writeMem(0x79b7, { 0x93 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xed18, gbc.sp());
        EXPECT(0x79b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0161
        gbc.setState(0x273a, 0x123a, 0x1d80, 0xee37, 0x11d9, 0x2bb1, 0x1, 0x1);
        gbc.writeMem(0x273a, { 0x93 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x123a, gbc.sp());
        EXPECT(0x273b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0162
        gbc.setState(0xc31a, 0x813e, 0xe2b0, 0x79b6, 0xc021, 0x687, 0x1, 0x1);
        gbc.writeMem(0xc31a, { 0x93 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x813e, gbc.sp());
        EXPECT(0xc31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc31a));
        // 93 0163
        gbc.setState(0x2b08, 0x9f6c, 0x91a0, 0x418a, 0x9e45, 0x8094, 0x0, 0x0);
        gbc.writeMem(0x2b08, { 0x93 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9f6c, gbc.sp());
        EXPECT(0x2b09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0164
        gbc.setState(0x7cef, 0x9f02, 0xe2e0, 0xcf8f, 0x5b2d, 0x3d8b, 0x1, 0x0);
        gbc.writeMem(0x7cef, { 0x93 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9f02, gbc.sp());
        EXPECT(0x7cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0165
        gbc.setState(0x1587, 0xaf52, 0x4d00, 0xceb1, 0x2260, 0x3ba2, 0x1, 0x1);
        gbc.writeMem(0x1587, { 0x93 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xaf52, gbc.sp());
        EXPECT(0x1588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0166
        gbc.setState(0x2034, 0x4445, 0x1ea0, 0x9335, 0xfa17, 0x9a3c, 0x1, 0x1);
        gbc.writeMem(0x2034, { 0x93 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4445, gbc.sp());
        EXPECT(0x2035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0167
        gbc.setState(0x119b, 0x24b2, 0xafb0, 0x8b44, 0x7e2, 0x5031, 0x0, 0x1);
        gbc.writeMem(0x119b, { 0x93 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x24b2, gbc.sp());
        EXPECT(0x119c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0168
        gbc.setState(0xbe64, 0xc52e, 0xf4e0, 0xe9e1, 0x8edb, 0x7e74, 0x1, 0x1);
        gbc.writeMem(0xbe64, { 0x93 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc52e, gbc.sp());
        EXPECT(0xbe65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbe64));
        // 93 0169
        gbc.setState(0x4851, 0xb77b, 0x3750, 0xd355, 0xd6b2, 0x306a, 0x1, 0x1);
        gbc.writeMem(0x4851, { 0x93 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb77b, gbc.sp());
        EXPECT(0x4852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 016A
        gbc.setState(0x1e9c, 0xe851, 0x3b30, 0x1021, 0x2479, 0xe089, 0x0, 0x0);
        gbc.writeMem(0x1e9c, { 0x93 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe851, gbc.sp());
        EXPECT(0x1e9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 016B
        gbc.setState(0x3460, 0x1153, 0x5be0, 0x4b1f, 0x3f3d, 0x3e9b, 0x1, 0x1);
        gbc.writeMem(0x3460, { 0x93 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1153, gbc.sp());
        EXPECT(0x3461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 016D
        gbc.setState(0x4dc3, 0x100b, 0xfbd0, 0xa454, 0xbfd2, 0x5293, 0x1, 0x1);
        gbc.writeMem(0x4dc3, { 0x93 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x100b, gbc.sp());
        EXPECT(0x4dc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 016E
        gbc.setState(0xae34, 0xd15a, 0x4280, 0x39d5, 0x8b7, 0xe96c, 0x1, 0x1);
        gbc.writeMem(0xae34, { 0x93 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd15a, gbc.sp());
        EXPECT(0xae35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xae34));
        // 93 016F
        gbc.setState(0x2843, 0x493f, 0xb4e0, 0x8b68, 0xce2c, 0xe0c, 0x1, 0x1);
        gbc.writeMem(0x2843, { 0x93 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x493f, gbc.sp());
        EXPECT(0x2844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0170
        gbc.setState(0xe94b, 0x8604, 0xc5d0, 0xae81, 0x2bde, 0xa568, 0x0, 0x1);
        gbc.writeMem(0xe94b, { 0x93 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8604, gbc.sp());
        EXPECT(0xe94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe94b));
        // 93 0171
        gbc.setState(0x237f, 0xf8b, 0xe680, 0xbc63, 0x748f, 0x16ac, 0x0, 0x0);
        gbc.writeMem(0x237f, { 0x93 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf8b, gbc.sp());
        EXPECT(0x2380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0172
        gbc.setState(0x9288, 0x3056, 0xb660, 0xb19e, 0x349d, 0xbf67, 0x1, 0x0);
        gbc.writeMem(0x9288, { 0x93 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3056, gbc.sp());
        EXPECT(0x9289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9288));
        // 93 0173
        gbc.setState(0x7b16, 0x557e, 0x310, 0x252d, 0xfa2e, 0x339a, 0x1, 0x1);
        gbc.writeMem(0x7b16, { 0x93 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x557e, gbc.sp());
        EXPECT(0x7b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0174
        gbc.setState(0xe5a7, 0xb6b4, 0x3e20, 0xb8e, 0x2b7f, 0xcf7f, 0x0, 0x1);
        gbc.writeMem(0xe5a7, { 0x93 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb6b4, gbc.sp());
        EXPECT(0xe5a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe5a7));
        // 93 0175
        gbc.setState(0xeb0c, 0x4f99, 0xc470, 0x40ae, 0x9e3b, 0x4f66, 0x1, 0x1);
        gbc.writeMem(0xeb0c, { 0x93 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4f99, gbc.sp());
        EXPECT(0xeb0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xeb0c));
        // 93 0176
        gbc.setState(0xb3ab, 0x3152, 0x5bf0, 0x3566, 0xa4a6, 0x67bd, 0x0, 0x1);
        gbc.writeMem(0xb3ab, { 0x93 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3152, gbc.sp());
        EXPECT(0xb3ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb3ab));
        // 93 0177
        gbc.setState(0xbebb, 0x1342, 0x1c30, 0x1a66, 0x720f, 0xf1d9, 0x1, 0x0);
        gbc.writeMem(0xbebb, { 0x93 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1342, gbc.sp());
        EXPECT(0xbebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbebb));
        // 93 0178
        gbc.setState(0xe2e2, 0xe659, 0xdf10, 0xc691, 0x3c2e, 0xdb0f, 0x1, 0x1);
        gbc.writeMem(0xe2e2, { 0x93 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe659, gbc.sp());
        EXPECT(0xe2e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe2e2));
        // 93 0179
        gbc.setState(0x6e0f, 0x6a81, 0xeaf0, 0xa3fd, 0xc28f, 0xec3b, 0x0, 0x0);
        gbc.writeMem(0x6e0f, { 0x93 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6a81, gbc.sp());
        EXPECT(0x6e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 017A
        gbc.setState(0x4673, 0xbcb4, 0xf2a0, 0xcd9, 0x5733, 0xa31f, 0x1, 0x1);
        gbc.writeMem(0x4673, { 0x93 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbcb4, gbc.sp());
        EXPECT(0x4674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 017B
        gbc.setState(0x7adb, 0x5eed, 0x2e90, 0x4710, 0x2c50, 0x2bab, 0x0, 0x0);
        gbc.writeMem(0x7adb, { 0x93 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5eed, gbc.sp());
        EXPECT(0x7adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 017C
        gbc.setState(0x1942, 0xb4db, 0x78b0, 0x1fd0, 0x9235, 0x9491, 0x0, 0x0);
        gbc.writeMem(0x1942, { 0x93 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb4db, gbc.sp());
        EXPECT(0x1943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 017D
        gbc.setState(0x3420, 0x4551, 0x56b0, 0x3f87, 0x3a4d, 0xe0aa, 0x0, 0x0);
        gbc.writeMem(0x3420, { 0x93 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4551, gbc.sp());
        EXPECT(0x3421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 017E
        gbc.setState(0xc1a0, 0x7a9, 0x7790, 0x9eed, 0x69aa, 0xf95e, 0x1, 0x1);
        gbc.writeMem(0xc1a0, { 0x93 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7a9, gbc.sp());
        EXPECT(0xc1a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc1a0));
        // 93 017F
        gbc.setState(0x8b7d, 0x8880, 0x97d0, 0x9940, 0x88e9, 0xe398, 0x0, 0x0);
        gbc.writeMem(0x8b7d, { 0x93 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8880, gbc.sp());
        EXPECT(0x8b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8b7d));
        // 93 0180
        gbc.setState(0xa804, 0xa46a, 0xae80, 0xa3b8, 0xb35d, 0x2cd5, 0x1, 0x0);
        gbc.writeMem(0xa804, { 0x93 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa46a, gbc.sp());
        EXPECT(0xa805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa804));
        // 93 0181
        gbc.setState(0x5b03, 0x91de, 0x5930, 0x660b, 0x33f2, 0x3090, 0x0, 0x1);
        gbc.writeMem(0x5b03, { 0x93 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x91de, gbc.sp());
        EXPECT(0x5b04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0182
        gbc.setState(0xcd57, 0xd818, 0x870, 0xbd95, 0x6c9a, 0x9c88, 0x1, 0x1);
        gbc.writeMem(0xcd57, { 0x93 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd818, gbc.sp());
        EXPECT(0xcd58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcd57));
        // 93 0183
        gbc.setState(0xc32c, 0x70b2, 0xc4d0, 0xfb46, 0x4bd9, 0x7931, 0x1, 0x1);
        gbc.writeMem(0xc32c, { 0x93 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x70b2, gbc.sp());
        EXPECT(0xc32d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc32c));
        // 93 0184
        gbc.setState(0x94d4, 0xdbbe, 0xca70, 0xc17b, 0x4aa6, 0x55a4, 0x0, 0x1);
        gbc.writeMem(0x94d4, { 0x93 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdbbe, gbc.sp());
        EXPECT(0x94d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x94d4));
        // 93 0185
        gbc.setState(0x21c9, 0xe287, 0x1a20, 0x89bb, 0x4b7e, 0x276c, 0x0, 0x1);
        gbc.writeMem(0x21c9, { 0x93 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe287, gbc.sp());
        EXPECT(0x21ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0186
        gbc.setState(0x1c03, 0x2b00, 0xc7d0, 0xa9a6, 0x9927, 0x703c, 0x1, 0x0);
        gbc.writeMem(0x1c03, { 0x93 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2b00, gbc.sp());
        EXPECT(0x1c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0187
        gbc.setState(0x2aae, 0x4d60, 0x52f0, 0xc767, 0xbe02, 0xc148, 0x0, 0x0);
        gbc.writeMem(0x2aae, { 0x93 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4d60, gbc.sp());
        EXPECT(0x2aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0188
        gbc.setState(0x4f3f, 0xb027, 0xb090, 0x1292, 0xe70e, 0x3c5c, 0x0, 0x0);
        gbc.writeMem(0x4f3f, { 0x93 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb027, gbc.sp());
        EXPECT(0x4f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0189
        gbc.setState(0xb719, 0x34f4, 0x8220, 0x69c8, 0xc4c8, 0xef16, 0x1, 0x1);
        gbc.writeMem(0xb719, { 0x93 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x34f4, gbc.sp());
        EXPECT(0xb71a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb719));
        // 93 018A
        gbc.setState(0xbd75, 0xade2, 0x9890, 0x1e66, 0x44e0, 0x34ba, 0x1, 0x1);
        gbc.writeMem(0xbd75, { 0x93 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xade2, gbc.sp());
        EXPECT(0xbd76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbd75));
        // 93 018C
        gbc.setState(0x4afd, 0xd0ef, 0x9b60, 0x1f07, 0xad2f, 0xc2ed, 0x1, 0x0);
        gbc.writeMem(0x4afd, { 0x93 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd0ef, gbc.sp());
        EXPECT(0x4afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 018D
        gbc.setState(0x8e9a, 0x57b5, 0x360, 0x8154, 0xe273, 0xc6db, 0x1, 0x1);
        gbc.writeMem(0x8e9a, { 0x93 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x57b5, gbc.sp());
        EXPECT(0x8e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8e9a));
        // 93 018E
        gbc.setState(0xb901, 0x46dd, 0x9650, 0x7de3, 0x7302, 0x57a6, 0x1, 0x1);
        gbc.writeMem(0xb901, { 0x93 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x46dd, gbc.sp());
        EXPECT(0xb902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb901));
        // 93 0190
        gbc.setState(0x3b3d, 0x5877, 0x7c20, 0x4ce5, 0xd0e9, 0x4874, 0x0, 0x0);
        gbc.writeMem(0x3b3d, { 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5877, gbc.sp());
        EXPECT(0x3b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0191
        gbc.setState(0x5dba, 0x7607, 0x6d00, 0x2ea5, 0xd8c1, 0x6d5f, 0x0, 0x1);
        gbc.writeMem(0x5dba, { 0x93 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7607, gbc.sp());
        EXPECT(0x5dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0192
        gbc.setState(0x3346, 0xe88f, 0xb3c0, 0x1fff, 0xa92b, 0xd6e2, 0x0, 0x0);
        gbc.writeMem(0x3346, { 0x93 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe88f, gbc.sp());
        EXPECT(0x3347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0193
        gbc.setState(0xa9ae, 0xe722, 0x2b90, 0xc9fd, 0xabbe, 0xb6da, 0x0, 0x1);
        gbc.writeMem(0xa9ae, { 0x93 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe722, gbc.sp());
        EXPECT(0xa9af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa9ae));
        // 93 0194
        gbc.setState(0x87f6, 0xb563, 0xbd50, 0xb0b2, 0x5469, 0xd393, 0x1, 0x1);
        gbc.writeMem(0x87f6, { 0x93 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb563, gbc.sp());
        EXPECT(0x87f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x87f6));
        // 93 0195
        gbc.setState(0x86f4, 0x2862, 0xc010, 0xbcd, 0x7f1a, 0x1249, 0x1, 0x0);
        gbc.writeMem(0x86f4, { 0x93 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2862, gbc.sp());
        EXPECT(0x86f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x86f4));
        // 93 0196
        gbc.setState(0x41bc, 0xd715, 0x500, 0x6bd0, 0x3286, 0x6740, 0x0, 0x1);
        gbc.writeMem(0x41bc, { 0x93 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd715, gbc.sp());
        EXPECT(0x41bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0197
        gbc.setState(0xbe42, 0xb4f8, 0xa300, 0xd0f7, 0x2093, 0xa85b, 0x0, 0x1);
        gbc.writeMem(0xbe42, { 0x93 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb4f8, gbc.sp());
        EXPECT(0xbe43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbe42));
        // 93 0198
        gbc.setState(0xc7c9, 0xf403, 0x8a80, 0xb78c, 0x437d, 0xb9c7, 0x1, 0x1);
        gbc.writeMem(0xc7c9, { 0x93 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf403, gbc.sp());
        EXPECT(0xc7ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc7c9));
        // 93 0199
        gbc.setState(0x5d13, 0xd172, 0x1b20, 0xf656, 0xb797, 0xd6e9, 0x0, 0x1);
        gbc.writeMem(0x5d13, { 0x93 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd172, gbc.sp());
        EXPECT(0x5d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 019A
        gbc.setState(0xc50a, 0xa695, 0xd7a0, 0xe887, 0x49db, 0xe305, 0x0, 0x1);
        gbc.writeMem(0xc50a, { 0x93 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa695, gbc.sp());
        EXPECT(0xc50b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc50a));
        // 93 019B
        gbc.setState(0x405c, 0x66b9, 0xd900, 0xa521, 0x7a21, 0x9961, 0x1, 0x1);
        gbc.writeMem(0x405c, { 0x93 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x66b9, gbc.sp());
        EXPECT(0x405d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 019C
        gbc.setState(0x241e, 0xaf26, 0xc2a0, 0x3b1e, 0x9092, 0xb58f, 0x1, 0x0);
        gbc.writeMem(0x241e, { 0x93 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xaf26, gbc.sp());
        EXPECT(0x241f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 019D
        gbc.setState(0x416c, 0x2db5, 0x98d0, 0x7038, 0xd967, 0x71, 0x0, 0x1);
        gbc.writeMem(0x416c, { 0x93 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2db5, gbc.sp());
        EXPECT(0x416d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 019E
        gbc.setState(0x4f09, 0x2261, 0xf580, 0x7bdb, 0x533, 0xc9d9, 0x1, 0x1);
        gbc.writeMem(0x4f09, { 0x93 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2261, gbc.sp());
        EXPECT(0x4f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 019F
        gbc.setState(0xa345, 0x1a11, 0x7df0, 0x5c94, 0xe155, 0x8d27, 0x0, 0x1);
        gbc.writeMem(0xa345, { 0x93 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1a11, gbc.sp());
        EXPECT(0xa346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa345));
        // 93 01A0
        gbc.setState(0xa6e4, 0xe33e, 0x2c10, 0x7838, 0x449c, 0x9f86, 0x1, 0x0);
        gbc.writeMem(0xa6e4, { 0x93 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe33e, gbc.sp());
        EXPECT(0xa6e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa6e4));
        // 93 01A1
        gbc.setState(0xb932, 0xe76, 0xa720, 0x28a2, 0x6237, 0x362f, 0x0, 0x1);
        gbc.writeMem(0xb932, { 0x93 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe76, gbc.sp());
        EXPECT(0xb933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb932));
        // 93 01A2
        gbc.setState(0x446f, 0xc529, 0x5dd0, 0x3d55, 0xc882, 0x8e35, 0x1, 0x0);
        gbc.writeMem(0x446f, { 0x93 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc529, gbc.sp());
        EXPECT(0x4470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01A3
        gbc.setState(0x3cde, 0x9fc1, 0x71e0, 0x6ad1, 0x8f35, 0x41f0, 0x0, 0x1);
        gbc.writeMem(0x3cde, { 0x93 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9fc1, gbc.sp());
        EXPECT(0x3cdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01A4
        gbc.setState(0xe536, 0xb530, 0x2cc0, 0x16b1, 0x4f68, 0xdfcc, 0x1, 0x0);
        gbc.writeMem(0xe536, { 0x93 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb530, gbc.sp());
        EXPECT(0xe537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe536));
        // 93 01A5
        gbc.setState(0xcb31, 0xb8be, 0xa790, 0xdf8c, 0x43d9, 0xac4a, 0x1, 0x1);
        gbc.writeMem(0xcb31, { 0x93 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb8be, gbc.sp());
        EXPECT(0xcb32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcb31));
        // 93 01A6
        gbc.setState(0x2f47, 0xc5cf, 0x98e0, 0xbeaa, 0xf1d0, 0x8a82, 0x1, 0x0);
        gbc.writeMem(0x2f47, { 0x93 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc5cf, gbc.sp());
        EXPECT(0x2f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01A8
        gbc.setState(0x13ad, 0x29b0, 0xde0, 0xf5e5, 0x681, 0xef24, 0x1, 0x0);
        gbc.writeMem(0x13ad, { 0x93 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x29b0, gbc.sp());
        EXPECT(0x13ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01A9
        gbc.setState(0x4858, 0x303a, 0xf240, 0x9f18, 0x9fa8, 0xe00b, 0x1, 0x1);
        gbc.writeMem(0x4858, { 0x93 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x303a, gbc.sp());
        EXPECT(0x4859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01AA
        gbc.setState(0x9999, 0xf3e5, 0x87a0, 0x87f5, 0x3600, 0x2bd1, 0x0, 0x0);
        gbc.writeMem(0x9999, { 0x93 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf3e5, gbc.sp());
        EXPECT(0x999a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9999));
        // 93 01AB
        gbc.setState(0xa5cb, 0x427b, 0x19c0, 0x2495, 0xd00b, 0x18d4, 0x0, 0x1);
        gbc.writeMem(0xa5cb, { 0x93 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x427b, gbc.sp());
        EXPECT(0xa5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa5cb));
        // 93 01AC
        gbc.setState(0x4b2c, 0xb879, 0xed00, 0x3c62, 0x7b9e, 0x26b, 0x0, 0x0);
        gbc.writeMem(0x4b2c, { 0x93 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb879, gbc.sp());
        EXPECT(0x4b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01AD
        gbc.setState(0xcb25, 0x71c7, 0x7300, 0xd680, 0x58ae, 0x28f5, 0x0, 0x1);
        gbc.writeMem(0xcb25, { 0x93 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x71c7, gbc.sp());
        EXPECT(0xcb26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcb25));
        // 93 01AE
        gbc.setState(0xb83f, 0x28c6, 0x42b0, 0xbf5f, 0x5e7b, 0x8492, 0x0, 0x0);
        gbc.writeMem(0xb83f, { 0x93 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x28c6, gbc.sp());
        EXPECT(0xb840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb83f));
        // 93 01AF
        gbc.setState(0x962a, 0x2b82, 0x8a10, 0x3b4f, 0x373d, 0x1141, 0x0, 0x0);
        gbc.writeMem(0x962a, { 0x93 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2b82, gbc.sp());
        EXPECT(0x962b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x962a));
        // 93 01B0
        gbc.setState(0x7ee1, 0xf3c2, 0x2330, 0x973c, 0x2be, 0xe34a, 0x1, 0x1);
        gbc.writeMem(0x7ee1, { 0x93 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf3c2, gbc.sp());
        EXPECT(0x7ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01B1
        gbc.setState(0x5c4, 0x20e1, 0x8270, 0x4aff, 0x141a, 0x73b0, 0x1, 0x1);
        gbc.writeMem(0x5c4, { 0x93 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x20e1, gbc.sp());
        EXPECT(0x5c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01B2
        gbc.setState(0xe622, 0xfaea, 0x20, 0xf5cb, 0x7c5, 0x6adc, 0x0, 0x1);
        gbc.writeMem(0xe622, { 0x93 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfaea, gbc.sp());
        EXPECT(0xe623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe622));
        // 93 01B3
        gbc.setState(0x608b, 0x6273, 0x62a0, 0x9b05, 0xd150, 0x99a3, 0x0, 0x0);
        gbc.writeMem(0x608b, { 0x93 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6273, gbc.sp());
        EXPECT(0x608c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01B5
        gbc.setState(0xc42c, 0x1e20, 0xa9f0, 0xdaba, 0x3d96, 0x3370, 0x0, 0x1);
        gbc.writeMem(0xc42c, { 0x93 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1e20, gbc.sp());
        EXPECT(0xc42d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc42c));
        // 93 01B6
        gbc.setState(0xad5, 0xf077, 0xa280, 0x7d14, 0xc3, 0x392d, 0x1, 0x0);
        gbc.writeMem(0xad5, { 0x93 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf077, gbc.sp());
        EXPECT(0xad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01B7
        gbc.setState(0x6f1, 0x61a3, 0x19b0, 0x3f4b, 0xa716, 0x83d3, 0x0, 0x1);
        gbc.writeMem(0x6f1, { 0x93 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x61a3, gbc.sp());
        EXPECT(0x6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01B8
        gbc.setState(0x1f90, 0xcd10, 0xb940, 0x8745, 0xa817, 0x4c0a, 0x1, 0x1);
        gbc.writeMem(0x1f90, { 0x93 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcd10, gbc.sp());
        EXPECT(0x1f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01B9
        gbc.setState(0x5ce, 0x5336, 0xc230, 0x61c0, 0xfb39, 0x444, 0x1, 0x0);
        gbc.writeMem(0x5ce, { 0x93 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5336, gbc.sp());
        EXPECT(0x5cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01BB
        gbc.setState(0x9ae7, 0x68d7, 0xa860, 0x2a11, 0xfdba, 0x5669, 0x1, 0x0);
        gbc.writeMem(0x9ae7, { 0x93 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x68d7, gbc.sp());
        EXPECT(0x9ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9ae7));
        // 93 01BC
        gbc.setState(0xcdb7, 0xa721, 0x74c0, 0xcc3f, 0x5e88, 0x63be, 0x0, 0x1);
        gbc.writeMem(0xcdb7, { 0x93 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa721, gbc.sp());
        EXPECT(0xcdb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcdb7));
        // 93 01BD
        gbc.setState(0x21a, 0xaab, 0x5360, 0x663c, 0x3b67, 0x64db, 0x0, 0x1);
        gbc.writeMem(0x21a, { 0x93 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xaab, gbc.sp());
        EXPECT(0x21b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01BE
        gbc.setState(0x23a, 0x6dfa, 0xddd0, 0x653, 0x3589, 0x483d, 0x1, 0x0);
        gbc.writeMem(0x23a, { 0x93 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6dfa, gbc.sp());
        EXPECT(0x23b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01BF
        gbc.setState(0xc5bf, 0xdae6, 0xe30, 0x36f4, 0x9d8d, 0x8136, 0x1, 0x1);
        gbc.writeMem(0xc5bf, { 0x93 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdae6, gbc.sp());
        EXPECT(0xc5c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc5bf));
        // 93 01C0
        gbc.setState(0x290b, 0xac5, 0x60e0, 0x61ac, 0x6b77, 0x259b, 0x1, 0x0);
        gbc.writeMem(0x290b, { 0x93 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xac5, gbc.sp());
        EXPECT(0x290c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01C1
        gbc.setState(0x359a, 0xd0b3, 0x9cd0, 0x168c, 0x5fa0, 0x58ef, 0x0, 0x1);
        gbc.writeMem(0x359a, { 0x93 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd0b3, gbc.sp());
        EXPECT(0x359b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01C2
        gbc.setState(0x3674, 0xaa5f, 0x3d30, 0xaca, 0x5411, 0xe2c4, 0x0, 0x1);
        gbc.writeMem(0x3674, { 0x93 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xaa5f, gbc.sp());
        EXPECT(0x3675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01C3
        gbc.setState(0x7edd, 0x9d75, 0x9a60, 0xf11b, 0xd00a, 0xe9c3, 0x1, 0x0);
        gbc.writeMem(0x7edd, { 0x93 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9d75, gbc.sp());
        EXPECT(0x7ede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01C4
        gbc.setState(0xd623, 0xd7f4, 0x54c0, 0xa9b9, 0x2043, 0x1750, 0x1, 0x0);
        gbc.writeMem(0xd623, { 0x93 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd7f4, gbc.sp());
        EXPECT(0xd624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd623));
        // 93 01C5
        gbc.setState(0xcf58, 0x1638, 0x35c0, 0x1575, 0x52fa, 0xda05, 0x0, 0x0);
        gbc.writeMem(0xcf58, { 0x93 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1638, gbc.sp());
        EXPECT(0xcf59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcf58));
        // 93 01C6
        gbc.setState(0x1223, 0x1307, 0xa90, 0x6c38, 0xd0a4, 0x6c9b, 0x0, 0x1);
        gbc.writeMem(0x1223, { 0x93 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1307, gbc.sp());
        EXPECT(0x1224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01C7
        gbc.setState(0x2148, 0x6c49, 0xf0a0, 0x463f, 0x4146, 0x8ece, 0x1, 0x0);
        gbc.writeMem(0x2148, { 0x93 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6c49, gbc.sp());
        EXPECT(0x2149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01C8
        gbc.setState(0x3602, 0x14af, 0xcdc0, 0x1d9d, 0xfeed, 0x1d51, 0x0, 0x0);
        gbc.writeMem(0x3602, { 0x93 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x14af, gbc.sp());
        EXPECT(0x3603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01C9
        gbc.setState(0x27e6, 0x20fa, 0x1f00, 0x616f, 0xfb30, 0x5b0, 0x0, 0x0);
        gbc.writeMem(0x27e6, { 0x93 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x20fa, gbc.sp());
        EXPECT(0x27e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01CA
        gbc.setState(0x1781, 0xe49e, 0x5d0, 0x68c9, 0x35e7, 0x31ac, 0x1, 0x1);
        gbc.writeMem(0x1781, { 0x93 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe49e, gbc.sp());
        EXPECT(0x1782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01CC
        gbc.setState(0x59a4, 0x7255, 0x62a0, 0x9151, 0xbe86, 0xa1e1, 0x1, 0x1);
        gbc.writeMem(0x59a4, { 0x93 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7255, gbc.sp());
        EXPECT(0x59a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01CD
        gbc.setState(0x346f, 0xb43e, 0xaff0, 0x76aa, 0x8201, 0xa736, 0x0, 0x1);
        gbc.writeMem(0x346f, { 0x93 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb43e, gbc.sp());
        EXPECT(0x3470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01CE
        gbc.setState(0x4cee, 0xcd13, 0xa870, 0x4664, 0x9d0c, 0x4cd0, 0x0, 0x0);
        gbc.writeMem(0x4cee, { 0x93 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcd13, gbc.sp());
        EXPECT(0x4cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01CF
        gbc.setState(0xb2e2, 0x81b5, 0x38d0, 0x3dbb, 0x4424, 0x4db0, 0x1, 0x0);
        gbc.writeMem(0xb2e2, { 0x93 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x81b5, gbc.sp());
        EXPECT(0xb2e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb2e2));
        // 93 01D0
        gbc.setState(0x248a, 0x6c9, 0xfbe0, 0x822e, 0x6865, 0xf4fd, 0x0, 0x1);
        gbc.writeMem(0x248a, { 0x93 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6c9, gbc.sp());
        EXPECT(0x248b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01D1
        gbc.setState(0x872c, 0x4651, 0x2a80, 0x10e7, 0x513, 0xce67, 0x1, 0x1);
        gbc.writeMem(0x872c, { 0x93 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4651, gbc.sp());
        EXPECT(0x872d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x872c));
        // 93 01D2
        gbc.setState(0x3bc1, 0x2106, 0xbc00, 0xa6bb, 0x4efb, 0xb0b8, 0x1, 0x0);
        gbc.writeMem(0x3bc1, { 0x93 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2106, gbc.sp());
        EXPECT(0x3bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01D4
        gbc.setState(0xcf12, 0x4a15, 0x1e50, 0xa021, 0x9763, 0x2b29, 0x0, 0x0);
        gbc.writeMem(0xcf12, { 0x93 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4a15, gbc.sp());
        EXPECT(0xcf13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcf12));
        // 93 01D5
        gbc.setState(0x3c61, 0xbd44, 0x1870, 0x1aae, 0x8651, 0xb31, 0x0, 0x0);
        gbc.writeMem(0x3c61, { 0x93 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbd44, gbc.sp());
        EXPECT(0x3c62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01D6
        gbc.setState(0xc4b, 0x2667, 0x3c30, 0xbbb3, 0xc47, 0x3aa0, 0x1, 0x1);
        gbc.writeMem(0xc4b, { 0x93 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2667, gbc.sp());
        EXPECT(0xc4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01D7
        gbc.setState(0x8d5d, 0xda5d, 0xdf80, 0xde3b, 0x1d5a, 0x1783, 0x1, 0x1);
        gbc.writeMem(0x8d5d, { 0x93 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xda5d, gbc.sp());
        EXPECT(0x8d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8d5d));
        // 93 01D8
        gbc.setState(0x2b29, 0x6975, 0x390, 0xc8c8, 0xe54c, 0x1d1d, 0x0, 0x0);
        gbc.writeMem(0x2b29, { 0x93 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6975, gbc.sp());
        EXPECT(0x2b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01D9
        gbc.setState(0x35e6, 0xbe32, 0x5fd0, 0xee8a, 0xaa28, 0x398d, 0x1, 0x0);
        gbc.writeMem(0x35e6, { 0x93 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbe32, gbc.sp());
        EXPECT(0x35e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01DA
        gbc.setState(0x2df, 0x8182, 0xa990, 0xdcb4, 0x53cc, 0x2f19, 0x0, 0x0);
        gbc.writeMem(0x2df, { 0x93 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8182, gbc.sp());
        EXPECT(0x2e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01DB
        gbc.setState(0x63e4, 0x5c91, 0x99d0, 0x446, 0x6491, 0x99b7, 0x0, 0x1);
        gbc.writeMem(0x63e4, { 0x93 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5c91, gbc.sp());
        EXPECT(0x63e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01DC
        gbc.setState(0xb644, 0x7824, 0x62b0, 0x14d4, 0xaee9, 0x89e6, 0x0, 0x0);
        gbc.writeMem(0xb644, { 0x93 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7824, gbc.sp());
        EXPECT(0xb645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb644));
        // 93 01DD
        gbc.setState(0x575c, 0x1403, 0x7580, 0x5113, 0xed16, 0x3f0f, 0x0, 0x0);
        gbc.writeMem(0x575c, { 0x93 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1403, gbc.sp());
        EXPECT(0x575d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01DE
        gbc.setState(0x410a, 0xcfb1, 0xf8c0, 0x932, 0x6666, 0x6e7f, 0x0, 0x1);
        gbc.writeMem(0x410a, { 0x93 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xcfb1, gbc.sp());
        EXPECT(0x410b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01DF
        gbc.setState(0x458f, 0xa08, 0xaa0, 0x9197, 0x234d, 0x63dd, 0x0, 0x1);
        gbc.writeMem(0x458f, { 0x93 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa08, gbc.sp());
        EXPECT(0x4590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01E0
        gbc.setState(0xb425, 0xa17a, 0xbf50, 0x16c1, 0x5e3, 0xf641, 0x1, 0x1);
        gbc.writeMem(0xb425, { 0x93 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa17a, gbc.sp());
        EXPECT(0xb426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb425));
        // 93 01E1
        gbc.setState(0x57de, 0x5720, 0x4cf0, 0x4dd5, 0x476, 0x65f9, 0x1, 0x0);
        gbc.writeMem(0x57de, { 0x93 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5720, gbc.sp());
        EXPECT(0x57df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01E2
        gbc.setState(0x891d, 0xb261, 0xb200, 0xbeb1, 0xe1ab, 0x1e1, 0x1, 0x1);
        gbc.writeMem(0x891d, { 0x93 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb261, gbc.sp());
        EXPECT(0x891e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x891d));
        // 93 01E3
        gbc.setState(0x853c, 0x162a, 0x35e0, 0xd2f8, 0x5f5f, 0x1e24, 0x1, 0x0);
        gbc.writeMem(0x853c, { 0x93 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x162a, gbc.sp());
        EXPECT(0x853d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x853c));
        // 93 01E4
        gbc.setState(0x7206, 0x5a31, 0x3880, 0x4578, 0x8df8, 0xb1d2, 0x1, 0x0);
        gbc.writeMem(0x7206, { 0x93 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5a31, gbc.sp());
        EXPECT(0x7207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01E5
        gbc.setState(0x6ffa, 0xaf0e, 0x6680, 0x43c, 0x71e1, 0x73a6, 0x0, 0x0);
        gbc.writeMem(0x6ffa, { 0x93 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xaf0e, gbc.sp());
        EXPECT(0x6ffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01E7
        gbc.setState(0xd2a6, 0xdc8d, 0x86a0, 0xb15, 0xe213, 0x24cb, 0x0, 0x0);
        gbc.writeMem(0xd2a6, { 0x93 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xdc8d, gbc.sp());
        EXPECT(0xd2a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd2a6));
        // 93 01E8
        gbc.setState(0xa1b9, 0xba68, 0x7180, 0x8841, 0x5ae0, 0x846c, 0x0, 0x0);
        gbc.writeMem(0xa1b9, { 0x93 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xba68, gbc.sp());
        EXPECT(0xa1ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa1b9));
        // 93 01E9
        gbc.setState(0x9865, 0x4c27, 0x73f0, 0x3415, 0x674d, 0x2ab5, 0x0, 0x0);
        gbc.writeMem(0x9865, { 0x93 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4c27, gbc.sp());
        EXPECT(0x9866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9865));
        // 93 01EA
        gbc.setState(0x455d, 0x7fc3, 0x3b60, 0x4ae7, 0x548, 0xc14e, 0x0, 0x0);
        gbc.writeMem(0x455d, { 0x93 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7fc3, gbc.sp());
        EXPECT(0x455e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01EC
        gbc.setState(0x91c3, 0x73ad, 0x5f00, 0x8d6e, 0x8985, 0xafec, 0x1, 0x0);
        gbc.writeMem(0x91c3, { 0x93 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x73ad, gbc.sp());
        EXPECT(0x91c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x91c3));
        // 93 01ED
        gbc.setState(0x393, 0xdd52, 0x8700, 0x8b9d, 0x4450, 0x12b2, 0x0, 0x1);
        gbc.writeMem(0x393, { 0x93 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdd52, gbc.sp());
        EXPECT(0x394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01EE
        gbc.setState(0x2da3, 0x1a73, 0xba10, 0x693c, 0x8737, 0x584f, 0x1, 0x0);
        gbc.writeMem(0x2da3, { 0x93 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1a73, gbc.sp());
        EXPECT(0x2da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01EF
        gbc.setState(0xa1fb, 0xe462, 0xccc0, 0xeefc, 0x3dcc, 0x3f7c, 0x1, 0x1);
        gbc.writeMem(0xa1fb, { 0x93 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe462, gbc.sp());
        EXPECT(0xa1fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa1fb));
        // 93 01F0
        gbc.setState(0xb632, 0xc337, 0x1530, 0xadbc, 0x5a4e, 0xf7cf, 0x0, 0x0);
        gbc.writeMem(0xb632, { 0x93 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc337, gbc.sp());
        EXPECT(0xb633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb632));
        // 93 01F1
        gbc.setState(0x89c3, 0x648c, 0x7410, 0xca54, 0x5b87, 0x976d, 0x0, 0x0);
        gbc.writeMem(0x89c3, { 0x93 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x648c, gbc.sp());
        EXPECT(0x89c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x89c3));
        // 93 01F2
        gbc.setState(0x53da, 0x359f, 0x6c60, 0xae72, 0xefa4, 0x8992, 0x1, 0x1);
        gbc.writeMem(0x53da, { 0x93 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x359f, gbc.sp());
        EXPECT(0x53db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01F3
        gbc.setState(0xd2e7, 0xd382, 0x3f90, 0xd74b, 0xc5c0, 0xb6fa, 0x1, 0x1);
        gbc.writeMem(0xd2e7, { 0x93 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd382, gbc.sp());
        EXPECT(0xd2e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd2e7));
        // 93 01F4
        gbc.setState(0xeead, 0x1152, 0x6f60, 0x4315, 0x3318, 0xb7b0, 0x0, 0x0);
        gbc.writeMem(0xeead, { 0x93 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1152, gbc.sp());
        EXPECT(0xeeae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xeead));
        // 93 01F5
        gbc.setState(0xcd81, 0xedbb, 0xcee0, 0x56c4, 0x7be5, 0xb7c3, 0x1, 0x0);
        gbc.writeMem(0xcd81, { 0x93 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xedbb, gbc.sp());
        EXPECT(0xcd82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcd81));
        // 93 01F6
        gbc.setState(0x8ca, 0xa9b4, 0xb430, 0x4c48, 0xf021, 0x31b3, 0x1, 0x0);
        gbc.writeMem(0x8ca, { 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa9b4, gbc.sp());
        EXPECT(0x8cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 01F7
        gbc.setState(0xecb0, 0xc06c, 0x2860, 0x7c5f, 0xd49b, 0x5505, 0x0, 0x1);
        gbc.writeMem(0xecb0, { 0x93 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc06c, gbc.sp());
        EXPECT(0xecb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xecb0));
        // 93 01F8
        gbc.setState(0x8b2d, 0xc2ee, 0xf410, 0xb932, 0x130d, 0xe8f7, 0x1, 0x1);
        gbc.writeMem(0x8b2d, { 0x93 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc2ee, gbc.sp());
        EXPECT(0x8b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8b2d));
        // 93 01F9
        gbc.setState(0xa86f, 0xeb6a, 0xacb0, 0x4fb3, 0x8c95, 0x8bab, 0x0, 0x0);
        gbc.writeMem(0xa86f, { 0x93 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xeb6a, gbc.sp());
        EXPECT(0xa870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa86f));
        // 93 01FA
        gbc.setState(0x364e, 0x4171, 0x6390, 0xe298, 0x89f9, 0xbfdf, 0x0, 0x0);
        gbc.writeMem(0x364e, { 0x93 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4171, gbc.sp());
        EXPECT(0x364f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01FB
        gbc.setState(0x525d, 0xd570, 0x1dc0, 0xd05b, 0xdf5b, 0x7846, 0x0, 0x0);
        gbc.writeMem(0x525d, { 0x93 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd570, gbc.sp());
        EXPECT(0x525e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 01FC
        gbc.setState(0xc6ae, 0x866d, 0x3b40, 0x9951, 0xffdc, 0x3c3b, 0x0, 0x0);
        gbc.writeMem(0xc6ae, { 0x93 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x866d, gbc.sp());
        EXPECT(0xc6af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc6ae));
        // 93 01FF
        gbc.setState(0x8523, 0x1f01, 0x7b80, 0x1a9c, 0xd4ec, 0xebb5, 0x1, 0x1);
        gbc.writeMem(0x8523, { 0x93 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1f01, gbc.sp());
        EXPECT(0x8524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8523));
        // 93 0200
        gbc.setState(0x6d4e, 0x8f1f, 0x5a00, 0xe030, 0x10fe, 0x336b, 0x0, 0x1);
        gbc.writeMem(0x6d4e, { 0x93 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8f1f, gbc.sp());
        EXPECT(0x6d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0201
        gbc.setState(0xb4a3, 0xa361, 0x7270, 0x1363, 0xb5e9, 0x3105, 0x1, 0x0);
        gbc.writeMem(0xb4a3, { 0x93 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa361, gbc.sp());
        EXPECT(0xb4a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb4a3));
        // 93 0202
        gbc.setState(0xea40, 0xe1d2, 0xfe10, 0xeb4f, 0x5990, 0x7a6c, 0x1, 0x0);
        gbc.writeMem(0xea40, { 0x93 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe1d2, gbc.sp());
        EXPECT(0xea41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xea40));
        // 93 0203
        gbc.setState(0x8119, 0x8b0b, 0x6900, 0xde8a, 0x7b3, 0x3dfe, 0x0, 0x0);
        gbc.writeMem(0x8119, { 0x93 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8b0b, gbc.sp());
        EXPECT(0x811a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8119));
        // 93 0204
        gbc.setState(0x125f, 0x15c8, 0x3cf0, 0xf6e, 0x2981, 0x5020, 0x1, 0x1);
        gbc.writeMem(0x125f, { 0x93 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x15c8, gbc.sp());
        EXPECT(0x1260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0206
        gbc.setState(0xbb77, 0x5434, 0xfb10, 0x8dae, 0x3298, 0x8b93, 0x1, 0x1);
        gbc.writeMem(0xbb77, { 0x93 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5434, gbc.sp());
        EXPECT(0xbb78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbb77));
        // 93 0207
        gbc.setState(0x4d52, 0xc1a9, 0x9920, 0x5479, 0x7610, 0xa95e, 0x1, 0x0);
        gbc.writeMem(0x4d52, { 0x93 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc1a9, gbc.sp());
        EXPECT(0x4d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0208
        gbc.setState(0x7bb1, 0xd357, 0x30d0, 0xdd3a, 0x430d, 0x3e69, 0x0, 0x0);
        gbc.writeMem(0x7bb1, { 0x93 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd357, gbc.sp());
        EXPECT(0x7bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0209
        gbc.setState(0x8a46, 0xecba, 0xa220, 0x3772, 0x6e4e, 0x446, 0x0, 0x0);
        gbc.writeMem(0x8a46, { 0x93 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xecba, gbc.sp());
        EXPECT(0x8a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8a46));
        // 93 020A
        gbc.setState(0xe2ae, 0x2644, 0x8d90, 0x5970, 0xa2a2, 0x781d, 0x0, 0x1);
        gbc.writeMem(0xe2ae, { 0x93 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2644, gbc.sp());
        EXPECT(0xe2af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe2ae));
        // 93 020B
        gbc.setState(0x8132, 0x5e71, 0x4020, 0xb719, 0x70db, 0xf4cf, 0x0, 0x0);
        gbc.writeMem(0x8132, { 0x93 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5e71, gbc.sp());
        EXPECT(0x8133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8132));
        // 93 020C
        gbc.setState(0x4905, 0xe29f, 0x7770, 0xf9ad, 0xc306, 0xe659, 0x0, 0x0);
        gbc.writeMem(0x4905, { 0x93 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe29f, gbc.sp());
        EXPECT(0x4906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 020D
        gbc.setState(0x6cf2, 0x511f, 0x9c60, 0xac4, 0x6c40, 0xcb2, 0x1, 0x0);
        gbc.writeMem(0x6cf2, { 0x93 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x511f, gbc.sp());
        EXPECT(0x6cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 020E
        gbc.setState(0x9a7f, 0x4ba1, 0x1a50, 0x3bb8, 0xfc55, 0xeaa1, 0x1, 0x0);
        gbc.writeMem(0x9a7f, { 0x93 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4ba1, gbc.sp());
        EXPECT(0x9a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9a7f));
        // 93 020F
        gbc.setState(0x7338, 0xf2dc, 0xc2d0, 0xf6e7, 0x2989, 0xbaa4, 0x1, 0x0);
        gbc.writeMem(0x7338, { 0x93 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf2dc, gbc.sp());
        EXPECT(0x7339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0210
        gbc.setState(0x9a36, 0x5824, 0xeb20, 0x4097, 0x68be, 0x86e5, 0x0, 0x1);
        gbc.writeMem(0x9a36, { 0x93 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5824, gbc.sp());
        EXPECT(0x9a37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9a36));
        // 93 0211
        gbc.setState(0x7799, 0xfc88, 0xe570, 0x1ded, 0x15f8, 0x9027, 0x1, 0x0);
        gbc.writeMem(0x7799, { 0x93 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfc88, gbc.sp());
        EXPECT(0x779a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0212
        gbc.setState(0xa1f7, 0x87bb, 0x5ef0, 0x978, 0x40cf, 0x6f70, 0x1, 0x0);
        gbc.writeMem(0xa1f7, { 0x93 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x87bb, gbc.sp());
        EXPECT(0xa1f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa1f7));
        // 93 0213
        gbc.setState(0x9c75, 0x21c1, 0x5bb0, 0x8055, 0xbaa, 0xd17b, 0x0, 0x0);
        gbc.writeMem(0x9c75, { 0x93 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x21c1, gbc.sp());
        EXPECT(0x9c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9c75));
        // 93 0214
        gbc.setState(0xa75d, 0xe4b1, 0xe970, 0xce48, 0xc645, 0xd6a5, 0x1, 0x1);
        gbc.writeMem(0xa75d, { 0x93 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe4b1, gbc.sp());
        EXPECT(0xa75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa75d));
        // 93 0216
        gbc.setState(0x7066, 0xf219, 0x2890, 0x3494, 0xdca5, 0x28d5, 0x0, 0x1);
        gbc.writeMem(0x7066, { 0x93 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf219, gbc.sp());
        EXPECT(0x7067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0217
        gbc.setState(0xdd9c, 0x93f3, 0xedd0, 0x6f1d, 0x6106, 0xf1bc, 0x1, 0x1);
        gbc.writeMem(0xdd9c, { 0x93 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x93f3, gbc.sp());
        EXPECT(0xdd9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xdd9c));
        // 93 0218
        gbc.setState(0xc74f, 0x4fa7, 0xd1e0, 0x19f3, 0x47cb, 0x44a4, 0x1, 0x0);
        gbc.writeMem(0xc74f, { 0x93 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4fa7, gbc.sp());
        EXPECT(0xc750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc74f));
        // 93 0219
        gbc.setState(0xc1f2, 0x694d, 0x1550, 0x6f1, 0xf58c, 0x4ed6, 0x1, 0x1);
        gbc.writeMem(0xc1f2, { 0x93 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x694d, gbc.sp());
        EXPECT(0xc1f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc1f2));
        // 93 021A
        gbc.setState(0xe81, 0x94f2, 0x44b0, 0x505d, 0x78d1, 0x89fb, 0x1, 0x1);
        gbc.writeMem(0xe81, { 0x93 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x94f2, gbc.sp());
        EXPECT(0xe82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 021D
        gbc.setState(0x83d3, 0x119d, 0xb7a0, 0x254f, 0x4d26, 0xb75f, 0x0, 0x0);
        gbc.writeMem(0x83d3, { 0x93 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x119d, gbc.sp());
        EXPECT(0x83d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x83d3));
        // 93 021E
        gbc.setState(0x801f, 0xc5b, 0xbe50, 0x9e02, 0xbe38, 0xaa, 0x1, 0x1);
        gbc.writeMem(0x801f, { 0x93 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc5b, gbc.sp());
        EXPECT(0x8020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x801f));
        // 93 021F
        gbc.setState(0x5aad, 0x4894, 0x7020, 0x15c5, 0xe6b1, 0x9dc0, 0x1, 0x1);
        gbc.writeMem(0x5aad, { 0x93 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4894, gbc.sp());
        EXPECT(0x5aae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0220
        gbc.setState(0xc77d, 0xa107, 0x2420, 0x25be, 0x1b9d, 0x5351, 0x1, 0x1);
        gbc.writeMem(0xc77d, { 0x93 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa107, gbc.sp());
        EXPECT(0xc77e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc77d));
        // 93 0221
        gbc.setState(0x13b2, 0xbe2e, 0x6b90, 0x9085, 0xe3e1, 0xdebf, 0x0, 0x0);
        gbc.writeMem(0x13b2, { 0x93 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbe2e, gbc.sp());
        EXPECT(0x13b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0222
        gbc.setState(0x6146, 0x1ebe, 0x8cc0, 0xf0f2, 0x1a6b, 0xb144, 0x1, 0x0);
        gbc.writeMem(0x6146, { 0x93 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1ebe, gbc.sp());
        EXPECT(0x6147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0223
        gbc.setState(0xb0d2, 0xf885, 0x5c10, 0xefc9, 0x7392, 0x2e43, 0x0, 0x1);
        gbc.writeMem(0xb0d2, { 0x93 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf885, gbc.sp());
        EXPECT(0xb0d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb0d2));
        // 93 0224
        gbc.setState(0xa149, 0x90f4, 0x9020, 0x6e13, 0xe4ba, 0x930, 0x0, 0x0);
        gbc.writeMem(0xa149, { 0x93 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x90f4, gbc.sp());
        EXPECT(0xa14a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa149));
        // 93 0225
        gbc.setState(0xda2a, 0xf148, 0x8990, 0xae02, 0x8558, 0x58d1, 0x0, 0x0);
        gbc.writeMem(0xda2a, { 0x93 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf148, gbc.sp());
        EXPECT(0xda2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xda2a));
        // 93 0226
        gbc.setState(0x7b2a, 0xbed1, 0x2ee0, 0xe7e0, 0x1ba7, 0xea15, 0x0, 0x0);
        gbc.writeMem(0x7b2a, { 0x93 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbed1, gbc.sp());
        EXPECT(0x7b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0227
        gbc.setState(0x2239, 0x4f84, 0xad30, 0x46f5, 0x214a, 0x9fb6, 0x1, 0x1);
        gbc.writeMem(0x2239, { 0x93 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4f84, gbc.sp());
        EXPECT(0x223a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0228
        gbc.setState(0xb945, 0xd8fc, 0x8040, 0xbef8, 0x648, 0x3544, 0x1, 0x0);
        gbc.writeMem(0xb945, { 0x93 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd8fc, gbc.sp());
        EXPECT(0xb946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb945));
        // 93 0229
        gbc.setState(0x641, 0x4ff0, 0xbb20, 0xc524, 0x4962, 0x5dcd, 0x1, 0x0);
        gbc.writeMem(0x641, { 0x93 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4ff0, gbc.sp());
        EXPECT(0x642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 022A
        gbc.setState(0xdee7, 0xe664, 0xbf0, 0x9328, 0xaad2, 0xf1a1, 0x0, 0x1);
        gbc.writeMem(0xdee7, { 0x93 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe664, gbc.sp());
        EXPECT(0xdee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xdee7));
        // 93 022B
        gbc.setState(0xdb30, 0xc96a, 0xd6e0, 0xf83b, 0xb918, 0xf8e7, 0x1, 0x1);
        gbc.writeMem(0xdb30, { 0x93 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc96a, gbc.sp());
        EXPECT(0xdb31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xdb30));
        // 93 022C
        gbc.setState(0x3e34, 0xa647, 0x7de0, 0x86e0, 0x1700, 0x7e6c, 0x1, 0x1);
        gbc.writeMem(0x3e34, { 0x93 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa647, gbc.sp());
        EXPECT(0x3e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 022D
        gbc.setState(0x6c14, 0xc335, 0xb0b0, 0x2e8c, 0x4d61, 0x805, 0x1, 0x1);
        gbc.writeMem(0x6c14, { 0x93 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc335, gbc.sp());
        EXPECT(0x6c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 022E
        gbc.setState(0xad36, 0x58, 0x79f0, 0xcada, 0xf769, 0x75c8, 0x1, 0x0);
        gbc.writeMem(0xad36, { 0x93 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x58, gbc.sp());
        EXPECT(0xad37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xad36));
        // 93 022F
        gbc.setState(0x9419, 0x570a, 0x5ce0, 0x1f2c, 0x5ae4, 0x97fc, 0x1, 0x1);
        gbc.writeMem(0x9419, { 0x93 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x570a, gbc.sp());
        EXPECT(0x941a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9419));
        // 93 0230
        gbc.setState(0x4b60, 0xfa0d, 0x6b30, 0x7ab7, 0x7c48, 0x2102, 0x0, 0x0);
        gbc.writeMem(0x4b60, { 0x93 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfa0d, gbc.sp());
        EXPECT(0x4b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0231
        gbc.setState(0xd448, 0xe34d, 0x2070, 0x630e, 0xdfc, 0xd49e, 0x0, 0x1);
        gbc.writeMem(0xd448, { 0x93 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe34d, gbc.sp());
        EXPECT(0xd449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd448));
        // 93 0232
        gbc.setState(0xaa89, 0x8a74, 0x8480, 0x5eaf, 0xa253, 0x3921, 0x1, 0x1);
        gbc.writeMem(0xaa89, { 0x93 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8a74, gbc.sp());
        EXPECT(0xaa8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xaa89));
        // 93 0233
        gbc.setState(0x5a09, 0xf140, 0xadf0, 0x7ca0, 0xe8e9, 0xf6da, 0x1, 0x1);
        gbc.writeMem(0x5a09, { 0x93 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf140, gbc.sp());
        EXPECT(0x5a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0234
        gbc.setState(0x8e76, 0x27f6, 0x7680, 0xa514, 0x1ffb, 0x9e43, 0x1, 0x0);
        gbc.writeMem(0x8e76, { 0x93 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x27f6, gbc.sp());
        EXPECT(0x8e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8e76));
        // 93 0235
        gbc.setState(0xb6a0, 0x8fdb, 0x5ba0, 0x45aa, 0xea30, 0x390e, 0x1, 0x1);
        gbc.writeMem(0xb6a0, { 0x93 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8fdb, gbc.sp());
        EXPECT(0xb6a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb6a0));
        // 93 0236
        gbc.setState(0x372d, 0x7cca, 0x16b0, 0x96ae, 0xa907, 0x3d3a, 0x1, 0x1);
        gbc.writeMem(0x372d, { 0x93 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7cca, gbc.sp());
        EXPECT(0x372e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0237
        gbc.setState(0x5ec4, 0xeda6, 0xc710, 0x41d9, 0x6358, 0xea9a, 0x0, 0x1);
        gbc.writeMem(0x5ec4, { 0x93 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xeda6, gbc.sp());
        EXPECT(0x5ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0239
        gbc.setState(0x5fa0, 0x122c, 0x8960, 0x7cf8, 0x3181, 0xcad6, 0x1, 0x1);
        gbc.writeMem(0x5fa0, { 0x93 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x122c, gbc.sp());
        EXPECT(0x5fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 023A
        gbc.setState(0x449a, 0xb800, 0x3740, 0xd854, 0x33db, 0x4f6d, 0x0, 0x0);
        gbc.writeMem(0x449a, { 0x93 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb800, gbc.sp());
        EXPECT(0x449b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 023B
        gbc.setState(0xb3f5, 0x3714, 0xb6f0, 0x1e8c, 0x9d74, 0x304d, 0x1, 0x0);
        gbc.writeMem(0xb3f5, { 0x93 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3714, gbc.sp());
        EXPECT(0xb3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb3f5));
        // 93 023C
        gbc.setState(0x5089, 0xe502, 0x10d0, 0x51bc, 0xd61c, 0x2fbc, 0x1, 0x0);
        gbc.writeMem(0x5089, { 0x93 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe502, gbc.sp());
        EXPECT(0x508a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 023E
        gbc.setState(0x126a, 0xcb72, 0xbde0, 0xa026, 0x6ae0, 0x802a, 0x0, 0x0);
        gbc.writeMem(0x126a, { 0x93 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xcb72, gbc.sp());
        EXPECT(0x126b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 023F
        gbc.setState(0x3b6d, 0x2134, 0xe680, 0x8545, 0x62e9, 0x1195, 0x1, 0x1);
        gbc.writeMem(0x3b6d, { 0x93 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2134, gbc.sp());
        EXPECT(0x3b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0240
        gbc.setState(0x2075, 0x2933, 0xb1e0, 0x3256, 0xac2d, 0x2f2d, 0x1, 0x0);
        gbc.writeMem(0x2075, { 0x93 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2933, gbc.sp());
        EXPECT(0x2076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0241
        gbc.setState(0xe3a1, 0x3a07, 0xee50, 0x7c6, 0xfca3, 0x690c, 0x0, 0x1);
        gbc.writeMem(0xe3a1, { 0x93 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3a07, gbc.sp());
        EXPECT(0xe3a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe3a1));
        // 93 0243
        gbc.setState(0xd111, 0x50ff, 0xddb0, 0xe71f, 0xfd8, 0x644a, 0x1, 0x1);
        gbc.writeMem(0xd111, { 0x93 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x50ff, gbc.sp());
        EXPECT(0xd112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd111));
        // 93 0244
        gbc.setState(0x80ea, 0xabc8, 0xf070, 0xb508, 0xb27d, 0xfa3a, 0x1, 0x1);
        gbc.writeMem(0x80ea, { 0x93 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xabc8, gbc.sp());
        EXPECT(0x80eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x80ea));
        // 93 0245
        gbc.setState(0xb5af, 0xc0, 0x7140, 0x40b4, 0x251c, 0x7f33, 0x1, 0x0);
        gbc.writeMem(0xb5af, { 0x93 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc0, gbc.sp());
        EXPECT(0xb5b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb5af));
        // 93 0246
        gbc.setState(0x7bcc, 0x345b, 0xfb70, 0x4ea1, 0x986e, 0x4b9e, 0x1, 0x0);
        gbc.writeMem(0x7bcc, { 0x93 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x345b, gbc.sp());
        EXPECT(0x7bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0247
        gbc.setState(0x657, 0xb4f8, 0xb010, 0x18ac, 0x6120, 0xa0e0, 0x1, 0x0);
        gbc.writeMem(0x657, { 0x93 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb4f8, gbc.sp());
        EXPECT(0x658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0248
        gbc.setState(0x729f, 0x7df, 0xf0e0, 0x5328, 0xd304, 0x92c6, 0x0, 0x1);
        gbc.writeMem(0x729f, { 0x93 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7df, gbc.sp());
        EXPECT(0x72a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0249
        gbc.setState(0x4bd8, 0x7494, 0x810, 0xa9c7, 0x57dc, 0xe0ef, 0x1, 0x1);
        gbc.writeMem(0x4bd8, { 0x93 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7494, gbc.sp());
        EXPECT(0x4bd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 024A
        gbc.setState(0x1fda, 0x7e20, 0x4c0, 0x4993, 0x195d, 0xbc25, 0x0, 0x0);
        gbc.writeMem(0x1fda, { 0x93 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7e20, gbc.sp());
        EXPECT(0x1fdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 024B
        gbc.setState(0x4f11, 0x3f3, 0x6cb0, 0xd18, 0xa6b9, 0x89c4, 0x0, 0x0);
        gbc.writeMem(0x4f11, { 0x93 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3f3, gbc.sp());
        EXPECT(0x4f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 024C
        gbc.setState(0xe991, 0x3a88, 0x7450, 0x870, 0xf803, 0x9ab9, 0x1, 0x0);
        gbc.writeMem(0xe991, { 0x93 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3a88, gbc.sp());
        EXPECT(0xe992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe991));
        // 93 024D
        gbc.setState(0xea, 0x92ea, 0x460, 0x8bc9, 0xa9d0, 0x1746, 0x1, 0x0);
        gbc.writeMem(0xea, { 0x93 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x92ea, gbc.sp());
        EXPECT(0xeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 024E
        gbc.setState(0x66a, 0x3f9e, 0xcd20, 0x4f24, 0xa146, 0xf943, 0x0, 0x1);
        gbc.writeMem(0x66a, { 0x93 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3f9e, gbc.sp());
        EXPECT(0x66b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 024F
        gbc.setState(0x50f4, 0x89a5, 0xb870, 0xe0d, 0xb201, 0x4a5e, 0x1, 0x0);
        gbc.writeMem(0x50f4, { 0x93 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x89a5, gbc.sp());
        EXPECT(0x50f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0250
        gbc.setState(0xd047, 0x982c, 0x75d0, 0xfe94, 0xec60, 0xf072, 0x1, 0x1);
        gbc.writeMem(0xd047, { 0x93 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x982c, gbc.sp());
        EXPECT(0xd048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd047));
        // 93 0251
        gbc.setState(0xc3ba, 0xab69, 0x7dd0, 0x8600, 0x7a1a, 0x601, 0x1, 0x0);
        gbc.writeMem(0xc3ba, { 0x93 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xab69, gbc.sp());
        EXPECT(0xc3bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc3ba));
        // 93 0252
        gbc.setState(0x83e1, 0x1c6f, 0xd40, 0xd9a8, 0xcaba, 0x47f, 0x1, 0x0);
        gbc.writeMem(0x83e1, { 0x93 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1c6f, gbc.sp());
        EXPECT(0x83e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x83e1));
        // 93 0253
        gbc.setState(0xbd8e, 0xf8af, 0xc7c0, 0xf824, 0xc015, 0xc8d5, 0x1, 0x1);
        gbc.writeMem(0xbd8e, { 0x93 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf8af, gbc.sp());
        EXPECT(0xbd8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbd8e));
        // 93 0254
        gbc.setState(0x51dd, 0xa191, 0x2060, 0xf84e, 0x44e4, 0xfa7d, 0x0, 0x0);
        gbc.writeMem(0x51dd, { 0x93 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa191, gbc.sp());
        EXPECT(0x51de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0255
        gbc.setState(0x8b60, 0x5236, 0x4a50, 0x9079, 0x3261, 0x24c0, 0x0, 0x1);
        gbc.writeMem(0x8b60, { 0x93 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5236, gbc.sp());
        EXPECT(0x8b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8b60));
        // 93 0256
        gbc.setState(0x5189, 0x2e20, 0x8e40, 0xe15f, 0x3990, 0xe6ab, 0x1, 0x0);
        gbc.writeMem(0x5189, { 0x93 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2e20, gbc.sp());
        EXPECT(0x518a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0257
        gbc.setState(0x3f0, 0xac82, 0x5f50, 0x5a6, 0x3637, 0x6b04, 0x0, 0x1);
        gbc.writeMem(0x3f0, { 0x93 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xac82, gbc.sp());
        EXPECT(0x3f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0258
        gbc.setState(0x2207, 0x3e13, 0xe350, 0xd82, 0x67b1, 0xd702, 0x1, 0x1);
        gbc.writeMem(0x2207, { 0x93 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3e13, gbc.sp());
        EXPECT(0x2208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0259
        gbc.setState(0xd116, 0x26f2, 0x1310, 0xd8b2, 0xe989, 0xfee5, 0x0, 0x0);
        gbc.writeMem(0xd116, { 0x93 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x26f2, gbc.sp());
        EXPECT(0xd117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd116));
        // 93 025A
        gbc.setState(0x8b4a, 0xed1, 0x5990, 0xbec2, 0xb292, 0x341e, 0x0, 0x0);
        gbc.writeMem(0x8b4a, { 0x93 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xed1, gbc.sp());
        EXPECT(0x8b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8b4a));
        // 93 025B
        gbc.setState(0x208c, 0x9c3e, 0x280, 0x61c5, 0xadb9, 0x6eae, 0x1, 0x0);
        gbc.writeMem(0x208c, { 0x93 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9c3e, gbc.sp());
        EXPECT(0x208d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 025C
        gbc.setState(0xda29, 0x37d3, 0x7450, 0x6f9e, 0x5c3e, 0xa21d, 0x0, 0x0);
        gbc.writeMem(0xda29, { 0x93 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x37d3, gbc.sp());
        EXPECT(0xda2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xda29));
        // 93 025D
        gbc.setState(0x1c9, 0xee06, 0x5e80, 0xebaf, 0xa493, 0x3f37, 0x1, 0x0);
        gbc.writeMem(0x1c9, { 0x93 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xee06, gbc.sp());
        EXPECT(0x1ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 025E
        gbc.setState(0xb8bd, 0xd71f, 0x8430, 0xc271, 0x6dd7, 0x454a, 0x1, 0x1);
        gbc.writeMem(0xb8bd, { 0x93 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd71f, gbc.sp());
        EXPECT(0xb8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb8bd));
        // 93 025F
        gbc.setState(0xeadc, 0xc1d1, 0x5dd0, 0x343, 0x4d81, 0x3800, 0x1, 0x1);
        gbc.writeMem(0xeadc, { 0x93 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc1d1, gbc.sp());
        EXPECT(0xeadd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xeadc));
        // 93 0261
        gbc.setState(0xd096, 0x4123, 0x7b70, 0x15fe, 0xc1cd, 0x3ff2, 0x0, 0x1);
        gbc.writeMem(0xd096, { 0x93 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4123, gbc.sp());
        EXPECT(0xd097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd096));
        // 93 0263
        gbc.setState(0xcd3f, 0xadf6, 0x1300, 0xae9d, 0xf108, 0xf9a, 0x1, 0x1);
        gbc.writeMem(0xcd3f, { 0x93 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xadf6, gbc.sp());
        EXPECT(0xcd40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcd3f));
        // 93 0264
        gbc.setState(0x2660, 0x9775, 0xad90, 0x4682, 0xd540, 0x2304, 0x1, 0x0);
        gbc.writeMem(0x2660, { 0x93 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9775, gbc.sp());
        EXPECT(0x2661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0265
        gbc.setState(0x189d, 0x6a, 0xdcd0, 0x8786, 0xe6fd, 0xb5da, 0x1, 0x1);
        gbc.writeMem(0x189d, { 0x93 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6a, gbc.sp());
        EXPECT(0x189e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0266
        gbc.setState(0x1032, 0xcb89, 0xe0f0, 0xbfa, 0xc31, 0x9de3, 0x1, 0x0);
        gbc.writeMem(0x1032, { 0x93 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcb89, gbc.sp());
        EXPECT(0x1033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0267
        gbc.setState(0x3c42, 0xe578, 0x3eb0, 0xdbc7, 0x8a29, 0xc0bd, 0x0, 0x1);
        gbc.writeMem(0x3c42, { 0x93 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe578, gbc.sp());
        EXPECT(0x3c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0268
        gbc.setState(0x38fd, 0x9889, 0xc10, 0xa941, 0xee18, 0x8ce4, 0x0, 0x0);
        gbc.writeMem(0x38fd, { 0x93 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9889, gbc.sp());
        EXPECT(0x38fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0269
        gbc.setState(0x2e81, 0xb400, 0x7f80, 0x8994, 0x5615, 0xccc8, 0x0, 0x0);
        gbc.writeMem(0x2e81, { 0x93 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb400, gbc.sp());
        EXPECT(0x2e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 026A
        gbc.setState(0x26b8, 0xe9e8, 0xc750, 0x79c1, 0xccb0, 0xdc8f, 0x1, 0x1);
        gbc.writeMem(0x26b8, { 0x93 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe9e8, gbc.sp());
        EXPECT(0x26b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 026B
        gbc.setState(0x25aa, 0x9af4, 0xcef0, 0x7e61, 0x56e1, 0xc9fc, 0x0, 0x1);
        gbc.writeMem(0x25aa, { 0x93 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9af4, gbc.sp());
        EXPECT(0x25ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 026C
        gbc.setState(0x89a6, 0x772a, 0x4860, 0x4b60, 0xe34c, 0x3433, 0x0, 0x0);
        gbc.writeMem(0x89a6, { 0x93 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x772a, gbc.sp());
        EXPECT(0x89a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x89a6));
        // 93 026F
        gbc.setState(0xe969, 0x3c90, 0x43a0, 0x1371, 0x8a09, 0x8aba, 0x0, 0x1);
        gbc.writeMem(0xe969, { 0x93 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3c90, gbc.sp());
        EXPECT(0xe96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe969));
        // 93 0270
        gbc.setState(0xc2f5, 0x3fc7, 0xe410, 0xcb2, 0x3a38, 0x4f42, 0x0, 0x0);
        gbc.writeMem(0xc2f5, { 0x93 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3fc7, gbc.sp());
        EXPECT(0xc2f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc2f5));
        // 93 0271
        gbc.setState(0xe28, 0xca7d, 0xa030, 0xa1e5, 0x351, 0xeb2a, 0x0, 0x1);
        gbc.writeMem(0xe28, { 0x93 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xca7d, gbc.sp());
        EXPECT(0xe29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0272
        gbc.setState(0x9ae5, 0x65b9, 0x42f0, 0x5f07, 0xa832, 0x745d, 0x1, 0x1);
        gbc.writeMem(0x9ae5, { 0x93 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x65b9, gbc.sp());
        EXPECT(0x9ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9ae5));
        // 93 0273
        gbc.setState(0xb5c0, 0xac02, 0x85c0, 0x5053, 0x62f5, 0x5e53, 0x0, 0x0);
        gbc.writeMem(0xb5c0, { 0x93 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xac02, gbc.sp());
        EXPECT(0xb5c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb5c0));
        // 93 0274
        gbc.setState(0x9317, 0x7dc1, 0xe870, 0x6ed5, 0x6083, 0x879, 0x1, 0x0);
        gbc.writeMem(0x9317, { 0x93 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7dc1, gbc.sp());
        EXPECT(0x9318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9317));
        // 93 0275
        gbc.setState(0x4e60, 0x5ee0, 0x3670, 0x11b8, 0xf6ab, 0x9eff, 0x1, 0x1);
        gbc.writeMem(0x4e60, { 0x93 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5ee0, gbc.sp());
        EXPECT(0x4e61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0276
        gbc.setState(0x91ec, 0x7747, 0xf930, 0xe8e1, 0xecf, 0xa52, 0x0, 0x1);
        gbc.writeMem(0x91ec, { 0x93 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7747, gbc.sp());
        EXPECT(0x91ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x91ec));
        // 93 0277
        gbc.setState(0x6d0f, 0xdbec, 0x51b0, 0xa713, 0x5e01, 0x704c, 0x0, 0x1);
        gbc.writeMem(0x6d0f, { 0x93 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdbec, gbc.sp());
        EXPECT(0x6d10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0278
        gbc.setState(0xe3c6, 0x2dad, 0xd260, 0xd84a, 0x3b9c, 0xfdee, 0x1, 0x1);
        gbc.writeMem(0xe3c6, { 0x93 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2dad, gbc.sp());
        EXPECT(0xe3c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe3c6));
        // 93 0279
        gbc.setState(0xc256, 0xf718, 0x9960, 0xadae, 0xf7dc, 0xc61f, 0x0, 0x1);
        gbc.writeMem(0xc256, { 0x93 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf718, gbc.sp());
        EXPECT(0xc257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc256));
        // 93 027A
        gbc.setState(0x3ff3, 0x662e, 0x780, 0xaa5, 0x708, 0xd645, 0x1, 0x0);
        gbc.writeMem(0x3ff3, { 0x93 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x662e, gbc.sp());
        EXPECT(0x3ff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 027B
        gbc.setState(0x4c31, 0x6889, 0x2610, 0xc0df, 0x7b8e, 0xccc3, 0x1, 0x1);
        gbc.writeMem(0x4c31, { 0x93 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6889, gbc.sp());
        EXPECT(0x4c32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 027C
        gbc.setState(0x9208, 0x5c24, 0x5da0, 0x7f45, 0xfee2, 0xece3, 0x0, 0x0);
        gbc.writeMem(0x9208, { 0x93 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5c24, gbc.sp());
        EXPECT(0x9209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9208));
        // 93 027D
        gbc.setState(0xb2a6, 0x6c9, 0xb6f0, 0xede, 0x7796, 0x951b, 0x0, 0x1);
        gbc.writeMem(0xb2a6, { 0x93 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6c9, gbc.sp());
        EXPECT(0xb2a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb2a6));
        // 93 027E
        gbc.setState(0xc486, 0x29c1, 0x52a0, 0x3581, 0x3654, 0xa9bb, 0x0, 0x0);
        gbc.writeMem(0xc486, { 0x93 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x29c1, gbc.sp());
        EXPECT(0xc487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc486));
        // 93 027F
        gbc.setState(0x4910, 0x3387, 0x35d0, 0x2420, 0xbb77, 0x72bc, 0x1, 0x0);
        gbc.writeMem(0x4910, { 0x93 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3387, gbc.sp());
        EXPECT(0x4911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0281
        gbc.setState(0xa61c, 0x67b9, 0x7ee0, 0xccc5, 0xa7cc, 0x92a6, 0x0, 0x1);
        gbc.writeMem(0xa61c, { 0x93 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x67b9, gbc.sp());
        EXPECT(0xa61d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa61c));
        // 93 0282
        gbc.setState(0xcd1b, 0x37d1, 0x84b0, 0x3aea, 0xd597, 0x5c38, 0x0, 0x1);
        gbc.writeMem(0xcd1b, { 0x93 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x37d1, gbc.sp());
        EXPECT(0xcd1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcd1b));
        // 93 0283
        gbc.setState(0x9301, 0x78d9, 0x8050, 0xc7e9, 0x3efe, 0xd35, 0x0, 0x1);
        gbc.writeMem(0x9301, { 0x93 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x78d9, gbc.sp());
        EXPECT(0x9302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9301));
        // 93 0284
        gbc.setState(0xdf91, 0x3cb3, 0xbb00, 0x2607, 0x8ae4, 0x2064, 0x1, 0x0);
        gbc.writeMem(0xdf91, { 0x93 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3cb3, gbc.sp());
        EXPECT(0xdf92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xdf91));
        // 93 0285
        gbc.setState(0x5f9f, 0xbdea, 0x6160, 0x16a, 0xc31c, 0xb46c, 0x1, 0x1);
        gbc.writeMem(0x5f9f, { 0x93 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbdea, gbc.sp());
        EXPECT(0x5fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0286
        gbc.setState(0xbd2c, 0xd564, 0xfc70, 0x6e99, 0xa68, 0x1af5, 0x0, 0x0);
        gbc.writeMem(0xbd2c, { 0x93 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd564, gbc.sp());
        EXPECT(0xbd2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbd2c));
        // 93 0287
        gbc.setState(0xeacf, 0xf98d, 0x1630, 0x3494, 0xed37, 0x5c94, 0x1, 0x0);
        gbc.writeMem(0xeacf, { 0x93 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf98d, gbc.sp());
        EXPECT(0xead0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xeacf));
        // 93 0288
        gbc.setState(0x9f83, 0x6acf, 0x4400, 0xafd9, 0x4e51, 0xd2ef, 0x1, 0x0);
        gbc.writeMem(0x9f83, { 0x93 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6acf, gbc.sp());
        EXPECT(0x9f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9f83));
        // 93 0289
        gbc.setState(0x234d, 0x3efa, 0xa750, 0x8df7, 0x4ce7, 0x850c, 0x1, 0x1);
        gbc.writeMem(0x234d, { 0x93 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3efa, gbc.sp());
        EXPECT(0x234e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 028A
        gbc.setState(0xd4d1, 0x42ec, 0x60b0, 0xfae8, 0xd9c4, 0x8928, 0x1, 0x0);
        gbc.writeMem(0xd4d1, { 0x93 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x42ec, gbc.sp());
        EXPECT(0xd4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd4d1));
        // 93 028B
        gbc.setState(0xb7bf, 0xfc0b, 0x73f0, 0xa989, 0x5bff, 0x936b, 0x1, 0x0);
        gbc.writeMem(0xb7bf, { 0x93 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfc0b, gbc.sp());
        EXPECT(0xb7c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb7bf));
        // 93 028C
        gbc.setState(0xe07b, 0xa3d3, 0xc1f0, 0x8d34, 0x3153, 0x534e, 0x0, 0x1);
        gbc.writeMem(0xe07b, { 0x93 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa3d3, gbc.sp());
        EXPECT(0xe07c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe07b));
        // 93 028D
        gbc.setState(0x2a05, 0xc0fb, 0xf880, 0x65bc, 0x16e3, 0x396f, 0x0, 0x0);
        gbc.writeMem(0x2a05, { 0x93 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc0fb, gbc.sp());
        EXPECT(0x2a06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 028E
        gbc.setState(0x4bcd, 0xef80, 0x3910, 0x94e0, 0xf1b6, 0x912f, 0x1, 0x1);
        gbc.writeMem(0x4bcd, { 0x93 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xef80, gbc.sp());
        EXPECT(0x4bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 028F
        gbc.setState(0xca3, 0xe82e, 0x3100, 0x6544, 0x5f86, 0x831c, 0x0, 0x1);
        gbc.writeMem(0xca3, { 0x93 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe82e, gbc.sp());
        EXPECT(0xca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0292
        gbc.setState(0xcf36, 0xd845, 0x5ad0, 0x1674, 0x8a02, 0x4832, 0x0, 0x1);
        gbc.writeMem(0xcf36, { 0x93 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd845, gbc.sp());
        EXPECT(0xcf37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcf36));
        // 93 0293
        gbc.setState(0x1d71, 0xc415, 0x72c0, 0x2f26, 0x7b5d, 0xa5d5, 0x1, 0x0);
        gbc.writeMem(0x1d71, { 0x93 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc415, gbc.sp());
        EXPECT(0x1d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0294
        gbc.setState(0x78bf, 0xd0b6, 0x1560, 0x956f, 0x68f4, 0x9df1, 0x0, 0x1);
        gbc.writeMem(0x78bf, { 0x93 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd0b6, gbc.sp());
        EXPECT(0x78c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0295
        gbc.setState(0x9d68, 0x2c8f, 0xb0f0, 0x7176, 0xf214, 0xbdad, 0x1, 0x0);
        gbc.writeMem(0x9d68, { 0x93 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2c8f, gbc.sp());
        EXPECT(0x9d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9d68));
        // 93 0296
        gbc.setState(0x27f3, 0x2f88, 0xdcb0, 0x2674, 0x4b93, 0x3a61, 0x0, 0x1);
        gbc.writeMem(0x27f3, { 0x93 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2f88, gbc.sp());
        EXPECT(0x27f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0297
        gbc.setState(0x5eb7, 0x1115, 0xfca0, 0x9865, 0xe8c, 0xa994, 0x1, 0x0);
        gbc.writeMem(0x5eb7, { 0x93 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1115, gbc.sp());
        EXPECT(0x5eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0298
        gbc.setState(0x1b28, 0x3983, 0xd820, 0x3fa7, 0xfebd, 0xbd8c, 0x0, 0x0);
        gbc.writeMem(0x1b28, { 0x93 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3983, gbc.sp());
        EXPECT(0x1b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0299
        gbc.setState(0xcec8, 0x3358, 0x2650, 0xa8c1, 0x9aee, 0x1a3c, 0x0, 0x1);
        gbc.writeMem(0xcec8, { 0x93 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3358, gbc.sp());
        EXPECT(0xcec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcec8));
        // 93 029B
        gbc.setState(0xed10, 0x8e4a, 0xaf60, 0xf7cb, 0xa57b, 0x970f, 0x1, 0x0);
        gbc.writeMem(0xed10, { 0x93 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8e4a, gbc.sp());
        EXPECT(0xed11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xed10));
        // 93 029C
        gbc.setState(0x6793, 0x2b0b, 0xc810, 0x6f67, 0xb3e5, 0xab55, 0x1, 0x0);
        gbc.writeMem(0x6793, { 0x93 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2b0b, gbc.sp());
        EXPECT(0x6794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 029D
        gbc.setState(0xdf54, 0x8093, 0x4300, 0x321f, 0xd744, 0xdb8a, 0x0, 0x1);
        gbc.writeMem(0xdf54, { 0x93 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8093, gbc.sp());
        EXPECT(0xdf55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xdf54));
        // 93 029E
        gbc.setState(0x2f7d, 0x7e65, 0xf970, 0x59b6, 0x61b6, 0x1cbe, 0x1, 0x0);
        gbc.writeMem(0x2f7d, { 0x93 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7e65, gbc.sp());
        EXPECT(0x2f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 029F
        gbc.setState(0xcfdf, 0x582c, 0x7950, 0x87df, 0x5a0a, 0x1929, 0x1, 0x0);
        gbc.writeMem(0xcfdf, { 0x93 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x582c, gbc.sp());
        EXPECT(0xcfe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcfdf));
        // 93 02A0
        gbc.setState(0xd9b4, 0x946c, 0x6ae0, 0xeba3, 0x8b93, 0x746a, 0x0, 0x1);
        gbc.writeMem(0xd9b4, { 0x93 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x946c, gbc.sp());
        EXPECT(0xd9b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd9b4));
        // 93 02A1
        gbc.setState(0x23a8, 0x8768, 0xda70, 0x616e, 0x8883, 0x538f, 0x0, 0x1);
        gbc.writeMem(0x23a8, { 0x93 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8768, gbc.sp());
        EXPECT(0x23a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02A2
        gbc.setState(0xcb33, 0xa92, 0x8fc0, 0x4428, 0x6227, 0xefc0, 0x1, 0x0);
        gbc.writeMem(0xcb33, { 0x93 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa92, gbc.sp());
        EXPECT(0xcb34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcb33));
        // 93 02A3
        gbc.setState(0x2812, 0xe885, 0x8b20, 0xdd2d, 0x4374, 0x65e8, 0x0, 0x0);
        gbc.writeMem(0x2812, { 0x93 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe885, gbc.sp());
        EXPECT(0x2813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02A4
        gbc.setState(0xba11, 0xd1, 0xb650, 0xf817, 0xdb8c, 0x6f8a, 0x1, 0x1);
        gbc.writeMem(0xba11, { 0x93 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd1, gbc.sp());
        EXPECT(0xba12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xba11));
        // 93 02A5
        gbc.setState(0xda68, 0x35cb, 0xcd10, 0xcede, 0xec02, 0x1c4d, 0x1, 0x0);
        gbc.writeMem(0xda68, { 0x93 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x35cb, gbc.sp());
        EXPECT(0xda69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xda68));
        // 93 02A6
        gbc.setState(0x9027, 0x606d, 0x2ae0, 0xd195, 0xf497, 0x75f7, 0x0, 0x0);
        gbc.writeMem(0x9027, { 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x606d, gbc.sp());
        EXPECT(0x9028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9027));
        // 93 02A7
        gbc.setState(0x8885, 0x2725, 0x93c0, 0x7b4f, 0x5121, 0xe584, 0x0, 0x1);
        gbc.writeMem(0x8885, { 0x93 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2725, gbc.sp());
        EXPECT(0x8886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8885));
        // 93 02A8
        gbc.setState(0xea39, 0xfa03, 0x4e70, 0xbd13, 0xc3da, 0x61f9, 0x0, 0x1);
        gbc.writeMem(0xea39, { 0x93 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfa03, gbc.sp());
        EXPECT(0xea3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xea39));
        // 93 02A9
        gbc.setState(0xb90f, 0x8bb3, 0x6510, 0x3372, 0xd55a, 0x24b3, 0x0, 0x1);
        gbc.writeMem(0xb90f, { 0x93 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8bb3, gbc.sp());
        EXPECT(0xb910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb90f));
        // 93 02AA
        gbc.setState(0xc5ab, 0x492c, 0xee00, 0xb70f, 0x7c7, 0xf97, 0x1, 0x1);
        gbc.writeMem(0xc5ab, { 0x93 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x492c, gbc.sp());
        EXPECT(0xc5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc5ab));
        // 93 02AB
        gbc.setState(0x1358, 0xe31b, 0x5920, 0x1969, 0x82b4, 0x6cdc, 0x1, 0x1);
        gbc.writeMem(0x1358, { 0x93 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe31b, gbc.sp());
        EXPECT(0x1359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02AC
        gbc.setState(0x86aa, 0x920c, 0x82b0, 0xc675, 0x28ad, 0xe2ee, 0x1, 0x1);
        gbc.writeMem(0x86aa, { 0x93 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x920c, gbc.sp());
        EXPECT(0x86ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x86aa));
        // 93 02AD
        gbc.setState(0xa73c, 0xcaf5, 0x6bb0, 0x85f, 0xb196, 0x3df0, 0x1, 0x0);
        gbc.writeMem(0xa73c, { 0x93 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcaf5, gbc.sp());
        EXPECT(0xa73d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa73c));
        // 93 02AE
        gbc.setState(0x5805, 0x8116, 0xde30, 0x1409, 0xd02a, 0xf692, 0x0, 0x0);
        gbc.writeMem(0x5805, { 0x93 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8116, gbc.sp());
        EXPECT(0x5806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02AF
        gbc.setState(0x3470, 0xb27d, 0xcd30, 0xc40f, 0x4cd0, 0x58fc, 0x1, 0x1);
        gbc.writeMem(0x3470, { 0x93 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb27d, gbc.sp());
        EXPECT(0x3471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02B0
        gbc.setState(0x5e4d, 0xdd04, 0x71d0, 0x7bde, 0x7d6f, 0xa9c9, 0x0, 0x1);
        gbc.writeMem(0x5e4d, { 0x93 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdd04, gbc.sp());
        EXPECT(0x5e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02B1
        gbc.setState(0x6876, 0x64d, 0x6d80, 0x5943, 0x9fb5, 0x5f18, 0x0, 0x1);
        gbc.writeMem(0x6876, { 0x93 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x64d, gbc.sp());
        EXPECT(0x6877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02B2
        gbc.setState(0x88a3, 0x5e41, 0xace0, 0x24bb, 0xb4b0, 0x418c, 0x0, 0x0);
        gbc.writeMem(0x88a3, { 0x93 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5e41, gbc.sp());
        EXPECT(0x88a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x88a3));
        // 93 02B3
        gbc.setState(0xe0c8, 0xb2bf, 0x5310, 0xbe42, 0x9b00, 0xee92, 0x1, 0x1);
        gbc.writeMem(0xe0c8, { 0x93 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb2bf, gbc.sp());
        EXPECT(0xe0c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe0c8));
        // 93 02B4
        gbc.setState(0x2b33, 0x375d, 0xe100, 0x6d36, 0x1644, 0x4544, 0x1, 0x0);
        gbc.writeMem(0x2b33, { 0x93 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x375d, gbc.sp());
        EXPECT(0x2b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02B5
        gbc.setState(0xafbc, 0xaae, 0x5b40, 0xc92c, 0x7f7e, 0xde9b, 0x1, 0x1);
        gbc.writeMem(0xafbc, { 0x93 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xaae, gbc.sp());
        EXPECT(0xafbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xafbc));
        // 93 02B6
        gbc.setState(0x8428, 0x6b8e, 0x9d00, 0xc958, 0x2ad4, 0x7748, 0x0, 0x1);
        gbc.writeMem(0x8428, { 0x93 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6b8e, gbc.sp());
        EXPECT(0x8429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8428));
        // 93 02B7
        gbc.setState(0x66e1, 0xcdc1, 0x3f00, 0xc09b, 0xc945, 0x3d7a, 0x1, 0x1);
        gbc.writeMem(0x66e1, { 0x93 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xcdc1, gbc.sp());
        EXPECT(0x66e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02B8
        gbc.setState(0xdf95, 0x13b9, 0xc830, 0x97cd, 0x4205, 0x6627, 0x1, 0x1);
        gbc.writeMem(0xdf95, { 0x93 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x13b9, gbc.sp());
        EXPECT(0xdf96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xdf95));
        // 93 02B9
        gbc.setState(0xbad9, 0x8e8f, 0xac00, 0x6cba, 0xfacc, 0x4f57, 0x0, 0x1);
        gbc.writeMem(0xbad9, { 0x93 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8e8f, gbc.sp());
        EXPECT(0xbada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbad9));
        // 93 02BA
        gbc.setState(0x5a0f, 0x34d0, 0x1fe0, 0x4813, 0x38c1, 0x7d65, 0x1, 0x1);
        gbc.writeMem(0x5a0f, { 0x93 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x34d0, gbc.sp());
        EXPECT(0x5a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02BB
        gbc.setState(0x7aca, 0x3f7, 0x87a0, 0xa114, 0x2157, 0xb66d, 0x0, 0x1);
        gbc.writeMem(0x7aca, { 0x93 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3f7, gbc.sp());
        EXPECT(0x7acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02BC
        gbc.setState(0x7ef2, 0x6ddf, 0x3ea0, 0xa8cf, 0x1248, 0x354d, 0x0, 0x1);
        gbc.writeMem(0x7ef2, { 0x93 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6ddf, gbc.sp());
        EXPECT(0x7ef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02BD
        gbc.setState(0x3768, 0xdb35, 0x11a0, 0x68, 0x3053, 0xe66, 0x1, 0x0);
        gbc.writeMem(0x3768, { 0x93 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdb35, gbc.sp());
        EXPECT(0x3769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02BE
        gbc.setState(0x218a, 0x7c8e, 0xd400, 0xab50, 0xfa9f, 0xd03d, 0x0, 0x0);
        gbc.writeMem(0x218a, { 0x93 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7c8e, gbc.sp());
        EXPECT(0x218b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02BF
        gbc.setState(0x141b, 0xbfb7, 0x1b00, 0x3ea1, 0x782b, 0x344b, 0x1, 0x0);
        gbc.writeMem(0x141b, { 0x93 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbfb7, gbc.sp());
        EXPECT(0x141c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02C0
        gbc.setState(0x3ba6, 0x655c, 0x8730, 0xd9f9, 0x7a27, 0x3e6e, 0x0, 0x1);
        gbc.writeMem(0x3ba6, { 0x93 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x655c, gbc.sp());
        EXPECT(0x3ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02C1
        gbc.setState(0x7d24, 0x82da, 0x1af0, 0xc31, 0xc690, 0x66d0, 0x0, 0x0);
        gbc.writeMem(0x7d24, { 0x93 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x82da, gbc.sp());
        EXPECT(0x7d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02C2
        gbc.setState(0x38bb, 0xf9ab, 0x25c0, 0x17c2, 0x7e2c, 0xdf0c, 0x0, 0x1);
        gbc.writeMem(0x38bb, { 0x93 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf9ab, gbc.sp());
        EXPECT(0x38bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02C3
        gbc.setState(0x27a3, 0x40e4, 0xeef0, 0xe00, 0x59, 0x59a0, 0x0, 0x1);
        gbc.writeMem(0x27a3, { 0x93 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x40e4, gbc.sp());
        EXPECT(0x27a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02C4
        gbc.setState(0xd42b, 0xd4ee, 0xd640, 0xbc44, 0x3fa1, 0xac36, 0x0, 0x1);
        gbc.writeMem(0xd42b, { 0x93 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd4ee, gbc.sp());
        EXPECT(0xd42c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd42b));
        // 93 02C5
        gbc.setState(0xe346, 0x82d, 0x9970, 0x8c54, 0x8c1e, 0x7890, 0x1, 0x0);
        gbc.writeMem(0xe346, { 0x93 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x82d, gbc.sp());
        EXPECT(0xe347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe346));
        // 93 02C6
        gbc.setState(0xe2db, 0x3d8e, 0xea80, 0x3b99, 0x73b5, 0x9867, 0x0, 0x0);
        gbc.writeMem(0xe2db, { 0x93 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3d8e, gbc.sp());
        EXPECT(0xe2dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe2db));
        // 93 02C7
        gbc.setState(0xbc8e, 0x1aa1, 0xc850, 0x3255, 0x12f4, 0x8bf8, 0x1, 0x1);
        gbc.writeMem(0xbc8e, { 0x93 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1aa1, gbc.sp());
        EXPECT(0xbc8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbc8e));
        // 93 02C8
        gbc.setState(0xeabb, 0x9fa3, 0x6540, 0x6e36, 0xb148, 0xf02a, 0x0, 0x1);
        gbc.writeMem(0xeabb, { 0x93 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9fa3, gbc.sp());
        EXPECT(0xeabc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xeabb));
        // 93 02C9
        gbc.setState(0x7108, 0xfe15, 0x9460, 0x5ed2, 0x9077, 0x3e32, 0x0, 0x0);
        gbc.writeMem(0x7108, { 0x93 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfe15, gbc.sp());
        EXPECT(0x7109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02CA
        gbc.setState(0x1974, 0x2ce0, 0x81d0, 0xf4a9, 0x123a, 0xff29, 0x0, 0x0);
        gbc.writeMem(0x1974, { 0x93 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2ce0, gbc.sp());
        EXPECT(0x1975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02CB
        gbc.setState(0x60c9, 0x731f, 0x4730, 0xd470, 0x1582, 0x76ed, 0x0, 0x0);
        gbc.writeMem(0x60c9, { 0x93 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x731f, gbc.sp());
        EXPECT(0x60ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02CC
        gbc.setState(0xb741, 0xa72, 0x6210, 0x1d34, 0xc5e6, 0x2e65, 0x0, 0x0);
        gbc.writeMem(0xb741, { 0x93 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa72, gbc.sp());
        EXPECT(0xb742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb741));
        // 93 02CD
        gbc.setState(0x3bc7, 0xe7f0, 0x7790, 0x2613, 0x7709, 0x6c7a, 0x0, 0x1);
        gbc.writeMem(0x3bc7, { 0x93 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe7f0, gbc.sp());
        EXPECT(0x3bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02CE
        gbc.setState(0x484a, 0x257e, 0xe210, 0xee97, 0x2380, 0x1011, 0x0, 0x1);
        gbc.writeMem(0x484a, { 0x93 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x257e, gbc.sp());
        EXPECT(0x484b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02CF
        gbc.setState(0x43, 0x2cf4, 0xeb30, 0xc8f5, 0x6488, 0xef2c, 0x1, 0x0);
        gbc.writeMem(0x43, { 0x93 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2cf4, gbc.sp());
        EXPECT(0x44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02D0
        gbc.setState(0x5af4, 0xdddf, 0xc9d0, 0x9568, 0x7660, 0x3b4b, 0x0, 0x0);
        gbc.writeMem(0x5af4, { 0x93 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdddf, gbc.sp());
        EXPECT(0x5af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02D1
        gbc.setState(0x8a0e, 0x7da4, 0x97b0, 0xad1f, 0xbd58, 0xce12, 0x0, 0x0);
        gbc.writeMem(0x8a0e, { 0x93 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7da4, gbc.sp());
        EXPECT(0x8a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8a0e));
        // 93 02D3
        gbc.setState(0x1b9c, 0x330d, 0xcfb0, 0x368, 0x2705, 0x1b76, 0x0, 0x1);
        gbc.writeMem(0x1b9c, { 0x93 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x330d, gbc.sp());
        EXPECT(0x1b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02D4
        gbc.setState(0x3c0c, 0xee55, 0x2c60, 0x3cee, 0x4513, 0x4f9c, 0x0, 0x0);
        gbc.writeMem(0x3c0c, { 0x93 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xee55, gbc.sp());
        EXPECT(0x3c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02D5
        gbc.setState(0x8bcf, 0x79cc, 0x22b0, 0x452a, 0x9d03, 0x7e52, 0x0, 0x1);
        gbc.writeMem(0x8bcf, { 0x93 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x79cc, gbc.sp());
        EXPECT(0x8bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8bcf));
        // 93 02D6
        gbc.setState(0xa4c2, 0xfeaa, 0xa9f0, 0x66e5, 0x21ac, 0x7d35, 0x0, 0x1);
        gbc.writeMem(0xa4c2, { 0x93 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfeaa, gbc.sp());
        EXPECT(0xa4c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa4c2));
        // 93 02D7
        gbc.setState(0xa704, 0xe106, 0x51f0, 0xf796, 0x3582, 0xb46b, 0x0, 0x0);
        gbc.writeMem(0xa704, { 0x93 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe106, gbc.sp());
        EXPECT(0xa705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa704));
        // 93 02D8
        gbc.setState(0x9cdb, 0xc8eb, 0xb290, 0x72c7, 0x6245, 0xadcc, 0x0, 0x1);
        gbc.writeMem(0x9cdb, { 0x93 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc8eb, gbc.sp());
        EXPECT(0x9cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9cdb));
        // 93 02D9
        gbc.setState(0x5581, 0x1d42, 0x6e30, 0x40f1, 0x190d, 0x2524, 0x1, 0x0);
        gbc.writeMem(0x5581, { 0x93 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1d42, gbc.sp());
        EXPECT(0x5582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02DA
        gbc.setState(0x75b, 0xba65, 0x620, 0xc370, 0x2ab1, 0xf006, 0x1, 0x1);
        gbc.writeMem(0x75b, { 0x93 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xba65, gbc.sp());
        EXPECT(0x75c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02DC
        gbc.setState(0xa98f, 0x9257, 0xfb80, 0x13b8, 0xdfc4, 0x4ee5, 0x0, 0x1);
        gbc.writeMem(0xa98f, { 0x93 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9257, gbc.sp());
        EXPECT(0xa990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa98f));
        // 93 02DD
        gbc.setState(0x2fc6, 0x4046, 0xba10, 0x855f, 0x4ce9, 0x7239, 0x1, 0x0);
        gbc.writeMem(0x2fc6, { 0x93 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4046, gbc.sp());
        EXPECT(0x2fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02DE
        gbc.setState(0xa5bd, 0x256e, 0xba10, 0x6e1c, 0x3705, 0x132e, 0x1, 0x0);
        gbc.writeMem(0xa5bd, { 0x93 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x256e, gbc.sp());
        EXPECT(0xa5be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa5bd));
        // 93 02DF
        gbc.setState(0xe2ee, 0x8026, 0xcdb0, 0x4bae, 0x5b42, 0x77b1, 0x0, 0x1);
        gbc.writeMem(0xe2ee, { 0x93 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8026, gbc.sp());
        EXPECT(0xe2ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe2ee));
        // 93 02E0
        gbc.setState(0x9276, 0x3f4c, 0xd8c0, 0xbf1a, 0xacae, 0xfab1, 0x0, 0x0);
        gbc.writeMem(0x9276, { 0x93 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3f4c, gbc.sp());
        EXPECT(0x9277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9276));
        // 93 02E1
        gbc.setState(0xbbea, 0x745e, 0xb9c0, 0x177, 0xf88, 0xaf2, 0x0, 0x1);
        gbc.writeMem(0xbbea, { 0x93 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x745e, gbc.sp());
        EXPECT(0xbbeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbbea));
        // 93 02E2
        gbc.setState(0xc8e1, 0xefde, 0x6420, 0x9056, 0xb820, 0x953b, 0x1, 0x0);
        gbc.writeMem(0xc8e1, { 0x93 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xefde, gbc.sp());
        EXPECT(0xc8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc8e1));
        // 93 02E3
        gbc.setState(0xa6ad, 0xcad4, 0xce80, 0x6c55, 0x9dde, 0x9d0b, 0x0, 0x0);
        gbc.writeMem(0xa6ad, { 0x93 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcad4, gbc.sp());
        EXPECT(0xa6ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa6ad));
        // 93 02E4
        gbc.setState(0x3b75, 0x461f, 0xcfa0, 0x1295, 0x5b4d, 0x8849, 0x1, 0x1);
        gbc.writeMem(0x3b75, { 0x93 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x461f, gbc.sp());
        EXPECT(0x3b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02E5
        gbc.setState(0xceb1, 0x428e, 0x3180, 0x823f, 0x7b9c, 0x824e, 0x1, 0x1);
        gbc.writeMem(0xceb1, { 0x93 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x428e, gbc.sp());
        EXPECT(0xceb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xceb1));
        // 93 02E6
        gbc.setState(0x4ed, 0x423f, 0xca70, 0x173e, 0x77c6, 0x9d01, 0x0, 0x0);
        gbc.writeMem(0x4ed, { 0x93 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x423f, gbc.sp());
        EXPECT(0x4ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02E7
        gbc.setState(0x5c61, 0xf001, 0x8bd0, 0xe4a2, 0x9ebc, 0x1296, 0x1, 0x0);
        gbc.writeMem(0x5c61, { 0x93 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf001, gbc.sp());
        EXPECT(0x5c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02E8
        gbc.setState(0xb99f, 0xd52, 0xc550, 0xbc6b, 0xb448, 0xca55, 0x1, 0x1);
        gbc.writeMem(0xb99f, { 0x93 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd52, gbc.sp());
        EXPECT(0xb9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb99f));
        // 93 02E9
        gbc.setState(0xe28f, 0xec7a, 0x1290, 0xdccc, 0x6be4, 0x6331, 0x0, 0x0);
        gbc.writeMem(0xe28f, { 0x93 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xec7a, gbc.sp());
        EXPECT(0xe290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe28f));
        // 93 02EA
        gbc.setState(0x85ed, 0xd088, 0xc540, 0x3ff2, 0x10c8, 0x5b1b, 0x1, 0x0);
        gbc.writeMem(0x85ed, { 0x93 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd088, gbc.sp());
        EXPECT(0x85ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x85ed));
        // 93 02EB
        gbc.setState(0x69d6, 0xa68f, 0xe740, 0xf868, 0x9dec, 0x2e1, 0x1, 0x0);
        gbc.writeMem(0x69d6, { 0x93 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa68f, gbc.sp());
        EXPECT(0x69d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02EC
        gbc.setState(0x8c2d, 0xe414, 0xc080, 0xa437, 0xcc8, 0x9c75, 0x0, 0x0);
        gbc.writeMem(0x8c2d, { 0x93 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe414, gbc.sp());
        EXPECT(0x8c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8c2d));
        // 93 02ED
        gbc.setState(0x3dc6, 0x87e8, 0x1580, 0xfaec, 0x619a, 0x6bcd, 0x1, 0x0);
        gbc.writeMem(0x3dc6, { 0x93 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x87e8, gbc.sp());
        EXPECT(0x3dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02EE
        gbc.setState(0x681a, 0x47e2, 0xf7f0, 0x5b9f, 0xb9d, 0x87d5, 0x0, 0x1);
        gbc.writeMem(0x681a, { 0x93 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x47e2, gbc.sp());
        EXPECT(0x681b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02EF
        gbc.setState(0x7f3a, 0x202d, 0x50f0, 0xab17, 0xb93, 0x2072, 0x1, 0x1);
        gbc.writeMem(0x7f3a, { 0x93 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x202d, gbc.sp());
        EXPECT(0x7f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02F0
        gbc.setState(0x39cf, 0x8256, 0x20f0, 0x88d6, 0xe536, 0x2a24, 0x1, 0x0);
        gbc.writeMem(0x39cf, { 0x93 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8256, gbc.sp());
        EXPECT(0x39d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02F1
        gbc.setState(0x5d72, 0x415d, 0x2600, 0x5de6, 0x2e7e, 0x90be, 0x0, 0x1);
        gbc.writeMem(0x5d72, { 0x93 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x415d, gbc.sp());
        EXPECT(0x5d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02F2
        gbc.setState(0xf57, 0xd200, 0x9c50, 0x6ad1, 0x4518, 0xc149, 0x1, 0x1);
        gbc.writeMem(0xf57, { 0x93 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd200, gbc.sp());
        EXPECT(0xf58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02F3
        gbc.setState(0xbf13, 0xa3bc, 0x31b0, 0xf318, 0xd6e4, 0x7681, 0x1, 0x1);
        gbc.writeMem(0xbf13, { 0x93 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa3bc, gbc.sp());
        EXPECT(0xbf14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbf13));
        // 93 02F4
        gbc.setState(0x4e50, 0x7fc2, 0x2c20, 0xdaf2, 0x7fb5, 0xeeb6, 0x0, 0x1);
        gbc.writeMem(0x4e50, { 0x93 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7fc2, gbc.sp());
        EXPECT(0x4e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02F5
        gbc.setState(0x64f5, 0x3852, 0xd010, 0xd6f2, 0xb168, 0x95f0, 0x0, 0x0);
        gbc.writeMem(0x64f5, { 0x93 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3852, gbc.sp());
        EXPECT(0x64f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 02F6
        gbc.setState(0xaa1e, 0x171d, 0x1210, 0xcb86, 0xb32d, 0x3d16, 0x0, 0x1);
        gbc.writeMem(0xaa1e, { 0x93 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x171d, gbc.sp());
        EXPECT(0xaa1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xaa1e));
        // 93 02F7
        gbc.setState(0xc15c, 0x445a, 0xceb0, 0x241b, 0xe6c3, 0xecb8, 0x0, 0x1);
        gbc.writeMem(0xc15c, { 0x93 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x445a, gbc.sp());
        EXPECT(0xc15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc15c));
        // 93 02F8
        gbc.setState(0xef1c, 0xad9a, 0xfb50, 0xdcd7, 0x2688, 0xdbb6, 0x1, 0x0);
        gbc.writeMem(0xef1c, { 0x93 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xad9a, gbc.sp());
        EXPECT(0xef1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xef1c));
        // 93 02F9
        gbc.setState(0xb31f, 0x91be, 0x5920, 0x21e8, 0xec6b, 0xbf40, 0x0, 0x0);
        gbc.writeMem(0xb31f, { 0x93 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x91be, gbc.sp());
        EXPECT(0xb320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb31f));
        // 93 02FA
        gbc.setState(0x6254, 0x63fc, 0xa060, 0xabe, 0xfefe, 0x2a1c, 0x0, 0x0);
        gbc.writeMem(0x6254, { 0x93 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x63fc, gbc.sp());
        EXPECT(0x6255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02FB
        gbc.setState(0x7fd, 0xffed, 0x89d0, 0x9fb5, 0x68db, 0x69dc, 0x0, 0x1);
        gbc.writeMem(0x7fd, { 0x93 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xffed, gbc.sp());
        EXPECT(0x7fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02FC
        gbc.setState(0x18ed, 0x7a91, 0x3280, 0x51c4, 0x96f7, 0xc216, 0x1, 0x1);
        gbc.writeMem(0x18ed, { 0x93 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7a91, gbc.sp());
        EXPECT(0x18ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 02FD
        gbc.setState(0xb64b, 0x6201, 0x6470, 0xfc2f, 0x9e94, 0x2b04, 0x1, 0x0);
        gbc.writeMem(0xb64b, { 0x93 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6201, gbc.sp());
        EXPECT(0xb64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb64b));
        // 93 02FE
        gbc.setState(0x888b, 0x77c4, 0xbb50, 0x5887, 0xb242, 0x5a72, 0x1, 0x0);
        gbc.writeMem(0x888b, { 0x93 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x77c4, gbc.sp());
        EXPECT(0x888c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x888b));
        // 93 02FF
        gbc.setState(0x6de3, 0xdb51, 0x22f0, 0xd0c, 0xac4f, 0xab7a, 0x0, 0x0);
        gbc.writeMem(0x6de3, { 0x93 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdb51, gbc.sp());
        EXPECT(0x6de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0300
        gbc.setState(0x7841, 0xa9df, 0x8fa0, 0xb920, 0xcf80, 0x2e49, 0x1, 0x1);
        gbc.writeMem(0x7841, { 0x93 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa9df, gbc.sp());
        EXPECT(0x7842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0301
        gbc.setState(0xa643, 0x4520, 0x6440, 0x13cd, 0x8d74, 0xa7e3, 0x1, 0x0);
        gbc.writeMem(0xa643, { 0x93 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4520, gbc.sp());
        EXPECT(0xa644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa643));
        // 93 0302
        gbc.setState(0xba1c, 0xc75, 0x69f0, 0xe11e, 0xf3fb, 0xc154, 0x0, 0x1);
        gbc.writeMem(0xba1c, { 0x93 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc75, gbc.sp());
        EXPECT(0xba1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xba1c));
        // 93 0303
        gbc.setState(0x57ea, 0x8c9f, 0xb720, 0x83b2, 0xcbec, 0x97f5, 0x1, 0x1);
        gbc.writeMem(0x57ea, { 0x93 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8c9f, gbc.sp());
        EXPECT(0x57eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0304
        gbc.setState(0x1357, 0xbbfc, 0x1f50, 0x5db4, 0xfa80, 0x2599, 0x0, 0x1);
        gbc.writeMem(0x1357, { 0x93 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbbfc, gbc.sp());
        EXPECT(0x1358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0305
        gbc.setState(0x5247, 0x8f87, 0x6860, 0x47b1, 0xba86, 0x9e0, 0x1, 0x0);
        gbc.writeMem(0x5247, { 0x93 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8f87, gbc.sp());
        EXPECT(0x5248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0306
        gbc.setState(0x8089, 0x34e9, 0x46f0, 0x196a, 0x1414, 0xa9f9, 0x0, 0x1);
        gbc.writeMem(0x8089, { 0x93 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x34e9, gbc.sp());
        EXPECT(0x808a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8089));
        // 93 0307
        gbc.setState(0xad19, 0x724f, 0x8c30, 0xd8ce, 0x32ae, 0x59b3, 0x0, 0x1);
        gbc.writeMem(0xad19, { 0x93 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x724f, gbc.sp());
        EXPECT(0xad1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xad19));
        // 93 0308
        gbc.setState(0x9119, 0x9273, 0x8310, 0x46de, 0xc2b1, 0xe7b6, 0x0, 0x0);
        gbc.writeMem(0x9119, { 0x93 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9273, gbc.sp());
        EXPECT(0x911a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9119));
        // 93 0309
        gbc.setState(0x8c05, 0x8ef6, 0x1a60, 0xfae6, 0x1697, 0x2156, 0x1, 0x1);
        gbc.writeMem(0x8c05, { 0x93 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8ef6, gbc.sp());
        EXPECT(0x8c06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8c05));
        // 93 030A
        gbc.setState(0xd14d, 0xdc97, 0xcd40, 0x6ca6, 0xfc91, 0x44e8, 0x1, 0x1);
        gbc.writeMem(0xd14d, { 0x93 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdc97, gbc.sp());
        EXPECT(0xd14e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd14d));
        // 93 030B
        gbc.setState(0x1c41, 0x349e, 0xf0c0, 0xe9d1, 0xbbe4, 0xff46, 0x1, 0x1);
        gbc.writeMem(0x1c41, { 0x93 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x349e, gbc.sp());
        EXPECT(0x1c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 030C
        gbc.setState(0x5e0a, 0xe23d, 0xa270, 0xe75d, 0x1895, 0x5bbc, 0x0, 0x1);
        gbc.writeMem(0x5e0a, { 0x93 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe23d, gbc.sp());
        EXPECT(0x5e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 030D
        gbc.setState(0xce4e, 0x1194, 0x94b0, 0x9635, 0x73db, 0x62c5, 0x1, 0x0);
        gbc.writeMem(0xce4e, { 0x93 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1194, gbc.sp());
        EXPECT(0xce4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xce4e));
        // 93 030F
        gbc.setState(0xbcad, 0x451a, 0x9e50, 0xf925, 0x656, 0xba31, 0x1, 0x0);
        gbc.writeMem(0xbcad, { 0x93 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x451a, gbc.sp());
        EXPECT(0xbcae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbcad));
        // 93 0311
        gbc.setState(0x8884, 0x2881, 0xdf00, 0x99da, 0xa2b, 0x249e, 0x1, 0x1);
        gbc.writeMem(0x8884, { 0x93 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2881, gbc.sp());
        EXPECT(0x8885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8884));
        // 93 0312
        gbc.setState(0x76b, 0xd528, 0xf760, 0x2fe1, 0x2ee2, 0xdc50, 0x0, 0x0);
        gbc.writeMem(0x76b, { 0x93 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd528, gbc.sp());
        EXPECT(0x76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0313
        gbc.setState(0xecb, 0x86, 0x3ec0, 0xa55f, 0x69e3, 0xcd14, 0x0, 0x1);
        gbc.writeMem(0xecb, { 0x93 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x86, gbc.sp());
        EXPECT(0xecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0314
        gbc.setState(0xa474, 0xc83b, 0x3be0, 0xc2bf, 0xcfef, 0x7bc5, 0x0, 0x1);
        gbc.writeMem(0xa474, { 0x93 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc83b, gbc.sp());
        EXPECT(0xa475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa474));
        // 93 0315
        gbc.setState(0xc6e4, 0xc84d, 0x3ec0, 0x5174, 0x5b5f, 0x1bbb, 0x0, 0x1);
        gbc.writeMem(0xc6e4, { 0x93 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc84d, gbc.sp());
        EXPECT(0xc6e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc6e4));
        // 93 0316
        gbc.setState(0x7bd5, 0x6b57, 0xe410, 0xab52, 0xc855, 0x1abc, 0x0, 0x0);
        gbc.writeMem(0x7bd5, { 0x93 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6b57, gbc.sp());
        EXPECT(0x7bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0317
        gbc.setState(0x8d75, 0x4e0b, 0x5dd0, 0xb8f8, 0x9598, 0xc3d8, 0x1, 0x1);
        gbc.writeMem(0x8d75, { 0x93 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4e0b, gbc.sp());
        EXPECT(0x8d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8d75));
        // 93 0318
        gbc.setState(0x381d, 0xf0a8, 0xa7d0, 0xd4d3, 0xe85d, 0x140d, 0x1, 0x0);
        gbc.writeMem(0x381d, { 0x93 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf0a8, gbc.sp());
        EXPECT(0x381e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0319
        gbc.setState(0x9cf6, 0xc3c7, 0x7d50, 0xbbf8, 0x942a, 0x3a4e, 0x1, 0x0);
        gbc.writeMem(0x9cf6, { 0x93 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc3c7, gbc.sp());
        EXPECT(0x9cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9cf6));
        // 93 031A
        gbc.setState(0x5047, 0x17e9, 0xae20, 0x4356, 0xba80, 0xde88, 0x0, 0x1);
        gbc.writeMem(0x5047, { 0x93 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x17e9, gbc.sp());
        EXPECT(0x5048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 031B
        gbc.setState(0x8301, 0xce8c, 0x6290, 0xfb82, 0xebef, 0x6b4c, 0x1, 0x1);
        gbc.writeMem(0x8301, { 0x93 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xce8c, gbc.sp());
        EXPECT(0x8302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8301));
        // 93 031C
        gbc.setState(0xd77e, 0x6163, 0x5f80, 0x2256, 0x4194, 0x2ea4, 0x1, 0x0);
        gbc.writeMem(0xd77e, { 0x93 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6163, gbc.sp());
        EXPECT(0xd77f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd77e));
        // 93 031D
        gbc.setState(0xb418, 0x5fff, 0x6520, 0x8b03, 0xc33a, 0x5422, 0x1, 0x1);
        gbc.writeMem(0xb418, { 0x93 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5fff, gbc.sp());
        EXPECT(0xb419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb418));
        // 93 031E
        gbc.setState(0xbdb3, 0x203e, 0xd5b0, 0x4e1, 0x5fc1, 0x931d, 0x0, 0x0);
        gbc.writeMem(0xbdb3, { 0x93 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x203e, gbc.sp());
        EXPECT(0xbdb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbdb3));
        // 93 031F
        gbc.setState(0xc8e9, 0xb1ba, 0x8d30, 0x87b7, 0x9504, 0xb04a, 0x1, 0x1);
        gbc.writeMem(0xc8e9, { 0x93 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb1ba, gbc.sp());
        EXPECT(0xc8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc8e9));
        // 93 0320
        gbc.setState(0xd763, 0xc23f, 0x1930, 0xec93, 0x3bd4, 0xc0b1, 0x0, 0x0);
        gbc.writeMem(0xd763, { 0x93 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc23f, gbc.sp());
        EXPECT(0xd764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd763));
        // 93 0322
        gbc.setState(0x3649, 0x17b1, 0x4410, 0xb16, 0xece8, 0xa5b0, 0x1, 0x1);
        gbc.writeMem(0x3649, { 0x93 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x17b1, gbc.sp());
        EXPECT(0x364a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0323
        gbc.setState(0x6f6, 0x5bb1, 0x4690, 0xd465, 0x53c3, 0xc184, 0x1, 0x1);
        gbc.writeMem(0x6f6, { 0x93 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5bb1, gbc.sp());
        EXPECT(0x6f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0324
        gbc.setState(0x63d6, 0xe4f9, 0xb100, 0x86b6, 0xa9a9, 0x464b, 0x0, 0x0);
        gbc.writeMem(0x63d6, { 0x93 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe4f9, gbc.sp());
        EXPECT(0x63d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0325
        gbc.setState(0x973c, 0xdf01, 0xb60, 0x9212, 0xd275, 0x4aca, 0x0, 0x0);
        gbc.writeMem(0x973c, { 0x93 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdf01, gbc.sp());
        EXPECT(0x973d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x973c));
        // 93 0326
        gbc.setState(0x5255, 0x8ef5, 0x8e90, 0x42a6, 0x90bb, 0x7e49, 0x0, 0x0);
        gbc.writeMem(0x5255, { 0x93 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8ef5, gbc.sp());
        EXPECT(0x5256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0327
        gbc.setState(0x7d03, 0x3479, 0x3d00, 0x9972, 0xd000, 0x73c3, 0x0, 0x0);
        gbc.writeMem(0x7d03, { 0x93 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3479, gbc.sp());
        EXPECT(0x7d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0328
        gbc.setState(0xd35a, 0x8d21, 0x8130, 0x9cd0, 0x965d, 0xedc6, 0x1, 0x0);
        gbc.writeMem(0xd35a, { 0x93 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8d21, gbc.sp());
        EXPECT(0xd35b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd35a));
        // 93 0329
        gbc.setState(0xdfde, 0x52ab, 0xac70, 0x5baa, 0x4e67, 0x562e, 0x0, 0x0);
        gbc.writeMem(0xdfde, { 0x93 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x52ab, gbc.sp());
        EXPECT(0xdfdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xdfde));
        // 93 032A
        gbc.setState(0x99ad, 0x6e5e, 0x5530, 0xf01f, 0xafc3, 0xb69a, 0x1, 0x0);
        gbc.writeMem(0x99ad, { 0x93 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6e5e, gbc.sp());
        EXPECT(0x99ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x99ad));
        // 93 032B
        gbc.setState(0xea5b, 0xe04f, 0xeb50, 0x8732, 0x81d5, 0x6c2e, 0x1, 0x0);
        gbc.writeMem(0xea5b, { 0x93 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe04f, gbc.sp());
        EXPECT(0xea5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xea5b));
        // 93 032C
        gbc.setState(0x6a0d, 0x67da, 0x8420, 0x1d83, 0xc9a5, 0xfe48, 0x1, 0x1);
        gbc.writeMem(0x6a0d, { 0x93 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x67da, gbc.sp());
        EXPECT(0x6a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 032D
        gbc.setState(0xafdd, 0x377, 0xcc60, 0xd392, 0x9980, 0x64ff, 0x1, 0x0);
        gbc.writeMem(0xafdd, { 0x93 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x377, gbc.sp());
        EXPECT(0xafde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xafdd));
        // 93 032E
        gbc.setState(0x2c8d, 0xe2e9, 0x250, 0xa799, 0x3744, 0xbf68, 0x1, 0x1);
        gbc.writeMem(0x2c8d, { 0x93 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe2e9, gbc.sp());
        EXPECT(0x2c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 032F
        gbc.setState(0x49b2, 0x392e, 0x1070, 0x99ba, 0xb615, 0x4794, 0x0, 0x0);
        gbc.writeMem(0x49b2, { 0x93 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x392e, gbc.sp());
        EXPECT(0x49b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0330
        gbc.setState(0xef4a, 0xd54d, 0xd910, 0x3b1f, 0x576d, 0x726, 0x1, 0x0);
        gbc.writeMem(0xef4a, { 0x93 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd54d, gbc.sp());
        EXPECT(0xef4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xef4a));
        // 93 0331
        gbc.setState(0x4e2a, 0xd6ff, 0xa680, 0x5f7, 0xa2f9, 0xa45d, 0x1, 0x0);
        gbc.writeMem(0x4e2a, { 0x93 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd6ff, gbc.sp());
        EXPECT(0x4e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0332
        gbc.setState(0x489b, 0x9295, 0xbd40, 0x99b7, 0x20d2, 0xdb3c, 0x0, 0x0);
        gbc.writeMem(0x489b, { 0x93 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9295, gbc.sp());
        EXPECT(0x489c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0333
        gbc.setState(0x52c, 0x2083, 0xc610, 0xaceb, 0xb1eb, 0x84a, 0x0, 0x1);
        gbc.writeMem(0x52c, { 0x93 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2083, gbc.sp());
        EXPECT(0x52d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0334
        gbc.setState(0x369e, 0x5b1a, 0xa10, 0xc9cd, 0xe141, 0x6229, 0x1, 0x0);
        gbc.writeMem(0x369e, { 0x93 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5b1a, gbc.sp());
        EXPECT(0x369f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0335
        gbc.setState(0x4076, 0x6b1d, 0x170, 0xee3e, 0x54ae, 0x76cd, 0x1, 0x1);
        gbc.writeMem(0x4076, { 0x93 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6b1d, gbc.sp());
        EXPECT(0x4077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0336
        gbc.setState(0x1bab, 0xa57, 0xb5b0, 0x7441, 0x198b, 0x410c, 0x0, 0x1);
        gbc.writeMem(0x1bab, { 0x93 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa57, gbc.sp());
        EXPECT(0x1bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0338
        gbc.setState(0xe803, 0xeba9, 0xffb0, 0xd80b, 0xc966, 0x9c85, 0x1, 0x1);
        gbc.writeMem(0xe803, { 0x93 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xeba9, gbc.sp());
        EXPECT(0xe804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe803));
        // 93 0339
        gbc.setState(0x5649, 0xbc14, 0xcba0, 0x593c, 0x35c5, 0x78fe, 0x1, 0x0);
        gbc.writeMem(0x5649, { 0x93 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xbc14, gbc.sp());
        EXPECT(0x564a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 033A
        gbc.setState(0xae41, 0xb129, 0x1da0, 0x7a41, 0xd385, 0xed69, 0x1, 0x1);
        gbc.writeMem(0xae41, { 0x93 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb129, gbc.sp());
        EXPECT(0xae42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xae41));
        // 93 033B
        gbc.setState(0x2cb1, 0xabf1, 0x4fc0, 0xb105, 0x6cbd, 0xcbe8, 0x0, 0x0);
        gbc.writeMem(0x2cb1, { 0x93 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xabf1, gbc.sp());
        EXPECT(0x2cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 033C
        gbc.setState(0x89af, 0x1836, 0xc350, 0x75ac, 0x79e7, 0x50b6, 0x1, 0x0);
        gbc.writeMem(0x89af, { 0x93 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1836, gbc.sp());
        EXPECT(0x89b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x89af));
        // 93 033D
        gbc.setState(0x859c, 0xa881, 0x3050, 0x2a97, 0x2f31, 0xc4e7, 0x1, 0x0);
        gbc.writeMem(0x859c, { 0x93 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa881, gbc.sp());
        EXPECT(0x859d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x859c));
        // 93 033E
        gbc.setState(0xdfe0, 0x2887, 0xc8d0, 0xe4ca, 0x5006, 0x78d3, 0x1, 0x1);
        gbc.writeMem(0xdfe0, { 0x93 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2887, gbc.sp());
        EXPECT(0xdfe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xdfe0));
        // 93 033F
        gbc.setState(0xbc64, 0xc71e, 0xc850, 0x7d82, 0x5fde, 0x58ac, 0x0, 0x0);
        gbc.writeMem(0xbc64, { 0x93 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc71e, gbc.sp());
        EXPECT(0xbc65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbc64));
        // 93 0340
        gbc.setState(0x1cc9, 0x62d9, 0xb840, 0x79d6, 0x5366, 0xd6cf, 0x0, 0x1);
        gbc.writeMem(0x1cc9, { 0x93 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x62d9, gbc.sp());
        EXPECT(0x1cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0341
        gbc.setState(0x4f0d, 0x5e67, 0x2e70, 0x5354, 0xb234, 0x1851, 0x0, 0x0);
        gbc.writeMem(0x4f0d, { 0x93 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5e67, gbc.sp());
        EXPECT(0x4f0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0342
        gbc.setState(0x9b62, 0x5bae, 0xece0, 0xf2ba, 0xe22a, 0x33fd, 0x0, 0x1);
        gbc.writeMem(0x9b62, { 0x93 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5bae, gbc.sp());
        EXPECT(0x9b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9b62));
        // 93 0344
        gbc.setState(0x2082, 0x842b, 0xd430, 0x49c5, 0x836a, 0xcd5d, 0x1, 0x0);
        gbc.writeMem(0x2082, { 0x93 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x842b, gbc.sp());
        EXPECT(0x2083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0345
        gbc.setState(0x90cd, 0xe4bb, 0xe800, 0x1ba5, 0x2057, 0x751b, 0x0, 0x1);
        gbc.writeMem(0x90cd, { 0x93 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe4bb, gbc.sp());
        EXPECT(0x90ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x90cd));
        // 93 0346
        gbc.setState(0xc2a, 0x1414, 0x4be0, 0x9780, 0xe96d, 0x4b82, 0x1, 0x0);
        gbc.writeMem(0xc2a, { 0x93 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1414, gbc.sp());
        EXPECT(0xc2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0348
        gbc.setState(0x1499, 0x678f, 0x4c70, 0x84f0, 0x6d52, 0x9329, 0x0, 0x1);
        gbc.writeMem(0x1499, { 0x93 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x678f, gbc.sp());
        EXPECT(0x149a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 034A
        gbc.setState(0xac09, 0xb72a, 0xb630, 0x32, 0xb8cc, 0x299, 0x0, 0x1);
        gbc.writeMem(0xac09, { 0x93 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb72a, gbc.sp());
        EXPECT(0xac0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xac09));
        // 93 034B
        gbc.setState(0xd261, 0xb55a, 0xb2f0, 0xe713, 0x34ec, 0x578b, 0x0, 0x0);
        gbc.writeMem(0xd261, { 0x93 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb55a, gbc.sp());
        EXPECT(0xd262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd261));
        // 93 034C
        gbc.setState(0x604a, 0x9753, 0x2b90, 0x9e45, 0x871d, 0x5b95, 0x1, 0x1);
        gbc.writeMem(0x604a, { 0x93 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9753, gbc.sp());
        EXPECT(0x604b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 034D
        gbc.setState(0x711d, 0x4d9c, 0x24d0, 0xc8bd, 0xd7e9, 0x5b13, 0x1, 0x1);
        gbc.writeMem(0x711d, { 0x93 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4d9c, gbc.sp());
        EXPECT(0x711e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 034E
        gbc.setState(0xb5e2, 0xa780, 0xc2b0, 0xe033, 0x3db1, 0x1a6f, 0x1, 0x0);
        gbc.writeMem(0xb5e2, { 0x93 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa780, gbc.sp());
        EXPECT(0xb5e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb5e2));
        // 93 034F
        gbc.setState(0x20cd, 0x1bc2, 0x400, 0x5cc2, 0x65d9, 0x18ff, 0x0, 0x1);
        gbc.writeMem(0x20cd, { 0x93 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1bc2, gbc.sp());
        EXPECT(0x20ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0350
        gbc.setState(0x7a86, 0x4df, 0xe590, 0x61fc, 0xf120, 0x9043, 0x1, 0x1);
        gbc.writeMem(0x7a86, { 0x93 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4df, gbc.sp());
        EXPECT(0x7a87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0351
        gbc.setState(0x42e9, 0x1142, 0x4d80, 0xe6f1, 0xd984, 0x5151, 0x0, 0x0);
        gbc.writeMem(0x42e9, { 0x93 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1142, gbc.sp());
        EXPECT(0x42ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0353
        gbc.setState(0x64c5, 0x2fd4, 0xf170, 0x353e, 0x6f57, 0xcf0e, 0x0, 0x0);
        gbc.writeMem(0x64c5, { 0x93 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2fd4, gbc.sp());
        EXPECT(0x64c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0354
        gbc.setState(0xa7e7, 0x26be, 0xbe50, 0x478c, 0xbd81, 0x5a2b, 0x1, 0x1);
        gbc.writeMem(0xa7e7, { 0x93 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x26be, gbc.sp());
        EXPECT(0xa7e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa7e7));
        // 93 0355
        gbc.setState(0x94dc, 0x9f63, 0x54c0, 0xa0f, 0xede5, 0xed6b, 0x1, 0x1);
        gbc.writeMem(0x94dc, { 0x93 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9f63, gbc.sp());
        EXPECT(0x94dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x94dc));
        // 93 0356
        gbc.setState(0x9cf5, 0xa23b, 0xafe0, 0x83f8, 0x284c, 0x99ac, 0x1, 0x0);
        gbc.writeMem(0x9cf5, { 0x93 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa23b, gbc.sp());
        EXPECT(0x9cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9cf5));
        // 93 0357
        gbc.setState(0x98e7, 0x3b52, 0xeb70, 0x979d, 0xbb14, 0xaf70, 0x0, 0x0);
        gbc.writeMem(0x98e7, { 0x93 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3b52, gbc.sp());
        EXPECT(0x98e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x98e7));
        // 93 0358
        gbc.setState(0xc3b8, 0x51cf, 0x1210, 0x72c3, 0x72f5, 0x70b2, 0x1, 0x1);
        gbc.writeMem(0xc3b8, { 0x93 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x51cf, gbc.sp());
        EXPECT(0xc3b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc3b8));
        // 93 0359
        gbc.setState(0x350f, 0xddf7, 0x6550, 0xf9f, 0xc43e, 0xdfb7, 0x1, 0x0);
        gbc.writeMem(0x350f, { 0x93 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xddf7, gbc.sp());
        EXPECT(0x3510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 035A
        gbc.setState(0x4a, 0x908b, 0x5ed0, 0xd3cf, 0xcc66, 0x3c18, 0x1, 0x0);
        gbc.writeMem(0x4a, { 0x93 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x908b, gbc.sp());
        EXPECT(0x4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 035B
        gbc.setState(0x815a, 0x6277, 0x7b00, 0x6cbf, 0xf916, 0xcdc9, 0x0, 0x0);
        gbc.writeMem(0x815a, { 0x93 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6277, gbc.sp());
        EXPECT(0x815b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x815a));
        // 93 035C
        gbc.setState(0x8f53, 0xfc0, 0x99d0, 0x4c1a, 0xd3c4, 0xdb67, 0x1, 0x0);
        gbc.writeMem(0x8f53, { 0x93 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfc0, gbc.sp());
        EXPECT(0x8f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8f53));
        // 93 035D
        gbc.setState(0xc8a3, 0x40e5, 0x36b0, 0xc7a3, 0x339b, 0xac8a, 0x0, 0x0);
        gbc.writeMem(0xc8a3, { 0x93 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x40e5, gbc.sp());
        EXPECT(0xc8a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc8a3));
        // 93 035F
        gbc.setState(0xada0, 0x4aa3, 0xcf60, 0x6dc9, 0xcb84, 0xdcec, 0x1, 0x0);
        gbc.writeMem(0xada0, { 0x93 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4aa3, gbc.sp());
        EXPECT(0xada1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xada0));
        // 93 0360
        gbc.setState(0xcffb, 0xef26, 0xeab0, 0x9875, 0x13ea, 0x1b08, 0x1, 0x1);
        gbc.writeMem(0xcffb, { 0x93 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xef26, gbc.sp());
        EXPECT(0xcffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcffb));
        // 93 0361
        gbc.setState(0x952, 0x2d17, 0xb8f0, 0x83ed, 0xd267, 0x7d2f, 0x0, 0x0);
        gbc.writeMem(0x952, { 0x93 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2d17, gbc.sp());
        EXPECT(0x953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0362
        gbc.setState(0xe737, 0xe9b3, 0x390, 0x54e6, 0x96f4, 0xe62, 0x0, 0x0);
        gbc.writeMem(0xe737, { 0x93 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe9b3, gbc.sp());
        EXPECT(0xe738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe737));
        // 93 0363
        gbc.setState(0xcde5, 0x8279, 0xb4e0, 0xd23, 0x4153, 0x96d4, 0x1, 0x1);
        gbc.writeMem(0xcde5, { 0x93 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8279, gbc.sp());
        EXPECT(0xcde6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcde5));
        // 93 0364
        gbc.setState(0x42df, 0x64db, 0x1f80, 0x24fd, 0x14aa, 0x6543, 0x1, 0x1);
        gbc.writeMem(0x42df, { 0x93 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x64db, gbc.sp());
        EXPECT(0x42e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0365
        gbc.setState(0xb7e0, 0xec0, 0xcac0, 0x1e4d, 0xf5e1, 0xf98d, 0x0, 0x1);
        gbc.writeMem(0xb7e0, { 0x93 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xec0, gbc.sp());
        EXPECT(0xb7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb7e0));
        // 93 0366
        gbc.setState(0x96ff, 0x7eee, 0x8710, 0x7961, 0x4331, 0x3f2d, 0x0, 0x1);
        gbc.writeMem(0x96ff, { 0x93 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7eee, gbc.sp());
        EXPECT(0x9700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x96ff));
        // 93 0367
        gbc.setState(0xc9cb, 0xfe92, 0xbcd0, 0x9d67, 0xcc18, 0xd435, 0x1, 0x1);
        gbc.writeMem(0xc9cb, { 0x93 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfe92, gbc.sp());
        EXPECT(0xc9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc9cb));
        // 93 0369
        gbc.setState(0xc746, 0xbfcf, 0x3a10, 0x6bc0, 0x488e, 0x784f, 0x0, 0x0);
        gbc.writeMem(0xc746, { 0x93 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbfcf, gbc.sp());
        EXPECT(0xc747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc746));
        // 93 036A
        gbc.setState(0xa467, 0x8cb4, 0xc410, 0x39, 0xe42c, 0xd067, 0x1, 0x0);
        gbc.writeMem(0xa467, { 0x93 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8cb4, gbc.sp());
        EXPECT(0xa468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa467));
        // 93 036B
        gbc.setState(0x715b, 0x9efe, 0x91d0, 0x610a, 0x1658, 0x4585, 0x1, 0x1);
        gbc.writeMem(0x715b, { 0x93 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9efe, gbc.sp());
        EXPECT(0x715c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 036C
        gbc.setState(0xa28f, 0x7ff, 0xb700, 0x7757, 0x1389, 0x3c78, 0x0, 0x1);
        gbc.writeMem(0xa28f, { 0x93 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7ff, gbc.sp());
        EXPECT(0xa290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa28f));
        // 93 036D
        gbc.setState(0xae0, 0x2cf7, 0xbba0, 0xed3c, 0xe394, 0xeb7a, 0x1, 0x0);
        gbc.writeMem(0xae0, { 0x93 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2cf7, gbc.sp());
        EXPECT(0xae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 036E
        gbc.setState(0xeb14, 0x32c7, 0x3000, 0x870a, 0x7c21, 0x6cfa, 0x0, 0x0);
        gbc.writeMem(0xeb14, { 0x93 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x32c7, gbc.sp());
        EXPECT(0xeb15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xeb14));
        // 93 036F
        gbc.setState(0x84c7, 0x9134, 0xe850, 0x3aa9, 0x1c5e, 0x6ba1, 0x0, 0x0);
        gbc.writeMem(0x84c7, { 0x93 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9134, gbc.sp());
        EXPECT(0x84c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x84c7));
        // 93 0370
        gbc.setState(0x80d6, 0x3522, 0x3e70, 0xde5b, 0x7a9, 0xeefc, 0x0, 0x0);
        gbc.writeMem(0x80d6, { 0x93 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3522, gbc.sp());
        EXPECT(0x80d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x80d6));
        // 93 0371
        gbc.setState(0x5daa, 0xfe05, 0x2c90, 0x5ae, 0x6859, 0x3d68, 0x1, 0x0);
        gbc.writeMem(0x5daa, { 0x93 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfe05, gbc.sp());
        EXPECT(0x5dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0372
        gbc.setState(0xa9aa, 0xc7ce, 0x3200, 0x90fd, 0xbe22, 0x93af, 0x0, 0x0);
        gbc.writeMem(0xa9aa, { 0x93 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc7ce, gbc.sp());
        EXPECT(0xa9ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa9aa));
        // 93 0373
        gbc.setState(0x7991, 0xa290, 0x6b30, 0x3eac, 0x9e03, 0x7c79, 0x1, 0x0);
        gbc.writeMem(0x7991, { 0x93 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa290, gbc.sp());
        EXPECT(0x7992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0376
        gbc.setState(0x4ad6, 0xe7e, 0xba80, 0xc0a0, 0x3477, 0xf071, 0x1, 0x0);
        gbc.writeMem(0x4ad6, { 0x93 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe7e, gbc.sp());
        EXPECT(0x4ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0377
        gbc.setState(0x4db0, 0x2706, 0x16d0, 0x679, 0x594f, 0x37ae, 0x1, 0x1);
        gbc.writeMem(0x4db0, { 0x93 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2706, gbc.sp());
        EXPECT(0x4db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0378
        gbc.setState(0x5cec, 0xe11c, 0x5cc0, 0x8124, 0x8428, 0xb2ad, 0x1, 0x0);
        gbc.writeMem(0x5cec, { 0x93 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe11c, gbc.sp());
        EXPECT(0x5ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0379
        gbc.setState(0x6711, 0x968c, 0x2d20, 0xdbf7, 0xca85, 0xafe8, 0x0, 0x0);
        gbc.writeMem(0x6711, { 0x93 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x968c, gbc.sp());
        EXPECT(0x6712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 037A
        gbc.setState(0x465f, 0x39e5, 0xb040, 0x9bc6, 0xf1f6, 0xbcba, 0x1, 0x1);
        gbc.writeMem(0x465f, { 0x93 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x39e5, gbc.sp());
        EXPECT(0x4660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 037B
        gbc.setState(0x5b8b, 0x7388, 0xf130, 0x7f5c, 0x37db, 0x563a, 0x0, 0x0);
        gbc.writeMem(0x5b8b, { 0x93 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7388, gbc.sp());
        EXPECT(0x5b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 037C
        gbc.setState(0xe06c, 0xd1f4, 0xd8e0, 0xdad2, 0xe053, 0x5fcd, 0x0, 0x1);
        gbc.writeMem(0xe06c, { 0x93 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd1f4, gbc.sp());
        EXPECT(0xe06d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe06c));
        // 93 037D
        gbc.setState(0x7491, 0x13ab, 0x6100, 0x1e7d, 0x7502, 0x9650, 0x0, 0x1);
        gbc.writeMem(0x7491, { 0x93 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x13ab, gbc.sp());
        EXPECT(0x7492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 037E
        gbc.setState(0x9855, 0x440c, 0x8a0, 0x7bde, 0x9ef, 0xa9dd, 0x1, 0x1);
        gbc.writeMem(0x9855, { 0x93 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x440c, gbc.sp());
        EXPECT(0x9856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9855));
        // 93 037F
        gbc.setState(0xe618, 0x8461, 0xa9b0, 0xdcc1, 0xd22b, 0x7a5, 0x0, 0x0);
        gbc.writeMem(0xe618, { 0x93 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8461, gbc.sp());
        EXPECT(0xe619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe618));
        // 93 0380
        gbc.setState(0x57d4, 0xb231, 0xdef0, 0xee54, 0x7706, 0x89e, 0x1, 0x0);
        gbc.writeMem(0x57d4, { 0x93 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb231, gbc.sp());
        EXPECT(0x57d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0381
        gbc.setState(0xcaf8, 0xeeba, 0xa20, 0x895c, 0x399c, 0xe263, 0x0, 0x0);
        gbc.writeMem(0xcaf8, { 0x93 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xeeba, gbc.sp());
        EXPECT(0xcaf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcaf8));
        // 93 0382
        gbc.setState(0x4f44, 0xf2bf, 0xf2e0, 0x96b2, 0x4e90, 0x5f3a, 0x1, 0x1);
        gbc.writeMem(0x4f44, { 0x93 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf2bf, gbc.sp());
        EXPECT(0x4f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0383
        gbc.setState(0xee63, 0xc89e, 0x4a70, 0x9b3a, 0xe2af, 0x537c, 0x1, 0x1);
        gbc.writeMem(0xee63, { 0x93 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc89e, gbc.sp());
        EXPECT(0xee64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xee63));
        // 93 0385
        gbc.setState(0xb750, 0xfde4, 0x3350, 0x95ef, 0xe4d, 0xbf21, 0x1, 0x0);
        gbc.writeMem(0xb750, { 0x93 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfde4, gbc.sp());
        EXPECT(0xb751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb750));
        // 93 0386
        gbc.setState(0xd3be, 0x6e7f, 0xd0b0, 0x998c, 0x98b2, 0x6f3c, 0x0, 0x0);
        gbc.writeMem(0xd3be, { 0x93 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6e7f, gbc.sp());
        EXPECT(0xd3bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd3be));
        // 93 0387
        gbc.setState(0x30c0, 0x4eb5, 0x7a00, 0x33cf, 0x1239, 0x85fe, 0x1, 0x1);
        gbc.writeMem(0x30c0, { 0x93 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4eb5, gbc.sp());
        EXPECT(0x30c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0389
        gbc.setState(0x4f21, 0xf092, 0x560, 0x18fe, 0xb4e7, 0xe142, 0x1, 0x1);
        gbc.writeMem(0x4f21, { 0x93 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf092, gbc.sp());
        EXPECT(0x4f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 038A
        gbc.setState(0x7d3f, 0xca1, 0xb810, 0xe3f2, 0xb61f, 0xdf6f, 0x0, 0x0);
        gbc.writeMem(0x7d3f, { 0x93 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xca1, gbc.sp());
        EXPECT(0x7d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 038B
        gbc.setState(0x297f, 0x3bb9, 0x9230, 0x4d78, 0xeaa6, 0x188e, 0x1, 0x1);
        gbc.writeMem(0x297f, { 0x93 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3bb9, gbc.sp());
        EXPECT(0x2980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 038C
        gbc.setState(0xbaf9, 0x8f6e, 0xc010, 0x5519, 0x1dd1, 0x45eb, 0x0, 0x1);
        gbc.writeMem(0xbaf9, { 0x93 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8f6e, gbc.sp());
        EXPECT(0xbafa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbaf9));
        // 93 038D
        gbc.setState(0x9808, 0x1eb, 0xf80, 0xf782, 0x9b13, 0xa130, 0x0, 0x0);
        gbc.writeMem(0x9808, { 0x93 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1eb, gbc.sp());
        EXPECT(0x9809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9808));
        // 93 038E
        gbc.setState(0x5d67, 0x78b9, 0x7320, 0x64f2, 0xa2dc, 0x53c1, 0x1, 0x0);
        gbc.writeMem(0x5d67, { 0x93 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x78b9, gbc.sp());
        EXPECT(0x5d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 038F
        gbc.setState(0x7cfe, 0x9d51, 0xcc50, 0xaeca, 0x66f5, 0x4fa3, 0x0, 0x1);
        gbc.writeMem(0x7cfe, { 0x93 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9d51, gbc.sp());
        EXPECT(0x7cff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0390
        gbc.setState(0xe8b9, 0x9d21, 0x6c80, 0x848, 0xac70, 0xecd4, 0x1, 0x0);
        gbc.writeMem(0xe8b9, { 0x93 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9d21, gbc.sp());
        EXPECT(0xe8ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe8b9));
        // 93 0391
        gbc.setState(0xd7bb, 0x72ff, 0x1f50, 0x3308, 0x7b6e, 0x5119, 0x0, 0x1);
        gbc.writeMem(0xd7bb, { 0x93 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x72ff, gbc.sp());
        EXPECT(0xd7bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd7bb));
        // 93 0392
        gbc.setState(0x3e3a, 0xd645, 0x45e0, 0x89e5, 0xfe3d, 0x463b, 0x0, 0x1);
        gbc.writeMem(0x3e3a, { 0x93 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd645, gbc.sp());
        EXPECT(0x3e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0393
        gbc.setState(0xb073, 0xf20, 0x70c0, 0x8c0d, 0xe4c3, 0x3c3a, 0x1, 0x1);
        gbc.writeMem(0xb073, { 0x93 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf20, gbc.sp());
        EXPECT(0xb074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb073));
        // 93 0394
        gbc.setState(0xac8c, 0xba94, 0x2250, 0x3c9f, 0x854f, 0x6c8e, 0x1, 0x0);
        gbc.writeMem(0xac8c, { 0x93 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xba94, gbc.sp());
        EXPECT(0xac8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xac8c));
        // 93 0395
        gbc.setState(0xe15b, 0xa171, 0xb750, 0x3b53, 0x1de7, 0xd408, 0x0, 0x1);
        gbc.writeMem(0xe15b, { 0x93 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa171, gbc.sp());
        EXPECT(0xe15c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe15b));
        // 93 0396
        gbc.setState(0x11b2, 0xaeaa, 0x78e0, 0x59d0, 0x215c, 0xbf91, 0x1, 0x0);
        gbc.writeMem(0x11b2, { 0x93 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xaeaa, gbc.sp());
        EXPECT(0x11b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 0397
        gbc.setState(0x171d, 0xd169, 0xa140, 0xd9e6, 0x3fb1, 0x8d36, 0x0, 0x1);
        gbc.writeMem(0x171d, { 0x93 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd169, gbc.sp());
        EXPECT(0x171e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0398
        gbc.setState(0x3951, 0xc7ef, 0x2620, 0x3c45, 0x50bb, 0x156, 0x1, 0x1);
        gbc.writeMem(0x3951, { 0x93 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc7ef, gbc.sp());
        EXPECT(0x3952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 0399
        gbc.setState(0x4fb8, 0x8ce, 0x20f0, 0x96c, 0x466a, 0xa633, 0x1, 0x1);
        gbc.writeMem(0x4fb8, { 0x93 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8ce, gbc.sp());
        EXPECT(0x4fb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 039A
        gbc.setState(0x384a, 0xbe95, 0xbae0, 0xcb15, 0x6ed9, 0x2031, 0x1, 0x1);
        gbc.writeMem(0x384a, { 0x93 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbe95, gbc.sp());
        EXPECT(0x384b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 039B
        gbc.setState(0xb835, 0xcb3, 0x8930, 0xcbb6, 0x4848, 0xf7a5, 0x1, 0x1);
        gbc.writeMem(0xb835, { 0x93 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcb3, gbc.sp());
        EXPECT(0xb836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb835));
        // 93 039C
        gbc.setState(0xbef1, 0x48f1, 0xf120, 0xeed5, 0x19ec, 0x9848, 0x0, 0x1);
        gbc.writeMem(0xbef1, { 0x93 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x48f1, gbc.sp());
        EXPECT(0xbef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbef1));
        // 93 039D
        gbc.setState(0x2a67, 0xe0d2, 0x9850, 0x21cc, 0x7e6, 0x7110, 0x0, 0x1);
        gbc.writeMem(0x2a67, { 0x93 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe0d2, gbc.sp());
        EXPECT(0x2a68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 039E
        gbc.setState(0x8d26, 0x6de6, 0x9c00, 0xca93, 0xda61, 0xa636, 0x0, 0x0);
        gbc.writeMem(0x8d26, { 0x93 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6de6, gbc.sp());
        EXPECT(0x8d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8d26));
        // 93 039F
        gbc.setState(0x7ddd, 0x426f, 0xc760, 0xbeab, 0x5347, 0xf568, 0x0, 0x1);
        gbc.writeMem(0x7ddd, { 0x93 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x426f, gbc.sp());
        EXPECT(0x7dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 03A0
        gbc.setState(0x1bc0, 0xb61d, 0xa100, 0x4f0, 0xdf64, 0xfdc, 0x0, 0x0);
        gbc.writeMem(0x1bc0, { 0x93 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb61d, gbc.sp());
        EXPECT(0x1bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 03A1
        gbc.setState(0x501c, 0x295a, 0x3870, 0x6b31, 0xca, 0xc3fa, 0x1, 0x0);
        gbc.writeMem(0x501c, { 0x93 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x295a, gbc.sp());
        EXPECT(0x501d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03A2
        gbc.setState(0x16fb, 0xdf09, 0x170, 0x7e68, 0x7265, 0x5aa9, 0x1, 0x1);
        gbc.writeMem(0x16fb, { 0x93 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdf09, gbc.sp());
        EXPECT(0x16fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03A3
        gbc.setState(0xc3d, 0x8e47, 0x7830, 0x1b40, 0x62c0, 0x6da9, 0x1, 0x1);
        gbc.writeMem(0xc3d, { 0x93 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8e47, gbc.sp());
        EXPECT(0xc3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03A4
        gbc.setState(0xba85, 0x6c0a, 0xaac0, 0x5f00, 0x80a1, 0xfa6f, 0x1, 0x0);
        gbc.writeMem(0xba85, { 0x93 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6c0a, gbc.sp());
        EXPECT(0xba86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xba85));
        // 93 03A5
        gbc.setState(0x6b3d, 0xc2bb, 0xcc70, 0x77f5, 0xbed0, 0x4641, 0x0, 0x0);
        gbc.writeMem(0x6b3d, { 0x93 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc2bb, gbc.sp());
        EXPECT(0x6b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03A6
        gbc.setState(0x96bb, 0x9d3, 0xe170, 0x7590, 0x1ac3, 0x7e3f, 0x1, 0x1);
        gbc.writeMem(0x96bb, { 0x93 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9d3, gbc.sp());
        EXPECT(0x96bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x96bb));
        // 93 03A7
        gbc.setState(0xb140, 0xabc5, 0x9320, 0xeebf, 0xa419, 0x6442, 0x1, 0x0);
        gbc.writeMem(0xb140, { 0x93 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xabc5, gbc.sp());
        EXPECT(0xb141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb140));
        // 93 03A8
        gbc.setState(0xae97, 0x7a60, 0x18f0, 0x95e5, 0x8cbf, 0xa89d, 0x1, 0x1);
        gbc.writeMem(0xae97, { 0x93 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7a60, gbc.sp());
        EXPECT(0xae98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xae97));
        // 93 03A9
        gbc.setState(0xd827, 0xd23a, 0x4ca0, 0xadf4, 0xf3f1, 0x4394, 0x0, 0x1);
        gbc.writeMem(0xd827, { 0x93 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd23a, gbc.sp());
        EXPECT(0xd828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd827));
        // 93 03AA
        gbc.setState(0x52e3, 0x11b6, 0x7b00, 0xb8ad, 0x59f6, 0xf5a5, 0x0, 0x0);
        gbc.writeMem(0x52e3, { 0x93 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x11b6, gbc.sp());
        EXPECT(0x52e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03AC
        gbc.setState(0xd402, 0x8fd7, 0x68d0, 0xf1aa, 0xea85, 0xa12, 0x0, 0x0);
        gbc.writeMem(0xd402, { 0x93 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8fd7, gbc.sp());
        EXPECT(0xd403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd402));
        // 93 03AD
        gbc.setState(0x9b39, 0x6251, 0xc950, 0xa9c4, 0xc2d3, 0xbee3, 0x0, 0x0);
        gbc.writeMem(0x9b39, { 0x93 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6251, gbc.sp());
        EXPECT(0x9b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9b39));
        // 93 03AE
        gbc.setState(0x687b, 0xda76, 0xc7f0, 0x954d, 0x9f12, 0xdd17, 0x0, 0x0);
        gbc.writeMem(0x687b, { 0x93 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xda76, gbc.sp());
        EXPECT(0x687c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 03AF
        gbc.setState(0x5df2, 0xcca7, 0x88b0, 0x6b4b, 0xa1aa, 0x7960, 0x0, 0x0);
        gbc.writeMem(0x5df2, { 0x93 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcca7, gbc.sp());
        EXPECT(0x5df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03B0
        gbc.setState(0xd550, 0x1fa7, 0x96b0, 0x1564, 0x933c, 0xb3df, 0x0, 0x1);
        gbc.writeMem(0xd550, { 0x93 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1fa7, gbc.sp());
        EXPECT(0xd551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd550));
        // 93 03B1
        gbc.setState(0xd254, 0x1c0e, 0x8490, 0x93b7, 0x91dc, 0xd637, 0x0, 0x1);
        gbc.writeMem(0xd254, { 0x93 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1c0e, gbc.sp());
        EXPECT(0xd255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd254));
        // 93 03B2
        gbc.setState(0xb3a5, 0x4a15, 0xf530, 0xafc1, 0x53fe, 0xd5d3, 0x1, 0x0);
        gbc.writeMem(0xb3a5, { 0x93 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4a15, gbc.sp());
        EXPECT(0xb3a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb3a5));
        // 93 03B3
        gbc.setState(0xce9f, 0x61c7, 0xec40, 0x3fb2, 0x675b, 0x813b, 0x1, 0x0);
        gbc.writeMem(0xce9f, { 0x93 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x61c7, gbc.sp());
        EXPECT(0xcea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xce9f));
        // 93 03B4
        gbc.setState(0x6f6f, 0x457f, 0xade0, 0x2d2, 0x364d, 0x70d1, 0x0, 0x0);
        gbc.writeMem(0x6f6f, { 0x93 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x457f, gbc.sp());
        EXPECT(0x6f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 03B5
        gbc.setState(0xa270, 0xe2ec, 0x2520, 0x5db9, 0xd6f1, 0x589d, 0x1, 0x0);
        gbc.writeMem(0xa270, { 0x93 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe2ec, gbc.sp());
        EXPECT(0xa271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa270));
        // 93 03B6
        gbc.setState(0xdaac, 0x3332, 0xfaa0, 0xc531, 0x3bbc, 0xe209, 0x1, 0x0);
        gbc.writeMem(0xdaac, { 0x93 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3332, gbc.sp());
        EXPECT(0xdaad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xdaac));
        // 93 03B7
        gbc.setState(0xbd43, 0x2798, 0x9520, 0x79a7, 0x689e, 0x4391, 0x1, 0x0);
        gbc.writeMem(0xbd43, { 0x93 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2798, gbc.sp());
        EXPECT(0xbd44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbd43));
        // 93 03B8
        gbc.setState(0xa8e8, 0x2cf6, 0xe10, 0xc1f8, 0x95c1, 0x5397, 0x1, 0x0);
        gbc.writeMem(0xa8e8, { 0x93 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2cf6, gbc.sp());
        EXPECT(0xa8e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa8e8));
        // 93 03B9
        gbc.setState(0xd832, 0x6b9f, 0xa1e0, 0x86fa, 0x18ab, 0xbcb4, 0x1, 0x1);
        gbc.writeMem(0xd832, { 0x93 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6b9f, gbc.sp());
        EXPECT(0xd833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd832));
        // 93 03BA
        gbc.setState(0xa4d0, 0xce70, 0xa900, 0x4900, 0x96ea, 0x1cad, 0x0, 0x1);
        gbc.writeMem(0xa4d0, { 0x93 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xce70, gbc.sp());
        EXPECT(0xa4d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa4d0));
        // 93 03BB
        gbc.setState(0x6b68, 0x194c, 0xcdb0, 0xa749, 0x3140, 0x50af, 0x0, 0x0);
        gbc.writeMem(0x6b68, { 0x93 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x194c, gbc.sp());
        EXPECT(0x6b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 03BC
        gbc.setState(0x31d7, 0x9a34, 0x7150, 0x3cf, 0x325c, 0xf8e2, 0x0, 0x1);
        gbc.writeMem(0x31d7, { 0x93 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9a34, gbc.sp());
        EXPECT(0x31d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 03BD
        gbc.setState(0x4b4, 0xd779, 0xd790, 0x845d, 0xf2e, 0x747a, 0x0, 0x1);
        gbc.writeMem(0x4b4, { 0x93 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd779, gbc.sp());
        EXPECT(0x4b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 03BE
        gbc.setState(0x4d0, 0x82ce, 0x5890, 0x73c8, 0x9c81, 0xdce, 0x1, 0x0);
        gbc.writeMem(0x4d0, { 0x93 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x82ce, gbc.sp());
        EXPECT(0x4d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03BF
        gbc.setState(0xe892, 0xbc9f, 0x2cb0, 0x5102, 0x6601, 0xa31e, 0x1, 0x1);
        gbc.writeMem(0xe892, { 0x93 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbc9f, gbc.sp());
        EXPECT(0xe893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe892));
        // 93 03C0
        gbc.setState(0x1ee2, 0xd9e2, 0x3f50, 0x9a59, 0x1c8a, 0x5240, 0x1, 0x1);
        gbc.writeMem(0x1ee2, { 0x93 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd9e2, gbc.sp());
        EXPECT(0x1ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03C1
        gbc.setState(0x8b02, 0x6424, 0xea90, 0x2a50, 0x58f5, 0x84eb, 0x0, 0x1);
        gbc.writeMem(0x8b02, { 0x93 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6424, gbc.sp());
        EXPECT(0x8b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8b02));
        // 93 03C2
        gbc.setState(0xb06c, 0x2fbc, 0x6040, 0x1d08, 0x9a7d, 0x3234, 0x0, 0x0);
        gbc.writeMem(0xb06c, { 0x93 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2fbc, gbc.sp());
        EXPECT(0xb06d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb06c));
        // 93 03C3
        gbc.setState(0x1258, 0xd3a6, 0x9ea0, 0x38e7, 0x305a, 0xe3e7, 0x1, 0x0);
        gbc.writeMem(0x1258, { 0x93 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd3a6, gbc.sp());
        EXPECT(0x1259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 03C4
        gbc.setState(0x8197, 0x7cdd, 0x2370, 0x842, 0xe9e, 0x95f6, 0x1, 0x0);
        gbc.writeMem(0x8197, { 0x93 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7cdd, gbc.sp());
        EXPECT(0x8198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8197));
        // 93 03C5
        gbc.setState(0xa6e3, 0x2d79, 0xac90, 0xb880, 0x5d9b, 0xc76e, 0x0, 0x1);
        gbc.writeMem(0xa6e3, { 0x93 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2d79, gbc.sp());
        EXPECT(0xa6e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa6e3));
        // 93 03C6
        gbc.setState(0x7c1d, 0x72d4, 0x9b40, 0x7c13, 0xd9b9, 0xa3d1, 0x1, 0x1);
        gbc.writeMem(0x7c1d, { 0x93 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x72d4, gbc.sp());
        EXPECT(0x7c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03C7
        gbc.setState(0x4f4d, 0x6861, 0x9da0, 0xde72, 0xd1ec, 0xedbc, 0x0, 0x1);
        gbc.writeMem(0x4f4d, { 0x93 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6861, gbc.sp());
        EXPECT(0x4f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03C8
        gbc.setState(0x2f1d, 0xf431, 0x8280, 0x284e, 0x6ad5, 0xaa4a, 0x1, 0x1);
        gbc.writeMem(0x2f1d, { 0x93 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf431, gbc.sp());
        EXPECT(0x2f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03C9
        gbc.setState(0xe643, 0x2df9, 0x4c90, 0x882c, 0x9202, 0x86b8, 0x0, 0x1);
        gbc.writeMem(0xe643, { 0x93 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2df9, gbc.sp());
        EXPECT(0xe644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe643));
        // 93 03CA
        gbc.setState(0xcfc1, 0xd4bf, 0x1910, 0xedfd, 0xb214, 0x6b7c, 0x0, 0x0);
        gbc.writeMem(0xcfc1, { 0x93 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd4bf, gbc.sp());
        EXPECT(0xcfc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcfc1));
        // 93 03CB
        gbc.setState(0xaf4e, 0xa2e0, 0x60e0, 0x63e3, 0xddd7, 0x39f2, 0x0, 0x1);
        gbc.writeMem(0xaf4e, { 0x93 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa2e0, gbc.sp());
        EXPECT(0xaf4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xaf4e));
        // 93 03CC
        gbc.setState(0x7840, 0x6757, 0xa6d0, 0x5e47, 0xa189, 0x4c80, 0x0, 0x1);
        gbc.writeMem(0x7840, { 0x93 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6757, gbc.sp());
        EXPECT(0x7841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 03CD
        gbc.setState(0x3039, 0xac4d, 0x71b0, 0x4da3, 0x1df, 0x9f1e, 0x1, 0x0);
        gbc.writeMem(0x3039, { 0x93 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xac4d, gbc.sp());
        EXPECT(0x303a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03CE
        gbc.setState(0x1cf6, 0x6835, 0x6380, 0xbc8c, 0x833b, 0x6c18, 0x1, 0x0);
        gbc.writeMem(0x1cf6, { 0x93 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6835, gbc.sp());
        EXPECT(0x1cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 03CF
        gbc.setState(0xef70, 0xd692, 0xcbe0, 0x82cf, 0xbd94, 0xceca, 0x1, 0x0);
        gbc.writeMem(0xef70, { 0x93 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd692, gbc.sp());
        EXPECT(0xef71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xef70));
        // 93 03D0
        gbc.setState(0x50a9, 0x840f, 0xf7d0, 0x206, 0xd4e2, 0x73, 0x1, 0x0);
        gbc.writeMem(0x50a9, { 0x93 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x840f, gbc.sp());
        EXPECT(0x50aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 03D1
        gbc.setState(0x8c0d, 0x90f3, 0xee70, 0x9643, 0x4e22, 0x80f9, 0x0, 0x0);
        gbc.writeMem(0x8c0d, { 0x93 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x90f3, gbc.sp());
        EXPECT(0x8c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8c0d));
        // 93 03D2
        gbc.setState(0xa665, 0x9c69, 0x9120, 0x3f62, 0x8e37, 0x9bc6, 0x1, 0x1);
        gbc.writeMem(0xa665, { 0x93 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9c69, gbc.sp());
        EXPECT(0xa666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa665));
        // 93 03D3
        gbc.setState(0xacf0, 0xdf8d, 0xa350, 0x20ec, 0x7455, 0x8db4, 0x1, 0x0);
        gbc.writeMem(0xacf0, { 0x93 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdf8d, gbc.sp());
        EXPECT(0xacf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xacf0));
        // 93 03D4
        gbc.setState(0xec7b, 0x52a, 0x4530, 0x53d1, 0x9a06, 0x1c9c, 0x0, 0x0);
        gbc.writeMem(0xec7b, { 0x93 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x52a, gbc.sp());
        EXPECT(0xec7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xec7b));
        // 93 03D6
        gbc.setState(0x236e, 0x4f0c, 0x2400, 0x2806, 0x695, 0x92c1, 0x1, 0x1);
        gbc.writeMem(0x236e, { 0x93 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4f0c, gbc.sp());
        EXPECT(0x236f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03D7
        gbc.setState(0x666b, 0xebcc, 0x6b70, 0x1c9e, 0xf781, 0x232c, 0x1, 0x0);
        gbc.writeMem(0x666b, { 0x93 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xebcc, gbc.sp());
        EXPECT(0x666c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03D9
        gbc.setState(0x2114, 0xe5e1, 0xd720, 0x346e, 0xaa92, 0x568d, 0x0, 0x0);
        gbc.writeMem(0x2114, { 0x93 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe5e1, gbc.sp());
        EXPECT(0x2115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 03DA
        gbc.setState(0x596d, 0xd7b3, 0xca20, 0x1e0c, 0xcfe7, 0x10b0, 0x0, 0x1);
        gbc.writeMem(0x596d, { 0x93 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd7b3, gbc.sp());
        EXPECT(0x596e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03DB
        gbc.setState(0x6346, 0x5256, 0x2c60, 0xe5c, 0x8031, 0x428a, 0x0, 0x1);
        gbc.writeMem(0x6346, { 0x93 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5256, gbc.sp());
        EXPECT(0x6347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03DC
        gbc.setState(0x786d, 0x502a, 0x51c0, 0xf31d, 0xfb40, 0x9ba1, 0x0, 0x0);
        gbc.writeMem(0x786d, { 0x93 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x502a, gbc.sp());
        EXPECT(0x786e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 03DD
        gbc.setState(0xc12, 0xf65d, 0xef80, 0xf770, 0xbb36, 0xd608, 0x1, 0x1);
        gbc.writeMem(0xc12, { 0x93 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf65d, gbc.sp());
        EXPECT(0xc13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 03DE
        gbc.setState(0x64b, 0xf58e, 0xb460, 0x1e5a, 0x8b62, 0x75c6, 0x0, 0x0);
        gbc.writeMem(0x64b, { 0x93 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf58e, gbc.sp());
        EXPECT(0x64c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 03DF
        gbc.setState(0xa1ba, 0x69c5, 0xe470, 0x2392, 0x9202, 0xec8d, 0x1, 0x1);
        gbc.writeMem(0xa1ba, { 0x93 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x69c5, gbc.sp());
        EXPECT(0xa1bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa1ba));
        // 93 03E0
        gbc.setState(0x45c2, 0x6b85, 0x5520, 0xd27b, 0x7f93, 0xa7a3, 0x0, 0x1);
        gbc.writeMem(0x45c2, { 0x93 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6b85, gbc.sp());
        EXPECT(0x45c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03E1
        gbc.setState(0xbcbd, 0x1ccb, 0x87c0, 0x5c9e, 0x34d2, 0x54e5, 0x0, 0x1);
        gbc.writeMem(0xbcbd, { 0x93 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1ccb, gbc.sp());
        EXPECT(0xbcbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbcbd));
        // 93 03E2
        gbc.setState(0x3b86, 0x2850, 0xdc50, 0x348, 0xc991, 0xf1f0, 0x1, 0x1);
        gbc.writeMem(0x3b86, { 0x93 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2850, gbc.sp());
        EXPECT(0x3b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 93 03E3
        gbc.setState(0x47f1, 0x8773, 0x88a0, 0x939d, 0x4ade, 0xf2ec, 0x0, 0x0);
        gbc.writeMem(0x47f1, { 0x93 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8773, gbc.sp());
        EXPECT(0x47f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03E4
        gbc.setState(0x4dc0, 0xb9f0, 0x2e80, 0x76b5, 0x6bd8, 0xacbf, 0x0, 0x0);
        gbc.writeMem(0x4dc0, { 0x93 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb9f0, gbc.sp());
        EXPECT(0x4dc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 93 03E5
        gbc.setState(0xcd8c, 0x21a3, 0xca80, 0x5f0c, 0xc978, 0x3d9c, 0x1, 0x1);
        gbc.writeMem(0xcd8c, { 0x93 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x21a3, gbc.sp());
        EXPECT(0xcd8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcd8c));
        // 93 03E6
        gbc.setState(0x95ed, 0x7905, 0xd7e0, 0xe48d, 0xbb52, 0x1062, 0x1, 0x0);
        gbc.writeMem(0x95ed, { 0x93 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7905, gbc.sp());
        EXPECT(0x95ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x95ed));
        // 93 03E7
        gbc.setState(0x7d23, 0x5401, 0x2f00, 0xcb94, 0xe79c, 0xc7e4, 0x0, 0x0);
        gbc.writeMem(0x7d23, { 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5401, gbc.sp());
        EXPECT(0x7d24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
