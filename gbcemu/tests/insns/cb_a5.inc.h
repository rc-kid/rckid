    TEST(gbcemu, opcode_cb_a5) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB A5 0000
        gbc.setState(0x55c0, 0xb38f, 0xda60, 0xce70, 0x6a9, 0x4e5e, 0x0, 0x0);
        gbc.writeMem(0x55c0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb38f, gbc.sp());
        EXPECT(0x55c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0001
        gbc.setState(0xb3b8, 0x4eaf, 0xb120, 0xadd6, 0x89c3, 0xd8e3, 0x0, 0x1);
        gbc.writeMem(0xb3b8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4eaf, gbc.sp());
        EXPECT(0xb3ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b8));
        EXPECT(0xa5, gbc.readMem(0xb3b9));
        // CB A5 0002
        gbc.setState(0x7264, 0x6d8c, 0xbf0, 0x7415, 0xb0a6, 0x9a2a, 0x1, 0x0);
        gbc.writeMem(0x7264, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6d8c, gbc.sp());
        EXPECT(0x7266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0003
        gbc.setState(0x4aa9, 0x3431, 0x8060, 0x56b9, 0x963b, 0x5685, 0x0, 0x0);
        gbc.writeMem(0x4aa9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3431, gbc.sp());
        EXPECT(0x4aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0004
        gbc.setState(0x4689, 0x3431, 0x4480, 0xcd76, 0x66d, 0xc29f, 0x0, 0x1);
        gbc.writeMem(0x4689, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3431, gbc.sp());
        EXPECT(0x468b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0005
        gbc.setState(0x9f9d, 0xba03, 0xae30, 0xf34a, 0xf2b, 0x1138, 0x0, 0x1);
        gbc.writeMem(0x9f9d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xba03, gbc.sp());
        EXPECT(0x9f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f9d));
        EXPECT(0xa5, gbc.readMem(0x9f9e));
        // CB A5 0006
        gbc.setState(0xc2d0, 0x5683, 0x9ac0, 0x6ac3, 0x4210, 0x5336, 0x1, 0x1);
        gbc.writeMem(0xc2d0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5683, gbc.sp());
        EXPECT(0xc2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d0));
        EXPECT(0xa5, gbc.readMem(0xc2d1));
        // CB A5 0007
        gbc.setState(0xda27, 0x8cc, 0x2bd0, 0x9e30, 0x5ece, 0x4300, 0x1, 0x0);
        gbc.writeMem(0xda27, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8cc, gbc.sp());
        EXPECT(0xda29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda27));
        EXPECT(0xa5, gbc.readMem(0xda28));
        // CB A5 0008
        gbc.setState(0xe2db, 0x7d3d, 0x7f60, 0x4055, 0xff7c, 0xccf8, 0x0, 0x0);
        gbc.writeMem(0xe2db, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7d3d, gbc.sp());
        EXPECT(0xe2dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2db));
        EXPECT(0xa5, gbc.readMem(0xe2dc));
        // CB A5 0009
        gbc.setState(0xa5ea, 0x363f, 0x1f30, 0xe607, 0x7048, 0x8284, 0x1, 0x1);
        gbc.writeMem(0xa5ea, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x363f, gbc.sp());
        EXPECT(0xa5ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ea));
        EXPECT(0xa5, gbc.readMem(0xa5eb));
        // CB A5 000A
        gbc.setState(0xc226, 0x8a1b, 0x780, 0x4b0b, 0xd254, 0xb10f, 0x1, 0x0);
        gbc.writeMem(0xc226, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8a1b, gbc.sp());
        EXPECT(0xc228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc226));
        EXPECT(0xa5, gbc.readMem(0xc227));
        // CB A5 000B
        gbc.setState(0x1612, 0x5b4d, 0x210, 0xa473, 0x7c7f, 0xa05d, 0x1, 0x1);
        gbc.writeMem(0x1612, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5b4d, gbc.sp());
        EXPECT(0x1614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 000C
        gbc.setState(0xcb93, 0xab00, 0x1ba0, 0x28fc, 0x86ce, 0xaef9, 0x0, 0x1);
        gbc.writeMem(0xcb93, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xab00, gbc.sp());
        EXPECT(0xcb95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb93));
        EXPECT(0xa5, gbc.readMem(0xcb94));
        // CB A5 000D
        gbc.setState(0xc63d, 0xb15c, 0x2200, 0x11a3, 0xde46, 0x2dca, 0x0, 0x1);
        gbc.writeMem(0xc63d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb15c, gbc.sp());
        EXPECT(0xc63f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc63d));
        EXPECT(0xa5, gbc.readMem(0xc63e));
        // CB A5 000E
        gbc.setState(0x4163, 0x9c05, 0x8b60, 0xabf1, 0x89f9, 0xa38e, 0x1, 0x1);
        gbc.writeMem(0x4163, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9c05, gbc.sp());
        EXPECT(0x4165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 000F
        gbc.setState(0xd5b1, 0x3b51, 0x6a90, 0x1a0f, 0x2f44, 0x551, 0x0, 0x1);
        gbc.writeMem(0xd5b1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3b51, gbc.sp());
        EXPECT(0xd5b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b1));
        EXPECT(0xa5, gbc.readMem(0xd5b2));
        // CB A5 0010
        gbc.setState(0x145d, 0xa765, 0xf3e0, 0x977d, 0xc7f0, 0x7d13, 0x0, 0x0);
        gbc.writeMem(0x145d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa765, gbc.sp());
        EXPECT(0x145f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0011
        gbc.setState(0x835e, 0x2850, 0x6280, 0x81b4, 0x377a, 0x7ea4, 0x0, 0x0);
        gbc.writeMem(0x835e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2850, gbc.sp());
        EXPECT(0x8360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835e));
        EXPECT(0xa5, gbc.readMem(0x835f));
        // CB A5 0012
        gbc.setState(0x65da, 0x3eaa, 0xb050, 0x288a, 0x823a, 0x73f5, 0x1, 0x1);
        gbc.writeMem(0x65da, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3eaa, gbc.sp());
        EXPECT(0x65dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0013
        gbc.setState(0x4ddb, 0x490, 0xe1f0, 0xbeff, 0x5211, 0xa5a3, 0x1, 0x0);
        gbc.writeMem(0x4ddb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x490, gbc.sp());
        EXPECT(0x4ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0014
        gbc.setState(0x8858, 0xe121, 0xc5e0, 0xee0f, 0xc3e7, 0xc6dd, 0x1, 0x0);
        gbc.writeMem(0x8858, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe121, gbc.sp());
        EXPECT(0x885a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8858));
        EXPECT(0xa5, gbc.readMem(0x8859));
        // CB A5 0015
        gbc.setState(0x8a2f, 0x7dff, 0x90e0, 0x1217, 0x6e84, 0xac98, 0x1, 0x0);
        gbc.writeMem(0x8a2f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7dff, gbc.sp());
        EXPECT(0x8a31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2f));
        EXPECT(0xa5, gbc.readMem(0x8a30));
        // CB A5 0016
        gbc.setState(0x594a, 0x21dd, 0xed00, 0xbb88, 0x1cdb, 0x8679, 0x1, 0x0);
        gbc.writeMem(0x594a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x21dd, gbc.sp());
        EXPECT(0x594c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0017
        gbc.setState(0xd25b, 0x9abc, 0xb0e0, 0xc809, 0x6526, 0xf700, 0x0, 0x0);
        gbc.writeMem(0xd25b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9abc, gbc.sp());
        EXPECT(0xd25d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd25b));
        EXPECT(0xa5, gbc.readMem(0xd25c));
        // CB A5 0018
        gbc.setState(0xd6a7, 0x7b5f, 0x9380, 0x7be2, 0x3dda, 0x7e87, 0x0, 0x0);
        gbc.writeMem(0xd6a7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7b5f, gbc.sp());
        EXPECT(0xd6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a7));
        EXPECT(0xa5, gbc.readMem(0xd6a8));
        // CB A5 0019
        gbc.setState(0x231f, 0x1a04, 0xe690, 0x457b, 0xe211, 0xba06, 0x0, 0x1);
        gbc.writeMem(0x231f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1a04, gbc.sp());
        EXPECT(0x2321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 001A
        gbc.setState(0xaeae, 0x9c0e, 0x3560, 0x6b15, 0x3254, 0x3ca5, 0x1, 0x0);
        gbc.writeMem(0xaeae, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9c0e, gbc.sp());
        EXPECT(0xaeb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeae));
        EXPECT(0xa5, gbc.readMem(0xaeaf));
        // CB A5 001B
        gbc.setState(0x3bba, 0x9be8, 0x6630, 0xa593, 0xf703, 0x8d83, 0x1, 0x0);
        gbc.writeMem(0x3bba, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9be8, gbc.sp());
        EXPECT(0x3bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 001C
        gbc.setState(0x7d0a, 0x8e4b, 0x310, 0xf14b, 0x66f1, 0x89dc, 0x1, 0x0);
        gbc.writeMem(0x7d0a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8e4b, gbc.sp());
        EXPECT(0x7d0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 001D
        gbc.setState(0xef33, 0x79f, 0x4010, 0xc61f, 0xcd86, 0x5003, 0x1, 0x1);
        gbc.writeMem(0xef33, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x79f, gbc.sp());
        EXPECT(0xef35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef33));
        EXPECT(0xa5, gbc.readMem(0xef34));
        // CB A5 001E
        gbc.setState(0xabd3, 0xfd64, 0x2eb0, 0xa88e, 0xb555, 0xbea0, 0x1, 0x1);
        gbc.writeMem(0xabd3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfd64, gbc.sp());
        EXPECT(0xabd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd3));
        EXPECT(0xa5, gbc.readMem(0xabd4));
        // CB A5 0020
        gbc.setState(0xb8ce, 0xcb4d, 0xc480, 0x383a, 0xbab0, 0xf3fd, 0x1, 0x0);
        gbc.writeMem(0xb8ce, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcb4d, gbc.sp());
        EXPECT(0xb8d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ce));
        EXPECT(0xa5, gbc.readMem(0xb8cf));
        // CB A5 0021
        gbc.setState(0x7f52, 0x9e00, 0xaa80, 0x1674, 0x484f, 0xd26, 0x0, 0x1);
        gbc.writeMem(0x7f52, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9e00, gbc.sp());
        EXPECT(0x7f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0022
        gbc.setState(0x1c52, 0xa52c, 0x9f50, 0x9e01, 0x49de, 0x7ef1, 0x0, 0x0);
        gbc.writeMem(0x1c52, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa52c, gbc.sp());
        EXPECT(0x1c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0023
        gbc.setState(0x41e8, 0x8530, 0xd420, 0xb63d, 0xa9e9, 0x67e0, 0x1, 0x1);
        gbc.writeMem(0x41e8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8530, gbc.sp());
        EXPECT(0x41ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0024
        gbc.setState(0xbdb4, 0x5b5c, 0xa6c0, 0x3d0e, 0x585c, 0xbf4b, 0x0, 0x1);
        gbc.writeMem(0xbdb4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5b5c, gbc.sp());
        EXPECT(0xbdb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb4));
        EXPECT(0xa5, gbc.readMem(0xbdb5));
        // CB A5 0025
        gbc.setState(0xc274, 0xbda1, 0xe870, 0xb540, 0x404, 0xf406, 0x0, 0x1);
        gbc.writeMem(0xc274, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbda1, gbc.sp());
        EXPECT(0xc276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc274));
        EXPECT(0xa5, gbc.readMem(0xc275));
        // CB A5 0027
        gbc.setState(0x4218, 0x4e47, 0x73c0, 0x92ff, 0x4991, 0xefb3, 0x0, 0x1);
        gbc.writeMem(0x4218, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4e47, gbc.sp());
        EXPECT(0x421a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0028
        gbc.setState(0x28e6, 0xd701, 0xdc00, 0xa6ef, 0x110e, 0x8c30, 0x0, 0x0);
        gbc.writeMem(0x28e6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd701, gbc.sp());
        EXPECT(0x28e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0029
        gbc.setState(0x62c2, 0xe321, 0x1300, 0xc389, 0x32e9, 0x1ce0, 0x1, 0x0);
        gbc.writeMem(0x62c2, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe321, gbc.sp());
        EXPECT(0x62c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 002A
        gbc.setState(0xa396, 0x5d7f, 0xcc60, 0xfe91, 0xd98c, 0xebc9, 0x0, 0x1);
        gbc.writeMem(0xa396, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5d7f, gbc.sp());
        EXPECT(0xa398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa396));
        EXPECT(0xa5, gbc.readMem(0xa397));
        // CB A5 002B
        gbc.setState(0x4ef2, 0x6aba, 0xb890, 0xb8cc, 0x323, 0xf1a1, 0x1, 0x1);
        gbc.writeMem(0x4ef2, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6aba, gbc.sp());
        EXPECT(0x4ef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 002C
        gbc.setState(0x364b, 0xdc60, 0x1d70, 0x356d, 0x84e5, 0xdb6c, 0x0, 0x1);
        gbc.writeMem(0x364b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdc60, gbc.sp());
        EXPECT(0x364d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 002D
        gbc.setState(0x7c7d, 0x283c, 0x9600, 0x65f3, 0xd7cb, 0x711, 0x1, 0x1);
        gbc.writeMem(0x7c7d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x283c, gbc.sp());
        EXPECT(0x7c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 002E
        gbc.setState(0x94d8, 0x21d6, 0xaab0, 0x4460, 0xf723, 0x59dc, 0x0, 0x0);
        gbc.writeMem(0x94d8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x21d6, gbc.sp());
        EXPECT(0x94da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d8));
        EXPECT(0xa5, gbc.readMem(0x94d9));
        // CB A5 002F
        gbc.setState(0xdbb2, 0x7a05, 0xf580, 0xecfd, 0xc4c9, 0x6fa3, 0x1, 0x1);
        gbc.writeMem(0xdbb2, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7a05, gbc.sp());
        EXPECT(0xdbb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb2));
        EXPECT(0xa5, gbc.readMem(0xdbb3));
        // CB A5 0030
        gbc.setState(0x249b, 0xdd15, 0xc0c0, 0xba74, 0x2cab, 0x2057, 0x1, 0x0);
        gbc.writeMem(0x249b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdd15, gbc.sp());
        EXPECT(0x249d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0031
        gbc.setState(0xe695, 0x24a, 0xf300, 0x212a, 0x7a00, 0x2ca0, 0x0, 0x1);
        gbc.writeMem(0xe695, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x24a, gbc.sp());
        EXPECT(0xe697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe695));
        EXPECT(0xa5, gbc.readMem(0xe696));
        // CB A5 0032
        gbc.setState(0x6669, 0x8af6, 0x7900, 0x88c2, 0xa788, 0x8cfa, 0x1, 0x0);
        gbc.writeMem(0x6669, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8af6, gbc.sp());
        EXPECT(0x666b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0033
        gbc.setState(0xa220, 0xa661, 0xc0e0, 0x4140, 0x8fbb, 0x9aa9, 0x0, 0x0);
        gbc.writeMem(0xa220, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa661, gbc.sp());
        EXPECT(0xa222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa220));
        EXPECT(0xa5, gbc.readMem(0xa221));
        // CB A5 0034
        gbc.setState(0x38ec, 0xa621, 0x4610, 0xa5a3, 0xe31, 0xeb83, 0x1, 0x1);
        gbc.writeMem(0x38ec, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa621, gbc.sp());
        EXPECT(0x38ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0035
        gbc.setState(0x6e60, 0xd5b1, 0x98b0, 0x2b2d, 0x8c43, 0xa120, 0x0, 0x0);
        gbc.writeMem(0x6e60, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd5b1, gbc.sp());
        EXPECT(0x6e62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0036
        gbc.setState(0x5fe1, 0xf7fe, 0xf8f0, 0x3738, 0x4e01, 0x2d95, 0x1, 0x1);
        gbc.writeMem(0x5fe1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf7fe, gbc.sp());
        EXPECT(0x5fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0037
        gbc.setState(0x61dd, 0x5578, 0x4980, 0xa5e7, 0x2eb5, 0xab9d, 0x0, 0x0);
        gbc.writeMem(0x61dd, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5578, gbc.sp());
        EXPECT(0x61df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0039
        gbc.setState(0xb09c, 0x5c35, 0xfa90, 0x7bc3, 0x52c3, 0x2d4d, 0x1, 0x1);
        gbc.writeMem(0xb09c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5c35, gbc.sp());
        EXPECT(0xb09e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb09c));
        EXPECT(0xa5, gbc.readMem(0xb09d));
        // CB A5 003A
        gbc.setState(0x25c8, 0x38e6, 0x68f0, 0xc3e7, 0xee87, 0x4d46, 0x0, 0x1);
        gbc.writeMem(0x25c8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x38e6, gbc.sp());
        EXPECT(0x25ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 003B
        gbc.setState(0x9a3, 0x40f7, 0xe6e0, 0x71dd, 0xd9fe, 0xf4ec, 0x1, 0x0);
        gbc.writeMem(0x9a3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x40f7, gbc.sp());
        EXPECT(0x9a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 003C
        gbc.setState(0x823f, 0x11f7, 0x9b40, 0x1db8, 0xd0d3, 0xecb4, 0x0, 0x1);
        gbc.writeMem(0x823f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x11f7, gbc.sp());
        EXPECT(0x8241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x823f));
        EXPECT(0xa5, gbc.readMem(0x8240));
        // CB A5 003D
        gbc.setState(0x2ab5, 0x39dc, 0xdd40, 0xa63d, 0xd83e, 0xe176, 0x0, 0x0);
        gbc.writeMem(0x2ab5, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x39dc, gbc.sp());
        EXPECT(0x2ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 003E
        gbc.setState(0xcae4, 0x128e, 0x63c0, 0x3102, 0xa977, 0x718e, 0x0, 0x1);
        gbc.writeMem(0xcae4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x128e, gbc.sp());
        EXPECT(0xcae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae4));
        EXPECT(0xa5, gbc.readMem(0xcae5));
        // CB A5 003F
        gbc.setState(0x7611, 0xc52, 0x76f0, 0x85a4, 0xc394, 0x5fc0, 0x1, 0x1);
        gbc.writeMem(0x7611, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc52, gbc.sp());
        EXPECT(0x7613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0040
        gbc.setState(0x95f3, 0x863, 0xeee0, 0x3ef8, 0xaa5e, 0xf0c2, 0x1, 0x0);
        gbc.writeMem(0x95f3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x863, gbc.sp());
        EXPECT(0x95f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f3));
        EXPECT(0xa5, gbc.readMem(0x95f4));
        // CB A5 0041
        gbc.setState(0xd219, 0x10de, 0x2340, 0xeb3c, 0x11cd, 0xe841, 0x0, 0x1);
        gbc.writeMem(0xd219, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x10de, gbc.sp());
        EXPECT(0xd21b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd219));
        EXPECT(0xa5, gbc.readMem(0xd21a));
        // CB A5 0042
        gbc.setState(0xe616, 0x7fe, 0x3110, 0xa00d, 0x6f71, 0x2a2b, 0x0, 0x0);
        gbc.writeMem(0xe616, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7fe, gbc.sp());
        EXPECT(0xe618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe616));
        EXPECT(0xa5, gbc.readMem(0xe617));
        // CB A5 0043
        gbc.setState(0x8947, 0xc10, 0xa520, 0x2128, 0xcc39, 0x4a0d, 0x0, 0x0);
        gbc.writeMem(0x8947, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc10, gbc.sp());
        EXPECT(0x8949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8947));
        EXPECT(0xa5, gbc.readMem(0x8948));
        // CB A5 0044
        gbc.setState(0x4dbe, 0x43d5, 0x610, 0xb2a6, 0x69e5, 0xeaba, 0x0, 0x0);
        gbc.writeMem(0x4dbe, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x43d5, gbc.sp());
        EXPECT(0x4dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0045
        gbc.setState(0x485, 0x7fdc, 0x7b90, 0x67da, 0xc468, 0xe223, 0x0, 0x0);
        gbc.writeMem(0x485, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7fdc, gbc.sp());
        EXPECT(0x487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0046
        gbc.setState(0x9e4f, 0x3639, 0xce20, 0x881f, 0xfb71, 0x5e30, 0x0, 0x1);
        gbc.writeMem(0x9e4f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3639, gbc.sp());
        EXPECT(0x9e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4f));
        EXPECT(0xa5, gbc.readMem(0x9e50));
        // CB A5 0047
        gbc.setState(0xa374, 0x8007, 0x55f0, 0x1090, 0xbde7, 0x5c84, 0x1, 0x0);
        gbc.writeMem(0xa374, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8007, gbc.sp());
        EXPECT(0xa376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa374));
        EXPECT(0xa5, gbc.readMem(0xa375));
        // CB A5 0048
        gbc.setState(0xc5a3, 0x6af1, 0x72b0, 0xa182, 0x6f36, 0xdbd4, 0x1, 0x1);
        gbc.writeMem(0xc5a3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6af1, gbc.sp());
        EXPECT(0xc5a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a3));
        EXPECT(0xa5, gbc.readMem(0xc5a4));
        // CB A5 0049
        gbc.setState(0x40cc, 0x63d8, 0xaf70, 0x531a, 0x8b84, 0x4b58, 0x1, 0x1);
        gbc.writeMem(0x40cc, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x63d8, gbc.sp());
        EXPECT(0x40ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 004B
        gbc.setState(0x8b96, 0x5a9b, 0x9760, 0x4385, 0xdcf1, 0x2cdb, 0x0, 0x1);
        gbc.writeMem(0x8b96, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5a9b, gbc.sp());
        EXPECT(0x8b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b96));
        EXPECT(0xa5, gbc.readMem(0x8b97));
        // CB A5 004C
        gbc.setState(0xe68f, 0xd071, 0x5490, 0xf0d9, 0x2d3c, 0x4037, 0x0, 0x0);
        gbc.writeMem(0xe68f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd071, gbc.sp());
        EXPECT(0xe691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe68f));
        EXPECT(0xa5, gbc.readMem(0xe690));
        // CB A5 004D
        gbc.setState(0x2d35, 0x257b, 0x2e30, 0x606a, 0xeb9b, 0x1593, 0x0, 0x0);
        gbc.writeMem(0x2d35, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x257b, gbc.sp());
        EXPECT(0x2d37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 004E
        gbc.setState(0xa7f4, 0x3c1d, 0xbb40, 0x160f, 0xa6e7, 0xbae1, 0x1, 0x1);
        gbc.writeMem(0xa7f4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3c1d, gbc.sp());
        EXPECT(0xa7f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f4));
        EXPECT(0xa5, gbc.readMem(0xa7f5));
        // CB A5 004F
        gbc.setState(0x52d8, 0x179, 0x1170, 0x6f0, 0xa4fe, 0xaf38, 0x1, 0x0);
        gbc.writeMem(0x52d8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x179, gbc.sp());
        EXPECT(0x52da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0050
        gbc.setState(0xa55a, 0xc9c6, 0x9070, 0x8cca, 0xb9bb, 0xf982, 0x0, 0x1);
        gbc.writeMem(0xa55a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc9c6, gbc.sp());
        EXPECT(0xa55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa55a));
        EXPECT(0xa5, gbc.readMem(0xa55b));
        // CB A5 0051
        gbc.setState(0x3bc0, 0x4aa0, 0xf3b0, 0xefb1, 0xd6bb, 0xe08c, 0x1, 0x0);
        gbc.writeMem(0x3bc0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4aa0, gbc.sp());
        EXPECT(0x3bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0052
        gbc.setState(0xb3b6, 0x7e30, 0xd860, 0x322b, 0xd6c8, 0x92f7, 0x1, 0x1);
        gbc.writeMem(0xb3b6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7e30, gbc.sp());
        EXPECT(0xb3b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b6));
        EXPECT(0xa5, gbc.readMem(0xb3b7));
        // CB A5 0054
        gbc.setState(0xe1b6, 0x85a4, 0x3940, 0x816c, 0xeb6a, 0x4798, 0x0, 0x0);
        gbc.writeMem(0xe1b6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x85a4, gbc.sp());
        EXPECT(0xe1b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b6));
        EXPECT(0xa5, gbc.readMem(0xe1b7));
        // CB A5 0055
        gbc.setState(0x2225, 0xe52e, 0x1ba0, 0x337e, 0x5221, 0x941c, 0x0, 0x1);
        gbc.writeMem(0x2225, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe52e, gbc.sp());
        EXPECT(0x2227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0056
        gbc.setState(0x4187, 0x1ac3, 0xce40, 0xd973, 0x2c46, 0x8580, 0x1, 0x0);
        gbc.writeMem(0x4187, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1ac3, gbc.sp());
        EXPECT(0x4189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0057
        gbc.setState(0xc0b4, 0xfd6c, 0x1380, 0xd928, 0x8f17, 0xf41f, 0x1, 0x1);
        gbc.writeMem(0xc0b4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfd6c, gbc.sp());
        EXPECT(0xc0b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0b4));
        EXPECT(0xa5, gbc.readMem(0xc0b5));
        // CB A5 0059
        gbc.setState(0x7cfe, 0x4dee, 0x99a0, 0xf2bb, 0x3a6b, 0xb784, 0x1, 0x0);
        gbc.writeMem(0x7cfe, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4dee, gbc.sp());
        EXPECT(0x7d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 005A
        gbc.setState(0x4bec, 0xad38, 0x9b50, 0x1458, 0xe793, 0x53ee, 0x1, 0x1);
        gbc.writeMem(0x4bec, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xad38, gbc.sp());
        EXPECT(0x4bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 005B
        gbc.setState(0x9a11, 0x554c, 0x97d0, 0xa22e, 0x843e, 0x57b7, 0x0, 0x0);
        gbc.writeMem(0x9a11, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x554c, gbc.sp());
        EXPECT(0x9a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a11));
        EXPECT(0xa5, gbc.readMem(0x9a12));
        // CB A5 005C
        gbc.setState(0xdf8f, 0xeadf, 0x690, 0xd666, 0x1782, 0x3ffe, 0x1, 0x0);
        gbc.writeMem(0xdf8f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xeadf, gbc.sp());
        EXPECT(0xdf91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf8f));
        EXPECT(0xa5, gbc.readMem(0xdf90));
        // CB A5 005D
        gbc.setState(0xeafa, 0xd79b, 0x7350, 0x7726, 0xd393, 0x21b8, 0x1, 0x1);
        gbc.writeMem(0xeafa, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd79b, gbc.sp());
        EXPECT(0xeafc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeafa));
        EXPECT(0xa5, gbc.readMem(0xeafb));
        // CB A5 005F
        gbc.setState(0xb50f, 0x62a, 0xd230, 0xc012, 0xc657, 0xfccc, 0x1, 0x1);
        gbc.writeMem(0xb50f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x62a, gbc.sp());
        EXPECT(0xb511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb50f));
        EXPECT(0xa5, gbc.readMem(0xb510));
        // CB A5 0060
        gbc.setState(0x658b, 0x9354, 0xf410, 0xc4a8, 0xc535, 0x9f1f, 0x1, 0x1);
        gbc.writeMem(0x658b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9354, gbc.sp());
        EXPECT(0x658d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0062
        gbc.setState(0x5d0f, 0x6dee, 0x9d30, 0x708, 0x3665, 0xfd7, 0x0, 0x0);
        gbc.writeMem(0x5d0f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6dee, gbc.sp());
        EXPECT(0x5d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0063
        gbc.setState(0x9d6, 0x681a, 0x53f0, 0x9fcf, 0x3af7, 0xcc36, 0x0, 0x1);
        gbc.writeMem(0x9d6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x681a, gbc.sp());
        EXPECT(0x9d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0064
        gbc.setState(0x96ed, 0x1601, 0xaa90, 0x5b3d, 0x865a, 0x9689, 0x1, 0x1);
        gbc.writeMem(0x96ed, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1601, gbc.sp());
        EXPECT(0x96ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ed));
        EXPECT(0xa5, gbc.readMem(0x96ee));
        // CB A5 0065
        gbc.setState(0xd8be, 0xe1f7, 0x6fc0, 0x9d6e, 0x6c92, 0xa480, 0x0, 0x1);
        gbc.writeMem(0xd8be, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe1f7, gbc.sp());
        EXPECT(0xd8c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8be));
        EXPECT(0xa5, gbc.readMem(0xd8bf));
        // CB A5 0066
        gbc.setState(0x8e64, 0x7349, 0xf8e0, 0x5eab, 0x29bd, 0xec82, 0x0, 0x1);
        gbc.writeMem(0x8e64, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7349, gbc.sp());
        EXPECT(0x8e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e64));
        EXPECT(0xa5, gbc.readMem(0x8e65));
        // CB A5 0067
        gbc.setState(0x36a7, 0xe865, 0x3fd0, 0x1f73, 0xbb4b, 0xb221, 0x1, 0x0);
        gbc.writeMem(0x36a7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe865, gbc.sp());
        EXPECT(0x36a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0068
        gbc.setState(0x80bf, 0x6543, 0x8a60, 0x56a4, 0x894e, 0xaaad, 0x0, 0x0);
        gbc.writeMem(0x80bf, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6543, gbc.sp());
        EXPECT(0x80c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80bf));
        EXPECT(0xa5, gbc.readMem(0x80c0));
        // CB A5 0069
        gbc.setState(0x956, 0x1c9a, 0xa3d0, 0xf8e7, 0x5721, 0xc2c6, 0x0, 0x1);
        gbc.writeMem(0x956, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1c9a, gbc.sp());
        EXPECT(0x958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 006A
        gbc.setState(0x1a1e, 0xa165, 0x9050, 0xdf9b, 0x6957, 0x155a, 0x1, 0x1);
        gbc.writeMem(0x1a1e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa165, gbc.sp());
        EXPECT(0x1a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 006B
        gbc.setState(0xcb60, 0x7844, 0x9050, 0xfbcc, 0x53d1, 0x2eb1, 0x1, 0x1);
        gbc.writeMem(0xcb60, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7844, gbc.sp());
        EXPECT(0xcb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb60));
        EXPECT(0xa5, gbc.readMem(0xcb61));
        // CB A5 006C
        gbc.setState(0xc90, 0x2ea2, 0x5700, 0xb222, 0x98f7, 0x9148, 0x1, 0x1);
        gbc.writeMem(0xc90, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2ea2, gbc.sp());
        EXPECT(0xc92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 006D
        gbc.setState(0x8c57, 0x1ac6, 0xb4c0, 0xfbda, 0xa4dc, 0x9b57, 0x1, 0x1);
        gbc.writeMem(0x8c57, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1ac6, gbc.sp());
        EXPECT(0x8c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c57));
        EXPECT(0xa5, gbc.readMem(0x8c58));
        // CB A5 006E
        gbc.setState(0xb36, 0xe2b1, 0x6040, 0xfbeb, 0xdfd5, 0x94c6, 0x0, 0x0);
        gbc.writeMem(0xb36, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe2b1, gbc.sp());
        EXPECT(0xb38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 006F
        gbc.setState(0xc34a, 0x6ef9, 0x2060, 0x36ec, 0xd9c8, 0x6d9b, 0x0, 0x0);
        gbc.writeMem(0xc34a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6ef9, gbc.sp());
        EXPECT(0xc34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc34a));
        EXPECT(0xa5, gbc.readMem(0xc34b));
        // CB A5 0070
        gbc.setState(0x9030, 0xdb7d, 0x52d0, 0x2427, 0x7643, 0x8084, 0x0, 0x0);
        gbc.writeMem(0x9030, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xdb7d, gbc.sp());
        EXPECT(0x9032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9030));
        EXPECT(0xa5, gbc.readMem(0x9031));
        // CB A5 0071
        gbc.setState(0xe310, 0xbbba, 0x10, 0xc97e, 0xd47, 0xcecc, 0x1, 0x1);
        gbc.writeMem(0xe310, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbbba, gbc.sp());
        EXPECT(0xe312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe310));
        EXPECT(0xa5, gbc.readMem(0xe311));
        // CB A5 0072
        gbc.setState(0x2646, 0x50c, 0x4700, 0x3e98, 0x408a, 0xf9c0, 0x0, 0x1);
        gbc.writeMem(0x2646, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x50c, gbc.sp());
        EXPECT(0x2648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0073
        gbc.setState(0x2cf3, 0x8fdc, 0x7460, 0xefce, 0x8b7, 0x34b0, 0x1, 0x0);
        gbc.writeMem(0x2cf3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8fdc, gbc.sp());
        EXPECT(0x2cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0074
        gbc.setState(0xdde4, 0xccb5, 0xc8f0, 0xad5a, 0x2881, 0x53b6, 0x0, 0x1);
        gbc.writeMem(0xdde4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xccb5, gbc.sp());
        EXPECT(0xdde6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde4));
        EXPECT(0xa5, gbc.readMem(0xdde5));
        // CB A5 0075
        gbc.setState(0xa7fc, 0x3ba9, 0x4bd0, 0x6b21, 0xabc7, 0xfa8d, 0x0, 0x1);
        gbc.writeMem(0xa7fc, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3ba9, gbc.sp());
        EXPECT(0xa7fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7fc));
        EXPECT(0xa5, gbc.readMem(0xa7fd));
        // CB A5 0076
        gbc.setState(0xb2e, 0x906c, 0xec10, 0xe38b, 0xcfef, 0x958d, 0x0, 0x0);
        gbc.writeMem(0xb2e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x906c, gbc.sp());
        EXPECT(0xb30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0077
        gbc.setState(0x5822, 0x57b9, 0xc350, 0x9bcd, 0x62be, 0x1a36, 0x1, 0x1);
        gbc.writeMem(0x5822, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x57b9, gbc.sp());
        EXPECT(0x5824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0078
        gbc.setState(0xa37, 0x29f0, 0x7eb0, 0x64c, 0x1132, 0x1d95, 0x1, 0x0);
        gbc.writeMem(0xa37, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x29f0, gbc.sp());
        EXPECT(0xa39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 007B
        gbc.setState(0x4d3e, 0xc777, 0xc330, 0x4f44, 0x2bc5, 0x4a5, 0x0, 0x1);
        gbc.writeMem(0x4d3e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc777, gbc.sp());
        EXPECT(0x4d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 007C
        gbc.setState(0x5c83, 0xd04d, 0x6fd0, 0x7310, 0xf908, 0x5d8, 0x1, 0x1);
        gbc.writeMem(0x5c83, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd04d, gbc.sp());
        EXPECT(0x5c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 007D
        gbc.setState(0x8680, 0x34fb, 0xb080, 0x1bf4, 0x471e, 0x907d, 0x0, 0x0);
        gbc.writeMem(0x8680, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x34fb, gbc.sp());
        EXPECT(0x8682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8680));
        EXPECT(0xa5, gbc.readMem(0x8681));
        // CB A5 007E
        gbc.setState(0x87f9, 0xfaa1, 0xeaf0, 0x53de, 0x998, 0x4861, 0x0, 0x1);
        gbc.writeMem(0x87f9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfaa1, gbc.sp());
        EXPECT(0x87fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f9));
        EXPECT(0xa5, gbc.readMem(0x87fa));
        // CB A5 007F
        gbc.setState(0x574c, 0x6640, 0x6160, 0x8f4f, 0x2329, 0x1d9f, 0x1, 0x0);
        gbc.writeMem(0x574c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6640, gbc.sp());
        EXPECT(0x574e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0080
        gbc.setState(0x4d77, 0xbca2, 0x69a0, 0x823d, 0x3c64, 0x6937, 0x0, 0x1);
        gbc.writeMem(0x4d77, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbca2, gbc.sp());
        EXPECT(0x4d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0083
        gbc.setState(0xacc1, 0x8041, 0xed70, 0xe2a1, 0xe812, 0xea41, 0x1, 0x1);
        gbc.writeMem(0xacc1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8041, gbc.sp());
        EXPECT(0xacc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc1));
        EXPECT(0xa5, gbc.readMem(0xacc2));
        // CB A5 0084
        gbc.setState(0x5276, 0xda4e, 0x65d0, 0xa23d, 0x6fae, 0x5da7, 0x1, 0x0);
        gbc.writeMem(0x5276, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xda4e, gbc.sp());
        EXPECT(0x5278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0085
        gbc.setState(0x49a0, 0x4b86, 0xb90, 0xebc1, 0x2669, 0xb7aa, 0x1, 0x0);
        gbc.writeMem(0x49a0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4b86, gbc.sp());
        EXPECT(0x49a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0086
        gbc.setState(0x471, 0x9804, 0xe2e0, 0x506b, 0x8ad, 0x551f, 0x1, 0x1);
        gbc.writeMem(0x471, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9804, gbc.sp());
        EXPECT(0x473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0087
        gbc.setState(0x6ca0, 0xdcb7, 0xedc0, 0x289c, 0xbbab, 0x4757, 0x1, 0x1);
        gbc.writeMem(0x6ca0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdcb7, gbc.sp());
        EXPECT(0x6ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0088
        gbc.setState(0x7e3d, 0xc392, 0xc670, 0x9c12, 0x8b52, 0x9bfc, 0x1, 0x1);
        gbc.writeMem(0x7e3d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc392, gbc.sp());
        EXPECT(0x7e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0089
        gbc.setState(0xa6d2, 0xd001, 0x6940, 0x1183, 0x8d1c, 0x7617, 0x1, 0x0);
        gbc.writeMem(0xa6d2, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd001, gbc.sp());
        EXPECT(0xa6d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d2));
        EXPECT(0xa5, gbc.readMem(0xa6d3));
        // CB A5 008A
        gbc.setState(0x454, 0xcc88, 0x9a70, 0x7a27, 0x406, 0xbde9, 0x0, 0x1);
        gbc.writeMem(0x454, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcc88, gbc.sp());
        EXPECT(0x456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 008B
        gbc.setState(0x87d, 0xc723, 0x5e90, 0x1c42, 0x733c, 0x39e2, 0x0, 0x0);
        gbc.writeMem(0x87d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc723, gbc.sp());
        EXPECT(0x87f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 008C
        gbc.setState(0x8aba, 0x6b0e, 0x5860, 0xd2fa, 0x89a, 0x6b13, 0x0, 0x0);
        gbc.writeMem(0x8aba, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6b0e, gbc.sp());
        EXPECT(0x8abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aba));
        EXPECT(0xa5, gbc.readMem(0x8abb));
        // CB A5 008D
        gbc.setState(0x6f03, 0x2b03, 0x7fb0, 0x17d, 0xece5, 0xdc76, 0x0, 0x1);
        gbc.writeMem(0x6f03, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2b03, gbc.sp());
        EXPECT(0x6f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 008E
        gbc.setState(0x1c8f, 0x2e72, 0xe060, 0x51b6, 0x630c, 0xdafc, 0x1, 0x0);
        gbc.writeMem(0x1c8f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2e72, gbc.sp());
        EXPECT(0x1c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 008F
        gbc.setState(0xdfc3, 0xd2, 0x6fc0, 0x3675, 0x94a2, 0x2722, 0x1, 0x0);
        gbc.writeMem(0xdfc3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd2, gbc.sp());
        EXPECT(0xdfc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc3));
        EXPECT(0xa5, gbc.readMem(0xdfc4));
        // CB A5 0090
        gbc.setState(0xb396, 0x13da, 0x830, 0xf549, 0xdaef, 0x5080, 0x1, 0x1);
        gbc.writeMem(0xb396, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x13da, gbc.sp());
        EXPECT(0xb398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb396));
        EXPECT(0xa5, gbc.readMem(0xb397));
        // CB A5 0091
        gbc.setState(0x1934, 0xa2f5, 0x5df0, 0xacc, 0x1d4b, 0xe08e, 0x0, 0x1);
        gbc.writeMem(0x1934, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa2f5, gbc.sp());
        EXPECT(0x1936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0092
        gbc.setState(0x37a3, 0x9135, 0x3770, 0x763f, 0x1a07, 0xcc7e, 0x0, 0x1);
        gbc.writeMem(0x37a3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9135, gbc.sp());
        EXPECT(0x37a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0093
        gbc.setState(0x86ff, 0x1445, 0xfb40, 0x6b48, 0x9b6f, 0x16a1, 0x1, 0x1);
        gbc.writeMem(0x86ff, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1445, gbc.sp());
        EXPECT(0x8701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ff));
        EXPECT(0xa5, gbc.readMem(0x8700));
        // CB A5 0094
        gbc.setState(0xe8b8, 0x4836, 0xf330, 0x461b, 0x4d0c, 0x924, 0x0, 0x1);
        gbc.writeMem(0xe8b8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4836, gbc.sp());
        EXPECT(0xe8ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b8));
        EXPECT(0xa5, gbc.readMem(0xe8b9));
        // CB A5 0095
        gbc.setState(0x7d9e, 0x8865, 0xa650, 0x78e5, 0xefa0, 0x7c21, 0x1, 0x0);
        gbc.writeMem(0x7d9e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8865, gbc.sp());
        EXPECT(0x7da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0096
        gbc.setState(0xd861, 0xd8af, 0x1570, 0x930a, 0xa285, 0xaf5d, 0x0, 0x0);
        gbc.writeMem(0xd861, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd8af, gbc.sp());
        EXPECT(0xd863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd861));
        EXPECT(0xa5, gbc.readMem(0xd862));
        // CB A5 0097
        gbc.setState(0x821c, 0x3fbb, 0xa870, 0xbb3d, 0x108d, 0x364, 0x1, 0x0);
        gbc.writeMem(0x821c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3fbb, gbc.sp());
        EXPECT(0x821e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x821c));
        EXPECT(0xa5, gbc.readMem(0x821d));
        // CB A5 0098
        gbc.setState(0xb0, 0xe3fd, 0xd520, 0x856a, 0x8d9f, 0xa2fd, 0x1, 0x0);
        gbc.writeMem(0xb0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe3fd, gbc.sp());
        EXPECT(0xb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0099
        gbc.setState(0x376f, 0x21a4, 0xf800, 0x671d, 0xc190, 0x7f76, 0x1, 0x1);
        gbc.writeMem(0x376f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x21a4, gbc.sp());
        EXPECT(0x3771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 009B
        gbc.setState(0x473d, 0x9f8a, 0x1860, 0x7f9a, 0x9406, 0x26da, 0x0, 0x1);
        gbc.writeMem(0x473d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9f8a, gbc.sp());
        EXPECT(0x473f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 009C
        gbc.setState(0x33f4, 0x2233, 0xaf60, 0x5a98, 0x236b, 0x27a4, 0x1, 0x0);
        gbc.writeMem(0x33f4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2233, gbc.sp());
        EXPECT(0x33f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 009D
        gbc.setState(0xeebc, 0xa3a6, 0xce30, 0x6262, 0xa0b0, 0xf3e0, 0x0, 0x1);
        gbc.writeMem(0xeebc, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa3a6, gbc.sp());
        EXPECT(0xeebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeebc));
        EXPECT(0xa5, gbc.readMem(0xeebd));
        // CB A5 009E
        gbc.setState(0xcf02, 0x1643, 0xdca0, 0xa660, 0xd071, 0x1b5d, 0x1, 0x1);
        gbc.writeMem(0xcf02, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1643, gbc.sp());
        EXPECT(0xcf04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf02));
        EXPECT(0xa5, gbc.readMem(0xcf03));
        // CB A5 009F
        gbc.setState(0xb508, 0x5908, 0xba20, 0xffcd, 0x3c39, 0x5b18, 0x1, 0x0);
        gbc.writeMem(0xb508, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5908, gbc.sp());
        EXPECT(0xb50a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb508));
        EXPECT(0xa5, gbc.readMem(0xb509));
        // CB A5 00A0
        gbc.setState(0x8eed, 0xf037, 0xa610, 0x753c, 0x8b43, 0x4598, 0x1, 0x0);
        gbc.writeMem(0x8eed, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf037, gbc.sp());
        EXPECT(0x8eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eed));
        EXPECT(0xa5, gbc.readMem(0x8eee));
        // CB A5 00A1
        gbc.setState(0x737c, 0x6910, 0x8b80, 0x6f7a, 0x8128, 0xcef5, 0x1, 0x0);
        gbc.writeMem(0x737c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6910, gbc.sp());
        EXPECT(0x737e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00A2
        gbc.setState(0xc3c, 0xd07f, 0xd720, 0x1dd4, 0xcfd8, 0x2111, 0x1, 0x1);
        gbc.writeMem(0xc3c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd07f, gbc.sp());
        EXPECT(0xc3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00A4
        gbc.setState(0x8d0e, 0x1890, 0xc810, 0x25db, 0x14f8, 0x4f27, 0x1, 0x0);
        gbc.writeMem(0x8d0e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1890, gbc.sp());
        EXPECT(0x8d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d0e));
        EXPECT(0xa5, gbc.readMem(0x8d0f));
        // CB A5 00A5
        gbc.setState(0xee09, 0xb237, 0x6250, 0x8acb, 0x4abe, 0xea4a, 0x0, 0x0);
        gbc.writeMem(0xee09, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb237, gbc.sp());
        EXPECT(0xee0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee09));
        EXPECT(0xa5, gbc.readMem(0xee0a));
        // CB A5 00A6
        gbc.setState(0x4dbe, 0x9032, 0xcb90, 0x3b18, 0x4995, 0xf76d, 0x1, 0x0);
        gbc.writeMem(0x4dbe, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9032, gbc.sp());
        EXPECT(0x4dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00A7
        gbc.setState(0x765f, 0x388a, 0xeae0, 0xa3f9, 0x7b5d, 0xdd0f, 0x1, 0x0);
        gbc.writeMem(0x765f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x388a, gbc.sp());
        EXPECT(0x7661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00A8
        gbc.setState(0xbe1a, 0xc49a, 0x26b0, 0x215a, 0xda3d, 0x7dfa, 0x1, 0x1);
        gbc.writeMem(0xbe1a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc49a, gbc.sp());
        EXPECT(0xbe1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe1a));
        EXPECT(0xa5, gbc.readMem(0xbe1b));
        // CB A5 00A9
        gbc.setState(0x2f50, 0x8560, 0x3a00, 0x3dab, 0x6e8, 0xe6fd, 0x1, 0x0);
        gbc.writeMem(0x2f50, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8560, gbc.sp());
        EXPECT(0x2f52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00AA
        gbc.setState(0x4e51, 0x1877, 0x1c60, 0x75f3, 0x1b39, 0x30ef, 0x0, 0x1);
        gbc.writeMem(0x4e51, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1877, gbc.sp());
        EXPECT(0x4e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00AB
        gbc.setState(0xa537, 0xf4c0, 0xbb0, 0xf555, 0xb3fa, 0x1e30, 0x1, 0x1);
        gbc.writeMem(0xa537, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf4c0, gbc.sp());
        EXPECT(0xa539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa537));
        EXPECT(0xa5, gbc.readMem(0xa538));
        // CB A5 00AC
        gbc.setState(0x86b7, 0x94ff, 0x9600, 0x799c, 0x630, 0xe5ef, 0x0, 0x0);
        gbc.writeMem(0x86b7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x94ff, gbc.sp());
        EXPECT(0x86b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b7));
        EXPECT(0xa5, gbc.readMem(0x86b8));
        // CB A5 00AD
        gbc.setState(0xd199, 0x7945, 0xdf90, 0x4e1e, 0xddc6, 0x1cab, 0x1, 0x1);
        gbc.writeMem(0xd199, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7945, gbc.sp());
        EXPECT(0xd19b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd199));
        EXPECT(0xa5, gbc.readMem(0xd19a));
        // CB A5 00AE
        gbc.setState(0x1f79, 0xc41f, 0xcfd0, 0x8b21, 0x224b, 0xf9e, 0x0, 0x0);
        gbc.writeMem(0x1f79, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc41f, gbc.sp());
        EXPECT(0x1f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00AF
        gbc.setState(0xabe, 0x1e0d, 0xcdd0, 0x529c, 0x8518, 0x8e8a, 0x0, 0x0);
        gbc.writeMem(0xabe, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1e0d, gbc.sp());
        EXPECT(0xac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00B0
        gbc.setState(0x31e3, 0xe9, 0x9ec0, 0x90fd, 0xb03, 0x8052, 0x0, 0x0);
        gbc.writeMem(0x31e3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe9, gbc.sp());
        EXPECT(0x31e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00B1
        gbc.setState(0xa827, 0x2e25, 0xa290, 0xb595, 0xf9c, 0x9a07, 0x0, 0x0);
        gbc.writeMem(0xa827, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2e25, gbc.sp());
        EXPECT(0xa829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa827));
        EXPECT(0xa5, gbc.readMem(0xa828));
        // CB A5 00B2
        gbc.setState(0xe9e, 0xab62, 0x230, 0x1f19, 0x9ec0, 0x8590, 0x1, 0x0);
        gbc.writeMem(0xe9e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xab62, gbc.sp());
        EXPECT(0xea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00B3
        gbc.setState(0xbe5b, 0xdd95, 0x1290, 0x3200, 0x7d23, 0x4a14, 0x0, 0x0);
        gbc.writeMem(0xbe5b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdd95, gbc.sp());
        EXPECT(0xbe5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe5b));
        EXPECT(0xa5, gbc.readMem(0xbe5c));
        // CB A5 00B4
        gbc.setState(0xa002, 0x6662, 0xc60, 0x37f8, 0x74c3, 0x20a1, 0x0, 0x1);
        gbc.writeMem(0xa002, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6662, gbc.sp());
        EXPECT(0xa004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa002));
        EXPECT(0xa5, gbc.readMem(0xa003));
        // CB A5 00B5
        gbc.setState(0x222d, 0x3b6, 0x5880, 0x12ed, 0xf4cd, 0x7452, 0x0, 0x0);
        gbc.writeMem(0x222d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3b6, gbc.sp());
        EXPECT(0x222f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00B6
        gbc.setState(0x569f, 0xaf36, 0xf8d0, 0x547e, 0x9e8, 0xe725, 0x0, 0x1);
        gbc.writeMem(0x569f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xaf36, gbc.sp());
        EXPECT(0x56a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00B7
        gbc.setState(0x8cae, 0x1abc, 0x7d10, 0xd263, 0x700, 0x762a, 0x1, 0x0);
        gbc.writeMem(0x8cae, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1abc, gbc.sp());
        EXPECT(0x8cb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cae));
        EXPECT(0xa5, gbc.readMem(0x8caf));
        // CB A5 00B8
        gbc.setState(0xbf8d, 0x6e86, 0x13a0, 0x4611, 0xf328, 0x207a, 0x0, 0x0);
        gbc.writeMem(0xbf8d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6e86, gbc.sp());
        EXPECT(0xbf8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8d));
        EXPECT(0xa5, gbc.readMem(0xbf8e));
        // CB A5 00B9
        gbc.setState(0x5ef3, 0xff1e, 0x2d0, 0xbc7e, 0x9a8, 0xe7dd, 0x0, 0x1);
        gbc.writeMem(0x5ef3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xff1e, gbc.sp());
        EXPECT(0x5ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00BA
        gbc.setState(0x42e3, 0xba99, 0xfac0, 0xfdae, 0x973b, 0xee31, 0x0, 0x0);
        gbc.writeMem(0x42e3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xba99, gbc.sp());
        EXPECT(0x42e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00BB
        gbc.setState(0xe15, 0xcd29, 0xaca0, 0x1336, 0xd122, 0x120, 0x0, 0x1);
        gbc.writeMem(0xe15, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xcd29, gbc.sp());
        EXPECT(0xe17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00BC
        gbc.setState(0x896, 0xf2fe, 0x63c0, 0x8d83, 0x3c6, 0xa875, 0x1, 0x0);
        gbc.writeMem(0x896, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf2fe, gbc.sp());
        EXPECT(0x898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00BD
        gbc.setState(0x88fb, 0x91e, 0x2830, 0xbc0f, 0x2754, 0x95c9, 0x1, 0x0);
        gbc.writeMem(0x88fb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x91e, gbc.sp());
        EXPECT(0x88fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88fb));
        EXPECT(0xa5, gbc.readMem(0x88fc));
        // CB A5 00BE
        gbc.setState(0xd8ba, 0x1207, 0xb3c0, 0x99cc, 0x1313, 0xbab3, 0x1, 0x0);
        gbc.writeMem(0xd8ba, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1207, gbc.sp());
        EXPECT(0xd8bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ba));
        EXPECT(0xa5, gbc.readMem(0xd8bb));
        // CB A5 00BF
        gbc.setState(0xa366, 0x620f, 0x5ca0, 0x8ca6, 0x4e2a, 0xc1dc, 0x0, 0x1);
        gbc.writeMem(0xa366, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x620f, gbc.sp());
        EXPECT(0xa368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa366));
        EXPECT(0xa5, gbc.readMem(0xa367));
        // CB A5 00C0
        gbc.setState(0x74de, 0x3b4, 0x3ea0, 0x4925, 0x7384, 0xb028, 0x0, 0x1);
        gbc.writeMem(0x74de, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3b4, gbc.sp());
        EXPECT(0x74e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00C1
        gbc.setState(0xce51, 0x75f5, 0x1ea0, 0xc395, 0x28cc, 0xe177, 0x1, 0x1);
        gbc.writeMem(0xce51, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x75f5, gbc.sp());
        EXPECT(0xce53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce51));
        EXPECT(0xa5, gbc.readMem(0xce52));
        // CB A5 00C2
        gbc.setState(0xdcb, 0x2f7c, 0xa130, 0xe7a9, 0x25a3, 0x4058, 0x0, 0x0);
        gbc.writeMem(0xdcb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2f7c, gbc.sp());
        EXPECT(0xdcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00C3
        gbc.setState(0x6b17, 0x5a35, 0x3160, 0x3dc9, 0xb292, 0xf551, 0x0, 0x0);
        gbc.writeMem(0x6b17, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5a35, gbc.sp());
        EXPECT(0x6b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00C4
        gbc.setState(0x5516, 0x6fd2, 0xe9d0, 0x4932, 0xbad8, 0x3a70, 0x0, 0x1);
        gbc.writeMem(0x5516, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6fd2, gbc.sp());
        EXPECT(0x5518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00C5
        gbc.setState(0xa43e, 0xe13e, 0xc4a0, 0xb164, 0x1986, 0x8882, 0x0, 0x1);
        gbc.writeMem(0xa43e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe13e, gbc.sp());
        EXPECT(0xa440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa43e));
        EXPECT(0xa5, gbc.readMem(0xa43f));
        // CB A5 00C6
        gbc.setState(0xc260, 0x4ddc, 0xd950, 0xcc00, 0x1949, 0x56aa, 0x0, 0x0);
        gbc.writeMem(0xc260, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4ddc, gbc.sp());
        EXPECT(0xc262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc260));
        EXPECT(0xa5, gbc.readMem(0xc261));
        // CB A5 00C7
        gbc.setState(0x7f74, 0xcdad, 0xf250, 0x7ddf, 0xeaa7, 0x988c, 0x0, 0x1);
        gbc.writeMem(0x7f74, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcdad, gbc.sp());
        EXPECT(0x7f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00C8
        gbc.setState(0x7df9, 0xc839, 0x5900, 0x44b4, 0xc5de, 0xa275, 0x1, 0x1);
        gbc.writeMem(0x7df9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc839, gbc.sp());
        EXPECT(0x7dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00C9
        gbc.setState(0xbe57, 0xf72a, 0x3f00, 0xcc10, 0xdc18, 0xb875, 0x1, 0x0);
        gbc.writeMem(0xbe57, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf72a, gbc.sp());
        EXPECT(0xbe59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe57));
        EXPECT(0xa5, gbc.readMem(0xbe58));
        // CB A5 00CA
        gbc.setState(0x83b4, 0x5d24, 0xfb30, 0xe4ca, 0xbf5, 0xc234, 0x1, 0x1);
        gbc.writeMem(0x83b4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5d24, gbc.sp());
        EXPECT(0x83b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b4));
        EXPECT(0xa5, gbc.readMem(0x83b5));
        // CB A5 00CB
        gbc.setState(0x13cf, 0x3fe1, 0xfde0, 0x5827, 0xf53d, 0xfb90, 0x0, 0x1);
        gbc.writeMem(0x13cf, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3fe1, gbc.sp());
        EXPECT(0x13d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00CC
        gbc.setState(0x6535, 0xdf43, 0x2f80, 0x147, 0xe564, 0x7b01, 0x1, 0x0);
        gbc.writeMem(0x6535, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xdf43, gbc.sp());
        EXPECT(0x6537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00CD
        gbc.setState(0xccce, 0x4c21, 0x6900, 0x551, 0x972c, 0xb516, 0x0, 0x1);
        gbc.writeMem(0xccce, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4c21, gbc.sp());
        EXPECT(0xccd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccce));
        EXPECT(0xa5, gbc.readMem(0xcccf));
        // CB A5 00CE
        gbc.setState(0x8c95, 0xb2d2, 0xbef0, 0x6822, 0xeb1a, 0x1f66, 0x1, 0x1);
        gbc.writeMem(0x8c95, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb2d2, gbc.sp());
        EXPECT(0x8c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c95));
        EXPECT(0xa5, gbc.readMem(0x8c96));
        // CB A5 00CF
        gbc.setState(0x6dc4, 0x4fa1, 0x2770, 0x6118, 0xc33e, 0xac54, 0x1, 0x1);
        gbc.writeMem(0x6dc4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4fa1, gbc.sp());
        EXPECT(0x6dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00D0
        gbc.setState(0xae96, 0x887a, 0x5ad0, 0x6f66, 0x201f, 0xd868, 0x0, 0x0);
        gbc.writeMem(0xae96, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x887a, gbc.sp());
        EXPECT(0xae98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae96));
        EXPECT(0xa5, gbc.readMem(0xae97));
        // CB A5 00D1
        gbc.setState(0xbdb0, 0x6a3, 0x9190, 0x972d, 0xd95b, 0xd22c, 0x0, 0x1);
        gbc.writeMem(0xbdb0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6a3, gbc.sp());
        EXPECT(0xbdb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb0));
        EXPECT(0xa5, gbc.readMem(0xbdb1));
        // CB A5 00D2
        gbc.setState(0x8c52, 0x2ec5, 0xfc40, 0x8711, 0x72be, 0xce67, 0x0, 0x0);
        gbc.writeMem(0x8c52, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2ec5, gbc.sp());
        EXPECT(0x8c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c52));
        EXPECT(0xa5, gbc.readMem(0x8c53));
        // CB A5 00D3
        gbc.setState(0xd10d, 0x1198, 0xb90, 0x13eb, 0xdb94, 0x8ac3, 0x1, 0x1);
        gbc.writeMem(0xd10d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1198, gbc.sp());
        EXPECT(0xd10f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10d));
        EXPECT(0xa5, gbc.readMem(0xd10e));
        // CB A5 00D4
        gbc.setState(0x5624, 0xb352, 0xe9c0, 0x9a53, 0xb1b7, 0x9846, 0x1, 0x0);
        gbc.writeMem(0x5624, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb352, gbc.sp());
        EXPECT(0x5626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00D5
        gbc.setState(0x194, 0x921a, 0x3480, 0xd1b3, 0xa622, 0x6f0d, 0x1, 0x1);
        gbc.writeMem(0x194, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x921a, gbc.sp());
        EXPECT(0x196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00D6
        gbc.setState(0xa7cd, 0xb749, 0xee70, 0x53ff, 0xe450, 0xfa4b, 0x0, 0x0);
        gbc.writeMem(0xa7cd, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb749, gbc.sp());
        EXPECT(0xa7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7cd));
        EXPECT(0xa5, gbc.readMem(0xa7ce));
        // CB A5 00D7
        gbc.setState(0x27e6, 0x91fc, 0xd70, 0x3e50, 0xcf3a, 0x1729, 0x0, 0x1);
        gbc.writeMem(0x27e6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x91fc, gbc.sp());
        EXPECT(0x27e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00D8
        gbc.setState(0x4677, 0x7924, 0x55b0, 0xaf6c, 0x9d16, 0x435d, 0x1, 0x1);
        gbc.writeMem(0x4677, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7924, gbc.sp());
        EXPECT(0x4679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00D9
        gbc.setState(0x129d, 0xaa53, 0x8cd0, 0x8fd5, 0xb5dc, 0xea8c, 0x1, 0x0);
        gbc.writeMem(0x129d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xaa53, gbc.sp());
        EXPECT(0x129f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00DA
        gbc.setState(0x40bb, 0xd229, 0xebe0, 0x7c8a, 0xcc56, 0x488a, 0x1, 0x0);
        gbc.writeMem(0x40bb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd229, gbc.sp());
        EXPECT(0x40bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00DB
        gbc.setState(0x4038, 0x1f4d, 0x5d90, 0xbfc8, 0x142e, 0xe40d, 0x1, 0x0);
        gbc.writeMem(0x4038, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1f4d, gbc.sp());
        EXPECT(0x403a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00DC
        gbc.setState(0x5613, 0xad78, 0xe60, 0xa5ea, 0x604d, 0x1002, 0x0, 0x0);
        gbc.writeMem(0x5613, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xad78, gbc.sp());
        EXPECT(0x5615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00DE
        gbc.setState(0x934b, 0x187, 0x8ba0, 0xbd02, 0xd357, 0x905e, 0x0, 0x0);
        gbc.writeMem(0x934b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x187, gbc.sp());
        EXPECT(0x934d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x934b));
        EXPECT(0xa5, gbc.readMem(0x934c));
        // CB A5 00DF
        gbc.setState(0x9ebd, 0x1040, 0x8430, 0x8899, 0xc68c, 0x231f, 0x0, 0x0);
        gbc.writeMem(0x9ebd, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1040, gbc.sp());
        EXPECT(0x9ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ebd));
        EXPECT(0xa5, gbc.readMem(0x9ebe));
        // CB A5 00E1
        gbc.setState(0x1caf, 0xe4f2, 0x67f0, 0x5768, 0x314a, 0xf681, 0x1, 0x1);
        gbc.writeMem(0x1caf, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe4f2, gbc.sp());
        EXPECT(0x1cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00E2
        gbc.setState(0x8120, 0x79e, 0xe440, 0x36c1, 0x9278, 0x8d0e, 0x1, 0x1);
        gbc.writeMem(0x8120, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x79e, gbc.sp());
        EXPECT(0x8122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8120));
        EXPECT(0xa5, gbc.readMem(0x8121));
        // CB A5 00E3
        gbc.setState(0xd0b8, 0xf450, 0xd250, 0xe4e8, 0x13f, 0x186a, 0x1, 0x1);
        gbc.writeMem(0xd0b8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf450, gbc.sp());
        EXPECT(0xd0ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b8));
        EXPECT(0xa5, gbc.readMem(0xd0b9));
        // CB A5 00E5
        gbc.setState(0xca11, 0xd851, 0xc5d0, 0x1980, 0xdb88, 0x41af, 0x0, 0x1);
        gbc.writeMem(0xca11, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd851, gbc.sp());
        EXPECT(0xca13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca11));
        EXPECT(0xa5, gbc.readMem(0xca12));
        // CB A5 00E6
        gbc.setState(0xebfb, 0xf17f, 0x8c80, 0x553e, 0x1aee, 0xbf5c, 0x1, 0x0);
        gbc.writeMem(0xebfb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf17f, gbc.sp());
        EXPECT(0xebfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebfb));
        EXPECT(0xa5, gbc.readMem(0xebfc));
        // CB A5 00E7
        gbc.setState(0x60b3, 0x5c88, 0xf850, 0x89d9, 0x8a14, 0x9130, 0x1, 0x0);
        gbc.writeMem(0x60b3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5c88, gbc.sp());
        EXPECT(0x60b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00E9
        gbc.setState(0x27af, 0x8ff4, 0x51d0, 0x4b25, 0x352c, 0x99e7, 0x1, 0x0);
        gbc.writeMem(0x27af, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8ff4, gbc.sp());
        EXPECT(0x27b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00EA
        gbc.setState(0xf5c, 0xb6af, 0x300, 0xc7ed, 0xbfaf, 0x5687, 0x0, 0x0);
        gbc.writeMem(0xf5c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb6af, gbc.sp());
        EXPECT(0xf5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00EB
        gbc.setState(0x6e75, 0x52f6, 0x1930, 0xb8e2, 0x3f2f, 0x77be, 0x1, 0x0);
        gbc.writeMem(0x6e75, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x52f6, gbc.sp());
        EXPECT(0x6e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00EC
        gbc.setState(0x6b3b, 0x3454, 0x190, 0x9d2c, 0xab71, 0xe99f, 0x1, 0x1);
        gbc.writeMem(0x6b3b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3454, gbc.sp());
        EXPECT(0x6b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00ED
        gbc.setState(0x83e7, 0xf77f, 0x28f0, 0xca39, 0x6a25, 0x5244, 0x0, 0x0);
        gbc.writeMem(0x83e7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf77f, gbc.sp());
        EXPECT(0x83e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e7));
        EXPECT(0xa5, gbc.readMem(0x83e8));
        // CB A5 00EE
        gbc.setState(0xe8ee, 0xe805, 0xda80, 0x9436, 0x4045, 0x3944, 0x1, 0x1);
        gbc.writeMem(0xe8ee, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe805, gbc.sp());
        EXPECT(0xe8f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ee));
        EXPECT(0xa5, gbc.readMem(0xe8ef));
        // CB A5 00EF
        gbc.setState(0x5737, 0x8ed5, 0x8190, 0x577a, 0x718a, 0xb8f1, 0x0, 0x0);
        gbc.writeMem(0x5737, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8ed5, gbc.sp());
        EXPECT(0x5739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00F0
        gbc.setState(0x7800, 0x9a70, 0xe4a0, 0xc60f, 0x6aee, 0x2a78, 0x0, 0x1);
        gbc.writeMem(0x7800, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9a70, gbc.sp());
        EXPECT(0x7802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00F1
        gbc.setState(0x964f, 0x131c, 0x9e00, 0x5774, 0xfa38, 0xdd5b, 0x1, 0x0);
        gbc.writeMem(0x964f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x131c, gbc.sp());
        EXPECT(0x9651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x964f));
        EXPECT(0xa5, gbc.readMem(0x9650));
        // CB A5 00F2
        gbc.setState(0xbbae, 0xf682, 0xd2b0, 0xd89a, 0x8c01, 0xb9e2, 0x0, 0x1);
        gbc.writeMem(0xbbae, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf682, gbc.sp());
        EXPECT(0xbbb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbae));
        EXPECT(0xa5, gbc.readMem(0xbbaf));
        // CB A5 00F4
        gbc.setState(0x79f3, 0x5661, 0x5570, 0x10b3, 0x8636, 0xcb60, 0x0, 0x1);
        gbc.writeMem(0x79f3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5661, gbc.sp());
        EXPECT(0x79f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 00F6
        gbc.setState(0xa855, 0x25b5, 0xe570, 0xfa07, 0x16ec, 0x776c, 0x1, 0x0);
        gbc.writeMem(0xa855, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x25b5, gbc.sp());
        EXPECT(0xa857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa855));
        EXPECT(0xa5, gbc.readMem(0xa856));
        // CB A5 00F7
        gbc.setState(0x50d0, 0xfbf2, 0x3340, 0x6a1, 0x63ab, 0xddfe, 0x0, 0x0);
        gbc.writeMem(0x50d0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfbf2, gbc.sp());
        EXPECT(0x50d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00F8
        gbc.setState(0x402e, 0x869, 0x3b20, 0xe2e9, 0x3d2a, 0x82f0, 0x0, 0x0);
        gbc.writeMem(0x402e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x869, gbc.sp());
        EXPECT(0x4030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00F9
        gbc.setState(0x5caf, 0x4670, 0x6a20, 0x3f49, 0xe62d, 0x3ffd, 0x1, 0x1);
        gbc.writeMem(0x5caf, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4670, gbc.sp());
        EXPECT(0x5cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 00FA
        gbc.setState(0xdf97, 0x1791, 0x2b30, 0x37b, 0x387d, 0x5967, 0x1, 0x0);
        gbc.writeMem(0xdf97, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1791, gbc.sp());
        EXPECT(0xdf99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf97));
        EXPECT(0xa5, gbc.readMem(0xdf98));
        // CB A5 00FB
        gbc.setState(0xe338, 0xbff1, 0x33d0, 0x5ac2, 0x965d, 0x6b15, 0x1, 0x1);
        gbc.writeMem(0xe338, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbff1, gbc.sp());
        EXPECT(0xe33a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe338));
        EXPECT(0xa5, gbc.readMem(0xe339));
        // CB A5 00FC
        gbc.setState(0xe882, 0xac38, 0x2b20, 0xbac6, 0xdfb5, 0x9319, 0x0, 0x1);
        gbc.writeMem(0xe882, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xac38, gbc.sp());
        EXPECT(0xe884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe882));
        EXPECT(0xa5, gbc.readMem(0xe883));
        // CB A5 00FD
        gbc.setState(0x8e6e, 0x8267, 0x8a00, 0x3091, 0xf26e, 0xe864, 0x1, 0x1);
        gbc.writeMem(0x8e6e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8267, gbc.sp());
        EXPECT(0x8e70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e6e));
        EXPECT(0xa5, gbc.readMem(0x8e6f));
        // CB A5 00FE
        gbc.setState(0xad18, 0x66ea, 0xc40, 0xe21b, 0xb68c, 0xaa6, 0x0, 0x1);
        gbc.writeMem(0xad18, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x66ea, gbc.sp());
        EXPECT(0xad1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad18));
        EXPECT(0xa5, gbc.readMem(0xad19));
        // CB A5 00FF
        gbc.setState(0x4a79, 0x5a6c, 0x13b0, 0x62e0, 0xc4d6, 0x1565, 0x0, 0x0);
        gbc.writeMem(0x4a79, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5a6c, gbc.sp());
        EXPECT(0x4a7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0100
        gbc.setState(0xa535, 0x9a3c, 0x9af0, 0xc8e0, 0x455f, 0xb585, 0x0, 0x0);
        gbc.writeMem(0xa535, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9a3c, gbc.sp());
        EXPECT(0xa537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa535));
        EXPECT(0xa5, gbc.readMem(0xa536));
        // CB A5 0101
        gbc.setState(0x739e, 0xc89f, 0xc880, 0x5871, 0x7b34, 0x60e7, 0x1, 0x1);
        gbc.writeMem(0x739e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc89f, gbc.sp());
        EXPECT(0x73a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0102
        gbc.setState(0xb6ff, 0x4700, 0xb6d0, 0x7e55, 0x3a57, 0xe924, 0x1, 0x1);
        gbc.writeMem(0xb6ff, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4700, gbc.sp());
        EXPECT(0xb701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ff));
        EXPECT(0xa5, gbc.readMem(0xb700));
        // CB A5 0103
        gbc.setState(0x343f, 0x4301, 0x3a60, 0xa151, 0x4c1b, 0xe2e1, 0x1, 0x0);
        gbc.writeMem(0x343f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4301, gbc.sp());
        EXPECT(0x3441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0104
        gbc.setState(0x7a00, 0xf5a8, 0xad60, 0xb3a, 0x717e, 0xd9b6, 0x0, 0x1);
        gbc.writeMem(0x7a00, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf5a8, gbc.sp());
        EXPECT(0x7a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0105
        gbc.setState(0x5879, 0x7356, 0x9060, 0xdbaa, 0x7071, 0x347b, 0x0, 0x1);
        gbc.writeMem(0x5879, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7356, gbc.sp());
        EXPECT(0x587b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0106
        gbc.setState(0xc74, 0x29ad, 0x4410, 0x99e5, 0x2344, 0x7f08, 0x1, 0x1);
        gbc.writeMem(0xc74, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x29ad, gbc.sp());
        EXPECT(0xc76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0107
        gbc.setState(0x8917, 0x2ed7, 0xf4b0, 0x90fb, 0x2445, 0xe8a6, 0x1, 0x0);
        gbc.writeMem(0x8917, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2ed7, gbc.sp());
        EXPECT(0x8919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8917));
        EXPECT(0xa5, gbc.readMem(0x8918));
        // CB A5 0108
        gbc.setState(0xc0a7, 0x9d50, 0xfca0, 0x5314, 0x4199, 0x3a1c, 0x0, 0x0);
        gbc.writeMem(0xc0a7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9d50, gbc.sp());
        EXPECT(0xc0a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a7));
        EXPECT(0xa5, gbc.readMem(0xc0a8));
        // CB A5 0109
        gbc.setState(0x565c, 0x7e27, 0xe2b0, 0x5a61, 0x6d30, 0x380, 0x0, 0x0);
        gbc.writeMem(0x565c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7e27, gbc.sp());
        EXPECT(0x565e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 010A
        gbc.setState(0x7e38, 0x20d8, 0x5da0, 0x9989, 0xc5bf, 0xecf9, 0x1, 0x0);
        gbc.writeMem(0x7e38, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x20d8, gbc.sp());
        EXPECT(0x7e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 010B
        gbc.setState(0x461a, 0x5f9e, 0xfbf0, 0x7012, 0xb7f9, 0x3646, 0x0, 0x1);
        gbc.writeMem(0x461a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5f9e, gbc.sp());
        EXPECT(0x461c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 010C
        gbc.setState(0x4c75, 0x740a, 0x9500, 0xc22f, 0x949e, 0x8270, 0x1, 0x1);
        gbc.writeMem(0x4c75, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x740a, gbc.sp());
        EXPECT(0x4c77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 010D
        gbc.setState(0xe65c, 0x4b7, 0xc2e0, 0x58b4, 0x1f45, 0x36ad, 0x1, 0x1);
        gbc.writeMem(0xe65c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4b7, gbc.sp());
        EXPECT(0xe65e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe65c));
        EXPECT(0xa5, gbc.readMem(0xe65d));
        // CB A5 010F
        gbc.setState(0x126d, 0x6a42, 0xacb0, 0x42cf, 0x4279, 0x75f8, 0x0, 0x0);
        gbc.writeMem(0x126d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6a42, gbc.sp());
        EXPECT(0x126f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0110
        gbc.setState(0x5683, 0xe832, 0x41e0, 0x471e, 0x3308, 0x3e89, 0x1, 0x0);
        gbc.writeMem(0x5683, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe832, gbc.sp());
        EXPECT(0x5685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0111
        gbc.setState(0x972c, 0x9d53, 0xcb80, 0x5798, 0xaa88, 0xffee, 0x0, 0x1);
        gbc.writeMem(0x972c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9d53, gbc.sp());
        EXPECT(0x972e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x972c));
        EXPECT(0xa5, gbc.readMem(0x972d));
        // CB A5 0112
        gbc.setState(0xe373, 0x1edb, 0xee90, 0xf420, 0xdd3d, 0xb2d9, 0x1, 0x0);
        gbc.writeMem(0xe373, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1edb, gbc.sp());
        EXPECT(0xe375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe373));
        EXPECT(0xa5, gbc.readMem(0xe374));
        // CB A5 0113
        gbc.setState(0x4741, 0xb0d7, 0xb970, 0x5828, 0xc890, 0x6e4f, 0x0, 0x0);
        gbc.writeMem(0x4741, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb0d7, gbc.sp());
        EXPECT(0x4743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0114
        gbc.setState(0x67c7, 0x1194, 0x1820, 0xee5, 0x104f, 0x7545, 0x1, 0x0);
        gbc.writeMem(0x67c7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1194, gbc.sp());
        EXPECT(0x67c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0115
        gbc.setState(0xe491, 0x7179, 0x6a70, 0x121f, 0xfd85, 0xe732, 0x0, 0x1);
        gbc.writeMem(0xe491, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7179, gbc.sp());
        EXPECT(0xe493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe491));
        EXPECT(0xa5, gbc.readMem(0xe492));
        // CB A5 0116
        gbc.setState(0xd6ab, 0xfbd0, 0xc840, 0xda91, 0xa79c, 0x8fff, 0x1, 0x1);
        gbc.writeMem(0xd6ab, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xfbd0, gbc.sp());
        EXPECT(0xd6ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ab));
        EXPECT(0xa5, gbc.readMem(0xd6ac));
        // CB A5 0117
        gbc.setState(0x890a, 0x2f5c, 0xa430, 0xce36, 0x9512, 0x12e, 0x1, 0x0);
        gbc.writeMem(0x890a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2f5c, gbc.sp());
        EXPECT(0x890c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x890a));
        EXPECT(0xa5, gbc.readMem(0x890b));
        // CB A5 0118
        gbc.setState(0x940d, 0x4188, 0xe90, 0x5770, 0x2eb7, 0x2c31, 0x1, 0x0);
        gbc.writeMem(0x940d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4188, gbc.sp());
        EXPECT(0x940f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940d));
        EXPECT(0xa5, gbc.readMem(0x940e));
        // CB A5 0119
        gbc.setState(0x20c, 0x4c48, 0x64f0, 0x41f7, 0x3cb2, 0xa912, 0x0, 0x0);
        gbc.writeMem(0x20c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4c48, gbc.sp());
        EXPECT(0x20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 011A
        gbc.setState(0xda27, 0xa8a3, 0xd120, 0xf36d, 0x7912, 0xe7f2, 0x0, 0x0);
        gbc.writeMem(0xda27, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa8a3, gbc.sp());
        EXPECT(0xda29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda27));
        EXPECT(0xa5, gbc.readMem(0xda28));
        // CB A5 011C
        gbc.setState(0xa739, 0x5916, 0x4cc0, 0xe5f3, 0x35a0, 0x181, 0x0, 0x1);
        gbc.writeMem(0xa739, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5916, gbc.sp());
        EXPECT(0xa73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa739));
        EXPECT(0xa5, gbc.readMem(0xa73a));
        // CB A5 011D
        gbc.setState(0x7be8, 0x37d1, 0x35f0, 0x793f, 0x6ab3, 0x98db, 0x0, 0x1);
        gbc.writeMem(0x7be8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x37d1, gbc.sp());
        EXPECT(0x7bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 011E
        gbc.setState(0x3e44, 0x7148, 0x8680, 0x7d42, 0x271f, 0xc6de, 0x0, 0x0);
        gbc.writeMem(0x3e44, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7148, gbc.sp());
        EXPECT(0x3e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 011F
        gbc.setState(0x5c7d, 0x29b9, 0x5e70, 0x663b, 0x3e3a, 0x93c9, 0x1, 0x0);
        gbc.writeMem(0x5c7d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x29b9, gbc.sp());
        EXPECT(0x5c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0120
        gbc.setState(0xd971, 0x3050, 0x8900, 0xa932, 0x5eed, 0x6fb9, 0x1, 0x1);
        gbc.writeMem(0xd971, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3050, gbc.sp());
        EXPECT(0xd973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd971));
        EXPECT(0xa5, gbc.readMem(0xd972));
        // CB A5 0121
        gbc.setState(0x4d7e, 0x95c9, 0x6510, 0x276c, 0x45, 0xaa35, 0x0, 0x0);
        gbc.writeMem(0x4d7e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x95c9, gbc.sp());
        EXPECT(0x4d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0122
        gbc.setState(0x98c, 0x5c58, 0xf4e0, 0x1ad7, 0xec05, 0x8ac7, 0x0, 0x1);
        gbc.writeMem(0x98c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5c58, gbc.sp());
        EXPECT(0x98e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0123
        gbc.setState(0x3d7e, 0x5e08, 0xef80, 0x2b8a, 0x5160, 0x4e89, 0x1, 0x1);
        gbc.writeMem(0x3d7e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5e08, gbc.sp());
        EXPECT(0x3d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0124
        gbc.setState(0x4240, 0x82e7, 0x3550, 0x4a0e, 0x64a7, 0x1163, 0x0, 0x0);
        gbc.writeMem(0x4240, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x82e7, gbc.sp());
        EXPECT(0x4242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0125
        gbc.setState(0xc01a, 0x7825, 0x25b0, 0x7490, 0x45e8, 0xc352, 0x0, 0x0);
        gbc.writeMem(0xc01a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7825, gbc.sp());
        EXPECT(0xc01c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01a));
        EXPECT(0xa5, gbc.readMem(0xc01b));
        // CB A5 0126
        gbc.setState(0x693e, 0xccbe, 0x7b10, 0xb049, 0x8968, 0x2d0f, 0x0, 0x0);
        gbc.writeMem(0x693e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xccbe, gbc.sp());
        EXPECT(0x6940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0127
        gbc.setState(0x7d32, 0x41c2, 0xf520, 0x838b, 0x7f24, 0x38d5, 0x1, 0x1);
        gbc.writeMem(0x7d32, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x41c2, gbc.sp());
        EXPECT(0x7d34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0129
        gbc.setState(0x8f5c, 0xd6ed, 0x1ed0, 0xd4f8, 0xdd2f, 0x163, 0x0, 0x0);
        gbc.writeMem(0x8f5c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd6ed, gbc.sp());
        EXPECT(0x8f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f5c));
        EXPECT(0xa5, gbc.readMem(0x8f5d));
        // CB A5 012A
        gbc.setState(0x5a9d, 0xf09f, 0xbed0, 0x18ab, 0x27d7, 0x7108, 0x1, 0x1);
        gbc.writeMem(0x5a9d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf09f, gbc.sp());
        EXPECT(0x5a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 012B
        gbc.setState(0x9952, 0x5dc7, 0x10b0, 0x271a, 0xd041, 0x4474, 0x0, 0x1);
        gbc.writeMem(0x9952, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5dc7, gbc.sp());
        EXPECT(0x9954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9952));
        EXPECT(0xa5, gbc.readMem(0x9953));
        // CB A5 012C
        gbc.setState(0x43fd, 0x95d2, 0xb4c0, 0xe6a0, 0xd2e0, 0xf291, 0x0, 0x1);
        gbc.writeMem(0x43fd, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x95d2, gbc.sp());
        EXPECT(0x43ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 012D
        gbc.setState(0xd33b, 0x1df1, 0xeaf0, 0x9000, 0x9fd3, 0xf5b0, 0x0, 0x1);
        gbc.writeMem(0xd33b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1df1, gbc.sp());
        EXPECT(0xd33d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd33b));
        EXPECT(0xa5, gbc.readMem(0xd33c));
        // CB A5 012E
        gbc.setState(0xca9e, 0x9195, 0x64e0, 0x33ff, 0xc3a1, 0x31e0, 0x1, 0x1);
        gbc.writeMem(0xca9e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9195, gbc.sp());
        EXPECT(0xcaa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca9e));
        EXPECT(0xa5, gbc.readMem(0xca9f));
        // CB A5 012F
        gbc.setState(0xd985, 0xdecf, 0xb240, 0x6770, 0x7974, 0x40fc, 0x0, 0x1);
        gbc.writeMem(0xd985, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdecf, gbc.sp());
        EXPECT(0xd987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd985));
        EXPECT(0xa5, gbc.readMem(0xd986));
        // CB A5 0130
        gbc.setState(0xcfbf, 0x2f16, 0x9660, 0x2cc9, 0x2710, 0xa082, 0x0, 0x1);
        gbc.writeMem(0xcfbf, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2f16, gbc.sp());
        EXPECT(0xcfc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfbf));
        EXPECT(0xa5, gbc.readMem(0xcfc0));
        // CB A5 0131
        gbc.setState(0x8663, 0x1863, 0xf2b0, 0x1aba, 0x1799, 0x34dd, 0x0, 0x1);
        gbc.writeMem(0x8663, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1863, gbc.sp());
        EXPECT(0x8665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8663));
        EXPECT(0xa5, gbc.readMem(0x8664));
        // CB A5 0132
        gbc.setState(0xe1f4, 0x9e3a, 0x79c0, 0x580c, 0x2c8d, 0x2a66, 0x0, 0x1);
        gbc.writeMem(0xe1f4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9e3a, gbc.sp());
        EXPECT(0xe1f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f4));
        EXPECT(0xa5, gbc.readMem(0xe1f5));
        // CB A5 0133
        gbc.setState(0x2afe, 0xd144, 0x2330, 0xd98c, 0x9851, 0x1ec3, 0x1, 0x0);
        gbc.writeMem(0x2afe, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd144, gbc.sp());
        EXPECT(0x2b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0134
        gbc.setState(0x9a3a, 0x8792, 0xab30, 0xc158, 0xc662, 0x8fab, 0x0, 0x1);
        gbc.writeMem(0x9a3a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8792, gbc.sp());
        EXPECT(0x9a3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a3a));
        EXPECT(0xa5, gbc.readMem(0x9a3b));
        // CB A5 0135
        gbc.setState(0x8279, 0x1cd6, 0xb7d0, 0x7311, 0xf51b, 0xfbef, 0x1, 0x1);
        gbc.writeMem(0x8279, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1cd6, gbc.sp());
        EXPECT(0x827b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8279));
        EXPECT(0xa5, gbc.readMem(0x827a));
        // CB A5 0136
        gbc.setState(0x5fe5, 0xafb7, 0x7c80, 0xa1be, 0xa9a, 0xe644, 0x0, 0x1);
        gbc.writeMem(0x5fe5, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xafb7, gbc.sp());
        EXPECT(0x5fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0138
        gbc.setState(0x369d, 0xad5d, 0x8550, 0xf041, 0xc88e, 0x9660, 0x1, 0x0);
        gbc.writeMem(0x369d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xad5d, gbc.sp());
        EXPECT(0x369f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0139
        gbc.setState(0xecea, 0x6b62, 0x5a0, 0x1e39, 0xd076, 0xf72a, 0x1, 0x0);
        gbc.writeMem(0xecea, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6b62, gbc.sp());
        EXPECT(0xecec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecea));
        EXPECT(0xa5, gbc.readMem(0xeceb));
        // CB A5 013A
        gbc.setState(0xb8f1, 0x1c44, 0xbd60, 0xb237, 0x838b, 0x7d3, 0x1, 0x1);
        gbc.writeMem(0xb8f1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1c44, gbc.sp());
        EXPECT(0xb8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f1));
        EXPECT(0xa5, gbc.readMem(0xb8f2));
        // CB A5 013B
        gbc.setState(0xc20a, 0xadb9, 0xbf0, 0x43e4, 0x3bab, 0x1e71, 0x0, 0x0);
        gbc.writeMem(0xc20a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xadb9, gbc.sp());
        EXPECT(0xc20c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc20a));
        EXPECT(0xa5, gbc.readMem(0xc20b));
        // CB A5 013C
        gbc.setState(0xe313, 0xd1e0, 0x18e0, 0xb532, 0x8bfa, 0xb284, 0x1, 0x0);
        gbc.writeMem(0xe313, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd1e0, gbc.sp());
        EXPECT(0xe315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe313));
        EXPECT(0xa5, gbc.readMem(0xe314));
        // CB A5 013D
        gbc.setState(0x96f0, 0x8a, 0xde80, 0xb719, 0xca06, 0x9195, 0x1, 0x1);
        gbc.writeMem(0x96f0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8a, gbc.sp());
        EXPECT(0x96f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f0));
        EXPECT(0xa5, gbc.readMem(0x96f1));
        // CB A5 013E
        gbc.setState(0x9c61, 0x8a59, 0xe4e0, 0xff9b, 0xee06, 0xd771, 0x1, 0x1);
        gbc.writeMem(0x9c61, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8a59, gbc.sp());
        EXPECT(0x9c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c61));
        EXPECT(0xa5, gbc.readMem(0x9c62));
        // CB A5 013F
        gbc.setState(0x7a9f, 0x6ad2, 0xe990, 0x3b09, 0x3373, 0x421f, 0x1, 0x1);
        gbc.writeMem(0x7a9f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6ad2, gbc.sp());
        EXPECT(0x7aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0140
        gbc.setState(0xad14, 0x4126, 0x1ed0, 0xd506, 0x2e4a, 0xaa6a, 0x1, 0x1);
        gbc.writeMem(0xad14, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4126, gbc.sp());
        EXPECT(0xad16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad14));
        EXPECT(0xa5, gbc.readMem(0xad15));
        // CB A5 0141
        gbc.setState(0x8eb, 0x5a92, 0xd450, 0x86fb, 0xa6d6, 0xc4e5, 0x0, 0x1);
        gbc.writeMem(0x8eb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5a92, gbc.sp());
        EXPECT(0x8ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0142
        gbc.setState(0x1d69, 0x11a2, 0x43e0, 0x91af, 0xeb75, 0xeeec, 0x1, 0x0);
        gbc.writeMem(0x1d69, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x11a2, gbc.sp());
        EXPECT(0x1d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0143
        gbc.setState(0x418c, 0xb001, 0x8720, 0x6b7a, 0xa52f, 0x2d9f, 0x1, 0x1);
        gbc.writeMem(0x418c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb001, gbc.sp());
        EXPECT(0x418e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0144
        gbc.setState(0x3c25, 0xb5a8, 0x4ab0, 0xac0f, 0x9230, 0x9008, 0x0, 0x0);
        gbc.writeMem(0x3c25, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb5a8, gbc.sp());
        EXPECT(0x3c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0145
        gbc.setState(0xbb85, 0x3420, 0xa370, 0x36ab, 0xff1d, 0x3f43, 0x1, 0x0);
        gbc.writeMem(0xbb85, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3420, gbc.sp());
        EXPECT(0xbb87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb85));
        EXPECT(0xa5, gbc.readMem(0xbb86));
        // CB A5 0146
        gbc.setState(0x9dd8, 0x8c5, 0x5f40, 0xaa65, 0xb54, 0x116f, 0x1, 0x0);
        gbc.writeMem(0x9dd8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8c5, gbc.sp());
        EXPECT(0x9dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd8));
        EXPECT(0xa5, gbc.readMem(0x9dd9));
        // CB A5 0147
        gbc.setState(0xdf4c, 0x8b25, 0xde0, 0x3d75, 0xd920, 0x7165, 0x1, 0x0);
        gbc.writeMem(0xdf4c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8b25, gbc.sp());
        EXPECT(0xdf4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf4c));
        EXPECT(0xa5, gbc.readMem(0xdf4d));
        // CB A5 0148
        gbc.setState(0x221e, 0x4475, 0xa860, 0x1c58, 0x49f7, 0xe542, 0x0, 0x0);
        gbc.writeMem(0x221e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4475, gbc.sp());
        EXPECT(0x2220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0149
        gbc.setState(0x1432, 0xdcc1, 0x1ad0, 0x7f54, 0x2a9a, 0xb217, 0x0, 0x0);
        gbc.writeMem(0x1432, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdcc1, gbc.sp());
        EXPECT(0x1434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 014A
        gbc.setState(0x888c, 0xc856, 0x6d70, 0xd8e2, 0x3ed9, 0x6264, 0x0, 0x0);
        gbc.writeMem(0x888c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc856, gbc.sp());
        EXPECT(0x888e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888c));
        EXPECT(0xa5, gbc.readMem(0x888d));
        // CB A5 014B
        gbc.setState(0xd134, 0x843f, 0x40b0, 0x403b, 0x8c61, 0xa55f, 0x0, 0x0);
        gbc.writeMem(0xd134, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x843f, gbc.sp());
        EXPECT(0xd136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd134));
        EXPECT(0xa5, gbc.readMem(0xd135));
        // CB A5 014C
        gbc.setState(0xebdd, 0x49ac, 0x9cb0, 0x8e89, 0x9cf8, 0x2765, 0x1, 0x1);
        gbc.writeMem(0xebdd, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x49ac, gbc.sp());
        EXPECT(0xebdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebdd));
        EXPECT(0xa5, gbc.readMem(0xebde));
        // CB A5 014E
        gbc.setState(0xd31e, 0x6727, 0x9560, 0xfe64, 0xd683, 0xba04, 0x0, 0x1);
        gbc.writeMem(0xd31e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6727, gbc.sp());
        EXPECT(0xd320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd31e));
        EXPECT(0xa5, gbc.readMem(0xd31f));
        // CB A5 014F
        gbc.setState(0xb798, 0xdc9f, 0xd520, 0x5e45, 0xf6a3, 0x41ca, 0x0, 0x1);
        gbc.writeMem(0xb798, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdc9f, gbc.sp());
        EXPECT(0xb79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb798));
        EXPECT(0xa5, gbc.readMem(0xb799));
        // CB A5 0150
        gbc.setState(0x770e, 0x272a, 0xf0c0, 0xe0a4, 0xd07e, 0x115e, 0x0, 0x0);
        gbc.writeMem(0x770e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x272a, gbc.sp());
        EXPECT(0x7710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0151
        gbc.setState(0x9a63, 0x8178, 0xc080, 0x18b7, 0x1f6d, 0xe6d9, 0x0, 0x0);
        gbc.writeMem(0x9a63, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8178, gbc.sp());
        EXPECT(0x9a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a63));
        EXPECT(0xa5, gbc.readMem(0x9a64));
        // CB A5 0152
        gbc.setState(0x5f48, 0x1e0, 0xc010, 0x19cf, 0x3d5e, 0x582f, 0x0, 0x1);
        gbc.writeMem(0x5f48, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1e0, gbc.sp());
        EXPECT(0x5f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0153
        gbc.setState(0x116f, 0x9fc2, 0x75a0, 0xb59a, 0xd3da, 0xd7e6, 0x1, 0x0);
        gbc.writeMem(0x116f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9fc2, gbc.sp());
        EXPECT(0x1171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0154
        gbc.setState(0x15ca, 0x9d37, 0x5a30, 0xfdd3, 0x538a, 0x292c, 0x0, 0x0);
        gbc.writeMem(0x15ca, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9d37, gbc.sp());
        EXPECT(0x15cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0155
        gbc.setState(0x2d1d, 0xd559, 0x1e20, 0xa665, 0x974f, 0xacea, 0x1, 0x1);
        gbc.writeMem(0x2d1d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd559, gbc.sp());
        EXPECT(0x2d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0156
        gbc.setState(0x7f29, 0xf72d, 0x360, 0x783b, 0xb5d1, 0xdadc, 0x1, 0x0);
        gbc.writeMem(0x7f29, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf72d, gbc.sp());
        EXPECT(0x7f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0157
        gbc.setState(0x610c, 0x546, 0xdfb0, 0x2e6f, 0x15a9, 0xb1fd, 0x1, 0x0);
        gbc.writeMem(0x610c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x546, gbc.sp());
        EXPECT(0x610e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0158
        gbc.setState(0x1dc3, 0xcfd8, 0x84a0, 0x17ee, 0x69d1, 0x42b, 0x1, 0x0);
        gbc.writeMem(0x1dc3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcfd8, gbc.sp());
        EXPECT(0x1dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 015A
        gbc.setState(0xe3a1, 0x8f83, 0x780, 0xe5b3, 0x323f, 0x2fda, 0x0, 0x1);
        gbc.writeMem(0xe3a1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8f83, gbc.sp());
        EXPECT(0xe3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a1));
        EXPECT(0xa5, gbc.readMem(0xe3a2));
        // CB A5 015B
        gbc.setState(0x6043, 0xe00a, 0x7b40, 0x1c09, 0x6a12, 0x2f88, 0x0, 0x0);
        gbc.writeMem(0x6043, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe00a, gbc.sp());
        EXPECT(0x6045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 015C
        gbc.setState(0x4d8a, 0xddd8, 0xc1b0, 0xe23c, 0xeb74, 0xcc22, 0x0, 0x0);
        gbc.writeMem(0x4d8a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xddd8, gbc.sp());
        EXPECT(0x4d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 015D
        gbc.setState(0xa71b, 0x1e40, 0x57e0, 0xa23e, 0xc8c0, 0x625e, 0x0, 0x1);
        gbc.writeMem(0xa71b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1e40, gbc.sp());
        EXPECT(0xa71d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa71b));
        EXPECT(0xa5, gbc.readMem(0xa71c));
        // CB A5 015E
        gbc.setState(0xc2cb, 0xaf07, 0x9110, 0xfd14, 0x2a08, 0xcbbf, 0x1, 0x0);
        gbc.writeMem(0xc2cb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xaf07, gbc.sp());
        EXPECT(0xc2cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2cb));
        EXPECT(0xa5, gbc.readMem(0xc2cc));
        // CB A5 015F
        gbc.setState(0x6608, 0x3880, 0x1a40, 0x57e1, 0x8ee4, 0x7d1c, 0x1, 0x1);
        gbc.writeMem(0x6608, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3880, gbc.sp());
        EXPECT(0x660a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0160
        gbc.setState(0x527, 0x316c, 0x5400, 0x6e3f, 0x29b7, 0xa5ef, 0x0, 0x1);
        gbc.writeMem(0x527, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x316c, gbc.sp());
        EXPECT(0x529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0161
        gbc.setState(0x9de4, 0x4b06, 0x8b00, 0x6307, 0xe29f, 0xef5b, 0x0, 0x1);
        gbc.writeMem(0x9de4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4b06, gbc.sp());
        EXPECT(0x9de6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de4));
        EXPECT(0xa5, gbc.readMem(0x9de5));
        // CB A5 0162
        gbc.setState(0x34b5, 0xf78, 0x92d0, 0x1d91, 0xa16f, 0x324a, 0x0, 0x1);
        gbc.writeMem(0x34b5, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf78, gbc.sp());
        EXPECT(0x34b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0163
        gbc.setState(0x8c9f, 0xf583, 0x5150, 0x7c0f, 0xc56e, 0x7b7a, 0x0, 0x0);
        gbc.writeMem(0x8c9f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf583, gbc.sp());
        EXPECT(0x8ca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c9f));
        EXPECT(0xa5, gbc.readMem(0x8ca0));
        // CB A5 0164
        gbc.setState(0x9ee8, 0xb382, 0x1860, 0x604f, 0x7c30, 0x3c99, 0x0, 0x1);
        gbc.writeMem(0x9ee8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb382, gbc.sp());
        EXPECT(0x9eea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee8));
        EXPECT(0xa5, gbc.readMem(0x9ee9));
        // CB A5 0165
        gbc.setState(0xe2e9, 0x69e7, 0x68c0, 0xa311, 0xaadd, 0xd876, 0x0, 0x0);
        gbc.writeMem(0xe2e9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x69e7, gbc.sp());
        EXPECT(0xe2eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e9));
        EXPECT(0xa5, gbc.readMem(0xe2ea));
        // CB A5 0166
        gbc.setState(0xc42d, 0x2af6, 0xd940, 0xbdb8, 0x8255, 0xd9c1, 0x0, 0x1);
        gbc.writeMem(0xc42d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2af6, gbc.sp());
        EXPECT(0xc42f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc42d));
        EXPECT(0xa5, gbc.readMem(0xc42e));
        // CB A5 0169
        gbc.setState(0xe01a, 0x14ff, 0xcf60, 0x17f5, 0x25be, 0x82d8, 0x0, 0x1);
        gbc.writeMem(0xe01a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x14ff, gbc.sp());
        EXPECT(0xe01c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe01a));
        EXPECT(0xa5, gbc.readMem(0xe01b));
        // CB A5 016A
        gbc.setState(0x45a1, 0x5849, 0xabf0, 0xbc4c, 0xa82c, 0x377d, 0x1, 0x1);
        gbc.writeMem(0x45a1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5849, gbc.sp());
        EXPECT(0x45a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 016B
        gbc.setState(0xb750, 0x12d9, 0xc4f0, 0x5766, 0xb82e, 0x97e4, 0x0, 0x1);
        gbc.writeMem(0xb750, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x12d9, gbc.sp());
        EXPECT(0xb752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb750));
        EXPECT(0xa5, gbc.readMem(0xb751));
        // CB A5 016C
        gbc.setState(0x1173, 0xca90, 0xffa0, 0xd13b, 0xc2f9, 0xadd2, 0x0, 0x1);
        gbc.writeMem(0x1173, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xca90, gbc.sp());
        EXPECT(0x1175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 016D
        gbc.setState(0xa4d6, 0x2d03, 0x1810, 0x5ad8, 0xf093, 0x6226, 0x0, 0x1);
        gbc.writeMem(0xa4d6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2d03, gbc.sp());
        EXPECT(0xa4d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d6));
        EXPECT(0xa5, gbc.readMem(0xa4d7));
        // CB A5 016F
        gbc.setState(0x1cb, 0xca68, 0xe4b0, 0x8d4f, 0x1c34, 0x3f61, 0x1, 0x1);
        gbc.writeMem(0x1cb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xca68, gbc.sp());
        EXPECT(0x1cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0170
        gbc.setState(0xe4f9, 0x19d2, 0x2eb0, 0xeb70, 0xf0f8, 0x1fd2, 0x1, 0x0);
        gbc.writeMem(0xe4f9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x19d2, gbc.sp());
        EXPECT(0xe4fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f9));
        EXPECT(0xa5, gbc.readMem(0xe4fa));
        // CB A5 0171
        gbc.setState(0x68af, 0xbbf1, 0x51a0, 0x4d1c, 0x959d, 0x852f, 0x1, 0x1);
        gbc.writeMem(0x68af, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbbf1, gbc.sp());
        EXPECT(0x68b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0172
        gbc.setState(0x44f1, 0xe934, 0x2f90, 0x8a0a, 0x7cf2, 0x6ea6, 0x0, 0x1);
        gbc.writeMem(0x44f1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe934, gbc.sp());
        EXPECT(0x44f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0173
        gbc.setState(0x5835, 0x19f5, 0x14b0, 0x3cf6, 0x942c, 0x2458, 0x1, 0x1);
        gbc.writeMem(0x5835, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x19f5, gbc.sp());
        EXPECT(0x5837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0174
        gbc.setState(0xabda, 0x6b51, 0xe8d0, 0x5a4b, 0x109b, 0x6ed4, 0x1, 0x1);
        gbc.writeMem(0xabda, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6b51, gbc.sp());
        EXPECT(0xabdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabda));
        EXPECT(0xa5, gbc.readMem(0xabdb));
        // CB A5 0176
        gbc.setState(0x4884, 0x5e2b, 0x6d40, 0x3ec9, 0x6a56, 0x427d, 0x1, 0x1);
        gbc.writeMem(0x4884, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5e2b, gbc.sp());
        EXPECT(0x4886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0177
        gbc.setState(0xc60d, 0x5208, 0xb280, 0xd496, 0x226e, 0x4efc, 0x1, 0x1);
        gbc.writeMem(0xc60d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5208, gbc.sp());
        EXPECT(0xc60f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc60d));
        EXPECT(0xa5, gbc.readMem(0xc60e));
        // CB A5 0178
        gbc.setState(0xae04, 0x3ce8, 0xdcd0, 0x1aa6, 0xccbe, 0x95eb, 0x0, 0x1);
        gbc.writeMem(0xae04, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3ce8, gbc.sp());
        EXPECT(0xae06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae04));
        EXPECT(0xa5, gbc.readMem(0xae05));
        // CB A5 0179
        gbc.setState(0xc284, 0x8182, 0xea70, 0xb220, 0xa6cb, 0x7490, 0x1, 0x1);
        gbc.writeMem(0xc284, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8182, gbc.sp());
        EXPECT(0xc286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc284));
        EXPECT(0xa5, gbc.readMem(0xc285));
        // CB A5 017A
        gbc.setState(0xe276, 0xf28c, 0x16c0, 0xc709, 0x997e, 0xa532, 0x0, 0x0);
        gbc.writeMem(0xe276, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf28c, gbc.sp());
        EXPECT(0xe278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe276));
        EXPECT(0xa5, gbc.readMem(0xe277));
        // CB A5 017B
        gbc.setState(0x5098, 0x4d97, 0x66e0, 0x6c65, 0xf105, 0x4ddd, 0x1, 0x0);
        gbc.writeMem(0x5098, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4d97, gbc.sp());
        EXPECT(0x509a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 017C
        gbc.setState(0x6b4a, 0xfeb7, 0xdba0, 0xebc0, 0x1242, 0xd03b, 0x1, 0x1);
        gbc.writeMem(0x6b4a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfeb7, gbc.sp());
        EXPECT(0x6b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 017D
        gbc.setState(0xb6, 0x34f5, 0x4540, 0x5845, 0x296e, 0x1679, 0x0, 0x1);
        gbc.writeMem(0xb6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x34f5, gbc.sp());
        EXPECT(0xb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 017E
        gbc.setState(0x319e, 0xdc88, 0x4390, 0x6fbd, 0xd7cb, 0xc649, 0x1, 0x0);
        gbc.writeMem(0x319e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdc88, gbc.sp());
        EXPECT(0x31a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 017F
        gbc.setState(0x1bcf, 0x4020, 0x5be0, 0x55bf, 0x5fbe, 0xe51f, 0x1, 0x1);
        gbc.writeMem(0x1bcf, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4020, gbc.sp());
        EXPECT(0x1bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0180
        gbc.setState(0x2aa6, 0x1e92, 0xb30, 0x1edb, 0x3439, 0x117f, 0x0, 0x1);
        gbc.writeMem(0x2aa6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1e92, gbc.sp());
        EXPECT(0x2aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0181
        gbc.setState(0x5c75, 0x14d3, 0xa9f0, 0xf8d7, 0x5053, 0xeb4b, 0x1, 0x1);
        gbc.writeMem(0x5c75, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x14d3, gbc.sp());
        EXPECT(0x5c77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0182
        gbc.setState(0xc255, 0x8f52, 0x4420, 0x6111, 0x98fb, 0xcec1, 0x0, 0x1);
        gbc.writeMem(0xc255, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8f52, gbc.sp());
        EXPECT(0xc257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc255));
        EXPECT(0xa5, gbc.readMem(0xc256));
        // CB A5 0183
        gbc.setState(0xcf29, 0x2da1, 0x1920, 0x43f7, 0xface, 0x5f0e, 0x1, 0x0);
        gbc.writeMem(0xcf29, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2da1, gbc.sp());
        EXPECT(0xcf2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf29));
        EXPECT(0xa5, gbc.readMem(0xcf2a));
        // CB A5 0184
        gbc.setState(0x39d8, 0x7c6f, 0x28f0, 0x6ce6, 0x558f, 0x1747, 0x0, 0x0);
        gbc.writeMem(0x39d8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7c6f, gbc.sp());
        EXPECT(0x39da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0185
        gbc.setState(0x359c, 0xbbce, 0x5460, 0x75d0, 0xeace, 0xe117, 0x1, 0x1);
        gbc.writeMem(0x359c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbbce, gbc.sp());
        EXPECT(0x359e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0186
        gbc.setState(0x85e8, 0xe698, 0x1680, 0x64a2, 0xa53b, 0x1f36, 0x0, 0x0);
        gbc.writeMem(0x85e8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe698, gbc.sp());
        EXPECT(0x85ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e8));
        EXPECT(0xa5, gbc.readMem(0x85e9));
        // CB A5 0187
        gbc.setState(0xb3, 0xb81a, 0xa9b0, 0xa946, 0x1961, 0x5f1, 0x0, 0x0);
        gbc.writeMem(0xb3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb81a, gbc.sp());
        EXPECT(0xb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0188
        gbc.setState(0x7607, 0x2ea0, 0x83b0, 0x6683, 0x2aa3, 0x2a18, 0x1, 0x0);
        gbc.writeMem(0x7607, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2ea0, gbc.sp());
        EXPECT(0x7609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0189
        gbc.setState(0xe6b3, 0xf140, 0x10a0, 0xd298, 0xbc37, 0xde53, 0x1, 0x0);
        gbc.writeMem(0xe6b3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf140, gbc.sp());
        EXPECT(0xe6b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b3));
        EXPECT(0xa5, gbc.readMem(0xe6b4));
        // CB A5 018A
        gbc.setState(0xe0, 0x95ab, 0x67a0, 0xadec, 0x7183, 0x279a, 0x1, 0x1);
        gbc.writeMem(0xe0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x95ab, gbc.sp());
        EXPECT(0xe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 018B
        gbc.setState(0x1f03, 0x9c83, 0x97d0, 0xe745, 0xd3bd, 0xd66c, 0x0, 0x1);
        gbc.writeMem(0x1f03, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9c83, gbc.sp());
        EXPECT(0x1f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 018C
        gbc.setState(0x631b, 0xd009, 0xd7d0, 0x5b35, 0xfc1a, 0x7af, 0x0, 0x0);
        gbc.writeMem(0x631b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd009, gbc.sp());
        EXPECT(0x631d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 018D
        gbc.setState(0xc459, 0x73aa, 0x730, 0x34c0, 0x49b4, 0x774d, 0x0, 0x0);
        gbc.writeMem(0xc459, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x73aa, gbc.sp());
        EXPECT(0xc45b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc459));
        EXPECT(0xa5, gbc.readMem(0xc45a));
        // CB A5 018F
        gbc.setState(0xedb1, 0x8f5, 0xe590, 0x1560, 0xdcbb, 0xf997, 0x0, 0x1);
        gbc.writeMem(0xedb1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8f5, gbc.sp());
        EXPECT(0xedb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb1));
        EXPECT(0xa5, gbc.readMem(0xedb2));
        // CB A5 0190
        gbc.setState(0x6f7, 0x8ae8, 0xce40, 0xbb73, 0xe12, 0x71e0, 0x0, 0x0);
        gbc.writeMem(0x6f7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8ae8, gbc.sp());
        EXPECT(0x6f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0192
        gbc.setState(0xb0a, 0xf2fe, 0x6f0, 0x3b43, 0x9edf, 0x80d5, 0x0, 0x0);
        gbc.writeMem(0xb0a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf2fe, gbc.sp());
        EXPECT(0xb0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0193
        gbc.setState(0x460c, 0x8b32, 0x8ce0, 0x8ef9, 0x418f, 0xb1b9, 0x1, 0x1);
        gbc.writeMem(0x460c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8b32, gbc.sp());
        EXPECT(0x460e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0194
        gbc.setState(0x7122, 0x604d, 0x7f80, 0x7888, 0x809e, 0xbeb, 0x0, 0x1);
        gbc.writeMem(0x7122, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x604d, gbc.sp());
        EXPECT(0x7124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0195
        gbc.setState(0x20f, 0xbb14, 0x2e80, 0x8347, 0x40b1, 0x96d8, 0x1, 0x0);
        gbc.writeMem(0x20f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbb14, gbc.sp());
        EXPECT(0x211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0196
        gbc.setState(0x1a83, 0x983, 0x9000, 0x8476, 0x4e41, 0x2f4c, 0x0, 0x1);
        gbc.writeMem(0x1a83, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x983, gbc.sp());
        EXPECT(0x1a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0197
        gbc.setState(0x945e, 0x5e4, 0x8310, 0xe461, 0x2178, 0x20d9, 0x1, 0x1);
        gbc.writeMem(0x945e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5e4, gbc.sp());
        EXPECT(0x9460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945e));
        EXPECT(0xa5, gbc.readMem(0x945f));
        // CB A5 0198
        gbc.setState(0xa7d0, 0xd558, 0xcc70, 0xb744, 0x54dd, 0x6821, 0x0, 0x1);
        gbc.writeMem(0xa7d0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd558, gbc.sp());
        EXPECT(0xa7d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d0));
        EXPECT(0xa5, gbc.readMem(0xa7d1));
        // CB A5 0199
        gbc.setState(0xce39, 0xbe36, 0x2a10, 0x2a65, 0x3248, 0xd7d2, 0x1, 0x1);
        gbc.writeMem(0xce39, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbe36, gbc.sp());
        EXPECT(0xce3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce39));
        EXPECT(0xa5, gbc.readMem(0xce3a));
        // CB A5 019A
        gbc.setState(0x5003, 0x1795, 0xd3a0, 0xc14a, 0x51b, 0x1c93, 0x0, 0x1);
        gbc.writeMem(0x5003, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1795, gbc.sp());
        EXPECT(0x5005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 019B
        gbc.setState(0x847b, 0x4687, 0x9130, 0xd91f, 0xa07c, 0xc365, 0x0, 0x0);
        gbc.writeMem(0x847b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4687, gbc.sp());
        EXPECT(0x847d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x847b));
        EXPECT(0xa5, gbc.readMem(0x847c));
        // CB A5 019C
        gbc.setState(0x1148, 0xc646, 0x4ae0, 0x579a, 0xe949, 0x2c82, 0x0, 0x1);
        gbc.writeMem(0x1148, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc646, gbc.sp());
        EXPECT(0x114a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 019D
        gbc.setState(0x68b, 0xd317, 0x9f20, 0x3263, 0xd8f0, 0x84ba, 0x0, 0x0);
        gbc.writeMem(0x68b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd317, gbc.sp());
        EXPECT(0x68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 019E
        gbc.setState(0xc711, 0x24ce, 0x5410, 0xf8cc, 0x59a9, 0x904a, 0x0, 0x0);
        gbc.writeMem(0xc711, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x24ce, gbc.sp());
        EXPECT(0xc713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc711));
        EXPECT(0xa5, gbc.readMem(0xc712));
        // CB A5 019F
        gbc.setState(0x1b08, 0xec50, 0xa500, 0xa893, 0x8d02, 0x41e7, 0x1, 0x0);
        gbc.writeMem(0x1b08, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xec50, gbc.sp());
        EXPECT(0x1b0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01A0
        gbc.setState(0xb475, 0x546f, 0x38d0, 0x4047, 0xbe6a, 0xa7c, 0x0, 0x1);
        gbc.writeMem(0xb475, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x546f, gbc.sp());
        EXPECT(0xb477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb475));
        EXPECT(0xa5, gbc.readMem(0xb476));
        // CB A5 01A1
        gbc.setState(0x6042, 0xe9e5, 0xfe50, 0x16e0, 0xcbc5, 0xcbfc, 0x0, 0x0);
        gbc.writeMem(0x6042, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe9e5, gbc.sp());
        EXPECT(0x6044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01A2
        gbc.setState(0xd30c, 0xfb22, 0xcbf0, 0x3aae, 0xb7d8, 0x805b, 0x0, 0x1);
        gbc.writeMem(0xd30c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xfb22, gbc.sp());
        EXPECT(0xd30e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd30c));
        EXPECT(0xa5, gbc.readMem(0xd30d));
        // CB A5 01A3
        gbc.setState(0x2533, 0x8333, 0xbe10, 0x10e0, 0x329, 0xdf3f, 0x1, 0x0);
        gbc.writeMem(0x2533, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8333, gbc.sp());
        EXPECT(0x2535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01A4
        gbc.setState(0x5725, 0xf962, 0x480, 0x17de, 0xe8bd, 0xf6be, 0x0, 0x1);
        gbc.writeMem(0x5725, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf962, gbc.sp());
        EXPECT(0x5727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01A5
        gbc.setState(0xd47f, 0xf81, 0xa4f0, 0x142c, 0x23f3, 0x5c80, 0x0, 0x0);
        gbc.writeMem(0xd47f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf81, gbc.sp());
        EXPECT(0xd481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd47f));
        EXPECT(0xa5, gbc.readMem(0xd480));
        // CB A5 01A6
        gbc.setState(0x9671, 0x1123, 0xc470, 0xe56a, 0x296f, 0x2af8, 0x1, 0x0);
        gbc.writeMem(0x9671, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1123, gbc.sp());
        EXPECT(0x9673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9671));
        EXPECT(0xa5, gbc.readMem(0x9672));
        // CB A5 01A7
        gbc.setState(0xd2ad, 0xc327, 0x6950, 0x412b, 0x43af, 0xe359, 0x0, 0x0);
        gbc.writeMem(0xd2ad, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc327, gbc.sp());
        EXPECT(0xd2af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2ad));
        EXPECT(0xa5, gbc.readMem(0xd2ae));
        // CB A5 01A8
        gbc.setState(0x624d, 0x4456, 0x530, 0xdeaf, 0x7eca, 0xe00f, 0x1, 0x0);
        gbc.writeMem(0x624d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4456, gbc.sp());
        EXPECT(0x624f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01A9
        gbc.setState(0x4852, 0xcb2, 0x6720, 0xb161, 0x450e, 0x9605, 0x0, 0x1);
        gbc.writeMem(0x4852, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcb2, gbc.sp());
        EXPECT(0x4854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01AA
        gbc.setState(0x2253, 0xb391, 0x88e0, 0xd1a3, 0x24b8, 0xace1, 0x1, 0x1);
        gbc.writeMem(0x2253, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb391, gbc.sp());
        EXPECT(0x2255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01AB
        gbc.setState(0xa4cb, 0xba2c, 0x73c0, 0x4491, 0x59e, 0xab46, 0x1, 0x1);
        gbc.writeMem(0xa4cb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xba2c, gbc.sp());
        EXPECT(0xa4cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4cb));
        EXPECT(0xa5, gbc.readMem(0xa4cc));
        // CB A5 01AC
        gbc.setState(0xe5f8, 0x1dd0, 0x1c40, 0xb889, 0x83e9, 0xd247, 0x0, 0x1);
        gbc.writeMem(0xe5f8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1dd0, gbc.sp());
        EXPECT(0xe5fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5f8));
        EXPECT(0xa5, gbc.readMem(0xe5f9));
        // CB A5 01AD
        gbc.setState(0xdc42, 0xd065, 0x2a30, 0x4df3, 0x8d80, 0xb031, 0x1, 0x1);
        gbc.writeMem(0xdc42, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd065, gbc.sp());
        EXPECT(0xdc44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc42));
        EXPECT(0xa5, gbc.readMem(0xdc43));
        // CB A5 01AE
        gbc.setState(0x5d53, 0xcdc6, 0x7aa0, 0xc09d, 0xfde9, 0x4a4d, 0x1, 0x0);
        gbc.writeMem(0x5d53, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xcdc6, gbc.sp());
        EXPECT(0x5d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01AF
        gbc.setState(0xd288, 0x8a7c, 0x74c0, 0xb3a8, 0x7f9b, 0x9cd8, 0x0, 0x1);
        gbc.writeMem(0xd288, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8a7c, gbc.sp());
        EXPECT(0xd28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd288));
        EXPECT(0xa5, gbc.readMem(0xd289));
        // CB A5 01B0
        gbc.setState(0x3f01, 0xb52a, 0x6f80, 0xc3fd, 0x8c30, 0x7dba, 0x1, 0x1);
        gbc.writeMem(0x3f01, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb52a, gbc.sp());
        EXPECT(0x3f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01B1
        gbc.setState(0x9896, 0x974f, 0x1990, 0xc781, 0xf84d, 0xb8ea, 0x0, 0x0);
        gbc.writeMem(0x9896, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x974f, gbc.sp());
        EXPECT(0x9898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9896));
        EXPECT(0xa5, gbc.readMem(0x9897));
        // CB A5 01B3
        gbc.setState(0x1408, 0x3bf5, 0xe540, 0x5867, 0xf093, 0xf7fc, 0x1, 0x1);
        gbc.writeMem(0x1408, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3bf5, gbc.sp());
        EXPECT(0x140a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01B4
        gbc.setState(0xcf2f, 0xe765, 0x61f0, 0x41af, 0x7fb1, 0x6a69, 0x1, 0x1);
        gbc.writeMem(0xcf2f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe765, gbc.sp());
        EXPECT(0xcf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2f));
        EXPECT(0xa5, gbc.readMem(0xcf30));
        // CB A5 01B5
        gbc.setState(0xdfe1, 0x628b, 0xb770, 0xae2b, 0xff76, 0x232d, 0x0, 0x0);
        gbc.writeMem(0xdfe1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x628b, gbc.sp());
        EXPECT(0xdfe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe1));
        EXPECT(0xa5, gbc.readMem(0xdfe2));
        // CB A5 01B6
        gbc.setState(0xdaac, 0xe245, 0xa7d0, 0x690, 0x289b, 0x842, 0x1, 0x1);
        gbc.writeMem(0xdaac, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe245, gbc.sp());
        EXPECT(0xdaae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaac));
        EXPECT(0xa5, gbc.readMem(0xdaad));
        // CB A5 01B7
        gbc.setState(0x12a1, 0xcd19, 0x45e0, 0x8269, 0xf495, 0x4053, 0x1, 0x0);
        gbc.writeMem(0x12a1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcd19, gbc.sp());
        EXPECT(0x12a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01B8
        gbc.setState(0xe0, 0xcf39, 0x9c40, 0x5d6b, 0x1a4d, 0x1400, 0x0, 0x0);
        gbc.writeMem(0xe0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xcf39, gbc.sp());
        EXPECT(0xe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01B9
        gbc.setState(0xaa54, 0x7cb4, 0x4d70, 0x719d, 0x6784, 0xc05c, 0x0, 0x1);
        gbc.writeMem(0xaa54, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7cb4, gbc.sp());
        EXPECT(0xaa56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa54));
        EXPECT(0xa5, gbc.readMem(0xaa55));
        // CB A5 01BA
        gbc.setState(0x6b8a, 0xf636, 0xf9a0, 0xe240, 0xcd61, 0x632, 0x0, 0x0);
        gbc.writeMem(0x6b8a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf636, gbc.sp());
        EXPECT(0x6b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01BB
        gbc.setState(0x84ef, 0xeee3, 0xa2b0, 0x972b, 0xcf14, 0x8923, 0x1, 0x1);
        gbc.writeMem(0x84ef, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xeee3, gbc.sp());
        EXPECT(0x84f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ef));
        EXPECT(0xa5, gbc.readMem(0x84f0));
        // CB A5 01BD
        gbc.setState(0x4a43, 0x5b63, 0x3260, 0x354f, 0x4e87, 0x31d5, 0x1, 0x1);
        gbc.writeMem(0x4a43, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5b63, gbc.sp());
        EXPECT(0x4a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01BE
        gbc.setState(0x7ccd, 0xba40, 0x7200, 0x70d3, 0x8d89, 0x2ed8, 0x1, 0x1);
        gbc.writeMem(0x7ccd, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xba40, gbc.sp());
        EXPECT(0x7ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01BF
        gbc.setState(0x6afe, 0xab5a, 0xf550, 0xb966, 0x4b89, 0x7, 0x0, 0x1);
        gbc.writeMem(0x6afe, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xab5a, gbc.sp());
        EXPECT(0x6b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01C0
        gbc.setState(0xc123, 0x259a, 0xcb30, 0xf554, 0xe79f, 0x1bbb, 0x1, 0x0);
        gbc.writeMem(0xc123, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x259a, gbc.sp());
        EXPECT(0xc125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc123));
        EXPECT(0xa5, gbc.readMem(0xc124));
        // CB A5 01C1
        gbc.setState(0xa099, 0x7ba7, 0x2870, 0x2672, 0x85ce, 0xbed0, 0x0, 0x1);
        gbc.writeMem(0xa099, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7ba7, gbc.sp());
        EXPECT(0xa09b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa099));
        EXPECT(0xa5, gbc.readMem(0xa09a));
        // CB A5 01C2
        gbc.setState(0x24d4, 0x90db, 0xbac0, 0x14a2, 0xe9b6, 0x8221, 0x0, 0x1);
        gbc.writeMem(0x24d4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x90db, gbc.sp());
        EXPECT(0x24d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01C3
        gbc.setState(0x5dcf, 0x79cf, 0x9f70, 0x11dd, 0x92b5, 0x3e30, 0x1, 0x0);
        gbc.writeMem(0x5dcf, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x79cf, gbc.sp());
        EXPECT(0x5dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01C4
        gbc.setState(0xb07e, 0x46f3, 0xe3e0, 0xd16b, 0x383d, 0x3645, 0x0, 0x1);
        gbc.writeMem(0xb07e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x46f3, gbc.sp());
        EXPECT(0xb080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb07e));
        EXPECT(0xa5, gbc.readMem(0xb07f));
        // CB A5 01C5
        gbc.setState(0x6aea, 0x506e, 0xbcd0, 0x636f, 0xec7c, 0xcaac, 0x0, 0x0);
        gbc.writeMem(0x6aea, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x506e, gbc.sp());
        EXPECT(0x6aec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01C6
        gbc.setState(0x3d2d, 0x6d01, 0xb430, 0x7348, 0xbea9, 0xb317, 0x1, 0x0);
        gbc.writeMem(0x3d2d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6d01, gbc.sp());
        EXPECT(0x3d2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01C7
        gbc.setState(0xbe09, 0x57fc, 0xcbf0, 0x693, 0xbd6b, 0x5b8b, 0x1, 0x1);
        gbc.writeMem(0xbe09, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x57fc, gbc.sp());
        EXPECT(0xbe0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe09));
        EXPECT(0xa5, gbc.readMem(0xbe0a));
        // CB A5 01C8
        gbc.setState(0xcd6d, 0xede4, 0xdc90, 0xfb09, 0x563e, 0xe90c, 0x0, 0x0);
        gbc.writeMem(0xcd6d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xede4, gbc.sp());
        EXPECT(0xcd6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd6d));
        EXPECT(0xa5, gbc.readMem(0xcd6e));
        // CB A5 01C9
        gbc.setState(0xd38, 0xd1f1, 0xaf90, 0xadb4, 0xae36, 0xb445, 0x1, 0x0);
        gbc.writeMem(0xd38, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd1f1, gbc.sp());
        EXPECT(0xd3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01CA
        gbc.setState(0x44e9, 0xa0a2, 0xa660, 0xc188, 0x12ca, 0x2355, 0x0, 0x0);
        gbc.writeMem(0x44e9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa0a2, gbc.sp());
        EXPECT(0x44eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01CB
        gbc.setState(0x23f3, 0x4e35, 0x3ba0, 0xf8de, 0xa9c6, 0xe084, 0x0, 0x1);
        gbc.writeMem(0x23f3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4e35, gbc.sp());
        EXPECT(0x23f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01CC
        gbc.setState(0xcec4, 0x28d7, 0x7c20, 0x2d10, 0x7512, 0xc535, 0x1, 0x0);
        gbc.writeMem(0xcec4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x28d7, gbc.sp());
        EXPECT(0xcec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec4));
        EXPECT(0xa5, gbc.readMem(0xcec5));
        // CB A5 01CD
        gbc.setState(0x9b23, 0x649b, 0xf210, 0xb058, 0x5c6a, 0x8435, 0x1, 0x0);
        gbc.writeMem(0x9b23, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x649b, gbc.sp());
        EXPECT(0x9b25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b23));
        EXPECT(0xa5, gbc.readMem(0x9b24));
        // CB A5 01CE
        gbc.setState(0xccd2, 0x7266, 0xe910, 0x90a3, 0xfa80, 0xbab5, 0x0, 0x0);
        gbc.writeMem(0xccd2, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7266, gbc.sp());
        EXPECT(0xccd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd2));
        EXPECT(0xa5, gbc.readMem(0xccd3));
        // CB A5 01CF
        gbc.setState(0x4ec3, 0x61b6, 0x9c80, 0x7638, 0x94bb, 0xffb8, 0x1, 0x1);
        gbc.writeMem(0x4ec3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x61b6, gbc.sp());
        EXPECT(0x4ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01D0
        gbc.setState(0xb3a2, 0x80a9, 0x9a60, 0x6168, 0xbd38, 0x99be, 0x0, 0x1);
        gbc.writeMem(0xb3a2, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x80a9, gbc.sp());
        EXPECT(0xb3a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a2));
        EXPECT(0xa5, gbc.readMem(0xb3a3));
        // CB A5 01D1
        gbc.setState(0xe9f8, 0x3a36, 0x8490, 0x5352, 0xa383, 0x963e, 0x1, 0x0);
        gbc.writeMem(0xe9f8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3a36, gbc.sp());
        EXPECT(0xe9fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9f8));
        EXPECT(0xa5, gbc.readMem(0xe9f9));
        // CB A5 01D2
        gbc.setState(0x1d03, 0xcc80, 0x1a50, 0x49ca, 0x3648, 0x226f, 0x1, 0x1);
        gbc.writeMem(0x1d03, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcc80, gbc.sp());
        EXPECT(0x1d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01D3
        gbc.setState(0xeddf, 0xcd41, 0x5130, 0x29a, 0xdb9b, 0xf280, 0x1, 0x0);
        gbc.writeMem(0xeddf, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcd41, gbc.sp());
        EXPECT(0xede1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeddf));
        EXPECT(0xa5, gbc.readMem(0xede0));
        // CB A5 01D4
        gbc.setState(0xa8f4, 0x9526, 0x7340, 0x9548, 0x664c, 0xe54c, 0x0, 0x1);
        gbc.writeMem(0xa8f4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9526, gbc.sp());
        EXPECT(0xa8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f4));
        EXPECT(0xa5, gbc.readMem(0xa8f5));
        // CB A5 01D5
        gbc.setState(0x124a, 0x9ce1, 0xde30, 0x6b28, 0xca18, 0x8dc1, 0x1, 0x0);
        gbc.writeMem(0x124a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9ce1, gbc.sp());
        EXPECT(0x124c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01D6
        gbc.setState(0x281e, 0x758c, 0xbc90, 0x4f23, 0xd824, 0x8f41, 0x1, 0x0);
        gbc.writeMem(0x281e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x758c, gbc.sp());
        EXPECT(0x2820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01D7
        gbc.setState(0x1684, 0xf40b, 0xa250, 0xd617, 0x10b, 0x12be, 0x0, 0x0);
        gbc.writeMem(0x1684, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf40b, gbc.sp());
        EXPECT(0x1686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01D8
        gbc.setState(0x6c8d, 0x7c7a, 0xf880, 0x3fd3, 0xbc6, 0x995d, 0x0, 0x0);
        gbc.writeMem(0x6c8d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7c7a, gbc.sp());
        EXPECT(0x6c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01D9
        gbc.setState(0xfb9, 0x52ba, 0x2c60, 0x95ff, 0x7d9a, 0xbd51, 0x0, 0x0);
        gbc.writeMem(0xfb9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x52ba, gbc.sp());
        EXPECT(0xfbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01DA
        gbc.setState(0x6c0b, 0xfcfd, 0x8ee0, 0xc3f7, 0x628e, 0x3844, 0x1, 0x1);
        gbc.writeMem(0x6c0b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfcfd, gbc.sp());
        EXPECT(0x6c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01DB
        gbc.setState(0xda04, 0x6f74, 0xbde0, 0x9dc6, 0x465c, 0xdff4, 0x0, 0x1);
        gbc.writeMem(0xda04, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6f74, gbc.sp());
        EXPECT(0xda06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda04));
        EXPECT(0xa5, gbc.readMem(0xda05));
        // CB A5 01DC
        gbc.setState(0x2d2f, 0x9724, 0x5de0, 0x6b1e, 0xea76, 0x7fe8, 0x0, 0x1);
        gbc.writeMem(0x2d2f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9724, gbc.sp());
        EXPECT(0x2d31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01DD
        gbc.setState(0xa296, 0x7e15, 0x9390, 0x50c7, 0x7059, 0xe33a, 0x1, 0x0);
        gbc.writeMem(0xa296, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7e15, gbc.sp());
        EXPECT(0xa298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa296));
        EXPECT(0xa5, gbc.readMem(0xa297));
        // CB A5 01DE
        gbc.setState(0xccb4, 0xa666, 0xe1c0, 0x4701, 0xe72e, 0x5750, 0x0, 0x1);
        gbc.writeMem(0xccb4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa666, gbc.sp());
        EXPECT(0xccb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb4));
        EXPECT(0xa5, gbc.readMem(0xccb5));
        // CB A5 01DF
        gbc.setState(0x52c4, 0xf4ba, 0x66b0, 0x7591, 0xe991, 0x7832, 0x0, 0x1);
        gbc.writeMem(0x52c4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf4ba, gbc.sp());
        EXPECT(0x52c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01E0
        gbc.setState(0x57b, 0x2e64, 0x6180, 0x2a6d, 0x4d33, 0xd89, 0x1, 0x0);
        gbc.writeMem(0x57b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2e64, gbc.sp());
        EXPECT(0x57d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01E1
        gbc.setState(0xd2db, 0x79a0, 0x7a10, 0x6d8a, 0x66e9, 0x8273, 0x1, 0x1);
        gbc.writeMem(0xd2db, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x79a0, gbc.sp());
        EXPECT(0xd2dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2db));
        EXPECT(0xa5, gbc.readMem(0xd2dc));
        // CB A5 01E2
        gbc.setState(0x7b60, 0x4412, 0xd960, 0x35f0, 0x98bd, 0x1da6, 0x1, 0x1);
        gbc.writeMem(0x7b60, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4412, gbc.sp());
        EXPECT(0x7b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01E3
        gbc.setState(0x5969, 0x4b38, 0xba20, 0xb319, 0x233, 0xa585, 0x0, 0x0);
        gbc.writeMem(0x5969, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4b38, gbc.sp());
        EXPECT(0x596b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01E4
        gbc.setState(0x4123, 0x909, 0x3fa0, 0x9dc2, 0x2ec0, 0xf262, 0x1, 0x0);
        gbc.writeMem(0x4123, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x909, gbc.sp());
        EXPECT(0x4125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01E5
        gbc.setState(0x55cb, 0x4b74, 0x150, 0xe929, 0x2bcd, 0x7adb, 0x1, 0x0);
        gbc.writeMem(0x55cb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4b74, gbc.sp());
        EXPECT(0x55cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01E6
        gbc.setState(0x55ea, 0xc5da, 0xfbc0, 0xccf4, 0xcc0c, 0x832c, 0x1, 0x1);
        gbc.writeMem(0x55ea, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc5da, gbc.sp());
        EXPECT(0x55ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01E7
        gbc.setState(0x32e3, 0x4ccc, 0x2d50, 0xef44, 0x7db9, 0x367c, 0x0, 0x1);
        gbc.writeMem(0x32e3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4ccc, gbc.sp());
        EXPECT(0x32e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01E8
        gbc.setState(0xbfdb, 0xa660, 0x7510, 0x7b76, 0x65fc, 0xc200, 0x0, 0x0);
        gbc.writeMem(0xbfdb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa660, gbc.sp());
        EXPECT(0xbfdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfdb));
        EXPECT(0xa5, gbc.readMem(0xbfdc));
        // CB A5 01E9
        gbc.setState(0x4223, 0xf5aa, 0x6330, 0xd4e2, 0xf48f, 0x330f, 0x1, 0x0);
        gbc.writeMem(0x4223, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf5aa, gbc.sp());
        EXPECT(0x4225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01EA
        gbc.setState(0xbde1, 0x143, 0xf860, 0x5e95, 0x5477, 0xc47b, 0x0, 0x1);
        gbc.writeMem(0xbde1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x143, gbc.sp());
        EXPECT(0xbde3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde1));
        EXPECT(0xa5, gbc.readMem(0xbde2));
        // CB A5 01EB
        gbc.setState(0x1d0c, 0x20aa, 0x8910, 0xd788, 0xaebf, 0x1e93, 0x0, 0x0);
        gbc.writeMem(0x1d0c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x20aa, gbc.sp());
        EXPECT(0x1d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01EC
        gbc.setState(0x2bbf, 0xd685, 0xfd30, 0x107, 0xc47a, 0x9dbd, 0x1, 0x0);
        gbc.writeMem(0x2bbf, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd685, gbc.sp());
        EXPECT(0x2bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01ED
        gbc.setState(0x7e83, 0xa8d5, 0x8390, 0xb11c, 0x605b, 0x9512, 0x0, 0x0);
        gbc.writeMem(0x7e83, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa8d5, gbc.sp());
        EXPECT(0x7e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01EE
        gbc.setState(0x5a6, 0xa6fa, 0x50b0, 0xba51, 0x5ac4, 0xa24f, 0x0, 0x1);
        gbc.writeMem(0x5a6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa6fa, gbc.sp());
        EXPECT(0x5a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01EF
        gbc.setState(0x5293, 0x73c, 0xab10, 0x84b1, 0xe39d, 0x8d74, 0x0, 0x0);
        gbc.writeMem(0x5293, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x73c, gbc.sp());
        EXPECT(0x5295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01F0
        gbc.setState(0x226b, 0x25a2, 0x17b0, 0x5119, 0x32f4, 0xa062, 0x1, 0x0);
        gbc.writeMem(0x226b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x25a2, gbc.sp());
        EXPECT(0x226d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01F1
        gbc.setState(0x8747, 0x4a38, 0xc480, 0x1b47, 0x46bd, 0xb8b, 0x1, 0x1);
        gbc.writeMem(0x8747, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4a38, gbc.sp());
        EXPECT(0x8749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8747));
        EXPECT(0xa5, gbc.readMem(0x8748));
        // CB A5 01F2
        gbc.setState(0x7813, 0x3d1f, 0xdeb0, 0x53ea, 0x119b, 0x6fb9, 0x0, 0x1);
        gbc.writeMem(0x7813, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3d1f, gbc.sp());
        EXPECT(0x7815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01F3
        gbc.setState(0xa5c8, 0xe473, 0x4c30, 0xcc63, 0x5378, 0x2f4e, 0x0, 0x0);
        gbc.writeMem(0xa5c8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe473, gbc.sp());
        EXPECT(0xa5ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5c8));
        EXPECT(0xa5, gbc.readMem(0xa5c9));
        // CB A5 01F4
        gbc.setState(0xeccf, 0x4823, 0x6f40, 0xfe94, 0x8b5, 0x45c1, 0x1, 0x1);
        gbc.writeMem(0xeccf, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4823, gbc.sp());
        EXPECT(0xecd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeccf));
        EXPECT(0xa5, gbc.readMem(0xecd0));
        // CB A5 01F5
        gbc.setState(0xc4b4, 0xb60, 0x72a0, 0x93b7, 0x755, 0x21b7, 0x1, 0x1);
        gbc.writeMem(0xc4b4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb60, gbc.sp());
        EXPECT(0xc4b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b4));
        EXPECT(0xa5, gbc.readMem(0xc4b5));
        // CB A5 01F6
        gbc.setState(0x29f6, 0x69c8, 0x2ae0, 0x9e4d, 0x42ff, 0x27cb, 0x1, 0x1);
        gbc.writeMem(0x29f6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x69c8, gbc.sp());
        EXPECT(0x29f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01F7
        gbc.setState(0x249, 0x9fe4, 0x62d0, 0x5fb7, 0xbe13, 0x9241, 0x0, 0x1);
        gbc.writeMem(0x249, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9fe4, gbc.sp());
        EXPECT(0x24b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01F9
        gbc.setState(0x8d2, 0xf9a7, 0x7430, 0x2c8, 0x7094, 0x8dd3, 0x0, 0x1);
        gbc.writeMem(0x8d2, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf9a7, gbc.sp());
        EXPECT(0x8d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01FA
        gbc.setState(0x678f, 0x16ee, 0x1ab0, 0xd14a, 0xa8d, 0x62ed, 0x0, 0x1);
        gbc.writeMem(0x678f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x16ee, gbc.sp());
        EXPECT(0x6791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01FB
        gbc.setState(0x7028, 0xa3bc, 0x6b00, 0x501c, 0xb3a8, 0x4ce7, 0x1, 0x1);
        gbc.writeMem(0x7028, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa3bc, gbc.sp());
        EXPECT(0x702a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01FC
        gbc.setState(0x2cab, 0xdce7, 0x65e0, 0x2fac, 0x95e0, 0xf869, 0x0, 0x1);
        gbc.writeMem(0x2cab, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdce7, gbc.sp());
        EXPECT(0x2cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 01FD
        gbc.setState(0x24da, 0xe1ff, 0x16b0, 0x6997, 0xa50b, 0xb988, 0x1, 0x1);
        gbc.writeMem(0x24da, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe1ff, gbc.sp());
        EXPECT(0x24dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 01FF
        gbc.setState(0x6ff5, 0x8175, 0x5310, 0x6f42, 0x4f46, 0xe91d, 0x1, 0x0);
        gbc.writeMem(0x6ff5, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8175, gbc.sp());
        EXPECT(0x6ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0201
        gbc.setState(0x31b8, 0x485a, 0x8e00, 0x6687, 0x3177, 0x15d7, 0x0, 0x0);
        gbc.writeMem(0x31b8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x485a, gbc.sp());
        EXPECT(0x31ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0202
        gbc.setState(0xdf05, 0xca1c, 0xcbe0, 0xf3a5, 0xa8a9, 0xe22e, 0x1, 0x1);
        gbc.writeMem(0xdf05, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xca1c, gbc.sp());
        EXPECT(0xdf07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf05));
        EXPECT(0xa5, gbc.readMem(0xdf06));
        // CB A5 0203
        gbc.setState(0x614a, 0xf830, 0x3840, 0xb2db, 0x8426, 0x78c7, 0x1, 0x1);
        gbc.writeMem(0x614a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf830, gbc.sp());
        EXPECT(0x614c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0204
        gbc.setState(0x9e41, 0x7a0c, 0x2090, 0x9093, 0x53e0, 0xfa7b, 0x1, 0x0);
        gbc.writeMem(0x9e41, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7a0c, gbc.sp());
        EXPECT(0x9e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e41));
        EXPECT(0xa5, gbc.readMem(0x9e42));
        // CB A5 0205
        gbc.setState(0xad56, 0x217f, 0xd240, 0x5f4e, 0x5be8, 0x9af4, 0x1, 0x0);
        gbc.writeMem(0xad56, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x217f, gbc.sp());
        EXPECT(0xad58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad56));
        EXPECT(0xa5, gbc.readMem(0xad57));
        // CB A5 0206
        gbc.setState(0x34fe, 0x356e, 0xc600, 0xe27d, 0x4833, 0x8db9, 0x0, 0x0);
        gbc.writeMem(0x34fe, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x356e, gbc.sp());
        EXPECT(0x3500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0207
        gbc.setState(0x7520, 0xa1e3, 0xa340, 0x6b5c, 0x91ac, 0xe0cd, 0x0, 0x1);
        gbc.writeMem(0x7520, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa1e3, gbc.sp());
        EXPECT(0x7522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0208
        gbc.setState(0xdd50, 0x5cee, 0x9b00, 0x40b6, 0x1bae, 0xd01a, 0x1, 0x0);
        gbc.writeMem(0xdd50, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5cee, gbc.sp());
        EXPECT(0xdd52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd50));
        EXPECT(0xa5, gbc.readMem(0xdd51));
        // CB A5 0209
        gbc.setState(0x5fb0, 0xbdfd, 0x6fc0, 0x6655, 0x3eeb, 0x6169, 0x1, 0x1);
        gbc.writeMem(0x5fb0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbdfd, gbc.sp());
        EXPECT(0x5fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 020A
        gbc.setState(0xe090, 0xdd, 0xf4f0, 0x8dc6, 0x1920, 0xe709, 0x0, 0x1);
        gbc.writeMem(0xe090, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdd, gbc.sp());
        EXPECT(0xe092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe090));
        EXPECT(0xa5, gbc.readMem(0xe091));
        // CB A5 020C
        gbc.setState(0x7433, 0xfc2, 0x60b0, 0xe8af, 0x87f0, 0x9901, 0x1, 0x0);
        gbc.writeMem(0x7433, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfc2, gbc.sp());
        EXPECT(0x7435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 020D
        gbc.setState(0xe371, 0x53eb, 0x4ea0, 0x4345, 0xffba, 0x9de9, 0x0, 0x1);
        gbc.writeMem(0xe371, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x53eb, gbc.sp());
        EXPECT(0xe373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe371));
        EXPECT(0xa5, gbc.readMem(0xe372));
        // CB A5 020E
        gbc.setState(0x27cc, 0xc9b5, 0xf150, 0xfc7a, 0xb63d, 0xf674, 0x1, 0x1);
        gbc.writeMem(0x27cc, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc9b5, gbc.sp());
        EXPECT(0x27ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 020F
        gbc.setState(0xa2fe, 0x81d5, 0xa820, 0x4ea6, 0x1154, 0x1f40, 0x1, 0x1);
        gbc.writeMem(0xa2fe, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x81d5, gbc.sp());
        EXPECT(0xa300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2fe));
        EXPECT(0xa5, gbc.readMem(0xa2ff));
        // CB A5 0210
        gbc.setState(0xfa3, 0x1a21, 0xb0f0, 0x61fd, 0x3705, 0x69da, 0x1, 0x0);
        gbc.writeMem(0xfa3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1a21, gbc.sp());
        EXPECT(0xfa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0212
        gbc.setState(0x9a56, 0x436e, 0x8cc0, 0xbb4, 0x97a5, 0x344b, 0x0, 0x0);
        gbc.writeMem(0x9a56, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x436e, gbc.sp());
        EXPECT(0x9a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a56));
        EXPECT(0xa5, gbc.readMem(0x9a57));
        // CB A5 0213
        gbc.setState(0x8772, 0xc452, 0x8c60, 0x84e0, 0xd8ce, 0x60db, 0x1, 0x0);
        gbc.writeMem(0x8772, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc452, gbc.sp());
        EXPECT(0x8774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8772));
        EXPECT(0xa5, gbc.readMem(0x8773));
        // CB A5 0214
        gbc.setState(0x2fc3, 0x7736, 0xe560, 0x4b1e, 0xa544, 0x35ee, 0x1, 0x1);
        gbc.writeMem(0x2fc3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7736, gbc.sp());
        EXPECT(0x2fc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0215
        gbc.setState(0xda4a, 0x943b, 0xc8f0, 0xb4fd, 0xc513, 0x9359, 0x0, 0x1);
        gbc.writeMem(0xda4a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x943b, gbc.sp());
        EXPECT(0xda4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda4a));
        EXPECT(0xa5, gbc.readMem(0xda4b));
        // CB A5 0216
        gbc.setState(0xd9fa, 0xbba9, 0x580, 0xfd32, 0x23ee, 0x918d, 0x0, 0x1);
        gbc.writeMem(0xd9fa, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbba9, gbc.sp());
        EXPECT(0xd9fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9fa));
        EXPECT(0xa5, gbc.readMem(0xd9fb));
        // CB A5 0217
        gbc.setState(0x78f6, 0xae45, 0x93d0, 0x8b1b, 0x1883, 0x9eb, 0x0, 0x1);
        gbc.writeMem(0x78f6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xae45, gbc.sp());
        EXPECT(0x78f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0218
        gbc.setState(0xa525, 0x7a14, 0xb0e0, 0xe569, 0x2718, 0xb4dd, 0x1, 0x1);
        gbc.writeMem(0xa525, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7a14, gbc.sp());
        EXPECT(0xa527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa525));
        EXPECT(0xa5, gbc.readMem(0xa526));
        // CB A5 0219
        gbc.setState(0xd0a4, 0xd222, 0x6400, 0x99d0, 0xdd4, 0x42a8, 0x1, 0x1);
        gbc.writeMem(0xd0a4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd222, gbc.sp());
        EXPECT(0xd0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a4));
        EXPECT(0xa5, gbc.readMem(0xd0a5));
        // CB A5 021A
        gbc.setState(0x873c, 0x26f5, 0xce60, 0xacb6, 0xb8db, 0x611b, 0x1, 0x0);
        gbc.writeMem(0x873c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x26f5, gbc.sp());
        EXPECT(0x873e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x873c));
        EXPECT(0xa5, gbc.readMem(0x873d));
        // CB A5 021B
        gbc.setState(0x5884, 0x46d5, 0xc900, 0xc378, 0xbb4a, 0xf76c, 0x0, 0x0);
        gbc.writeMem(0x5884, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x46d5, gbc.sp());
        EXPECT(0x5886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 021C
        gbc.setState(0xb39a, 0x7c63, 0x6420, 0x204f, 0x629, 0x8aa2, 0x1, 0x0);
        gbc.writeMem(0xb39a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7c63, gbc.sp());
        EXPECT(0xb39c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb39a));
        EXPECT(0xa5, gbc.readMem(0xb39b));
        // CB A5 021D
        gbc.setState(0xe003, 0xf5a0, 0x3550, 0xc66e, 0xe246, 0x7beb, 0x0, 0x1);
        gbc.writeMem(0xe003, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf5a0, gbc.sp());
        EXPECT(0xe005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe003));
        EXPECT(0xa5, gbc.readMem(0xe004));
        // CB A5 021E
        gbc.setState(0x78c7, 0x2d4, 0x4b70, 0xc8a7, 0x1065, 0x44eb, 0x0, 0x1);
        gbc.writeMem(0x78c7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2d4, gbc.sp());
        EXPECT(0x78c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 021F
        gbc.setState(0xfc9, 0xf55a, 0x7720, 0x2c62, 0x937e, 0x989a, 0x1, 0x1);
        gbc.writeMem(0xfc9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf55a, gbc.sp());
        EXPECT(0xfcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0220
        gbc.setState(0x5397, 0x419f, 0xca80, 0x1312, 0x582a, 0x9726, 0x1, 0x0);
        gbc.writeMem(0x5397, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x419f, gbc.sp());
        EXPECT(0x5399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0221
        gbc.setState(0xeaac, 0xe5f, 0x1430, 0xcd78, 0x4071, 0x6e4c, 0x0, 0x1);
        gbc.writeMem(0xeaac, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe5f, gbc.sp());
        EXPECT(0xeaae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaac));
        EXPECT(0xa5, gbc.readMem(0xeaad));
        // CB A5 0222
        gbc.setState(0xd4f7, 0x2744, 0xb040, 0xc0af, 0xf20d, 0x12f2, 0x1, 0x1);
        gbc.writeMem(0xd4f7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2744, gbc.sp());
        EXPECT(0xd4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f7));
        EXPECT(0xa5, gbc.readMem(0xd4f8));
        // CB A5 0223
        gbc.setState(0xea7c, 0x5807, 0xe0c0, 0xcd2e, 0xe1b8, 0x58f1, 0x1, 0x0);
        gbc.writeMem(0xea7c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5807, gbc.sp());
        EXPECT(0xea7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea7c));
        EXPECT(0xa5, gbc.readMem(0xea7d));
        // CB A5 0224
        gbc.setState(0x8b96, 0x9737, 0x6680, 0xc77e, 0xed10, 0x3918, 0x0, 0x0);
        gbc.writeMem(0x8b96, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9737, gbc.sp());
        EXPECT(0x8b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b96));
        EXPECT(0xa5, gbc.readMem(0x8b97));
        // CB A5 0225
        gbc.setState(0x4da7, 0xaf59, 0xe8b0, 0xb94b, 0xccc8, 0x1c20, 0x0, 0x1);
        gbc.writeMem(0x4da7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xaf59, gbc.sp());
        EXPECT(0x4da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0226
        gbc.setState(0xa7cb, 0x9ae, 0x7b30, 0x6842, 0x532c, 0xb540, 0x0, 0x0);
        gbc.writeMem(0xa7cb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9ae, gbc.sp());
        EXPECT(0xa7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7cb));
        EXPECT(0xa5, gbc.readMem(0xa7cc));
        // CB A5 0227
        gbc.setState(0x5e09, 0x833, 0xf6c0, 0xf90e, 0xc4c, 0x1ecd, 0x0, 0x1);
        gbc.writeMem(0x5e09, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x833, gbc.sp());
        EXPECT(0x5e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0228
        gbc.setState(0x3971, 0xeb5a, 0x270, 0xb128, 0x11a9, 0x7c8c, 0x1, 0x1);
        gbc.writeMem(0x3971, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xeb5a, gbc.sp());
        EXPECT(0x3973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0229
        gbc.setState(0x519, 0x4125, 0x2690, 0xf882, 0x3f11, 0x3ad0, 0x0, 0x1);
        gbc.writeMem(0x519, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4125, gbc.sp());
        EXPECT(0x51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 022A
        gbc.setState(0xdca2, 0x5e78, 0x42a0, 0xe56, 0xb669, 0x6fdf, 0x0, 0x0);
        gbc.writeMem(0xdca2, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5e78, gbc.sp());
        EXPECT(0xdca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdca2));
        EXPECT(0xa5, gbc.readMem(0xdca3));
        // CB A5 022B
        gbc.setState(0x35a7, 0x1e43, 0x8560, 0x2c50, 0x7071, 0xa449, 0x1, 0x0);
        gbc.writeMem(0x35a7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1e43, gbc.sp());
        EXPECT(0x35a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 022C
        gbc.setState(0x55f9, 0x8f11, 0x9ae0, 0x71af, 0x2399, 0xfb37, 0x1, 0x0);
        gbc.writeMem(0x55f9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8f11, gbc.sp());
        EXPECT(0x55fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 022D
        gbc.setState(0x5fa4, 0x1b06, 0x3090, 0xbff8, 0x1210, 0x6d06, 0x1, 0x1);
        gbc.writeMem(0x5fa4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1b06, gbc.sp());
        EXPECT(0x5fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 022E
        gbc.setState(0xe11, 0x1ef8, 0xeea0, 0xdcbf, 0x676b, 0xb0c4, 0x1, 0x1);
        gbc.writeMem(0xe11, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1ef8, gbc.sp());
        EXPECT(0xe13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 022F
        gbc.setState(0xccd4, 0x7a83, 0xafd0, 0xba3f, 0x1bd3, 0x4246, 0x0, 0x1);
        gbc.writeMem(0xccd4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7a83, gbc.sp());
        EXPECT(0xccd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd4));
        EXPECT(0xa5, gbc.readMem(0xccd5));
        // CB A5 0230
        gbc.setState(0x970a, 0x6f95, 0x210, 0xa5a0, 0x72c6, 0x7c45, 0x1, 0x0);
        gbc.writeMem(0x970a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6f95, gbc.sp());
        EXPECT(0x970c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x970a));
        EXPECT(0xa5, gbc.readMem(0x970b));
        // CB A5 0231
        gbc.setState(0xcf2c, 0x61da, 0x92d0, 0x12af, 0x5451, 0x8bed, 0x0, 0x1);
        gbc.writeMem(0xcf2c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x61da, gbc.sp());
        EXPECT(0xcf2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2c));
        EXPECT(0xa5, gbc.readMem(0xcf2d));
        // CB A5 0232
        gbc.setState(0xe58f, 0xc13c, 0xed00, 0xe102, 0x225d, 0xf47d, 0x0, 0x0);
        gbc.writeMem(0xe58f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc13c, gbc.sp());
        EXPECT(0xe591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe58f));
        EXPECT(0xa5, gbc.readMem(0xe590));
        // CB A5 0233
        gbc.setState(0x4787, 0x95c4, 0x5ae0, 0xeaf2, 0x4327, 0x9401, 0x0, 0x0);
        gbc.writeMem(0x4787, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x95c4, gbc.sp());
        EXPECT(0x4789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0234
        gbc.setState(0x3bde, 0xb5bc, 0xf260, 0xcbad, 0x1e44, 0xa95e, 0x1, 0x0);
        gbc.writeMem(0x3bde, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb5bc, gbc.sp());
        EXPECT(0x3be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0235
        gbc.setState(0xc0e2, 0x54f1, 0x8980, 0xa3e4, 0x37a0, 0xb16a, 0x1, 0x1);
        gbc.writeMem(0xc0e2, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x54f1, gbc.sp());
        EXPECT(0xc0e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e2));
        EXPECT(0xa5, gbc.readMem(0xc0e3));
        // CB A5 0236
        gbc.setState(0x48aa, 0x5837, 0xb130, 0xd122, 0xbb62, 0x5098, 0x0, 0x1);
        gbc.writeMem(0x48aa, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5837, gbc.sp());
        EXPECT(0x48ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0237
        gbc.setState(0x170a, 0xc14a, 0x61c0, 0x3f5d, 0xf9f6, 0x7b10, 0x0, 0x0);
        gbc.writeMem(0x170a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc14a, gbc.sp());
        EXPECT(0x170c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0238
        gbc.setState(0xdd6e, 0x2807, 0xc500, 0xbf08, 0xcbe4, 0x1641, 0x1, 0x0);
        gbc.writeMem(0xdd6e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2807, gbc.sp());
        EXPECT(0xdd70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd6e));
        EXPECT(0xa5, gbc.readMem(0xdd6f));
        // CB A5 0239
        gbc.setState(0x256a, 0x4970, 0x8350, 0x6426, 0x5bb, 0x9bb6, 0x1, 0x1);
        gbc.writeMem(0x256a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4970, gbc.sp());
        EXPECT(0x256c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 023A
        gbc.setState(0xabbb, 0x263c, 0xa720, 0x7f2d, 0x4806, 0x4fc3, 0x1, 0x1);
        gbc.writeMem(0xabbb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x263c, gbc.sp());
        EXPECT(0xabbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabbb));
        EXPECT(0xa5, gbc.readMem(0xabbc));
        // CB A5 023B
        gbc.setState(0x8890, 0xf996, 0x6840, 0x256c, 0x6437, 0x6d4b, 0x1, 0x0);
        gbc.writeMem(0x8890, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf996, gbc.sp());
        EXPECT(0x8892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8890));
        EXPECT(0xa5, gbc.readMem(0x8891));
        // CB A5 023C
        gbc.setState(0xc1c1, 0x184a, 0x30e0, 0xb632, 0x36c5, 0x6091, 0x1, 0x0);
        gbc.writeMem(0xc1c1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x184a, gbc.sp());
        EXPECT(0xc1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c1));
        EXPECT(0xa5, gbc.readMem(0xc1c2));
        // CB A5 023D
        gbc.setState(0x8d7b, 0xae5e, 0xf6b0, 0xaeab, 0x7e5b, 0xba9c, 0x0, 0x0);
        gbc.writeMem(0x8d7b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xae5e, gbc.sp());
        EXPECT(0x8d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d7b));
        EXPECT(0xa5, gbc.readMem(0x8d7c));
        // CB A5 023E
        gbc.setState(0xa07b, 0x888a, 0xb190, 0x2bc9, 0x3f79, 0x153c, 0x0, 0x1);
        gbc.writeMem(0xa07b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x888a, gbc.sp());
        EXPECT(0xa07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa07b));
        EXPECT(0xa5, gbc.readMem(0xa07c));
        // CB A5 023F
        gbc.setState(0x2b03, 0x78ea, 0x170, 0xd83a, 0x3264, 0xa2bb, 0x0, 0x0);
        gbc.writeMem(0x2b03, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x78ea, gbc.sp());
        EXPECT(0x2b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0240
        gbc.setState(0x685e, 0xb7be, 0xc8b0, 0xd3a0, 0xe932, 0xc841, 0x1, 0x1);
        gbc.writeMem(0x685e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb7be, gbc.sp());
        EXPECT(0x6860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0241
        gbc.setState(0xaea0, 0x12d8, 0xb670, 0xad73, 0xdf12, 0x7bda, 0x0, 0x1);
        gbc.writeMem(0xaea0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x12d8, gbc.sp());
        EXPECT(0xaea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea0));
        EXPECT(0xa5, gbc.readMem(0xaea1));
        // CB A5 0242
        gbc.setState(0x7d38, 0xc161, 0x4540, 0xe3ba, 0x5b55, 0x1095, 0x1, 0x1);
        gbc.writeMem(0x7d38, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc161, gbc.sp());
        EXPECT(0x7d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0243
        gbc.setState(0xda4d, 0x2dd, 0x3530, 0x91df, 0x129b, 0x4f36, 0x1, 0x0);
        gbc.writeMem(0xda4d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2dd, gbc.sp());
        EXPECT(0xda4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda4d));
        EXPECT(0xa5, gbc.readMem(0xda4e));
        // CB A5 0244
        gbc.setState(0xdc16, 0x5f0f, 0xa6b0, 0xb6a9, 0x1093, 0xd08b, 0x0, 0x1);
        gbc.writeMem(0xdc16, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5f0f, gbc.sp());
        EXPECT(0xdc18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc16));
        EXPECT(0xa5, gbc.readMem(0xdc17));
        // CB A5 0245
        gbc.setState(0x8d8b, 0x66d2, 0xbaf0, 0xa623, 0xa196, 0xd5d7, 0x1, 0x1);
        gbc.writeMem(0x8d8b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x66d2, gbc.sp());
        EXPECT(0x8d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d8b));
        EXPECT(0xa5, gbc.readMem(0x8d8c));
        // CB A5 0246
        gbc.setState(0x630, 0x3c2f, 0xba80, 0x6c3, 0xcd3, 0xe05f, 0x1, 0x0);
        gbc.writeMem(0x630, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3c2f, gbc.sp());
        EXPECT(0x632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0247
        gbc.setState(0xa4, 0x402f, 0xb530, 0x864f, 0xf1d6, 0xc63b, 0x1, 0x0);
        gbc.writeMem(0xa4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x402f, gbc.sp());
        EXPECT(0xa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0248
        gbc.setState(0x4e10, 0x40df, 0x2bb0, 0x3be3, 0xa488, 0xd157, 0x1, 0x0);
        gbc.writeMem(0x4e10, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x40df, gbc.sp());
        EXPECT(0x4e12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0249
        gbc.setState(0x76d0, 0x62df, 0xb6f0, 0xaa59, 0x9922, 0x6dcc, 0x0, 0x0);
        gbc.writeMem(0x76d0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x62df, gbc.sp());
        EXPECT(0x76d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 024A
        gbc.setState(0xc28, 0xca4a, 0x9b50, 0x2473, 0x29d4, 0x8e06, 0x1, 0x0);
        gbc.writeMem(0xc28, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xca4a, gbc.sp());
        EXPECT(0xc2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 024B
        gbc.setState(0xddbb, 0x36ec, 0x8ba0, 0x5137, 0xa312, 0x7d2a, 0x0, 0x0);
        gbc.writeMem(0xddbb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x36ec, gbc.sp());
        EXPECT(0xddbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddbb));
        EXPECT(0xa5, gbc.readMem(0xddbc));
        // CB A5 024C
        gbc.setState(0xe65, 0xc2ad, 0x48b0, 0xacee, 0xd6c, 0xb194, 0x0, 0x1);
        gbc.writeMem(0xe65, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc2ad, gbc.sp());
        EXPECT(0xe67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 024D
        gbc.setState(0x6068, 0x1799, 0x4e70, 0x1d6f, 0x4f6d, 0x6d94, 0x1, 0x1);
        gbc.writeMem(0x6068, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1799, gbc.sp());
        EXPECT(0x606a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 024E
        gbc.setState(0x2590, 0xa389, 0x1d20, 0xc9ff, 0xf0a6, 0x5aff, 0x0, 0x1);
        gbc.writeMem(0x2590, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa389, gbc.sp());
        EXPECT(0x2592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 024F
        gbc.setState(0xce9b, 0x6c8b, 0x4610, 0xf379, 0x39aa, 0xd9b0, 0x1, 0x1);
        gbc.writeMem(0xce9b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6c8b, gbc.sp());
        EXPECT(0xce9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce9b));
        EXPECT(0xa5, gbc.readMem(0xce9c));
        // CB A5 0250
        gbc.setState(0x786a, 0x6397, 0x3270, 0x741b, 0x65bb, 0xbfec, 0x1, 0x0);
        gbc.writeMem(0x786a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6397, gbc.sp());
        EXPECT(0x786c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0251
        gbc.setState(0x46be, 0x13e5, 0x2f10, 0xb081, 0x8763, 0x466, 0x1, 0x0);
        gbc.writeMem(0x46be, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x13e5, gbc.sp());
        EXPECT(0x46c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0252
        gbc.setState(0xe212, 0xdd4f, 0xbbe0, 0xa3cc, 0x5d15, 0xb200, 0x0, 0x0);
        gbc.writeMem(0xe212, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdd4f, gbc.sp());
        EXPECT(0xe214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe212));
        EXPECT(0xa5, gbc.readMem(0xe213));
        // CB A5 0253
        gbc.setState(0x570d, 0x1c68, 0xe190, 0xe914, 0xf719, 0x62f7, 0x1, 0x1);
        gbc.writeMem(0x570d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1c68, gbc.sp());
        EXPECT(0x570f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0254
        gbc.setState(0x75ff, 0x9ea3, 0xb700, 0xae50, 0x7ad6, 0x7ffd, 0x0, 0x0);
        gbc.writeMem(0x75ff, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9ea3, gbc.sp());
        EXPECT(0x7601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0255
        gbc.setState(0xed5f, 0x435f, 0xd940, 0xbf57, 0xa4b6, 0x6fb8, 0x1, 0x0);
        gbc.writeMem(0xed5f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x435f, gbc.sp());
        EXPECT(0xed61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed5f));
        EXPECT(0xa5, gbc.readMem(0xed60));
        // CB A5 0256
        gbc.setState(0xde1c, 0x23fd, 0x40a0, 0xbaaf, 0x9aed, 0x1ea7, 0x0, 0x0);
        gbc.writeMem(0xde1c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x23fd, gbc.sp());
        EXPECT(0xde1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde1c));
        EXPECT(0xa5, gbc.readMem(0xde1d));
        // CB A5 0257
        gbc.setState(0x1f04, 0xd622, 0xc9a0, 0x742e, 0xb314, 0xbbab, 0x1, 0x0);
        gbc.writeMem(0x1f04, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd622, gbc.sp());
        EXPECT(0x1f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0258
        gbc.setState(0xa238, 0x64ad, 0xd900, 0xb87a, 0xba5f, 0x8f68, 0x1, 0x0);
        gbc.writeMem(0xa238, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x64ad, gbc.sp());
        EXPECT(0xa23a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa238));
        EXPECT(0xa5, gbc.readMem(0xa239));
        // CB A5 0259
        gbc.setState(0x252, 0xc9b8, 0xbbd0, 0xd17b, 0xfae, 0x53f7, 0x0, 0x0);
        gbc.writeMem(0x252, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc9b8, gbc.sp());
        EXPECT(0x254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 025A
        gbc.setState(0xc350, 0xd62f, 0x360, 0xa1f8, 0xd9ec, 0x90e0, 0x0, 0x0);
        gbc.writeMem(0xc350, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd62f, gbc.sp());
        EXPECT(0xc352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc350));
        EXPECT(0xa5, gbc.readMem(0xc351));
        // CB A5 025B
        gbc.setState(0x7674, 0x2973, 0x8640, 0x2221, 0x1599, 0x8557, 0x0, 0x1);
        gbc.writeMem(0x7674, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2973, gbc.sp());
        EXPECT(0x7676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 025C
        gbc.setState(0x4557, 0x319b, 0x64b0, 0x28f7, 0xb459, 0xa459, 0x0, 0x1);
        gbc.writeMem(0x4557, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x319b, gbc.sp());
        EXPECT(0x4559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 025D
        gbc.setState(0xae5b, 0x4cc, 0x3a20, 0x4e0f, 0x2e1f, 0x4f1b, 0x0, 0x0);
        gbc.writeMem(0xae5b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4cc, gbc.sp());
        EXPECT(0xae5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae5b));
        EXPECT(0xa5, gbc.readMem(0xae5c));
        // CB A5 025E
        gbc.setState(0xb8a5, 0xeca4, 0xbe30, 0xee20, 0x4e1c, 0xccb2, 0x0, 0x1);
        gbc.writeMem(0xb8a5, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xeca4, gbc.sp());
        EXPECT(0xb8a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a5));
        EXPECT(0xa5, gbc.readMem(0xb8a6));
        // CB A5 025F
        gbc.setState(0x5e0, 0xa70f, 0xace0, 0x62ed, 0x25bd, 0x8a97, 0x0, 0x0);
        gbc.writeMem(0x5e0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa70f, gbc.sp());
        EXPECT(0x5e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0260
        gbc.setState(0xdf4, 0xb51e, 0x7780, 0xf082, 0xc2f, 0xd5ff, 0x0, 0x0);
        gbc.writeMem(0xdf4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb51e, gbc.sp());
        EXPECT(0xdf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0261
        gbc.setState(0x3f4c, 0x77cd, 0x5300, 0xcb7c, 0x6f4f, 0x4fc4, 0x1, 0x0);
        gbc.writeMem(0x3f4c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x77cd, gbc.sp());
        EXPECT(0x3f4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0262
        gbc.setState(0xd689, 0x799f, 0x9930, 0x8a01, 0x9286, 0xb065, 0x1, 0x0);
        gbc.writeMem(0xd689, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x799f, gbc.sp());
        EXPECT(0xd68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd689));
        EXPECT(0xa5, gbc.readMem(0xd68a));
        // CB A5 0263
        gbc.setState(0x6529, 0xb2b7, 0x690, 0xafac, 0x8bde, 0x9903, 0x0, 0x1);
        gbc.writeMem(0x6529, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb2b7, gbc.sp());
        EXPECT(0x652b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0264
        gbc.setState(0x1331, 0xa087, 0x2450, 0x225d, 0xdb43, 0xfc6d, 0x1, 0x1);
        gbc.writeMem(0x1331, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa087, gbc.sp());
        EXPECT(0x1333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0265
        gbc.setState(0xb0ff, 0xcb81, 0x7d60, 0x2bf5, 0xfaa3, 0xf6a5, 0x0, 0x0);
        gbc.writeMem(0xb0ff, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcb81, gbc.sp());
        EXPECT(0xb101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ff));
        EXPECT(0xa5, gbc.readMem(0xb100));
        // CB A5 0266
        gbc.setState(0x1fd3, 0x9261, 0x4e10, 0x4aeb, 0xe0e3, 0x296e, 0x0, 0x1);
        gbc.writeMem(0x1fd3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9261, gbc.sp());
        EXPECT(0x1fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0267
        gbc.setState(0x3cf2, 0xd0ea, 0xa680, 0xbd9, 0x47a9, 0xa9db, 0x1, 0x1);
        gbc.writeMem(0x3cf2, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd0ea, gbc.sp());
        EXPECT(0x3cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0268
        gbc.setState(0x9fa6, 0x78b2, 0x9540, 0x494c, 0x969d, 0x5688, 0x1, 0x0);
        gbc.writeMem(0x9fa6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x78b2, gbc.sp());
        EXPECT(0x9fa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa6));
        EXPECT(0xa5, gbc.readMem(0x9fa7));
        // CB A5 0269
        gbc.setState(0xe434, 0xd742, 0x1c50, 0xd7e7, 0x8e3c, 0xbbd, 0x1, 0x1);
        gbc.writeMem(0xe434, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd742, gbc.sp());
        EXPECT(0xe436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe434));
        EXPECT(0xa5, gbc.readMem(0xe435));
        // CB A5 026A
        gbc.setState(0x4b4b, 0x48c9, 0x7670, 0x7c5f, 0xe935, 0xb065, 0x1, 0x0);
        gbc.writeMem(0x4b4b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x48c9, gbc.sp());
        EXPECT(0x4b4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 026B
        gbc.setState(0x7605, 0x451b, 0xaef0, 0x9e2f, 0x3343, 0x6720, 0x0, 0x0);
        gbc.writeMem(0x7605, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x451b, gbc.sp());
        EXPECT(0x7607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 026C
        gbc.setState(0x45d, 0x77ca, 0x36f0, 0xdd51, 0x7bf9, 0xc61d, 0x1, 0x1);
        gbc.writeMem(0x45d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x77ca, gbc.sp());
        EXPECT(0x45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 026D
        gbc.setState(0xe67d, 0x4876, 0x4e90, 0x6aea, 0x3d99, 0xca72, 0x0, 0x0);
        gbc.writeMem(0xe67d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4876, gbc.sp());
        EXPECT(0xe67f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe67d));
        EXPECT(0xa5, gbc.readMem(0xe67e));
        // CB A5 026E
        gbc.setState(0x5bb7, 0xcd5b, 0x4d10, 0x564c, 0x9848, 0x49df, 0x1, 0x1);
        gbc.writeMem(0x5bb7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcd5b, gbc.sp());
        EXPECT(0x5bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 026F
        gbc.setState(0xafc9, 0x8246, 0x3710, 0xb471, 0xb62, 0xf071, 0x1, 0x1);
        gbc.writeMem(0xafc9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8246, gbc.sp());
        EXPECT(0xafcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc9));
        EXPECT(0xa5, gbc.readMem(0xafca));
        // CB A5 0270
        gbc.setState(0x1d7f, 0x68e0, 0x14f0, 0xfe79, 0x87a8, 0x4e58, 0x0, 0x0);
        gbc.writeMem(0x1d7f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x68e0, gbc.sp());
        EXPECT(0x1d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0271
        gbc.setState(0xcae2, 0xf163, 0xe00, 0x9c82, 0x8bf7, 0xe218, 0x0, 0x0);
        gbc.writeMem(0xcae2, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf163, gbc.sp());
        EXPECT(0xcae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae2));
        EXPECT(0xa5, gbc.readMem(0xcae3));
        // CB A5 0272
        gbc.setState(0x42d6, 0x53df, 0xcdf0, 0xf62b, 0xf157, 0x80ba, 0x1, 0x0);
        gbc.writeMem(0x42d6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x53df, gbc.sp());
        EXPECT(0x42d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0273
        gbc.setState(0xd321, 0xe1ef, 0xbfa0, 0x374c, 0xf38d, 0xc04e, 0x1, 0x0);
        gbc.writeMem(0xd321, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe1ef, gbc.sp());
        EXPECT(0xd323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd321));
        EXPECT(0xa5, gbc.readMem(0xd322));
        // CB A5 0275
        gbc.setState(0x247a, 0x53b7, 0x1ac0, 0x385a, 0x1031, 0xf4da, 0x0, 0x0);
        gbc.writeMem(0x247a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x53b7, gbc.sp());
        EXPECT(0x247c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0276
        gbc.setState(0x9628, 0x1987, 0x9930, 0xbe2b, 0x6a47, 0xb6e7, 0x1, 0x0);
        gbc.writeMem(0x9628, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1987, gbc.sp());
        EXPECT(0x962a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9628));
        EXPECT(0xa5, gbc.readMem(0x9629));
        // CB A5 0277
        gbc.setState(0x7e14, 0x28e3, 0xc0f0, 0x56de, 0x168b, 0x722a, 0x0, 0x1);
        gbc.writeMem(0x7e14, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x28e3, gbc.sp());
        EXPECT(0x7e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0278
        gbc.setState(0x8614, 0x65b0, 0x6200, 0x9870, 0x851f, 0x2b35, 0x1, 0x0);
        gbc.writeMem(0x8614, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x65b0, gbc.sp());
        EXPECT(0x8616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8614));
        EXPECT(0xa5, gbc.readMem(0x8615));
        // CB A5 0279
        gbc.setState(0x45d1, 0x8864, 0x5b20, 0x8f55, 0x30b3, 0x5c57, 0x0, 0x1);
        gbc.writeMem(0x45d1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8864, gbc.sp());
        EXPECT(0x45d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 027A
        gbc.setState(0x9e43, 0x62aa, 0x2b70, 0xd689, 0x183e, 0xad08, 0x1, 0x0);
        gbc.writeMem(0x9e43, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x62aa, gbc.sp());
        EXPECT(0x9e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e43));
        EXPECT(0xa5, gbc.readMem(0x9e44));
        // CB A5 027B
        gbc.setState(0xa511, 0x6ac5, 0xdfd0, 0x5061, 0xbf8, 0xc625, 0x1, 0x1);
        gbc.writeMem(0xa511, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6ac5, gbc.sp());
        EXPECT(0xa513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa511));
        EXPECT(0xa5, gbc.readMem(0xa512));
        // CB A5 027C
        gbc.setState(0x146e, 0xbdd8, 0xa410, 0xd524, 0xee00, 0x54bb, 0x1, 0x1);
        gbc.writeMem(0x146e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbdd8, gbc.sp());
        EXPECT(0x1470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 027D
        gbc.setState(0xeeee, 0xfc65, 0xef20, 0xa897, 0x92a5, 0xf32e, 0x0, 0x1);
        gbc.writeMem(0xeeee, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfc65, gbc.sp());
        EXPECT(0xeef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeee));
        EXPECT(0xa5, gbc.readMem(0xeeef));
        // CB A5 027E
        gbc.setState(0x74aa, 0x1e21, 0x19a0, 0x44b2, 0xa46b, 0xaa3, 0x1, 0x0);
        gbc.writeMem(0x74aa, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1e21, gbc.sp());
        EXPECT(0x74ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 027F
        gbc.setState(0xc6b9, 0xc5ad, 0xf8c0, 0x2ebc, 0xa75c, 0x45e7, 0x1, 0x1);
        gbc.writeMem(0xc6b9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc5ad, gbc.sp());
        EXPECT(0xc6bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b9));
        EXPECT(0xa5, gbc.readMem(0xc6ba));
        // CB A5 0281
        gbc.setState(0x18ae, 0x521d, 0x9c50, 0xf2d2, 0xd79d, 0x1148, 0x0, 0x0);
        gbc.writeMem(0x18ae, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x521d, gbc.sp());
        EXPECT(0x18b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0282
        gbc.setState(0x7b33, 0x3da4, 0x4770, 0x5a77, 0xec2d, 0xd4c2, 0x1, 0x0);
        gbc.writeMem(0x7b33, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3da4, gbc.sp());
        EXPECT(0x7b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0283
        gbc.setState(0x2b9c, 0x5d1f, 0x7e50, 0xff41, 0xa82a, 0xb1b2, 0x0, 0x1);
        gbc.writeMem(0x2b9c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5d1f, gbc.sp());
        EXPECT(0x2b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0284
        gbc.setState(0x6a70, 0x61e6, 0xe030, 0x1f58, 0x9fc2, 0x684f, 0x1, 0x0);
        gbc.writeMem(0x6a70, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x61e6, gbc.sp());
        EXPECT(0x6a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0285
        gbc.setState(0xb83b, 0xa3c4, 0x46f0, 0xafa0, 0xe347, 0xfad6, 0x1, 0x1);
        gbc.writeMem(0xb83b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa3c4, gbc.sp());
        EXPECT(0xb83d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb83b));
        EXPECT(0xa5, gbc.readMem(0xb83c));
        // CB A5 0286
        gbc.setState(0x9af4, 0xfd88, 0xf5f0, 0xe339, 0xe48f, 0x3ca2, 0x1, 0x0);
        gbc.writeMem(0x9af4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfd88, gbc.sp());
        EXPECT(0x9af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af4));
        EXPECT(0xa5, gbc.readMem(0x9af5));
        // CB A5 0287
        gbc.setState(0xa1b, 0x3632, 0x2e70, 0x7028, 0x77b0, 0x6289, 0x0, 0x0);
        gbc.writeMem(0xa1b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3632, gbc.sp());
        EXPECT(0xa1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0288
        gbc.setState(0x67a8, 0xe42e, 0x31d0, 0xdc11, 0x5dc6, 0xcb8f, 0x0, 0x0);
        gbc.writeMem(0x67a8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe42e, gbc.sp());
        EXPECT(0x67aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0289
        gbc.setState(0x153e, 0xdfbb, 0x9910, 0xe635, 0x6f5c, 0x652c, 0x1, 0x1);
        gbc.writeMem(0x153e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdfbb, gbc.sp());
        EXPECT(0x1540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 028A
        gbc.setState(0xc597, 0x47c8, 0xfb40, 0xb780, 0xb7ee, 0x81a8, 0x1, 0x0);
        gbc.writeMem(0xc597, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x47c8, gbc.sp());
        EXPECT(0xc599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc597));
        EXPECT(0xa5, gbc.readMem(0xc598));
        // CB A5 028B
        gbc.setState(0xcbfd, 0x3df6, 0x810, 0xeaf8, 0x7229, 0xd9f2, 0x0, 0x0);
        gbc.writeMem(0xcbfd, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3df6, gbc.sp());
        EXPECT(0xcbff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbfd));
        EXPECT(0xa5, gbc.readMem(0xcbfe));
        // CB A5 028C
        gbc.setState(0x29e8, 0x52ec, 0x6580, 0x64a4, 0xdc12, 0xae10, 0x0, 0x1);
        gbc.writeMem(0x29e8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x52ec, gbc.sp());
        EXPECT(0x29ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 028D
        gbc.setState(0x143, 0x295b, 0x5530, 0x3906, 0x8169, 0xbe25, 0x0, 0x0);
        gbc.writeMem(0x143, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x295b, gbc.sp());
        EXPECT(0x145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 028E
        gbc.setState(0x5294, 0x756, 0xab0, 0x6664, 0x4de3, 0xbe16, 0x0, 0x1);
        gbc.writeMem(0x5294, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x756, gbc.sp());
        EXPECT(0x5296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 028F
        gbc.setState(0xde6e, 0xfa55, 0xa780, 0xfe5c, 0x895c, 0x7d43, 0x1, 0x1);
        gbc.writeMem(0xde6e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xfa55, gbc.sp());
        EXPECT(0xde70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6e));
        EXPECT(0xa5, gbc.readMem(0xde6f));
        // CB A5 0290
        gbc.setState(0xb294, 0x5f9c, 0xacd0, 0x64dc, 0xc48f, 0x1812, 0x0, 0x0);
        gbc.writeMem(0xb294, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5f9c, gbc.sp());
        EXPECT(0xb296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb294));
        EXPECT(0xa5, gbc.readMem(0xb295));
        // CB A5 0291
        gbc.setState(0x7bae, 0x61b4, 0xf70, 0x475, 0x13be, 0x53fa, 0x0, 0x0);
        gbc.writeMem(0x7bae, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x61b4, gbc.sp());
        EXPECT(0x7bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0292
        gbc.setState(0x650c, 0x71d6, 0xf350, 0x93cd, 0xb03e, 0xfcef, 0x1, 0x1);
        gbc.writeMem(0x650c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x71d6, gbc.sp());
        EXPECT(0x650e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0293
        gbc.setState(0x8443, 0xf4d7, 0x7920, 0x9ecc, 0xa2e9, 0x9663, 0x1, 0x0);
        gbc.writeMem(0x8443, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf4d7, gbc.sp());
        EXPECT(0x8445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8443));
        EXPECT(0xa5, gbc.readMem(0x8444));
        // CB A5 0294
        gbc.setState(0xafd5, 0xe5c9, 0xeaf0, 0x9618, 0x406, 0xb483, 0x0, 0x0);
        gbc.writeMem(0xafd5, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe5c9, gbc.sp());
        EXPECT(0xafd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd5));
        EXPECT(0xa5, gbc.readMem(0xafd6));
        // CB A5 0295
        gbc.setState(0xbec9, 0x674c, 0x4670, 0x14b3, 0xbb4b, 0xe882, 0x0, 0x0);
        gbc.writeMem(0xbec9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x674c, gbc.sp());
        EXPECT(0xbecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec9));
        EXPECT(0xa5, gbc.readMem(0xbeca));
        // CB A5 0296
        gbc.setState(0x37ff, 0x3a0a, 0xd6f0, 0x7840, 0xa70f, 0x98c5, 0x1, 0x0);
        gbc.writeMem(0x37ff, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3a0a, gbc.sp());
        EXPECT(0x3801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0297
        gbc.setState(0xf85, 0xb271, 0xe2b0, 0xf1ad, 0x420f, 0x5f2b, 0x0, 0x1);
        gbc.writeMem(0xf85, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb271, gbc.sp());
        EXPECT(0xf87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0298
        gbc.setState(0xa21, 0xa7aa, 0x900, 0x5369, 0x25fa, 0x249e, 0x0, 0x0);
        gbc.writeMem(0xa21, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa7aa, gbc.sp());
        EXPECT(0xa23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0299
        gbc.setState(0xf7a, 0x747a, 0x7aa0, 0x4613, 0x3f02, 0xfd28, 0x1, 0x0);
        gbc.writeMem(0xf7a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x747a, gbc.sp());
        EXPECT(0xf7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 029A
        gbc.setState(0xa9c6, 0x2620, 0x9b40, 0x211d, 0x63e, 0x317b, 0x1, 0x1);
        gbc.writeMem(0xa9c6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2620, gbc.sp());
        EXPECT(0xa9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c6));
        EXPECT(0xa5, gbc.readMem(0xa9c7));
        // CB A5 029B
        gbc.setState(0x9c84, 0x932c, 0xaff0, 0x6a94, 0x4fdc, 0xa723, 0x0, 0x1);
        gbc.writeMem(0x9c84, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x932c, gbc.sp());
        EXPECT(0x9c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c84));
        EXPECT(0xa5, gbc.readMem(0x9c85));
        // CB A5 029C
        gbc.setState(0x8160, 0x5da0, 0x5500, 0xda71, 0x6e52, 0x8815, 0x1, 0x1);
        gbc.writeMem(0x8160, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5da0, gbc.sp());
        EXPECT(0x8162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8160));
        EXPECT(0xa5, gbc.readMem(0x8161));
        // CB A5 029D
        gbc.setState(0x2fa0, 0xc2da, 0x2150, 0x5369, 0xf354, 0x44ee, 0x0, 0x0);
        gbc.writeMem(0x2fa0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc2da, gbc.sp());
        EXPECT(0x2fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 029E
        gbc.setState(0x83f6, 0x339e, 0x6000, 0x21, 0xf9a6, 0xb0bb, 0x1, 0x0);
        gbc.writeMem(0x83f6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x339e, gbc.sp());
        EXPECT(0x83f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f6));
        EXPECT(0xa5, gbc.readMem(0x83f7));
        // CB A5 029F
        gbc.setState(0x9d24, 0x1be0, 0x3d50, 0xecb8, 0x370e, 0xd589, 0x0, 0x0);
        gbc.writeMem(0x9d24, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1be0, gbc.sp());
        EXPECT(0x9d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d24));
        EXPECT(0xa5, gbc.readMem(0x9d25));
        // CB A5 02A0
        gbc.setState(0x6573, 0xfda1, 0xd90, 0x2bab, 0x208, 0xebb, 0x1, 0x0);
        gbc.writeMem(0x6573, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfda1, gbc.sp());
        EXPECT(0x6575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02A1
        gbc.setState(0x1e5d, 0x470b, 0x22a0, 0x2e64, 0x952f, 0x7f1f, 0x1, 0x1);
        gbc.writeMem(0x1e5d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x470b, gbc.sp());
        EXPECT(0x1e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02A3
        gbc.setState(0xc6a9, 0xde83, 0xd7f0, 0xd120, 0xf672, 0x58f1, 0x1, 0x1);
        gbc.writeMem(0xc6a9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xde83, gbc.sp());
        EXPECT(0xc6ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a9));
        EXPECT(0xa5, gbc.readMem(0xc6aa));
        // CB A5 02A4
        gbc.setState(0xa9d8, 0x3e57, 0xdb0, 0xe27, 0x3aa, 0xc3c9, 0x1, 0x0);
        gbc.writeMem(0xa9d8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3e57, gbc.sp());
        EXPECT(0xa9da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d8));
        EXPECT(0xa5, gbc.readMem(0xa9d9));
        // CB A5 02A5
        gbc.setState(0x5a09, 0x3efe, 0x1ae0, 0x2f65, 0x5f21, 0x871e, 0x0, 0x0);
        gbc.writeMem(0x5a09, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3efe, gbc.sp());
        EXPECT(0x5a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02A6
        gbc.setState(0xd802, 0x67a4, 0x5dd0, 0x4976, 0xda03, 0xe337, 0x1, 0x1);
        gbc.writeMem(0xd802, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x67a4, gbc.sp());
        EXPECT(0xd804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd802));
        EXPECT(0xa5, gbc.readMem(0xd803));
        // CB A5 02A7
        gbc.setState(0x4b30, 0x4e52, 0x8730, 0x6eb8, 0x209e, 0x7f7b, 0x0, 0x0);
        gbc.writeMem(0x4b30, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4e52, gbc.sp());
        EXPECT(0x4b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02A8
        gbc.setState(0xb8bb, 0x5bc9, 0x2170, 0x3f5e, 0xabe9, 0x231d, 0x0, 0x1);
        gbc.writeMem(0xb8bb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5bc9, gbc.sp());
        EXPECT(0xb8bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8bb));
        EXPECT(0xa5, gbc.readMem(0xb8bc));
        // CB A5 02A9
        gbc.setState(0xae9e, 0x3632, 0x9530, 0x885e, 0x3504, 0x6572, 0x0, 0x1);
        gbc.writeMem(0xae9e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3632, gbc.sp());
        EXPECT(0xaea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae9e));
        EXPECT(0xa5, gbc.readMem(0xae9f));
        // CB A5 02AA
        gbc.setState(0xa89b, 0xd313, 0x7360, 0x2ac8, 0x3e4e, 0xac49, 0x0, 0x1);
        gbc.writeMem(0xa89b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd313, gbc.sp());
        EXPECT(0xa89d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89b));
        EXPECT(0xa5, gbc.readMem(0xa89c));
        // CB A5 02AB
        gbc.setState(0x3888, 0xd8df, 0xfae0, 0xbe7d, 0x5d8a, 0xd248, 0x1, 0x1);
        gbc.writeMem(0x3888, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd8df, gbc.sp());
        EXPECT(0x388a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02AD
        gbc.setState(0x8fa, 0x4274, 0x4f40, 0x4407, 0xa740, 0x1fe0, 0x1, 0x1);
        gbc.writeMem(0x8fa, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4274, gbc.sp());
        EXPECT(0x8fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02AE
        gbc.setState(0x6dec, 0xd3c2, 0x1610, 0xa390, 0xde0b, 0x1acd, 0x0, 0x1);
        gbc.writeMem(0x6dec, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd3c2, gbc.sp());
        EXPECT(0x6dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02AF
        gbc.setState(0xe0af, 0x9756, 0x6980, 0x27f9, 0xc4c6, 0xff83, 0x0, 0x1);
        gbc.writeMem(0xe0af, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9756, gbc.sp());
        EXPECT(0xe0b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0af));
        EXPECT(0xa5, gbc.readMem(0xe0b0));
        // CB A5 02B0
        gbc.setState(0x97cc, 0x37e3, 0x13d0, 0x61f6, 0x7a5f, 0xc2c0, 0x1, 0x1);
        gbc.writeMem(0x97cc, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x37e3, gbc.sp());
        EXPECT(0x97ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97cc));
        EXPECT(0xa5, gbc.readMem(0x97cd));
        // CB A5 02B1
        gbc.setState(0xbb93, 0x82f5, 0x9790, 0xd416, 0x92d9, 0x6195, 0x0, 0x0);
        gbc.writeMem(0xbb93, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x82f5, gbc.sp());
        EXPECT(0xbb95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb93));
        EXPECT(0xa5, gbc.readMem(0xbb94));
        // CB A5 02B2
        gbc.setState(0x2e4b, 0xa363, 0xf6c0, 0x2a63, 0x5642, 0xcb7f, 0x0, 0x0);
        gbc.writeMem(0x2e4b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa363, gbc.sp());
        EXPECT(0x2e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02B3
        gbc.setState(0x72bc, 0x6732, 0x1910, 0x648b, 0x8533, 0xf4a0, 0x0, 0x0);
        gbc.writeMem(0x72bc, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6732, gbc.sp());
        EXPECT(0x72be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02B4
        gbc.setState(0xdeb9, 0x5bf8, 0x3bd0, 0x520b, 0x125c, 0xe877, 0x0, 0x0);
        gbc.writeMem(0xdeb9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5bf8, gbc.sp());
        EXPECT(0xdebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb9));
        EXPECT(0xa5, gbc.readMem(0xdeba));
        // CB A5 02B5
        gbc.setState(0xeb87, 0xea8, 0x8930, 0x2335, 0x98a7, 0x946e, 0x1, 0x0);
        gbc.writeMem(0xeb87, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xea8, gbc.sp());
        EXPECT(0xeb89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb87));
        EXPECT(0xa5, gbc.readMem(0xeb88));
        // CB A5 02B6
        gbc.setState(0xb472, 0xd629, 0x3600, 0x8eb3, 0x8f26, 0x7804, 0x0, 0x0);
        gbc.writeMem(0xb472, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd629, gbc.sp());
        EXPECT(0xb474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb472));
        EXPECT(0xa5, gbc.readMem(0xb473));
        // CB A5 02B8
        gbc.setState(0x6164, 0x5717, 0xc5d0, 0xc0cb, 0x2800, 0x839d, 0x0, 0x1);
        gbc.writeMem(0x6164, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5717, gbc.sp());
        EXPECT(0x6166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02B9
        gbc.setState(0x7171, 0xf8d5, 0x9bd0, 0xf839, 0x88d0, 0x4a2d, 0x1, 0x0);
        gbc.writeMem(0x7171, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf8d5, gbc.sp());
        EXPECT(0x7173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02BA
        gbc.setState(0x8961, 0x2606, 0x3c60, 0x2a1e, 0xb26, 0x85e8, 0x0, 0x0);
        gbc.writeMem(0x8961, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2606, gbc.sp());
        EXPECT(0x8963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8961));
        EXPECT(0xa5, gbc.readMem(0x8962));
        // CB A5 02BB
        gbc.setState(0xb6ec, 0x1ada, 0x3910, 0xa356, 0xfb14, 0x9412, 0x0, 0x1);
        gbc.writeMem(0xb6ec, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1ada, gbc.sp());
        EXPECT(0xb6ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ec));
        EXPECT(0xa5, gbc.readMem(0xb6ed));
        // CB A5 02BC
        gbc.setState(0x76d0, 0xab6e, 0xf410, 0x866e, 0x6657, 0xc34a, 0x0, 0x1);
        gbc.writeMem(0x76d0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xab6e, gbc.sp());
        EXPECT(0x76d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02BD
        gbc.setState(0x45d7, 0x14f, 0x8770, 0xce6e, 0x8f81, 0xd78d, 0x0, 0x1);
        gbc.writeMem(0x45d7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x14f, gbc.sp());
        EXPECT(0x45d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02BE
        gbc.setState(0xb935, 0x8be8, 0x5d00, 0xda40, 0x2bb1, 0xf4e1, 0x0, 0x0);
        gbc.writeMem(0xb935, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8be8, gbc.sp());
        EXPECT(0xb937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb935));
        EXPECT(0xa5, gbc.readMem(0xb936));
        // CB A5 02BF
        gbc.setState(0xbdf6, 0xefbf, 0x84d0, 0x2633, 0x5211, 0x5d4f, 0x0, 0x0);
        gbc.writeMem(0xbdf6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xefbf, gbc.sp());
        EXPECT(0xbdf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf6));
        EXPECT(0xa5, gbc.readMem(0xbdf7));
        // CB A5 02C0
        gbc.setState(0xa617, 0xbf08, 0xfa50, 0x5ea1, 0xcd44, 0x1892, 0x0, 0x0);
        gbc.writeMem(0xa617, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbf08, gbc.sp());
        EXPECT(0xa619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa617));
        EXPECT(0xa5, gbc.readMem(0xa618));
        // CB A5 02C1
        gbc.setState(0x6359, 0x657b, 0xb9c0, 0xbdc2, 0x10e0, 0x3c85, 0x0, 0x1);
        gbc.writeMem(0x6359, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x657b, gbc.sp());
        EXPECT(0x635b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02C2
        gbc.setState(0x8627, 0x23f0, 0x4740, 0xfcf2, 0xb9eb, 0xd11c, 0x0, 0x1);
        gbc.writeMem(0x8627, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x23f0, gbc.sp());
        EXPECT(0x8629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8627));
        EXPECT(0xa5, gbc.readMem(0x8628));
        // CB A5 02C4
        gbc.setState(0xc95c, 0xe5b0, 0x4a90, 0x2733, 0x4b53, 0xb7c2, 0x0, 0x1);
        gbc.writeMem(0xc95c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe5b0, gbc.sp());
        EXPECT(0xc95e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc95c));
        EXPECT(0xa5, gbc.readMem(0xc95d));
        // CB A5 02C5
        gbc.setState(0xd32b, 0xbf74, 0xb960, 0x60cc, 0xa355, 0x5d0a, 0x0, 0x1);
        gbc.writeMem(0xd32b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbf74, gbc.sp());
        EXPECT(0xd32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32b));
        EXPECT(0xa5, gbc.readMem(0xd32c));
        // CB A5 02C6
        gbc.setState(0x6d01, 0xed9e, 0x1eb0, 0x971a, 0xd0b4, 0xc299, 0x0, 0x0);
        gbc.writeMem(0x6d01, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xed9e, gbc.sp());
        EXPECT(0x6d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02C7
        gbc.setState(0x1aac, 0x3fae, 0x2f00, 0xe9b0, 0xfdeb, 0xe943, 0x0, 0x1);
        gbc.writeMem(0x1aac, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3fae, gbc.sp());
        EXPECT(0x1aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02C8
        gbc.setState(0xd922, 0x8610, 0xff90, 0xdf25, 0x2f4e, 0xddb4, 0x1, 0x0);
        gbc.writeMem(0xd922, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8610, gbc.sp());
        EXPECT(0xd924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd922));
        EXPECT(0xa5, gbc.readMem(0xd923));
        // CB A5 02C9
        gbc.setState(0xe29a, 0xd717, 0xb470, 0xafcc, 0x2498, 0x3b42, 0x1, 0x0);
        gbc.writeMem(0xe29a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd717, gbc.sp());
        EXPECT(0xe29c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe29a));
        EXPECT(0xa5, gbc.readMem(0xe29b));
        // CB A5 02CB
        gbc.setState(0xbe02, 0xe005, 0xf840, 0xbffc, 0x8e96, 0x3f9, 0x1, 0x0);
        gbc.writeMem(0xbe02, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe005, gbc.sp());
        EXPECT(0xbe04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe02));
        EXPECT(0xa5, gbc.readMem(0xbe03));
        // CB A5 02CC
        gbc.setState(0x39d4, 0xbbe4, 0xb940, 0xa1b7, 0x39e9, 0x8e80, 0x1, 0x0);
        gbc.writeMem(0x39d4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbbe4, gbc.sp());
        EXPECT(0x39d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02CD
        gbc.setState(0x7c10, 0x98f4, 0x30f0, 0x339e, 0xff0f, 0xfe99, 0x1, 0x0);
        gbc.writeMem(0x7c10, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x98f4, gbc.sp());
        EXPECT(0x7c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02CE
        gbc.setState(0xbd56, 0xa95b, 0x4750, 0x846f, 0xac0a, 0x8fea, 0x1, 0x0);
        gbc.writeMem(0xbd56, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa95b, gbc.sp());
        EXPECT(0xbd58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd56));
        EXPECT(0xa5, gbc.readMem(0xbd57));
        // CB A5 02CF
        gbc.setState(0xc4e1, 0x2db1, 0x24b0, 0xda, 0x767e, 0xbd5e, 0x1, 0x1);
        gbc.writeMem(0xc4e1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2db1, gbc.sp());
        EXPECT(0xc4e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e1));
        EXPECT(0xa5, gbc.readMem(0xc4e2));
        // CB A5 02D0
        gbc.setState(0xd1a3, 0xc36c, 0xedb0, 0x974f, 0x7314, 0xebb8, 0x0, 0x0);
        gbc.writeMem(0xd1a3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc36c, gbc.sp());
        EXPECT(0xd1a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a3));
        EXPECT(0xa5, gbc.readMem(0xd1a4));
        // CB A5 02D2
        gbc.setState(0x45e0, 0xc51e, 0x6320, 0xce09, 0x1cfa, 0x2d46, 0x0, 0x0);
        gbc.writeMem(0x45e0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc51e, gbc.sp());
        EXPECT(0x45e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02D4
        gbc.setState(0x259f, 0xaf34, 0x4e50, 0xaaad, 0xfd31, 0x2f20, 0x1, 0x0);
        gbc.writeMem(0x259f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xaf34, gbc.sp());
        EXPECT(0x25a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02D5
        gbc.setState(0x9993, 0xd6e1, 0xc8a0, 0x43a5, 0x5485, 0x9bd8, 0x1, 0x1);
        gbc.writeMem(0x9993, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd6e1, gbc.sp());
        EXPECT(0x9995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9993));
        EXPECT(0xa5, gbc.readMem(0x9994));
        // CB A5 02D6
        gbc.setState(0x7415, 0x23b1, 0x1220, 0x49e1, 0xa7c, 0xc1af, 0x0, 0x1);
        gbc.writeMem(0x7415, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x23b1, gbc.sp());
        EXPECT(0x7417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02D7
        gbc.setState(0xb066, 0xe4fd, 0x8010, 0x78c8, 0x7717, 0xc069, 0x0, 0x0);
        gbc.writeMem(0xb066, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe4fd, gbc.sp());
        EXPECT(0xb068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb066));
        EXPECT(0xa5, gbc.readMem(0xb067));
        // CB A5 02D8
        gbc.setState(0x8890, 0xb560, 0x4890, 0xa789, 0x6d93, 0x42b3, 0x0, 0x0);
        gbc.writeMem(0x8890, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb560, gbc.sp());
        EXPECT(0x8892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8890));
        EXPECT(0xa5, gbc.readMem(0x8891));
        // CB A5 02D9
        gbc.setState(0xad74, 0xd664, 0x5090, 0x8c9e, 0xc31d, 0x7e7d, 0x1, 0x0);
        gbc.writeMem(0xad74, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd664, gbc.sp());
        EXPECT(0xad76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad74));
        EXPECT(0xa5, gbc.readMem(0xad75));
        // CB A5 02DB
        gbc.setState(0x7e87, 0x3287, 0xdb60, 0x48f9, 0xaf67, 0xa8fd, 0x0, 0x0);
        gbc.writeMem(0x7e87, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3287, gbc.sp());
        EXPECT(0x7e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02DC
        gbc.setState(0xa499, 0xcd15, 0x6c20, 0xd12e, 0xd522, 0xaf6a, 0x0, 0x0);
        gbc.writeMem(0xa499, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xcd15, gbc.sp());
        EXPECT(0xa49b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa499));
        EXPECT(0xa5, gbc.readMem(0xa49a));
        // CB A5 02DD
        gbc.setState(0xa0d3, 0x96d8, 0x90b0, 0x714e, 0xaf80, 0x5083, 0x0, 0x1);
        gbc.writeMem(0xa0d3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x96d8, gbc.sp());
        EXPECT(0xa0d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d3));
        EXPECT(0xa5, gbc.readMem(0xa0d4));
        // CB A5 02DE
        gbc.setState(0x3838, 0xc2ff, 0xcf50, 0x956, 0x1c52, 0x8e03, 0x1, 0x1);
        gbc.writeMem(0x3838, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc2ff, gbc.sp());
        EXPECT(0x383a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02DF
        gbc.setState(0xc39b, 0xa1bb, 0xd20, 0xd6c4, 0xf8b1, 0xabf9, 0x1, 0x0);
        gbc.writeMem(0xc39b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa1bb, gbc.sp());
        EXPECT(0xc39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39b));
        EXPECT(0xa5, gbc.readMem(0xc39c));
        // CB A5 02E0
        gbc.setState(0x5aaa, 0xfa53, 0x1d50, 0x80e5, 0x5b62, 0x5d0a, 0x0, 0x0);
        gbc.writeMem(0x5aaa, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfa53, gbc.sp());
        EXPECT(0x5aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02E1
        gbc.setState(0x531b, 0x8d28, 0x54f0, 0xb039, 0x85da, 0x7f7, 0x1, 0x1);
        gbc.writeMem(0x531b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8d28, gbc.sp());
        EXPECT(0x531d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02E3
        gbc.setState(0x485, 0xa9f, 0x4310, 0x6c1b, 0xd98f, 0xae39, 0x0, 0x1);
        gbc.writeMem(0x485, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa9f, gbc.sp());
        EXPECT(0x487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02E4
        gbc.setState(0x9361, 0x360e, 0xfb0, 0x6d8f, 0x83f7, 0xff2c, 0x1, 0x1);
        gbc.writeMem(0x9361, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x360e, gbc.sp());
        EXPECT(0x9363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9361));
        EXPECT(0xa5, gbc.readMem(0x9362));
        // CB A5 02E5
        gbc.setState(0x4b1d, 0xc3f2, 0xbd90, 0xfcaf, 0x3f86, 0x32ae, 0x1, 0x0);
        gbc.writeMem(0x4b1d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc3f2, gbc.sp());
        EXPECT(0x4b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02E6
        gbc.setState(0x750c, 0x9f8b, 0x9360, 0x2d35, 0x6eb5, 0x721b, 0x1, 0x0);
        gbc.writeMem(0x750c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9f8b, gbc.sp());
        EXPECT(0x750e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02E7
        gbc.setState(0x7857, 0x5e79, 0xa860, 0x5abf, 0xa38b, 0xfb87, 0x0, 0x0);
        gbc.writeMem(0x7857, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5e79, gbc.sp());
        EXPECT(0x7859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02E8
        gbc.setState(0x5764, 0x12bb, 0x46a0, 0x7638, 0x706c, 0x3683, 0x1, 0x1);
        gbc.writeMem(0x5764, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x12bb, gbc.sp());
        EXPECT(0x5766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02E9
        gbc.setState(0x78db, 0xee86, 0x7290, 0x6459, 0x8824, 0x893e, 0x0, 0x0);
        gbc.writeMem(0x78db, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xee86, gbc.sp());
        EXPECT(0x78dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02EA
        gbc.setState(0x651f, 0x152b, 0x1610, 0xd387, 0x3fe8, 0x840e, 0x0, 0x1);
        gbc.writeMem(0x651f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x152b, gbc.sp());
        EXPECT(0x6521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02EB
        gbc.setState(0xcc1c, 0x41bf, 0x1ab0, 0x69f8, 0xb6f2, 0x9b4e, 0x0, 0x1);
        gbc.writeMem(0xcc1c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x41bf, gbc.sp());
        EXPECT(0xcc1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc1c));
        EXPECT(0xa5, gbc.readMem(0xcc1d));
        // CB A5 02EC
        gbc.setState(0x473d, 0xd09f, 0x93d0, 0x3b8, 0x40d6, 0x2455, 0x0, 0x0);
        gbc.writeMem(0x473d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd09f, gbc.sp());
        EXPECT(0x473f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02ED
        gbc.setState(0x5435, 0x2340, 0xa6c0, 0x80e0, 0xffde, 0xab43, 0x0, 0x0);
        gbc.writeMem(0x5435, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2340, gbc.sp());
        EXPECT(0x5437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02EE
        gbc.setState(0x13ff, 0xba3d, 0xb710, 0x7f5c, 0x342, 0xd330, 0x0, 0x0);
        gbc.writeMem(0x13ff, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xba3d, gbc.sp());
        EXPECT(0x1401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02EF
        gbc.setState(0x2433, 0xbdbe, 0x1bf0, 0xcc99, 0xfc2f, 0x25db, 0x1, 0x1);
        gbc.writeMem(0x2433, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbdbe, gbc.sp());
        EXPECT(0x2435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02F0
        gbc.setState(0x7b5, 0x12ea, 0x2be0, 0xd75a, 0x85e, 0x3072, 0x1, 0x1);
        gbc.writeMem(0x7b5, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x12ea, gbc.sp());
        EXPECT(0x7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02F1
        gbc.setState(0x31e1, 0xf469, 0xd4b0, 0xc3ea, 0x3bb2, 0x6d61, 0x0, 0x0);
        gbc.writeMem(0x31e1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf469, gbc.sp());
        EXPECT(0x31e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02F2
        gbc.setState(0x1a5b, 0xdeb2, 0xa060, 0x5db6, 0x206f, 0x7a7b, 0x0, 0x0);
        gbc.writeMem(0x1a5b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdeb2, gbc.sp());
        EXPECT(0x1a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02F3
        gbc.setState(0x8418, 0x9ea8, 0x8e40, 0xda0, 0x5f60, 0x636c, 0x0, 0x1);
        gbc.writeMem(0x8418, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9ea8, gbc.sp());
        EXPECT(0x841a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8418));
        EXPECT(0xa5, gbc.readMem(0x8419));
        // CB A5 02F4
        gbc.setState(0xdb4b, 0x1b33, 0x8dd0, 0x9ae4, 0x4141, 0x3a85, 0x1, 0x1);
        gbc.writeMem(0xdb4b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1b33, gbc.sp());
        EXPECT(0xdb4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb4b));
        EXPECT(0xa5, gbc.readMem(0xdb4c));
        // CB A5 02F5
        gbc.setState(0x98e3, 0x7424, 0x45c0, 0x860a, 0xcda7, 0x1647, 0x0, 0x1);
        gbc.writeMem(0x98e3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7424, gbc.sp());
        EXPECT(0x98e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e3));
        EXPECT(0xa5, gbc.readMem(0x98e4));
        // CB A5 02F6
        gbc.setState(0x30d8, 0x7153, 0x9010, 0xa890, 0x19f0, 0x3895, 0x0, 0x0);
        gbc.writeMem(0x30d8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7153, gbc.sp());
        EXPECT(0x30da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02F7
        gbc.setState(0xbefa, 0xf9a7, 0x1bc0, 0x4e99, 0xf4e7, 0xa463, 0x1, 0x0);
        gbc.writeMem(0xbefa, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf9a7, gbc.sp());
        EXPECT(0xbefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbefa));
        EXPECT(0xa5, gbc.readMem(0xbefb));
        // CB A5 02F8
        gbc.setState(0xe079, 0xbb3b, 0x9710, 0xb7c6, 0xdb3, 0x495e, 0x1, 0x0);
        gbc.writeMem(0xe079, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbb3b, gbc.sp());
        EXPECT(0xe07b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe079));
        EXPECT(0xa5, gbc.readMem(0xe07a));
        // CB A5 02F9
        gbc.setState(0x772f, 0x3fae, 0x3ca0, 0x30bf, 0x26fd, 0xa6f4, 0x0, 0x1);
        gbc.writeMem(0x772f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3fae, gbc.sp());
        EXPECT(0x7731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02FA
        gbc.setState(0x6e44, 0x1539, 0x7f30, 0x28cc, 0x26b, 0xd48b, 0x1, 0x1);
        gbc.writeMem(0x6e44, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1539, gbc.sp());
        EXPECT(0x6e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 02FB
        gbc.setState(0x5464, 0x3428, 0xb580, 0x3d19, 0x19c, 0x5441, 0x0, 0x1);
        gbc.writeMem(0x5464, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3428, gbc.sp());
        EXPECT(0x5466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02FC
        gbc.setState(0x5fde, 0xa766, 0xe6a0, 0x4760, 0x26fb, 0x78e8, 0x1, 0x1);
        gbc.writeMem(0x5fde, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa766, gbc.sp());
        EXPECT(0x5fe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 02FE
        gbc.setState(0xe675, 0x5e95, 0x9be0, 0xccbf, 0x9cde, 0x3df, 0x1, 0x0);
        gbc.writeMem(0xe675, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5e95, gbc.sp());
        EXPECT(0xe677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe675));
        EXPECT(0xa5, gbc.readMem(0xe676));
        // CB A5 02FF
        gbc.setState(0x1b40, 0xf672, 0xe850, 0x4b46, 0xc2c1, 0x68c4, 0x0, 0x1);
        gbc.writeMem(0x1b40, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf672, gbc.sp());
        EXPECT(0x1b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0301
        gbc.setState(0x6d38, 0x7825, 0x4630, 0xb2ad, 0x1e38, 0xa8ea, 0x0, 0x0);
        gbc.writeMem(0x6d38, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7825, gbc.sp());
        EXPECT(0x6d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0302
        gbc.setState(0x6cb1, 0x2ef7, 0x15b0, 0x6599, 0xb04e, 0xd0e7, 0x1, 0x0);
        gbc.writeMem(0x6cb1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2ef7, gbc.sp());
        EXPECT(0x6cb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0303
        gbc.setState(0x62c2, 0xc260, 0xfb00, 0xc538, 0xe810, 0x1558, 0x1, 0x0);
        gbc.writeMem(0x62c2, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc260, gbc.sp());
        EXPECT(0x62c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0304
        gbc.setState(0xad52, 0x1743, 0x6ba0, 0x7031, 0x24b9, 0x131a, 0x0, 0x0);
        gbc.writeMem(0xad52, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1743, gbc.sp());
        EXPECT(0xad54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad52));
        EXPECT(0xa5, gbc.readMem(0xad53));
        // CB A5 0307
        gbc.setState(0x5cc, 0x8a8e, 0x7340, 0x6016, 0x43b, 0xa782, 0x1, 0x1);
        gbc.writeMem(0x5cc, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8a8e, gbc.sp());
        EXPECT(0x5ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0308
        gbc.setState(0xa5fd, 0x4afa, 0x49c0, 0x4d73, 0x7d5, 0xbb0, 0x1, 0x0);
        gbc.writeMem(0xa5fd, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4afa, gbc.sp());
        EXPECT(0xa5ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5fd));
        EXPECT(0xa5, gbc.readMem(0xa5fe));
        // CB A5 0309
        gbc.setState(0x534d, 0x7a01, 0xfe30, 0xd254, 0xb142, 0x4fdb, 0x0, 0x1);
        gbc.writeMem(0x534d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7a01, gbc.sp());
        EXPECT(0x534f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 030A
        gbc.setState(0x659c, 0x1f85, 0x3800, 0x4cf7, 0xe5f7, 0xa6a, 0x1, 0x0);
        gbc.writeMem(0x659c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1f85, gbc.sp());
        EXPECT(0x659e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 030B
        gbc.setState(0x879f, 0xf664, 0x19f0, 0x5f1, 0x575b, 0xc09a, 0x0, 0x0);
        gbc.writeMem(0x879f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf664, gbc.sp());
        EXPECT(0x87a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x879f));
        EXPECT(0xa5, gbc.readMem(0x87a0));
        // CB A5 030C
        gbc.setState(0x42d1, 0xbf9, 0xe770, 0xb6a2, 0xf764, 0xe503, 0x0, 0x1);
        gbc.writeMem(0x42d1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbf9, gbc.sp());
        EXPECT(0x42d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 030D
        gbc.setState(0x59ba, 0xd0b8, 0x3cc0, 0xbf93, 0x5240, 0xc608, 0x1, 0x0);
        gbc.writeMem(0x59ba, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd0b8, gbc.sp());
        EXPECT(0x59bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 030E
        gbc.setState(0x4f60, 0xff0e, 0xf20, 0xafd4, 0x96f7, 0x84da, 0x0, 0x0);
        gbc.writeMem(0x4f60, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xff0e, gbc.sp());
        EXPECT(0x4f62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 030F
        gbc.setState(0x2560, 0x6dfe, 0x6fd0, 0x5ced, 0x119, 0xefdb, 0x0, 0x1);
        gbc.writeMem(0x2560, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6dfe, gbc.sp());
        EXPECT(0x2562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0310
        gbc.setState(0xe1aa, 0x952e, 0x9e10, 0x3ac2, 0xc715, 0x63b5, 0x1, 0x0);
        gbc.writeMem(0xe1aa, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x952e, gbc.sp());
        EXPECT(0xe1ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1aa));
        EXPECT(0xa5, gbc.readMem(0xe1ab));
        // CB A5 0311
        gbc.setState(0x4918, 0x15a, 0x3d60, 0x814f, 0x1662, 0x2c90, 0x1, 0x0);
        gbc.writeMem(0x4918, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x15a, gbc.sp());
        EXPECT(0x491a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0312
        gbc.setState(0xa30f, 0x6947, 0xf0f0, 0xff7c, 0x7091, 0xeb8, 0x0, 0x0);
        gbc.writeMem(0xa30f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6947, gbc.sp());
        EXPECT(0xa311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa30f));
        EXPECT(0xa5, gbc.readMem(0xa310));
        // CB A5 0313
        gbc.setState(0xc998, 0xb46b, 0xc40, 0xd5f8, 0x640a, 0x6405, 0x1, 0x0);
        gbc.writeMem(0xc998, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb46b, gbc.sp());
        EXPECT(0xc99a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc998));
        EXPECT(0xa5, gbc.readMem(0xc999));
        // CB A5 0314
        gbc.setState(0x90a2, 0x638, 0x5790, 0xb2c2, 0x6cd5, 0x7d, 0x1, 0x0);
        gbc.writeMem(0x90a2, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x638, gbc.sp());
        EXPECT(0x90a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a2));
        EXPECT(0xa5, gbc.readMem(0x90a3));
        // CB A5 0315
        gbc.setState(0x3712, 0x4244, 0xc940, 0x40ae, 0xbab1, 0x76aa, 0x1, 0x0);
        gbc.writeMem(0x3712, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4244, gbc.sp());
        EXPECT(0x3714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0316
        gbc.setState(0xcb17, 0x3841, 0x1800, 0xb2c0, 0x516f, 0xba83, 0x0, 0x1);
        gbc.writeMem(0xcb17, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3841, gbc.sp());
        EXPECT(0xcb19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb17));
        EXPECT(0xa5, gbc.readMem(0xcb18));
        // CB A5 0317
        gbc.setState(0x964e, 0xda18, 0x13a0, 0x92df, 0x1121, 0x15e6, 0x1, 0x0);
        gbc.writeMem(0x964e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xda18, gbc.sp());
        EXPECT(0x9650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x964e));
        EXPECT(0xa5, gbc.readMem(0x964f));
        // CB A5 0318
        gbc.setState(0xa7e1, 0x5e6d, 0xc4a0, 0xa90b, 0x972d, 0x36b0, 0x1, 0x1);
        gbc.writeMem(0xa7e1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5e6d, gbc.sp());
        EXPECT(0xa7e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e1));
        EXPECT(0xa5, gbc.readMem(0xa7e2));
        // CB A5 0319
        gbc.setState(0x81e9, 0xc86a, 0xfc60, 0xd2a, 0x549f, 0x4b8e, 0x0, 0x1);
        gbc.writeMem(0x81e9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc86a, gbc.sp());
        EXPECT(0x81eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81e9));
        EXPECT(0xa5, gbc.readMem(0x81ea));
        // CB A5 031A
        gbc.setState(0x31c7, 0x1928, 0x5680, 0x3369, 0xb27d, 0x892c, 0x0, 0x0);
        gbc.writeMem(0x31c7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1928, gbc.sp());
        EXPECT(0x31c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 031B
        gbc.setState(0xefad, 0xee2c, 0x8650, 0x3d6e, 0x2135, 0xebaf, 0x0, 0x0);
        gbc.writeMem(0xefad, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xee2c, gbc.sp());
        EXPECT(0xefaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefad));
        EXPECT(0xa5, gbc.readMem(0xefae));
        // CB A5 031C
        gbc.setState(0xdd77, 0x4c9d, 0xbce0, 0x5b91, 0x13c4, 0x6307, 0x0, 0x0);
        gbc.writeMem(0xdd77, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4c9d, gbc.sp());
        EXPECT(0xdd79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd77));
        EXPECT(0xa5, gbc.readMem(0xdd78));
        // CB A5 031E
        gbc.setState(0x47f5, 0x8420, 0xa7e0, 0xe74a, 0x4335, 0xd4d2, 0x0, 0x1);
        gbc.writeMem(0x47f5, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8420, gbc.sp());
        EXPECT(0x47f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 031F
        gbc.setState(0x70f, 0x5773, 0x7070, 0x9141, 0x4230, 0x1eeb, 0x1, 0x0);
        gbc.writeMem(0x70f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5773, gbc.sp());
        EXPECT(0x711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0320
        gbc.setState(0x6aa8, 0x4368, 0x8a90, 0x6e03, 0x6f30, 0xb937, 0x0, 0x1);
        gbc.writeMem(0x6aa8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4368, gbc.sp());
        EXPECT(0x6aaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0321
        gbc.setState(0xdd35, 0x9301, 0x19a0, 0xb8f6, 0xc123, 0x3fd8, 0x0, 0x1);
        gbc.writeMem(0xdd35, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9301, gbc.sp());
        EXPECT(0xdd37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd35));
        EXPECT(0xa5, gbc.readMem(0xdd36));
        // CB A5 0322
        gbc.setState(0x9604, 0x90f5, 0x3880, 0x550f, 0x8f5, 0xce7e, 0x0, 0x1);
        gbc.writeMem(0x9604, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x90f5, gbc.sp());
        EXPECT(0x9606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9604));
        EXPECT(0xa5, gbc.readMem(0x9605));
        // CB A5 0323
        gbc.setState(0x3912, 0xf5bb, 0x84c0, 0x7a31, 0x30c0, 0x4099, 0x0, 0x0);
        gbc.writeMem(0x3912, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf5bb, gbc.sp());
        EXPECT(0x3914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0324
        gbc.setState(0xbeac, 0xd5ba, 0x2470, 0xba39, 0xbe60, 0xeecf, 0x1, 0x0);
        gbc.writeMem(0xbeac, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd5ba, gbc.sp());
        EXPECT(0xbeae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeac));
        EXPECT(0xa5, gbc.readMem(0xbead));
        // CB A5 0325
        gbc.setState(0x8707, 0x8265, 0x5c10, 0xbb56, 0xab14, 0x870a, 0x0, 0x0);
        gbc.writeMem(0x8707, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8265, gbc.sp());
        EXPECT(0x8709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8707));
        EXPECT(0xa5, gbc.readMem(0x8708));
        // CB A5 0326
        gbc.setState(0x5201, 0x4404, 0xb530, 0x66e1, 0x20e4, 0x5356, 0x1, 0x0);
        gbc.writeMem(0x5201, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4404, gbc.sp());
        EXPECT(0x5203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0327
        gbc.setState(0x92c6, 0x5ab5, 0x6530, 0x8f99, 0x165e, 0x6a82, 0x1, 0x1);
        gbc.writeMem(0x92c6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5ab5, gbc.sp());
        EXPECT(0x92c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c6));
        EXPECT(0xa5, gbc.readMem(0x92c7));
        // CB A5 0328
        gbc.setState(0x8f3c, 0xcb00, 0x76e0, 0xb64e, 0xf867, 0xfeb1, 0x0, 0x0);
        gbc.writeMem(0x8f3c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcb00, gbc.sp());
        EXPECT(0x8f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f3c));
        EXPECT(0xa5, gbc.readMem(0x8f3d));
        // CB A5 0329
        gbc.setState(0x6601, 0xa005, 0x4f30, 0x6a9f, 0xde11, 0x232f, 0x1, 0x0);
        gbc.writeMem(0x6601, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa005, gbc.sp());
        EXPECT(0x6603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 032A
        gbc.setState(0x382b, 0xe1fa, 0xf8d0, 0xf196, 0xf9f8, 0x8c91, 0x0, 0x0);
        gbc.writeMem(0x382b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe1fa, gbc.sp());
        EXPECT(0x382d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 032B
        gbc.setState(0x59ba, 0x2726, 0x1be0, 0x649b, 0x9184, 0xec, 0x0, 0x1);
        gbc.writeMem(0x59ba, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2726, gbc.sp());
        EXPECT(0x59bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 032C
        gbc.setState(0x6d1a, 0x73a7, 0xe820, 0x2990, 0x52c3, 0x17a9, 0x1, 0x0);
        gbc.writeMem(0x6d1a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x73a7, gbc.sp());
        EXPECT(0x6d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 032D
        gbc.setState(0x71e, 0xdd30, 0xf8d0, 0x7b0c, 0x83c5, 0x8003, 0x0, 0x1);
        gbc.writeMem(0x71e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdd30, gbc.sp());
        EXPECT(0x720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 032E
        gbc.setState(0x6bf9, 0x963, 0x57b0, 0xab33, 0xdf16, 0xc5ec, 0x0, 0x1);
        gbc.writeMem(0x6bf9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x963, gbc.sp());
        EXPECT(0x6bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 032F
        gbc.setState(0x9b69, 0xddb7, 0xf00, 0xb406, 0x7536, 0xdb24, 0x0, 0x1);
        gbc.writeMem(0x9b69, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xddb7, gbc.sp());
        EXPECT(0x9b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b69));
        EXPECT(0xa5, gbc.readMem(0x9b6a));
        // CB A5 0331
        gbc.setState(0x3d67, 0x928c, 0x8700, 0xab2c, 0x94d6, 0xea86, 0x0, 0x1);
        gbc.writeMem(0x3d67, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x928c, gbc.sp());
        EXPECT(0x3d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0332
        gbc.setState(0x60e5, 0x361e, 0xb150, 0xfdd2, 0x8bc6, 0xcfbc, 0x1, 0x0);
        gbc.writeMem(0x60e5, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x361e, gbc.sp());
        EXPECT(0x60e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0333
        gbc.setState(0x99f3, 0xc572, 0xa1e0, 0xb1ad, 0x2e75, 0xe2e8, 0x0, 0x0);
        gbc.writeMem(0x99f3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc572, gbc.sp());
        EXPECT(0x99f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f3));
        EXPECT(0xa5, gbc.readMem(0x99f4));
        // CB A5 0334
        gbc.setState(0x15f7, 0xd90a, 0x6800, 0xc2fc, 0x187, 0xbd76, 0x1, 0x1);
        gbc.writeMem(0x15f7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd90a, gbc.sp());
        EXPECT(0x15f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0335
        gbc.setState(0xaca1, 0x5e93, 0x11f0, 0x8a96, 0x8375, 0xbef6, 0x1, 0x0);
        gbc.writeMem(0xaca1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5e93, gbc.sp());
        EXPECT(0xaca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca1));
        EXPECT(0xa5, gbc.readMem(0xaca2));
        // CB A5 0336
        gbc.setState(0x9a81, 0xd1be, 0x6a70, 0x6583, 0x9b77, 0x5e94, 0x0, 0x0);
        gbc.writeMem(0x9a81, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd1be, gbc.sp());
        EXPECT(0x9a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a81));
        EXPECT(0xa5, gbc.readMem(0x9a82));
        // CB A5 0337
        gbc.setState(0x1ffe, 0x7741, 0x6a70, 0x6506, 0xfe2d, 0xf4ce, 0x1, 0x0);
        gbc.writeMem(0x1ffe, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7741, gbc.sp());
        EXPECT(0x2000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0338
        gbc.setState(0x671a, 0x3bfb, 0x8640, 0xafc8, 0x5f9, 0xd5e5, 0x1, 0x0);
        gbc.writeMem(0x671a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3bfb, gbc.sp());
        EXPECT(0x671c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 033A
        gbc.setState(0x6053, 0xc29c, 0x9be0, 0xf2ab, 0xc6f5, 0xbfab, 0x0, 0x1);
        gbc.writeMem(0x6053, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc29c, gbc.sp());
        EXPECT(0x6055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 033B
        gbc.setState(0xb350, 0x1340, 0xf300, 0x904a, 0xb844, 0x3462, 0x0, 0x1);
        gbc.writeMem(0xb350, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1340, gbc.sp());
        EXPECT(0xb352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb350));
        EXPECT(0xa5, gbc.readMem(0xb351));
        // CB A5 033C
        gbc.setState(0xe416, 0xc867, 0xa890, 0x6b57, 0xf87a, 0x7459, 0x0, 0x0);
        gbc.writeMem(0xe416, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc867, gbc.sp());
        EXPECT(0xe418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe416));
        EXPECT(0xa5, gbc.readMem(0xe417));
        // CB A5 033D
        gbc.setState(0x5b10, 0xef79, 0x9880, 0xa0eb, 0xb9aa, 0xf85d, 0x0, 0x1);
        gbc.writeMem(0x5b10, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xef79, gbc.sp());
        EXPECT(0x5b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 033E
        gbc.setState(0xdc32, 0x53af, 0xaf60, 0xc696, 0x2254, 0x1b7e, 0x0, 0x1);
        gbc.writeMem(0xdc32, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x53af, gbc.sp());
        EXPECT(0xdc34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc32));
        EXPECT(0xa5, gbc.readMem(0xdc33));
        // CB A5 033F
        gbc.setState(0x5e50, 0x82e9, 0x8e00, 0x5c70, 0x69c1, 0x9888, 0x0, 0x0);
        gbc.writeMem(0x5e50, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x82e9, gbc.sp());
        EXPECT(0x5e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0340
        gbc.setState(0x25c9, 0xefc2, 0x10a0, 0xd283, 0x915b, 0x6d43, 0x1, 0x0);
        gbc.writeMem(0x25c9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xefc2, gbc.sp());
        EXPECT(0x25cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0341
        gbc.setState(0x2de5, 0x2fdc, 0xb440, 0x681b, 0xd350, 0xd8, 0x1, 0x0);
        gbc.writeMem(0x2de5, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2fdc, gbc.sp());
        EXPECT(0x2de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0342
        gbc.setState(0x2580, 0xf8e1, 0x7b70, 0xe62b, 0x7674, 0x2e65, 0x0, 0x0);
        gbc.writeMem(0x2580, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf8e1, gbc.sp());
        EXPECT(0x2582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0343
        gbc.setState(0x83eb, 0xe815, 0x9fd0, 0xaae7, 0xf8ef, 0xdb3a, 0x0, 0x0);
        gbc.writeMem(0x83eb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe815, gbc.sp());
        EXPECT(0x83ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83eb));
        EXPECT(0xa5, gbc.readMem(0x83ec));
        // CB A5 0344
        gbc.setState(0x39ff, 0xb3b6, 0xb670, 0xc2cc, 0xbb3e, 0x38be, 0x0, 0x1);
        gbc.writeMem(0x39ff, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb3b6, gbc.sp());
        EXPECT(0x3a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0345
        gbc.setState(0x34b, 0xc15a, 0x79e0, 0x2691, 0x8059, 0x4d41, 0x0, 0x0);
        gbc.writeMem(0x34b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc15a, gbc.sp());
        EXPECT(0x34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0346
        gbc.setState(0xef2, 0xe55b, 0x38e0, 0x3ca3, 0xa6a4, 0xfc66, 0x0, 0x0);
        gbc.writeMem(0xef2, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe55b, gbc.sp());
        EXPECT(0xef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0347
        gbc.setState(0x6af4, 0xb4c4, 0x9760, 0x1f0, 0x5483, 0xb2ff, 0x1, 0x1);
        gbc.writeMem(0x6af4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb4c4, gbc.sp());
        EXPECT(0x6af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0348
        gbc.setState(0x56a3, 0x6031, 0xfd00, 0xfc5c, 0xd23a, 0x77cd, 0x0, 0x0);
        gbc.writeMem(0x56a3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6031, gbc.sp());
        EXPECT(0x56a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0349
        gbc.setState(0x5601, 0xc44a, 0xeca0, 0xba92, 0x560f, 0x4fe6, 0x1, 0x1);
        gbc.writeMem(0x5601, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc44a, gbc.sp());
        EXPECT(0x5603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 034B
        gbc.setState(0x1ebd, 0x55b2, 0xa860, 0x8374, 0x5e0b, 0xf05b, 0x0, 0x1);
        gbc.writeMem(0x1ebd, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x55b2, gbc.sp());
        EXPECT(0x1ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 034C
        gbc.setState(0x6339, 0x46af, 0x4090, 0x6a94, 0xfa15, 0x11a1, 0x0, 0x0);
        gbc.writeMem(0x6339, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x46af, gbc.sp());
        EXPECT(0x633b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 034D
        gbc.setState(0xe444, 0x6db3, 0x1420, 0x19eb, 0x143a, 0x4cb4, 0x0, 0x0);
        gbc.writeMem(0xe444, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6db3, gbc.sp());
        EXPECT(0xe446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe444));
        EXPECT(0xa5, gbc.readMem(0xe445));
        // CB A5 034E
        gbc.setState(0x69a8, 0x59d7, 0x89e0, 0x85b4, 0xbc87, 0x8115, 0x0, 0x0);
        gbc.writeMem(0x69a8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x59d7, gbc.sp());
        EXPECT(0x69aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 034F
        gbc.setState(0xd2be, 0x9ece, 0x7d30, 0x9a9e, 0xb724, 0x811b, 0x0, 0x0);
        gbc.writeMem(0xd2be, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9ece, gbc.sp());
        EXPECT(0xd2c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2be));
        EXPECT(0xa5, gbc.readMem(0xd2bf));
        // CB A5 0350
        gbc.setState(0x33c6, 0x386b, 0x7540, 0x8032, 0x4362, 0x190b, 0x1, 0x1);
        gbc.writeMem(0x33c6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x386b, gbc.sp());
        EXPECT(0x33c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0351
        gbc.setState(0x6bae, 0x9e93, 0x320, 0x9f38, 0xf652, 0x15b3, 0x1, 0x1);
        gbc.writeMem(0x6bae, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9e93, gbc.sp());
        EXPECT(0x6bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0352
        gbc.setState(0x2ce5, 0xb7e5, 0xdfc0, 0x66f2, 0xced1, 0xad6f, 0x0, 0x1);
        gbc.writeMem(0x2ce5, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb7e5, gbc.sp());
        EXPECT(0x2ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0353
        gbc.setState(0xd837, 0xe70a, 0x300, 0xf405, 0x18c1, 0x48e, 0x0, 0x1);
        gbc.writeMem(0xd837, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe70a, gbc.sp());
        EXPECT(0xd839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd837));
        EXPECT(0xa5, gbc.readMem(0xd838));
        // CB A5 0354
        gbc.setState(0xe9c3, 0x8bc4, 0x9db0, 0xd970, 0x69b7, 0xab4c, 0x1, 0x1);
        gbc.writeMem(0xe9c3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8bc4, gbc.sp());
        EXPECT(0xe9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c3));
        EXPECT(0xa5, gbc.readMem(0xe9c4));
        // CB A5 0355
        gbc.setState(0xca60, 0xeeba, 0x2890, 0x1de3, 0xe930, 0x5a70, 0x1, 0x1);
        gbc.writeMem(0xca60, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xeeba, gbc.sp());
        EXPECT(0xca62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca60));
        EXPECT(0xa5, gbc.readMem(0xca61));
        // CB A5 0356
        gbc.setState(0x695e, 0xcf39, 0xa690, 0x2a52, 0xd775, 0x4b33, 0x1, 0x0);
        gbc.writeMem(0x695e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xcf39, gbc.sp());
        EXPECT(0x6960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0357
        gbc.setState(0x6278, 0xc17d, 0x8d90, 0xa6f3, 0x2816, 0xc285, 0x1, 0x1);
        gbc.writeMem(0x6278, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc17d, gbc.sp());
        EXPECT(0x627a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0358
        gbc.setState(0xa6ea, 0x4bf6, 0x6990, 0xe526, 0x5503, 0x7f46, 0x0, 0x0);
        gbc.writeMem(0xa6ea, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4bf6, gbc.sp());
        EXPECT(0xa6ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ea));
        EXPECT(0xa5, gbc.readMem(0xa6eb));
        // CB A5 0359
        gbc.setState(0x4592, 0x44f4, 0x34d0, 0xa03c, 0x946e, 0xa9af, 0x1, 0x1);
        gbc.writeMem(0x4592, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x44f4, gbc.sp());
        EXPECT(0x4594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 035A
        gbc.setState(0x991e, 0xf1e6, 0x8170, 0x7675, 0x8c47, 0xad3c, 0x0, 0x0);
        gbc.writeMem(0x991e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf1e6, gbc.sp());
        EXPECT(0x9920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991e));
        EXPECT(0xa5, gbc.readMem(0x991f));
        // CB A5 035B
        gbc.setState(0xd67a, 0xc3f8, 0x5240, 0xc1c6, 0xa7d, 0xac02, 0x0, 0x0);
        gbc.writeMem(0xd67a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc3f8, gbc.sp());
        EXPECT(0xd67c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd67a));
        EXPECT(0xa5, gbc.readMem(0xd67b));
        // CB A5 035C
        gbc.setState(0x3abf, 0xdf7b, 0xb690, 0xda3e, 0x949e, 0xe59d, 0x0, 0x1);
        gbc.writeMem(0x3abf, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdf7b, gbc.sp());
        EXPECT(0x3ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 035D
        gbc.setState(0xcdaa, 0xfb8, 0xbfb0, 0x5de, 0x4ca9, 0xb9b4, 0x0, 0x0);
        gbc.writeMem(0xcdaa, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfb8, gbc.sp());
        EXPECT(0xcdac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdaa));
        EXPECT(0xa5, gbc.readMem(0xcdab));
        // CB A5 035E
        gbc.setState(0x6bfd, 0xf4ad, 0xbfe0, 0x98e7, 0x5c37, 0xc5c9, 0x1, 0x0);
        gbc.writeMem(0x6bfd, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf4ad, gbc.sp());
        EXPECT(0x6bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 035F
        gbc.setState(0x6fc0, 0x6e62, 0x3070, 0xa4fd, 0x291d, 0xf8dd, 0x0, 0x0);
        gbc.writeMem(0x6fc0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6e62, gbc.sp());
        EXPECT(0x6fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0360
        gbc.setState(0x547, 0x52e0, 0x7580, 0x66c, 0xe19e, 0xe2c4, 0x0, 0x1);
        gbc.writeMem(0x547, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x52e0, gbc.sp());
        EXPECT(0x549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0361
        gbc.setState(0x5f0d, 0x7728, 0x5710, 0x14c0, 0xb60e, 0x313e, 0x0, 0x1);
        gbc.writeMem(0x5f0d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7728, gbc.sp());
        EXPECT(0x5f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0362
        gbc.setState(0xe57, 0x5d14, 0xf600, 0x156e, 0x5104, 0x79e6, 0x1, 0x0);
        gbc.writeMem(0xe57, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5d14, gbc.sp());
        EXPECT(0xe59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0363
        gbc.setState(0xb2cd, 0x9a4c, 0x9a70, 0xca3b, 0xc0eb, 0x5181, 0x1, 0x0);
        gbc.writeMem(0xb2cd, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9a4c, gbc.sp());
        EXPECT(0xb2cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2cd));
        EXPECT(0xa5, gbc.readMem(0xb2ce));
        // CB A5 0364
        gbc.setState(0xaf9c, 0xa580, 0xfc60, 0x9de0, 0x3db, 0x5aba, 0x1, 0x0);
        gbc.writeMem(0xaf9c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa580, gbc.sp());
        EXPECT(0xaf9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf9c));
        EXPECT(0xa5, gbc.readMem(0xaf9d));
        // CB A5 0365
        gbc.setState(0x53e9, 0x49fd, 0x8090, 0x7439, 0x246c, 0x8609, 0x1, 0x1);
        gbc.writeMem(0x53e9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x49fd, gbc.sp());
        EXPECT(0x53eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0366
        gbc.setState(0x8ba5, 0xac86, 0x3e10, 0x1360, 0x3e0b, 0x9be0, 0x0, 0x0);
        gbc.writeMem(0x8ba5, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xac86, gbc.sp());
        EXPECT(0x8ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba5));
        EXPECT(0xa5, gbc.readMem(0x8ba6));
        // CB A5 0367
        gbc.setState(0xd00f, 0xc41e, 0xa4c0, 0xdbb0, 0x2c02, 0x90a9, 0x1, 0x0);
        gbc.writeMem(0xd00f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc41e, gbc.sp());
        EXPECT(0xd011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd00f));
        EXPECT(0xa5, gbc.readMem(0xd010));
        // CB A5 0368
        gbc.setState(0x9940, 0xb925, 0xec10, 0x47d3, 0xc671, 0xf33e, 0x0, 0x1);
        gbc.writeMem(0x9940, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb925, gbc.sp());
        EXPECT(0x9942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9940));
        EXPECT(0xa5, gbc.readMem(0x9941));
        // CB A5 0369
        gbc.setState(0x95e1, 0x9e08, 0x8bd0, 0x9dda, 0x2f08, 0xd67, 0x1, 0x1);
        gbc.writeMem(0x95e1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9e08, gbc.sp());
        EXPECT(0x95e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e1));
        EXPECT(0xa5, gbc.readMem(0x95e2));
        // CB A5 036A
        gbc.setState(0x1ed4, 0x922b, 0xf9c0, 0xf5ce, 0x75f8, 0xd6b7, 0x0, 0x0);
        gbc.writeMem(0x1ed4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x922b, gbc.sp());
        EXPECT(0x1ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 036B
        gbc.setState(0xb200, 0xe948, 0xa380, 0x9bd6, 0x2100, 0x9b85, 0x0, 0x1);
        gbc.writeMem(0xb200, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe948, gbc.sp());
        EXPECT(0xb202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb200));
        EXPECT(0xa5, gbc.readMem(0xb201));
        // CB A5 036C
        gbc.setState(0xeb33, 0x4cf1, 0xaa70, 0x91d8, 0x8ef7, 0x1eb4, 0x1, 0x0);
        gbc.writeMem(0xeb33, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4cf1, gbc.sp());
        EXPECT(0xeb35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb33));
        EXPECT(0xa5, gbc.readMem(0xeb34));
        // CB A5 036D
        gbc.setState(0xbbdf, 0x496c, 0x5210, 0xec6, 0x23a9, 0xd032, 0x0, 0x0);
        gbc.writeMem(0xbbdf, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x496c, gbc.sp());
        EXPECT(0xbbe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbdf));
        EXPECT(0xa5, gbc.readMem(0xbbe0));
        // CB A5 036E
        gbc.setState(0xe1df, 0x1c3a, 0xaf20, 0x4ac4, 0x68bf, 0x63db, 0x0, 0x0);
        gbc.writeMem(0xe1df, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1c3a, gbc.sp());
        EXPECT(0xe1e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1df));
        EXPECT(0xa5, gbc.readMem(0xe1e0));
        // CB A5 036F
        gbc.setState(0x8def, 0xd5d5, 0x7e70, 0xe80f, 0xa016, 0xe31e, 0x1, 0x0);
        gbc.writeMem(0x8def, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd5d5, gbc.sp());
        EXPECT(0x8df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8def));
        EXPECT(0xa5, gbc.readMem(0x8df0));
        // CB A5 0370
        gbc.setState(0xe732, 0x836b, 0x6c90, 0x7fd6, 0xdfe8, 0xe16d, 0x0, 0x0);
        gbc.writeMem(0xe732, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x836b, gbc.sp());
        EXPECT(0xe734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe732));
        EXPECT(0xa5, gbc.readMem(0xe733));
        // CB A5 0371
        gbc.setState(0x8cc3, 0x4921, 0xf820, 0xd1e5, 0xb629, 0xfcc2, 0x1, 0x0);
        gbc.writeMem(0x8cc3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4921, gbc.sp());
        EXPECT(0x8cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc3));
        EXPECT(0xa5, gbc.readMem(0x8cc4));
        // CB A5 0372
        gbc.setState(0xcd78, 0x12a5, 0xdc10, 0xda27, 0x5eca, 0x9aa6, 0x0, 0x1);
        gbc.writeMem(0xcd78, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x12a5, gbc.sp());
        EXPECT(0xcd7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd78));
        EXPECT(0xa5, gbc.readMem(0xcd79));
        // CB A5 0373
        gbc.setState(0xe8eb, 0xbbc6, 0x16c0, 0xff0a, 0xddd, 0x6d14, 0x1, 0x0);
        gbc.writeMem(0xe8eb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbbc6, gbc.sp());
        EXPECT(0xe8ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8eb));
        EXPECT(0xa5, gbc.readMem(0xe8ec));
        // CB A5 0375
        gbc.setState(0x53c4, 0x5cd5, 0x1ca0, 0x9101, 0xa8cd, 0x6eea, 0x1, 0x1);
        gbc.writeMem(0x53c4, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5cd5, gbc.sp());
        EXPECT(0x53c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0376
        gbc.setState(0xbc8e, 0xc3c9, 0xbd10, 0xfc1f, 0x1624, 0xfbf3, 0x1, 0x1);
        gbc.writeMem(0xbc8e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc3c9, gbc.sp());
        EXPECT(0xbc90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8e));
        EXPECT(0xa5, gbc.readMem(0xbc8f));
        // CB A5 0377
        gbc.setState(0x6a06, 0xf1bf, 0xba70, 0x273d, 0x303b, 0x2ca, 0x0, 0x0);
        gbc.writeMem(0x6a06, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf1bf, gbc.sp());
        EXPECT(0x6a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0378
        gbc.setState(0x1ffb, 0x9ad6, 0x4930, 0x4b4c, 0x9d83, 0x506a, 0x1, 0x0);
        gbc.writeMem(0x1ffb, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9ad6, gbc.sp());
        EXPECT(0x1ffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0379
        gbc.setState(0x6c9c, 0x6ee5, 0x3ba0, 0x36c1, 0x98c2, 0x16ee, 0x1, 0x1);
        gbc.writeMem(0x6c9c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6ee5, gbc.sp());
        EXPECT(0x6c9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 037A
        gbc.setState(0xb7b5, 0x428d, 0x2400, 0x2a44, 0xa4d0, 0x194b, 0x1, 0x0);
        gbc.writeMem(0xb7b5, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x428d, gbc.sp());
        EXPECT(0xb7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b5));
        EXPECT(0xa5, gbc.readMem(0xb7b6));
        // CB A5 037B
        gbc.setState(0x7424, 0x284f, 0xf1a0, 0xe9ad, 0x7421, 0xad5f, 0x1, 0x0);
        gbc.writeMem(0x7424, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x284f, gbc.sp());
        EXPECT(0x7426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 037D
        gbc.setState(0x455e, 0xd5b2, 0x5010, 0x666c, 0x3682, 0xe490, 0x1, 0x0);
        gbc.writeMem(0x455e, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd5b2, gbc.sp());
        EXPECT(0x4560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 037F
        gbc.setState(0xa448, 0x2362, 0x97e0, 0xe61d, 0x1e77, 0xbbd4, 0x1, 0x0);
        gbc.writeMem(0xa448, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2362, gbc.sp());
        EXPECT(0xa44a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa448));
        EXPECT(0xa5, gbc.readMem(0xa449));
        // CB A5 0380
        gbc.setState(0x32a5, 0x4eb6, 0x8400, 0x80f6, 0x8c84, 0x39a0, 0x1, 0x0);
        gbc.writeMem(0x32a5, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4eb6, gbc.sp());
        EXPECT(0x32a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0381
        gbc.setState(0x7073, 0xd00, 0x9c10, 0xa223, 0xe5f5, 0xbbdb, 0x1, 0x0);
        gbc.writeMem(0x7073, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd00, gbc.sp());
        EXPECT(0x7075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0382
        gbc.setState(0xb734, 0x32e4, 0x1390, 0xea16, 0xfdad, 0xa7d0, 0x1, 0x1);
        gbc.writeMem(0xb734, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x32e4, gbc.sp());
        EXPECT(0xb736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb734));
        EXPECT(0xa5, gbc.readMem(0xb735));
        // CB A5 0383
        gbc.setState(0xbe5b, 0x6766, 0x4800, 0x1d61, 0x9001, 0x586d, 0x1, 0x1);
        gbc.writeMem(0xbe5b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6766, gbc.sp());
        EXPECT(0xbe5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe5b));
        EXPECT(0xa5, gbc.readMem(0xbe5c));
        // CB A5 0384
        gbc.setState(0xb108, 0x86d2, 0xf1a0, 0x2cf6, 0xbc4a, 0xe131, 0x0, 0x1);
        gbc.writeMem(0xb108, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x86d2, gbc.sp());
        EXPECT(0xb10a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb108));
        EXPECT(0xa5, gbc.readMem(0xb109));
        // CB A5 0385
        gbc.setState(0x2ad, 0xe4dd, 0x4940, 0xa744, 0xbfa3, 0xdc95, 0x0, 0x0);
        gbc.writeMem(0x2ad, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe4dd, gbc.sp());
        EXPECT(0x2af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0386
        gbc.setState(0xc46d, 0x2970, 0x69a0, 0xfc6a, 0x7c8c, 0x4b5a, 0x0, 0x0);
        gbc.writeMem(0xc46d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2970, gbc.sp());
        EXPECT(0xc46f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc46d));
        EXPECT(0xa5, gbc.readMem(0xc46e));
        // CB A5 0387
        gbc.setState(0x3fc, 0x5bc6, 0x5550, 0x8ab3, 0xafb0, 0x9e88, 0x0, 0x0);
        gbc.writeMem(0x3fc, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5bc6, gbc.sp());
        EXPECT(0x3fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0388
        gbc.setState(0xdef3, 0x3b60, 0xa9f0, 0x6f1a, 0xe08, 0xc304, 0x0, 0x1);
        gbc.writeMem(0xdef3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3b60, gbc.sp());
        EXPECT(0xdef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef3));
        EXPECT(0xa5, gbc.readMem(0xdef4));
        // CB A5 0389
        gbc.setState(0x7760, 0x2a24, 0x82e0, 0x2c5e, 0xaa58, 0xcb80, 0x1, 0x1);
        gbc.writeMem(0x7760, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2a24, gbc.sp());
        EXPECT(0x7762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 038A
        gbc.setState(0x9021, 0x80f5, 0xd6f0, 0xad43, 0xf36a, 0x7a92, 0x1, 0x0);
        gbc.writeMem(0x9021, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x80f5, gbc.sp());
        EXPECT(0x9023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9021));
        EXPECT(0xa5, gbc.readMem(0x9022));
        // CB A5 038B
        gbc.setState(0x1f20, 0x28ca, 0x850, 0x9cec, 0x5241, 0x98e4, 0x0, 0x0);
        gbc.writeMem(0x1f20, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x28ca, gbc.sp());
        EXPECT(0x1f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 038C
        gbc.setState(0xaba3, 0x1fc6, 0x6350, 0x8846, 0x5487, 0x4d2c, 0x1, 0x1);
        gbc.writeMem(0xaba3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1fc6, gbc.sp());
        EXPECT(0xaba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaba3));
        EXPECT(0xa5, gbc.readMem(0xaba4));
        // CB A5 038D
        gbc.setState(0x961c, 0x4b60, 0x69a0, 0x8972, 0x11db, 0xa5ed, 0x1, 0x1);
        gbc.writeMem(0x961c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4b60, gbc.sp());
        EXPECT(0x961e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961c));
        EXPECT(0xa5, gbc.readMem(0x961d));
        // CB A5 038E
        gbc.setState(0x412, 0x3017, 0xee30, 0xaf68, 0x5ff, 0x940f, 0x1, 0x1);
        gbc.writeMem(0x412, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3017, gbc.sp());
        EXPECT(0x414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 038F
        gbc.setState(0x9a73, 0xfd0d, 0x93b0, 0x57c1, 0x41b3, 0xcb64, 0x0, 0x0);
        gbc.writeMem(0x9a73, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfd0d, gbc.sp());
        EXPECT(0x9a75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a73));
        EXPECT(0xa5, gbc.readMem(0x9a74));
        // CB A5 0390
        gbc.setState(0x2413, 0x80a2, 0x9e20, 0xcaf6, 0xcd89, 0xfa1, 0x1, 0x0);
        gbc.writeMem(0x2413, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x80a2, gbc.sp());
        EXPECT(0x2415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0391
        gbc.setState(0x2d29, 0xf136, 0x11e0, 0x5bb1, 0xdec1, 0x5f3e, 0x0, 0x0);
        gbc.writeMem(0x2d29, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf136, gbc.sp());
        EXPECT(0x2d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0392
        gbc.setState(0x1e08, 0x93ec, 0x5d00, 0x5c0f, 0x380a, 0xd11a, 0x1, 0x0);
        gbc.writeMem(0x1e08, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x93ec, gbc.sp());
        EXPECT(0x1e0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0393
        gbc.setState(0x7848, 0x9d55, 0xb890, 0x932, 0x61ec, 0x8b6a, 0x1, 0x0);
        gbc.writeMem(0x7848, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9d55, gbc.sp());
        EXPECT(0x784a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0395
        gbc.setState(0x6660, 0xa7e5, 0x1eb0, 0x3fa8, 0xb2a, 0xd391, 0x0, 0x1);
        gbc.writeMem(0x6660, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa7e5, gbc.sp());
        EXPECT(0x6662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 0397
        gbc.setState(0x398c, 0x3fbd, 0x2280, 0x6afc, 0xc32b, 0xe309, 0x1, 0x1);
        gbc.writeMem(0x398c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3fbd, gbc.sp());
        EXPECT(0x398e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 0398
        gbc.setState(0x8bee, 0x4524, 0x24b0, 0xf39e, 0xda75, 0x859, 0x0, 0x1);
        gbc.writeMem(0x8bee, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4524, gbc.sp());
        EXPECT(0x8bf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bee));
        EXPECT(0xa5, gbc.readMem(0x8bef));
        // CB A5 0399
        gbc.setState(0x33c1, 0x9947, 0x12f0, 0x61f3, 0xf7e, 0xa278, 0x1, 0x1);
        gbc.writeMem(0x33c1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9947, gbc.sp());
        EXPECT(0x33c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 039A
        gbc.setState(0x52a3, 0x76f0, 0x5f80, 0xd745, 0xa4f7, 0xbf25, 0x0, 0x0);
        gbc.writeMem(0x52a3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x76f0, gbc.sp());
        EXPECT(0x52a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 039B
        gbc.setState(0x90f2, 0xfe38, 0x6810, 0xd842, 0x2107, 0x2c35, 0x0, 0x1);
        gbc.writeMem(0x90f2, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfe38, gbc.sp());
        EXPECT(0x90f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f2));
        EXPECT(0xa5, gbc.readMem(0x90f3));
        // CB A5 039C
        gbc.setState(0x4487, 0xc730, 0xe480, 0x1983, 0x519c, 0x8c10, 0x0, 0x1);
        gbc.writeMem(0x4487, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc730, gbc.sp());
        EXPECT(0x4489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 039D
        gbc.setState(0x3fa2, 0x4da5, 0xf340, 0x3721, 0xc3, 0x83c8, 0x1, 0x0);
        gbc.writeMem(0x3fa2, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4da5, gbc.sp());
        EXPECT(0x3fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 039E
        gbc.setState(0xbe9b, 0x7b78, 0x4410, 0xa4cd, 0x9b47, 0xe730, 0x0, 0x1);
        gbc.writeMem(0xbe9b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7b78, gbc.sp());
        EXPECT(0xbe9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe9b));
        EXPECT(0xa5, gbc.readMem(0xbe9c));
        // CB A5 039F
        gbc.setState(0x51c0, 0xeb50, 0x9b50, 0x7ae6, 0xdc3f, 0x9dfa, 0x1, 0x1);
        gbc.writeMem(0x51c0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xeb50, gbc.sp());
        EXPECT(0x51c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03A0
        gbc.setState(0x94ff, 0x930c, 0x31f0, 0x2823, 0xc007, 0xa3c9, 0x0, 0x0);
        gbc.writeMem(0x94ff, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x930c, gbc.sp());
        EXPECT(0x9501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ff));
        EXPECT(0xa5, gbc.readMem(0x9500));
        // CB A5 03A1
        gbc.setState(0xc218, 0x9ea2, 0xa000, 0xcb4e, 0x7c83, 0x1273, 0x1, 0x0);
        gbc.writeMem(0xc218, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9ea2, gbc.sp());
        EXPECT(0xc21a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc218));
        EXPECT(0xa5, gbc.readMem(0xc219));
        // CB A5 03A2
        gbc.setState(0x3e56, 0x5f7e, 0xba80, 0x791b, 0x240e, 0x597, 0x1, 0x0);
        gbc.writeMem(0x3e56, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5f7e, gbc.sp());
        EXPECT(0x3e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03A3
        gbc.setState(0x7978, 0x49bb, 0xab20, 0xbeb1, 0x353, 0xaa74, 0x0, 0x0);
        gbc.writeMem(0x7978, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x49bb, gbc.sp());
        EXPECT(0x797a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03A4
        gbc.setState(0xe062, 0x463e, 0x5800, 0x787f, 0x3fd5, 0x43ba, 0x1, 0x1);
        gbc.writeMem(0xe062, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x463e, gbc.sp());
        EXPECT(0xe064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe062));
        EXPECT(0xa5, gbc.readMem(0xe063));
        // CB A5 03A5
        gbc.setState(0x217a, 0xbee2, 0xb4a0, 0x3a7c, 0x4234, 0x27f, 0x0, 0x0);
        gbc.writeMem(0x217a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbee2, gbc.sp());
        EXPECT(0x217c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03A6
        gbc.setState(0x13b7, 0x5215, 0x6440, 0x616d, 0x19a3, 0xdd30, 0x0, 0x0);
        gbc.writeMem(0x13b7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5215, gbc.sp());
        EXPECT(0x13b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03A7
        gbc.setState(0x9d5f, 0xe870, 0x1ce0, 0x8434, 0x6e91, 0x1d8b, 0x1, 0x0);
        gbc.writeMem(0x9d5f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe870, gbc.sp());
        EXPECT(0x9d61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d5f));
        EXPECT(0xa5, gbc.readMem(0x9d60));
        // CB A5 03A8
        gbc.setState(0xd8e0, 0x6234, 0x4260, 0x2300, 0x8932, 0x370e, 0x1, 0x1);
        gbc.writeMem(0xd8e0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6234, gbc.sp());
        EXPECT(0xd8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e0));
        EXPECT(0xa5, gbc.readMem(0xd8e1));
        // CB A5 03A9
        gbc.setState(0xc592, 0xee9c, 0x8d90, 0xc197, 0xf304, 0x266c, 0x0, 0x1);
        gbc.writeMem(0xc592, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xee9c, gbc.sp());
        EXPECT(0xc594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc592));
        EXPECT(0xa5, gbc.readMem(0xc593));
        // CB A5 03AB
        gbc.setState(0x304c, 0x6ba1, 0x2220, 0x2123, 0xaacc, 0xb9bc, 0x1, 0x1);
        gbc.writeMem(0x304c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6ba1, gbc.sp());
        EXPECT(0x304e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03AC
        gbc.setState(0x84d3, 0x30c2, 0xf7b0, 0xf037, 0x3f15, 0xeab8, 0x0, 0x0);
        gbc.writeMem(0x84d3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x30c2, gbc.sp());
        EXPECT(0x84d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d3));
        EXPECT(0xa5, gbc.readMem(0x84d4));
        // CB A5 03AD
        gbc.setState(0x3328, 0xc9db, 0xae90, 0xf966, 0x932c, 0xde92, 0x1, 0x1);
        gbc.writeMem(0x3328, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc9db, gbc.sp());
        EXPECT(0x332a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03AE
        gbc.setState(0x3408, 0xc8f3, 0xbd00, 0xac29, 0x10a8, 0x849b, 0x1, 0x0);
        gbc.writeMem(0x3408, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc8f3, gbc.sp());
        EXPECT(0x340a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03AF
        gbc.setState(0x39cf, 0x5de1, 0xe460, 0x8906, 0xd14c, 0xa958, 0x1, 0x0);
        gbc.writeMem(0x39cf, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5de1, gbc.sp());
        EXPECT(0x39d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03B0
        gbc.setState(0x972, 0x7615, 0x6c60, 0x8710, 0x2fa4, 0xc7bb, 0x0, 0x0);
        gbc.writeMem(0x972, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7615, gbc.sp());
        EXPECT(0x974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03B1
        gbc.setState(0x69f7, 0x9a83, 0x5e60, 0xa762, 0x6191, 0xf91a, 0x0, 0x0);
        gbc.writeMem(0x69f7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9a83, gbc.sp());
        EXPECT(0x69f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03B2
        gbc.setState(0x994, 0x39a0, 0x14f0, 0x4f91, 0xa664, 0xe733, 0x0, 0x1);
        gbc.writeMem(0x994, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x39a0, gbc.sp());
        EXPECT(0x996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03B3
        gbc.setState(0x8e1, 0x70af, 0x5a0, 0x480c, 0x6a70, 0x115f, 0x0, 0x1);
        gbc.writeMem(0x8e1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x70af, gbc.sp());
        EXPECT(0x8e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03B4
        gbc.setState(0x599a, 0x9409, 0x1f0, 0x66a6, 0x848a, 0x21a4, 0x1, 0x0);
        gbc.writeMem(0x599a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9409, gbc.sp());
        EXPECT(0x599c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03B5
        gbc.setState(0x3a19, 0x3e24, 0xc330, 0xd5b0, 0x9531, 0xc577, 0x1, 0x1);
        gbc.writeMem(0x3a19, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3e24, gbc.sp());
        EXPECT(0x3a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03B6
        gbc.setState(0x7934, 0x7161, 0x2760, 0xd4d3, 0x694f, 0x16c6, 0x1, 0x1);
        gbc.writeMem(0x7934, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7161, gbc.sp());
        EXPECT(0x7936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03B7
        gbc.setState(0x4fc1, 0xb2e7, 0xd7a0, 0xbdc7, 0x23a, 0x74a2, 0x0, 0x0);
        gbc.writeMem(0x4fc1, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb2e7, gbc.sp());
        EXPECT(0x4fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03B8
        gbc.setState(0x623c, 0xd0b5, 0x1e30, 0xeb55, 0x57a, 0xb4d8, 0x1, 0x1);
        gbc.writeMem(0x623c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd0b5, gbc.sp());
        EXPECT(0x623e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03B9
        gbc.setState(0x6dec, 0x5f28, 0x56d0, 0xad43, 0x83b1, 0x1548, 0x1, 0x1);
        gbc.writeMem(0x6dec, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5f28, gbc.sp());
        EXPECT(0x6dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03BC
        gbc.setState(0x1b3d, 0x7fb6, 0x99c0, 0x5c20, 0x7ae4, 0x307f, 0x1, 0x1);
        gbc.writeMem(0x1b3d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7fb6, gbc.sp());
        EXPECT(0x1b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03BD
        gbc.setState(0xe66c, 0xa224, 0x89f0, 0xafbe, 0x7e69, 0xc7e, 0x0, 0x1);
        gbc.writeMem(0xe66c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa224, gbc.sp());
        EXPECT(0xe66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe66c));
        EXPECT(0xa5, gbc.readMem(0xe66d));
        // CB A5 03BE
        gbc.setState(0x602f, 0xdd5a, 0x9ba0, 0x2d07, 0x9542, 0xaec, 0x1, 0x0);
        gbc.writeMem(0x602f, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdd5a, gbc.sp());
        EXPECT(0x6031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03BF
        gbc.setState(0x9d57, 0x1bff, 0x6390, 0x1150, 0x13de, 0x47b4, 0x0, 0x0);
        gbc.writeMem(0x9d57, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1bff, gbc.sp());
        EXPECT(0x9d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d57));
        EXPECT(0xa5, gbc.readMem(0x9d58));
        // CB A5 03C0
        gbc.setState(0x7fb9, 0xdc7d, 0x2ff0, 0xe598, 0xf759, 0x824d, 0x1, 0x1);
        gbc.writeMem(0x7fb9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xdc7d, gbc.sp());
        EXPECT(0x7fbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03C1
        gbc.setState(0x2185, 0xa39d, 0xfe10, 0xd86c, 0x4b3, 0x1a9e, 0x0, 0x1);
        gbc.writeMem(0x2185, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa39d, gbc.sp());
        EXPECT(0x2187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03C2
        gbc.setState(0x8db8, 0x10fa, 0x9cf0, 0x88d2, 0x94ff, 0xfeab, 0x0, 0x0);
        gbc.writeMem(0x8db8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x10fa, gbc.sp());
        EXPECT(0x8dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db8));
        EXPECT(0xa5, gbc.readMem(0x8db9));
        // CB A5 03C3
        gbc.setState(0x7c18, 0xd8e6, 0x4a20, 0xb5ee, 0x5d52, 0x1883, 0x1, 0x0);
        gbc.writeMem(0x7c18, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd8e6, gbc.sp());
        EXPECT(0x7c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03C4
        gbc.setState(0x24c3, 0xd1c8, 0xe530, 0x2f36, 0xa068, 0x1ea, 0x0, 0x1);
        gbc.writeMem(0x24c3, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd1c8, gbc.sp());
        EXPECT(0x24c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03C5
        gbc.setState(0x7d7c, 0x8c03, 0xa2f0, 0x944f, 0x95dc, 0xd1c6, 0x1, 0x1);
        gbc.writeMem(0x7d7c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8c03, gbc.sp());
        EXPECT(0x7d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03C6
        gbc.setState(0xc558, 0x937, 0x3e50, 0x96fc, 0xece, 0xef7a, 0x0, 0x0);
        gbc.writeMem(0xc558, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x937, gbc.sp());
        EXPECT(0xc55a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc558));
        EXPECT(0xa5, gbc.readMem(0xc559));
        // CB A5 03C7
        gbc.setState(0x959, 0x920d, 0x1b40, 0x9c4a, 0xa6a5, 0x3b90, 0x1, 0x1);
        gbc.writeMem(0x959, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x920d, gbc.sp());
        EXPECT(0x95b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03C8
        gbc.setState(0xb8fd, 0xe77b, 0x6e70, 0x1de9, 0x7636, 0x3d06, 0x0, 0x1);
        gbc.writeMem(0xb8fd, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe77b, gbc.sp());
        EXPECT(0xb8ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8fd));
        EXPECT(0xa5, gbc.readMem(0xb8fe));
        // CB A5 03C9
        gbc.setState(0x16d, 0x58e3, 0x5ab0, 0x42ce, 0x2a9, 0x5f3a, 0x0, 0x1);
        gbc.writeMem(0x16d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x58e3, gbc.sp());
        EXPECT(0x16f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03CA
        gbc.setState(0xa3b6, 0x9a95, 0xd620, 0xc8b7, 0xc7de, 0x9289, 0x1, 0x1);
        gbc.writeMem(0xa3b6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9a95, gbc.sp());
        EXPECT(0xa3b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3b6));
        EXPECT(0xa5, gbc.readMem(0xa3b7));
        // CB A5 03CB
        gbc.setState(0x2b59, 0x2790, 0xe050, 0xd0b5, 0x7132, 0x130f, 0x1, 0x1);
        gbc.writeMem(0x2b59, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2790, gbc.sp());
        EXPECT(0x2b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03CC
        gbc.setState(0x6041, 0x238a, 0xc6f0, 0x4ec4, 0x60a9, 0x160f, 0x1, 0x1);
        gbc.writeMem(0x6041, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x238a, gbc.sp());
        EXPECT(0x6043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03CD
        gbc.setState(0x77a8, 0xcb8b, 0x2000, 0x9dc3, 0x489f, 0x58f6, 0x0, 0x0);
        gbc.writeMem(0x77a8, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcb8b, gbc.sp());
        EXPECT(0x77aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03CE
        gbc.setState(0x67fc, 0x15b, 0x3230, 0x77c2, 0x3948, 0x5ca3, 0x0, 0x0);
        gbc.writeMem(0x67fc, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x15b, gbc.sp());
        EXPECT(0x67fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03CF
        gbc.setState(0x93c6, 0x436a, 0x8910, 0x2f4a, 0xf7bf, 0x9046, 0x0, 0x1);
        gbc.writeMem(0x93c6, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x436a, gbc.sp());
        EXPECT(0x93c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c6));
        EXPECT(0xa5, gbc.readMem(0x93c7));
        // CB A5 03D0
        gbc.setState(0x2782, 0x5b80, 0xd620, 0x9dfc, 0x4b1f, 0xd024, 0x1, 0x0);
        gbc.writeMem(0x2782, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5b80, gbc.sp());
        EXPECT(0x2784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03D1
        gbc.setState(0x5eea, 0x8c81, 0xb140, 0xfe08, 0x6035, 0xadda, 0x1, 0x0);
        gbc.writeMem(0x5eea, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8c81, gbc.sp());
        EXPECT(0x5eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03D2
        gbc.setState(0x1f3a, 0x670d, 0x58d0, 0x1c52, 0xb565, 0x1867, 0x0, 0x0);
        gbc.writeMem(0x1f3a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x670d, gbc.sp());
        EXPECT(0x1f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03D3
        gbc.setState(0xbaec, 0x1897, 0x77d0, 0x6133, 0x69c5, 0xf589, 0x0, 0x1);
        gbc.writeMem(0xbaec, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1897, gbc.sp());
        EXPECT(0xbaee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaec));
        EXPECT(0xa5, gbc.readMem(0xbaed));
        // CB A5 03D4
        gbc.setState(0x602d, 0x7c15, 0x72b0, 0x4d19, 0xa9fb, 0x8c35, 0x1, 0x1);
        gbc.writeMem(0x602d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7c15, gbc.sp());
        EXPECT(0x602f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03D5
        gbc.setState(0x155a, 0xa139, 0x36a0, 0xb264, 0x7866, 0x6f96, 0x1, 0x1);
        gbc.writeMem(0x155a, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa139, gbc.sp());
        EXPECT(0x155c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03D6
        gbc.setState(0x745b, 0x3142, 0x8bf0, 0x6342, 0x2376, 0x1fbc, 0x1, 0x1);
        gbc.writeMem(0x745b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3142, gbc.sp());
        EXPECT(0x745d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03D7
        gbc.setState(0xc124, 0x20e1, 0x3920, 0x95fc, 0x10ab, 0x2ca0, 0x0, 0x0);
        gbc.writeMem(0xc124, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x20e1, gbc.sp());
        EXPECT(0xc126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc124));
        EXPECT(0xa5, gbc.readMem(0xc125));
        // CB A5 03D9
        gbc.setState(0x4244, 0xcaf6, 0xac30, 0xd116, 0x43c, 0x654b, 0x0, 0x0);
        gbc.writeMem(0x4244, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcaf6, gbc.sp());
        EXPECT(0x4246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03DA
        gbc.setState(0x7ef9, 0xfb40, 0x7f50, 0xbbc7, 0x1ee2, 0x7bf3, 0x0, 0x0);
        gbc.writeMem(0x7ef9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfb40, gbc.sp());
        EXPECT(0x7efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03DB
        gbc.setState(0x4940, 0xa7a0, 0xaf30, 0xc889, 0x5100, 0xcbed, 0x1, 0x1);
        gbc.writeMem(0x4940, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa7a0, gbc.sp());
        EXPECT(0x4942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03DC
        gbc.setState(0x1fff, 0xab07, 0xdf70, 0x7938, 0xa80b, 0xcc5b, 0x1, 0x0);
        gbc.writeMem(0x1fff, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xab07, gbc.sp());
        EXPECT(0x2001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03DD
        gbc.setState(0x6ac9, 0xf51, 0xf680, 0xba27, 0x8e5, 0xb0d8, 0x1, 0x0);
        gbc.writeMem(0x6ac9, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf51, gbc.sp());
        EXPECT(0x6acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03DE
        gbc.setState(0x50b0, 0x3a35, 0x4e30, 0xba46, 0xbabb, 0x10c8, 0x1, 0x1);
        gbc.writeMem(0x50b0, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3a35, gbc.sp());
        EXPECT(0x50b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03DF
        gbc.setState(0x131d, 0xb43c, 0x30c0, 0x3d3d, 0x7f3a, 0x4f3d, 0x0, 0x1);
        gbc.writeMem(0x131d, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb43c, gbc.sp());
        EXPECT(0x131f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03E0
        gbc.setState(0x3b1c, 0xd82a, 0xbf30, 0xd5b2, 0x8407, 0xf84f, 0x1, 0x0);
        gbc.writeMem(0x3b1c, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd82a, gbc.sp());
        EXPECT(0x3b1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03E1
        gbc.setState(0x11d7, 0xc564, 0xee50, 0x16ba, 0x3acc, 0x6959, 0x1, 0x0);
        gbc.writeMem(0x11d7, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc564, gbc.sp());
        EXPECT(0x11d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03E2
        gbc.setState(0x5ac5, 0x7d27, 0x35e0, 0xcaca, 0x5e80, 0x6040, 0x1, 0x1);
        gbc.writeMem(0x5ac5, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7d27, gbc.sp());
        EXPECT(0x5ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A5 03E3
        gbc.setState(0xcc1b, 0xb668, 0xfd50, 0x6f9b, 0x7665, 0x467c, 0x0, 0x0);
        gbc.writeMem(0xcc1b, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb668, gbc.sp());
        EXPECT(0xcc1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc1b));
        EXPECT(0xa5, gbc.readMem(0xcc1c));
        // CB A5 03E4
        gbc.setState(0xbc28, 0x154, 0x2730, 0x21fb, 0xd960, 0x2243, 0x1, 0x0);
        gbc.writeMem(0xbc28, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x154, gbc.sp());
        EXPECT(0xbc2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc28));
        EXPECT(0xa5, gbc.readMem(0xbc29));
        // CB A5 03E6
        gbc.setState(0x1ae2, 0x5663, 0x1970, 0x5b44, 0x61f3, 0xb2d8, 0x0, 0x0);
        gbc.writeMem(0x1ae2, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5663, gbc.sp());
        EXPECT(0x1ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A5 03E7
        gbc.setState(0x8639, 0xdb39, 0xac10, 0x29f, 0x54b, 0x96d0, 0x1, 0x0);
        gbc.writeMem(0x8639, { 0xcb, 0xa5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdb39, gbc.sp());
        EXPECT(0x863b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8639));
        EXPECT(0xa5, gbc.readMem(0x863a));
    }
