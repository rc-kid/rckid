    TEST(gbcemu, opcode_cb_c5) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB C5 0000
        gbc.setState(0x58ab, 0xabd3, 0xc670, 0x5dd3, 0xb9c8, 0xe2ca, 0x0, 0x0);
        gbc.writeMem(0x58ab, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xabd3, gbc.sp());
        EXPECT(0x58ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0001
        gbc.setState(0x3937, 0xab89, 0x9f80, 0xd431, 0xfcc2, 0x67ff, 0x1, 0x1);
        gbc.writeMem(0x3937, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xab89, gbc.sp());
        EXPECT(0x3939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0002
        gbc.setState(0x377b, 0x5d08, 0xa0a0, 0x1c53, 0x6ef0, 0x30a, 0x0, 0x0);
        gbc.writeMem(0x377b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5d08, gbc.sp());
        EXPECT(0x377d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0003
        gbc.setState(0x5c32, 0xa9cc, 0x2e30, 0x88c2, 0x194d, 0x14ea, 0x0, 0x0);
        gbc.writeMem(0x5c32, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa9cc, gbc.sp());
        EXPECT(0x5c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0004
        gbc.setState(0x5e42, 0x8379, 0x8dc0, 0x63e4, 0xe3a4, 0x5626, 0x0, 0x1);
        gbc.writeMem(0x5e42, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8379, gbc.sp());
        EXPECT(0x5e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0005
        gbc.setState(0xafd0, 0x6335, 0x9d80, 0xc4ca, 0x3a88, 0x7ae, 0x1, 0x1);
        gbc.writeMem(0xafd0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6335, gbc.sp());
        EXPECT(0xafd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd0));
        EXPECT(0xc5, gbc.readMem(0xafd1));
        // CB C5 0006
        gbc.setState(0x5553, 0x82f5, 0x90c0, 0x7e8c, 0xcaaf, 0x7d34, 0x0, 0x0);
        gbc.writeMem(0x5553, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x82f5, gbc.sp());
        EXPECT(0x5555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0007
        gbc.setState(0x4800, 0x8bed, 0x8e0, 0x3073, 0x6866, 0xdbe2, 0x0, 0x0);
        gbc.writeMem(0x4800, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8bed, gbc.sp());
        EXPECT(0x4802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0008
        gbc.setState(0x29cb, 0xec11, 0xb480, 0x3799, 0x20bf, 0xc892, 0x1, 0x0);
        gbc.writeMem(0x29cb, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xec11, gbc.sp());
        EXPECT(0x29cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0009
        gbc.setState(0xe379, 0x7ea9, 0x3f00, 0x97c1, 0xb856, 0x7031, 0x1, 0x0);
        gbc.writeMem(0xe379, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7ea9, gbc.sp());
        EXPECT(0xe37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe379));
        EXPECT(0xc5, gbc.readMem(0xe37a));
        // CB C5 000A
        gbc.setState(0x4516, 0x4442, 0xf5e0, 0x80ac, 0x60c1, 0x96eb, 0x0, 0x0);
        gbc.writeMem(0x4516, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4442, gbc.sp());
        EXPECT(0x4518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 000B
        gbc.setState(0x1d0c, 0xcc38, 0x7580, 0xe07, 0x43f0, 0x3245, 0x0, 0x1);
        gbc.writeMem(0x1d0c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcc38, gbc.sp());
        EXPECT(0x1d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 000C
        gbc.setState(0x9d8f, 0x6f67, 0x7e20, 0xda07, 0xddcf, 0xc3b3, 0x1, 0x1);
        gbc.writeMem(0x9d8f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6f67, gbc.sp());
        EXPECT(0x9d91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d8f));
        EXPECT(0xc5, gbc.readMem(0x9d90));
        // CB C5 000D
        gbc.setState(0xd29f, 0xd5a1, 0x6b10, 0xe5a1, 0x12c2, 0xc447, 0x0, 0x0);
        gbc.writeMem(0xd29f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd5a1, gbc.sp());
        EXPECT(0xd2a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd29f));
        EXPECT(0xc5, gbc.readMem(0xd2a0));
        // CB C5 000E
        gbc.setState(0x621f, 0x7df4, 0x39d0, 0xc3f8, 0xea24, 0xdd69, 0x1, 0x1);
        gbc.writeMem(0x621f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7df4, gbc.sp());
        EXPECT(0x6221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0010
        gbc.setState(0xe859, 0xbf23, 0xc750, 0x6ff6, 0xc5da, 0x29b4, 0x1, 0x1);
        gbc.writeMem(0xe859, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xbf23, gbc.sp());
        EXPECT(0xe85b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe859));
        EXPECT(0xc5, gbc.readMem(0xe85a));
        // CB C5 0011
        gbc.setState(0x62e6, 0x2d36, 0x11a0, 0x8993, 0x42b3, 0x87e8, 0x1, 0x0);
        gbc.writeMem(0x62e6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2d36, gbc.sp());
        EXPECT(0x62e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0012
        gbc.setState(0x7492, 0x5fe9, 0xb10, 0xce05, 0x42a, 0x43d0, 0x1, 0x0);
        gbc.writeMem(0x7492, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5fe9, gbc.sp());
        EXPECT(0x7494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0013
        gbc.setState(0x278, 0x79fc, 0x2100, 0x5962, 0x978f, 0xa405, 0x0, 0x0);
        gbc.writeMem(0x278, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x79fc, gbc.sp());
        EXPECT(0x27a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0014
        gbc.setState(0xcdc, 0x8fbc, 0xae90, 0x8661, 0xf3e7, 0x4624, 0x0, 0x0);
        gbc.writeMem(0xcdc, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8fbc, gbc.sp());
        EXPECT(0xcde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0015
        gbc.setState(0x8602, 0x7a18, 0x9f30, 0x294a, 0xf95a, 0x8b7e, 0x0, 0x0);
        gbc.writeMem(0x8602, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7a18, gbc.sp());
        EXPECT(0x8604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8602));
        EXPECT(0xc5, gbc.readMem(0x8603));
        // CB C5 0016
        gbc.setState(0xef4e, 0x2b87, 0xeff0, 0x5a09, 0x3641, 0x1222, 0x1, 0x1);
        gbc.writeMem(0xef4e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2b87, gbc.sp());
        EXPECT(0xef50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef4e));
        EXPECT(0xc5, gbc.readMem(0xef4f));
        // CB C5 0017
        gbc.setState(0xc7a8, 0xb753, 0xb0d0, 0xdbe5, 0xdb93, 0x7d47, 0x1, 0x0);
        gbc.writeMem(0xc7a8, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb753, gbc.sp());
        EXPECT(0xc7aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a8));
        EXPECT(0xc5, gbc.readMem(0xc7a9));
        // CB C5 0018
        gbc.setState(0xbc8c, 0xa6fa, 0xd90, 0xa7e1, 0xc701, 0x11ca, 0x1, 0x1);
        gbc.writeMem(0xbc8c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa6fa, gbc.sp());
        EXPECT(0xbc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8c));
        EXPECT(0xc5, gbc.readMem(0xbc8d));
        // CB C5 0019
        gbc.setState(0x84ae, 0x959d, 0x9830, 0xc26d, 0x5790, 0x88dd, 0x1, 0x1);
        gbc.writeMem(0x84ae, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x959d, gbc.sp());
        EXPECT(0x84b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ae));
        EXPECT(0xc5, gbc.readMem(0x84af));
        // CB C5 001A
        gbc.setState(0x6287, 0x3a3f, 0xd000, 0x2bb3, 0xc8e8, 0xb6ce, 0x1, 0x1);
        gbc.writeMem(0x6287, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3a3f, gbc.sp());
        EXPECT(0x6289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 001B
        gbc.setState(0x4c92, 0x5584, 0xa180, 0x1f2c, 0xd8a1, 0xe401, 0x1, 0x1);
        gbc.writeMem(0x4c92, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5584, gbc.sp());
        EXPECT(0x4c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 001C
        gbc.setState(0x4a39, 0xc61f, 0x9060, 0x3902, 0x5ffa, 0x2466, 0x0, 0x1);
        gbc.writeMem(0x4a39, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc61f, gbc.sp());
        EXPECT(0x4a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 001D
        gbc.setState(0xaa58, 0xce42, 0xa1d0, 0x1021, 0xec19, 0x42b6, 0x1, 0x1);
        gbc.writeMem(0xaa58, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xce42, gbc.sp());
        EXPECT(0xaa5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa58));
        EXPECT(0xc5, gbc.readMem(0xaa59));
        // CB C5 001E
        gbc.setState(0x8e9f, 0x148d, 0x45d0, 0x3b30, 0x857d, 0xdf9a, 0x1, 0x0);
        gbc.writeMem(0x8e9f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x148d, gbc.sp());
        EXPECT(0x8ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e9f));
        EXPECT(0xc5, gbc.readMem(0x8ea0));
        // CB C5 001F
        gbc.setState(0x17f2, 0x4f2a, 0xdba0, 0x6d90, 0xe0c1, 0x5b1d, 0x0, 0x0);
        gbc.writeMem(0x17f2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4f2a, gbc.sp());
        EXPECT(0x17f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0021
        gbc.setState(0xe45f, 0x295, 0xdbc0, 0xb7ba, 0x8b35, 0x641d, 0x0, 0x0);
        gbc.writeMem(0xe45f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x295, gbc.sp());
        EXPECT(0xe461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe45f));
        EXPECT(0xc5, gbc.readMem(0xe460));
        // CB C5 0022
        gbc.setState(0x13d1, 0xf4ac, 0x2c10, 0xcbd4, 0x5caf, 0x41b3, 0x0, 0x1);
        gbc.writeMem(0x13d1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf4ac, gbc.sp());
        EXPECT(0x13d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0024
        gbc.setState(0xe3b0, 0x82f, 0xd330, 0x37ef, 0x40, 0x5ea8, 0x1, 0x1);
        gbc.writeMem(0xe3b0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x82f, gbc.sp());
        EXPECT(0xe3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b0));
        EXPECT(0xc5, gbc.readMem(0xe3b1));
        // CB C5 0025
        gbc.setState(0xb55d, 0xdf8d, 0xf820, 0xa1c5, 0x1800, 0x28c9, 0x1, 0x1);
        gbc.writeMem(0xb55d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdf8d, gbc.sp());
        EXPECT(0xb55f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb55d));
        EXPECT(0xc5, gbc.readMem(0xb55e));
        // CB C5 0026
        gbc.setState(0x4e1a, 0xb7af, 0xfa90, 0x82da, 0x8256, 0x7433, 0x0, 0x0);
        gbc.writeMem(0x4e1a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb7af, gbc.sp());
        EXPECT(0x4e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0027
        gbc.setState(0x965, 0xdbdc, 0x6c0, 0x8095, 0x95fe, 0x2bef, 0x1, 0x0);
        gbc.writeMem(0x965, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdbdc, gbc.sp());
        EXPECT(0x967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0028
        gbc.setState(0x6a94, 0x4325, 0xde50, 0x2584, 0x3e58, 0x67e7, 0x1, 0x1);
        gbc.writeMem(0x6a94, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4325, gbc.sp());
        EXPECT(0x6a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0029
        gbc.setState(0x2070, 0x8d32, 0x29b0, 0x8709, 0x73fd, 0xc888, 0x0, 0x1);
        gbc.writeMem(0x2070, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8d32, gbc.sp());
        EXPECT(0x2072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 002A
        gbc.setState(0x81c0, 0x1d41, 0x9e60, 0x43f0, 0xdc3c, 0x5ea8, 0x0, 0x0);
        gbc.writeMem(0x81c0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1d41, gbc.sp());
        EXPECT(0x81c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c0));
        EXPECT(0xc5, gbc.readMem(0x81c1));
        // CB C5 002B
        gbc.setState(0x5cc2, 0x4ee, 0xa7d0, 0x9f9c, 0x4381, 0x161c, 0x0, 0x1);
        gbc.writeMem(0x5cc2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4ee, gbc.sp());
        EXPECT(0x5cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 002C
        gbc.setState(0x30e1, 0x61f, 0x12e0, 0x6c41, 0xc7e9, 0x86, 0x0, 0x1);
        gbc.writeMem(0x30e1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x61f, gbc.sp());
        EXPECT(0x30e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 002D
        gbc.setState(0x4bc6, 0x55aa, 0x33d0, 0x46f8, 0xe40c, 0x974c, 0x0, 0x1);
        gbc.writeMem(0x4bc6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x55aa, gbc.sp());
        EXPECT(0x4bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 002E
        gbc.setState(0x4d35, 0xae57, 0x37e0, 0xd71b, 0x52fe, 0x9f31, 0x1, 0x0);
        gbc.writeMem(0x4d35, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xae57, gbc.sp());
        EXPECT(0x4d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 002F
        gbc.setState(0x52cf, 0x3deb, 0x7410, 0x8947, 0xcc8f, 0x3479, 0x1, 0x0);
        gbc.writeMem(0x52cf, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3deb, gbc.sp());
        EXPECT(0x52d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0030
        gbc.setState(0x6054, 0x5083, 0x8da0, 0x9a41, 0xe28f, 0x35c5, 0x0, 0x0);
        gbc.writeMem(0x6054, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5083, gbc.sp());
        EXPECT(0x6056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0031
        gbc.setState(0x807c, 0x8268, 0x5630, 0x389c, 0xa8c, 0x9f5, 0x1, 0x0);
        gbc.writeMem(0x807c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8268, gbc.sp());
        EXPECT(0x807e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x807c));
        EXPECT(0xc5, gbc.readMem(0x807d));
        // CB C5 0032
        gbc.setState(0xd1af, 0xf995, 0xe250, 0x840, 0x8dca, 0x194, 0x0, 0x0);
        gbc.writeMem(0xd1af, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf995, gbc.sp());
        EXPECT(0xd1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1af));
        EXPECT(0xc5, gbc.readMem(0xd1b0));
        // CB C5 0033
        gbc.setState(0xb303, 0xed30, 0xd9a0, 0x320d, 0x8be3, 0x267e, 0x0, 0x0);
        gbc.writeMem(0xb303, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xed30, gbc.sp());
        EXPECT(0xb305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb303));
        EXPECT(0xc5, gbc.readMem(0xb304));
        // CB C5 0034
        gbc.setState(0x5379, 0x2a43, 0xb5f0, 0xce6b, 0x2621, 0xef7b, 0x0, 0x1);
        gbc.writeMem(0x5379, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2a43, gbc.sp());
        EXPECT(0x537b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0035
        gbc.setState(0x9ce0, 0xeb92, 0xedd0, 0xfabd, 0x2aba, 0xce83, 0x0, 0x0);
        gbc.writeMem(0x9ce0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xeb92, gbc.sp());
        EXPECT(0x9ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce0));
        EXPECT(0xc5, gbc.readMem(0x9ce1));
        // CB C5 0036
        gbc.setState(0x1fa4, 0x33fa, 0xa9c0, 0xa97a, 0xe892, 0xfdd8, 0x0, 0x0);
        gbc.writeMem(0x1fa4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x33fa, gbc.sp());
        EXPECT(0x1fa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0037
        gbc.setState(0xbcf2, 0x85fd, 0x35b0, 0xa7e8, 0x67ce, 0x691, 0x0, 0x0);
        gbc.writeMem(0xbcf2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x85fd, gbc.sp());
        EXPECT(0xbcf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf2));
        EXPECT(0xc5, gbc.readMem(0xbcf3));
        // CB C5 0038
        gbc.setState(0x7033, 0x9f4a, 0x8860, 0x6123, 0x4f54, 0x784c, 0x0, 0x0);
        gbc.writeMem(0x7033, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9f4a, gbc.sp());
        EXPECT(0x7035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0039
        gbc.setState(0x7cf0, 0x6712, 0xdd40, 0xa8ae, 0x9e77, 0xefeb, 0x1, 0x0);
        gbc.writeMem(0x7cf0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6712, gbc.sp());
        EXPECT(0x7cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 003A
        gbc.setState(0x300d, 0xd41e, 0xe240, 0x2b8e, 0x28e6, 0x6458, 0x1, 0x1);
        gbc.writeMem(0x300d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd41e, gbc.sp());
        EXPECT(0x300f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 003B
        gbc.setState(0x4523, 0xa37c, 0xc520, 0x8533, 0xe009, 0xf976, 0x0, 0x1);
        gbc.writeMem(0x4523, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa37c, gbc.sp());
        EXPECT(0x4525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 003C
        gbc.setState(0xc788, 0x8c3b, 0x3790, 0x3c15, 0xe3ca, 0x33b1, 0x1, 0x0);
        gbc.writeMem(0xc788, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8c3b, gbc.sp());
        EXPECT(0xc78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc788));
        EXPECT(0xc5, gbc.readMem(0xc789));
        // CB C5 003D
        gbc.setState(0xea18, 0xec64, 0x2910, 0xe0fc, 0xdbb4, 0x57c3, 0x1, 0x1);
        gbc.writeMem(0xea18, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xec64, gbc.sp());
        EXPECT(0xea1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea18));
        EXPECT(0xc5, gbc.readMem(0xea19));
        // CB C5 003E
        gbc.setState(0x8a76, 0xf333, 0xb850, 0x389d, 0xe02c, 0x6130, 0x0, 0x0);
        gbc.writeMem(0x8a76, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf333, gbc.sp());
        EXPECT(0x8a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a76));
        EXPECT(0xc5, gbc.readMem(0x8a77));
        // CB C5 003F
        gbc.setState(0x91b5, 0xbd9a, 0x3b70, 0xfee3, 0x73fc, 0xfd47, 0x0, 0x0);
        gbc.writeMem(0x91b5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbd9a, gbc.sp());
        EXPECT(0x91b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b5));
        EXPECT(0xc5, gbc.readMem(0x91b6));
        // CB C5 0040
        gbc.setState(0x7865, 0x922c, 0x1320, 0x988a, 0x9eba, 0x66d2, 0x1, 0x1);
        gbc.writeMem(0x7865, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x922c, gbc.sp());
        EXPECT(0x7867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0041
        gbc.setState(0x3d1e, 0xe970, 0x4300, 0xe9f1, 0x92cb, 0xe0ba, 0x0, 0x0);
        gbc.writeMem(0x3d1e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe970, gbc.sp());
        EXPECT(0x3d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0042
        gbc.setState(0x4da5, 0x551b, 0xa750, 0x8b3c, 0xf059, 0xa067, 0x1, 0x1);
        gbc.writeMem(0x4da5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x551b, gbc.sp());
        EXPECT(0x4da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0043
        gbc.setState(0x72a7, 0xb910, 0x8060, 0x521a, 0x8087, 0x644a, 0x1, 0x0);
        gbc.writeMem(0x72a7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb910, gbc.sp());
        EXPECT(0x72a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0044
        gbc.setState(0x986, 0xb7f, 0x6c00, 0xe0ae, 0x9fbd, 0xc38, 0x0, 0x0);
        gbc.writeMem(0x986, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb7f, gbc.sp());
        EXPECT(0x988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0045
        gbc.setState(0x90b, 0x1a04, 0x4070, 0x7ac8, 0x141f, 0xf5f1, 0x0, 0x1);
        gbc.writeMem(0x90b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1a04, gbc.sp());
        EXPECT(0x90d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0046
        gbc.setState(0xc061, 0xeeb1, 0x2d40, 0xeb21, 0xb7eb, 0x2adf, 0x0, 0x0);
        gbc.writeMem(0xc061, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xeeb1, gbc.sp());
        EXPECT(0xc063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc061));
        EXPECT(0xc5, gbc.readMem(0xc062));
        // CB C5 0048
        gbc.setState(0x2e0b, 0x764d, 0x7550, 0x8d4a, 0x3ed0, 0x6fa1, 0x1, 0x1);
        gbc.writeMem(0x2e0b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x764d, gbc.sp());
        EXPECT(0x2e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 004A
        gbc.setState(0xedaa, 0x721d, 0x14c0, 0xb316, 0x3f25, 0xef3e, 0x1, 0x1);
        gbc.writeMem(0xedaa, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x721d, gbc.sp());
        EXPECT(0xedac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedaa));
        EXPECT(0xc5, gbc.readMem(0xedab));
        // CB C5 004B
        gbc.setState(0x5836, 0xd309, 0x230, 0xb11e, 0x110, 0x93ef, 0x1, 0x1);
        gbc.writeMem(0x5836, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd309, gbc.sp());
        EXPECT(0x5838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 004C
        gbc.setState(0x1118, 0xf7d0, 0x4d50, 0xe7e5, 0xf8f5, 0xcf87, 0x0, 0x1);
        gbc.writeMem(0x1118, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf7d0, gbc.sp());
        EXPECT(0x111a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 004D
        gbc.setState(0xa025, 0x6322, 0x17d0, 0xd6d9, 0x2a6d, 0xfc6f, 0x0, 0x0);
        gbc.writeMem(0xa025, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6322, gbc.sp());
        EXPECT(0xa027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa025));
        EXPECT(0xc5, gbc.readMem(0xa026));
        // CB C5 004E
        gbc.setState(0x5e07, 0x856e, 0x9fe0, 0x6b30, 0x8eeb, 0x2991, 0x0, 0x0);
        gbc.writeMem(0x5e07, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x856e, gbc.sp());
        EXPECT(0x5e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 004F
        gbc.setState(0x48a6, 0x4d20, 0xe50, 0x7829, 0x693a, 0x9214, 0x0, 0x1);
        gbc.writeMem(0x48a6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4d20, gbc.sp());
        EXPECT(0x48a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0051
        gbc.setState(0x40a6, 0xa63a, 0xe850, 0xa39a, 0x215a, 0x65fe, 0x0, 0x1);
        gbc.writeMem(0x40a6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa63a, gbc.sp());
        EXPECT(0x40a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0052
        gbc.setState(0x164e, 0x2dde, 0xd440, 0x82b4, 0xab60, 0xd3cd, 0x1, 0x1);
        gbc.writeMem(0x164e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2dde, gbc.sp());
        EXPECT(0x1650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0053
        gbc.setState(0x61e1, 0xa4a0, 0x96e0, 0xfceb, 0x56fc, 0xae21, 0x1, 0x0);
        gbc.writeMem(0x61e1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa4a0, gbc.sp());
        EXPECT(0x61e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0054
        gbc.setState(0x22d1, 0x3ee8, 0x7a70, 0xc7f, 0xaddc, 0xc9ff, 0x0, 0x0);
        gbc.writeMem(0x22d1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3ee8, gbc.sp());
        EXPECT(0x22d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0055
        gbc.setState(0x2c9b, 0x365b, 0x5d10, 0xfa99, 0xfa80, 0xfc97, 0x0, 0x1);
        gbc.writeMem(0x2c9b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x365b, gbc.sp());
        EXPECT(0x2c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0056
        gbc.setState(0x9fc4, 0x6161, 0xc030, 0xa298, 0xa6f5, 0xf36e, 0x0, 0x0);
        gbc.writeMem(0x9fc4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6161, gbc.sp());
        EXPECT(0x9fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc4));
        EXPECT(0xc5, gbc.readMem(0x9fc5));
        // CB C5 0057
        gbc.setState(0xdcae, 0x46a7, 0xf430, 0x263b, 0x7c4a, 0x93bc, 0x0, 0x0);
        gbc.writeMem(0xdcae, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x46a7, gbc.sp());
        EXPECT(0xdcb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcae));
        EXPECT(0xc5, gbc.readMem(0xdcaf));
        // CB C5 0058
        gbc.setState(0x329, 0x6992, 0x2530, 0xdd5b, 0xa7d5, 0x124e, 0x0, 0x1);
        gbc.writeMem(0x329, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6992, gbc.sp());
        EXPECT(0x32b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 005A
        gbc.setState(0xd135, 0x77e7, 0x6a00, 0x4983, 0x5d84, 0x2c48, 0x1, 0x0);
        gbc.writeMem(0xd135, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x77e7, gbc.sp());
        EXPECT(0xd137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd135));
        EXPECT(0xc5, gbc.readMem(0xd136));
        // CB C5 005B
        gbc.setState(0xa225, 0x63bb, 0x5fe0, 0xbbb0, 0x1373, 0x8fbe, 0x1, 0x0);
        gbc.writeMem(0xa225, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x63bb, gbc.sp());
        EXPECT(0xa227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa225));
        EXPECT(0xc5, gbc.readMem(0xa226));
        // CB C5 005C
        gbc.setState(0xb49a, 0x7440, 0xe2f0, 0xaf32, 0xabc7, 0xfc3, 0x1, 0x0);
        gbc.writeMem(0xb49a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7440, gbc.sp());
        EXPECT(0xb49c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb49a));
        EXPECT(0xc5, gbc.readMem(0xb49b));
        // CB C5 005D
        gbc.setState(0xdfd8, 0xdd0c, 0x4d90, 0x8f89, 0x2101, 0xfe10, 0x0, 0x1);
        gbc.writeMem(0xdfd8, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xdd0c, gbc.sp());
        EXPECT(0xdfda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd8));
        EXPECT(0xc5, gbc.readMem(0xdfd9));
        // CB C5 005E
        gbc.setState(0x56f5, 0x2b8, 0xda90, 0xf24c, 0xf0a1, 0x5e75, 0x1, 0x0);
        gbc.writeMem(0x56f5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2b8, gbc.sp());
        EXPECT(0x56f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 005F
        gbc.setState(0x5276, 0xb1f6, 0x79a0, 0x9fb9, 0xbb49, 0x3629, 0x0, 0x0);
        gbc.writeMem(0x5276, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb1f6, gbc.sp());
        EXPECT(0x5278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0060
        gbc.setState(0x99cd, 0xca87, 0xfee0, 0xcdd, 0x5bd3, 0x3062, 0x1, 0x1);
        gbc.writeMem(0x99cd, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xca87, gbc.sp());
        EXPECT(0x99cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99cd));
        EXPECT(0xc5, gbc.readMem(0x99ce));
        // CB C5 0061
        gbc.setState(0x33fb, 0xd83, 0x3a00, 0xed0a, 0xd9f5, 0xdce9, 0x1, 0x1);
        gbc.writeMem(0x33fb, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd83, gbc.sp());
        EXPECT(0x33fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0062
        gbc.setState(0x93a9, 0xc831, 0x7500, 0xfe1c, 0xaf6e, 0x2b2d, 0x0, 0x0);
        gbc.writeMem(0x93a9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc831, gbc.sp());
        EXPECT(0x93ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a9));
        EXPECT(0xc5, gbc.readMem(0x93aa));
        // CB C5 0063
        gbc.setState(0xebe4, 0xadaa, 0x1c70, 0x9447, 0x7666, 0x1e34, 0x1, 0x0);
        gbc.writeMem(0xebe4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xadaa, gbc.sp());
        EXPECT(0xebe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe4));
        EXPECT(0xc5, gbc.readMem(0xebe5));
        // CB C5 0064
        gbc.setState(0x8741, 0xdfcd, 0x2ef0, 0x1f72, 0xba71, 0x1751, 0x1, 0x1);
        gbc.writeMem(0x8741, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdfcd, gbc.sp());
        EXPECT(0x8743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8741));
        EXPECT(0xc5, gbc.readMem(0x8742));
        // CB C5 0065
        gbc.setState(0x2580, 0xef42, 0x1020, 0x2fb9, 0x937a, 0xdc61, 0x1, 0x0);
        gbc.writeMem(0x2580, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xef42, gbc.sp());
        EXPECT(0x2582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0066
        gbc.setState(0x19be, 0x7cf7, 0x8d40, 0x6647, 0x8810, 0xa2de, 0x0, 0x1);
        gbc.writeMem(0x19be, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7cf7, gbc.sp());
        EXPECT(0x19c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0067
        gbc.setState(0x95cf, 0xeffc, 0x5b50, 0xfaef, 0x142e, 0x630c, 0x0, 0x0);
        gbc.writeMem(0x95cf, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xeffc, gbc.sp());
        EXPECT(0x95d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95cf));
        EXPECT(0xc5, gbc.readMem(0x95d0));
        // CB C5 0068
        gbc.setState(0x2df9, 0x16e6, 0x730, 0xc46c, 0xf13a, 0x696d, 0x1, 0x1);
        gbc.writeMem(0x2df9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x16e6, gbc.sp());
        EXPECT(0x2dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0069
        gbc.setState(0xcc80, 0x885e, 0x7730, 0x8228, 0x2dc0, 0x6c5a, 0x1, 0x1);
        gbc.writeMem(0xcc80, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x885e, gbc.sp());
        EXPECT(0xcc82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc80));
        EXPECT(0xc5, gbc.readMem(0xcc81));
        // CB C5 006A
        gbc.setState(0xc174, 0x7c41, 0xaab0, 0x1343, 0x826, 0xbab2, 0x0, 0x0);
        gbc.writeMem(0xc174, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7c41, gbc.sp());
        EXPECT(0xc176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc174));
        EXPECT(0xc5, gbc.readMem(0xc175));
        // CB C5 006B
        gbc.setState(0xb574, 0xb9d5, 0x8100, 0xd87d, 0x4096, 0xc876, 0x0, 0x0);
        gbc.writeMem(0xb574, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb9d5, gbc.sp());
        EXPECT(0xb576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb574));
        EXPECT(0xc5, gbc.readMem(0xb575));
        // CB C5 006C
        gbc.setState(0x618b, 0xe6cf, 0xe850, 0x1c33, 0xe3d5, 0x5dd4, 0x1, 0x0);
        gbc.writeMem(0x618b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe6cf, gbc.sp());
        EXPECT(0x618d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 006D
        gbc.setState(0x495b, 0x7a0c, 0x4920, 0x1fe5, 0xbf77, 0xd2b5, 0x1, 0x1);
        gbc.writeMem(0x495b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7a0c, gbc.sp());
        EXPECT(0x495d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 006E
        gbc.setState(0x7ae9, 0x3d97, 0x5c00, 0x43e2, 0xf04, 0x548b, 0x0, 0x1);
        gbc.writeMem(0x7ae9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3d97, gbc.sp());
        EXPECT(0x7aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0070
        gbc.setState(0x73f, 0x2421, 0xc880, 0x5c67, 0x3223, 0x81a1, 0x0, 0x0);
        gbc.writeMem(0x73f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2421, gbc.sp());
        EXPECT(0x741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0071
        gbc.setState(0x719f, 0x8494, 0xc1b0, 0xb009, 0xf290, 0x7239, 0x0, 0x0);
        gbc.writeMem(0x719f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8494, gbc.sp());
        EXPECT(0x71a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0072
        gbc.setState(0xec52, 0x40db, 0xbc50, 0x63f5, 0xd914, 0xfe8b, 0x1, 0x1);
        gbc.writeMem(0xec52, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x40db, gbc.sp());
        EXPECT(0xec54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec52));
        EXPECT(0xc5, gbc.readMem(0xec53));
        // CB C5 0073
        gbc.setState(0x464, 0xcc01, 0x87d0, 0xd508, 0x6908, 0x3e29, 0x1, 0x0);
        gbc.writeMem(0x464, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcc01, gbc.sp());
        EXPECT(0x466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0074
        gbc.setState(0xeaad, 0xa7f4, 0xff80, 0x4104, 0x7a06, 0xb587, 0x1, 0x1);
        gbc.writeMem(0xeaad, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa7f4, gbc.sp());
        EXPECT(0xeaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaad));
        EXPECT(0xc5, gbc.readMem(0xeaae));
        // CB C5 0075
        gbc.setState(0xcb6b, 0xa270, 0x2ff0, 0xf4c5, 0xa6c0, 0xbb77, 0x0, 0x0);
        gbc.writeMem(0xcb6b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa270, gbc.sp());
        EXPECT(0xcb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb6b));
        EXPECT(0xc5, gbc.readMem(0xcb6c));
        // CB C5 0076
        gbc.setState(0x21d6, 0x2ba8, 0x6fb0, 0x594, 0xb500, 0x6ecd, 0x1, 0x0);
        gbc.writeMem(0x21d6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2ba8, gbc.sp());
        EXPECT(0x21d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0077
        gbc.setState(0x47e8, 0xbb52, 0xa6c0, 0x4ca, 0xfee6, 0xea68, 0x1, 0x1);
        gbc.writeMem(0x47e8, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbb52, gbc.sp());
        EXPECT(0x47ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0078
        gbc.setState(0xc4c1, 0x9848, 0xeba0, 0x1ea5, 0x66b0, 0xa55b, 0x1, 0x0);
        gbc.writeMem(0xc4c1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9848, gbc.sp());
        EXPECT(0xc4c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c1));
        EXPECT(0xc5, gbc.readMem(0xc4c2));
        // CB C5 0079
        gbc.setState(0xbbd2, 0x743f, 0x8400, 0x19c8, 0xdc61, 0xb13d, 0x1, 0x1);
        gbc.writeMem(0xbbd2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x743f, gbc.sp());
        EXPECT(0xbbd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd2));
        EXPECT(0xc5, gbc.readMem(0xbbd3));
        // CB C5 007A
        gbc.setState(0xcea9, 0xe429, 0xbfe0, 0x3933, 0xdcd8, 0x5a9, 0x1, 0x1);
        gbc.writeMem(0xcea9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe429, gbc.sp());
        EXPECT(0xceab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea9));
        EXPECT(0xc5, gbc.readMem(0xceaa));
        // CB C5 007B
        gbc.setState(0x838, 0xa755, 0x7ad0, 0xf945, 0xbad8, 0x5888, 0x0, 0x1);
        gbc.writeMem(0x838, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa755, gbc.sp());
        EXPECT(0x83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 007C
        gbc.setState(0xe672, 0xad08, 0xe670, 0x3ed6, 0x8d59, 0x4d63, 0x1, 0x1);
        gbc.writeMem(0xe672, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xad08, gbc.sp());
        EXPECT(0xe674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe672));
        EXPECT(0xc5, gbc.readMem(0xe673));
        // CB C5 007D
        gbc.setState(0xd201, 0xbc8b, 0xa4b0, 0x1681, 0x62cf, 0x27d7, 0x1, 0x0);
        gbc.writeMem(0xd201, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xbc8b, gbc.sp());
        EXPECT(0xd203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd201));
        EXPECT(0xc5, gbc.readMem(0xd202));
        // CB C5 007E
        gbc.setState(0xae9c, 0x91f6, 0xdf00, 0xa71b, 0x4a0, 0xe3f6, 0x0, 0x1);
        gbc.writeMem(0xae9c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x91f6, gbc.sp());
        EXPECT(0xae9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae9c));
        EXPECT(0xc5, gbc.readMem(0xae9d));
        // CB C5 007F
        gbc.setState(0x8fb0, 0x1a46, 0x3520, 0x678e, 0xd9a8, 0xe119, 0x1, 0x1);
        gbc.writeMem(0x8fb0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1a46, gbc.sp());
        EXPECT(0x8fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb0));
        EXPECT(0xc5, gbc.readMem(0x8fb1));
        // CB C5 0080
        gbc.setState(0x4425, 0x543e, 0x2840, 0xf105, 0x6b13, 0xb834, 0x1, 0x1);
        gbc.writeMem(0x4425, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x543e, gbc.sp());
        EXPECT(0x4427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0081
        gbc.setState(0x2960, 0xb828, 0xf900, 0xe701, 0x74e4, 0xd777, 0x0, 0x0);
        gbc.writeMem(0x2960, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb828, gbc.sp());
        EXPECT(0x2962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0083
        gbc.setState(0x6101, 0xc9aa, 0xf070, 0xd25f, 0x57e2, 0xd107, 0x1, 0x0);
        gbc.writeMem(0x6101, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc9aa, gbc.sp());
        EXPECT(0x6103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0084
        gbc.setState(0xd8da, 0x90f8, 0x4f0, 0xfcaf, 0x54c6, 0x66b7, 0x0, 0x1);
        gbc.writeMem(0xd8da, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x90f8, gbc.sp());
        EXPECT(0xd8dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8da));
        EXPECT(0xc5, gbc.readMem(0xd8db));
        // CB C5 0085
        gbc.setState(0x18d7, 0x9f89, 0x3100, 0xa20c, 0xdac4, 0x8294, 0x0, 0x0);
        gbc.writeMem(0x18d7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9f89, gbc.sp());
        EXPECT(0x18d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0086
        gbc.setState(0x45d5, 0xc9b8, 0xcf70, 0xdb78, 0xca05, 0x74b, 0x0, 0x1);
        gbc.writeMem(0x45d5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc9b8, gbc.sp());
        EXPECT(0x45d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0087
        gbc.setState(0x2a5d, 0xcfa9, 0xb700, 0xbd94, 0x723a, 0x4d4e, 0x1, 0x0);
        gbc.writeMem(0x2a5d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcfa9, gbc.sp());
        EXPECT(0x2a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0088
        gbc.setState(0xcf96, 0xd1c3, 0x10f0, 0x332c, 0xd196, 0xd5a8, 0x1, 0x0);
        gbc.writeMem(0xcf96, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd1c3, gbc.sp());
        EXPECT(0xcf98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf96));
        EXPECT(0xc5, gbc.readMem(0xcf97));
        // CB C5 0089
        gbc.setState(0x80db, 0x8910, 0x4440, 0xa2ce, 0x3864, 0xacd1, 0x0, 0x1);
        gbc.writeMem(0x80db, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8910, gbc.sp());
        EXPECT(0x80dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80db));
        EXPECT(0xc5, gbc.readMem(0x80dc));
        // CB C5 008A
        gbc.setState(0x5a18, 0x5ee2, 0x1450, 0x275a, 0xd58a, 0x6cba, 0x1, 0x1);
        gbc.writeMem(0x5a18, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5ee2, gbc.sp());
        EXPECT(0x5a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 008B
        gbc.setState(0x78f0, 0xb722, 0xdcb0, 0x47f3, 0x92fc, 0xe94b, 0x0, 0x0);
        gbc.writeMem(0x78f0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb722, gbc.sp());
        EXPECT(0x78f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 008C
        gbc.setState(0x7730, 0x7c8a, 0x8850, 0x1521, 0x8ba7, 0x7586, 0x0, 0x0);
        gbc.writeMem(0x7730, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7c8a, gbc.sp());
        EXPECT(0x7732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 008D
        gbc.setState(0x2f41, 0xf59d, 0xb190, 0xb9f5, 0xbcce, 0x3856, 0x1, 0x0);
        gbc.writeMem(0x2f41, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf59d, gbc.sp());
        EXPECT(0x2f43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 008E
        gbc.setState(0x8af7, 0x82e4, 0x4a70, 0x4f8b, 0xc100, 0xb51f, 0x1, 0x1);
        gbc.writeMem(0x8af7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x82e4, gbc.sp());
        EXPECT(0x8af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af7));
        EXPECT(0xc5, gbc.readMem(0x8af8));
        // CB C5 008F
        gbc.setState(0xe3e4, 0x42ff, 0xefe0, 0x208d, 0x5889, 0x51c1, 0x1, 0x1);
        gbc.writeMem(0xe3e4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x42ff, gbc.sp());
        EXPECT(0xe3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e4));
        EXPECT(0xc5, gbc.readMem(0xe3e5));
        // CB C5 0090
        gbc.setState(0x299e, 0xceed, 0x2ad0, 0xac77, 0xd8b2, 0x890a, 0x0, 0x1);
        gbc.writeMem(0x299e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xceed, gbc.sp());
        EXPECT(0x29a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0091
        gbc.setState(0xe780, 0x4842, 0x1430, 0x40a6, 0xe64, 0xb452, 0x1, 0x1);
        gbc.writeMem(0xe780, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4842, gbc.sp());
        EXPECT(0xe782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe780));
        EXPECT(0xc5, gbc.readMem(0xe781));
        // CB C5 0092
        gbc.setState(0x6627, 0xfc01, 0x8e40, 0xbcab, 0x6da6, 0xa8db, 0x1, 0x1);
        gbc.writeMem(0x6627, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfc01, gbc.sp());
        EXPECT(0x6629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0093
        gbc.setState(0xa22d, 0xd0e2, 0x35a0, 0x418f, 0x859e, 0x1ccc, 0x1, 0x0);
        gbc.writeMem(0xa22d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd0e2, gbc.sp());
        EXPECT(0xa22f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa22d));
        EXPECT(0xc5, gbc.readMem(0xa22e));
        // CB C5 0094
        gbc.setState(0x9241, 0x49d2, 0x9c30, 0x648a, 0x60f2, 0x5ead, 0x1, 0x1);
        gbc.writeMem(0x9241, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x49d2, gbc.sp());
        EXPECT(0x9243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9241));
        EXPECT(0xc5, gbc.readMem(0x9242));
        // CB C5 0095
        gbc.setState(0xe3b4, 0xcdb3, 0xa690, 0xdc7b, 0x71c0, 0x67d7, 0x1, 0x0);
        gbc.writeMem(0xe3b4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xcdb3, gbc.sp());
        EXPECT(0xe3b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b4));
        EXPECT(0xc5, gbc.readMem(0xe3b5));
        // CB C5 0096
        gbc.setState(0x7b63, 0x128e, 0x1e70, 0x48f0, 0xb395, 0x56b6, 0x1, 0x0);
        gbc.writeMem(0x7b63, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x128e, gbc.sp());
        EXPECT(0x7b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0097
        gbc.setState(0x58ce, 0x2255, 0xb2e0, 0x9c05, 0x3b87, 0x5b80, 0x1, 0x1);
        gbc.writeMem(0x58ce, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2255, gbc.sp());
        EXPECT(0x58d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0098
        gbc.setState(0x2e62, 0x2684, 0xb7b0, 0xc1f2, 0xb0da, 0x3dd, 0x0, 0x1);
        gbc.writeMem(0x2e62, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2684, gbc.sp());
        EXPECT(0x2e64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0099
        gbc.setState(0x8fb0, 0xed4a, 0x9a20, 0x319a, 0xee0f, 0x6c3e, 0x0, 0x0);
        gbc.writeMem(0x8fb0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xed4a, gbc.sp());
        EXPECT(0x8fb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb0));
        EXPECT(0xc5, gbc.readMem(0x8fb1));
        // CB C5 009A
        gbc.setState(0xcc08, 0xe073, 0x4740, 0x615e, 0x1efc, 0x8ee3, 0x0, 0x1);
        gbc.writeMem(0xcc08, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe073, gbc.sp());
        EXPECT(0xcc0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc08));
        EXPECT(0xc5, gbc.readMem(0xcc09));
        // CB C5 009B
        gbc.setState(0xa74c, 0x2702, 0xb650, 0x3cc7, 0xb14, 0x1d81, 0x0, 0x0);
        gbc.writeMem(0xa74c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2702, gbc.sp());
        EXPECT(0xa74e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa74c));
        EXPECT(0xc5, gbc.readMem(0xa74d));
        // CB C5 009C
        gbc.setState(0x48f6, 0x1e6a, 0xa230, 0x619e, 0x1b20, 0x5eda, 0x1, 0x0);
        gbc.writeMem(0x48f6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1e6a, gbc.sp());
        EXPECT(0x48f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 009D
        gbc.setState(0xe6a7, 0xde1, 0xbc80, 0x4263, 0x6b71, 0xb01b, 0x0, 0x1);
        gbc.writeMem(0xe6a7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xde1, gbc.sp());
        EXPECT(0xe6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a7));
        EXPECT(0xc5, gbc.readMem(0xe6a8));
        // CB C5 009E
        gbc.setState(0x1c3a, 0xda8c, 0xc870, 0x666f, 0x2cc3, 0x3ff7, 0x1, 0x0);
        gbc.writeMem(0x1c3a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xda8c, gbc.sp());
        EXPECT(0x1c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 009F
        gbc.setState(0xbd10, 0x548d, 0x2010, 0xfc54, 0x8121, 0x9223, 0x0, 0x0);
        gbc.writeMem(0xbd10, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x548d, gbc.sp());
        EXPECT(0xbd12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd10));
        EXPECT(0xc5, gbc.readMem(0xbd11));
        // CB C5 00A0
        gbc.setState(0xe3f7, 0xd439, 0xb1f0, 0xff05, 0x3bce, 0x123b, 0x0, 0x0);
        gbc.writeMem(0xe3f7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd439, gbc.sp());
        EXPECT(0xe3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f7));
        EXPECT(0xc5, gbc.readMem(0xe3f8));
        // CB C5 00A1
        gbc.setState(0x7979, 0x42dd, 0x8800, 0xc968, 0x68d3, 0x3dc7, 0x0, 0x1);
        gbc.writeMem(0x7979, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x42dd, gbc.sp());
        EXPECT(0x797b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00A2
        gbc.setState(0x6b44, 0x18ca, 0x800, 0xbf5d, 0x10c6, 0xd13, 0x1, 0x0);
        gbc.writeMem(0x6b44, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x18ca, gbc.sp());
        EXPECT(0x6b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00A3
        gbc.setState(0xcd76, 0xbe4b, 0xf3f0, 0xeb94, 0x3533, 0x259, 0x0, 0x1);
        gbc.writeMem(0xcd76, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbe4b, gbc.sp());
        EXPECT(0xcd78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd76));
        EXPECT(0xc5, gbc.readMem(0xcd77));
        // CB C5 00A4
        gbc.setState(0x2a15, 0x31f1, 0x8e80, 0x7c7e, 0xb40e, 0xd252, 0x1, 0x1);
        gbc.writeMem(0x2a15, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x31f1, gbc.sp());
        EXPECT(0x2a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00A5
        gbc.setState(0x4801, 0x500f, 0x7220, 0x8744, 0xf2d7, 0xfd53, 0x1, 0x0);
        gbc.writeMem(0x4801, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x500f, gbc.sp());
        EXPECT(0x4803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00A6
        gbc.setState(0xc6f2, 0x90fe, 0x450, 0xa964, 0xc753, 0xf6e8, 0x0, 0x1);
        gbc.writeMem(0xc6f2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x90fe, gbc.sp());
        EXPECT(0xc6f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f2));
        EXPECT(0xc5, gbc.readMem(0xc6f3));
        // CB C5 00A7
        gbc.setState(0x9d37, 0xb203, 0xe600, 0xc1e3, 0x95c8, 0x5099, 0x1, 0x0);
        gbc.writeMem(0x9d37, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb203, gbc.sp());
        EXPECT(0x9d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d37));
        EXPECT(0xc5, gbc.readMem(0x9d38));
        // CB C5 00A9
        gbc.setState(0x7998, 0x30, 0xa870, 0x81eb, 0x7f7f, 0x448b, 0x0, 0x0);
        gbc.writeMem(0x7998, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x30, gbc.sp());
        EXPECT(0x799a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00AA
        gbc.setState(0x1839, 0x3dfe, 0xbad0, 0xf06e, 0x1e3d, 0xfc84, 0x1, 0x1);
        gbc.writeMem(0x1839, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3dfe, gbc.sp());
        EXPECT(0x183b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00AB
        gbc.setState(0x7594, 0x7a23, 0xab50, 0x4f40, 0x1314, 0x407e, 0x1, 0x1);
        gbc.writeMem(0x7594, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7a23, gbc.sp());
        EXPECT(0x7596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00AC
        gbc.setState(0x72f0, 0x23e9, 0xb410, 0x57, 0x45e9, 0x6fe1, 0x1, 0x1);
        gbc.writeMem(0x72f0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x23e9, gbc.sp());
        EXPECT(0x72f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00AD
        gbc.setState(0x9e7a, 0x503, 0x2f30, 0xfca1, 0xebab, 0x36b, 0x0, 0x0);
        gbc.writeMem(0x9e7a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x503, gbc.sp());
        EXPECT(0x9e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7a));
        EXPECT(0xc5, gbc.readMem(0x9e7b));
        // CB C5 00AE
        gbc.setState(0x524a, 0xb8f1, 0x9fb0, 0xd68a, 0x6916, 0x4169, 0x0, 0x1);
        gbc.writeMem(0x524a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb8f1, gbc.sp());
        EXPECT(0x524c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00AF
        gbc.setState(0xe73f, 0xeac8, 0x6770, 0x60ea, 0xcb9d, 0xb666, 0x1, 0x0);
        gbc.writeMem(0xe73f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xeac8, gbc.sp());
        EXPECT(0xe741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73f));
        EXPECT(0xc5, gbc.readMem(0xe740));
        // CB C5 00B0
        gbc.setState(0x4ea, 0x8803, 0x9fa0, 0x2a83, 0x2f41, 0xe19d, 0x0, 0x0);
        gbc.writeMem(0x4ea, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8803, gbc.sp());
        EXPECT(0x4ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00B1
        gbc.setState(0x5aec, 0x5da7, 0xe360, 0x49c2, 0x1247, 0x6110, 0x0, 0x0);
        gbc.writeMem(0x5aec, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5da7, gbc.sp());
        EXPECT(0x5aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00B2
        gbc.setState(0xded5, 0xb2fb, 0x89f0, 0xbde5, 0xac44, 0x56e4, 0x0, 0x0);
        gbc.writeMem(0xded5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb2fb, gbc.sp());
        EXPECT(0xded7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded5));
        EXPECT(0xc5, gbc.readMem(0xded6));
        // CB C5 00B3
        gbc.setState(0x1a92, 0x33c5, 0xc980, 0x7fa4, 0x618e, 0x5760, 0x1, 0x1);
        gbc.writeMem(0x1a92, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x33c5, gbc.sp());
        EXPECT(0x1a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00B4
        gbc.setState(0xceca, 0xe11b, 0xaf20, 0x77b3, 0x5d28, 0x6d45, 0x1, 0x0);
        gbc.writeMem(0xceca, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe11b, gbc.sp());
        EXPECT(0xcecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceca));
        EXPECT(0xc5, gbc.readMem(0xcecb));
        // CB C5 00B5
        gbc.setState(0x70f6, 0x7b11, 0x39e0, 0xe975, 0x4700, 0x3610, 0x0, 0x1);
        gbc.writeMem(0x70f6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7b11, gbc.sp());
        EXPECT(0x70f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00B6
        gbc.setState(0x7cc6, 0xd554, 0xefb0, 0xd12c, 0x2723, 0xc098, 0x1, 0x0);
        gbc.writeMem(0x7cc6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd554, gbc.sp());
        EXPECT(0x7cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00B7
        gbc.setState(0xce9a, 0xdf8, 0x3da0, 0x7da9, 0x2bf7, 0x3405, 0x0, 0x0);
        gbc.writeMem(0xce9a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdf8, gbc.sp());
        EXPECT(0xce9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce9a));
        EXPECT(0xc5, gbc.readMem(0xce9b));
        // CB C5 00B8
        gbc.setState(0x9a0d, 0x73dd, 0x6850, 0xcc49, 0xeba5, 0xc1bc, 0x1, 0x1);
        gbc.writeMem(0x9a0d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x73dd, gbc.sp());
        EXPECT(0x9a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a0d));
        EXPECT(0xc5, gbc.readMem(0x9a0e));
        // CB C5 00B9
        gbc.setState(0x7698, 0x3b4, 0x1ad0, 0xfd56, 0x2cd, 0x3fee, 0x0, 0x0);
        gbc.writeMem(0x7698, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3b4, gbc.sp());
        EXPECT(0x769a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00BA
        gbc.setState(0xa17f, 0x50e0, 0x80b0, 0x9735, 0x7734, 0xe0fb, 0x1, 0x1);
        gbc.writeMem(0xa17f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x50e0, gbc.sp());
        EXPECT(0xa181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa17f));
        EXPECT(0xc5, gbc.readMem(0xa180));
        // CB C5 00BB
        gbc.setState(0x2314, 0x51a2, 0x4e40, 0x1ffb, 0x6, 0xcc7b, 0x1, 0x0);
        gbc.writeMem(0x2314, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x51a2, gbc.sp());
        EXPECT(0x2316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00BC
        gbc.setState(0xa736, 0xa20d, 0x5af0, 0xf11c, 0xa8c6, 0xdbf2, 0x0, 0x1);
        gbc.writeMem(0xa736, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa20d, gbc.sp());
        EXPECT(0xa738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa736));
        EXPECT(0xc5, gbc.readMem(0xa737));
        // CB C5 00BD
        gbc.setState(0x658, 0xd24b, 0x1fb0, 0x7db3, 0x5762, 0x381c, 0x1, 0x1);
        gbc.writeMem(0x658, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd24b, gbc.sp());
        EXPECT(0x65a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00BE
        gbc.setState(0xc9fe, 0x3fd8, 0xbdd0, 0x9c8, 0x72b9, 0x57b, 0x0, 0x0);
        gbc.writeMem(0xc9fe, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3fd8, gbc.sp());
        EXPECT(0xca00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fe));
        EXPECT(0xc5, gbc.readMem(0xc9ff));
        // CB C5 00BF
        gbc.setState(0xa278, 0xec6d, 0x4840, 0xd7ae, 0xb908, 0x1d3a, 0x1, 0x1);
        gbc.writeMem(0xa278, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xec6d, gbc.sp());
        EXPECT(0xa27a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa278));
        EXPECT(0xc5, gbc.readMem(0xa279));
        // CB C5 00C0
        gbc.setState(0x7a28, 0xe5ec, 0x9f50, 0xdc38, 0xd93d, 0x493f, 0x1, 0x1);
        gbc.writeMem(0x7a28, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe5ec, gbc.sp());
        EXPECT(0x7a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00C1
        gbc.setState(0x6be1, 0x6f2d, 0x7250, 0x120, 0x4f51, 0x7f, 0x1, 0x1);
        gbc.writeMem(0x6be1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6f2d, gbc.sp());
        EXPECT(0x6be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00C2
        gbc.setState(0xe95e, 0x8809, 0xdd80, 0x6807, 0x3f61, 0xe51, 0x0, 0x0);
        gbc.writeMem(0xe95e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8809, gbc.sp());
        EXPECT(0xe960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe95e));
        EXPECT(0xc5, gbc.readMem(0xe95f));
        // CB C5 00C3
        gbc.setState(0x6086, 0x9ced, 0xee60, 0xa962, 0x3b49, 0xe0fb, 0x1, 0x1);
        gbc.writeMem(0x6086, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9ced, gbc.sp());
        EXPECT(0x6088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00C4
        gbc.setState(0x483, 0x5926, 0x5880, 0x610b, 0x2cbe, 0x3299, 0x1, 0x0);
        gbc.writeMem(0x483, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5926, gbc.sp());
        EXPECT(0x485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00C5
        gbc.setState(0x27ea, 0x649b, 0x2420, 0x9aa8, 0x1f89, 0xeb08, 0x1, 0x1);
        gbc.writeMem(0x27ea, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x649b, gbc.sp());
        EXPECT(0x27ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00C6
        gbc.setState(0x892, 0x7adb, 0x87f0, 0xaf88, 0x3e28, 0x3dae, 0x1, 0x1);
        gbc.writeMem(0x892, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7adb, gbc.sp());
        EXPECT(0x894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00C7
        gbc.setState(0x5e12, 0xcf10, 0xd8c0, 0xea23, 0x6aef, 0xd694, 0x1, 0x0);
        gbc.writeMem(0x5e12, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xcf10, gbc.sp());
        EXPECT(0x5e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00C8
        gbc.setState(0x9313, 0xa6f, 0x3880, 0x49f6, 0xc82d, 0x40ee, 0x1, 0x0);
        gbc.writeMem(0x9313, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa6f, gbc.sp());
        EXPECT(0x9315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9313));
        EXPECT(0xc5, gbc.readMem(0x9314));
        // CB C5 00C9
        gbc.setState(0xa2d7, 0xd3c0, 0xeae0, 0x5121, 0x53b4, 0xc72a, 0x1, 0x0);
        gbc.writeMem(0xa2d7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd3c0, gbc.sp());
        EXPECT(0xa2d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d7));
        EXPECT(0xc5, gbc.readMem(0xa2d8));
        // CB C5 00CA
        gbc.setState(0xea95, 0x4657, 0x3aa0, 0xf566, 0x88, 0xd7e2, 0x1, 0x1);
        gbc.writeMem(0xea95, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4657, gbc.sp());
        EXPECT(0xea97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea95));
        EXPECT(0xc5, gbc.readMem(0xea96));
        // CB C5 00CB
        gbc.setState(0x8a35, 0xe59a, 0x1ca0, 0xcf89, 0x2c19, 0xdf45, 0x0, 0x0);
        gbc.writeMem(0x8a35, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe59a, gbc.sp());
        EXPECT(0x8a37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a35));
        EXPECT(0xc5, gbc.readMem(0x8a36));
        // CB C5 00CC
        gbc.setState(0x4d9f, 0x81, 0xfc60, 0x1b5f, 0x57db, 0x6290, 0x0, 0x1);
        gbc.writeMem(0x4d9f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x81, gbc.sp());
        EXPECT(0x4da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00CD
        gbc.setState(0x357a, 0xbbe7, 0x7ac0, 0xf55c, 0xc563, 0x4a06, 0x1, 0x0);
        gbc.writeMem(0x357a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbbe7, gbc.sp());
        EXPECT(0x357c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00CE
        gbc.setState(0x4867, 0x5e48, 0xc150, 0x701b, 0xfb3f, 0x3beb, 0x0, 0x1);
        gbc.writeMem(0x4867, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5e48, gbc.sp());
        EXPECT(0x4869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00CF
        gbc.setState(0x8076, 0x7b17, 0x4530, 0xd63c, 0xc963, 0x51aa, 0x0, 0x0);
        gbc.writeMem(0x8076, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7b17, gbc.sp());
        EXPECT(0x8078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8076));
        EXPECT(0xc5, gbc.readMem(0x8077));
        // CB C5 00D0
        gbc.setState(0x2f85, 0x93d6, 0x7720, 0xe941, 0x3143, 0x78fb, 0x1, 0x0);
        gbc.writeMem(0x2f85, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x93d6, gbc.sp());
        EXPECT(0x2f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00D1
        gbc.setState(0x39e, 0x53ca, 0x5110, 0x2a5b, 0x791b, 0xa0c8, 0x1, 0x1);
        gbc.writeMem(0x39e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x53ca, gbc.sp());
        EXPECT(0x3a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00D2
        gbc.setState(0xe89f, 0x156f, 0x2690, 0x3112, 0x9892, 0xea04, 0x0, 0x1);
        gbc.writeMem(0xe89f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x156f, gbc.sp());
        EXPECT(0xe8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe89f));
        EXPECT(0xc5, gbc.readMem(0xe8a0));
        // CB C5 00D3
        gbc.setState(0x747d, 0xe27c, 0x2210, 0xebda, 0x6261, 0x95be, 0x0, 0x0);
        gbc.writeMem(0x747d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe27c, gbc.sp());
        EXPECT(0x747f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00D4
        gbc.setState(0x392d, 0x9e5f, 0xf3b0, 0xb62e, 0xe917, 0xcdb9, 0x0, 0x0);
        gbc.writeMem(0x392d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9e5f, gbc.sp());
        EXPECT(0x392f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00D5
        gbc.setState(0x1a26, 0xf505, 0x7c00, 0xd359, 0x48fa, 0xe121, 0x0, 0x0);
        gbc.writeMem(0x1a26, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf505, gbc.sp());
        EXPECT(0x1a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00D6
        gbc.setState(0x8b33, 0x5c8e, 0x8210, 0xd6d2, 0xcfbb, 0xf14b, 0x0, 0x1);
        gbc.writeMem(0x8b33, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5c8e, gbc.sp());
        EXPECT(0x8b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b33));
        EXPECT(0xc5, gbc.readMem(0x8b34));
        // CB C5 00D7
        gbc.setState(0x1116, 0x50fa, 0x2570, 0x5665, 0xfd94, 0xe197, 0x0, 0x1);
        gbc.writeMem(0x1116, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x50fa, gbc.sp());
        EXPECT(0x1118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00D8
        gbc.setState(0x8cb2, 0x25df, 0x52f0, 0x6980, 0x70ff, 0x4174, 0x1, 0x0);
        gbc.writeMem(0x8cb2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x25df, gbc.sp());
        EXPECT(0x8cb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb2));
        EXPECT(0xc5, gbc.readMem(0x8cb3));
        // CB C5 00D9
        gbc.setState(0xbcb7, 0x3d69, 0x2ab0, 0xb6cc, 0x7fe9, 0x3a32, 0x0, 0x0);
        gbc.writeMem(0xbcb7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3d69, gbc.sp());
        EXPECT(0xbcb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb7));
        EXPECT(0xc5, gbc.readMem(0xbcb8));
        // CB C5 00DA
        gbc.setState(0x9438, 0xcd22, 0x4120, 0x1a50, 0x46f2, 0x4456, 0x0, 0x0);
        gbc.writeMem(0x9438, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcd22, gbc.sp());
        EXPECT(0x943a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9438));
        EXPECT(0xc5, gbc.readMem(0x9439));
        // CB C5 00DB
        gbc.setState(0xe657, 0x3951, 0x1650, 0xb1c1, 0x5e33, 0x6454, 0x0, 0x1);
        gbc.writeMem(0xe657, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3951, gbc.sp());
        EXPECT(0xe659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe657));
        EXPECT(0xc5, gbc.readMem(0xe658));
        // CB C5 00DC
        gbc.setState(0xa313, 0xaef4, 0xd20, 0x9e5c, 0xd877, 0x276c, 0x0, 0x0);
        gbc.writeMem(0xa313, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xaef4, gbc.sp());
        EXPECT(0xa315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa313));
        EXPECT(0xc5, gbc.readMem(0xa314));
        // CB C5 00DD
        gbc.setState(0xb507, 0x4074, 0x9dd0, 0xf385, 0x4598, 0x239f, 0x1, 0x1);
        gbc.writeMem(0xb507, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4074, gbc.sp());
        EXPECT(0xb509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb507));
        EXPECT(0xc5, gbc.readMem(0xb508));
        // CB C5 00DE
        gbc.setState(0x94e3, 0x91f3, 0x7490, 0xab31, 0xc53f, 0x480e, 0x0, 0x1);
        gbc.writeMem(0x94e3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x91f3, gbc.sp());
        EXPECT(0x94e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94e3));
        EXPECT(0xc5, gbc.readMem(0x94e4));
        // CB C5 00DF
        gbc.setState(0xb5f2, 0xb7a2, 0xcce0, 0xe9df, 0x3a50, 0xf8d2, 0x1, 0x0);
        gbc.writeMem(0xb5f2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb7a2, gbc.sp());
        EXPECT(0xb5f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f2));
        EXPECT(0xc5, gbc.readMem(0xb5f3));
        // CB C5 00E0
        gbc.setState(0x6dc9, 0xee30, 0x9d0, 0xf7c, 0x15b9, 0x9950, 0x1, 0x0);
        gbc.writeMem(0x6dc9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xee30, gbc.sp());
        EXPECT(0x6dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00E1
        gbc.setState(0x3314, 0xd9b6, 0xcbd0, 0xd72a, 0x8dd0, 0x6a1c, 0x0, 0x0);
        gbc.writeMem(0x3314, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd9b6, gbc.sp());
        EXPECT(0x3316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00E2
        gbc.setState(0xd4ec, 0xe479, 0x64c0, 0xd558, 0x9a2b, 0x6342, 0x0, 0x1);
        gbc.writeMem(0xd4ec, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe479, gbc.sp());
        EXPECT(0xd4ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ec));
        EXPECT(0xc5, gbc.readMem(0xd4ed));
        // CB C5 00E3
        gbc.setState(0x1cc8, 0x7fa3, 0x72a0, 0x9f98, 0x7bcb, 0x1ea5, 0x1, 0x0);
        gbc.writeMem(0x1cc8, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7fa3, gbc.sp());
        EXPECT(0x1cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00E4
        gbc.setState(0xc1df, 0x2f50, 0xa1d0, 0x7d6b, 0x4d1c, 0x620, 0x0, 0x1);
        gbc.writeMem(0xc1df, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2f50, gbc.sp());
        EXPECT(0xc1e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1df));
        EXPECT(0xc5, gbc.readMem(0xc1e0));
        // CB C5 00E5
        gbc.setState(0x56b5, 0xf223, 0x22c0, 0x884, 0xea07, 0x908f, 0x1, 0x0);
        gbc.writeMem(0x56b5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf223, gbc.sp());
        EXPECT(0x56b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00E6
        gbc.setState(0x5f2a, 0xb1a6, 0x7ff0, 0x35ac, 0x277f, 0xb999, 0x0, 0x0);
        gbc.writeMem(0x5f2a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb1a6, gbc.sp());
        EXPECT(0x5f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00E7
        gbc.setState(0x2c4c, 0x58ac, 0x4b40, 0xaf68, 0xc3e6, 0x5c62, 0x0, 0x1);
        gbc.writeMem(0x2c4c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x58ac, gbc.sp());
        EXPECT(0x2c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00E8
        gbc.setState(0x1e9, 0xe076, 0x27a0, 0xa623, 0x4581, 0xb515, 0x1, 0x0);
        gbc.writeMem(0x1e9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe076, gbc.sp());
        EXPECT(0x1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00E9
        gbc.setState(0xd0f9, 0x62b7, 0x3af0, 0xc7e1, 0x5956, 0xa07, 0x1, 0x0);
        gbc.writeMem(0xd0f9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x62b7, gbc.sp());
        EXPECT(0xd0fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f9));
        EXPECT(0xc5, gbc.readMem(0xd0fa));
        // CB C5 00EA
        gbc.setState(0xb199, 0xf661, 0x9ed0, 0x6c3, 0x46bd, 0xcc6, 0x0, 0x1);
        gbc.writeMem(0xb199, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf661, gbc.sp());
        EXPECT(0xb19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb199));
        EXPECT(0xc5, gbc.readMem(0xb19a));
        // CB C5 00EB
        gbc.setState(0x1b06, 0xe0c5, 0x9b80, 0x13bf, 0xef57, 0x3a1f, 0x0, 0x0);
        gbc.writeMem(0x1b06, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe0c5, gbc.sp());
        EXPECT(0x1b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00EC
        gbc.setState(0x2407, 0x717, 0x5220, 0xc02a, 0xa2ab, 0xf1cc, 0x1, 0x1);
        gbc.writeMem(0x2407, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x717, gbc.sp());
        EXPECT(0x2409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00ED
        gbc.setState(0x7b83, 0x2811, 0xf700, 0x7181, 0x5e3b, 0xf3a2, 0x0, 0x1);
        gbc.writeMem(0x7b83, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2811, gbc.sp());
        EXPECT(0x7b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00EE
        gbc.setState(0x5ac1, 0x6736, 0xb5a0, 0xc700, 0x289, 0x3027, 0x1, 0x1);
        gbc.writeMem(0x5ac1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6736, gbc.sp());
        EXPECT(0x5ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00EF
        gbc.setState(0xb7e6, 0xcd30, 0x9830, 0xa311, 0x64fa, 0xe223, 0x1, 0x1);
        gbc.writeMem(0xb7e6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xcd30, gbc.sp());
        EXPECT(0xb7e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e6));
        EXPECT(0xc5, gbc.readMem(0xb7e7));
        // CB C5 00F0
        gbc.setState(0x6b9b, 0x2d9d, 0x12e0, 0xc49a, 0xc41b, 0xdda4, 0x1, 0x0);
        gbc.writeMem(0x6b9b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2d9d, gbc.sp());
        EXPECT(0x6b9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 00F1
        gbc.setState(0x1c77, 0x839d, 0x6790, 0x31aa, 0xc580, 0xd2c2, 0x0, 0x0);
        gbc.writeMem(0x1c77, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x839d, gbc.sp());
        EXPECT(0x1c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00F2
        gbc.setState(0xd739, 0xe77e, 0x1810, 0xbcad, 0xc06a, 0xd0c, 0x1, 0x1);
        gbc.writeMem(0xd739, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe77e, gbc.sp());
        EXPECT(0xd73b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd739));
        EXPECT(0xc5, gbc.readMem(0xd73a));
        // CB C5 00F3
        gbc.setState(0x9950, 0x9b9c, 0x8370, 0xea86, 0x21b0, 0x529, 0x1, 0x0);
        gbc.writeMem(0x9950, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9b9c, gbc.sp());
        EXPECT(0x9952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9950));
        EXPECT(0xc5, gbc.readMem(0x9951));
        // CB C5 00F4
        gbc.setState(0xb2e, 0x3636, 0xa210, 0x4873, 0xb5b7, 0x7455, 0x0, 0x1);
        gbc.writeMem(0xb2e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3636, gbc.sp());
        EXPECT(0xb30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00F5
        gbc.setState(0xe9c4, 0x9d02, 0xcd00, 0xa07d, 0xb6ff, 0x1681, 0x0, 0x0);
        gbc.writeMem(0xe9c4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9d02, gbc.sp());
        EXPECT(0xe9c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c4));
        EXPECT(0xc5, gbc.readMem(0xe9c5));
        // CB C5 00F6
        gbc.setState(0x93a8, 0x9803, 0x48a0, 0xd4de, 0xfd7a, 0x4828, 0x1, 0x1);
        gbc.writeMem(0x93a8, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9803, gbc.sp());
        EXPECT(0x93aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a8));
        EXPECT(0xc5, gbc.readMem(0x93a9));
        // CB C5 00F7
        gbc.setState(0xddd1, 0xd902, 0xb460, 0x5227, 0xbf7a, 0xd063, 0x0, 0x1);
        gbc.writeMem(0xddd1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd902, gbc.sp());
        EXPECT(0xddd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddd1));
        EXPECT(0xc5, gbc.readMem(0xddd2));
        // CB C5 00F8
        gbc.setState(0xc675, 0x439b, 0xc00, 0x1b57, 0x4235, 0x73d3, 0x1, 0x1);
        gbc.writeMem(0xc675, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x439b, gbc.sp());
        EXPECT(0xc677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc675));
        EXPECT(0xc5, gbc.readMem(0xc676));
        // CB C5 00F9
        gbc.setState(0x1ca9, 0x62bd, 0xe4d0, 0xd6e8, 0x62a6, 0xedc7, 0x1, 0x1);
        gbc.writeMem(0x1ca9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x62bd, gbc.sp());
        EXPECT(0x1cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00FA
        gbc.setState(0xb6e4, 0x931, 0x4790, 0x4f91, 0x8eeb, 0xbe72, 0x0, 0x1);
        gbc.writeMem(0xb6e4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x931, gbc.sp());
        EXPECT(0xb6e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e4));
        EXPECT(0xc5, gbc.readMem(0xb6e5));
        // CB C5 00FC
        gbc.setState(0xc481, 0x5676, 0x2f90, 0x7049, 0x351b, 0x558f, 0x1, 0x0);
        gbc.writeMem(0xc481, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5676, gbc.sp());
        EXPECT(0xc483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc481));
        EXPECT(0xc5, gbc.readMem(0xc482));
        // CB C5 00FD
        gbc.setState(0x2da8, 0x6946, 0x1270, 0x9c5f, 0xda36, 0x3ca5, 0x1, 0x0);
        gbc.writeMem(0x2da8, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6946, gbc.sp());
        EXPECT(0x2daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 00FE
        gbc.setState(0x960e, 0xd031, 0xe3e0, 0x5e4d, 0xed0c, 0x91ef, 0x0, 0x1);
        gbc.writeMem(0x960e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd031, gbc.sp());
        EXPECT(0x9610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x960e));
        EXPECT(0xc5, gbc.readMem(0x960f));
        // CB C5 00FF
        gbc.setState(0xea0e, 0xce12, 0x71a0, 0x6067, 0xfb21, 0x4fa4, 0x1, 0x0);
        gbc.writeMem(0xea0e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xce12, gbc.sp());
        EXPECT(0xea10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea0e));
        EXPECT(0xc5, gbc.readMem(0xea0f));
        // CB C5 0100
        gbc.setState(0xdf68, 0x45b2, 0x86c0, 0xf63f, 0xbe08, 0xd289, 0x1, 0x1);
        gbc.writeMem(0xdf68, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x45b2, gbc.sp());
        EXPECT(0xdf6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf68));
        EXPECT(0xc5, gbc.readMem(0xdf69));
        // CB C5 0102
        gbc.setState(0x40b8, 0x6215, 0xac10, 0xe577, 0xb5e0, 0x24b8, 0x0, 0x0);
        gbc.writeMem(0x40b8, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6215, gbc.sp());
        EXPECT(0x40ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0103
        gbc.setState(0x3bca, 0xa13d, 0x9c0, 0xa886, 0x38f, 0xb574, 0x1, 0x0);
        gbc.writeMem(0x3bca, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa13d, gbc.sp());
        EXPECT(0x3bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0104
        gbc.setState(0x9597, 0x1dc9, 0x6300, 0xe2ed, 0x2ae5, 0xd26e, 0x1, 0x1);
        gbc.writeMem(0x9597, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1dc9, gbc.sp());
        EXPECT(0x9599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9597));
        EXPECT(0xc5, gbc.readMem(0x9598));
        // CB C5 0105
        gbc.setState(0x10b6, 0x155c, 0xfc70, 0xbee6, 0xa874, 0x2e40, 0x1, 0x0);
        gbc.writeMem(0x10b6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x155c, gbc.sp());
        EXPECT(0x10b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0106
        gbc.setState(0x2cd4, 0xef19, 0x6bb0, 0x99f5, 0xd2df, 0x8af2, 0x0, 0x0);
        gbc.writeMem(0x2cd4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xef19, gbc.sp());
        EXPECT(0x2cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0107
        gbc.setState(0x8fde, 0x4404, 0xc170, 0x111b, 0x16e7, 0x3088, 0x0, 0x0);
        gbc.writeMem(0x8fde, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4404, gbc.sp());
        EXPECT(0x8fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fde));
        EXPECT(0xc5, gbc.readMem(0x8fdf));
        // CB C5 0108
        gbc.setState(0x59d4, 0xe350, 0xc720, 0x7a01, 0xae38, 0x60d3, 0x1, 0x0);
        gbc.writeMem(0x59d4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe350, gbc.sp());
        EXPECT(0x59d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0109
        gbc.setState(0xa035, 0xc900, 0xa380, 0x4809, 0xa4cb, 0x1e31, 0x0, 0x1);
        gbc.writeMem(0xa035, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc900, gbc.sp());
        EXPECT(0xa037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa035));
        EXPECT(0xc5, gbc.readMem(0xa036));
        // CB C5 010A
        gbc.setState(0x820d, 0x4a44, 0x22f0, 0xf06d, 0x614f, 0x91d8, 0x1, 0x1);
        gbc.writeMem(0x820d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4a44, gbc.sp());
        EXPECT(0x820f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x820d));
        EXPECT(0xc5, gbc.readMem(0x820e));
        // CB C5 010B
        gbc.setState(0xb375, 0xaa0f, 0xf140, 0x9bfc, 0x7fc3, 0x732b, 0x0, 0x0);
        gbc.writeMem(0xb375, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xaa0f, gbc.sp());
        EXPECT(0xb377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb375));
        EXPECT(0xc5, gbc.readMem(0xb376));
        // CB C5 010C
        gbc.setState(0x4817, 0xde29, 0xbd20, 0x54af, 0xcf3b, 0x1126, 0x1, 0x1);
        gbc.writeMem(0x4817, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xde29, gbc.sp());
        EXPECT(0x4819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 010E
        gbc.setState(0x2c93, 0x958e, 0xef80, 0x65f, 0xd058, 0x337, 0x1, 0x1);
        gbc.writeMem(0x2c93, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x958e, gbc.sp());
        EXPECT(0x2c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 010F
        gbc.setState(0xad0, 0x1f7d, 0xdc70, 0x9af0, 0x4d91, 0x27c6, 0x0, 0x1);
        gbc.writeMem(0xad0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1f7d, gbc.sp());
        EXPECT(0xad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0110
        gbc.setState(0x44e1, 0x5d48, 0xe060, 0x1b45, 0x8c03, 0x6528, 0x0, 0x0);
        gbc.writeMem(0x44e1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5d48, gbc.sp());
        EXPECT(0x44e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0111
        gbc.setState(0x6bf0, 0xd5b4, 0xcf30, 0x9564, 0x7c5, 0x718b, 0x0, 0x0);
        gbc.writeMem(0x6bf0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd5b4, gbc.sp());
        EXPECT(0x6bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0112
        gbc.setState(0x8ec0, 0xa40c, 0x11c0, 0x8760, 0x2d4e, 0xc0f, 0x0, 0x1);
        gbc.writeMem(0x8ec0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa40c, gbc.sp());
        EXPECT(0x8ec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec0));
        EXPECT(0xc5, gbc.readMem(0x8ec1));
        // CB C5 0113
        gbc.setState(0x6332, 0x7cf5, 0x6b80, 0xc781, 0x5ee7, 0x2d55, 0x1, 0x1);
        gbc.writeMem(0x6332, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7cf5, gbc.sp());
        EXPECT(0x6334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0114
        gbc.setState(0x3705, 0xb58, 0x2bc0, 0x616b, 0x1e3, 0x20ae, 0x1, 0x1);
        gbc.writeMem(0x3705, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb58, gbc.sp());
        EXPECT(0x3707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0115
        gbc.setState(0x173, 0xe66d, 0x1f60, 0x746e, 0xe74b, 0x4d7e, 0x0, 0x1);
        gbc.writeMem(0x173, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe66d, gbc.sp());
        EXPECT(0x175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0116
        gbc.setState(0xa8c9, 0x7b24, 0xe1b0, 0xd063, 0x451b, 0x5b4c, 0x1, 0x0);
        gbc.writeMem(0xa8c9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7b24, gbc.sp());
        EXPECT(0xa8cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c9));
        EXPECT(0xc5, gbc.readMem(0xa8ca));
        // CB C5 0117
        gbc.setState(0xa43a, 0x8d5f, 0x31f0, 0xed5b, 0x986d, 0x4d6b, 0x0, 0x0);
        gbc.writeMem(0xa43a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8d5f, gbc.sp());
        EXPECT(0xa43c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa43a));
        EXPECT(0xc5, gbc.readMem(0xa43b));
        // CB C5 0118
        gbc.setState(0x1fa7, 0xccee, 0x4160, 0x6a0f, 0x4bda, 0x225f, 0x1, 0x1);
        gbc.writeMem(0x1fa7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xccee, gbc.sp());
        EXPECT(0x1fa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0119
        gbc.setState(0xbc78, 0xa2a9, 0x5240, 0x71cf, 0xd1a5, 0xe870, 0x1, 0x0);
        gbc.writeMem(0xbc78, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa2a9, gbc.sp());
        EXPECT(0xbc7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc78));
        EXPECT(0xc5, gbc.readMem(0xbc79));
        // CB C5 011A
        gbc.setState(0x14d1, 0xc32c, 0x7430, 0x486a, 0xca7a, 0xb6b3, 0x1, 0x1);
        gbc.writeMem(0x14d1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc32c, gbc.sp());
        EXPECT(0x14d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 011B
        gbc.setState(0x43da, 0xb6a4, 0xc8e0, 0xe225, 0x6e81, 0x54f2, 0x1, 0x1);
        gbc.writeMem(0x43da, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb6a4, gbc.sp());
        EXPECT(0x43dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 011C
        gbc.setState(0x2544, 0x1f38, 0x7600, 0x4c83, 0xf1a8, 0x29db, 0x1, 0x1);
        gbc.writeMem(0x2544, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1f38, gbc.sp());
        EXPECT(0x2546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 011D
        gbc.setState(0x91f2, 0x5f33, 0xcb30, 0xc60, 0x5192, 0x3f16, 0x1, 0x1);
        gbc.writeMem(0x91f2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5f33, gbc.sp());
        EXPECT(0x91f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f2));
        EXPECT(0xc5, gbc.readMem(0x91f3));
        // CB C5 011E
        gbc.setState(0xc955, 0xa122, 0x6400, 0x530, 0x7d05, 0x289a, 0x1, 0x0);
        gbc.writeMem(0xc955, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa122, gbc.sp());
        EXPECT(0xc957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc955));
        EXPECT(0xc5, gbc.readMem(0xc956));
        // CB C5 011F
        gbc.setState(0x9d1a, 0xede8, 0x83e0, 0x9cb5, 0xb617, 0xec2c, 0x1, 0x1);
        gbc.writeMem(0x9d1a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xede8, gbc.sp());
        EXPECT(0x9d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d1a));
        EXPECT(0xc5, gbc.readMem(0x9d1b));
        // CB C5 0120
        gbc.setState(0x7619, 0xcaca, 0x4450, 0xdd70, 0x4756, 0xcfa9, 0x0, 0x0);
        gbc.writeMem(0x7619, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xcaca, gbc.sp());
        EXPECT(0x761b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0121
        gbc.setState(0xa309, 0xf87f, 0x8c30, 0x2e61, 0x1dbc, 0xf4f, 0x1, 0x0);
        gbc.writeMem(0xa309, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf87f, gbc.sp());
        EXPECT(0xa30b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa309));
        EXPECT(0xc5, gbc.readMem(0xa30a));
        // CB C5 0122
        gbc.setState(0x8f22, 0x18b2, 0xa2d0, 0xd47c, 0x56b9, 0xe1b2, 0x1, 0x0);
        gbc.writeMem(0x8f22, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x18b2, gbc.sp());
        EXPECT(0x8f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f22));
        EXPECT(0xc5, gbc.readMem(0x8f23));
        // CB C5 0123
        gbc.setState(0x13a4, 0xafa8, 0xd7b0, 0xa28, 0x1529, 0x96cf, 0x0, 0x0);
        gbc.writeMem(0x13a4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xafa8, gbc.sp());
        EXPECT(0x13a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0124
        gbc.setState(0x4ffe, 0x42da, 0xdd30, 0x69d0, 0xe8b3, 0xeaf5, 0x1, 0x0);
        gbc.writeMem(0x4ffe, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x42da, gbc.sp());
        EXPECT(0x5000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0125
        gbc.setState(0xbefa, 0x654c, 0x46e0, 0x73af, 0x1699, 0xce9, 0x1, 0x0);
        gbc.writeMem(0xbefa, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x654c, gbc.sp());
        EXPECT(0xbefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbefa));
        EXPECT(0xc5, gbc.readMem(0xbefb));
        // CB C5 0126
        gbc.setState(0xd54e, 0x212f, 0xcea0, 0x42e3, 0x8093, 0xa53c, 0x0, 0x1);
        gbc.writeMem(0xd54e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x212f, gbc.sp());
        EXPECT(0xd550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd54e));
        EXPECT(0xc5, gbc.readMem(0xd54f));
        // CB C5 0127
        gbc.setState(0xc40e, 0xa4e5, 0x93a0, 0x3df6, 0x17d3, 0x7b0a, 0x0, 0x1);
        gbc.writeMem(0xc40e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa4e5, gbc.sp());
        EXPECT(0xc410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc40e));
        EXPECT(0xc5, gbc.readMem(0xc40f));
        // CB C5 0128
        gbc.setState(0xccd5, 0x7ea8, 0xd970, 0xa436, 0x857f, 0xa291, 0x1, 0x1);
        gbc.writeMem(0xccd5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7ea8, gbc.sp());
        EXPECT(0xccd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd5));
        EXPECT(0xc5, gbc.readMem(0xccd6));
        // CB C5 0129
        gbc.setState(0x5022, 0xe41d, 0x8910, 0xb355, 0x49b0, 0xbd99, 0x0, 0x1);
        gbc.writeMem(0x5022, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe41d, gbc.sp());
        EXPECT(0x5024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 012A
        gbc.setState(0xdd22, 0x36b7, 0xe0, 0xdd3b, 0x1509, 0x511b, 0x0, 0x1);
        gbc.writeMem(0xdd22, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x36b7, gbc.sp());
        EXPECT(0xdd24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd22));
        EXPECT(0xc5, gbc.readMem(0xdd23));
        // CB C5 012B
        gbc.setState(0xd844, 0xc11d, 0x9f80, 0x5384, 0xacb4, 0x5f5, 0x0, 0x1);
        gbc.writeMem(0xd844, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc11d, gbc.sp());
        EXPECT(0xd846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd844));
        EXPECT(0xc5, gbc.readMem(0xd845));
        // CB C5 012C
        gbc.setState(0x10fe, 0x19a6, 0x6450, 0xc4c1, 0x611e, 0x5f55, 0x0, 0x0);
        gbc.writeMem(0x10fe, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x19a6, gbc.sp());
        EXPECT(0x1100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 012D
        gbc.setState(0xeac4, 0xcf1, 0x1bd0, 0xa283, 0x7b87, 0x4b25, 0x0, 0x0);
        gbc.writeMem(0xeac4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xcf1, gbc.sp());
        EXPECT(0xeac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac4));
        EXPECT(0xc5, gbc.readMem(0xeac5));
        // CB C5 012E
        gbc.setState(0x6143, 0xb577, 0xfaa0, 0x13c8, 0x5a0f, 0x37de, 0x0, 0x0);
        gbc.writeMem(0x6143, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb577, gbc.sp());
        EXPECT(0x6145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 012F
        gbc.setState(0x9ff6, 0x7fd6, 0xb470, 0x5b55, 0x6903, 0x5e06, 0x0, 0x1);
        gbc.writeMem(0x9ff6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7fd6, gbc.sp());
        EXPECT(0x9ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff6));
        EXPECT(0xc5, gbc.readMem(0x9ff7));
        // CB C5 0130
        gbc.setState(0xa055, 0x5306, 0xbdb0, 0x114a, 0xc197, 0x236f, 0x1, 0x0);
        gbc.writeMem(0xa055, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5306, gbc.sp());
        EXPECT(0xa057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa055));
        EXPECT(0xc5, gbc.readMem(0xa056));
        // CB C5 0131
        gbc.setState(0x4b2f, 0x25e8, 0x2f80, 0xf9ea, 0xc335, 0x274b, 0x0, 0x0);
        gbc.writeMem(0x4b2f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x25e8, gbc.sp());
        EXPECT(0x4b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0132
        gbc.setState(0x76e6, 0x1ab0, 0x9960, 0x9d2b, 0x4179, 0xa9f3, 0x0, 0x1);
        gbc.writeMem(0x76e6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1ab0, gbc.sp());
        EXPECT(0x76e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0133
        gbc.setState(0xa368, 0x2a28, 0x8390, 0x5e92, 0xf545, 0x705d, 0x1, 0x0);
        gbc.writeMem(0xa368, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2a28, gbc.sp());
        EXPECT(0xa36a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa368));
        EXPECT(0xc5, gbc.readMem(0xa369));
        // CB C5 0134
        gbc.setState(0xbc7b, 0xe38c, 0x3100, 0x679b, 0xda11, 0x4659, 0x0, 0x0);
        gbc.writeMem(0xbc7b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe38c, gbc.sp());
        EXPECT(0xbc7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc7b));
        EXPECT(0xc5, gbc.readMem(0xbc7c));
        // CB C5 0135
        gbc.setState(0xa6f2, 0xe1fa, 0xf5b0, 0x8018, 0x5f0a, 0xf3e0, 0x1, 0x0);
        gbc.writeMem(0xa6f2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe1fa, gbc.sp());
        EXPECT(0xa6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f2));
        EXPECT(0xc5, gbc.readMem(0xa6f3));
        // CB C5 0136
        gbc.setState(0x8144, 0xeb36, 0x8d00, 0xbe6f, 0x16b3, 0x928c, 0x1, 0x0);
        gbc.writeMem(0x8144, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xeb36, gbc.sp());
        EXPECT(0x8146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8144));
        EXPECT(0xc5, gbc.readMem(0x8145));
        // CB C5 0137
        gbc.setState(0xe216, 0xcf7b, 0xf090, 0xe6ca, 0x94f, 0x6cd9, 0x1, 0x1);
        gbc.writeMem(0xe216, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xcf7b, gbc.sp());
        EXPECT(0xe218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe216));
        EXPECT(0xc5, gbc.readMem(0xe217));
        // CB C5 0138
        gbc.setState(0xcfbf, 0xc4a2, 0x2500, 0x678d, 0xcfe6, 0x2134, 0x1, 0x1);
        gbc.writeMem(0xcfbf, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc4a2, gbc.sp());
        EXPECT(0xcfc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfbf));
        EXPECT(0xc5, gbc.readMem(0xcfc0));
        // CB C5 0139
        gbc.setState(0x7fbf, 0xba13, 0x1d70, 0xe468, 0x9097, 0xcde7, 0x1, 0x1);
        gbc.writeMem(0x7fbf, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xba13, gbc.sp());
        EXPECT(0x7fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 013A
        gbc.setState(0x5137, 0x6d03, 0x88d0, 0x8bc, 0x6aa4, 0x3881, 0x0, 0x0);
        gbc.writeMem(0x5137, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6d03, gbc.sp());
        EXPECT(0x5139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 013B
        gbc.setState(0x74ba, 0xcdfc, 0x9460, 0xd196, 0x2c94, 0xa197, 0x0, 0x0);
        gbc.writeMem(0x74ba, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xcdfc, gbc.sp());
        EXPECT(0x74bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 013C
        gbc.setState(0xa313, 0x86, 0xe580, 0xf0dd, 0x1d6d, 0x79f8, 0x1, 0x0);
        gbc.writeMem(0xa313, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x86, gbc.sp());
        EXPECT(0xa315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa313));
        EXPECT(0xc5, gbc.readMem(0xa314));
        // CB C5 013D
        gbc.setState(0x7e60, 0x2e34, 0x3820, 0x2a2, 0xe4a6, 0xc2b3, 0x1, 0x1);
        gbc.writeMem(0x7e60, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2e34, gbc.sp());
        EXPECT(0x7e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 013E
        gbc.setState(0x587f, 0x118f, 0x9340, 0x59e, 0x3fc2, 0x3a93, 0x0, 0x0);
        gbc.writeMem(0x587f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x118f, gbc.sp());
        EXPECT(0x5881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 013F
        gbc.setState(0x65ca, 0xecc, 0x4fc0, 0xce5c, 0x94c0, 0xdbb6, 0x0, 0x1);
        gbc.writeMem(0x65ca, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xecc, gbc.sp());
        EXPECT(0x65cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0141
        gbc.setState(0x6099, 0x1f04, 0xc6b0, 0xaca5, 0xc415, 0xecaf, 0x0, 0x1);
        gbc.writeMem(0x6099, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1f04, gbc.sp());
        EXPECT(0x609b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0142
        gbc.setState(0x7301, 0xd663, 0x49a0, 0xaa59, 0x9a2d, 0x6c10, 0x1, 0x0);
        gbc.writeMem(0x7301, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd663, gbc.sp());
        EXPECT(0x7303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0143
        gbc.setState(0x3661, 0x533d, 0x55a0, 0x162e, 0x4423, 0xec3f, 0x1, 0x1);
        gbc.writeMem(0x3661, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x533d, gbc.sp());
        EXPECT(0x3663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0144
        gbc.setState(0x330c, 0xb4e2, 0x80a0, 0xe2e4, 0x6170, 0x9362, 0x1, 0x1);
        gbc.writeMem(0x330c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb4e2, gbc.sp());
        EXPECT(0x330e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0145
        gbc.setState(0x1d4e, 0x25a4, 0xd140, 0xb89c, 0x1ecb, 0xc12a, 0x0, 0x1);
        gbc.writeMem(0x1d4e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x25a4, gbc.sp());
        EXPECT(0x1d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0146
        gbc.setState(0xc8f5, 0x1b28, 0xaa20, 0xfb7b, 0xf00b, 0x87ff, 0x0, 0x0);
        gbc.writeMem(0xc8f5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1b28, gbc.sp());
        EXPECT(0xc8f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f5));
        EXPECT(0xc5, gbc.readMem(0xc8f6));
        // CB C5 0147
        gbc.setState(0xbaec, 0x3528, 0x11b0, 0xddfc, 0xe3ff, 0x431, 0x0, 0x0);
        gbc.writeMem(0xbaec, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3528, gbc.sp());
        EXPECT(0xbaee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaec));
        EXPECT(0xc5, gbc.readMem(0xbaed));
        // CB C5 0148
        gbc.setState(0x3e92, 0x4ddc, 0x1ad0, 0x5746, 0x8748, 0x5c49, 0x1, 0x1);
        gbc.writeMem(0x3e92, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4ddc, gbc.sp());
        EXPECT(0x3e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0149
        gbc.setState(0xda8e, 0xb93e, 0xebe0, 0x4960, 0x9f14, 0x1d3a, 0x0, 0x1);
        gbc.writeMem(0xda8e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb93e, gbc.sp());
        EXPECT(0xda90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8e));
        EXPECT(0xc5, gbc.readMem(0xda8f));
        // CB C5 014A
        gbc.setState(0xa8e0, 0xa562, 0x4740, 0x5a7b, 0xb0ed, 0x7e0f, 0x0, 0x0);
        gbc.writeMem(0xa8e0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa562, gbc.sp());
        EXPECT(0xa8e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e0));
        EXPECT(0xc5, gbc.readMem(0xa8e1));
        // CB C5 014B
        gbc.setState(0xdb24, 0x8412, 0xd160, 0x1cb8, 0x5928, 0x8a1b, 0x1, 0x0);
        gbc.writeMem(0xdb24, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8412, gbc.sp());
        EXPECT(0xdb26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb24));
        EXPECT(0xc5, gbc.readMem(0xdb25));
        // CB C5 014C
        gbc.setState(0xe639, 0x649, 0xeb50, 0xa350, 0x1633, 0x911, 0x1, 0x0);
        gbc.writeMem(0xe639, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x649, gbc.sp());
        EXPECT(0xe63b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe639));
        EXPECT(0xc5, gbc.readMem(0xe63a));
        // CB C5 014D
        gbc.setState(0x5d81, 0x651c, 0x2930, 0x958f, 0xac7a, 0x2630, 0x1, 0x1);
        gbc.writeMem(0x5d81, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x651c, gbc.sp());
        EXPECT(0x5d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 014E
        gbc.setState(0xd4d9, 0x69f, 0xfa0, 0xb6f, 0x55f7, 0xabcb, 0x0, 0x0);
        gbc.writeMem(0xd4d9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x69f, gbc.sp());
        EXPECT(0xd4db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d9));
        EXPECT(0xc5, gbc.readMem(0xd4da));
        // CB C5 014F
        gbc.setState(0x3b98, 0xf1c7, 0x2240, 0x23b5, 0xfacb, 0x68d9, 0x1, 0x1);
        gbc.writeMem(0x3b98, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf1c7, gbc.sp());
        EXPECT(0x3b9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0150
        gbc.setState(0x939d, 0x3468, 0x4800, 0x1804, 0x8e3d, 0xcdaa, 0x1, 0x1);
        gbc.writeMem(0x939d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3468, gbc.sp());
        EXPECT(0x939f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x939d));
        EXPECT(0xc5, gbc.readMem(0x939e));
        // CB C5 0151
        gbc.setState(0x3d63, 0x4188, 0x87e0, 0xb196, 0xf3bc, 0xe8a9, 0x0, 0x1);
        gbc.writeMem(0x3d63, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4188, gbc.sp());
        EXPECT(0x3d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0152
        gbc.setState(0xcba3, 0x2fd7, 0x8010, 0xf02e, 0xa210, 0x4828, 0x1, 0x0);
        gbc.writeMem(0xcba3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2fd7, gbc.sp());
        EXPECT(0xcba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba3));
        EXPECT(0xc5, gbc.readMem(0xcba4));
        // CB C5 0153
        gbc.setState(0x96d4, 0xe614, 0xf680, 0x45f0, 0xc6b, 0xf295, 0x0, 0x0);
        gbc.writeMem(0x96d4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe614, gbc.sp());
        EXPECT(0x96d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d4));
        EXPECT(0xc5, gbc.readMem(0x96d5));
        // CB C5 0154
        gbc.setState(0x8c0f, 0x20e2, 0x3ed0, 0x49c2, 0xb53d, 0x2f5c, 0x1, 0x1);
        gbc.writeMem(0x8c0f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x20e2, gbc.sp());
        EXPECT(0x8c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c0f));
        EXPECT(0xc5, gbc.readMem(0x8c10));
        // CB C5 0155
        gbc.setState(0x3c7c, 0x41a7, 0x1df0, 0x79bc, 0xb7a9, 0xd745, 0x1, 0x0);
        gbc.writeMem(0x3c7c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x41a7, gbc.sp());
        EXPECT(0x3c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0156
        gbc.setState(0x20d6, 0xbe0c, 0xe420, 0x8ada, 0x3c10, 0xbde1, 0x0, 0x0);
        gbc.writeMem(0x20d6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbe0c, gbc.sp());
        EXPECT(0x20d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0157
        gbc.setState(0x838c, 0xb080, 0x16a0, 0xff3c, 0x9150, 0xb20b, 0x0, 0x1);
        gbc.writeMem(0x838c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb080, gbc.sp());
        EXPECT(0x838e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x838c));
        EXPECT(0xc5, gbc.readMem(0x838d));
        // CB C5 0158
        gbc.setState(0xbeaf, 0x7883, 0x7dc0, 0xa3a7, 0x7073, 0x25c3, 0x1, 0x1);
        gbc.writeMem(0xbeaf, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7883, gbc.sp());
        EXPECT(0xbeb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeaf));
        EXPECT(0xc5, gbc.readMem(0xbeb0));
        // CB C5 0159
        gbc.setState(0xe2b0, 0x76e4, 0xc510, 0x43b1, 0xf28f, 0x7d02, 0x0, 0x1);
        gbc.writeMem(0xe2b0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x76e4, gbc.sp());
        EXPECT(0xe2b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b0));
        EXPECT(0xc5, gbc.readMem(0xe2b1));
        // CB C5 015C
        gbc.setState(0x3919, 0xa783, 0x4590, 0x75c, 0x8e4d, 0xa7ca, 0x0, 0x0);
        gbc.writeMem(0x3919, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa783, gbc.sp());
        EXPECT(0x391b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 015E
        gbc.setState(0xf09, 0x92fc, 0x5150, 0xcf7b, 0x7acb, 0xeaa8, 0x1, 0x0);
        gbc.writeMem(0xf09, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x92fc, gbc.sp());
        EXPECT(0xf0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 015F
        gbc.setState(0x1f97, 0x522c, 0xea00, 0x3189, 0x867e, 0xf55f, 0x1, 0x0);
        gbc.writeMem(0x1f97, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x522c, gbc.sp());
        EXPECT(0x1f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0160
        gbc.setState(0xc128, 0x3fb, 0xe770, 0x91c7, 0x2c0a, 0x7975, 0x0, 0x1);
        gbc.writeMem(0xc128, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3fb, gbc.sp());
        EXPECT(0xc12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc128));
        EXPECT(0xc5, gbc.readMem(0xc129));
        // CB C5 0161
        gbc.setState(0xdd40, 0xfc60, 0x80d0, 0x125d, 0x314e, 0xd9e8, 0x1, 0x1);
        gbc.writeMem(0xdd40, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfc60, gbc.sp());
        EXPECT(0xdd42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd40));
        EXPECT(0xc5, gbc.readMem(0xdd41));
        // CB C5 0162
        gbc.setState(0x139e, 0x157e, 0x47f0, 0x55fe, 0x16ca, 0x3522, 0x1, 0x1);
        gbc.writeMem(0x139e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x157e, gbc.sp());
        EXPECT(0x13a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0163
        gbc.setState(0x146d, 0xe171, 0x8170, 0xf236, 0x890b, 0xe4e2, 0x1, 0x0);
        gbc.writeMem(0x146d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe171, gbc.sp());
        EXPECT(0x146f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0164
        gbc.setState(0xdb1d, 0x468a, 0xd4b0, 0xfd30, 0x1b7f, 0x28e8, 0x1, 0x0);
        gbc.writeMem(0xdb1d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x468a, gbc.sp());
        EXPECT(0xdb1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb1d));
        EXPECT(0xc5, gbc.readMem(0xdb1e));
        // CB C5 0165
        gbc.setState(0x81d5, 0x7355, 0xc200, 0x80c7, 0xfb24, 0x8cc1, 0x0, 0x0);
        gbc.writeMem(0x81d5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7355, gbc.sp());
        EXPECT(0x81d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d5));
        EXPECT(0xc5, gbc.readMem(0x81d6));
        // CB C5 0167
        gbc.setState(0x46e6, 0x9718, 0xed70, 0x50e7, 0xb995, 0x5b6c, 0x0, 0x0);
        gbc.writeMem(0x46e6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9718, gbc.sp());
        EXPECT(0x46e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0168
        gbc.setState(0x402b, 0xed7a, 0x420, 0x3513, 0x9491, 0xaa79, 0x0, 0x0);
        gbc.writeMem(0x402b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xed7a, gbc.sp());
        EXPECT(0x402d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0169
        gbc.setState(0xc089, 0xf533, 0xf830, 0x59bc, 0x3866, 0x8810, 0x1, 0x1);
        gbc.writeMem(0xc089, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf533, gbc.sp());
        EXPECT(0xc08b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc089));
        EXPECT(0xc5, gbc.readMem(0xc08a));
        // CB C5 016B
        gbc.setState(0x6a36, 0xff4d, 0x3360, 0x5137, 0x563a, 0x43f4, 0x1, 0x0);
        gbc.writeMem(0x6a36, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xff4d, gbc.sp());
        EXPECT(0x6a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 016C
        gbc.setState(0x5b1f, 0xfb1a, 0x8b80, 0xc1ef, 0xc545, 0xc6b2, 0x1, 0x1);
        gbc.writeMem(0x5b1f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfb1a, gbc.sp());
        EXPECT(0x5b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 016D
        gbc.setState(0xdc5f, 0x59b3, 0x3990, 0x4f54, 0xb8b4, 0xdb03, 0x1, 0x1);
        gbc.writeMem(0xdc5f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x59b3, gbc.sp());
        EXPECT(0xdc61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc5f));
        EXPECT(0xc5, gbc.readMem(0xdc60));
        // CB C5 016E
        gbc.setState(0xec30, 0x36c8, 0x7800, 0x49a1, 0x7ca6, 0xab49, 0x0, 0x1);
        gbc.writeMem(0xec30, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x36c8, gbc.sp());
        EXPECT(0xec32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec30));
        EXPECT(0xc5, gbc.readMem(0xec31));
        // CB C5 016F
        gbc.setState(0x7b03, 0xed99, 0xc7b0, 0x8bd2, 0x207c, 0x5984, 0x0, 0x1);
        gbc.writeMem(0x7b03, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xed99, gbc.sp());
        EXPECT(0x7b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0170
        gbc.setState(0x4eae, 0xa9c4, 0x29a0, 0xb8e, 0x5a53, 0x86e2, 0x1, 0x1);
        gbc.writeMem(0x4eae, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa9c4, gbc.sp());
        EXPECT(0x4eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0171
        gbc.setState(0xdfce, 0xc898, 0xb820, 0x342c, 0x5f, 0x1dd1, 0x1, 0x1);
        gbc.writeMem(0xdfce, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc898, gbc.sp());
        EXPECT(0xdfd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfce));
        EXPECT(0xc5, gbc.readMem(0xdfcf));
        // CB C5 0172
        gbc.setState(0xcf0f, 0x3ba9, 0x13e0, 0xbdd8, 0x61cc, 0x9d48, 0x1, 0x0);
        gbc.writeMem(0xcf0f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3ba9, gbc.sp());
        EXPECT(0xcf11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf0f));
        EXPECT(0xc5, gbc.readMem(0xcf10));
        // CB C5 0173
        gbc.setState(0xceeb, 0x71d1, 0x48a0, 0x6fbe, 0x8451, 0xab61, 0x1, 0x1);
        gbc.writeMem(0xceeb, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x71d1, gbc.sp());
        EXPECT(0xceed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceeb));
        EXPECT(0xc5, gbc.readMem(0xceec));
        // CB C5 0174
        gbc.setState(0x742c, 0xf7bb, 0xb430, 0x4381, 0x28d1, 0x282d, 0x1, 0x0);
        gbc.writeMem(0x742c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf7bb, gbc.sp());
        EXPECT(0x742e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0175
        gbc.setState(0x619f, 0xa46b, 0x1350, 0x8b1d, 0x5669, 0xc1f9, 0x0, 0x0);
        gbc.writeMem(0x619f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa46b, gbc.sp());
        EXPECT(0x61a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0176
        gbc.setState(0x94f1, 0x9132, 0xa4c0, 0xc74f, 0x26cf, 0x995c, 0x1, 0x0);
        gbc.writeMem(0x94f1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9132, gbc.sp());
        EXPECT(0x94f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f1));
        EXPECT(0xc5, gbc.readMem(0x94f2));
        // CB C5 0177
        gbc.setState(0x5268, 0xab2c, 0xa5f0, 0x2baf, 0x2916, 0xde03, 0x0, 0x0);
        gbc.writeMem(0x5268, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xab2c, gbc.sp());
        EXPECT(0x526a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0178
        gbc.setState(0x64b4, 0x998f, 0x1390, 0x34d2, 0xecfd, 0x4011, 0x0, 0x0);
        gbc.writeMem(0x64b4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x998f, gbc.sp());
        EXPECT(0x64b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0179
        gbc.setState(0xd62b, 0x15d0, 0xff20, 0x4b1b, 0xd323, 0xaa61, 0x0, 0x0);
        gbc.writeMem(0xd62b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x15d0, gbc.sp());
        EXPECT(0xd62d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd62b));
        EXPECT(0xc5, gbc.readMem(0xd62c));
        // CB C5 017A
        gbc.setState(0x40d7, 0xd1f6, 0x3a70, 0xfd5a, 0xc85f, 0x73da, 0x1, 0x1);
        gbc.writeMem(0x40d7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd1f6, gbc.sp());
        EXPECT(0x40d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 017B
        gbc.setState(0xa67c, 0x1186, 0xf200, 0x419a, 0xdcb6, 0x72f7, 0x1, 0x1);
        gbc.writeMem(0xa67c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1186, gbc.sp());
        EXPECT(0xa67e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa67c));
        EXPECT(0xc5, gbc.readMem(0xa67d));
        // CB C5 017C
        gbc.setState(0xb978, 0x3aef, 0x35a0, 0xc414, 0x45b5, 0xa153, 0x0, 0x1);
        gbc.writeMem(0xb978, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3aef, gbc.sp());
        EXPECT(0xb97a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb978));
        EXPECT(0xc5, gbc.readMem(0xb979));
        // CB C5 017D
        gbc.setState(0x1d42, 0x44e4, 0x4400, 0x141, 0x4230, 0x52c3, 0x0, 0x0);
        gbc.writeMem(0x1d42, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x44e4, gbc.sp());
        EXPECT(0x1d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 017E
        gbc.setState(0x3be9, 0xb5c5, 0x5410, 0xa2db, 0xd478, 0xf33b, 0x0, 0x1);
        gbc.writeMem(0x3be9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb5c5, gbc.sp());
        EXPECT(0x3beb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 017F
        gbc.setState(0x3910, 0x276b, 0x56a0, 0x3bf3, 0x97d3, 0x14fe, 0x1, 0x1);
        gbc.writeMem(0x3910, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x276b, gbc.sp());
        EXPECT(0x3912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0180
        gbc.setState(0x1455, 0x250c, 0x3ce0, 0x939f, 0xb8c3, 0x56a5, 0x1, 0x1);
        gbc.writeMem(0x1455, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x250c, gbc.sp());
        EXPECT(0x1457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0181
        gbc.setState(0x6d55, 0x8503, 0x9ac0, 0xa42b, 0x9717, 0xa88, 0x0, 0x1);
        gbc.writeMem(0x6d55, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8503, gbc.sp());
        EXPECT(0x6d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0182
        gbc.setState(0x42f, 0xc88e, 0xa770, 0x998b, 0xf1c9, 0xcc9d, 0x0, 0x0);
        gbc.writeMem(0x42f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc88e, gbc.sp());
        EXPECT(0x431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0183
        gbc.setState(0x9bfc, 0x62fc, 0x8e70, 0xdc42, 0xc1b9, 0xb410, 0x0, 0x1);
        gbc.writeMem(0x9bfc, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x62fc, gbc.sp());
        EXPECT(0x9bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bfc));
        EXPECT(0xc5, gbc.readMem(0x9bfd));
        // CB C5 0184
        gbc.setState(0x77ba, 0xcaa3, 0xcd70, 0x38db, 0x67bf, 0x3bc1, 0x1, 0x1);
        gbc.writeMem(0x77ba, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcaa3, gbc.sp());
        EXPECT(0x77bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0185
        gbc.setState(0x8ea5, 0x7c9, 0xa1e0, 0x26d4, 0x198c, 0xea30, 0x0, 0x1);
        gbc.writeMem(0x8ea5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7c9, gbc.sp());
        EXPECT(0x8ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea5));
        EXPECT(0xc5, gbc.readMem(0x8ea6));
        // CB C5 0186
        gbc.setState(0xe8b2, 0x828b, 0x4c70, 0x23e7, 0x7752, 0x5080, 0x1, 0x0);
        gbc.writeMem(0xe8b2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x828b, gbc.sp());
        EXPECT(0xe8b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b2));
        EXPECT(0xc5, gbc.readMem(0xe8b3));
        // CB C5 0187
        gbc.setState(0xa60b, 0xf45d, 0xd970, 0x90d6, 0xf7f5, 0xd831, 0x1, 0x1);
        gbc.writeMem(0xa60b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf45d, gbc.sp());
        EXPECT(0xa60d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa60b));
        EXPECT(0xc5, gbc.readMem(0xa60c));
        // CB C5 0188
        gbc.setState(0xbf24, 0xc748, 0xfe0, 0xb05f, 0x77bb, 0xb71, 0x0, 0x1);
        gbc.writeMem(0xbf24, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc748, gbc.sp());
        EXPECT(0xbf26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf24));
        EXPECT(0xc5, gbc.readMem(0xbf25));
        // CB C5 0189
        gbc.setState(0x2451, 0x2f39, 0xab80, 0xac26, 0x52f8, 0x8f07, 0x0, 0x1);
        gbc.writeMem(0x2451, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2f39, gbc.sp());
        EXPECT(0x2453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 018A
        gbc.setState(0xe72b, 0xb2b2, 0xf560, 0x1476, 0x95d3, 0xa624, 0x1, 0x1);
        gbc.writeMem(0xe72b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb2b2, gbc.sp());
        EXPECT(0xe72d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe72b));
        EXPECT(0xc5, gbc.readMem(0xe72c));
        // CB C5 018B
        gbc.setState(0x45ac, 0x90f7, 0x1940, 0x9041, 0xf37c, 0x6cdd, 0x1, 0x0);
        gbc.writeMem(0x45ac, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x90f7, gbc.sp());
        EXPECT(0x45ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 018C
        gbc.setState(0x3efe, 0x87d4, 0x52c0, 0xd9cb, 0x215c, 0x60e1, 0x0, 0x1);
        gbc.writeMem(0x3efe, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x87d4, gbc.sp());
        EXPECT(0x3f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 018E
        gbc.setState(0xc928, 0xef87, 0x13a0, 0xa846, 0xd7fa, 0x2296, 0x0, 0x1);
        gbc.writeMem(0xc928, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xef87, gbc.sp());
        EXPECT(0xc92a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc928));
        EXPECT(0xc5, gbc.readMem(0xc929));
        // CB C5 018F
        gbc.setState(0xa19b, 0xbbe, 0xb900, 0xb03e, 0x7c8d, 0xdbb9, 0x1, 0x0);
        gbc.writeMem(0xa19b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbbe, gbc.sp());
        EXPECT(0xa19d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa19b));
        EXPECT(0xc5, gbc.readMem(0xa19c));
        // CB C5 0190
        gbc.setState(0x8740, 0x8a18, 0xa7e0, 0xf6ba, 0xf2e5, 0xa840, 0x1, 0x1);
        gbc.writeMem(0x8740, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8a18, gbc.sp());
        EXPECT(0x8742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8740));
        EXPECT(0xc5, gbc.readMem(0x8741));
        // CB C5 0191
        gbc.setState(0xbbc5, 0xb898, 0x5080, 0x951c, 0xa83f, 0x20aa, 0x1, 0x1);
        gbc.writeMem(0xbbc5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb898, gbc.sp());
        EXPECT(0xbbc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc5));
        EXPECT(0xc5, gbc.readMem(0xbbc6));
        // CB C5 0192
        gbc.setState(0x668f, 0xce7d, 0x1d60, 0x8ba4, 0xf4d6, 0x6e02, 0x0, 0x0);
        gbc.writeMem(0x668f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xce7d, gbc.sp());
        EXPECT(0x6691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0193
        gbc.setState(0x7f43, 0x33de, 0x17a0, 0x14c6, 0xee4a, 0x43aa, 0x1, 0x1);
        gbc.writeMem(0x7f43, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x33de, gbc.sp());
        EXPECT(0x7f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0194
        gbc.setState(0xe377, 0xb73d, 0xb470, 0x55ff, 0x4a2f, 0xe41f, 0x1, 0x0);
        gbc.writeMem(0xe377, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb73d, gbc.sp());
        EXPECT(0xe379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe377));
        EXPECT(0xc5, gbc.readMem(0xe378));
        // CB C5 0195
        gbc.setState(0x69fb, 0x6f4f, 0x1c30, 0x83ac, 0xaf8b, 0xae11, 0x0, 0x0);
        gbc.writeMem(0x69fb, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6f4f, gbc.sp());
        EXPECT(0x69fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0196
        gbc.setState(0x3e20, 0xe768, 0x57a0, 0x59f3, 0x5089, 0xcae3, 0x1, 0x1);
        gbc.writeMem(0x3e20, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe768, gbc.sp());
        EXPECT(0x3e22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0197
        gbc.setState(0x19c2, 0xa84, 0x4440, 0x23be, 0x5951, 0x5df7, 0x1, 0x0);
        gbc.writeMem(0x19c2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa84, gbc.sp());
        EXPECT(0x19c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0198
        gbc.setState(0x21c4, 0xc2b1, 0xcc00, 0x3eca, 0x3b2a, 0xa50e, 0x1, 0x1);
        gbc.writeMem(0x21c4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc2b1, gbc.sp());
        EXPECT(0x21c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0199
        gbc.setState(0x6f3d, 0x116, 0xb050, 0xf32, 0xcc18, 0x7b6d, 0x1, 0x1);
        gbc.writeMem(0x6f3d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x116, gbc.sp());
        EXPECT(0x6f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 019A
        gbc.setState(0x99b8, 0x7bcd, 0x5390, 0xa570, 0xa907, 0x2a24, 0x0, 0x0);
        gbc.writeMem(0x99b8, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7bcd, gbc.sp());
        EXPECT(0x99ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b8));
        EXPECT(0xc5, gbc.readMem(0x99b9));
        // CB C5 019B
        gbc.setState(0x148e, 0x18ba, 0xf960, 0x3ef9, 0x31b2, 0x86a, 0x0, 0x1);
        gbc.writeMem(0x148e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x18ba, gbc.sp());
        EXPECT(0x1490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 019C
        gbc.setState(0x3947, 0xd3ea, 0x2db0, 0x10bf, 0xbcf4, 0xe373, 0x1, 0x1);
        gbc.writeMem(0x3947, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd3ea, gbc.sp());
        EXPECT(0x3949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 019D
        gbc.setState(0x9a31, 0x8660, 0xd1a0, 0xe96, 0x532a, 0x7ab5, 0x1, 0x1);
        gbc.writeMem(0x9a31, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8660, gbc.sp());
        EXPECT(0x9a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a31));
        EXPECT(0xc5, gbc.readMem(0x9a32));
        // CB C5 019E
        gbc.setState(0xcdbd, 0x25ad, 0xe1b0, 0x512, 0xf41d, 0x91f0, 0x0, 0x0);
        gbc.writeMem(0xcdbd, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x25ad, gbc.sp());
        EXPECT(0xcdbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdbd));
        EXPECT(0xc5, gbc.readMem(0xcdbe));
        // CB C5 019F
        gbc.setState(0x1c9c, 0x8aae, 0xc720, 0xa52, 0xaa89, 0x12b4, 0x0, 0x1);
        gbc.writeMem(0x1c9c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8aae, gbc.sp());
        EXPECT(0x1c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01A0
        gbc.setState(0xd38c, 0x35bc, 0xeb30, 0x23b4, 0x72a5, 0x8c1f, 0x1, 0x1);
        gbc.writeMem(0xd38c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x35bc, gbc.sp());
        EXPECT(0xd38e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd38c));
        EXPECT(0xc5, gbc.readMem(0xd38d));
        // CB C5 01A1
        gbc.setState(0xbc8e, 0xb407, 0x6ba0, 0x4d03, 0x8111, 0x34e3, 0x0, 0x0);
        gbc.writeMem(0xbc8e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb407, gbc.sp());
        EXPECT(0xbc90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8e));
        EXPECT(0xc5, gbc.readMem(0xbc8f));
        // CB C5 01A2
        gbc.setState(0x84e5, 0x7b76, 0x9bb0, 0x8ba0, 0x6ba1, 0x81f9, 0x1, 0x1);
        gbc.writeMem(0x84e5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7b76, gbc.sp());
        EXPECT(0x84e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e5));
        EXPECT(0xc5, gbc.readMem(0x84e6));
        // CB C5 01A3
        gbc.setState(0x11c2, 0x4c31, 0x2f30, 0xbd3d, 0x90fa, 0xe114, 0x1, 0x0);
        gbc.writeMem(0x11c2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4c31, gbc.sp());
        EXPECT(0x11c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01A4
        gbc.setState(0x22cc, 0x9610, 0xb5a0, 0x788a, 0x6923, 0xedb0, 0x0, 0x0);
        gbc.writeMem(0x22cc, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9610, gbc.sp());
        EXPECT(0x22ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01A6
        gbc.setState(0x7bbb, 0xcce5, 0xaa0, 0x7cf9, 0xdd9e, 0xca32, 0x0, 0x1);
        gbc.writeMem(0x7bbb, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcce5, gbc.sp());
        EXPECT(0x7bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01A7
        gbc.setState(0x9cf7, 0x48cf, 0x8de0, 0x44f0, 0xc00e, 0xd3a9, 0x1, 0x0);
        gbc.writeMem(0x9cf7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x48cf, gbc.sp());
        EXPECT(0x9cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf7));
        EXPECT(0xc5, gbc.readMem(0x9cf8));
        // CB C5 01A8
        gbc.setState(0xcd48, 0xf7ad, 0xa5e0, 0xa2e4, 0x617d, 0x3b63, 0x1, 0x0);
        gbc.writeMem(0xcd48, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf7ad, gbc.sp());
        EXPECT(0xcd4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd48));
        EXPECT(0xc5, gbc.readMem(0xcd49));
        // CB C5 01A9
        gbc.setState(0x8c5, 0xd787, 0x65d0, 0xa287, 0xc1bb, 0x7af, 0x0, 0x1);
        gbc.writeMem(0x8c5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd787, gbc.sp());
        EXPECT(0x8c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01AA
        gbc.setState(0x48ea, 0x38d9, 0xeb80, 0xe82f, 0xc0d7, 0xc24f, 0x0, 0x1);
        gbc.writeMem(0x48ea, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x38d9, gbc.sp());
        EXPECT(0x48ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01AB
        gbc.setState(0xe28e, 0xe31d, 0x3800, 0x750a, 0x8a28, 0xa0ed, 0x0, 0x1);
        gbc.writeMem(0xe28e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe31d, gbc.sp());
        EXPECT(0xe290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe28e));
        EXPECT(0xc5, gbc.readMem(0xe28f));
        // CB C5 01AC
        gbc.setState(0x5a28, 0xa60a, 0xa190, 0x7515, 0xb665, 0xf86b, 0x1, 0x1);
        gbc.writeMem(0x5a28, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa60a, gbc.sp());
        EXPECT(0x5a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01AD
        gbc.setState(0xbaf5, 0x762c, 0x1e0, 0xaf68, 0x3108, 0x95a8, 0x1, 0x0);
        gbc.writeMem(0xbaf5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x762c, gbc.sp());
        EXPECT(0xbaf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaf5));
        EXPECT(0xc5, gbc.readMem(0xbaf6));
        // CB C5 01AE
        gbc.setState(0x2d0a, 0x9bb4, 0xbde0, 0xaa1a, 0x311b, 0x62b5, 0x1, 0x1);
        gbc.writeMem(0x2d0a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9bb4, gbc.sp());
        EXPECT(0x2d0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01AF
        gbc.setState(0xc4fb, 0x2677, 0x77e0, 0x2b6d, 0xac55, 0xef6, 0x1, 0x1);
        gbc.writeMem(0xc4fb, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2677, gbc.sp());
        EXPECT(0xc4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4fb));
        EXPECT(0xc5, gbc.readMem(0xc4fc));
        // CB C5 01B0
        gbc.setState(0xb9a1, 0xe999, 0x5cc0, 0xaed7, 0x8cdb, 0x2a8, 0x0, 0x0);
        gbc.writeMem(0xb9a1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe999, gbc.sp());
        EXPECT(0xb9a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a1));
        EXPECT(0xc5, gbc.readMem(0xb9a2));
        // CB C5 01B1
        gbc.setState(0xde05, 0xcea1, 0x1cd0, 0x1854, 0x9bba, 0xa140, 0x1, 0x1);
        gbc.writeMem(0xde05, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcea1, gbc.sp());
        EXPECT(0xde07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde05));
        EXPECT(0xc5, gbc.readMem(0xde06));
        // CB C5 01B2
        gbc.setState(0xe14f, 0xf193, 0xa000, 0xe1a9, 0x715b, 0xa1e0, 0x0, 0x1);
        gbc.writeMem(0xe14f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf193, gbc.sp());
        EXPECT(0xe151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14f));
        EXPECT(0xc5, gbc.readMem(0xe150));
        // CB C5 01B3
        gbc.setState(0xece4, 0xc2dd, 0x61d0, 0xcb67, 0xcfca, 0x49a4, 0x1, 0x1);
        gbc.writeMem(0xece4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc2dd, gbc.sp());
        EXPECT(0xece6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece4));
        EXPECT(0xc5, gbc.readMem(0xece5));
        // CB C5 01B4
        gbc.setState(0xb3f9, 0xc46e, 0xb270, 0xbe3c, 0xf2d2, 0xa69f, 0x0, 0x0);
        gbc.writeMem(0xb3f9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc46e, gbc.sp());
        EXPECT(0xb3fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f9));
        EXPECT(0xc5, gbc.readMem(0xb3fa));
        // CB C5 01B5
        gbc.setState(0x6e8f, 0xafbc, 0x37a0, 0x5546, 0x5355, 0x2d80, 0x1, 0x0);
        gbc.writeMem(0x6e8f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xafbc, gbc.sp());
        EXPECT(0x6e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01B6
        gbc.setState(0x65a6, 0x3a81, 0x2c20, 0x7a60, 0x63b2, 0xbcaa, 0x1, 0x0);
        gbc.writeMem(0x65a6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3a81, gbc.sp());
        EXPECT(0x65a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01B8
        gbc.setState(0xb5e5, 0x8d9, 0xad50, 0x5da1, 0x10ae, 0x3854, 0x1, 0x1);
        gbc.writeMem(0xb5e5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8d9, gbc.sp());
        EXPECT(0xb5e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e5));
        EXPECT(0xc5, gbc.readMem(0xb5e6));
        // CB C5 01B9
        gbc.setState(0x64f8, 0xb698, 0xf1e0, 0x8215, 0x66, 0xae56, 0x0, 0x0);
        gbc.writeMem(0x64f8, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb698, gbc.sp());
        EXPECT(0x64fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01BA
        gbc.setState(0xee1f, 0x7568, 0x70d0, 0xa01f, 0xcad4, 0xe5f2, 0x0, 0x1);
        gbc.writeMem(0xee1f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7568, gbc.sp());
        EXPECT(0xee21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee1f));
        EXPECT(0xc5, gbc.readMem(0xee20));
        // CB C5 01BB
        gbc.setState(0x3f83, 0xcd6f, 0x7f40, 0x51e1, 0xf413, 0xa25c, 0x1, 0x1);
        gbc.writeMem(0x3f83, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcd6f, gbc.sp());
        EXPECT(0x3f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01BC
        gbc.setState(0xae30, 0xedd4, 0x1270, 0x68f9, 0x99ce, 0xaa08, 0x0, 0x0);
        gbc.writeMem(0xae30, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xedd4, gbc.sp());
        EXPECT(0xae32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae30));
        EXPECT(0xc5, gbc.readMem(0xae31));
        // CB C5 01BD
        gbc.setState(0xd689, 0x377b, 0x2d0, 0xad5e, 0xdfb2, 0x29c3, 0x1, 0x0);
        gbc.writeMem(0xd689, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x377b, gbc.sp());
        EXPECT(0xd68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd689));
        EXPECT(0xc5, gbc.readMem(0xd68a));
        // CB C5 01BE
        gbc.setState(0x4503, 0x7d5d, 0xf790, 0x6d64, 0x19d9, 0x6ee5, 0x0, 0x1);
        gbc.writeMem(0x4503, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7d5d, gbc.sp());
        EXPECT(0x4505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01BF
        gbc.setState(0x2e73, 0x61cd, 0xeb10, 0x5bd7, 0x129d, 0x72a2, 0x1, 0x0);
        gbc.writeMem(0x2e73, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x61cd, gbc.sp());
        EXPECT(0x2e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01C0
        gbc.setState(0x886c, 0x25aa, 0x7090, 0x4f26, 0xa143, 0xbdb2, 0x0, 0x0);
        gbc.writeMem(0x886c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x25aa, gbc.sp());
        EXPECT(0x886e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x886c));
        EXPECT(0xc5, gbc.readMem(0x886d));
        // CB C5 01C1
        gbc.setState(0x841b, 0x2770, 0x9120, 0xae21, 0xb86d, 0x3ad1, 0x1, 0x1);
        gbc.writeMem(0x841b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2770, gbc.sp());
        EXPECT(0x841d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x841b));
        EXPECT(0xc5, gbc.readMem(0x841c));
        // CB C5 01C2
        gbc.setState(0xbd5a, 0xd363, 0x5ba0, 0x2a6a, 0x6ddf, 0xc63a, 0x1, 0x1);
        gbc.writeMem(0xbd5a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd363, gbc.sp());
        EXPECT(0xbd5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5a));
        EXPECT(0xc5, gbc.readMem(0xbd5b));
        // CB C5 01C3
        gbc.setState(0x8171, 0xf628, 0x4f10, 0x4c3e, 0x393d, 0xdb07, 0x0, 0x1);
        gbc.writeMem(0x8171, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf628, gbc.sp());
        EXPECT(0x8173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8171));
        EXPECT(0xc5, gbc.readMem(0x8172));
        // CB C5 01C4
        gbc.setState(0x3306, 0xdb03, 0x1bf0, 0xa5d1, 0xfc3f, 0x56c7, 0x1, 0x1);
        gbc.writeMem(0x3306, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdb03, gbc.sp());
        EXPECT(0x3308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01C5
        gbc.setState(0x940b, 0xae73, 0x7cd0, 0xf43a, 0xcb15, 0x17bf, 0x0, 0x0);
        gbc.writeMem(0x940b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xae73, gbc.sp());
        EXPECT(0x940d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940b));
        EXPECT(0xc5, gbc.readMem(0x940c));
        // CB C5 01C6
        gbc.setState(0x9682, 0xc025, 0xd1b0, 0x7a61, 0xad9d, 0x9df2, 0x1, 0x1);
        gbc.writeMem(0x9682, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc025, gbc.sp());
        EXPECT(0x9684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9682));
        EXPECT(0xc5, gbc.readMem(0x9683));
        // CB C5 01C7
        gbc.setState(0x3592, 0xfd85, 0x4320, 0xa54d, 0x6d5b, 0x44f7, 0x1, 0x0);
        gbc.writeMem(0x3592, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfd85, gbc.sp());
        EXPECT(0x3594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01C8
        gbc.setState(0xe8e5, 0x8845, 0x6ac0, 0x69dc, 0xd6e3, 0xd838, 0x0, 0x0);
        gbc.writeMem(0xe8e5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8845, gbc.sp());
        EXPECT(0xe8e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e5));
        EXPECT(0xc5, gbc.readMem(0xe8e6));
        // CB C5 01C9
        gbc.setState(0x3477, 0xcb64, 0x55c0, 0xf3f8, 0x624b, 0x5c16, 0x1, 0x1);
        gbc.writeMem(0x3477, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xcb64, gbc.sp());
        EXPECT(0x3479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01CA
        gbc.setState(0xb5ff, 0xc99d, 0x1910, 0xe11c, 0x5e72, 0x63db, 0x1, 0x1);
        gbc.writeMem(0xb5ff, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc99d, gbc.sp());
        EXPECT(0xb601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ff));
        EXPECT(0xc5, gbc.readMem(0xb600));
        // CB C5 01CB
        gbc.setState(0xa437, 0x9520, 0x1300, 0x8e12, 0x513, 0x5cd1, 0x0, 0x1);
        gbc.writeMem(0xa437, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9520, gbc.sp());
        EXPECT(0xa439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa437));
        EXPECT(0xc5, gbc.readMem(0xa438));
        // CB C5 01CC
        gbc.setState(0x717b, 0x8e90, 0x8dd0, 0xc436, 0xcfcb, 0xa4b7, 0x0, 0x1);
        gbc.writeMem(0x717b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8e90, gbc.sp());
        EXPECT(0x717d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01CD
        gbc.setState(0xd1a5, 0x8dba, 0x95c0, 0x7e60, 0xc9b0, 0x2f5e, 0x0, 0x1);
        gbc.writeMem(0xd1a5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8dba, gbc.sp());
        EXPECT(0xd1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a5));
        EXPECT(0xc5, gbc.readMem(0xd1a6));
        // CB C5 01CE
        gbc.setState(0x4120, 0x5d83, 0x4b10, 0xce3e, 0x4837, 0xe54b, 0x0, 0x1);
        gbc.writeMem(0x4120, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5d83, gbc.sp());
        EXPECT(0x4122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01CF
        gbc.setState(0xa747, 0x71c8, 0x4920, 0xb39, 0x385a, 0xc36c, 0x1, 0x0);
        gbc.writeMem(0xa747, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x71c8, gbc.sp());
        EXPECT(0xa749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa747));
        EXPECT(0xc5, gbc.readMem(0xa748));
        // CB C5 01D0
        gbc.setState(0x809c, 0xab42, 0xc770, 0x4089, 0x1554, 0x565f, 0x1, 0x1);
        gbc.writeMem(0x809c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xab42, gbc.sp());
        EXPECT(0x809e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809c));
        EXPECT(0xc5, gbc.readMem(0x809d));
        // CB C5 01D1
        gbc.setState(0x9fad, 0x2fdc, 0x9380, 0xd730, 0x4576, 0xe318, 0x1, 0x0);
        gbc.writeMem(0x9fad, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2fdc, gbc.sp());
        EXPECT(0x9faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fad));
        EXPECT(0xc5, gbc.readMem(0x9fae));
        // CB C5 01D2
        gbc.setState(0x9b0d, 0xf49e, 0x79b0, 0x3543, 0x83e1, 0x62a2, 0x0, 0x1);
        gbc.writeMem(0x9b0d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf49e, gbc.sp());
        EXPECT(0x9b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0d));
        EXPECT(0xc5, gbc.readMem(0x9b0e));
        // CB C5 01D3
        gbc.setState(0x59dc, 0xf68a, 0xaa80, 0x768f, 0xd577, 0xe025, 0x1, 0x0);
        gbc.writeMem(0x59dc, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf68a, gbc.sp());
        EXPECT(0x59de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01D4
        gbc.setState(0x17d7, 0xc54, 0xe330, 0xbbdd, 0x74a2, 0xf20d, 0x0, 0x0);
        gbc.writeMem(0x17d7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc54, gbc.sp());
        EXPECT(0x17d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01D5
        gbc.setState(0xc41d, 0x10c3, 0x1440, 0xbcb8, 0x8b52, 0x2ea8, 0x1, 0x0);
        gbc.writeMem(0xc41d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x10c3, gbc.sp());
        EXPECT(0xc41f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc41d));
        EXPECT(0xc5, gbc.readMem(0xc41e));
        // CB C5 01D6
        gbc.setState(0x598f, 0x16b9, 0xa690, 0x50b5, 0x9a9, 0x6697, 0x0, 0x1);
        gbc.writeMem(0x598f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x16b9, gbc.sp());
        EXPECT(0x5991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01D7
        gbc.setState(0x832b, 0x8dba, 0x69d0, 0x166e, 0x1565, 0xc494, 0x1, 0x1);
        gbc.writeMem(0x832b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8dba, gbc.sp());
        EXPECT(0x832d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x832b));
        EXPECT(0xc5, gbc.readMem(0x832c));
        // CB C5 01D8
        gbc.setState(0x252c, 0x1916, 0xad20, 0xc6ce, 0xff77, 0xbdec, 0x1, 0x1);
        gbc.writeMem(0x252c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1916, gbc.sp());
        EXPECT(0x252e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01D9
        gbc.setState(0xd348, 0x13dc, 0x9670, 0xeee5, 0xe044, 0xcc05, 0x0, 0x1);
        gbc.writeMem(0xd348, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x13dc, gbc.sp());
        EXPECT(0xd34a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd348));
        EXPECT(0xc5, gbc.readMem(0xd349));
        // CB C5 01DA
        gbc.setState(0xbd70, 0x4ed4, 0x5ff0, 0xa632, 0x7646, 0x2c64, 0x1, 0x1);
        gbc.writeMem(0xbd70, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4ed4, gbc.sp());
        EXPECT(0xbd72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd70));
        EXPECT(0xc5, gbc.readMem(0xbd71));
        // CB C5 01DC
        gbc.setState(0xb3b4, 0x419e, 0xf9f0, 0x3f3e, 0x1e70, 0x1ed1, 0x0, 0x0);
        gbc.writeMem(0xb3b4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x419e, gbc.sp());
        EXPECT(0xb3b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b4));
        EXPECT(0xc5, gbc.readMem(0xb3b5));
        // CB C5 01DD
        gbc.setState(0xc34d, 0x3937, 0x5960, 0x8fc9, 0x10eb, 0x6e67, 0x0, 0x1);
        gbc.writeMem(0xc34d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3937, gbc.sp());
        EXPECT(0xc34f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc34d));
        EXPECT(0xc5, gbc.readMem(0xc34e));
        // CB C5 01DE
        gbc.setState(0x2175, 0x5e, 0x1d10, 0xe1fa, 0x17aa, 0x6e92, 0x0, 0x1);
        gbc.writeMem(0x2175, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5e, gbc.sp());
        EXPECT(0x2177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01DF
        gbc.setState(0x2130, 0xa3e5, 0x34a0, 0xee8a, 0x3e3, 0xac9a, 0x1, 0x1);
        gbc.writeMem(0x2130, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa3e5, gbc.sp());
        EXPECT(0x2132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01E0
        gbc.setState(0xd4e2, 0x6969, 0xf5c0, 0x465a, 0xd6d8, 0xba46, 0x0, 0x1);
        gbc.writeMem(0xd4e2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6969, gbc.sp());
        EXPECT(0xd4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e2));
        EXPECT(0xc5, gbc.readMem(0xd4e3));
        // CB C5 01E1
        gbc.setState(0x334f, 0x31c6, 0xe5c0, 0x578a, 0xa82d, 0x4542, 0x1, 0x0);
        gbc.writeMem(0x334f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x31c6, gbc.sp());
        EXPECT(0x3351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01E2
        gbc.setState(0x9cea, 0x9266, 0x1b10, 0x4e39, 0x88e8, 0x590, 0x1, 0x0);
        gbc.writeMem(0x9cea, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9266, gbc.sp());
        EXPECT(0x9cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cea));
        EXPECT(0xc5, gbc.readMem(0x9ceb));
        // CB C5 01E4
        gbc.setState(0x7ebf, 0xed6b, 0x4090, 0x144e, 0xb87f, 0x6b3c, 0x1, 0x1);
        gbc.writeMem(0x7ebf, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xed6b, gbc.sp());
        EXPECT(0x7ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01E5
        gbc.setState(0x3e9a, 0x83fc, 0x5810, 0x5b35, 0xe2a9, 0x995e, 0x1, 0x1);
        gbc.writeMem(0x3e9a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x83fc, gbc.sp());
        EXPECT(0x3e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01E6
        gbc.setState(0x40b, 0xc4c0, 0xf90, 0x55b2, 0xc03, 0x6d85, 0x0, 0x0);
        gbc.writeMem(0x40b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc4c0, gbc.sp());
        EXPECT(0x40d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01E7
        gbc.setState(0xa44a, 0x31cf, 0x18b0, 0x5000, 0xea51, 0xc3d8, 0x1, 0x0);
        gbc.writeMem(0xa44a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x31cf, gbc.sp());
        EXPECT(0xa44c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44a));
        EXPECT(0xc5, gbc.readMem(0xa44b));
        // CB C5 01E8
        gbc.setState(0x7349, 0xd8e9, 0x68d0, 0x1962, 0xe739, 0x444f, 0x1, 0x1);
        gbc.writeMem(0x7349, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd8e9, gbc.sp());
        EXPECT(0x734b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01E9
        gbc.setState(0x831a, 0x7498, 0xa560, 0x5806, 0xa8da, 0xf7d2, 0x0, 0x1);
        gbc.writeMem(0x831a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7498, gbc.sp());
        EXPECT(0x831c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x831a));
        EXPECT(0xc5, gbc.readMem(0x831b));
        // CB C5 01EA
        gbc.setState(0x7739, 0xdd42, 0xfcd0, 0x71a0, 0x51f6, 0x6d75, 0x0, 0x1);
        gbc.writeMem(0x7739, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xdd42, gbc.sp());
        EXPECT(0x773b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01EB
        gbc.setState(0xb6c6, 0x9b13, 0xd3d0, 0x59a7, 0x2f38, 0x3c31, 0x1, 0x0);
        gbc.writeMem(0xb6c6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9b13, gbc.sp());
        EXPECT(0xb6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c6));
        EXPECT(0xc5, gbc.readMem(0xb6c7));
        // CB C5 01EC
        gbc.setState(0x6b48, 0x316d, 0x13a0, 0xf0fc, 0x54d1, 0x86dc, 0x1, 0x1);
        gbc.writeMem(0x6b48, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x316d, gbc.sp());
        EXPECT(0x6b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01ED
        gbc.setState(0x55f9, 0xdff9, 0x3990, 0xcead, 0x9914, 0x9b07, 0x1, 0x1);
        gbc.writeMem(0x55f9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdff9, gbc.sp());
        EXPECT(0x55fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01EE
        gbc.setState(0xc6c1, 0xb240, 0xfa50, 0xce86, 0x43a4, 0x286c, 0x1, 0x0);
        gbc.writeMem(0xc6c1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb240, gbc.sp());
        EXPECT(0xc6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c1));
        EXPECT(0xc5, gbc.readMem(0xc6c2));
        // CB C5 01EF
        gbc.setState(0xbd4, 0x8ec0, 0xa1a0, 0x961, 0xc32a, 0xeed1, 0x1, 0x1);
        gbc.writeMem(0xbd4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8ec0, gbc.sp());
        EXPECT(0xbd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01F0
        gbc.setState(0xa611, 0x5d66, 0xd040, 0x9a54, 0x3d9d, 0x57bf, 0x0, 0x0);
        gbc.writeMem(0xa611, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5d66, gbc.sp());
        EXPECT(0xa613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa611));
        EXPECT(0xc5, gbc.readMem(0xa612));
        // CB C5 01F1
        gbc.setState(0x7ddc, 0x7f62, 0xcc20, 0xf01b, 0xef6c, 0xa7fc, 0x1, 0x1);
        gbc.writeMem(0x7ddc, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7f62, gbc.sp());
        EXPECT(0x7dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01F2
        gbc.setState(0xb2ee, 0x39ef, 0x9280, 0xc2f0, 0xcacd, 0x7b1, 0x0, 0x0);
        gbc.writeMem(0xb2ee, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x39ef, gbc.sp());
        EXPECT(0xb2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ee));
        EXPECT(0xc5, gbc.readMem(0xb2ef));
        // CB C5 01F3
        gbc.setState(0xb2, 0xe4be, 0xd1b0, 0x7d83, 0x47be, 0x8703, 0x0, 0x0);
        gbc.writeMem(0xb2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe4be, gbc.sp());
        EXPECT(0xb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01F4
        gbc.setState(0xde18, 0x6138, 0x9890, 0x2e1, 0xf6a, 0xd565, 0x0, 0x1);
        gbc.writeMem(0xde18, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6138, gbc.sp());
        EXPECT(0xde1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde18));
        EXPECT(0xc5, gbc.readMem(0xde19));
        // CB C5 01F5
        gbc.setState(0x266c, 0x1b, 0xb140, 0xf180, 0xd0a7, 0x1045, 0x0, 0x1);
        gbc.writeMem(0x266c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1b, gbc.sp());
        EXPECT(0x266e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01F6
        gbc.setState(0xea04, 0x8ccb, 0x1ce0, 0x6732, 0xbd42, 0xc9ae, 0x1, 0x0);
        gbc.writeMem(0xea04, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8ccb, gbc.sp());
        EXPECT(0xea06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea04));
        EXPECT(0xc5, gbc.readMem(0xea05));
        // CB C5 01F7
        gbc.setState(0x6b27, 0x61d4, 0x5350, 0x234c, 0x3b75, 0xbebc, 0x0, 0x0);
        gbc.writeMem(0x6b27, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x61d4, gbc.sp());
        EXPECT(0x6b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01F8
        gbc.setState(0x3b08, 0x6141, 0xd020, 0xc22c, 0xe892, 0x64a0, 0x1, 0x1);
        gbc.writeMem(0x3b08, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6141, gbc.sp());
        EXPECT(0x3b0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01F9
        gbc.setState(0x1783, 0x9ea1, 0x2300, 0xc855, 0xe034, 0xa242, 0x1, 0x1);
        gbc.writeMem(0x1783, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9ea1, gbc.sp());
        EXPECT(0x1785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01FA
        gbc.setState(0x2057, 0xab6a, 0x8cc0, 0x3cb5, 0x16c8, 0x69f8, 0x1, 0x0);
        gbc.writeMem(0x2057, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xab6a, gbc.sp());
        EXPECT(0x2059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01FB
        gbc.setState(0x55b3, 0x9e66, 0x6670, 0x55d6, 0x748a, 0x7fc, 0x1, 0x1);
        gbc.writeMem(0x55b3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9e66, gbc.sp());
        EXPECT(0x55b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01FC
        gbc.setState(0x74, 0xbfe, 0xdfe0, 0x2e7b, 0x66fd, 0xfe79, 0x0, 0x1);
        gbc.writeMem(0x74, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbfe, gbc.sp());
        EXPECT(0x76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 01FD
        gbc.setState(0xaaec, 0x9665, 0x5220, 0x515b, 0x645f, 0x2fa, 0x0, 0x1);
        gbc.writeMem(0xaaec, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9665, gbc.sp());
        EXPECT(0xaaee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaec));
        EXPECT(0xc5, gbc.readMem(0xaaed));
        // CB C5 01FE
        gbc.setState(0x10e1, 0xa60e, 0xe390, 0x4472, 0xd197, 0x6169, 0x1, 0x0);
        gbc.writeMem(0x10e1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa60e, gbc.sp());
        EXPECT(0x10e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 01FF
        gbc.setState(0xdd70, 0xc6e9, 0xfc50, 0xe45c, 0xa998, 0xc3b6, 0x0, 0x1);
        gbc.writeMem(0xdd70, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc6e9, gbc.sp());
        EXPECT(0xdd72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd70));
        EXPECT(0xc5, gbc.readMem(0xdd71));
        // CB C5 0200
        gbc.setState(0xe87a, 0x6a6a, 0x5630, 0x9d2a, 0xa37c, 0xd3ea, 0x0, 0x0);
        gbc.writeMem(0xe87a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6a6a, gbc.sp());
        EXPECT(0xe87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe87a));
        EXPECT(0xc5, gbc.readMem(0xe87b));
        // CB C5 0201
        gbc.setState(0x1779, 0xad75, 0x4c80, 0x46aa, 0xde66, 0x684d, 0x0, 0x0);
        gbc.writeMem(0x1779, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xad75, gbc.sp());
        EXPECT(0x177b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0202
        gbc.setState(0x1e31, 0xd13e, 0x7610, 0x3354, 0xbf02, 0x1ff9, 0x0, 0x1);
        gbc.writeMem(0x1e31, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd13e, gbc.sp());
        EXPECT(0x1e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0203
        gbc.setState(0x79cd, 0x1ea9, 0x7a10, 0x3a46, 0x1232, 0x64de, 0x0, 0x0);
        gbc.writeMem(0x79cd, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1ea9, gbc.sp());
        EXPECT(0x79cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0204
        gbc.setState(0x6f03, 0x551d, 0x30, 0xd822, 0x6842, 0x445e, 0x1, 0x1);
        gbc.writeMem(0x6f03, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x551d, gbc.sp());
        EXPECT(0x6f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0205
        gbc.setState(0x99c0, 0xa09b, 0x7e0, 0xc678, 0xc812, 0x266f, 0x0, 0x0);
        gbc.writeMem(0x99c0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa09b, gbc.sp());
        EXPECT(0x99c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99c0));
        EXPECT(0xc5, gbc.readMem(0x99c1));
        // CB C5 0206
        gbc.setState(0x7816, 0x5c9a, 0x1230, 0x22b3, 0x7981, 0xdc82, 0x0, 0x1);
        gbc.writeMem(0x7816, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5c9a, gbc.sp());
        EXPECT(0x7818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0207
        gbc.setState(0x2f6b, 0x6317, 0x1ca0, 0x9a10, 0x1e46, 0x7f2b, 0x1, 0x0);
        gbc.writeMem(0x2f6b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6317, gbc.sp());
        EXPECT(0x2f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0208
        gbc.setState(0x9c2a, 0x40a0, 0x9820, 0x9487, 0x3ad2, 0x9650, 0x0, 0x1);
        gbc.writeMem(0x9c2a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x40a0, gbc.sp());
        EXPECT(0x9c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2a));
        EXPECT(0xc5, gbc.readMem(0x9c2b));
        // CB C5 0209
        gbc.setState(0x6953, 0xdbc9, 0x8c40, 0x2729, 0x9365, 0x4ce4, 0x0, 0x1);
        gbc.writeMem(0x6953, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdbc9, gbc.sp());
        EXPECT(0x6955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 020A
        gbc.setState(0xda8e, 0x40a2, 0x4f0, 0xef88, 0x4740, 0x1b13, 0x1, 0x0);
        gbc.writeMem(0xda8e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x40a2, gbc.sp());
        EXPECT(0xda90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8e));
        EXPECT(0xc5, gbc.readMem(0xda8f));
        // CB C5 020B
        gbc.setState(0x708f, 0x8daa, 0x3110, 0xff38, 0xcae6, 0x125f, 0x1, 0x1);
        gbc.writeMem(0x708f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8daa, gbc.sp());
        EXPECT(0x7091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 020C
        gbc.setState(0x8e5b, 0x9c99, 0x8100, 0xd867, 0xa598, 0x2005, 0x1, 0x1);
        gbc.writeMem(0x8e5b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9c99, gbc.sp());
        EXPECT(0x8e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e5b));
        EXPECT(0xc5, gbc.readMem(0x8e5c));
        // CB C5 020D
        gbc.setState(0xa3b9, 0xd2c3, 0x6cc0, 0x8f74, 0x2766, 0x97fc, 0x1, 0x1);
        gbc.writeMem(0xa3b9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd2c3, gbc.sp());
        EXPECT(0xa3bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3b9));
        EXPECT(0xc5, gbc.readMem(0xa3ba));
        // CB C5 020E
        gbc.setState(0x5452, 0x7d21, 0x2a80, 0x96e7, 0xdb0c, 0x4170, 0x0, 0x0);
        gbc.writeMem(0x5452, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7d21, gbc.sp());
        EXPECT(0x5454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 020F
        gbc.setState(0x535d, 0xaf88, 0xee40, 0x4c74, 0x1ffb, 0x5770, 0x1, 0x1);
        gbc.writeMem(0x535d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xaf88, gbc.sp());
        EXPECT(0x535f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0210
        gbc.setState(0xcd2f, 0xf568, 0x9070, 0x91d6, 0x9731, 0x6ce4, 0x0, 0x0);
        gbc.writeMem(0xcd2f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf568, gbc.sp());
        EXPECT(0xcd31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd2f));
        EXPECT(0xc5, gbc.readMem(0xcd30));
        // CB C5 0211
        gbc.setState(0x7212, 0xd318, 0x7b60, 0x6a5a, 0x692f, 0x262a, 0x1, 0x0);
        gbc.writeMem(0x7212, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd318, gbc.sp());
        EXPECT(0x7214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0212
        gbc.setState(0x6219, 0xf52c, 0x35f0, 0x3e27, 0x5f52, 0x5b8d, 0x1, 0x0);
        gbc.writeMem(0x6219, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf52c, gbc.sp());
        EXPECT(0x621b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0213
        gbc.setState(0x48d6, 0x8865, 0xe9d0, 0x2690, 0xc6b7, 0xb45c, 0x0, 0x1);
        gbc.writeMem(0x48d6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8865, gbc.sp());
        EXPECT(0x48d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0214
        gbc.setState(0xe261, 0xa008, 0x1c10, 0xd1ca, 0xc3d4, 0xb5a, 0x0, 0x1);
        gbc.writeMem(0xe261, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa008, gbc.sp());
        EXPECT(0xe263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe261));
        EXPECT(0xc5, gbc.readMem(0xe262));
        // CB C5 0215
        gbc.setState(0xedfc, 0x53b1, 0x360, 0x9ac, 0xc74d, 0x1d65, 0x1, 0x0);
        gbc.writeMem(0xedfc, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x53b1, gbc.sp());
        EXPECT(0xedfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedfc));
        EXPECT(0xc5, gbc.readMem(0xedfd));
        // CB C5 0216
        gbc.setState(0x512f, 0x82d8, 0x60b0, 0x69eb, 0xc3c9, 0x58b, 0x0, 0x1);
        gbc.writeMem(0x512f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x82d8, gbc.sp());
        EXPECT(0x5131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0217
        gbc.setState(0x55de, 0xcd35, 0x39d0, 0x154c, 0xec0d, 0xeda0, 0x0, 0x1);
        gbc.writeMem(0x55de, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcd35, gbc.sp());
        EXPECT(0x55e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0218
        gbc.setState(0xeff3, 0x2e74, 0xe4d0, 0xcbf2, 0x2288, 0x1e, 0x0, 0x0);
        gbc.writeMem(0xeff3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2e74, gbc.sp());
        EXPECT(0xeff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff3));
        EXPECT(0xc5, gbc.readMem(0xeff4));
        // CB C5 0219
        gbc.setState(0x49f6, 0x4147, 0x32e0, 0xd2d, 0x2b78, 0x2605, 0x0, 0x0);
        gbc.writeMem(0x49f6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4147, gbc.sp());
        EXPECT(0x49f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 021A
        gbc.setState(0xce52, 0xbdf4, 0x35c0, 0x64ef, 0x574c, 0x2c0, 0x1, 0x0);
        gbc.writeMem(0xce52, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbdf4, gbc.sp());
        EXPECT(0xce54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce52));
        EXPECT(0xc5, gbc.readMem(0xce53));
        // CB C5 021B
        gbc.setState(0x8ded, 0x434b, 0x3620, 0xb5b4, 0xcac1, 0xa3dd, 0x0, 0x1);
        gbc.writeMem(0x8ded, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x434b, gbc.sp());
        EXPECT(0x8def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ded));
        EXPECT(0xc5, gbc.readMem(0x8dee));
        // CB C5 021C
        gbc.setState(0x1f8f, 0x2670, 0x67a0, 0x5cee, 0x4e33, 0xca9c, 0x1, 0x0);
        gbc.writeMem(0x1f8f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2670, gbc.sp());
        EXPECT(0x1f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 021D
        gbc.setState(0x16a1, 0x5446, 0x4b30, 0x9575, 0x3379, 0xb2c4, 0x1, 0x1);
        gbc.writeMem(0x16a1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5446, gbc.sp());
        EXPECT(0x16a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 021E
        gbc.setState(0x7d8f, 0xe5c, 0x3ea0, 0xf36a, 0x804a, 0x76ff, 0x0, 0x1);
        gbc.writeMem(0x7d8f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe5c, gbc.sp());
        EXPECT(0x7d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 021F
        gbc.setState(0xb430, 0xc0a4, 0x13b0, 0xd7d2, 0xd9e7, 0xcffd, 0x1, 0x1);
        gbc.writeMem(0xb430, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc0a4, gbc.sp());
        EXPECT(0xb432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb430));
        EXPECT(0xc5, gbc.readMem(0xb431));
        // CB C5 0220
        gbc.setState(0xb8bb, 0xc927, 0xf310, 0x4615, 0x6f1b, 0x10ad, 0x0, 0x1);
        gbc.writeMem(0xb8bb, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc927, gbc.sp());
        EXPECT(0xb8bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8bb));
        EXPECT(0xc5, gbc.readMem(0xb8bc));
        // CB C5 0221
        gbc.setState(0x4088, 0x5f97, 0x9a00, 0xe7cf, 0x1fca, 0xb877, 0x0, 0x0);
        gbc.writeMem(0x4088, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5f97, gbc.sp());
        EXPECT(0x408a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0222
        gbc.setState(0x8fab, 0xa689, 0x2e20, 0xf35c, 0x3ac, 0x3dc0, 0x1, 0x0);
        gbc.writeMem(0x8fab, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa689, gbc.sp());
        EXPECT(0x8fad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fab));
        EXPECT(0xc5, gbc.readMem(0x8fac));
        // CB C5 0223
        gbc.setState(0x605e, 0xbcab, 0x64d0, 0x5a5d, 0x914d, 0x3640, 0x0, 0x1);
        gbc.writeMem(0x605e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbcab, gbc.sp());
        EXPECT(0x6060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0224
        gbc.setState(0x18b1, 0xcc6d, 0x9850, 0xe2ec, 0x3c99, 0x6712, 0x1, 0x1);
        gbc.writeMem(0x18b1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcc6d, gbc.sp());
        EXPECT(0x18b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0225
        gbc.setState(0x9c60, 0x2316, 0x89f0, 0x6fb7, 0x11dc, 0x3f51, 0x0, 0x1);
        gbc.writeMem(0x9c60, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2316, gbc.sp());
        EXPECT(0x9c62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c60));
        EXPECT(0xc5, gbc.readMem(0x9c61));
        // CB C5 0226
        gbc.setState(0x853b, 0xd898, 0xb430, 0x26ec, 0x4123, 0x5ce0, 0x0, 0x0);
        gbc.writeMem(0x853b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd898, gbc.sp());
        EXPECT(0x853d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x853b));
        EXPECT(0xc5, gbc.readMem(0x853c));
        // CB C5 0227
        gbc.setState(0x9d0e, 0x91ff, 0x29e0, 0x6c2, 0x607e, 0xd0d9, 0x1, 0x1);
        gbc.writeMem(0x9d0e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x91ff, gbc.sp());
        EXPECT(0x9d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d0e));
        EXPECT(0xc5, gbc.readMem(0x9d0f));
        // CB C5 022A
        gbc.setState(0x25f1, 0x1d1c, 0x5c20, 0x3c38, 0xa00, 0xed55, 0x0, 0x1);
        gbc.writeMem(0x25f1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1d1c, gbc.sp());
        EXPECT(0x25f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 022B
        gbc.setState(0xcaab, 0xe475, 0x9f00, 0xee50, 0x7960, 0x86ae, 0x1, 0x1);
        gbc.writeMem(0xcaab, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe475, gbc.sp());
        EXPECT(0xcaad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaab));
        EXPECT(0xc5, gbc.readMem(0xcaac));
        // CB C5 022C
        gbc.setState(0xd195, 0x4ef3, 0x1410, 0x8b29, 0x3591, 0x5445, 0x0, 0x1);
        gbc.writeMem(0xd195, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4ef3, gbc.sp());
        EXPECT(0xd197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd195));
        EXPECT(0xc5, gbc.readMem(0xd196));
        // CB C5 022D
        gbc.setState(0xc635, 0x33b2, 0x79d0, 0x4485, 0x431, 0x1948, 0x1, 0x1);
        gbc.writeMem(0xc635, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x33b2, gbc.sp());
        EXPECT(0xc637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc635));
        EXPECT(0xc5, gbc.readMem(0xc636));
        // CB C5 022F
        gbc.setState(0xbdfb, 0xfbb1, 0x8c50, 0x2535, 0x11fc, 0x8ffa, 0x1, 0x0);
        gbc.writeMem(0xbdfb, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfbb1, gbc.sp());
        EXPECT(0xbdfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdfb));
        EXPECT(0xc5, gbc.readMem(0xbdfc));
        // CB C5 0230
        gbc.setState(0x57c7, 0x7412, 0xb1e0, 0x188e, 0x73b0, 0x9342, 0x1, 0x1);
        gbc.writeMem(0x57c7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7412, gbc.sp());
        EXPECT(0x57c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0231
        gbc.setState(0x1232, 0x451d, 0xd630, 0x4ab6, 0x182b, 0x763b, 0x1, 0x0);
        gbc.writeMem(0x1232, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x451d, gbc.sp());
        EXPECT(0x1234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0232
        gbc.setState(0x9662, 0xf385, 0xead0, 0xaa22, 0x2e69, 0x51b1, 0x0, 0x0);
        gbc.writeMem(0x9662, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf385, gbc.sp());
        EXPECT(0x9664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9662));
        EXPECT(0xc5, gbc.readMem(0x9663));
        // CB C5 0233
        gbc.setState(0x1120, 0x7640, 0x45d0, 0x8704, 0x82b7, 0xe4ed, 0x0, 0x0);
        gbc.writeMem(0x1120, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7640, gbc.sp());
        EXPECT(0x1122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0234
        gbc.setState(0xba35, 0x2ee8, 0xbd70, 0xe2b6, 0xd6fb, 0x5f9c, 0x1, 0x1);
        gbc.writeMem(0xba35, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2ee8, gbc.sp());
        EXPECT(0xba37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba35));
        EXPECT(0xc5, gbc.readMem(0xba36));
        // CB C5 0235
        gbc.setState(0x7b0f, 0xf8c1, 0x58b0, 0xfe85, 0x2b3d, 0x3203, 0x0, 0x1);
        gbc.writeMem(0x7b0f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf8c1, gbc.sp());
        EXPECT(0x7b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0236
        gbc.setState(0xcc8f, 0x439f, 0xbbc0, 0xccba, 0x254a, 0xc905, 0x1, 0x0);
        gbc.writeMem(0xcc8f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x439f, gbc.sp());
        EXPECT(0xcc91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8f));
        EXPECT(0xc5, gbc.readMem(0xcc90));
        // CB C5 0237
        gbc.setState(0xb42d, 0xf6b3, 0xc750, 0x204e, 0x4560, 0x2857, 0x1, 0x0);
        gbc.writeMem(0xb42d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf6b3, gbc.sp());
        EXPECT(0xb42f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb42d));
        EXPECT(0xc5, gbc.readMem(0xb42e));
        // CB C5 0238
        gbc.setState(0x8791, 0x5f8e, 0x60e0, 0xe642, 0xdd62, 0xc3f4, 0x0, 0x0);
        gbc.writeMem(0x8791, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5f8e, gbc.sp());
        EXPECT(0x8793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8791));
        EXPECT(0xc5, gbc.readMem(0x8792));
        // CB C5 0239
        gbc.setState(0x2a55, 0xd39e, 0xc680, 0x709e, 0xabd2, 0x2711, 0x0, 0x1);
        gbc.writeMem(0x2a55, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd39e, gbc.sp());
        EXPECT(0x2a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 023A
        gbc.setState(0x3af, 0xce97, 0x43d0, 0x6df1, 0x1f35, 0x7960, 0x1, 0x1);
        gbc.writeMem(0x3af, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xce97, gbc.sp());
        EXPECT(0x3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 023B
        gbc.setState(0x841f, 0x334f, 0xfff0, 0x8573, 0x3e97, 0xab06, 0x1, 0x1);
        gbc.writeMem(0x841f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x334f, gbc.sp());
        EXPECT(0x8421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x841f));
        EXPECT(0xc5, gbc.readMem(0x8420));
        // CB C5 023C
        gbc.setState(0x4ba1, 0xf6c1, 0x2860, 0x1f8e, 0x7523, 0x86a, 0x0, 0x0);
        gbc.writeMem(0x4ba1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf6c1, gbc.sp());
        EXPECT(0x4ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 023E
        gbc.setState(0x3ead, 0x5e5, 0xa490, 0x1f64, 0x26fb, 0xf491, 0x1, 0x1);
        gbc.writeMem(0x3ead, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5e5, gbc.sp());
        EXPECT(0x3eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 023F
        gbc.setState(0x6d44, 0x745d, 0x4c60, 0xd585, 0x9273, 0x91f9, 0x0, 0x0);
        gbc.writeMem(0x6d44, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x745d, gbc.sp());
        EXPECT(0x6d46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0240
        gbc.setState(0x8cf6, 0x36ea, 0x8740, 0x7b32, 0x2eaf, 0x9cff, 0x0, 0x0);
        gbc.writeMem(0x8cf6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x36ea, gbc.sp());
        EXPECT(0x8cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf6));
        EXPECT(0xc5, gbc.readMem(0x8cf7));
        // CB C5 0241
        gbc.setState(0x28b3, 0x59e, 0xa950, 0x461b, 0xe1ec, 0xf1f8, 0x0, 0x1);
        gbc.writeMem(0x28b3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x59e, gbc.sp());
        EXPECT(0x28b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0242
        gbc.setState(0x8e92, 0xc33f, 0xbb40, 0xe109, 0xc69a, 0x2435, 0x1, 0x0);
        gbc.writeMem(0x8e92, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc33f, gbc.sp());
        EXPECT(0x8e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e92));
        EXPECT(0xc5, gbc.readMem(0x8e93));
        // CB C5 0244
        gbc.setState(0x4054, 0x107e, 0x93a0, 0x4a31, 0xc2ee, 0x992d, 0x1, 0x0);
        gbc.writeMem(0x4054, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x107e, gbc.sp());
        EXPECT(0x4056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0245
        gbc.setState(0x48dc, 0xc1a, 0xb7d0, 0x8a5b, 0xbe92, 0x230d, 0x1, 0x0);
        gbc.writeMem(0x48dc, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc1a, gbc.sp());
        EXPECT(0x48de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0246
        gbc.setState(0xb5ba, 0x3e8f, 0x29a0, 0x4ce3, 0xd296, 0xb595, 0x1, 0x0);
        gbc.writeMem(0xb5ba, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3e8f, gbc.sp());
        EXPECT(0xb5bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ba));
        EXPECT(0xc5, gbc.readMem(0xb5bb));
        // CB C5 0247
        gbc.setState(0xc54b, 0x4229, 0x82f0, 0x801, 0x70ca, 0xf479, 0x1, 0x1);
        gbc.writeMem(0xc54b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4229, gbc.sp());
        EXPECT(0xc54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54b));
        EXPECT(0xc5, gbc.readMem(0xc54c));
        // CB C5 0248
        gbc.setState(0xe810, 0xb798, 0x57a0, 0x854a, 0xd23a, 0x6985, 0x1, 0x0);
        gbc.writeMem(0xe810, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb798, gbc.sp());
        EXPECT(0xe812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe810));
        EXPECT(0xc5, gbc.readMem(0xe811));
        // CB C5 0249
        gbc.setState(0x9a36, 0xe64b, 0xdfa0, 0x6eb, 0x107c, 0xb717, 0x1, 0x0);
        gbc.writeMem(0x9a36, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe64b, gbc.sp());
        EXPECT(0x9a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a36));
        EXPECT(0xc5, gbc.readMem(0x9a37));
        // CB C5 024A
        gbc.setState(0x99a7, 0x1438, 0xc100, 0xca75, 0xd88f, 0xb081, 0x0, 0x1);
        gbc.writeMem(0x99a7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1438, gbc.sp());
        EXPECT(0x99a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99a7));
        EXPECT(0xc5, gbc.readMem(0x99a8));
        // CB C5 024B
        gbc.setState(0xdb0c, 0xb51b, 0x460, 0x3200, 0x826f, 0xdba8, 0x0, 0x1);
        gbc.writeMem(0xdb0c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb51b, gbc.sp());
        EXPECT(0xdb0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb0c));
        EXPECT(0xc5, gbc.readMem(0xdb0d));
        // CB C5 024C
        gbc.setState(0xee08, 0xb559, 0x1440, 0x8696, 0xbfee, 0xcee7, 0x0, 0x1);
        gbc.writeMem(0xee08, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb559, gbc.sp());
        EXPECT(0xee0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee08));
        EXPECT(0xc5, gbc.readMem(0xee09));
        // CB C5 024E
        gbc.setState(0x3001, 0xc720, 0x24b0, 0x295e, 0xe8ec, 0xaf47, 0x0, 0x1);
        gbc.writeMem(0x3001, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc720, gbc.sp());
        EXPECT(0x3003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 024F
        gbc.setState(0x8506, 0x4b11, 0x3110, 0x494e, 0x2641, 0x780d, 0x1, 0x1);
        gbc.writeMem(0x8506, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4b11, gbc.sp());
        EXPECT(0x8508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8506));
        EXPECT(0xc5, gbc.readMem(0x8507));
        // CB C5 0250
        gbc.setState(0xee96, 0xb5aa, 0x6310, 0xb893, 0x1d06, 0x41ec, 0x0, 0x0);
        gbc.writeMem(0xee96, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb5aa, gbc.sp());
        EXPECT(0xee98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee96));
        EXPECT(0xc5, gbc.readMem(0xee97));
        // CB C5 0251
        gbc.setState(0x2c78, 0x4e8, 0x93c0, 0xd344, 0x5b63, 0x731, 0x0, 0x0);
        gbc.writeMem(0x2c78, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4e8, gbc.sp());
        EXPECT(0x2c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0252
        gbc.setState(0xeac3, 0x1dbb, 0x71d0, 0xa00e, 0x2455, 0xb66d, 0x1, 0x0);
        gbc.writeMem(0xeac3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1dbb, gbc.sp());
        EXPECT(0xeac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac3));
        EXPECT(0xc5, gbc.readMem(0xeac4));
        // CB C5 0253
        gbc.setState(0xdd49, 0xd764, 0x9ec0, 0x6890, 0xb2f3, 0x90ac, 0x1, 0x1);
        gbc.writeMem(0xdd49, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd764, gbc.sp());
        EXPECT(0xdd4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd49));
        EXPECT(0xc5, gbc.readMem(0xdd4a));
        // CB C5 0254
        gbc.setState(0x5416, 0x323b, 0xd690, 0x8d63, 0xef3c, 0x2f50, 0x0, 0x1);
        gbc.writeMem(0x5416, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x323b, gbc.sp());
        EXPECT(0x5418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0255
        gbc.setState(0xbab4, 0xc6a8, 0xab40, 0x8554, 0x3b3e, 0x58cc, 0x0, 0x0);
        gbc.writeMem(0xbab4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc6a8, gbc.sp());
        EXPECT(0xbab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab4));
        EXPECT(0xc5, gbc.readMem(0xbab5));
        // CB C5 0256
        gbc.setState(0xe76b, 0x2f76, 0xe7e0, 0xd180, 0xc447, 0xcd0c, 0x1, 0x1);
        gbc.writeMem(0xe76b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2f76, gbc.sp());
        EXPECT(0xe76d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe76b));
        EXPECT(0xc5, gbc.readMem(0xe76c));
        // CB C5 0257
        gbc.setState(0x3380, 0x4985, 0x9980, 0xda37, 0xae56, 0x236f, 0x0, 0x0);
        gbc.writeMem(0x3380, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4985, gbc.sp());
        EXPECT(0x3382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0258
        gbc.setState(0x2274, 0x93e6, 0xf340, 0x9495, 0xe8f4, 0xfb9e, 0x1, 0x0);
        gbc.writeMem(0x2274, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x93e6, gbc.sp());
        EXPECT(0x2276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0259
        gbc.setState(0xd025, 0xa535, 0x2110, 0xadf0, 0xd51f, 0x2b26, 0x0, 0x0);
        gbc.writeMem(0xd025, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa535, gbc.sp());
        EXPECT(0xd027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd025));
        EXPECT(0xc5, gbc.readMem(0xd026));
        // CB C5 025A
        gbc.setState(0x7b3c, 0x59e9, 0xcfb0, 0x5b74, 0xdb8b, 0xcf36, 0x0, 0x1);
        gbc.writeMem(0x7b3c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x59e9, gbc.sp());
        EXPECT(0x7b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 025B
        gbc.setState(0x94c7, 0x3940, 0x5d30, 0xe974, 0xecf, 0xd2a1, 0x1, 0x0);
        gbc.writeMem(0x94c7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3940, gbc.sp());
        EXPECT(0x94c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c7));
        EXPECT(0xc5, gbc.readMem(0x94c8));
        // CB C5 025C
        gbc.setState(0xcd03, 0x77e7, 0x2e20, 0x303a, 0x3611, 0x4dd1, 0x1, 0x1);
        gbc.writeMem(0xcd03, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x77e7, gbc.sp());
        EXPECT(0xcd05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd03));
        EXPECT(0xc5, gbc.readMem(0xcd04));
        // CB C5 025D
        gbc.setState(0xc01d, 0x52f9, 0xd1b0, 0x5422, 0xded4, 0x44cf, 0x0, 0x0);
        gbc.writeMem(0xc01d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x52f9, gbc.sp());
        EXPECT(0xc01f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01d));
        EXPECT(0xc5, gbc.readMem(0xc01e));
        // CB C5 025E
        gbc.setState(0x8133, 0x933e, 0x8b10, 0xe147, 0x81bc, 0x395c, 0x0, 0x1);
        gbc.writeMem(0x8133, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x933e, gbc.sp());
        EXPECT(0x8135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8133));
        EXPECT(0xc5, gbc.readMem(0x8134));
        // CB C5 025F
        gbc.setState(0x39dd, 0xba6c, 0xd7a0, 0xa352, 0x871b, 0xacf0, 0x0, 0x0);
        gbc.writeMem(0x39dd, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xba6c, gbc.sp());
        EXPECT(0x39df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0260
        gbc.setState(0xc2bb, 0x2b5b, 0xd290, 0xb6ba, 0x2ff2, 0xc57f, 0x0, 0x1);
        gbc.writeMem(0xc2bb, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2b5b, gbc.sp());
        EXPECT(0xc2bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2bb));
        EXPECT(0xc5, gbc.readMem(0xc2bc));
        // CB C5 0263
        gbc.setState(0x8f12, 0x54a1, 0x3e10, 0xde26, 0x3fc1, 0xb385, 0x1, 0x0);
        gbc.writeMem(0x8f12, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x54a1, gbc.sp());
        EXPECT(0x8f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f12));
        EXPECT(0xc5, gbc.readMem(0x8f13));
        // CB C5 0264
        gbc.setState(0xe1ff, 0x4122, 0x8ab0, 0x5053, 0x6b3f, 0x44b5, 0x1, 0x0);
        gbc.writeMem(0xe1ff, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4122, gbc.sp());
        EXPECT(0xe201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ff));
        EXPECT(0xc5, gbc.readMem(0xe200));
        // CB C5 0265
        gbc.setState(0x835a, 0x9940, 0x9700, 0x59ec, 0xe0f1, 0xee9e, 0x1, 0x1);
        gbc.writeMem(0x835a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9940, gbc.sp());
        EXPECT(0x835c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835a));
        EXPECT(0xc5, gbc.readMem(0x835b));
        // CB C5 0266
        gbc.setState(0x3e94, 0xc21b, 0xec90, 0x3349, 0x8b4f, 0x68eb, 0x0, 0x0);
        gbc.writeMem(0x3e94, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc21b, gbc.sp());
        EXPECT(0x3e96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0267
        gbc.setState(0x76dd, 0x49fb, 0xeeb0, 0x713d, 0xc0df, 0x8822, 0x1, 0x1);
        gbc.writeMem(0x76dd, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x49fb, gbc.sp());
        EXPECT(0x76df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0268
        gbc.setState(0x35f7, 0x6fd0, 0x8fd0, 0xa13d, 0xe742, 0x657, 0x1, 0x1);
        gbc.writeMem(0x35f7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6fd0, gbc.sp());
        EXPECT(0x35f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 026A
        gbc.setState(0xd37f, 0x897c, 0x5b70, 0x1662, 0x28ae, 0x2cae, 0x0, 0x0);
        gbc.writeMem(0xd37f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x897c, gbc.sp());
        EXPECT(0xd381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37f));
        EXPECT(0xc5, gbc.readMem(0xd380));
        // CB C5 026B
        gbc.setState(0xb47, 0xd117, 0x7b20, 0xd775, 0x4a1a, 0xdb93, 0x0, 0x0);
        gbc.writeMem(0xb47, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd117, gbc.sp());
        EXPECT(0xb49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 026C
        gbc.setState(0x75d9, 0x3718, 0x2010, 0xe281, 0x424e, 0xff99, 0x1, 0x0);
        gbc.writeMem(0x75d9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3718, gbc.sp());
        EXPECT(0x75db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 026D
        gbc.setState(0x6dc4, 0x9096, 0xaa40, 0x1f9f, 0xa17, 0xc800, 0x1, 0x0);
        gbc.writeMem(0x6dc4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9096, gbc.sp());
        EXPECT(0x6dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 026F
        gbc.setState(0xa34, 0x8067, 0x6790, 0x92f7, 0x73d6, 0x182e, 0x1, 0x0);
        gbc.writeMem(0xa34, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8067, gbc.sp());
        EXPECT(0xa36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0270
        gbc.setState(0x2f5d, 0x81e, 0x10a0, 0xfcb6, 0xec94, 0x4fac, 0x0, 0x0);
        gbc.writeMem(0x2f5d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x81e, gbc.sp());
        EXPECT(0x2f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0271
        gbc.setState(0x3165, 0x1d59, 0x1810, 0x1562, 0xac65, 0x6d2f, 0x0, 0x0);
        gbc.writeMem(0x3165, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1d59, gbc.sp());
        EXPECT(0x3167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0272
        gbc.setState(0x9d5, 0x595b, 0xda10, 0x38d, 0xb53a, 0x531f, 0x0, 0x0);
        gbc.writeMem(0x9d5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x595b, gbc.sp());
        EXPECT(0x9d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0273
        gbc.setState(0xad6a, 0x3b40, 0x7320, 0xf518, 0x249, 0xf349, 0x1, 0x0);
        gbc.writeMem(0xad6a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3b40, gbc.sp());
        EXPECT(0xad6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad6a));
        EXPECT(0xc5, gbc.readMem(0xad6b));
        // CB C5 0274
        gbc.setState(0xbe63, 0x7209, 0x99f0, 0x4384, 0x124d, 0x1c08, 0x0, 0x0);
        gbc.writeMem(0xbe63, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7209, gbc.sp());
        EXPECT(0xbe65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe63));
        EXPECT(0xc5, gbc.readMem(0xbe64));
        // CB C5 0275
        gbc.setState(0xeb3e, 0x3da0, 0x9e20, 0xcb49, 0x99b, 0x9d4f, 0x1, 0x0);
        gbc.writeMem(0xeb3e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3da0, gbc.sp());
        EXPECT(0xeb40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3e));
        EXPECT(0xc5, gbc.readMem(0xeb3f));
        // CB C5 0277
        gbc.setState(0xae52, 0x92f, 0x7fb0, 0x7f70, 0x25be, 0x6eb2, 0x1, 0x1);
        gbc.writeMem(0xae52, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x92f, gbc.sp());
        EXPECT(0xae54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae52));
        EXPECT(0xc5, gbc.readMem(0xae53));
        // CB C5 0278
        gbc.setState(0x1af1, 0x3859, 0x5250, 0x2a30, 0x49da, 0xdc88, 0x0, 0x0);
        gbc.writeMem(0x1af1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3859, gbc.sp());
        EXPECT(0x1af3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0279
        gbc.setState(0x6182, 0x77d8, 0x5230, 0xe570, 0xbf10, 0x9d47, 0x1, 0x0);
        gbc.writeMem(0x6182, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x77d8, gbc.sp());
        EXPECT(0x6184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 027A
        gbc.setState(0xa45e, 0x9d90, 0x4480, 0x594a, 0x370e, 0xecba, 0x1, 0x0);
        gbc.writeMem(0xa45e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9d90, gbc.sp());
        EXPECT(0xa460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa45e));
        EXPECT(0xc5, gbc.readMem(0xa45f));
        // CB C5 027B
        gbc.setState(0xbd3c, 0x24ee, 0xcb30, 0x9971, 0x6f2c, 0xaade, 0x1, 0x0);
        gbc.writeMem(0xbd3c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x24ee, gbc.sp());
        EXPECT(0xbd3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd3c));
        EXPECT(0xc5, gbc.readMem(0xbd3d));
        // CB C5 027C
        gbc.setState(0xd2a7, 0x1585, 0xad10, 0xdf24, 0x6a16, 0xb00b, 0x1, 0x0);
        gbc.writeMem(0xd2a7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1585, gbc.sp());
        EXPECT(0xd2a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a7));
        EXPECT(0xc5, gbc.readMem(0xd2a8));
        // CB C5 027E
        gbc.setState(0x69a5, 0xd3e2, 0x2820, 0x228d, 0x6498, 0xe2d3, 0x0, 0x1);
        gbc.writeMem(0x69a5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd3e2, gbc.sp());
        EXPECT(0x69a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 027F
        gbc.setState(0xefd6, 0x4179, 0x7300, 0x890a, 0x8e32, 0xced2, 0x0, 0x1);
        gbc.writeMem(0xefd6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4179, gbc.sp());
        EXPECT(0xefd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd6));
        EXPECT(0xc5, gbc.readMem(0xefd7));
        // CB C5 0281
        gbc.setState(0xc8d5, 0x2fd6, 0x25c0, 0x2ef, 0x8899, 0xd3f3, 0x0, 0x1);
        gbc.writeMem(0xc8d5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2fd6, gbc.sp());
        EXPECT(0xc8d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d5));
        EXPECT(0xc5, gbc.readMem(0xc8d6));
        // CB C5 0282
        gbc.setState(0xb3bb, 0x3d37, 0xe9b0, 0xdbde, 0x62b, 0x9a6c, 0x1, 0x0);
        gbc.writeMem(0xb3bb, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3d37, gbc.sp());
        EXPECT(0xb3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3bb));
        EXPECT(0xc5, gbc.readMem(0xb3bc));
        // CB C5 0283
        gbc.setState(0x993c, 0xf68d, 0x39f0, 0x8dc, 0x64f, 0x9319, 0x1, 0x0);
        gbc.writeMem(0x993c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf68d, gbc.sp());
        EXPECT(0x993e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x993c));
        EXPECT(0xc5, gbc.readMem(0x993d));
        // CB C5 0284
        gbc.setState(0x8f7d, 0x30ef, 0x5620, 0x4b5c, 0x99a8, 0xed5c, 0x0, 0x0);
        gbc.writeMem(0x8f7d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x30ef, gbc.sp());
        EXPECT(0x8f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f7d));
        EXPECT(0xc5, gbc.readMem(0x8f7e));
        // CB C5 0285
        gbc.setState(0x70e4, 0x884a, 0xe9e0, 0xb4a1, 0x928c, 0xf71d, 0x1, 0x0);
        gbc.writeMem(0x70e4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x884a, gbc.sp());
        EXPECT(0x70e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0286
        gbc.setState(0x6564, 0x64c, 0x3e60, 0xbf99, 0x9012, 0xb566, 0x0, 0x0);
        gbc.writeMem(0x6564, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x64c, gbc.sp());
        EXPECT(0x6566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0287
        gbc.setState(0x5061, 0xcd3a, 0xc920, 0xadcc, 0x8222, 0x44b, 0x0, 0x1);
        gbc.writeMem(0x5061, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcd3a, gbc.sp());
        EXPECT(0x5063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0288
        gbc.setState(0x4041, 0x11b7, 0x1b0, 0x2194, 0x5166, 0xa0e3, 0x1, 0x0);
        gbc.writeMem(0x4041, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x11b7, gbc.sp());
        EXPECT(0x4043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0289
        gbc.setState(0x3a49, 0xf87d, 0x8a50, 0x95d, 0x19c4, 0xc76b, 0x0, 0x0);
        gbc.writeMem(0x3a49, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf87d, gbc.sp());
        EXPECT(0x3a4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 028B
        gbc.setState(0x21cf, 0xc435, 0xa770, 0x3c51, 0xb9e6, 0x1d6e, 0x0, 0x0);
        gbc.writeMem(0x21cf, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc435, gbc.sp());
        EXPECT(0x21d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 028C
        gbc.setState(0x54ac, 0xf9b4, 0xa000, 0xdd87, 0x58f, 0x5000, 0x0, 0x0);
        gbc.writeMem(0x54ac, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf9b4, gbc.sp());
        EXPECT(0x54ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 028D
        gbc.setState(0x7ca, 0x441c, 0xd710, 0x65c5, 0xd972, 0xddf4, 0x1, 0x0);
        gbc.writeMem(0x7ca, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x441c, gbc.sp());
        EXPECT(0x7cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 028E
        gbc.setState(0x1c09, 0x1206, 0xa0e0, 0xd7c3, 0x94bb, 0xb6f2, 0x1, 0x0);
        gbc.writeMem(0x1c09, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1206, gbc.sp());
        EXPECT(0x1c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 028F
        gbc.setState(0x9e1e, 0x82be, 0x9ef0, 0xc0ee, 0x3a1, 0x951, 0x1, 0x0);
        gbc.writeMem(0x9e1e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x82be, gbc.sp());
        EXPECT(0x9e20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e1e));
        EXPECT(0xc5, gbc.readMem(0x9e1f));
        // CB C5 0290
        gbc.setState(0x49cd, 0x8925, 0x770, 0xef3a, 0xefb8, 0x42c2, 0x1, 0x1);
        gbc.writeMem(0x49cd, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8925, gbc.sp());
        EXPECT(0x49cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0291
        gbc.setState(0x23a9, 0x9f13, 0xeac0, 0x232, 0xb642, 0x76c2, 0x1, 0x0);
        gbc.writeMem(0x23a9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9f13, gbc.sp());
        EXPECT(0x23ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0292
        gbc.setState(0x55a8, 0x1127, 0xf690, 0x4fcb, 0x1892, 0xf3bb, 0x1, 0x1);
        gbc.writeMem(0x55a8, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1127, gbc.sp());
        EXPECT(0x55aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0293
        gbc.setState(0x2000, 0x908f, 0x4750, 0xecf2, 0x32c5, 0xe8, 0x1, 0x1);
        gbc.writeMem(0x2000, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x908f, gbc.sp());
        EXPECT(0x2002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0294
        gbc.setState(0x884f, 0xe9bf, 0xd380, 0x1fca, 0xc130, 0x674d, 0x1, 0x0);
        gbc.writeMem(0x884f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe9bf, gbc.sp());
        EXPECT(0x8851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884f));
        EXPECT(0xc5, gbc.readMem(0x8850));
        // CB C5 0295
        gbc.setState(0x3a61, 0xc937, 0xd000, 0xbb23, 0xfed2, 0x5ec7, 0x1, 0x1);
        gbc.writeMem(0x3a61, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc937, gbc.sp());
        EXPECT(0x3a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0296
        gbc.setState(0x3ae1, 0xeafc, 0x46b0, 0xf2d6, 0x2564, 0xec2e, 0x1, 0x0);
        gbc.writeMem(0x3ae1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xeafc, gbc.sp());
        EXPECT(0x3ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0297
        gbc.setState(0x35fd, 0x26ac, 0x81a0, 0xc43e, 0xf188, 0x18d1, 0x1, 0x0);
        gbc.writeMem(0x35fd, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x26ac, gbc.sp());
        EXPECT(0x35ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0298
        gbc.setState(0x9e15, 0x7709, 0xdcc0, 0x15a2, 0x150, 0x7ea2, 0x0, 0x0);
        gbc.writeMem(0x9e15, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7709, gbc.sp());
        EXPECT(0x9e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e15));
        EXPECT(0xc5, gbc.readMem(0x9e16));
        // CB C5 0299
        gbc.setState(0x566f, 0x93a5, 0x9f10, 0x2253, 0x60d2, 0x3a85, 0x0, 0x1);
        gbc.writeMem(0x566f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x93a5, gbc.sp());
        EXPECT(0x5671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 029A
        gbc.setState(0xdf60, 0xbeb7, 0xff10, 0xd198, 0xed9c, 0x8a35, 0x1, 0x0);
        gbc.writeMem(0xdf60, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbeb7, gbc.sp());
        EXPECT(0xdf62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf60));
        EXPECT(0xc5, gbc.readMem(0xdf61));
        // CB C5 029B
        gbc.setState(0xb113, 0xa3d6, 0xd210, 0xff0, 0x4d8a, 0x42ab, 0x1, 0x1);
        gbc.writeMem(0xb113, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa3d6, gbc.sp());
        EXPECT(0xb115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb113));
        EXPECT(0xc5, gbc.readMem(0xb114));
        // CB C5 029C
        gbc.setState(0xb6db, 0x26e1, 0x6a00, 0x2d4a, 0xe999, 0xe492, 0x1, 0x0);
        gbc.writeMem(0xb6db, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x26e1, gbc.sp());
        EXPECT(0xb6dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6db));
        EXPECT(0xc5, gbc.readMem(0xb6dc));
        // CB C5 029D
        gbc.setState(0xd2f, 0xe3ee, 0xb970, 0xc1ef, 0x7ef6, 0xa86c, 0x1, 0x1);
        gbc.writeMem(0xd2f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe3ee, gbc.sp());
        EXPECT(0xd31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 029E
        gbc.setState(0x2965, 0x8f2f, 0xc4f0, 0xba19, 0xbf70, 0x495e, 0x0, 0x1);
        gbc.writeMem(0x2965, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8f2f, gbc.sp());
        EXPECT(0x2967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 029F
        gbc.setState(0xbde5, 0xf2b2, 0x7750, 0xfd9e, 0x9e63, 0xa7db, 0x0, 0x1);
        gbc.writeMem(0xbde5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf2b2, gbc.sp());
        EXPECT(0xbde7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde5));
        EXPECT(0xc5, gbc.readMem(0xbde6));
        // CB C5 02A0
        gbc.setState(0x45e3, 0xc9b9, 0xc6e0, 0xc929, 0x657a, 0xbaa6, 0x1, 0x1);
        gbc.writeMem(0x45e3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc9b9, gbc.sp());
        EXPECT(0x45e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02A1
        gbc.setState(0xcaa3, 0x2547, 0x8970, 0x9f4d, 0x60d0, 0xa201, 0x0, 0x1);
        gbc.writeMem(0xcaa3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2547, gbc.sp());
        EXPECT(0xcaa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa3));
        EXPECT(0xc5, gbc.readMem(0xcaa4));
        // CB C5 02A2
        gbc.setState(0x1349, 0xc32, 0x6000, 0x6dd9, 0x13b4, 0x8453, 0x0, 0x1);
        gbc.writeMem(0x1349, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc32, gbc.sp());
        EXPECT(0x134b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02A3
        gbc.setState(0xe0f2, 0xd02c, 0x9630, 0xeac8, 0x821c, 0xf78b, 0x0, 0x0);
        gbc.writeMem(0xe0f2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd02c, gbc.sp());
        EXPECT(0xe0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f2));
        EXPECT(0xc5, gbc.readMem(0xe0f3));
        // CB C5 02A4
        gbc.setState(0x3c52, 0x36bd, 0xf380, 0xf82e, 0x1195, 0xd029, 0x1, 0x1);
        gbc.writeMem(0x3c52, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x36bd, gbc.sp());
        EXPECT(0x3c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02A5
        gbc.setState(0x8aa5, 0xdb8c, 0x2b20, 0xe168, 0x38cc, 0x73c9, 0x0, 0x1);
        gbc.writeMem(0x8aa5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdb8c, gbc.sp());
        EXPECT(0x8aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa5));
        EXPECT(0xc5, gbc.readMem(0x8aa6));
        // CB C5 02A6
        gbc.setState(0xbc7e, 0x92a, 0x31f0, 0x7cdd, 0x60c1, 0x6c4f, 0x1, 0x1);
        gbc.writeMem(0xbc7e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x92a, gbc.sp());
        EXPECT(0xbc80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc7e));
        EXPECT(0xc5, gbc.readMem(0xbc7f));
        // CB C5 02A7
        gbc.setState(0xe65, 0x8b18, 0xa5d0, 0x9d90, 0x10b6, 0xe3be, 0x1, 0x0);
        gbc.writeMem(0xe65, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8b18, gbc.sp());
        EXPECT(0xe67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02A9
        gbc.setState(0xd1d6, 0x5262, 0x3d50, 0x914e, 0xe875, 0x80e4, 0x1, 0x0);
        gbc.writeMem(0xd1d6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5262, gbc.sp());
        EXPECT(0xd1d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d6));
        EXPECT(0xc5, gbc.readMem(0xd1d7));
        // CB C5 02AA
        gbc.setState(0x8659, 0xbe8d, 0xe50, 0x7010, 0x4b4b, 0x1567, 0x0, 0x0);
        gbc.writeMem(0x8659, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbe8d, gbc.sp());
        EXPECT(0x865b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8659));
        EXPECT(0xc5, gbc.readMem(0x865a));
        // CB C5 02AB
        gbc.setState(0x4002, 0x192b, 0x2e20, 0x20ba, 0xd54b, 0xc5fe, 0x0, 0x0);
        gbc.writeMem(0x4002, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x192b, gbc.sp());
        EXPECT(0x4004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02AC
        gbc.setState(0x3ca2, 0xa87, 0x5380, 0xbb6b, 0x7da1, 0xdba3, 0x0, 0x0);
        gbc.writeMem(0x3ca2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa87, gbc.sp());
        EXPECT(0x3ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02AD
        gbc.setState(0xa932, 0xc6a0, 0x57a0, 0xba69, 0xaa36, 0xb01b, 0x1, 0x1);
        gbc.writeMem(0xa932, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc6a0, gbc.sp());
        EXPECT(0xa934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa932));
        EXPECT(0xc5, gbc.readMem(0xa933));
        // CB C5 02AE
        gbc.setState(0xb915, 0xd597, 0xe380, 0x55ce, 0xed2f, 0x4238, 0x0, 0x0);
        gbc.writeMem(0xb915, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd597, gbc.sp());
        EXPECT(0xb917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb915));
        EXPECT(0xc5, gbc.readMem(0xb916));
        // CB C5 02AF
        gbc.setState(0xa46e, 0xf080, 0xcec0, 0x5766, 0xd2a3, 0x70e6, 0x1, 0x0);
        gbc.writeMem(0xa46e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf080, gbc.sp());
        EXPECT(0xa470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46e));
        EXPECT(0xc5, gbc.readMem(0xa46f));
        // CB C5 02B0
        gbc.setState(0x9536, 0x7b99, 0x76e0, 0xe3ed, 0xc53, 0x9cf1, 0x1, 0x0);
        gbc.writeMem(0x9536, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7b99, gbc.sp());
        EXPECT(0x9538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9536));
        EXPECT(0xc5, gbc.readMem(0x9537));
        // CB C5 02B1
        gbc.setState(0x3c42, 0xeda1, 0xb0f0, 0xbb6, 0x49dc, 0x2ff4, 0x1, 0x0);
        gbc.writeMem(0x3c42, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xeda1, gbc.sp());
        EXPECT(0x3c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02B2
        gbc.setState(0x2e5d, 0xe417, 0x1c80, 0xec2b, 0xe6d0, 0x7db3, 0x0, 0x0);
        gbc.writeMem(0x2e5d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe417, gbc.sp());
        EXPECT(0x2e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02B3
        gbc.setState(0x8b6e, 0x5a46, 0x3450, 0xffec, 0xdf84, 0x34e5, 0x1, 0x1);
        gbc.writeMem(0x8b6e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5a46, gbc.sp());
        EXPECT(0x8b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b6e));
        EXPECT(0xc5, gbc.readMem(0x8b6f));
        // CB C5 02B4
        gbc.setState(0xc96c, 0x2e8a, 0x4130, 0x851c, 0x98ff, 0x68da, 0x1, 0x0);
        gbc.writeMem(0xc96c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2e8a, gbc.sp());
        EXPECT(0xc96e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96c));
        EXPECT(0xc5, gbc.readMem(0xc96d));
        // CB C5 02B5
        gbc.setState(0x8a56, 0x5a3e, 0x65e0, 0x8c7, 0xa8a4, 0x5b62, 0x1, 0x0);
        gbc.writeMem(0x8a56, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5a3e, gbc.sp());
        EXPECT(0x8a58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a56));
        EXPECT(0xc5, gbc.readMem(0x8a57));
        // CB C5 02B6
        gbc.setState(0x4f29, 0x233a, 0x7590, 0xdca2, 0xb271, 0x8721, 0x1, 0x0);
        gbc.writeMem(0x4f29, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x233a, gbc.sp());
        EXPECT(0x4f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02B7
        gbc.setState(0x69e8, 0x9c60, 0x67c0, 0xb66e, 0x3cf3, 0xb6ae, 0x0, 0x0);
        gbc.writeMem(0x69e8, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9c60, gbc.sp());
        EXPECT(0x69ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02B8
        gbc.setState(0x55d, 0x189a, 0xfb20, 0xd15a, 0x88d5, 0xc51b, 0x1, 0x1);
        gbc.writeMem(0x55d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x189a, gbc.sp());
        EXPECT(0x55f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02B9
        gbc.setState(0xee12, 0xea37, 0x7fa0, 0xf73a, 0x7653, 0xe, 0x1, 0x1);
        gbc.writeMem(0xee12, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xea37, gbc.sp());
        EXPECT(0xee14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee12));
        EXPECT(0xc5, gbc.readMem(0xee13));
        // CB C5 02BA
        gbc.setState(0x13f3, 0xaa79, 0x5680, 0x59cb, 0xf6, 0xc060, 0x0, 0x1);
        gbc.writeMem(0x13f3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xaa79, gbc.sp());
        EXPECT(0x13f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02BB
        gbc.setState(0x85b6, 0x7e71, 0x9370, 0xef01, 0x5a91, 0x6bd8, 0x1, 0x0);
        gbc.writeMem(0x85b6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7e71, gbc.sp());
        EXPECT(0x85b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b6));
        EXPECT(0xc5, gbc.readMem(0x85b7));
        // CB C5 02BC
        gbc.setState(0x9362, 0x76d5, 0xa950, 0x5ef2, 0x5e6b, 0x789f, 0x0, 0x0);
        gbc.writeMem(0x9362, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x76d5, gbc.sp());
        EXPECT(0x9364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9362));
        EXPECT(0xc5, gbc.readMem(0x9363));
        // CB C5 02BD
        gbc.setState(0xd1f2, 0xf763, 0x1b30, 0x5782, 0x6e66, 0x913d, 0x0, 0x0);
        gbc.writeMem(0xd1f2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf763, gbc.sp());
        EXPECT(0xd1f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f2));
        EXPECT(0xc5, gbc.readMem(0xd1f3));
        // CB C5 02BE
        gbc.setState(0x271f, 0x9866, 0x77e0, 0xde23, 0x5e33, 0x9499, 0x1, 0x1);
        gbc.writeMem(0x271f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9866, gbc.sp());
        EXPECT(0x2721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02BF
        gbc.setState(0x6db4, 0x4541, 0xef0, 0xde24, 0x6d41, 0xf0bb, 0x1, 0x0);
        gbc.writeMem(0x6db4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4541, gbc.sp());
        EXPECT(0x6db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02C0
        gbc.setState(0xdf3, 0x81df, 0x1eb0, 0x5d5c, 0x47ce, 0xf4a8, 0x0, 0x0);
        gbc.writeMem(0xdf3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x81df, gbc.sp());
        EXPECT(0xdf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02C1
        gbc.setState(0x2b7c, 0xb8e0, 0x4510, 0xa86e, 0xc8b8, 0x97b0, 0x1, 0x0);
        gbc.writeMem(0x2b7c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb8e0, gbc.sp());
        EXPECT(0x2b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02C2
        gbc.setState(0xbd07, 0xbc52, 0xaa90, 0x8bb1, 0xb227, 0xe51, 0x1, 0x0);
        gbc.writeMem(0xbd07, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbc52, gbc.sp());
        EXPECT(0xbd09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd07));
        EXPECT(0xc5, gbc.readMem(0xbd08));
        // CB C5 02C3
        gbc.setState(0xcc1d, 0x844, 0x2ad0, 0x7d94, 0xce94, 0x4c1, 0x1, 0x1);
        gbc.writeMem(0xcc1d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x844, gbc.sp());
        EXPECT(0xcc1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc1d));
        EXPECT(0xc5, gbc.readMem(0xcc1e));
        // CB C5 02C4
        gbc.setState(0x5d3d, 0x9888, 0x8590, 0xe5da, 0xb163, 0x7200, 0x0, 0x1);
        gbc.writeMem(0x5d3d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9888, gbc.sp());
        EXPECT(0x5d3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02C6
        gbc.setState(0x2799, 0x92a3, 0x1f60, 0xf9a4, 0xf5a9, 0x8ef1, 0x1, 0x0);
        gbc.writeMem(0x2799, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x92a3, gbc.sp());
        EXPECT(0x279b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02C7
        gbc.setState(0x5bd0, 0x2652, 0xdd00, 0xc135, 0xb12c, 0x1912, 0x0, 0x0);
        gbc.writeMem(0x5bd0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2652, gbc.sp());
        EXPECT(0x5bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02C8
        gbc.setState(0x46dc, 0xa584, 0x2a40, 0x11dc, 0xd730, 0x6519, 0x1, 0x0);
        gbc.writeMem(0x46dc, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa584, gbc.sp());
        EXPECT(0x46de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02C9
        gbc.setState(0xcbda, 0x437d, 0xbc70, 0xe776, 0xca97, 0x9b9a, 0x0, 0x1);
        gbc.writeMem(0xcbda, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x437d, gbc.sp());
        EXPECT(0xcbdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbda));
        EXPECT(0xc5, gbc.readMem(0xcbdb));
        // CB C5 02CA
        gbc.setState(0x5ab6, 0xa180, 0xa9d0, 0x975a, 0xb79c, 0x4cab, 0x0, 0x0);
        gbc.writeMem(0x5ab6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa180, gbc.sp());
        EXPECT(0x5ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02CB
        gbc.setState(0x3782, 0x6487, 0x7130, 0x5786, 0x22a6, 0x7193, 0x1, 0x1);
        gbc.writeMem(0x3782, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6487, gbc.sp());
        EXPECT(0x3784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02CC
        gbc.setState(0xd5d5, 0x4358, 0x1d60, 0x574d, 0x8690, 0x2a06, 0x1, 0x0);
        gbc.writeMem(0xd5d5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4358, gbc.sp());
        EXPECT(0xd5d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d5));
        EXPECT(0xc5, gbc.readMem(0xd5d6));
        // CB C5 02CE
        gbc.setState(0x523f, 0x81d7, 0x9ad0, 0x18f9, 0xb04e, 0x4ed5, 0x0, 0x0);
        gbc.writeMem(0x523f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x81d7, gbc.sp());
        EXPECT(0x5241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02CF
        gbc.setState(0xd001, 0x1936, 0x2cc0, 0x8716, 0xe782, 0x4d6c, 0x0, 0x1);
        gbc.writeMem(0xd001, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1936, gbc.sp());
        EXPECT(0xd003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd001));
        EXPECT(0xc5, gbc.readMem(0xd002));
        // CB C5 02D0
        gbc.setState(0x1bc7, 0x18a, 0x7090, 0x54e3, 0xbba7, 0x4f2c, 0x0, 0x0);
        gbc.writeMem(0x1bc7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x18a, gbc.sp());
        EXPECT(0x1bc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02D1
        gbc.setState(0x8179, 0xfbae, 0x52b0, 0x1a52, 0x7c1f, 0xb4ca, 0x1, 0x1);
        gbc.writeMem(0x8179, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfbae, gbc.sp());
        EXPECT(0x817b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8179));
        EXPECT(0xc5, gbc.readMem(0x817a));
        // CB C5 02D2
        gbc.setState(0xb334, 0x2577, 0xbae0, 0xd83b, 0xb6b1, 0x227, 0x1, 0x1);
        gbc.writeMem(0xb334, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2577, gbc.sp());
        EXPECT(0xb336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb334));
        EXPECT(0xc5, gbc.readMem(0xb335));
        // CB C5 02D3
        gbc.setState(0x1ee4, 0xa4e2, 0x2480, 0x1d3, 0x13b5, 0x9ff7, 0x0, 0x1);
        gbc.writeMem(0x1ee4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa4e2, gbc.sp());
        EXPECT(0x1ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02D4
        gbc.setState(0xacfe, 0xbf0a, 0x76f0, 0x27f5, 0xbe7, 0x4deb, 0x0, 0x0);
        gbc.writeMem(0xacfe, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbf0a, gbc.sp());
        EXPECT(0xad00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacfe));
        EXPECT(0xc5, gbc.readMem(0xacff));
        // CB C5 02D5
        gbc.setState(0x6e33, 0xb4fe, 0x9c20, 0x7da4, 0x2161, 0x99c2, 0x0, 0x1);
        gbc.writeMem(0x6e33, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb4fe, gbc.sp());
        EXPECT(0x6e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02D6
        gbc.setState(0xe443, 0xc6d5, 0x7600, 0x1f09, 0x27c5, 0x6a9d, 0x1, 0x1);
        gbc.writeMem(0xe443, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc6d5, gbc.sp());
        EXPECT(0xe445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe443));
        EXPECT(0xc5, gbc.readMem(0xe444));
        // CB C5 02D8
        gbc.setState(0xa7b, 0x5765, 0x8700, 0x7385, 0xeddc, 0xeef6, 0x0, 0x0);
        gbc.writeMem(0xa7b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5765, gbc.sp());
        EXPECT(0xa7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02D9
        gbc.setState(0x6112, 0x2a1d, 0xf3a0, 0x4fe8, 0x503b, 0x4337, 0x0, 0x0);
        gbc.writeMem(0x6112, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2a1d, gbc.sp());
        EXPECT(0x6114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02DA
        gbc.setState(0x5cba, 0x1cbd, 0x1c0, 0xac4c, 0x5f73, 0x55c5, 0x0, 0x1);
        gbc.writeMem(0x5cba, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1cbd, gbc.sp());
        EXPECT(0x5cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02DB
        gbc.setState(0x7900, 0x4c09, 0x2a00, 0x8b06, 0xe068, 0x8dba, 0x0, 0x1);
        gbc.writeMem(0x7900, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4c09, gbc.sp());
        EXPECT(0x7902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02DC
        gbc.setState(0x7a14, 0x4467, 0xe200, 0xd648, 0x37c2, 0x872, 0x0, 0x1);
        gbc.writeMem(0x7a14, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4467, gbc.sp());
        EXPECT(0x7a16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02DD
        gbc.setState(0xdec5, 0xaefd, 0xf030, 0xa5cc, 0x6973, 0x147d, 0x0, 0x0);
        gbc.writeMem(0xdec5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xaefd, gbc.sp());
        EXPECT(0xdec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdec5));
        EXPECT(0xc5, gbc.readMem(0xdec6));
        // CB C5 02DE
        gbc.setState(0xc8e4, 0x30b9, 0x9730, 0x556f, 0xff98, 0x4637, 0x0, 0x0);
        gbc.writeMem(0xc8e4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x30b9, gbc.sp());
        EXPECT(0xc8e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e4));
        EXPECT(0xc5, gbc.readMem(0xc8e5));
        // CB C5 02DF
        gbc.setState(0x35a0, 0xee53, 0x70b0, 0xd716, 0x7839, 0xa837, 0x0, 0x1);
        gbc.writeMem(0x35a0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xee53, gbc.sp());
        EXPECT(0x35a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02E0
        gbc.setState(0x24af, 0x688c, 0x1b20, 0xd72f, 0x8738, 0x8ab0, 0x1, 0x0);
        gbc.writeMem(0x24af, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x688c, gbc.sp());
        EXPECT(0x24b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02E1
        gbc.setState(0x9b0a, 0x4921, 0x5590, 0xa739, 0xcb22, 0xa749, 0x1, 0x1);
        gbc.writeMem(0x9b0a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4921, gbc.sp());
        EXPECT(0x9b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0a));
        EXPECT(0xc5, gbc.readMem(0x9b0b));
        // CB C5 02E2
        gbc.setState(0xa99b, 0x8cb4, 0xf800, 0xbe5, 0x5166, 0x8bca, 0x0, 0x0);
        gbc.writeMem(0xa99b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8cb4, gbc.sp());
        EXPECT(0xa99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99b));
        EXPECT(0xc5, gbc.readMem(0xa99c));
        // CB C5 02E3
        gbc.setState(0x45c9, 0x5f93, 0x63a0, 0xc89e, 0x606a, 0xe3e3, 0x0, 0x1);
        gbc.writeMem(0x45c9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5f93, gbc.sp());
        EXPECT(0x45cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02E4
        gbc.setState(0x32e3, 0x140, 0x84a0, 0x4e5f, 0x41ca, 0x72e5, 0x1, 0x1);
        gbc.writeMem(0x32e3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x140, gbc.sp());
        EXPECT(0x32e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02E5
        gbc.setState(0x49b7, 0x5c93, 0xfd00, 0xe31e, 0x85fd, 0xc359, 0x0, 0x1);
        gbc.writeMem(0x49b7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5c93, gbc.sp());
        EXPECT(0x49b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02E6
        gbc.setState(0xcceb, 0x732f, 0xc0b0, 0x3409, 0x924a, 0xc2a3, 0x0, 0x1);
        gbc.writeMem(0xcceb, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x732f, gbc.sp());
        EXPECT(0xcced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcceb));
        EXPECT(0xc5, gbc.readMem(0xccec));
        // CB C5 02E7
        gbc.setState(0xa971, 0xc4e7, 0xf810, 0xc7a6, 0x7722, 0x412f, 0x0, 0x1);
        gbc.writeMem(0xa971, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc4e7, gbc.sp());
        EXPECT(0xa973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa971));
        EXPECT(0xc5, gbc.readMem(0xa972));
        // CB C5 02E8
        gbc.setState(0x1045, 0xfc76, 0x3bd0, 0x9ce3, 0xedea, 0x8e61, 0x0, 0x1);
        gbc.writeMem(0x1045, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfc76, gbc.sp());
        EXPECT(0x1047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02E9
        gbc.setState(0xd08d, 0xead3, 0xfb90, 0xee54, 0x1a6f, 0x15ec, 0x0, 0x0);
        gbc.writeMem(0xd08d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xead3, gbc.sp());
        EXPECT(0xd08f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd08d));
        EXPECT(0xc5, gbc.readMem(0xd08e));
        // CB C5 02EA
        gbc.setState(0x9fce, 0xb0a5, 0x48b0, 0xd614, 0x4b5f, 0x9a6d, 0x1, 0x1);
        gbc.writeMem(0x9fce, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb0a5, gbc.sp());
        EXPECT(0x9fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fce));
        EXPECT(0xc5, gbc.readMem(0x9fcf));
        // CB C5 02EB
        gbc.setState(0x9fef, 0x1733, 0xd7b0, 0x2dea, 0xe3a5, 0x287d, 0x0, 0x1);
        gbc.writeMem(0x9fef, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1733, gbc.sp());
        EXPECT(0x9ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fef));
        EXPECT(0xc5, gbc.readMem(0x9ff0));
        // CB C5 02EC
        gbc.setState(0xcccd, 0x93f3, 0x2070, 0xb49, 0xd63e, 0xec2a, 0x0, 0x1);
        gbc.writeMem(0xcccd, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x93f3, gbc.sp());
        EXPECT(0xcccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcccd));
        EXPECT(0xc5, gbc.readMem(0xccce));
        // CB C5 02ED
        gbc.setState(0xc2a3, 0xfc71, 0x6100, 0xc4e0, 0xe8ce, 0xe1a0, 0x0, 0x0);
        gbc.writeMem(0xc2a3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfc71, gbc.sp());
        EXPECT(0xc2a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a3));
        EXPECT(0xc5, gbc.readMem(0xc2a4));
        // CB C5 02EE
        gbc.setState(0xc57d, 0x95a, 0xc730, 0x61be, 0xc676, 0x2b0c, 0x0, 0x0);
        gbc.writeMem(0xc57d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x95a, gbc.sp());
        EXPECT(0xc57f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc57d));
        EXPECT(0xc5, gbc.readMem(0xc57e));
        // CB C5 02EF
        gbc.setState(0x43f5, 0xda95, 0x33a0, 0xb718, 0x96b9, 0x3413, 0x0, 0x1);
        gbc.writeMem(0x43f5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xda95, gbc.sp());
        EXPECT(0x43f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02F0
        gbc.setState(0x6ca2, 0x11e4, 0xfc30, 0xbe43, 0xdf41, 0xbffe, 0x1, 0x0);
        gbc.writeMem(0x6ca2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x11e4, gbc.sp());
        EXPECT(0x6ca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02F1
        gbc.setState(0x11d8, 0xda7b, 0x730, 0xa4ad, 0x24ba, 0x4aa7, 0x0, 0x0);
        gbc.writeMem(0x11d8, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xda7b, gbc.sp());
        EXPECT(0x11da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02F3
        gbc.setState(0x6cd5, 0x1f77, 0x7c0, 0x7c01, 0xbf08, 0xaff6, 0x0, 0x0);
        gbc.writeMem(0x6cd5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1f77, gbc.sp());
        EXPECT(0x6cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02F4
        gbc.setState(0xa92, 0x2cf0, 0xdbb0, 0xbb25, 0x76d7, 0x2e8f, 0x0, 0x1);
        gbc.writeMem(0xa92, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2cf0, gbc.sp());
        EXPECT(0xa94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02F5
        gbc.setState(0xe5ae, 0xd0ea, 0xf7c0, 0x45ac, 0xe36e, 0x3ce2, 0x1, 0x0);
        gbc.writeMem(0xe5ae, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd0ea, gbc.sp());
        EXPECT(0xe5b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ae));
        EXPECT(0xc5, gbc.readMem(0xe5af));
        // CB C5 02F6
        gbc.setState(0x9487, 0x212b, 0x7fd0, 0x12ee, 0xbfd, 0x5692, 0x0, 0x1);
        gbc.writeMem(0x9487, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x212b, gbc.sp());
        EXPECT(0x9489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9487));
        EXPECT(0xc5, gbc.readMem(0x9488));
        // CB C5 02F7
        gbc.setState(0x26d3, 0x404a, 0x2970, 0x83ed, 0x7322, 0xa34a, 0x1, 0x0);
        gbc.writeMem(0x26d3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x404a, gbc.sp());
        EXPECT(0x26d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02F8
        gbc.setState(0xb25a, 0x60a8, 0xdf20, 0xf31c, 0x2e2, 0x38b, 0x0, 0x0);
        gbc.writeMem(0xb25a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x60a8, gbc.sp());
        EXPECT(0xb25c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb25a));
        EXPECT(0xc5, gbc.readMem(0xb25b));
        // CB C5 02F9
        gbc.setState(0x881e, 0x30e, 0x2b70, 0xb3de, 0x7e93, 0xf176, 0x1, 0x1);
        gbc.writeMem(0x881e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x30e, gbc.sp());
        EXPECT(0x8820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881e));
        EXPECT(0xc5, gbc.readMem(0x881f));
        // CB C5 02FA
        gbc.setState(0xbf6c, 0x59ce, 0x6880, 0xe5b2, 0xf528, 0x9dae, 0x1, 0x0);
        gbc.writeMem(0xbf6c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x59ce, gbc.sp());
        EXPECT(0xbf6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf6c));
        EXPECT(0xc5, gbc.readMem(0xbf6d));
        // CB C5 02FB
        gbc.setState(0x4ffc, 0xdb01, 0x9770, 0x8074, 0x24a7, 0x714d, 0x1, 0x1);
        gbc.writeMem(0x4ffc, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xdb01, gbc.sp());
        EXPECT(0x4ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02FC
        gbc.setState(0x14f3, 0xa40d, 0x6030, 0x9e0d, 0xee66, 0xe38d, 0x1, 0x0);
        gbc.writeMem(0x14f3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa40d, gbc.sp());
        EXPECT(0x14f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 02FD
        gbc.setState(0x7108, 0x64c2, 0xf260, 0x6413, 0x64b8, 0xd1d2, 0x0, 0x0);
        gbc.writeMem(0x7108, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x64c2, gbc.sp());
        EXPECT(0x710a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 02FF
        gbc.setState(0x3562, 0xe42d, 0xcb40, 0x1da1, 0x48d1, 0xb45b, 0x1, 0x1);
        gbc.writeMem(0x3562, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe42d, gbc.sp());
        EXPECT(0x3564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0300
        gbc.setState(0xde2a, 0xd4ec, 0x23a0, 0x6919, 0x1a76, 0x4fc6, 0x0, 0x0);
        gbc.writeMem(0xde2a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd4ec, gbc.sp());
        EXPECT(0xde2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde2a));
        EXPECT(0xc5, gbc.readMem(0xde2b));
        // CB C5 0301
        gbc.setState(0x5b39, 0xb467, 0xc190, 0x509d, 0x41c2, 0x51d6, 0x0, 0x0);
        gbc.writeMem(0x5b39, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb467, gbc.sp());
        EXPECT(0x5b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0303
        gbc.setState(0x2690, 0xc5c9, 0x6170, 0x1e11, 0xe938, 0xc160, 0x1, 0x0);
        gbc.writeMem(0x2690, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc5c9, gbc.sp());
        EXPECT(0x2692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0304
        gbc.setState(0x6fb9, 0x70f1, 0xffe0, 0x49ee, 0x242b, 0x15dd, 0x0, 0x1);
        gbc.writeMem(0x6fb9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x70f1, gbc.sp());
        EXPECT(0x6fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0305
        gbc.setState(0x8e65, 0x9c4f, 0x8a80, 0xb885, 0xd454, 0xc6f, 0x0, 0x1);
        gbc.writeMem(0x8e65, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9c4f, gbc.sp());
        EXPECT(0x8e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e65));
        EXPECT(0xc5, gbc.readMem(0x8e66));
        // CB C5 0306
        gbc.setState(0xd0f3, 0x32a4, 0xb220, 0x8db2, 0x682a, 0x125f, 0x0, 0x1);
        gbc.writeMem(0xd0f3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x32a4, gbc.sp());
        EXPECT(0xd0f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f3));
        EXPECT(0xc5, gbc.readMem(0xd0f4));
        // CB C5 0307
        gbc.setState(0x50e6, 0xe615, 0xb170, 0xef97, 0xa186, 0x39b2, 0x1, 0x0);
        gbc.writeMem(0x50e6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe615, gbc.sp());
        EXPECT(0x50e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0308
        gbc.setState(0x959f, 0x9c60, 0xbf70, 0x966b, 0xf348, 0x688d, 0x0, 0x0);
        gbc.writeMem(0x959f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9c60, gbc.sp());
        EXPECT(0x95a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x959f));
        EXPECT(0xc5, gbc.readMem(0x95a0));
        // CB C5 0309
        gbc.setState(0x86b, 0x2724, 0x6e50, 0xecd7, 0x2d05, 0x7a66, 0x1, 0x1);
        gbc.writeMem(0x86b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2724, gbc.sp());
        EXPECT(0x86d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 030A
        gbc.setState(0x31a0, 0xc186, 0xc0c0, 0xf802, 0x7226, 0x73d0, 0x1, 0x1);
        gbc.writeMem(0x31a0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc186, gbc.sp());
        EXPECT(0x31a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 030B
        gbc.setState(0x5108, 0x1b06, 0xf000, 0x74ba, 0x2972, 0x4000, 0x1, 0x1);
        gbc.writeMem(0x5108, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1b06, gbc.sp());
        EXPECT(0x510a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 030C
        gbc.setState(0xe9ce, 0xe61, 0x9540, 0x95d7, 0xc771, 0x8daf, 0x1, 0x0);
        gbc.writeMem(0xe9ce, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe61, gbc.sp());
        EXPECT(0xe9d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ce));
        EXPECT(0xc5, gbc.readMem(0xe9cf));
        // CB C5 030D
        gbc.setState(0x1199, 0xebc2, 0x10a0, 0x1032, 0x1190, 0xffb9, 0x1, 0x0);
        gbc.writeMem(0x1199, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xebc2, gbc.sp());
        EXPECT(0x119b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 030E
        gbc.setState(0x73e5, 0xe346, 0x20c0, 0xa9d7, 0x9032, 0xc000, 0x0, 0x1);
        gbc.writeMem(0x73e5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe346, gbc.sp());
        EXPECT(0x73e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 030F
        gbc.setState(0xa649, 0x6a2f, 0xf760, 0xb2a, 0x6af3, 0x8ba5, 0x1, 0x1);
        gbc.writeMem(0xa649, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6a2f, gbc.sp());
        EXPECT(0xa64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa649));
        EXPECT(0xc5, gbc.readMem(0xa64a));
        // CB C5 0310
        gbc.setState(0x451, 0x61da, 0xdce0, 0x738a, 0xcaf, 0x98c3, 0x1, 0x1);
        gbc.writeMem(0x451, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x61da, gbc.sp());
        EXPECT(0x453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0312
        gbc.setState(0x6b89, 0xc042, 0x80, 0xb120, 0xf5ed, 0x367f, 0x0, 0x0);
        gbc.writeMem(0x6b89, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc042, gbc.sp());
        EXPECT(0x6b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0313
        gbc.setState(0xb497, 0x9c32, 0xc2d0, 0xefba, 0xfd26, 0x4057, 0x1, 0x0);
        gbc.writeMem(0xb497, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9c32, gbc.sp());
        EXPECT(0xb499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb497));
        EXPECT(0xc5, gbc.readMem(0xb498));
        // CB C5 0315
        gbc.setState(0x50a0, 0x90c7, 0x5db0, 0xe675, 0x1a7b, 0x2cb4, 0x1, 0x0);
        gbc.writeMem(0x50a0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x90c7, gbc.sp());
        EXPECT(0x50a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0316
        gbc.setState(0xb366, 0xa5e5, 0xec70, 0x7b19, 0x194d, 0x9728, 0x1, 0x0);
        gbc.writeMem(0xb366, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa5e5, gbc.sp());
        EXPECT(0xb368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb366));
        EXPECT(0xc5, gbc.readMem(0xb367));
        // CB C5 0317
        gbc.setState(0x57a, 0x6340, 0x7af0, 0x7a3d, 0x57d2, 0x5878, 0x0, 0x0);
        gbc.writeMem(0x57a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6340, gbc.sp());
        EXPECT(0x57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0318
        gbc.setState(0x7154, 0x2c12, 0x3e80, 0x606f, 0xa9a, 0xbc38, 0x0, 0x1);
        gbc.writeMem(0x7154, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2c12, gbc.sp());
        EXPECT(0x7156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0319
        gbc.setState(0xa8f1, 0xa5d5, 0x3df0, 0xc794, 0xc7e1, 0xe18b, 0x1, 0x1);
        gbc.writeMem(0xa8f1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa5d5, gbc.sp());
        EXPECT(0xa8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f1));
        EXPECT(0xc5, gbc.readMem(0xa8f2));
        // CB C5 031B
        gbc.setState(0x303e, 0xb558, 0x66d0, 0xc040, 0xef4f, 0xde91, 0x0, 0x0);
        gbc.writeMem(0x303e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb558, gbc.sp());
        EXPECT(0x3040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 031C
        gbc.setState(0x5cf1, 0xa4c0, 0x9460, 0x669a, 0x2199, 0x5059, 0x1, 0x0);
        gbc.writeMem(0x5cf1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa4c0, gbc.sp());
        EXPECT(0x5cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 031D
        gbc.setState(0xcfab, 0x7052, 0xa7a0, 0x1b45, 0xec7e, 0xd682, 0x0, 0x0);
        gbc.writeMem(0xcfab, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7052, gbc.sp());
        EXPECT(0xcfad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfab));
        EXPECT(0xc5, gbc.readMem(0xcfac));
        // CB C5 031E
        gbc.setState(0x26ed, 0xb634, 0x9070, 0x25d3, 0x5f41, 0x5c85, 0x0, 0x0);
        gbc.writeMem(0x26ed, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb634, gbc.sp());
        EXPECT(0x26ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 031F
        gbc.setState(0x2d5e, 0x2cd5, 0x5130, 0xbf2b, 0xff12, 0xfb57, 0x0, 0x1);
        gbc.writeMem(0x2d5e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2cd5, gbc.sp());
        EXPECT(0x2d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0320
        gbc.setState(0x8643, 0x6e54, 0x5680, 0x5afe, 0xe7d3, 0x504e, 0x1, 0x1);
        gbc.writeMem(0x8643, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6e54, gbc.sp());
        EXPECT(0x8645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8643));
        EXPECT(0xc5, gbc.readMem(0x8644));
        // CB C5 0321
        gbc.setState(0x52f, 0x5bbc, 0x37e0, 0x48b8, 0xc8f0, 0xf74b, 0x1, 0x0);
        gbc.writeMem(0x52f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5bbc, gbc.sp());
        EXPECT(0x531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0322
        gbc.setState(0x45f9, 0x3fae, 0xfb00, 0x278f, 0xb293, 0x320f, 0x1, 0x0);
        gbc.writeMem(0x45f9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3fae, gbc.sp());
        EXPECT(0x45fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0323
        gbc.setState(0xe29d, 0x9249, 0x23a0, 0x6401, 0x46f8, 0x64c, 0x1, 0x1);
        gbc.writeMem(0xe29d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9249, gbc.sp());
        EXPECT(0xe29f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe29d));
        EXPECT(0xc5, gbc.readMem(0xe29e));
        // CB C5 0324
        gbc.setState(0xaf28, 0xeca0, 0x5960, 0x4bea, 0x68d7, 0x18cf, 0x0, 0x0);
        gbc.writeMem(0xaf28, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xeca0, gbc.sp());
        EXPECT(0xaf2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf28));
        EXPECT(0xc5, gbc.readMem(0xaf29));
        // CB C5 0325
        gbc.setState(0x1b6b, 0x6338, 0x1fb0, 0xa31d, 0x5889, 0xb5c8, 0x0, 0x1);
        gbc.writeMem(0x1b6b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6338, gbc.sp());
        EXPECT(0x1b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0326
        gbc.setState(0xc791, 0x91cf, 0xe870, 0x7c64, 0xddcb, 0x2219, 0x1, 0x1);
        gbc.writeMem(0xc791, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x91cf, gbc.sp());
        EXPECT(0xc793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc791));
        EXPECT(0xc5, gbc.readMem(0xc792));
        // CB C5 0327
        gbc.setState(0xd038, 0x2421, 0xd230, 0x92c1, 0xf47a, 0x468b, 0x1, 0x0);
        gbc.writeMem(0xd038, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2421, gbc.sp());
        EXPECT(0xd03a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd038));
        EXPECT(0xc5, gbc.readMem(0xd039));
        // CB C5 0328
        gbc.setState(0x18c6, 0x6522, 0x4e00, 0x11b4, 0xa675, 0xf90c, 0x1, 0x1);
        gbc.writeMem(0x18c6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6522, gbc.sp());
        EXPECT(0x18c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0329
        gbc.setState(0x7e13, 0x340f, 0xf760, 0xcc0b, 0x6132, 0xbd27, 0x0, 0x0);
        gbc.writeMem(0x7e13, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x340f, gbc.sp());
        EXPECT(0x7e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 032B
        gbc.setState(0x612a, 0xb61d, 0x3800, 0x256d, 0xca15, 0x1df, 0x1, 0x1);
        gbc.writeMem(0x612a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb61d, gbc.sp());
        EXPECT(0x612c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 032C
        gbc.setState(0x33a, 0xa446, 0x6510, 0x2eda, 0x61fe, 0xf4af, 0x1, 0x0);
        gbc.writeMem(0x33a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa446, gbc.sp());
        EXPECT(0x33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 032D
        gbc.setState(0xed1b, 0x3712, 0x12a0, 0x56e5, 0xeb24, 0xccf9, 0x1, 0x0);
        gbc.writeMem(0xed1b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3712, gbc.sp());
        EXPECT(0xed1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed1b));
        EXPECT(0xc5, gbc.readMem(0xed1c));
        // CB C5 032E
        gbc.setState(0xefe5, 0x81fd, 0x9460, 0x8685, 0x1207, 0x5fa8, 0x1, 0x0);
        gbc.writeMem(0xefe5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x81fd, gbc.sp());
        EXPECT(0xefe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe5));
        EXPECT(0xc5, gbc.readMem(0xefe6));
        // CB C5 032F
        gbc.setState(0xed1b, 0xc1d1, 0xf940, 0x608d, 0x8711, 0x5d0, 0x1, 0x0);
        gbc.writeMem(0xed1b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc1d1, gbc.sp());
        EXPECT(0xed1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed1b));
        EXPECT(0xc5, gbc.readMem(0xed1c));
        // CB C5 0330
        gbc.setState(0xdb3a, 0x2a20, 0xfcf0, 0x159, 0x761d, 0x1237, 0x1, 0x0);
        gbc.writeMem(0xdb3a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2a20, gbc.sp());
        EXPECT(0xdb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3a));
        EXPECT(0xc5, gbc.readMem(0xdb3b));
        // CB C5 0331
        gbc.setState(0x7c56, 0xa80e, 0xba10, 0x617f, 0x643b, 0xfc86, 0x1, 0x1);
        gbc.writeMem(0x7c56, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa80e, gbc.sp());
        EXPECT(0x7c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0332
        gbc.setState(0x958a, 0xba79, 0x890, 0xa69a, 0x218d, 0xf412, 0x0, 0x0);
        gbc.writeMem(0x958a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xba79, gbc.sp());
        EXPECT(0x958c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x958a));
        EXPECT(0xc5, gbc.readMem(0x958b));
        // CB C5 0333
        gbc.setState(0xd263, 0x8734, 0x3070, 0x26fa, 0xb381, 0xa8ce, 0x1, 0x0);
        gbc.writeMem(0xd263, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8734, gbc.sp());
        EXPECT(0xd265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd263));
        EXPECT(0xc5, gbc.readMem(0xd264));
        // CB C5 0335
        gbc.setState(0xe055, 0x113a, 0xc330, 0xa781, 0x6979, 0x2d47, 0x0, 0x0);
        gbc.writeMem(0xe055, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x113a, gbc.sp());
        EXPECT(0xe057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe055));
        EXPECT(0xc5, gbc.readMem(0xe056));
        // CB C5 0336
        gbc.setState(0xd03c, 0xd938, 0xa650, 0x9123, 0xcaa0, 0x182e, 0x1, 0x1);
        gbc.writeMem(0xd03c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd938, gbc.sp());
        EXPECT(0xd03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03c));
        EXPECT(0xc5, gbc.readMem(0xd03d));
        // CB C5 0337
        gbc.setState(0x119d, 0xd373, 0xd970, 0xe7cf, 0xef7f, 0x8175, 0x0, 0x1);
        gbc.writeMem(0x119d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd373, gbc.sp());
        EXPECT(0x119f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0338
        gbc.setState(0x1558, 0x3322, 0xe090, 0x3ac1, 0x7bb6, 0xb040, 0x0, 0x1);
        gbc.writeMem(0x1558, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3322, gbc.sp());
        EXPECT(0x155a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0339
        gbc.setState(0x9d78, 0xf7cd, 0x8f60, 0x15d0, 0xa7f3, 0x3f76, 0x1, 0x0);
        gbc.writeMem(0x9d78, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf7cd, gbc.sp());
        EXPECT(0x9d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d78));
        EXPECT(0xc5, gbc.readMem(0x9d79));
        // CB C5 033A
        gbc.setState(0x10ae, 0xbf54, 0x9b40, 0x6a67, 0x6d0b, 0xbd32, 0x1, 0x0);
        gbc.writeMem(0x10ae, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbf54, gbc.sp());
        EXPECT(0x10b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 033B
        gbc.setState(0x896, 0xda20, 0x9100, 0x4249, 0xf73f, 0xacc4, 0x0, 0x0);
        gbc.writeMem(0x896, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xda20, gbc.sp());
        EXPECT(0x898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 033C
        gbc.setState(0x3a05, 0xbb43, 0x260, 0xc58b, 0x550, 0x1bbb, 0x0, 0x0);
        gbc.writeMem(0x3a05, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbb43, gbc.sp());
        EXPECT(0x3a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 033D
        gbc.setState(0x64af, 0x5ec1, 0xf370, 0xba7, 0xe52, 0x9333, 0x0, 0x0);
        gbc.writeMem(0x64af, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5ec1, gbc.sp());
        EXPECT(0x64b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 033E
        gbc.setState(0x25bf, 0xf6b, 0x94b0, 0xd50c, 0xcbdd, 0xbbcd, 0x1, 0x1);
        gbc.writeMem(0x25bf, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf6b, gbc.sp());
        EXPECT(0x25c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 033F
        gbc.setState(0x8804, 0xb21f, 0x4840, 0xbda, 0x2315, 0x99cb, 0x0, 0x1);
        gbc.writeMem(0x8804, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb21f, gbc.sp());
        EXPECT(0x8806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8804));
        EXPECT(0xc5, gbc.readMem(0x8805));
        // CB C5 0340
        gbc.setState(0xb256, 0xef6c, 0xcda0, 0xb117, 0x8c94, 0xe71, 0x0, 0x1);
        gbc.writeMem(0xb256, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xef6c, gbc.sp());
        EXPECT(0xb258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb256));
        EXPECT(0xc5, gbc.readMem(0xb257));
        // CB C5 0342
        gbc.setState(0x6c6c, 0x2921, 0x3d90, 0x8f7c, 0xa88, 0xc9ec, 0x0, 0x1);
        gbc.writeMem(0x6c6c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2921, gbc.sp());
        EXPECT(0x6c6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0343
        gbc.setState(0xb5cb, 0x980, 0x97d0, 0x7340, 0x737c, 0x3f88, 0x1, 0x1);
        gbc.writeMem(0xb5cb, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x980, gbc.sp());
        EXPECT(0xb5cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5cb));
        EXPECT(0xc5, gbc.readMem(0xb5cc));
        // CB C5 0344
        gbc.setState(0x58c2, 0x179e, 0xc7b0, 0xe0f5, 0x4174, 0x2bee, 0x0, 0x1);
        gbc.writeMem(0x58c2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x179e, gbc.sp());
        EXPECT(0x58c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0345
        gbc.setState(0x1096, 0x3ba6, 0x2050, 0x1d0d, 0xc554, 0x2559, 0x1, 0x0);
        gbc.writeMem(0x1096, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3ba6, gbc.sp());
        EXPECT(0x1098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0346
        gbc.setState(0x32aa, 0xf3d4, 0xb7a0, 0xb334, 0xa75e, 0x13ca, 0x0, 0x0);
        gbc.writeMem(0x32aa, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf3d4, gbc.sp());
        EXPECT(0x32ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0347
        gbc.setState(0x9fcd, 0xfdd4, 0x7230, 0x10f4, 0x8cb5, 0xdc68, 0x0, 0x1);
        gbc.writeMem(0x9fcd, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfdd4, gbc.sp());
        EXPECT(0x9fcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fcd));
        EXPECT(0xc5, gbc.readMem(0x9fce));
        // CB C5 0348
        gbc.setState(0xc1de, 0xf902, 0xa440, 0xf949, 0xc641, 0x9451, 0x0, 0x1);
        gbc.writeMem(0xc1de, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf902, gbc.sp());
        EXPECT(0xc1e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1de));
        EXPECT(0xc5, gbc.readMem(0xc1df));
        // CB C5 0349
        gbc.setState(0x497c, 0x85c6, 0x8a10, 0x668d, 0x786a, 0xeb48, 0x1, 0x0);
        gbc.writeMem(0x497c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x85c6, gbc.sp());
        EXPECT(0x497e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 034A
        gbc.setState(0xbe38, 0xa567, 0xd080, 0x8604, 0xe57, 0x8a16, 0x1, 0x1);
        gbc.writeMem(0xbe38, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa567, gbc.sp());
        EXPECT(0xbe3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe38));
        EXPECT(0xc5, gbc.readMem(0xbe39));
        // CB C5 034B
        gbc.setState(0xe0ba, 0x110f, 0x3910, 0x720c, 0xede8, 0xc623, 0x1, 0x1);
        gbc.writeMem(0xe0ba, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x110f, gbc.sp());
        EXPECT(0xe0bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ba));
        EXPECT(0xc5, gbc.readMem(0xe0bb));
        // CB C5 034C
        gbc.setState(0x2a42, 0x84ed, 0xa1f0, 0x4c4a, 0x283, 0x138c, 0x0, 0x1);
        gbc.writeMem(0x2a42, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x84ed, gbc.sp());
        EXPECT(0x2a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 034D
        gbc.setState(0x6344, 0x5e4c, 0x4d80, 0xc7b0, 0xa1d5, 0x8005, 0x0, 0x1);
        gbc.writeMem(0x6344, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5e4c, gbc.sp());
        EXPECT(0x6346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 034E
        gbc.setState(0x27dd, 0xefa5, 0x9380, 0xd55c, 0xa33b, 0x1298, 0x1, 0x0);
        gbc.writeMem(0x27dd, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xefa5, gbc.sp());
        EXPECT(0x27df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 034F
        gbc.setState(0xb2d3, 0x4921, 0xd7f0, 0xcf5c, 0x51e0, 0x8bb9, 0x0, 0x0);
        gbc.writeMem(0xb2d3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4921, gbc.sp());
        EXPECT(0xb2d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d3));
        EXPECT(0xc5, gbc.readMem(0xb2d4));
        // CB C5 0350
        gbc.setState(0xd3d5, 0xddee, 0x9680, 0xe542, 0xfdf1, 0x6172, 0x0, 0x1);
        gbc.writeMem(0xd3d5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xddee, gbc.sp());
        EXPECT(0xd3d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d5));
        EXPECT(0xc5, gbc.readMem(0xd3d6));
        // CB C5 0351
        gbc.setState(0x7773, 0xbbd4, 0xb3d0, 0x2bcb, 0x4197, 0xad1b, 0x0, 0x0);
        gbc.writeMem(0x7773, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbbd4, gbc.sp());
        EXPECT(0x7775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0353
        gbc.setState(0xb32b, 0xf304, 0x7af0, 0xf08b, 0xde25, 0x6d67, 0x1, 0x0);
        gbc.writeMem(0xb32b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf304, gbc.sp());
        EXPECT(0xb32d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32b));
        EXPECT(0xc5, gbc.readMem(0xb32c));
        // CB C5 0354
        gbc.setState(0xbc99, 0x719e, 0x4c20, 0xe66a, 0x76ef, 0xab5e, 0x0, 0x0);
        gbc.writeMem(0xbc99, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x719e, gbc.sp());
        EXPECT(0xbc9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc99));
        EXPECT(0xc5, gbc.readMem(0xbc9a));
        // CB C5 0355
        gbc.setState(0x493a, 0xf960, 0xefa0, 0xdbcd, 0x4ab0, 0x6acc, 0x1, 0x0);
        gbc.writeMem(0x493a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf960, gbc.sp());
        EXPECT(0x493c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0356
        gbc.setState(0x8243, 0xb471, 0xbe90, 0x3c48, 0x2fe3, 0xcf94, 0x0, 0x1);
        gbc.writeMem(0x8243, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb471, gbc.sp());
        EXPECT(0x8245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8243));
        EXPECT(0xc5, gbc.readMem(0x8244));
        // CB C5 0357
        gbc.setState(0x9317, 0xcd4, 0xd670, 0x91ba, 0x2dd2, 0x1088, 0x0, 0x1);
        gbc.writeMem(0x9317, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xcd4, gbc.sp());
        EXPECT(0x9319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9317));
        EXPECT(0xc5, gbc.readMem(0x9318));
        // CB C5 0358
        gbc.setState(0x4703, 0x8d70, 0xcc60, 0x4ee9, 0x53e, 0xf5b2, 0x1, 0x0);
        gbc.writeMem(0x4703, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8d70, gbc.sp());
        EXPECT(0x4705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0359
        gbc.setState(0xc88c, 0x188d, 0x67e0, 0x6360, 0x688f, 0xf293, 0x1, 0x0);
        gbc.writeMem(0xc88c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x188d, gbc.sp());
        EXPECT(0xc88e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc88c));
        EXPECT(0xc5, gbc.readMem(0xc88d));
        // CB C5 035B
        gbc.setState(0x5ded, 0xf094, 0x7710, 0x5cc2, 0x7eff, 0xd792, 0x1, 0x1);
        gbc.writeMem(0x5ded, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf094, gbc.sp());
        EXPECT(0x5def, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 035C
        gbc.setState(0x105b, 0x7635, 0x54a0, 0x581b, 0xfdc7, 0x4d52, 0x0, 0x0);
        gbc.writeMem(0x105b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7635, gbc.sp());
        EXPECT(0x105d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 035D
        gbc.setState(0x30d6, 0xa82c, 0x4b00, 0x149, 0x99f8, 0x7d61, 0x0, 0x1);
        gbc.writeMem(0x30d6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa82c, gbc.sp());
        EXPECT(0x30d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 035E
        gbc.setState(0xe487, 0xed1f, 0x6090, 0xd93a, 0xd25f, 0x7abf, 0x0, 0x1);
        gbc.writeMem(0xe487, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xed1f, gbc.sp());
        EXPECT(0xe489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe487));
        EXPECT(0xc5, gbc.readMem(0xe488));
        // CB C5 035F
        gbc.setState(0x8ee5, 0x8fe0, 0x6d30, 0x4a59, 0x12fd, 0xd85f, 0x1, 0x0);
        gbc.writeMem(0x8ee5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8fe0, gbc.sp());
        EXPECT(0x8ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee5));
        EXPECT(0xc5, gbc.readMem(0x8ee6));
        // CB C5 0360
        gbc.setState(0x9641, 0x1a56, 0xd440, 0x54cc, 0x81d2, 0x43d6, 0x0, 0x0);
        gbc.writeMem(0x9641, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1a56, gbc.sp());
        EXPECT(0x9643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9641));
        EXPECT(0xc5, gbc.readMem(0x9642));
        // CB C5 0361
        gbc.setState(0xe20f, 0x9c88, 0x3f80, 0x79b3, 0x1c37, 0x1ea5, 0x1, 0x0);
        gbc.writeMem(0xe20f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9c88, gbc.sp());
        EXPECT(0xe211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe20f));
        EXPECT(0xc5, gbc.readMem(0xe210));
        // CB C5 0362
        gbc.setState(0x3429, 0xd2a, 0x3080, 0x13a8, 0xed43, 0x73fb, 0x0, 0x1);
        gbc.writeMem(0x3429, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd2a, gbc.sp());
        EXPECT(0x342b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0363
        gbc.setState(0x811d, 0xfa40, 0xc90, 0x93c, 0xb937, 0x9aa8, 0x1, 0x1);
        gbc.writeMem(0x811d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfa40, gbc.sp());
        EXPECT(0x811f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x811d));
        EXPECT(0xc5, gbc.readMem(0x811e));
        // CB C5 0364
        gbc.setState(0x3918, 0x43b6, 0xaf70, 0xa805, 0x6179, 0x90cc, 0x0, 0x1);
        gbc.writeMem(0x3918, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x43b6, gbc.sp());
        EXPECT(0x391a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0365
        gbc.setState(0x9d19, 0x9f2c, 0x35a0, 0xbaac, 0xfd0b, 0x5882, 0x1, 0x0);
        gbc.writeMem(0x9d19, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9f2c, gbc.sp());
        EXPECT(0x9d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d19));
        EXPECT(0xc5, gbc.readMem(0x9d1a));
        // CB C5 0366
        gbc.setState(0x7690, 0xdcfc, 0x28a0, 0x975f, 0x5637, 0x44a1, 0x0, 0x0);
        gbc.writeMem(0x7690, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdcfc, gbc.sp());
        EXPECT(0x7692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0367
        gbc.setState(0x4021, 0xb0b2, 0x5c40, 0x64ad, 0x4c87, 0xb161, 0x0, 0x0);
        gbc.writeMem(0x4021, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb0b2, gbc.sp());
        EXPECT(0x4023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0368
        gbc.setState(0x8ec6, 0x6e1e, 0x6260, 0x154, 0xc861, 0xf15b, 0x0, 0x0);
        gbc.writeMem(0x8ec6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6e1e, gbc.sp());
        EXPECT(0x8ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec6));
        EXPECT(0xc5, gbc.readMem(0x8ec7));
        // CB C5 0369
        gbc.setState(0x7941, 0xf743, 0xac50, 0xd562, 0x1f9e, 0xad6e, 0x0, 0x1);
        gbc.writeMem(0x7941, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf743, gbc.sp());
        EXPECT(0x7943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 036A
        gbc.setState(0x9cee, 0x5b1b, 0x8210, 0xc4fe, 0x5194, 0x1d61, 0x1, 0x1);
        gbc.writeMem(0x9cee, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5b1b, gbc.sp());
        EXPECT(0x9cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cee));
        EXPECT(0xc5, gbc.readMem(0x9cef));
        // CB C5 036B
        gbc.setState(0x6562, 0x6e9c, 0x50c0, 0xd5fa, 0x846a, 0x1f4b, 0x0, 0x1);
        gbc.writeMem(0x6562, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6e9c, gbc.sp());
        EXPECT(0x6564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 036C
        gbc.setState(0xd74d, 0x4993, 0xde00, 0xdc38, 0x8bc9, 0x9c64, 0x1, 0x1);
        gbc.writeMem(0xd74d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4993, gbc.sp());
        EXPECT(0xd74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd74d));
        EXPECT(0xc5, gbc.readMem(0xd74e));
        // CB C5 036D
        gbc.setState(0x6c0a, 0xe209, 0x4660, 0xd223, 0x1cda, 0x454f, 0x0, 0x0);
        gbc.writeMem(0x6c0a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe209, gbc.sp());
        EXPECT(0x6c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 036E
        gbc.setState(0xec9c, 0x59ae, 0xda70, 0xff8f, 0xbc67, 0xea01, 0x0, 0x1);
        gbc.writeMem(0xec9c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x59ae, gbc.sp());
        EXPECT(0xec9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec9c));
        EXPECT(0xc5, gbc.readMem(0xec9d));
        // CB C5 036F
        gbc.setState(0x79ec, 0x8a11, 0xa20, 0x3c29, 0x52c3, 0x2516, 0x0, 0x0);
        gbc.writeMem(0x79ec, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8a11, gbc.sp());
        EXPECT(0x79ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0370
        gbc.setState(0xd826, 0x382d, 0x2a90, 0x41a6, 0x77bd, 0x11ee, 0x1, 0x0);
        gbc.writeMem(0xd826, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x382d, gbc.sp());
        EXPECT(0xd828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd826));
        EXPECT(0xc5, gbc.readMem(0xd827));
        // CB C5 0371
        gbc.setState(0x75b7, 0x8768, 0x5580, 0xa22e, 0x5c83, 0xe461, 0x0, 0x1);
        gbc.writeMem(0x75b7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8768, gbc.sp());
        EXPECT(0x75b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0372
        gbc.setState(0x8360, 0xcdd5, 0x46c0, 0x3a58, 0xc9ce, 0x7efd, 0x0, 0x1);
        gbc.writeMem(0x8360, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcdd5, gbc.sp());
        EXPECT(0x8362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8360));
        EXPECT(0xc5, gbc.readMem(0x8361));
        // CB C5 0373
        gbc.setState(0x1de6, 0x19aa, 0xe750, 0xc019, 0x7d0c, 0x187a, 0x0, 0x0);
        gbc.writeMem(0x1de6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x19aa, gbc.sp());
        EXPECT(0x1de8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0374
        gbc.setState(0x9d1c, 0xe01f, 0xcb40, 0xef52, 0x2a81, 0x5c75, 0x1, 0x0);
        gbc.writeMem(0x9d1c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe01f, gbc.sp());
        EXPECT(0x9d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d1c));
        EXPECT(0xc5, gbc.readMem(0x9d1d));
        // CB C5 0375
        gbc.setState(0xe4dd, 0xcd3d, 0x2890, 0x45db, 0x5ca, 0x409a, 0x0, 0x1);
        gbc.writeMem(0xe4dd, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcd3d, gbc.sp());
        EXPECT(0xe4df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4dd));
        EXPECT(0xc5, gbc.readMem(0xe4de));
        // CB C5 0376
        gbc.setState(0xbd08, 0x803d, 0xd7c0, 0xc211, 0xa5a9, 0x491a, 0x0, 0x1);
        gbc.writeMem(0xbd08, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x803d, gbc.sp());
        EXPECT(0xbd0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd08));
        EXPECT(0xc5, gbc.readMem(0xbd09));
        // CB C5 0377
        gbc.setState(0x6fb7, 0x4383, 0x1d30, 0x5bc0, 0xb58a, 0x8f25, 0x1, 0x0);
        gbc.writeMem(0x6fb7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4383, gbc.sp());
        EXPECT(0x6fb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0378
        gbc.setState(0xb27e, 0x3d3b, 0x2c50, 0xc09d, 0x6830, 0x8b6d, 0x1, 0x1);
        gbc.writeMem(0xb27e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3d3b, gbc.sp());
        EXPECT(0xb280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb27e));
        EXPECT(0xc5, gbc.readMem(0xb27f));
        // CB C5 0379
        gbc.setState(0xd3ac, 0x8b33, 0xae30, 0x1ef8, 0x3322, 0x247f, 0x1, 0x0);
        gbc.writeMem(0xd3ac, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8b33, gbc.sp());
        EXPECT(0xd3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ac));
        EXPECT(0xc5, gbc.readMem(0xd3ad));
        // CB C5 037A
        gbc.setState(0x2456, 0x3cbf, 0x69f0, 0x19d9, 0xcb6c, 0xa953, 0x0, 0x0);
        gbc.writeMem(0x2456, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3cbf, gbc.sp());
        EXPECT(0x2458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 037B
        gbc.setState(0xac2b, 0xd850, 0x2c40, 0x6ffe, 0x75c1, 0x813e, 0x1, 0x0);
        gbc.writeMem(0xac2b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd850, gbc.sp());
        EXPECT(0xac2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2b));
        EXPECT(0xc5, gbc.readMem(0xac2c));
        // CB C5 037C
        gbc.setState(0x9db6, 0x9752, 0xd400, 0x60df, 0x52b8, 0x316d, 0x0, 0x0);
        gbc.writeMem(0x9db6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9752, gbc.sp());
        EXPECT(0x9db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db6));
        EXPECT(0xc5, gbc.readMem(0x9db7));
        // CB C5 037D
        gbc.setState(0xab94, 0xfd96, 0xe520, 0xd948, 0xb39f, 0xfc1, 0x1, 0x1);
        gbc.writeMem(0xab94, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xfd96, gbc.sp());
        EXPECT(0xab96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab94));
        EXPECT(0xc5, gbc.readMem(0xab95));
        // CB C5 037E
        gbc.setState(0x7228, 0xc584, 0xd5b0, 0x7176, 0x8e0e, 0x573a, 0x0, 0x1);
        gbc.writeMem(0x7228, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc584, gbc.sp());
        EXPECT(0x722a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 037F
        gbc.setState(0x2407, 0xfb91, 0x7bf0, 0xbabb, 0x32a6, 0xb660, 0x1, 0x0);
        gbc.writeMem(0x2407, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfb91, gbc.sp());
        EXPECT(0x2409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0380
        gbc.setState(0x164a, 0x203, 0x9180, 0x3a53, 0x9552, 0xcf28, 0x1, 0x0);
        gbc.writeMem(0x164a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x203, gbc.sp());
        EXPECT(0x164c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0381
        gbc.setState(0xd8b8, 0xf85c, 0x5a40, 0xe6d7, 0x6eb, 0x6288, 0x0, 0x0);
        gbc.writeMem(0xd8b8, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf85c, gbc.sp());
        EXPECT(0xd8ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b8));
        EXPECT(0xc5, gbc.readMem(0xd8b9));
        // CB C5 0382
        gbc.setState(0x37b6, 0xbc04, 0x8eb0, 0x3c36, 0xdc41, 0x20, 0x0, 0x0);
        gbc.writeMem(0x37b6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbc04, gbc.sp());
        EXPECT(0x37b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0383
        gbc.setState(0x76ee, 0xab3f, 0xc260, 0x511d, 0xed50, 0xbb10, 0x0, 0x1);
        gbc.writeMem(0x76ee, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xab3f, gbc.sp());
        EXPECT(0x76f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0384
        gbc.setState(0xaa72, 0x6948, 0x8c20, 0x307c, 0xf386, 0xee94, 0x0, 0x0);
        gbc.writeMem(0xaa72, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6948, gbc.sp());
        EXPECT(0xaa74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa72));
        EXPECT(0xc5, gbc.readMem(0xaa73));
        // CB C5 0385
        gbc.setState(0x165b, 0x507d, 0xf990, 0xfe4f, 0x953e, 0x4a8d, 0x1, 0x0);
        gbc.writeMem(0x165b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x507d, gbc.sp());
        EXPECT(0x165d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0386
        gbc.setState(0x6a4a, 0x7168, 0xa3b0, 0xe46a, 0x3491, 0x7693, 0x0, 0x0);
        gbc.writeMem(0x6a4a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7168, gbc.sp());
        EXPECT(0x6a4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0387
        gbc.setState(0xdb61, 0xb33f, 0xb400, 0xefee, 0x1f14, 0xb39d, 0x1, 0x1);
        gbc.writeMem(0xdb61, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb33f, gbc.sp());
        EXPECT(0xdb63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb61));
        EXPECT(0xc5, gbc.readMem(0xdb62));
        // CB C5 0388
        gbc.setState(0x311, 0x1ef, 0xe160, 0x2c9b, 0xc41, 0x7cf4, 0x1, 0x0);
        gbc.writeMem(0x311, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1ef, gbc.sp());
        EXPECT(0x313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0389
        gbc.setState(0x81c, 0x99dd, 0xf6f0, 0xa7d6, 0x9b0e, 0xba3a, 0x1, 0x0);
        gbc.writeMem(0x81c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x99dd, gbc.sp());
        EXPECT(0x81e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 038A
        gbc.setState(0x25c3, 0x6fc9, 0x8670, 0xb312, 0x6a48, 0xaa4b, 0x0, 0x1);
        gbc.writeMem(0x25c3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6fc9, gbc.sp());
        EXPECT(0x25c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 038B
        gbc.setState(0x78e0, 0xa81e, 0xd220, 0x370, 0xfad0, 0x1bda, 0x0, 0x0);
        gbc.writeMem(0x78e0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa81e, gbc.sp());
        EXPECT(0x78e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 038C
        gbc.setState(0x93d9, 0x419e, 0x8a70, 0x68f6, 0x572d, 0xe15c, 0x0, 0x1);
        gbc.writeMem(0x93d9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x419e, gbc.sp());
        EXPECT(0x93db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d9));
        EXPECT(0xc5, gbc.readMem(0x93da));
        // CB C5 038D
        gbc.setState(0xaf52, 0xb3e5, 0x1fc0, 0xf5c8, 0x9f9c, 0x35a4, 0x1, 0x0);
        gbc.writeMem(0xaf52, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb3e5, gbc.sp());
        EXPECT(0xaf54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf52));
        EXPECT(0xc5, gbc.readMem(0xaf53));
        // CB C5 038E
        gbc.setState(0x3d22, 0xb74e, 0x1130, 0xda1e, 0xebcb, 0x4bae, 0x1, 0x1);
        gbc.writeMem(0x3d22, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb74e, gbc.sp());
        EXPECT(0x3d24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0390
        gbc.setState(0x2f35, 0x4994, 0xf8b0, 0xc005, 0x5591, 0x3447, 0x1, 0x0);
        gbc.writeMem(0x2f35, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4994, gbc.sp());
        EXPECT(0x2f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0391
        gbc.setState(0x14e6, 0x4b56, 0x1a70, 0x8053, 0x80fa, 0x1fb4, 0x0, 0x0);
        gbc.writeMem(0x14e6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4b56, gbc.sp());
        EXPECT(0x14e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0392
        gbc.setState(0x3589, 0xacb1, 0xaac0, 0x350f, 0xfe80, 0x6d07, 0x1, 0x1);
        gbc.writeMem(0x3589, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xacb1, gbc.sp());
        EXPECT(0x358b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0393
        gbc.setState(0xe4b5, 0x2049, 0xf720, 0x48b7, 0x6aa7, 0x1312, 0x0, 0x1);
        gbc.writeMem(0xe4b5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2049, gbc.sp());
        EXPECT(0xe4b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b5));
        EXPECT(0xc5, gbc.readMem(0xe4b6));
        // CB C5 0394
        gbc.setState(0x3934, 0x764b, 0x2bd0, 0x6c65, 0xa213, 0x58ff, 0x1, 0x0);
        gbc.writeMem(0x3934, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x764b, gbc.sp());
        EXPECT(0x3936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0395
        gbc.setState(0x8625, 0xe1d0, 0x3c10, 0x12e4, 0x4fb6, 0xc945, 0x0, 0x0);
        gbc.writeMem(0x8625, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe1d0, gbc.sp());
        EXPECT(0x8627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8625));
        EXPECT(0xc5, gbc.readMem(0x8626));
        // CB C5 0396
        gbc.setState(0x11af, 0xa502, 0x6b00, 0x2a09, 0x3388, 0xb1fe, 0x1, 0x1);
        gbc.writeMem(0x11af, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa502, gbc.sp());
        EXPECT(0x11b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0397
        gbc.setState(0x5ccd, 0xe926, 0x6100, 0x12b0, 0xf367, 0xc6d0, 0x1, 0x0);
        gbc.writeMem(0x5ccd, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe926, gbc.sp());
        EXPECT(0x5ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 0398
        gbc.setState(0x6672, 0x11c3, 0x9690, 0x8ab9, 0xacc3, 0x5fe3, 0x0, 0x0);
        gbc.writeMem(0x6672, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x11c3, gbc.sp());
        EXPECT(0x6674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 0399
        gbc.setState(0xb09f, 0x3cd2, 0x8bd0, 0xa9ba, 0xcb53, 0xdad1, 0x1, 0x1);
        gbc.writeMem(0xb09f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3cd2, gbc.sp());
        EXPECT(0xb0a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb09f));
        EXPECT(0xc5, gbc.readMem(0xb0a0));
        // CB C5 039A
        gbc.setState(0xa097, 0x6017, 0x10c0, 0x3175, 0x48e4, 0xc252, 0x0, 0x0);
        gbc.writeMem(0xa097, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6017, gbc.sp());
        EXPECT(0xa099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa097));
        EXPECT(0xc5, gbc.readMem(0xa098));
        // CB C5 039B
        gbc.setState(0x3164, 0x394c, 0xeea0, 0x5e72, 0xcb9, 0x7d6f, 0x1, 0x0);
        gbc.writeMem(0x3164, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x394c, gbc.sp());
        EXPECT(0x3166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 039C
        gbc.setState(0x26e5, 0xc498, 0x1fc0, 0x9be, 0x921e, 0x7993, 0x1, 0x1);
        gbc.writeMem(0x26e5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc498, gbc.sp());
        EXPECT(0x26e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 039D
        gbc.setState(0x22b0, 0x2f67, 0x5e60, 0xaf93, 0xf11d, 0x17dd, 0x1, 0x1);
        gbc.writeMem(0x22b0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2f67, gbc.sp());
        EXPECT(0x22b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 039E
        gbc.setState(0x76de, 0xe9f0, 0xc5b0, 0xd7a9, 0x76c7, 0xe53e, 0x1, 0x1);
        gbc.writeMem(0x76de, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe9f0, gbc.sp());
        EXPECT(0x76e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 039F
        gbc.setState(0x7663, 0xb399, 0xd830, 0xd6e4, 0xf131, 0xa05e, 0x0, 0x1);
        gbc.writeMem(0x7663, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb399, gbc.sp());
        EXPECT(0x7665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 03A0
        gbc.setState(0x565c, 0xb2ce, 0x86c0, 0x4b1d, 0xf514, 0x316e, 0x0, 0x1);
        gbc.writeMem(0x565c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb2ce, gbc.sp());
        EXPECT(0x565e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03A1
        gbc.setState(0x49f2, 0x1e76, 0x6be0, 0xd20, 0x279, 0x1be6, 0x1, 0x1);
        gbc.writeMem(0x49f2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1e76, gbc.sp());
        EXPECT(0x49f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03A2
        gbc.setState(0x431f, 0x83f0, 0x5160, 0x789f, 0x420a, 0xa854, 0x0, 0x1);
        gbc.writeMem(0x431f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x83f0, gbc.sp());
        EXPECT(0x4321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03A3
        gbc.setState(0xe62a, 0xe457, 0xc7c0, 0xd2bb, 0xe567, 0xa161, 0x1, 0x1);
        gbc.writeMem(0xe62a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe457, gbc.sp());
        EXPECT(0xe62c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62a));
        EXPECT(0xc5, gbc.readMem(0xe62b));
        // CB C5 03A4
        gbc.setState(0xf7d, 0x709a, 0xc0b0, 0x58d0, 0x2493, 0x49c3, 0x0, 0x1);
        gbc.writeMem(0xf7d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x709a, gbc.sp());
        EXPECT(0xf7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 03A5
        gbc.setState(0xdbe0, 0xa7a8, 0x3ba0, 0x2ac8, 0x8eb, 0x6380, 0x1, 0x0);
        gbc.writeMem(0xdbe0, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa7a8, gbc.sp());
        EXPECT(0xdbe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe0));
        EXPECT(0xc5, gbc.readMem(0xdbe1));
        // CB C5 03A6
        gbc.setState(0x8545, 0xcf8a, 0x3e0, 0x7804, 0xd36f, 0x7472, 0x1, 0x1);
        gbc.writeMem(0x8545, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcf8a, gbc.sp());
        EXPECT(0x8547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8545));
        EXPECT(0xc5, gbc.readMem(0x8546));
        // CB C5 03A7
        gbc.setState(0xd2e4, 0x7ee9, 0xc920, 0x6001, 0x4d6a, 0x1a26, 0x0, 0x1);
        gbc.writeMem(0xd2e4, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7ee9, gbc.sp());
        EXPECT(0xd2e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e4));
        EXPECT(0xc5, gbc.readMem(0xd2e5));
        // CB C5 03A8
        gbc.setState(0xa56e, 0x7e7b, 0x5a20, 0x3eb5, 0xc7ee, 0xa096, 0x1, 0x0);
        gbc.writeMem(0xa56e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7e7b, gbc.sp());
        EXPECT(0xa570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa56e));
        EXPECT(0xc5, gbc.readMem(0xa56f));
        // CB C5 03A9
        gbc.setState(0x7d70, 0xfccd, 0x52b0, 0x30d8, 0x87ca, 0xe709, 0x0, 0x0);
        gbc.writeMem(0x7d70, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfccd, gbc.sp());
        EXPECT(0x7d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 03AA
        gbc.setState(0xed90, 0xfe81, 0x8fe0, 0xc837, 0x7a86, 0x7a7f, 0x1, 0x0);
        gbc.writeMem(0xed90, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfe81, gbc.sp());
        EXPECT(0xed92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed90));
        EXPECT(0xc5, gbc.readMem(0xed91));
        // CB C5 03AB
        gbc.setState(0xa820, 0x399b, 0xf0e0, 0x33aa, 0x8ab2, 0x16ec, 0x0, 0x0);
        gbc.writeMem(0xa820, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x399b, gbc.sp());
        EXPECT(0xa822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa820));
        EXPECT(0xc5, gbc.readMem(0xa821));
        // CB C5 03AC
        gbc.setState(0x5495, 0x9635, 0xc400, 0xe7ef, 0xcbce, 0x4d8a, 0x1, 0x1);
        gbc.writeMem(0x5495, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9635, gbc.sp());
        EXPECT(0x5497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03AD
        gbc.setState(0x883d, 0xb4ab, 0xe820, 0xe3f4, 0xb16d, 0xa9c8, 0x0, 0x0);
        gbc.writeMem(0x883d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb4ab, gbc.sp());
        EXPECT(0x883f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x883d));
        EXPECT(0xc5, gbc.readMem(0x883e));
        // CB C5 03AE
        gbc.setState(0x6485, 0x1d9a, 0x90e0, 0xa79d, 0x33e6, 0xd713, 0x0, 0x0);
        gbc.writeMem(0x6485, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1d9a, gbc.sp());
        EXPECT(0x6487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03AF
        gbc.setState(0xbcb3, 0xef66, 0x8430, 0xa159, 0x7b64, 0xe1bc, 0x1, 0x0);
        gbc.writeMem(0xbcb3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xef66, gbc.sp());
        EXPECT(0xbcb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb3));
        EXPECT(0xc5, gbc.readMem(0xbcb4));
        // CB C5 03B0
        gbc.setState(0xbb6e, 0x252e, 0xc490, 0x166f, 0xfd26, 0x7e50, 0x0, 0x1);
        gbc.writeMem(0xbb6e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x252e, gbc.sp());
        EXPECT(0xbb70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb6e));
        EXPECT(0xc5, gbc.readMem(0xbb6f));
        // CB C5 03B1
        gbc.setState(0x5b29, 0x5de1, 0x8720, 0x2dd8, 0xf5c8, 0xe61f, 0x0, 0x1);
        gbc.writeMem(0x5b29, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5de1, gbc.sp());
        EXPECT(0x5b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03B2
        gbc.setState(0xd961, 0x6b1e, 0xf910, 0xfe17, 0x1e7a, 0x77a4, 0x0, 0x0);
        gbc.writeMem(0xd961, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6b1e, gbc.sp());
        EXPECT(0xd963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd961));
        EXPECT(0xc5, gbc.readMem(0xd962));
        // CB C5 03B3
        gbc.setState(0x8db3, 0x84c3, 0x2b30, 0xda54, 0x6170, 0x773b, 0x0, 0x0);
        gbc.writeMem(0x8db3, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x84c3, gbc.sp());
        EXPECT(0x8db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db3));
        EXPECT(0xc5, gbc.readMem(0x8db4));
        // CB C5 03B4
        gbc.setState(0x99fc, 0xc278, 0xe8e0, 0xd7e1, 0xbfbc, 0xd72a, 0x1, 0x1);
        gbc.writeMem(0x99fc, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc278, gbc.sp());
        EXPECT(0x99fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99fc));
        EXPECT(0xc5, gbc.readMem(0x99fd));
        // CB C5 03B5
        gbc.setState(0xb744, 0x44aa, 0x11f0, 0xd8a4, 0x4059, 0xd76d, 0x1, 0x1);
        gbc.writeMem(0xb744, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x44aa, gbc.sp());
        EXPECT(0xb746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb744));
        EXPECT(0xc5, gbc.readMem(0xb745));
        // CB C5 03B6
        gbc.setState(0x7d87, 0x549a, 0xd0a0, 0xa900, 0x7b96, 0x2558, 0x0, 0x1);
        gbc.writeMem(0x7d87, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x549a, gbc.sp());
        EXPECT(0x7d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03B7
        gbc.setState(0x34c6, 0x4ae2, 0x2060, 0x85fe, 0x7b83, 0xc3ee, 0x0, 0x0);
        gbc.writeMem(0x34c6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4ae2, gbc.sp());
        EXPECT(0x34c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03B8
        gbc.setState(0x68a8, 0xb862, 0x6370, 0x5649, 0xc7b9, 0x78a8, 0x0, 0x0);
        gbc.writeMem(0x68a8, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb862, gbc.sp());
        EXPECT(0x68aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 03B9
        gbc.setState(0x90df, 0xae42, 0x900, 0x3ccd, 0x31, 0x9804, 0x0, 0x1);
        gbc.writeMem(0x90df, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xae42, gbc.sp());
        EXPECT(0x90e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90df));
        EXPECT(0xc5, gbc.readMem(0x90e0));
        // CB C5 03BB
        gbc.setState(0xb69c, 0xd427, 0x1200, 0x7c7a, 0x9b00, 0xa56b, 0x0, 0x1);
        gbc.writeMem(0xb69c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd427, gbc.sp());
        EXPECT(0xb69e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb69c));
        EXPECT(0xc5, gbc.readMem(0xb69d));
        // CB C5 03BC
        gbc.setState(0xb01a, 0x4fc7, 0xf230, 0x99f4, 0xd682, 0x8bfe, 0x1, 0x0);
        gbc.writeMem(0xb01a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4fc7, gbc.sp());
        EXPECT(0xb01c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb01a));
        EXPECT(0xc5, gbc.readMem(0xb01b));
        // CB C5 03BD
        gbc.setState(0xd232, 0x139b, 0xd8f0, 0xf9e4, 0x5452, 0xc010, 0x0, 0x1);
        gbc.writeMem(0xd232, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x139b, gbc.sp());
        EXPECT(0xd234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd232));
        EXPECT(0xc5, gbc.readMem(0xd233));
        // CB C5 03BE
        gbc.setState(0xe2ad, 0xc5c9, 0x2840, 0xaab9, 0xde31, 0xef1, 0x1, 0x1);
        gbc.writeMem(0xe2ad, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc5c9, gbc.sp());
        EXPECT(0xe2af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ad));
        EXPECT(0xc5, gbc.readMem(0xe2ae));
        // CB C5 03BF
        gbc.setState(0x6e2e, 0xb1f4, 0x68c0, 0x5e5e, 0xdb37, 0x5300, 0x0, 0x1);
        gbc.writeMem(0x6e2e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb1f4, gbc.sp());
        EXPECT(0x6e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03C1
        gbc.setState(0xa3a8, 0xd31d, 0xa680, 0xa2f8, 0x744e, 0x928d, 0x1, 0x0);
        gbc.writeMem(0xa3a8, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd31d, gbc.sp());
        EXPECT(0xa3aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a8));
        EXPECT(0xc5, gbc.readMem(0xa3a9));
        // CB C5 03C2
        gbc.setState(0x727c, 0x4ced, 0x5b0, 0xf6f6, 0x7441, 0xf08, 0x0, 0x0);
        gbc.writeMem(0x727c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4ced, gbc.sp());
        EXPECT(0x727e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 03C3
        gbc.setState(0x70e9, 0x942a, 0x7480, 0xed8f, 0x5f08, 0x19a5, 0x0, 0x1);
        gbc.writeMem(0x70e9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x942a, gbc.sp());
        EXPECT(0x70eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03C4
        gbc.setState(0xae34, 0x91e8, 0x4300, 0x31c0, 0xfb91, 0xaf12, 0x1, 0x0);
        gbc.writeMem(0xae34, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x91e8, gbc.sp());
        EXPECT(0xae36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae34));
        EXPECT(0xc5, gbc.readMem(0xae35));
        // CB C5 03C5
        gbc.setState(0x4523, 0xf20a, 0xd9a0, 0x63f7, 0xc870, 0xe42a, 0x0, 0x0);
        gbc.writeMem(0x4523, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf20a, gbc.sp());
        EXPECT(0x4525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03C6
        gbc.setState(0x7930, 0x87bd, 0xccf0, 0xd8b8, 0x2439, 0xc60, 0x1, 0x1);
        gbc.writeMem(0x7930, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x87bd, gbc.sp());
        EXPECT(0x7932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 03C7
        gbc.setState(0x30d9, 0xd2a8, 0x5d60, 0x6b39, 0x7972, 0x22cf, 0x1, 0x1);
        gbc.writeMem(0x30d9, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd2a8, gbc.sp());
        EXPECT(0x30db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03C8
        gbc.setState(0x8969, 0x89c0, 0xd250, 0xdec2, 0x5943, 0xdf68, 0x0, 0x1);
        gbc.writeMem(0x8969, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x89c0, gbc.sp());
        EXPECT(0x896b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8969));
        EXPECT(0xc5, gbc.readMem(0x896a));
        // CB C5 03C9
        gbc.setState(0x10c5, 0x46b9, 0x1120, 0xf7f7, 0x204d, 0x8a4, 0x0, 0x0);
        gbc.writeMem(0x10c5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x46b9, gbc.sp());
        EXPECT(0x10c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03CA
        gbc.setState(0x24a8, 0x3aa, 0x9da0, 0xf328, 0x85cc, 0x945a, 0x0, 0x0);
        gbc.writeMem(0x24a8, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3aa, gbc.sp());
        EXPECT(0x24aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03CB
        gbc.setState(0x4242, 0x23aa, 0x3ae0, 0x102c, 0x2b72, 0x7b33, 0x1, 0x1);
        gbc.writeMem(0x4242, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x23aa, gbc.sp());
        EXPECT(0x4244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03CD
        gbc.setState(0xe56b, 0x15c4, 0xa660, 0x3b4a, 0xdd7d, 0x45e8, 0x0, 0x0);
        gbc.writeMem(0xe56b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x15c4, gbc.sp());
        EXPECT(0xe56d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe56b));
        EXPECT(0xc5, gbc.readMem(0xe56c));
        // CB C5 03CE
        gbc.setState(0x1713, 0xb61a, 0xecd0, 0xd2b9, 0xf7bb, 0xb6d5, 0x0, 0x1);
        gbc.writeMem(0x1713, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb61a, gbc.sp());
        EXPECT(0x1715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 03CF
        gbc.setState(0x290b, 0xcf4d, 0x6630, 0xb4c6, 0xecd1, 0x4c67, 0x1, 0x0);
        gbc.writeMem(0x290b, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcf4d, gbc.sp());
        EXPECT(0x290d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 03D0
        gbc.setState(0x46ff, 0xdba7, 0x4db0, 0x4561, 0xbfc4, 0xdadf, 0x1, 0x1);
        gbc.writeMem(0x46ff, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdba7, gbc.sp());
        EXPECT(0x4701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 03D1
        gbc.setState(0xb7ad, 0xb1bc, 0x7a90, 0x710f, 0xc7c4, 0x2091, 0x0, 0x1);
        gbc.writeMem(0xb7ad, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb1bc, gbc.sp());
        EXPECT(0xb7af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ad));
        EXPECT(0xc5, gbc.readMem(0xb7ae));
        // CB C5 03D3
        gbc.setState(0x98a, 0xa34b, 0xc530, 0xcf08, 0xeaa8, 0x983, 0x1, 0x0);
        gbc.writeMem(0x98a, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa34b, gbc.sp());
        EXPECT(0x98c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 03D4
        gbc.setState(0xd7da, 0xfce9, 0xdb80, 0xb76b, 0x9f1f, 0x1814, 0x1, 0x0);
        gbc.writeMem(0xd7da, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfce9, gbc.sp());
        EXPECT(0xd7dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7da));
        EXPECT(0xc5, gbc.readMem(0xd7db));
        // CB C5 03D5
        gbc.setState(0x1a76, 0xe030, 0x1a20, 0x72a6, 0x58eb, 0x28da, 0x0, 0x1);
        gbc.writeMem(0x1a76, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe030, gbc.sp());
        EXPECT(0x1a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03D6
        gbc.setState(0x11e2, 0xb9e, 0x6c0, 0xecb0, 0x7c54, 0x4c85, 0x1, 0x1);
        gbc.writeMem(0x11e2, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb9e, gbc.sp());
        EXPECT(0x11e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03D7
        gbc.setState(0x10f7, 0x63c2, 0xba80, 0xb960, 0x3baf, 0x7dcd, 0x0, 0x1);
        gbc.writeMem(0x10f7, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x63c2, gbc.sp());
        EXPECT(0x10f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03D8
        gbc.setState(0xce60, 0x549a, 0x8e50, 0x7ad3, 0x6703, 0xb3cb, 0x1, 0x0);
        gbc.writeMem(0xce60, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x549a, gbc.sp());
        EXPECT(0xce62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce60));
        EXPECT(0xc5, gbc.readMem(0xce61));
        // CB C5 03D9
        gbc.setState(0xa243, 0x913, 0x92f0, 0x79b3, 0xf884, 0xf484, 0x0, 0x1);
        gbc.writeMem(0xa243, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x913, gbc.sp());
        EXPECT(0xa245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa243));
        EXPECT(0xc5, gbc.readMem(0xa244));
        // CB C5 03DA
        gbc.setState(0xa6f5, 0x95dc, 0x5790, 0x1ac7, 0xd48b, 0xd82d, 0x0, 0x0);
        gbc.writeMem(0xa6f5, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x95dc, gbc.sp());
        EXPECT(0xa6f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f5));
        EXPECT(0xc5, gbc.readMem(0xa6f6));
        // CB C5 03DB
        gbc.setState(0x95ea, 0x62fa, 0xd5a0, 0x9c0a, 0x16db, 0xaaf7, 0x1, 0x1);
        gbc.writeMem(0x95ea, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x62fa, gbc.sp());
        EXPECT(0x95ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ea));
        EXPECT(0xc5, gbc.readMem(0x95eb));
        // CB C5 03DC
        gbc.setState(0x6c8f, 0xa81b, 0xab00, 0x4f8c, 0x778e, 0x5176, 0x0, 0x0);
        gbc.writeMem(0x6c8f, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa81b, gbc.sp());
        EXPECT(0x6c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03DD
        gbc.setState(0xdc0c, 0xc05f, 0x9f80, 0x2177, 0x1276, 0xac63, 0x0, 0x0);
        gbc.writeMem(0xdc0c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc05f, gbc.sp());
        EXPECT(0xdc0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc0c));
        EXPECT(0xc5, gbc.readMem(0xdc0d));
        // CB C5 03DE
        gbc.setState(0x8078, 0xe2d4, 0xe7f0, 0x7b32, 0x8712, 0xde1a, 0x1, 0x0);
        gbc.writeMem(0x8078, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe2d4, gbc.sp());
        EXPECT(0x807a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8078));
        EXPECT(0xc5, gbc.readMem(0x8079));
        // CB C5 03DF
        gbc.setState(0x228c, 0xccd, 0x5b00, 0x9bc3, 0x4606, 0xb9a0, 0x0, 0x0);
        gbc.writeMem(0x228c, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xccd, gbc.sp());
        EXPECT(0x228e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03E0
        gbc.setState(0x65f6, 0x9e58, 0x99a0, 0x56d7, 0x7786, 0x7b58, 0x0, 0x0);
        gbc.writeMem(0x65f6, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9e58, gbc.sp());
        EXPECT(0x65f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03E1
        gbc.setState(0xe80e, 0x5429, 0xde90, 0x9eea, 0xdedf, 0x677e, 0x0, 0x1);
        gbc.writeMem(0xe80e, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5429, gbc.sp());
        EXPECT(0xe810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe80e));
        EXPECT(0xc5, gbc.readMem(0xe80f));
        // CB C5 03E2
        gbc.setState(0x775d, 0x2a32, 0x8060, 0x2a83, 0x8a8, 0x5b49, 0x1, 0x0);
        gbc.writeMem(0x775d, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2a32, gbc.sp());
        EXPECT(0x775f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C5 03E3
        gbc.setState(0x6b76, 0x2cf0, 0xcb50, 0xa12d, 0x1db1, 0x89d4, 0x0, 0x0);
        gbc.writeMem(0x6b76, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2cf0, gbc.sp());
        EXPECT(0x6b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C5 03E4
        gbc.setState(0xdd07, 0xe57c, 0x32f0, 0x9c9e, 0xc814, 0x46e0, 0x1, 0x1);
        gbc.writeMem(0xdd07, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe57c, gbc.sp());
        EXPECT(0xdd09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd07));
        EXPECT(0xc5, gbc.readMem(0xdd08));
        // CB C5 03E5
        gbc.setState(0x9615, 0x1fd9, 0xad40, 0x62de, 0x5e66, 0x6648, 0x0, 0x1);
        gbc.writeMem(0x9615, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1fd9, gbc.sp());
        EXPECT(0x9617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9615));
        EXPECT(0xc5, gbc.readMem(0x9616));
        // CB C5 03E6
        gbc.setState(0xd7c8, 0xe2c5, 0x45a0, 0xa11, 0x107c, 0xb1ce, 0x1, 0x1);
        gbc.writeMem(0xd7c8, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe2c5, gbc.sp());
        EXPECT(0xd7ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c8));
        EXPECT(0xc5, gbc.readMem(0xd7c9));
        // CB C5 03E7
        gbc.setState(0x1bd1, 0x591e, 0x93e0, 0x8e80, 0x1d5c, 0x8b5d, 0x1, 0x1);
        gbc.writeMem(0x1bd1, { 0xcb, 0xc5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x591e, gbc.sp());
        EXPECT(0x1bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
