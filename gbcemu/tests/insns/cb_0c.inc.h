    TEST(gbcemu, opcode_cb_0c) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 0C 0000
        gbc.setState(0x3900, 0x6b51, 0x5950, 0x5d6, 0x64e7, 0xe833, 0x1, 0x0);
        gbc.writeMem(0x3900, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6b51, gbc.sp());
        EXPECT(0x3902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0001
        gbc.setState(0x5189, 0xa3ef, 0x3cd0, 0x70d6, 0x43de, 0xe7b7, 0x1, 0x0);
        gbc.writeMem(0x5189, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa3ef, gbc.sp());
        EXPECT(0x518b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0002
        gbc.setState(0xaa58, 0x5bc6, 0xde50, 0xf239, 0x4ed5, 0x9ef7, 0x0, 0x0);
        gbc.writeMem(0xaa58, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5bc6, gbc.sp());
        EXPECT(0xaa5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa58));
        EXPECT(0xc, gbc.readMem(0xaa59));
        // CB 0C 0003
        gbc.setState(0xb329, 0x27a1, 0x6480, 0xd23b, 0x68aa, 0xfafb, 0x1, 0x0);
        gbc.writeMem(0xb329, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x27a1, gbc.sp());
        EXPECT(0xb32b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb329));
        EXPECT(0xc, gbc.readMem(0xb32a));
        // CB 0C 0004
        gbc.setState(0x5b0a, 0xddba, 0x8ce0, 0x7594, 0x16d9, 0xd317, 0x1, 0x0);
        gbc.writeMem(0x5b0a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xddba, gbc.sp());
        EXPECT(0x5b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0005
        gbc.setState(0xb857, 0xa242, 0xd7f0, 0x3c8d, 0x55a1, 0x19eb, 0x0, 0x0);
        gbc.writeMem(0xb857, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa242, gbc.sp());
        EXPECT(0xb859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb857));
        EXPECT(0xc, gbc.readMem(0xb858));
        // CB 0C 0006
        gbc.setState(0x5849, 0xf2dd, 0x1990, 0x8612, 0x1ccc, 0x9e49, 0x1, 0x1);
        gbc.writeMem(0x5849, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf2dd, gbc.sp());
        EXPECT(0x584b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0007
        gbc.setState(0xe957, 0x4fcf, 0xdb10, 0xe406, 0x722e, 0x41d6, 0x0, 0x1);
        gbc.writeMem(0xe957, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4fcf, gbc.sp());
        EXPECT(0xe959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe957));
        EXPECT(0xc, gbc.readMem(0xe958));
        // CB 0C 000A
        gbc.setState(0x7d9f, 0x20fe, 0xb780, 0x7552, 0xb06b, 0xd00c, 0x1, 0x0);
        gbc.writeMem(0x7d9f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x20fe, gbc.sp());
        EXPECT(0x7da1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 000B
        gbc.setState(0xbb6b, 0x2742, 0xe0f0, 0x7eec, 0x518a, 0x5ba1, 0x1, 0x1);
        gbc.writeMem(0xbb6b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2742, gbc.sp());
        EXPECT(0xbb6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb6b));
        EXPECT(0xc, gbc.readMem(0xbb6c));
        // CB 0C 000D
        gbc.setState(0x270f, 0xdc31, 0x6ec0, 0xc506, 0x1b35, 0x5953, 0x0, 0x1);
        gbc.writeMem(0x270f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdc31, gbc.sp());
        EXPECT(0x2711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 000E
        gbc.setState(0x7820, 0x2b14, 0xbf0, 0x7924, 0xd0eb, 0xe3e, 0x1, 0x1);
        gbc.writeMem(0x7820, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2b14, gbc.sp());
        EXPECT(0x7822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 000F
        gbc.setState(0xaed6, 0xd512, 0x7970, 0x754a, 0xd7fd, 0x724c, 0x0, 0x1);
        gbc.writeMem(0xaed6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd512, gbc.sp());
        EXPECT(0xaed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed6));
        EXPECT(0xc, gbc.readMem(0xaed7));
        // CB 0C 0010
        gbc.setState(0xe2f9, 0xb268, 0xdbb0, 0xc01d, 0xe244, 0x74f9, 0x1, 0x1);
        gbc.writeMem(0xe2f9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb268, gbc.sp());
        EXPECT(0xe2fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2f9));
        EXPECT(0xc, gbc.readMem(0xe2fa));
        // CB 0C 0011
        gbc.setState(0xe51b, 0x5784, 0xc8d0, 0x22cd, 0xc2d, 0x4a4e, 0x0, 0x1);
        gbc.writeMem(0xe51b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5784, gbc.sp());
        EXPECT(0xe51d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe51b));
        EXPECT(0xc, gbc.readMem(0xe51c));
        // CB 0C 0012
        gbc.setState(0xa7b1, 0xf144, 0xd110, 0xb7cf, 0x6e93, 0x3507, 0x0, 0x1);
        gbc.writeMem(0xa7b1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf144, gbc.sp());
        EXPECT(0xa7b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b1));
        EXPECT(0xc, gbc.readMem(0xa7b2));
        // CB 0C 0013
        gbc.setState(0xab65, 0x6a19, 0xe060, 0x43ec, 0xfb00, 0xa46c, 0x0, 0x0);
        gbc.writeMem(0xab65, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6a19, gbc.sp());
        EXPECT(0xab67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab65));
        EXPECT(0xc, gbc.readMem(0xab66));
        // CB 0C 0014
        gbc.setState(0x9e06, 0xb8b6, 0x8560, 0x4cf1, 0x75b0, 0xb3d3, 0x1, 0x1);
        gbc.writeMem(0x9e06, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb8b6, gbc.sp());
        EXPECT(0x9e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e06));
        EXPECT(0xc, gbc.readMem(0x9e07));
        // CB 0C 0015
        gbc.setState(0xbb98, 0x5317, 0x1210, 0x6261, 0x30ee, 0x5a63, 0x0, 0x0);
        gbc.writeMem(0xbb98, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5317, gbc.sp());
        EXPECT(0xbb9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb98));
        EXPECT(0xc, gbc.readMem(0xbb99));
        // CB 0C 0016
        gbc.setState(0x17a0, 0x1771, 0x6f00, 0xb720, 0x972f, 0x8826, 0x0, 0x1);
        gbc.writeMem(0x17a0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1771, gbc.sp());
        EXPECT(0x17a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0017
        gbc.setState(0x1640, 0x908d, 0xda90, 0xded9, 0xd417, 0x8f3a, 0x1, 0x1);
        gbc.writeMem(0x1640, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x908d, gbc.sp());
        EXPECT(0x1642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0018
        gbc.setState(0x2b72, 0x90e0, 0x2140, 0xa5ad, 0xb8b1, 0xc915, 0x0, 0x1);
        gbc.writeMem(0x2b72, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x90e0, gbc.sp());
        EXPECT(0x2b74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 001A
        gbc.setState(0x1eab, 0xc8a6, 0x1870, 0xa246, 0xff1, 0xeeb7, 0x1, 0x0);
        gbc.writeMem(0x1eab, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc8a6, gbc.sp());
        EXPECT(0x1ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 001B
        gbc.setState(0x8b79, 0xab9d, 0x1be0, 0xedb9, 0xb840, 0xee5b, 0x0, 0x1);
        gbc.writeMem(0x8b79, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xab9d, gbc.sp());
        EXPECT(0x8b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b79));
        EXPECT(0xc, gbc.readMem(0x8b7a));
        // CB 0C 001C
        gbc.setState(0x1504, 0xe518, 0x9490, 0xb4c4, 0x378e, 0x76f1, 0x1, 0x1);
        gbc.writeMem(0x1504, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe518, gbc.sp());
        EXPECT(0x1506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 001D
        gbc.setState(0x852d, 0xea86, 0x5fa0, 0x99b1, 0x9ca6, 0x34d4, 0x1, 0x1);
        gbc.writeMem(0x852d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xea86, gbc.sp());
        EXPECT(0x852f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x852d));
        EXPECT(0xc, gbc.readMem(0x852e));
        // CB 0C 001E
        gbc.setState(0x875c, 0x7f60, 0xfe70, 0x1aee, 0xab4f, 0x8557, 0x0, 0x1);
        gbc.writeMem(0x875c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7f60, gbc.sp());
        EXPECT(0x875e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x875c));
        EXPECT(0xc, gbc.readMem(0x875d));
        // CB 0C 001F
        gbc.setState(0x8ccf, 0x5f55, 0x9990, 0x7eaf, 0x51a8, 0x59f, 0x0, 0x0);
        gbc.writeMem(0x8ccf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5f55, gbc.sp());
        EXPECT(0x8cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ccf));
        EXPECT(0xc, gbc.readMem(0x8cd0));
        // CB 0C 0020
        gbc.setState(0x2c60, 0x7d8, 0x6060, 0x2066, 0x7edb, 0x11bb, 0x1, 0x0);
        gbc.writeMem(0x2c60, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7d8, gbc.sp());
        EXPECT(0x2c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0021
        gbc.setState(0xec78, 0x38ea, 0x5a20, 0x95f, 0x6e6e, 0xd939, 0x1, 0x1);
        gbc.writeMem(0xec78, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x38ea, gbc.sp());
        EXPECT(0xec7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec78));
        EXPECT(0xc, gbc.readMem(0xec79));
        // CB 0C 0022
        gbc.setState(0x95dd, 0x7918, 0xf80, 0x5bad, 0x3b42, 0xc7d8, 0x1, 0x0);
        gbc.writeMem(0x95dd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7918, gbc.sp());
        EXPECT(0x95df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95dd));
        EXPECT(0xc, gbc.readMem(0x95de));
        // CB 0C 0023
        gbc.setState(0x8786, 0xe3b0, 0xd280, 0x4265, 0x63e, 0x566, 0x0, 0x1);
        gbc.writeMem(0x8786, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe3b0, gbc.sp());
        EXPECT(0x8788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8786));
        EXPECT(0xc, gbc.readMem(0x8787));
        // CB 0C 0024
        gbc.setState(0x1438, 0xe0e2, 0xf280, 0x5769, 0x6c71, 0xb599, 0x1, 0x0);
        gbc.writeMem(0x1438, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe0e2, gbc.sp());
        EXPECT(0x143a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0025
        gbc.setState(0xc26, 0x5dc9, 0x29f0, 0x4f4a, 0x471, 0x9142, 0x1, 0x0);
        gbc.writeMem(0xc26, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5dc9, gbc.sp());
        EXPECT(0xc28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0026
        gbc.setState(0xef7b, 0xb327, 0x96f0, 0x5b93, 0xd361, 0xb323, 0x1, 0x1);
        gbc.writeMem(0xef7b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb327, gbc.sp());
        EXPECT(0xef7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7b));
        EXPECT(0xc, gbc.readMem(0xef7c));
        // CB 0C 0027
        gbc.setState(0xcae7, 0x8669, 0xe120, 0x36d2, 0x5191, 0x5dff, 0x0, 0x1);
        gbc.writeMem(0xcae7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8669, gbc.sp());
        EXPECT(0xcae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae7));
        EXPECT(0xc, gbc.readMem(0xcae8));
        // CB 0C 0028
        gbc.setState(0x9323, 0x1278, 0x7340, 0x8b1a, 0x4df1, 0xc6c7, 0x0, 0x1);
        gbc.writeMem(0x9323, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1278, gbc.sp());
        EXPECT(0x9325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9323));
        EXPECT(0xc, gbc.readMem(0x9324));
        // CB 0C 0029
        gbc.setState(0xa9e1, 0x7e12, 0xac0, 0x6c8f, 0x7312, 0x9820, 0x1, 0x1);
        gbc.writeMem(0xa9e1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7e12, gbc.sp());
        EXPECT(0xa9e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e1));
        EXPECT(0xc, gbc.readMem(0xa9e2));
        // CB 0C 002A
        gbc.setState(0x1984, 0xdd91, 0xe90, 0x22dc, 0x90a9, 0x387a, 0x0, 0x0);
        gbc.writeMem(0x1984, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdd91, gbc.sp());
        EXPECT(0x1986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 002B
        gbc.setState(0x94d2, 0x3c3e, 0x6fa0, 0x3325, 0x166d, 0x4f5a, 0x0, 0x0);
        gbc.writeMem(0x94d2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3c3e, gbc.sp());
        EXPECT(0x94d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d2));
        EXPECT(0xc, gbc.readMem(0x94d3));
        // CB 0C 002D
        gbc.setState(0x1745, 0x37b, 0x1f90, 0x5cf6, 0x499f, 0xd933, 0x0, 0x0);
        gbc.writeMem(0x1745, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x37b, gbc.sp());
        EXPECT(0x1747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 002E
        gbc.setState(0xaa78, 0x9b07, 0xcff0, 0xae90, 0x740e, 0xa9ba, 0x0, 0x1);
        gbc.writeMem(0xaa78, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9b07, gbc.sp());
        EXPECT(0xaa7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa78));
        EXPECT(0xc, gbc.readMem(0xaa79));
        // CB 0C 002F
        gbc.setState(0x9c35, 0xa1e4, 0xeb20, 0x7069, 0x5f86, 0x328a, 0x1, 0x0);
        gbc.writeMem(0x9c35, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa1e4, gbc.sp());
        EXPECT(0x9c37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c35));
        EXPECT(0xc, gbc.readMem(0x9c36));
        // CB 0C 0030
        gbc.setState(0xcc75, 0x2123, 0x64a0, 0x857, 0xc2b0, 0x56be, 0x0, 0x1);
        gbc.writeMem(0xcc75, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2123, gbc.sp());
        EXPECT(0xcc77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc75));
        EXPECT(0xc, gbc.readMem(0xcc76));
        // CB 0C 0031
        gbc.setState(0xdbc5, 0x361f, 0x8e00, 0x8c51, 0x543b, 0x8646, 0x1, 0x0);
        gbc.writeMem(0xdbc5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x361f, gbc.sp());
        EXPECT(0xdbc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc5));
        EXPECT(0xc, gbc.readMem(0xdbc6));
        // CB 0C 0032
        gbc.setState(0xeef9, 0x2bff, 0xd8f0, 0xd6af, 0xb3d6, 0xcf13, 0x1, 0x0);
        gbc.writeMem(0xeef9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2bff, gbc.sp());
        EXPECT(0xeefb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef9));
        EXPECT(0xc, gbc.readMem(0xeefa));
        // CB 0C 0033
        gbc.setState(0x54f8, 0xa6ef, 0x9490, 0xf9ae, 0xe1d3, 0x5e2c, 0x0, 0x1);
        gbc.writeMem(0x54f8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa6ef, gbc.sp());
        EXPECT(0x54fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0034
        gbc.setState(0x494d, 0xeb0e, 0xf8c0, 0x9c73, 0x65b3, 0xaca8, 0x0, 0x0);
        gbc.writeMem(0x494d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xeb0e, gbc.sp());
        EXPECT(0x494f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0035
        gbc.setState(0x22eb, 0x7251, 0xbfd0, 0x145e, 0x520d, 0x9096, 0x1, 0x0);
        gbc.writeMem(0x22eb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7251, gbc.sp());
        EXPECT(0x22ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0036
        gbc.setState(0xe18d, 0x5d8f, 0x31c0, 0xbfe6, 0x159f, 0x998f, 0x1, 0x0);
        gbc.writeMem(0xe18d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5d8f, gbc.sp());
        EXPECT(0xe18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe18d));
        EXPECT(0xc, gbc.readMem(0xe18e));
        // CB 0C 0037
        gbc.setState(0x7ea7, 0xd0dd, 0x7fb0, 0xfd78, 0xecf7, 0x6ac0, 0x0, 0x1);
        gbc.writeMem(0x7ea7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd0dd, gbc.sp());
        EXPECT(0x7ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0038
        gbc.setState(0x41ba, 0xfb97, 0x4740, 0xf38, 0x2ff1, 0x4181, 0x1, 0x1);
        gbc.writeMem(0x41ba, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfb97, gbc.sp());
        EXPECT(0x41bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0039
        gbc.setState(0x4ab0, 0xba76, 0x43a0, 0x949f, 0xfde2, 0x6e0, 0x0, 0x1);
        gbc.writeMem(0x4ab0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xba76, gbc.sp());
        EXPECT(0x4ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 003A
        gbc.setState(0x7761, 0xc22, 0xf1f0, 0x1046, 0xc532, 0x6f01, 0x1, 0x1);
        gbc.writeMem(0x7761, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc22, gbc.sp());
        EXPECT(0x7763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 003B
        gbc.setState(0xd954, 0xfbbd, 0xa6c0, 0xab73, 0xd457, 0xb7c3, 0x0, 0x1);
        gbc.writeMem(0xd954, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfbbd, gbc.sp());
        EXPECT(0xd956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd954));
        EXPECT(0xc, gbc.readMem(0xd955));
        // CB 0C 003C
        gbc.setState(0xa98a, 0xe8bf, 0x2750, 0x1e23, 0x8031, 0x84a2, 0x0, 0x0);
        gbc.writeMem(0xa98a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe8bf, gbc.sp());
        EXPECT(0xa98c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa98a));
        EXPECT(0xc, gbc.readMem(0xa98b));
        // CB 0C 003D
        gbc.setState(0x268e, 0xcb33, 0x31a0, 0xf429, 0xd286, 0x13cc, 0x1, 0x0);
        gbc.writeMem(0x268e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcb33, gbc.sp());
        EXPECT(0x2690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 003E
        gbc.setState(0x6e4f, 0x5fc4, 0xaa70, 0xa0a9, 0x5df7, 0x6a9, 0x1, 0x0);
        gbc.writeMem(0x6e4f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5fc4, gbc.sp());
        EXPECT(0x6e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0040
        gbc.setState(0x8b5d, 0x7ecf, 0x9310, 0x88dc, 0x841c, 0x2bf, 0x0, 0x0);
        gbc.writeMem(0x8b5d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7ecf, gbc.sp());
        EXPECT(0x8b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b5d));
        EXPECT(0xc, gbc.readMem(0x8b5e));
        // CB 0C 0041
        gbc.setState(0x942d, 0x2075, 0x8e00, 0x8630, 0x9bae, 0x4018, 0x1, 0x1);
        gbc.writeMem(0x942d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2075, gbc.sp());
        EXPECT(0x942f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x942d));
        EXPECT(0xc, gbc.readMem(0x942e));
        // CB 0C 0042
        gbc.setState(0xe9e2, 0x4774, 0xf190, 0x175c, 0x9e74, 0x4fdb, 0x1, 0x1);
        gbc.writeMem(0xe9e2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4774, gbc.sp());
        EXPECT(0xe9e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e2));
        EXPECT(0xc, gbc.readMem(0xe9e3));
        // CB 0C 0043
        gbc.setState(0x1506, 0x1679, 0x1ff0, 0x9c2d, 0xb45b, 0xda7e, 0x0, 0x1);
        gbc.writeMem(0x1506, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1679, gbc.sp());
        EXPECT(0x1508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0044
        gbc.setState(0x3321, 0xb084, 0x76f0, 0x9f21, 0x5c9e, 0x6a0b, 0x0, 0x1);
        gbc.writeMem(0x3321, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb084, gbc.sp());
        EXPECT(0x3323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0045
        gbc.setState(0xbe4d, 0x472c, 0xd0d0, 0xf3bd, 0x68, 0xb6d3, 0x0, 0x0);
        gbc.writeMem(0xbe4d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x472c, gbc.sp());
        EXPECT(0xbe4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe4d));
        EXPECT(0xc, gbc.readMem(0xbe4e));
        // CB 0C 0046
        gbc.setState(0x5c79, 0x89e6, 0x65b0, 0x2570, 0x3f00, 0xb905, 0x0, 0x0);
        gbc.writeMem(0x5c79, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x89e6, gbc.sp());
        EXPECT(0x5c7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0047
        gbc.setState(0x40eb, 0x2dcb, 0x8410, 0xdc21, 0x6478, 0x161c, 0x0, 0x1);
        gbc.writeMem(0x40eb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2dcb, gbc.sp());
        EXPECT(0x40ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0048
        gbc.setState(0x18fc, 0x7c8b, 0x48f0, 0x7a45, 0x3f59, 0xa657, 0x0, 0x0);
        gbc.writeMem(0x18fc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7c8b, gbc.sp());
        EXPECT(0x18fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0049
        gbc.setState(0x573, 0x75b1, 0x2320, 0x1aca, 0x8e6e, 0x2d9f, 0x0, 0x1);
        gbc.writeMem(0x573, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x75b1, gbc.sp());
        EXPECT(0x575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 004A
        gbc.setState(0xc59c, 0x5d3a, 0xbd0, 0x2b2f, 0x3a68, 0xbe0d, 0x1, 0x0);
        gbc.writeMem(0xc59c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5d3a, gbc.sp());
        EXPECT(0xc59e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59c));
        EXPECT(0xc, gbc.readMem(0xc59d));
        // CB 0C 004B
        gbc.setState(0x4a9a, 0xcf09, 0xd5b0, 0x8d16, 0x59e8, 0x2ff7, 0x0, 0x0);
        gbc.writeMem(0x4a9a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcf09, gbc.sp());
        EXPECT(0x4a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 004C
        gbc.setState(0x8d8f, 0x5f86, 0xab10, 0xee18, 0xcc28, 0xbe89, 0x0, 0x0);
        gbc.writeMem(0x8d8f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5f86, gbc.sp());
        EXPECT(0x8d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d8f));
        EXPECT(0xc, gbc.readMem(0x8d90));
        // CB 0C 004D
        gbc.setState(0xe8f8, 0x1cc7, 0x28a0, 0xe482, 0xfc8a, 0xaffd, 0x0, 0x0);
        gbc.writeMem(0xe8f8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1cc7, gbc.sp());
        EXPECT(0xe8fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f8));
        EXPECT(0xc, gbc.readMem(0xe8f9));
        // CB 0C 004E
        gbc.setState(0x9264, 0xf97c, 0xddc0, 0xfd2d, 0xaeb6, 0xaac6, 0x0, 0x0);
        gbc.writeMem(0x9264, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf97c, gbc.sp());
        EXPECT(0x9266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9264));
        EXPECT(0xc, gbc.readMem(0x9265));
        // CB 0C 004F
        gbc.setState(0x5ccd, 0x96b7, 0x4590, 0x37b3, 0xd619, 0xf82d, 0x1, 0x0);
        gbc.writeMem(0x5ccd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x96b7, gbc.sp());
        EXPECT(0x5ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0051
        gbc.setState(0xdbd3, 0xffd4, 0x55b0, 0x706d, 0xfb7, 0xd76d, 0x1, 0x0);
        gbc.writeMem(0xdbd3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xffd4, gbc.sp());
        EXPECT(0xdbd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd3));
        EXPECT(0xc, gbc.readMem(0xdbd4));
        // CB 0C 0052
        gbc.setState(0xc4c0, 0xba09, 0xa430, 0x7899, 0x6331, 0xb19e, 0x0, 0x0);
        gbc.writeMem(0xc4c0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xba09, gbc.sp());
        EXPECT(0xc4c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c0));
        EXPECT(0xc, gbc.readMem(0xc4c1));
        // CB 0C 0053
        gbc.setState(0xef89, 0xbe47, 0xff90, 0xa0e1, 0x548c, 0xdb16, 0x0, 0x1);
        gbc.writeMem(0xef89, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbe47, gbc.sp());
        EXPECT(0xef8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef89));
        EXPECT(0xc, gbc.readMem(0xef8a));
        // CB 0C 0054
        gbc.setState(0x80ac, 0x8766, 0x4600, 0x3a33, 0x32d4, 0xb35, 0x1, 0x0);
        gbc.writeMem(0x80ac, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8766, gbc.sp());
        EXPECT(0x80ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ac));
        EXPECT(0xc, gbc.readMem(0x80ad));
        // CB 0C 0055
        gbc.setState(0x2f13, 0x8d66, 0x8db0, 0xd1d6, 0xdb2c, 0xb5e3, 0x1, 0x0);
        gbc.writeMem(0x2f13, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8d66, gbc.sp());
        EXPECT(0x2f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0056
        gbc.setState(0x5c88, 0xe6a7, 0x10d0, 0x18c9, 0xf2fc, 0xade1, 0x1, 0x0);
        gbc.writeMem(0x5c88, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe6a7, gbc.sp());
        EXPECT(0x5c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0057
        gbc.setState(0x9e0f, 0x31a4, 0x4610, 0x1c6c, 0xae7b, 0x76c1, 0x0, 0x0);
        gbc.writeMem(0x9e0f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x31a4, gbc.sp());
        EXPECT(0x9e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0f));
        EXPECT(0xc, gbc.readMem(0x9e10));
        // CB 0C 0058
        gbc.setState(0xe256, 0x4698, 0x1ff0, 0x8d31, 0xd704, 0x2840, 0x1, 0x1);
        gbc.writeMem(0xe256, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4698, gbc.sp());
        EXPECT(0xe258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe256));
        EXPECT(0xc, gbc.readMem(0xe257));
        // CB 0C 0059
        gbc.setState(0x4b52, 0xf9e0, 0x8be0, 0x2f5c, 0xfa3a, 0xccab, 0x1, 0x1);
        gbc.writeMem(0x4b52, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf9e0, gbc.sp());
        EXPECT(0x4b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 005A
        gbc.setState(0xdfe9, 0x5065, 0x5820, 0xb129, 0x9cf8, 0x89da, 0x1, 0x0);
        gbc.writeMem(0xdfe9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5065, gbc.sp());
        EXPECT(0xdfeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe9));
        EXPECT(0xc, gbc.readMem(0xdfea));
        // CB 0C 005C
        gbc.setState(0x6e, 0x2460, 0xa4c0, 0x9175, 0x868d, 0x9848, 0x1, 0x1);
        gbc.writeMem(0x6e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2460, gbc.sp());
        EXPECT(0x70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 005D
        gbc.setState(0x1809, 0xe9fd, 0x4d30, 0x67e9, 0xb6aa, 0x352, 0x0, 0x1);
        gbc.writeMem(0x1809, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe9fd, gbc.sp());
        EXPECT(0x180b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 005E
        gbc.setState(0x33db, 0x6287, 0x4ce0, 0x4447, 0x9c7, 0x330d, 0x0, 0x1);
        gbc.writeMem(0x33db, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6287, gbc.sp());
        EXPECT(0x33dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 005F
        gbc.setState(0xbd48, 0x9770, 0xe110, 0x5b69, 0x6a8d, 0x11c9, 0x1, 0x0);
        gbc.writeMem(0xbd48, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9770, gbc.sp());
        EXPECT(0xbd4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd48));
        EXPECT(0xc, gbc.readMem(0xbd49));
        // CB 0C 0060
        gbc.setState(0xe7d0, 0x1faf, 0x5d40, 0x57a5, 0xea6e, 0x9fad, 0x1, 0x1);
        gbc.writeMem(0xe7d0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1faf, gbc.sp());
        EXPECT(0xe7d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d0));
        EXPECT(0xc, gbc.readMem(0xe7d1));
        // CB 0C 0061
        gbc.setState(0x4d2, 0x3294, 0xd760, 0x4ae1, 0x3cf7, 0x4744, 0x1, 0x0);
        gbc.writeMem(0x4d2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3294, gbc.sp());
        EXPECT(0x4d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0063
        gbc.setState(0x40fc, 0x6cd3, 0xa550, 0x7795, 0xfed, 0xa5f6, 0x0, 0x0);
        gbc.writeMem(0x40fc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6cd3, gbc.sp());
        EXPECT(0x40fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0064
        gbc.setState(0x8af7, 0x7148, 0x9b70, 0x674f, 0xa0b8, 0xaa, 0x0, 0x0);
        gbc.writeMem(0x8af7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7148, gbc.sp());
        EXPECT(0x8af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af7));
        EXPECT(0xc, gbc.readMem(0x8af8));
        // CB 0C 0065
        gbc.setState(0xe5b7, 0xe8c0, 0xfc50, 0xe77f, 0x7b43, 0xac0, 0x0, 0x1);
        gbc.writeMem(0xe5b7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe8c0, gbc.sp());
        EXPECT(0xe5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b7));
        EXPECT(0xc, gbc.readMem(0xe5b8));
        // CB 0C 0066
        gbc.setState(0x5024, 0xae7, 0x34d0, 0xdcf8, 0x9d3c, 0x170e, 0x0, 0x1);
        gbc.writeMem(0x5024, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xae7, gbc.sp());
        EXPECT(0x5026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0067
        gbc.setState(0xa929, 0xbcb, 0x1780, 0x87ba, 0xa4d, 0xcce2, 0x1, 0x0);
        gbc.writeMem(0xa929, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbcb, gbc.sp());
        EXPECT(0xa92b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa929));
        EXPECT(0xc, gbc.readMem(0xa92a));
        // CB 0C 0068
        gbc.setState(0x4012, 0x2cea, 0x6d10, 0x9e95, 0x1647, 0x85a4, 0x1, 0x1);
        gbc.writeMem(0x4012, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2cea, gbc.sp());
        EXPECT(0x4014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0069
        gbc.setState(0x9e39, 0x1c12, 0x9b70, 0x13ad, 0x6e40, 0x6b03, 0x0, 0x0);
        gbc.writeMem(0x9e39, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1c12, gbc.sp());
        EXPECT(0x9e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e39));
        EXPECT(0xc, gbc.readMem(0x9e3a));
        // CB 0C 006A
        gbc.setState(0xc4ea, 0xd739, 0x7490, 0xc562, 0x4114, 0x71d0, 0x0, 0x0);
        gbc.writeMem(0xc4ea, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd739, gbc.sp());
        EXPECT(0xc4ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ea));
        EXPECT(0xc, gbc.readMem(0xc4eb));
        // CB 0C 006B
        gbc.setState(0xa1f9, 0x9add, 0x740, 0x698e, 0x6072, 0xcd5a, 0x1, 0x0);
        gbc.writeMem(0xa1f9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9add, gbc.sp());
        EXPECT(0xa1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f9));
        EXPECT(0xc, gbc.readMem(0xa1fa));
        // CB 0C 006C
        gbc.setState(0x47ed, 0x1d8d, 0x8cf0, 0x635c, 0xe2bd, 0x3bbb, 0x1, 0x0);
        gbc.writeMem(0x47ed, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1d8d, gbc.sp());
        EXPECT(0x47ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 006D
        gbc.setState(0x619b, 0x21bb, 0x3c30, 0x9060, 0x2d45, 0x1c44, 0x0, 0x1);
        gbc.writeMem(0x619b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x21bb, gbc.sp());
        EXPECT(0x619d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 006E
        gbc.setState(0xec89, 0x2c34, 0x78f0, 0xc771, 0x5eb5, 0xa585, 0x0, 0x1);
        gbc.writeMem(0xec89, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2c34, gbc.sp());
        EXPECT(0xec8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec89));
        EXPECT(0xc, gbc.readMem(0xec8a));
        // CB 0C 006F
        gbc.setState(0xe87b, 0xc4c2, 0xa230, 0xc390, 0x4277, 0xf610, 0x0, 0x0);
        gbc.writeMem(0xe87b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc4c2, gbc.sp());
        EXPECT(0xe87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe87b));
        EXPECT(0xc, gbc.readMem(0xe87c));
        // CB 0C 0070
        gbc.setState(0x5f54, 0xbd3d, 0x1a80, 0xcc0c, 0xb4b1, 0xfde3, 0x1, 0x1);
        gbc.writeMem(0x5f54, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbd3d, gbc.sp());
        EXPECT(0x5f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0071
        gbc.setState(0x36e0, 0xf9b1, 0x56d0, 0xee81, 0x563f, 0x4502, 0x0, 0x1);
        gbc.writeMem(0x36e0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf9b1, gbc.sp());
        EXPECT(0x36e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0072
        gbc.setState(0x52bc, 0x96bb, 0x53c0, 0xa185, 0xb3e0, 0x23f2, 0x1, 0x1);
        gbc.writeMem(0x52bc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x96bb, gbc.sp());
        EXPECT(0x52be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0073
        gbc.setState(0xaa79, 0x9d3b, 0x7880, 0x7c53, 0x9e42, 0x5ad0, 0x0, 0x0);
        gbc.writeMem(0xaa79, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9d3b, gbc.sp());
        EXPECT(0xaa7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa79));
        EXPECT(0xc, gbc.readMem(0xaa7a));
        // CB 0C 0075
        gbc.setState(0x9933, 0xdcb3, 0x94a0, 0x97f6, 0x193e, 0x44ca, 0x0, 0x0);
        gbc.writeMem(0x9933, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdcb3, gbc.sp());
        EXPECT(0x9935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9933));
        EXPECT(0xc, gbc.readMem(0x9934));
        // CB 0C 0078
        gbc.setState(0x15a5, 0xe1a2, 0x3fc0, 0xa663, 0x4683, 0xecbf, 0x0, 0x0);
        gbc.writeMem(0x15a5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe1a2, gbc.sp());
        EXPECT(0x15a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0079
        gbc.setState(0x22e6, 0x98a, 0xdaa0, 0x93e0, 0x11d5, 0xeed4, 0x0, 0x0);
        gbc.writeMem(0x22e6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x98a, gbc.sp());
        EXPECT(0x22e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 007A
        gbc.setState(0x2df, 0xc9e, 0xa7e0, 0x49a5, 0x5008, 0xe34c, 0x1, 0x0);
        gbc.writeMem(0x2df, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc9e, gbc.sp());
        EXPECT(0x2e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 007B
        gbc.setState(0x1507, 0x132f, 0x6a50, 0x51d3, 0xecd5, 0xae01, 0x0, 0x1);
        gbc.writeMem(0x1507, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x132f, gbc.sp());
        EXPECT(0x1509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 007C
        gbc.setState(0x1dc0, 0xb3c6, 0x2720, 0xa880, 0xe70a, 0x7115, 0x0, 0x0);
        gbc.writeMem(0x1dc0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb3c6, gbc.sp());
        EXPECT(0x1dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 007D
        gbc.setState(0x7504, 0x7522, 0x1d50, 0xce0e, 0xf55f, 0xb4f0, 0x0, 0x1);
        gbc.writeMem(0x7504, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7522, gbc.sp());
        EXPECT(0x7506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 007E
        gbc.setState(0x51f3, 0x7289, 0xb870, 0x30e3, 0xe400, 0xafd1, 0x0, 0x0);
        gbc.writeMem(0x51f3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7289, gbc.sp());
        EXPECT(0x51f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 007F
        gbc.setState(0xb026, 0x9259, 0xc100, 0xc5ec, 0xd45e, 0x2ce2, 0x0, 0x0);
        gbc.writeMem(0xb026, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9259, gbc.sp());
        EXPECT(0xb028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb026));
        EXPECT(0xc, gbc.readMem(0xb027));
        // CB 0C 0080
        gbc.setState(0x17a, 0x5087, 0x8d40, 0xa217, 0xa3eb, 0xd150, 0x1, 0x1);
        gbc.writeMem(0x17a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5087, gbc.sp());
        EXPECT(0x17c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0081
        gbc.setState(0xaca5, 0x971a, 0x3de0, 0x18ae, 0xa756, 0xb18a, 0x0, 0x0);
        gbc.writeMem(0xaca5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x971a, gbc.sp());
        EXPECT(0xaca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca5));
        EXPECT(0xc, gbc.readMem(0xaca6));
        // CB 0C 0082
        gbc.setState(0xddf8, 0x91e, 0x6650, 0xda25, 0x25, 0x1371, 0x1, 0x1);
        gbc.writeMem(0xddf8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x91e, gbc.sp());
        EXPECT(0xddfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf8));
        EXPECT(0xc, gbc.readMem(0xddf9));
        // CB 0C 0083
        gbc.setState(0x67aa, 0x9890, 0x5e30, 0x55dc, 0xd23e, 0x1a26, 0x0, 0x0);
        gbc.writeMem(0x67aa, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9890, gbc.sp());
        EXPECT(0x67ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0084
        gbc.setState(0xe14f, 0x505b, 0x6f50, 0x9612, 0xb611, 0x430e, 0x0, 0x1);
        gbc.writeMem(0xe14f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x505b, gbc.sp());
        EXPECT(0xe151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14f));
        EXPECT(0xc, gbc.readMem(0xe150));
        // CB 0C 0085
        gbc.setState(0xb38c, 0x55a5, 0x2820, 0xae39, 0xce70, 0x9ece, 0x0, 0x0);
        gbc.writeMem(0xb38c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x55a5, gbc.sp());
        EXPECT(0xb38e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb38c));
        EXPECT(0xc, gbc.readMem(0xb38d));
        // CB 0C 0086
        gbc.setState(0x24cf, 0xa105, 0xef60, 0xb127, 0x5321, 0x6b84, 0x0, 0x1);
        gbc.writeMem(0x24cf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa105, gbc.sp());
        EXPECT(0x24d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0087
        gbc.setState(0xbf54, 0x2707, 0x2390, 0xdab9, 0x4e63, 0xd730, 0x1, 0x0);
        gbc.writeMem(0xbf54, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2707, gbc.sp());
        EXPECT(0xbf56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf54));
        EXPECT(0xc, gbc.readMem(0xbf55));
        // CB 0C 0088
        gbc.setState(0xbfea, 0xf2f1, 0x2800, 0x3452, 0x42bf, 0xb409, 0x0, 0x0);
        gbc.writeMem(0xbfea, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf2f1, gbc.sp());
        EXPECT(0xbfec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfea));
        EXPECT(0xc, gbc.readMem(0xbfeb));
        // CB 0C 0089
        gbc.setState(0xadd, 0xc3a2, 0xc40, 0xec0, 0x42c5, 0x1b11, 0x1, 0x1);
        gbc.writeMem(0xadd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc3a2, gbc.sp());
        EXPECT(0xadf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 008A
        gbc.setState(0xcf82, 0x2026, 0x28a0, 0x3629, 0x913, 0xf1e8, 0x0, 0x1);
        gbc.writeMem(0xcf82, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2026, gbc.sp());
        EXPECT(0xcf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf82));
        EXPECT(0xc, gbc.readMem(0xcf83));
        // CB 0C 008B
        gbc.setState(0xd486, 0x9567, 0x5b80, 0x9e8a, 0x6c6b, 0xef49, 0x0, 0x1);
        gbc.writeMem(0xd486, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9567, gbc.sp());
        EXPECT(0xd488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd486));
        EXPECT(0xc, gbc.readMem(0xd487));
        // CB 0C 008C
        gbc.setState(0xaa9, 0x2b8, 0x1410, 0xfb0, 0xdd2e, 0xd5b5, 0x0, 0x1);
        gbc.writeMem(0xaa9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2b8, gbc.sp());
        EXPECT(0xaab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 008D
        gbc.setState(0x1020, 0x164c, 0x2380, 0xe08c, 0x585, 0x2d93, 0x0, 0x1);
        gbc.writeMem(0x1020, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x164c, gbc.sp());
        EXPECT(0x1022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 008E
        gbc.setState(0xc8c1, 0x547d, 0x5510, 0xb605, 0xb6da, 0x1676, 0x0, 0x0);
        gbc.writeMem(0xc8c1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x547d, gbc.sp());
        EXPECT(0xc8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c1));
        EXPECT(0xc, gbc.readMem(0xc8c2));
        // CB 0C 008F
        gbc.setState(0xea4a, 0x181f, 0xbcc0, 0xd884, 0x8e48, 0xb46d, 0x0, 0x0);
        gbc.writeMem(0xea4a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x181f, gbc.sp());
        EXPECT(0xea4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea4a));
        EXPECT(0xc, gbc.readMem(0xea4b));
        // CB 0C 0090
        gbc.setState(0xe824, 0x968d, 0x450, 0x30e1, 0x3a2, 0x65b5, 0x0, 0x0);
        gbc.writeMem(0xe824, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x968d, gbc.sp());
        EXPECT(0xe826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe824));
        EXPECT(0xc, gbc.readMem(0xe825));
        // CB 0C 0091
        gbc.setState(0x9c14, 0x819a, 0x810, 0x6f6d, 0x89cf, 0x22e5, 0x1, 0x0);
        gbc.writeMem(0x9c14, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x819a, gbc.sp());
        EXPECT(0x9c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c14));
        EXPECT(0xc, gbc.readMem(0x9c15));
        // CB 0C 0092
        gbc.setState(0x791c, 0xdb2d, 0x92f0, 0xae00, 0x89ac, 0x2496, 0x0, 0x0);
        gbc.writeMem(0x791c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xdb2d, gbc.sp());
        EXPECT(0x791e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0093
        gbc.setState(0xab16, 0x5d01, 0xb820, 0xe5e, 0xb17b, 0x2d25, 0x1, 0x1);
        gbc.writeMem(0xab16, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5d01, gbc.sp());
        EXPECT(0xab18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab16));
        EXPECT(0xc, gbc.readMem(0xab17));
        // CB 0C 0094
        gbc.setState(0x1619, 0x65f7, 0xcfe0, 0x6c37, 0xd76e, 0x7c1f, 0x1, 0x1);
        gbc.writeMem(0x1619, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x65f7, gbc.sp());
        EXPECT(0x161b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0095
        gbc.setState(0xa7c4, 0x77aa, 0xcae0, 0x4907, 0x877a, 0x834c, 0x0, 0x1);
        gbc.writeMem(0xa7c4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x77aa, gbc.sp());
        EXPECT(0xa7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c4));
        EXPECT(0xc, gbc.readMem(0xa7c5));
        // CB 0C 0096
        gbc.setState(0x2781, 0x5d9b, 0x7880, 0x1454, 0x5e72, 0x8589, 0x1, 0x0);
        gbc.writeMem(0x2781, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5d9b, gbc.sp());
        EXPECT(0x2783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0097
        gbc.setState(0x88a, 0x11f3, 0xa2f0, 0x5dd2, 0xe68e, 0xa7cf, 0x0, 0x0);
        gbc.writeMem(0x88a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x11f3, gbc.sp());
        EXPECT(0x88c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0098
        gbc.setState(0xee29, 0x86f3, 0x8a70, 0xa7a5, 0x756f, 0x89ee, 0x1, 0x1);
        gbc.writeMem(0xee29, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x86f3, gbc.sp());
        EXPECT(0xee2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee29));
        EXPECT(0xc, gbc.readMem(0xee2a));
        // CB 0C 0099
        gbc.setState(0x4a13, 0x2e45, 0xc520, 0x8593, 0xad28, 0x298, 0x1, 0x0);
        gbc.writeMem(0x4a13, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2e45, gbc.sp());
        EXPECT(0x4a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 009A
        gbc.setState(0x2f4d, 0xac7f, 0x22a0, 0x3f8b, 0xf4ae, 0xe220, 0x0, 0x0);
        gbc.writeMem(0x2f4d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xac7f, gbc.sp());
        EXPECT(0x2f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 009B
        gbc.setState(0x732e, 0x36e, 0xecf0, 0x5680, 0x72c8, 0xadfc, 0x0, 0x0);
        gbc.writeMem(0x732e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x36e, gbc.sp());
        EXPECT(0x7330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 009D
        gbc.setState(0xbf41, 0x1b83, 0xe010, 0xd370, 0xded, 0xdb6, 0x1, 0x0);
        gbc.writeMem(0xbf41, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1b83, gbc.sp());
        EXPECT(0xbf43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf41));
        EXPECT(0xc, gbc.readMem(0xbf42));
        // CB 0C 009E
        gbc.setState(0x5ff6, 0xdcb9, 0x7eb0, 0xb150, 0x9145, 0x7a32, 0x1, 0x1);
        gbc.writeMem(0x5ff6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdcb9, gbc.sp());
        EXPECT(0x5ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 009F
        gbc.setState(0x1ac, 0x3bff, 0xe490, 0xad3, 0xe362, 0x78ca, 0x0, 0x0);
        gbc.writeMem(0x1ac, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3bff, gbc.sp());
        EXPECT(0x1ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 00A0
        gbc.setState(0xc990, 0x9eed, 0x8de0, 0xad6d, 0x4f64, 0x399, 0x1, 0x1);
        gbc.writeMem(0xc990, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9eed, gbc.sp());
        EXPECT(0xc992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc990));
        EXPECT(0xc, gbc.readMem(0xc991));
        // CB 0C 00A1
        gbc.setState(0x225a, 0x135c, 0x990, 0xa04b, 0x1e1b, 0xd14d, 0x0, 0x1);
        gbc.writeMem(0x225a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x135c, gbc.sp());
        EXPECT(0x225c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00A2
        gbc.setState(0xdf2b, 0x7901, 0xdef0, 0x18f9, 0xf468, 0xaf3a, 0x1, 0x1);
        gbc.writeMem(0xdf2b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7901, gbc.sp());
        EXPECT(0xdf2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf2b));
        EXPECT(0xc, gbc.readMem(0xdf2c));
        // CB 0C 00A3
        gbc.setState(0x5e3f, 0x89a7, 0xf310, 0xc8b3, 0x6367, 0x1a35, 0x1, 0x1);
        gbc.writeMem(0x5e3f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x89a7, gbc.sp());
        EXPECT(0x5e41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 00A4
        gbc.setState(0xb651, 0xfd5e, 0x59c0, 0x6be, 0x57cb, 0x9cce, 0x0, 0x1);
        gbc.writeMem(0xb651, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfd5e, gbc.sp());
        EXPECT(0xb653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb651));
        EXPECT(0xc, gbc.readMem(0xb652));
        // CB 0C 00A6
        gbc.setState(0x369f, 0x5bb6, 0xcd80, 0xdcb5, 0xa813, 0x9dbd, 0x1, 0x0);
        gbc.writeMem(0x369f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5bb6, gbc.sp());
        EXPECT(0x36a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00A7
        gbc.setState(0xb21a, 0xd172, 0x15a0, 0x8696, 0x725, 0x9a6f, 0x0, 0x1);
        gbc.writeMem(0xb21a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd172, gbc.sp());
        EXPECT(0xb21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb21a));
        EXPECT(0xc, gbc.readMem(0xb21b));
        // CB 0C 00A8
        gbc.setState(0x9f9b, 0x3ff0, 0x74b0, 0x38b0, 0x8689, 0xd9dd, 0x1, 0x0);
        gbc.writeMem(0x9f9b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3ff0, gbc.sp());
        EXPECT(0x9f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f9b));
        EXPECT(0xc, gbc.readMem(0x9f9c));
        // CB 0C 00A9
        gbc.setState(0x458c, 0x2d7, 0x2990, 0x4470, 0x803, 0x8206, 0x0, 0x0);
        gbc.writeMem(0x458c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2d7, gbc.sp());
        EXPECT(0x458e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 00AA
        gbc.setState(0xe677, 0x58b3, 0x4f10, 0x308d, 0x9937, 0xf164, 0x0, 0x0);
        gbc.writeMem(0xe677, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x58b3, gbc.sp());
        EXPECT(0xe679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe677));
        EXPECT(0xc, gbc.readMem(0xe678));
        // CB 0C 00AB
        gbc.setState(0xec11, 0xd6ed, 0xf040, 0x49ee, 0x7867, 0x5d2c, 0x1, 0x1);
        gbc.writeMem(0xec11, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd6ed, gbc.sp());
        EXPECT(0xec13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec11));
        EXPECT(0xc, gbc.readMem(0xec12));
        // CB 0C 00AC
        gbc.setState(0x26, 0xebd2, 0x1530, 0xad23, 0x53e9, 0x2fc7, 0x1, 0x1);
        gbc.writeMem(0x26, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xebd2, gbc.sp());
        EXPECT(0x28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00AD
        gbc.setState(0xa4f2, 0xa4e, 0xd910, 0x414e, 0x3c60, 0xe7db, 0x0, 0x0);
        gbc.writeMem(0xa4f2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa4e, gbc.sp());
        EXPECT(0xa4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f2));
        EXPECT(0xc, gbc.readMem(0xa4f3));
        // CB 0C 00AE
        gbc.setState(0x6da8, 0xd84f, 0x6470, 0x3d27, 0x1958, 0x891c, 0x1, 0x1);
        gbc.writeMem(0x6da8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd84f, gbc.sp());
        EXPECT(0x6daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00AF
        gbc.setState(0x1335, 0x14d5, 0x99b0, 0xdf4a, 0xe162, 0xa5eb, 0x1, 0x0);
        gbc.writeMem(0x1335, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x14d5, gbc.sp());
        EXPECT(0x1337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00B0
        gbc.setState(0xc776, 0xb396, 0x10f0, 0x813, 0x830a, 0x1927, 0x1, 0x1);
        gbc.writeMem(0xc776, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb396, gbc.sp());
        EXPECT(0xc778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc776));
        EXPECT(0xc, gbc.readMem(0xc777));
        // CB 0C 00B1
        gbc.setState(0xd9fd, 0x705f, 0x540, 0xc7b7, 0x6c16, 0xb845, 0x1, 0x1);
        gbc.writeMem(0xd9fd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x705f, gbc.sp());
        EXPECT(0xd9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9fd));
        EXPECT(0xc, gbc.readMem(0xd9fe));
        // CB 0C 00B2
        gbc.setState(0x1d84, 0x27bb, 0x4ab0, 0xb234, 0x2225, 0xb8ee, 0x0, 0x1);
        gbc.writeMem(0x1d84, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x27bb, gbc.sp());
        EXPECT(0x1d86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 00B3
        gbc.setState(0xe0fc, 0xe71c, 0xde40, 0x4d99, 0x1005, 0xc8d, 0x1, 0x0);
        gbc.writeMem(0xe0fc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe71c, gbc.sp());
        EXPECT(0xe0fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0fc));
        EXPECT(0xc, gbc.readMem(0xe0fd));
        // CB 0C 00B4
        gbc.setState(0x547d, 0x89d3, 0xc840, 0xb6aa, 0x3750, 0x2a7d, 0x1, 0x1);
        gbc.writeMem(0x547d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x89d3, gbc.sp());
        EXPECT(0x547f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 00B5
        gbc.setState(0x31ba, 0x23ed, 0x7ed0, 0xb483, 0x303a, 0xa597, 0x1, 0x0);
        gbc.writeMem(0x31ba, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x23ed, gbc.sp());
        EXPECT(0x31bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00B6
        gbc.setState(0x8c03, 0xe636, 0xb910, 0xa300, 0x64d, 0x6c0, 0x0, 0x1);
        gbc.writeMem(0x8c03, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe636, gbc.sp());
        EXPECT(0x8c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c03));
        EXPECT(0xc, gbc.readMem(0x8c04));
        // CB 0C 00B7
        gbc.setState(0x78a4, 0x6537, 0x3040, 0xc6e7, 0xc973, 0x4781, 0x1, 0x0);
        gbc.writeMem(0x78a4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6537, gbc.sp());
        EXPECT(0x78a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00B8
        gbc.setState(0xebd0, 0xa4d9, 0x4860, 0x1e29, 0x6589, 0xe740, 0x0, 0x1);
        gbc.writeMem(0xebd0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa4d9, gbc.sp());
        EXPECT(0xebd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd0));
        EXPECT(0xc, gbc.readMem(0xebd1));
        // CB 0C 00B9
        gbc.setState(0xd781, 0xa069, 0x3190, 0xab96, 0xc167, 0xd5c0, 0x1, 0x1);
        gbc.writeMem(0xd781, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa069, gbc.sp());
        EXPECT(0xd783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd781));
        EXPECT(0xc, gbc.readMem(0xd782));
        // CB 0C 00BA
        gbc.setState(0x6324, 0xd204, 0xca70, 0x7f71, 0x363d, 0x66eb, 0x1, 0x0);
        gbc.writeMem(0x6324, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd204, gbc.sp());
        EXPECT(0x6326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 00BB
        gbc.setState(0xc954, 0x8c99, 0x46f0, 0xb2f5, 0xcc7d, 0x149a, 0x0, 0x0);
        gbc.writeMem(0xc954, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8c99, gbc.sp());
        EXPECT(0xc956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc954));
        EXPECT(0xc, gbc.readMem(0xc955));
        // CB 0C 00BC
        gbc.setState(0xcbc, 0x2686, 0x94f0, 0x241c, 0xa400, 0x292d, 0x0, 0x0);
        gbc.writeMem(0xcbc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2686, gbc.sp());
        EXPECT(0xcbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00BD
        gbc.setState(0xa5bc, 0xd8b3, 0x2dd0, 0xb9, 0x7ebd, 0x48a1, 0x1, 0x1);
        gbc.writeMem(0xa5bc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd8b3, gbc.sp());
        EXPECT(0xa5be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5bc));
        EXPECT(0xc, gbc.readMem(0xa5bd));
        // CB 0C 00BE
        gbc.setState(0xe048, 0x8175, 0x3c10, 0x425c, 0x1500, 0x807, 0x1, 0x1);
        gbc.writeMem(0xe048, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8175, gbc.sp());
        EXPECT(0xe04a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe048));
        EXPECT(0xc, gbc.readMem(0xe049));
        // CB 0C 00BF
        gbc.setState(0x68ef, 0xf90e, 0xf380, 0xbc3, 0x3a05, 0x3e49, 0x1, 0x0);
        gbc.writeMem(0x68ef, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf90e, gbc.sp());
        EXPECT(0x68f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 00C0
        gbc.setState(0xe72, 0x7002, 0x680, 0x9ff5, 0xa122, 0x8e71, 0x0, 0x0);
        gbc.writeMem(0xe72, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7002, gbc.sp());
        EXPECT(0xe74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 00C1
        gbc.setState(0x9c1a, 0xf932, 0x77f0, 0xad8c, 0xdff0, 0xb1f7, 0x1, 0x0);
        gbc.writeMem(0x9c1a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf932, gbc.sp());
        EXPECT(0x9c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c1a));
        EXPECT(0xc, gbc.readMem(0x9c1b));
        // CB 0C 00C2
        gbc.setState(0x4f8f, 0xaa25, 0xeba0, 0x31d6, 0x9a54, 0xbca1, 0x0, 0x0);
        gbc.writeMem(0x4f8f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xaa25, gbc.sp());
        EXPECT(0x4f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 00C4
        gbc.setState(0xc9bf, 0x7ce7, 0x3790, 0xec64, 0x1bdb, 0x470c, 0x1, 0x1);
        gbc.writeMem(0xc9bf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7ce7, gbc.sp());
        EXPECT(0xc9c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9bf));
        EXPECT(0xc, gbc.readMem(0xc9c0));
        // CB 0C 00C5
        gbc.setState(0xd436, 0x7c07, 0x36c0, 0xd7d6, 0xf761, 0x62ba, 0x0, 0x0);
        gbc.writeMem(0xd436, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7c07, gbc.sp());
        EXPECT(0xd438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd436));
        EXPECT(0xc, gbc.readMem(0xd437));
        // CB 0C 00C6
        gbc.setState(0x2ff6, 0xa44d, 0x2b60, 0x78ba, 0xc77, 0xd275, 0x0, 0x0);
        gbc.writeMem(0x2ff6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa44d, gbc.sp());
        EXPECT(0x2ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 00C7
        gbc.setState(0x3554, 0xf037, 0x28f0, 0xaa63, 0x7b12, 0x93ab, 0x1, 0x1);
        gbc.writeMem(0x3554, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf037, gbc.sp());
        EXPECT(0x3556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00C8
        gbc.setState(0x584d, 0x1bdd, 0x9720, 0xfdaa, 0xfb44, 0xfb80, 0x1, 0x1);
        gbc.writeMem(0x584d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1bdd, gbc.sp());
        EXPECT(0x584f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00C9
        gbc.setState(0x43c9, 0x5534, 0x8e30, 0xe596, 0x1e8c, 0xe845, 0x1, 0x1);
        gbc.writeMem(0x43c9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5534, gbc.sp());
        EXPECT(0x43cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 00CA
        gbc.setState(0xccca, 0xa0b5, 0x9590, 0xd4bf, 0x6289, 0xb369, 0x0, 0x1);
        gbc.writeMem(0xccca, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa0b5, gbc.sp());
        EXPECT(0xcccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccca));
        EXPECT(0xc, gbc.readMem(0xcccb));
        // CB 0C 00CB
        gbc.setState(0xa7c7, 0xfcb1, 0xc150, 0xd3b9, 0x81e8, 0xbe79, 0x1, 0x1);
        gbc.writeMem(0xa7c7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfcb1, gbc.sp());
        EXPECT(0xa7c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c7));
        EXPECT(0xc, gbc.readMem(0xa7c8));
        // CB 0C 00CC
        gbc.setState(0xd103, 0x77b1, 0x34b0, 0x52a4, 0x41c2, 0xf00c, 0x1, 0x0);
        gbc.writeMem(0xd103, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x77b1, gbc.sp());
        EXPECT(0xd105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd103));
        EXPECT(0xc, gbc.readMem(0xd104));
        // CB 0C 00CD
        gbc.setState(0x4dae, 0xe757, 0x19e0, 0xf4c, 0x8c0, 0x227, 0x1, 0x1);
        gbc.writeMem(0x4dae, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe757, gbc.sp());
        EXPECT(0x4db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 00CE
        gbc.setState(0xb6eb, 0x2d50, 0x18c0, 0x120, 0xa020, 0xa2cf, 0x1, 0x0);
        gbc.writeMem(0xb6eb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2d50, gbc.sp());
        EXPECT(0xb6ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6eb));
        EXPECT(0xc, gbc.readMem(0xb6ec));
        // CB 0C 00CF
        gbc.setState(0xe9d1, 0x6e7d, 0x1480, 0x6f1a, 0x1fa7, 0x4776, 0x1, 0x0);
        gbc.writeMem(0xe9d1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6e7d, gbc.sp());
        EXPECT(0xe9d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d1));
        EXPECT(0xc, gbc.readMem(0xe9d2));
        // CB 0C 00D0
        gbc.setState(0x7b6c, 0x49fd, 0x7900, 0xb7b9, 0x95a1, 0x3f4, 0x1, 0x0);
        gbc.writeMem(0x7b6c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x49fd, gbc.sp());
        EXPECT(0x7b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00D1
        gbc.setState(0xa7fd, 0x6b1d, 0x7af0, 0xba92, 0x862d, 0x4cbb, 0x1, 0x1);
        gbc.writeMem(0xa7fd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6b1d, gbc.sp());
        EXPECT(0xa7ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7fd));
        EXPECT(0xc, gbc.readMem(0xa7fe));
        // CB 0C 00D3
        gbc.setState(0x55d8, 0xa29d, 0xc60, 0x24ac, 0xe0e7, 0xe39a, 0x1, 0x1);
        gbc.writeMem(0x55d8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa29d, gbc.sp());
        EXPECT(0x55da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00D4
        gbc.setState(0xe03, 0x4ec8, 0x4aa0, 0xae13, 0xe7ec, 0x86fc, 0x1, 0x1);
        gbc.writeMem(0xe03, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4ec8, gbc.sp());
        EXPECT(0xe05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 00D5
        gbc.setState(0x6087, 0xe011, 0x7c30, 0xb1ca, 0x6e63, 0xb96a, 0x1, 0x1);
        gbc.writeMem(0x6087, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe011, gbc.sp());
        EXPECT(0x6089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00D6
        gbc.setState(0x2b34, 0xd2bc, 0xbbf0, 0x4ad, 0xc472, 0x6d5f, 0x0, 0x0);
        gbc.writeMem(0x2b34, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd2bc, gbc.sp());
        EXPECT(0x2b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00D7
        gbc.setState(0xc969, 0x9d1e, 0xaef0, 0x22ee, 0xf6a0, 0xbf2d, 0x1, 0x1);
        gbc.writeMem(0xc969, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9d1e, gbc.sp());
        EXPECT(0xc96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc969));
        EXPECT(0xc, gbc.readMem(0xc96a));
        // CB 0C 00D8
        gbc.setState(0x9888, 0xb525, 0xd570, 0x7a3e, 0x84d7, 0x43fa, 0x1, 0x0);
        gbc.writeMem(0x9888, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb525, gbc.sp());
        EXPECT(0x988a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9888));
        EXPECT(0xc, gbc.readMem(0x9889));
        // CB 0C 00D9
        gbc.setState(0x11e, 0x8e08, 0x4040, 0xed3b, 0xce17, 0x74ed, 0x1, 0x1);
        gbc.writeMem(0x11e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8e08, gbc.sp());
        EXPECT(0x120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 00DA
        gbc.setState(0x8225, 0x72a5, 0x4200, 0xd075, 0x3ea4, 0x67b0, 0x1, 0x0);
        gbc.writeMem(0x8225, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x72a5, gbc.sp());
        EXPECT(0x8227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8225));
        EXPECT(0xc, gbc.readMem(0x8226));
        // CB 0C 00DC
        gbc.setState(0x7d68, 0x5246, 0xeaa0, 0x42da, 0xe5a8, 0x7144, 0x0, 0x0);
        gbc.writeMem(0x7d68, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5246, gbc.sp());
        EXPECT(0x7d6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00DD
        gbc.setState(0xb73, 0x75bf, 0xafe0, 0xc3e8, 0x3715, 0x964e, 0x0, 0x0);
        gbc.writeMem(0xb73, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x75bf, gbc.sp());
        EXPECT(0xb75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 00DE
        gbc.setState(0x8209, 0x6f9b, 0xe300, 0xe262, 0xb214, 0x68d0, 0x0, 0x1);
        gbc.writeMem(0x8209, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6f9b, gbc.sp());
        EXPECT(0x820b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8209));
        EXPECT(0xc, gbc.readMem(0x820a));
        // CB 0C 00DF
        gbc.setState(0xcf92, 0xa99b, 0xeea0, 0xd799, 0x2341, 0x26fe, 0x1, 0x1);
        gbc.writeMem(0xcf92, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa99b, gbc.sp());
        EXPECT(0xcf94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf92));
        EXPECT(0xc, gbc.readMem(0xcf93));
        // CB 0C 00E0
        gbc.setState(0x5fc0, 0xd669, 0xca60, 0x8b59, 0x32e9, 0x2b0f, 0x1, 0x1);
        gbc.writeMem(0x5fc0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd669, gbc.sp());
        EXPECT(0x5fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00E1
        gbc.setState(0xcd0e, 0xc7ff, 0xfd40, 0x786a, 0xebda, 0xf81e, 0x1, 0x0);
        gbc.writeMem(0xcd0e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc7ff, gbc.sp());
        EXPECT(0xcd10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd0e));
        EXPECT(0xc, gbc.readMem(0xcd0f));
        // CB 0C 00E3
        gbc.setState(0x80ef, 0xcfd0, 0xc140, 0x619, 0x3ea7, 0xda4a, 0x0, 0x0);
        gbc.writeMem(0x80ef, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcfd0, gbc.sp());
        EXPECT(0x80f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ef));
        EXPECT(0xc, gbc.readMem(0x80f0));
        // CB 0C 00E4
        gbc.setState(0xde8e, 0x57d, 0x5a40, 0x1579, 0x16a6, 0x8925, 0x0, 0x0);
        gbc.writeMem(0xde8e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x57d, gbc.sp());
        EXPECT(0xde90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde8e));
        EXPECT(0xc, gbc.readMem(0xde8f));
        // CB 0C 00E5
        gbc.setState(0x39e9, 0xa0e3, 0xa1a0, 0xe17a, 0xbe1, 0x5e36, 0x1, 0x1);
        gbc.writeMem(0x39e9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa0e3, gbc.sp());
        EXPECT(0x39eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 00E6
        gbc.setState(0x82e6, 0x6d3c, 0xfe30, 0xbc27, 0xa1f0, 0x4457, 0x0, 0x1);
        gbc.writeMem(0x82e6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6d3c, gbc.sp());
        EXPECT(0x82e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e6));
        EXPECT(0xc, gbc.readMem(0x82e7));
        // CB 0C 00E7
        gbc.setState(0x6ffd, 0x6f7c, 0x1070, 0xdbf9, 0x69fe, 0xc3f9, 0x0, 0x1);
        gbc.writeMem(0x6ffd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6f7c, gbc.sp());
        EXPECT(0x6fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00E8
        gbc.setState(0x1a34, 0x47ac, 0x5a90, 0xa776, 0x7290, 0x1fe8, 0x1, 0x1);
        gbc.writeMem(0x1a34, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x47ac, gbc.sp());
        EXPECT(0x1a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00E9
        gbc.setState(0x8b9f, 0x437d, 0x780, 0xdefe, 0x754, 0x4af4, 0x0, 0x0);
        gbc.writeMem(0x8b9f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x437d, gbc.sp());
        EXPECT(0x8ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b9f));
        EXPECT(0xc, gbc.readMem(0x8ba0));
        // CB 0C 00EA
        gbc.setState(0x301b, 0xafeb, 0xa990, 0x6c25, 0xf707, 0x2d13, 0x1, 0x0);
        gbc.writeMem(0x301b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xafeb, gbc.sp());
        EXPECT(0x301d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00EB
        gbc.setState(0xafa6, 0x799f, 0xddb0, 0x3556, 0x5b63, 0xc113, 0x0, 0x1);
        gbc.writeMem(0xafa6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x799f, gbc.sp());
        EXPECT(0xafa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa6));
        EXPECT(0xc, gbc.readMem(0xafa7));
        // CB 0C 00EC
        gbc.setState(0x63bd, 0xe0f7, 0x61c0, 0xa69d, 0x76df, 0x1987, 0x0, 0x0);
        gbc.writeMem(0x63bd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe0f7, gbc.sp());
        EXPECT(0x63bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00ED
        gbc.setState(0x86e2, 0xc6db, 0x7650, 0x161b, 0x11c6, 0x59d2, 0x0, 0x1);
        gbc.writeMem(0x86e2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc6db, gbc.sp());
        EXPECT(0x86e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e2));
        EXPECT(0xc, gbc.readMem(0x86e3));
        // CB 0C 00EE
        gbc.setState(0x8d85, 0x8c4d, 0x7a60, 0xf7bd, 0x6f13, 0x6e67, 0x0, 0x1);
        gbc.writeMem(0x8d85, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8c4d, gbc.sp());
        EXPECT(0x8d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d85));
        EXPECT(0xc, gbc.readMem(0x8d86));
        // CB 0C 00EF
        gbc.setState(0xa67b, 0xe291, 0xd50, 0x7fda, 0xc4c9, 0x3d36, 0x0, 0x0);
        gbc.writeMem(0xa67b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe291, gbc.sp());
        EXPECT(0xa67d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa67b));
        EXPECT(0xc, gbc.readMem(0xa67c));
        // CB 0C 00F0
        gbc.setState(0x675d, 0x155f, 0x340, 0x2f49, 0x2855, 0x5843, 0x1, 0x0);
        gbc.writeMem(0x675d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x155f, gbc.sp());
        EXPECT(0x675f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 00F1
        gbc.setState(0x1b5e, 0x3de, 0xff0, 0xbe52, 0x3f0e, 0xdf5c, 0x1, 0x0);
        gbc.writeMem(0x1b5e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3de, gbc.sp());
        EXPECT(0x1b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00F2
        gbc.setState(0xc11b, 0xd514, 0x720, 0xddb, 0x2efd, 0xbc17, 0x1, 0x1);
        gbc.writeMem(0xc11b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd514, gbc.sp());
        EXPECT(0xc11d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc11b));
        EXPECT(0xc, gbc.readMem(0xc11c));
        // CB 0C 00F3
        gbc.setState(0x571f, 0xbfe3, 0xff40, 0xbc5b, 0xe04d, 0x9db1, 0x1, 0x1);
        gbc.writeMem(0x571f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbfe3, gbc.sp());
        EXPECT(0x5721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00F4
        gbc.setState(0x4f17, 0xc58e, 0xbfe0, 0x94aa, 0xc1eb, 0x543, 0x0, 0x1);
        gbc.writeMem(0x4f17, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc58e, gbc.sp());
        EXPECT(0x4f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00F5
        gbc.setState(0x4bb8, 0x156d, 0xbf40, 0x5d3a, 0xbdcd, 0x3fcf, 0x0, 0x1);
        gbc.writeMem(0x4bb8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x156d, gbc.sp());
        EXPECT(0x4bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00F6
        gbc.setState(0x9f75, 0x8e32, 0xc850, 0x3204, 0xc40b, 0xb5fc, 0x0, 0x1);
        gbc.writeMem(0x9f75, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8e32, gbc.sp());
        EXPECT(0x9f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f75));
        EXPECT(0xc, gbc.readMem(0x9f76));
        // CB 0C 00F7
        gbc.setState(0x9453, 0x99e3, 0x8060, 0x8514, 0x4a11, 0xd43d, 0x1, 0x0);
        gbc.writeMem(0x9453, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x99e3, gbc.sp());
        EXPECT(0x9455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9453));
        EXPECT(0xc, gbc.readMem(0x9454));
        // CB 0C 00F8
        gbc.setState(0xb423, 0xd280, 0xecd0, 0xb39b, 0x70a6, 0x2235, 0x0, 0x0);
        gbc.writeMem(0xb423, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd280, gbc.sp());
        EXPECT(0xb425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb423));
        EXPECT(0xc, gbc.readMem(0xb424));
        // CB 0C 00F9
        gbc.setState(0x112e, 0x2a2f, 0xe170, 0x3d08, 0x717d, 0x73ff, 0x0, 0x1);
        gbc.writeMem(0x112e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2a2f, gbc.sp());
        EXPECT(0x1130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00FA
        gbc.setState(0xa3b2, 0xf3aa, 0x960, 0x3c23, 0x8545, 0x4dd2, 0x1, 0x0);
        gbc.writeMem(0xa3b2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf3aa, gbc.sp());
        EXPECT(0xa3b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3b2));
        EXPECT(0xc, gbc.readMem(0xa3b3));
        // CB 0C 00FB
        gbc.setState(0xea72, 0x8e32, 0x4740, 0x1054, 0x4c8f, 0x887f, 0x1, 0x0);
        gbc.writeMem(0xea72, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8e32, gbc.sp());
        EXPECT(0xea74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea72));
        EXPECT(0xc, gbc.readMem(0xea73));
        // CB 0C 00FC
        gbc.setState(0xa2b9, 0x1c24, 0xb9d0, 0xb9e, 0xa653, 0x2475, 0x0, 0x1);
        gbc.writeMem(0xa2b9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1c24, gbc.sp());
        EXPECT(0xa2bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2b9));
        EXPECT(0xc, gbc.readMem(0xa2ba));
        // CB 0C 00FD
        gbc.setState(0x4a67, 0x3d0e, 0x8260, 0x76fa, 0x5092, 0xa735, 0x1, 0x0);
        gbc.writeMem(0x4a67, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3d0e, gbc.sp());
        EXPECT(0x4a69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 00FE
        gbc.setState(0xe874, 0xfb52, 0xf110, 0x5453, 0x4078, 0xe7d1, 0x1, 0x1);
        gbc.writeMem(0xe874, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xfb52, gbc.sp());
        EXPECT(0xe876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe874));
        EXPECT(0xc, gbc.readMem(0xe875));
        // CB 0C 00FF
        gbc.setState(0x8c00, 0xc2d1, 0xf6c0, 0xe8ec, 0x593e, 0x790d, 0x1, 0x1);
        gbc.writeMem(0x8c00, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc2d1, gbc.sp());
        EXPECT(0x8c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c00));
        EXPECT(0xc, gbc.readMem(0x8c01));
        // CB 0C 0100
        gbc.setState(0xe950, 0x1cb7, 0x45e0, 0x2f40, 0xc896, 0xccc4, 0x1, 0x1);
        gbc.writeMem(0xe950, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1cb7, gbc.sp());
        EXPECT(0xe952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe950));
        EXPECT(0xc, gbc.readMem(0xe951));
        // CB 0C 0101
        gbc.setState(0xbcf3, 0xf425, 0x6b80, 0x5fd3, 0x48d9, 0xf07d, 0x1, 0x0);
        gbc.writeMem(0xbcf3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf425, gbc.sp());
        EXPECT(0xbcf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf3));
        EXPECT(0xc, gbc.readMem(0xbcf4));
        // CB 0C 0102
        gbc.setState(0xa1c9, 0x17b8, 0x1d30, 0x10f, 0x7a29, 0x725b, 0x0, 0x1);
        gbc.writeMem(0xa1c9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x17b8, gbc.sp());
        EXPECT(0xa1cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c9));
        EXPECT(0xc, gbc.readMem(0xa1ca));
        // CB 0C 0103
        gbc.setState(0x35e7, 0xc4d, 0x5120, 0x583e, 0x571c, 0x18cd, 0x1, 0x0);
        gbc.writeMem(0x35e7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc4d, gbc.sp());
        EXPECT(0x35e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0104
        gbc.setState(0x9f51, 0x6c5e, 0x5d40, 0x1c6f, 0x8d04, 0xd399, 0x0, 0x0);
        gbc.writeMem(0x9f51, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6c5e, gbc.sp());
        EXPECT(0x9f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f51));
        EXPECT(0xc, gbc.readMem(0x9f52));
        // CB 0C 0105
        gbc.setState(0xd3ff, 0x7e1f, 0x6260, 0x6956, 0x5c55, 0x913a, 0x1, 0x0);
        gbc.writeMem(0xd3ff, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7e1f, gbc.sp());
        EXPECT(0xd401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ff));
        EXPECT(0xc, gbc.readMem(0xd400));
        // CB 0C 0106
        gbc.setState(0x61b6, 0x333a, 0xbce0, 0x2392, 0x83ad, 0x972, 0x1, 0x0);
        gbc.writeMem(0x61b6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x333a, gbc.sp());
        EXPECT(0x61b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0107
        gbc.setState(0x6b88, 0xdc1a, 0x92e0, 0x6f89, 0xfdbc, 0xc976, 0x1, 0x1);
        gbc.writeMem(0x6b88, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdc1a, gbc.sp());
        EXPECT(0x6b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0108
        gbc.setState(0x1168, 0x65b2, 0x4180, 0x9b71, 0x1733, 0xc882, 0x1, 0x0);
        gbc.writeMem(0x1168, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x65b2, gbc.sp());
        EXPECT(0x116a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0109
        gbc.setState(0x1942, 0xb5d, 0x6390, 0xfc44, 0xd7ce, 0x61ce, 0x1, 0x1);
        gbc.writeMem(0x1942, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb5d, gbc.sp());
        EXPECT(0x1944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 010A
        gbc.setState(0x65ba, 0xe9b6, 0x6560, 0xfabe, 0xecfa, 0x8052, 0x0, 0x1);
        gbc.writeMem(0x65ba, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe9b6, gbc.sp());
        EXPECT(0x65bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 010B
        gbc.setState(0xc133, 0xa736, 0x47f0, 0x7a6e, 0xa673, 0xc616, 0x0, 0x0);
        gbc.writeMem(0xc133, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa736, gbc.sp());
        EXPECT(0xc135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc133));
        EXPECT(0xc, gbc.readMem(0xc134));
        // CB 0C 010C
        gbc.setState(0x433e, 0x7c05, 0x4430, 0x55d4, 0x3a74, 0xa0b2, 0x1, 0x0);
        gbc.writeMem(0x433e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7c05, gbc.sp());
        EXPECT(0x4340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 010D
        gbc.setState(0x6852, 0xe596, 0xf540, 0x67fe, 0xbb6b, 0xb006, 0x1, 0x1);
        gbc.writeMem(0x6852, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe596, gbc.sp());
        EXPECT(0x6854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 010E
        gbc.setState(0xcf76, 0xd999, 0x73b0, 0x3ccd, 0x8413, 0x2a38, 0x1, 0x0);
        gbc.writeMem(0xcf76, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd999, gbc.sp());
        EXPECT(0xcf78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf76));
        EXPECT(0xc, gbc.readMem(0xcf77));
        // CB 0C 010F
        gbc.setState(0x1696, 0x4422, 0xdb00, 0xb6ea, 0xe069, 0xf9ee, 0x1, 0x0);
        gbc.writeMem(0x1696, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4422, gbc.sp());
        EXPECT(0x1698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0110
        gbc.setState(0x8d2a, 0x84a4, 0xda20, 0x41c7, 0x25f1, 0x439f, 0x0, 0x1);
        gbc.writeMem(0x8d2a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x84a4, gbc.sp());
        EXPECT(0x8d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d2a));
        EXPECT(0xc, gbc.readMem(0x8d2b));
        // CB 0C 0111
        gbc.setState(0x526a, 0x90d6, 0xa690, 0xdc5d, 0x6d08, 0x7edc, 0x1, 0x0);
        gbc.writeMem(0x526a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x90d6, gbc.sp());
        EXPECT(0x526c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0112
        gbc.setState(0x230d, 0x2483, 0x9750, 0x2c8, 0x4a3b, 0x7417, 0x0, 0x1);
        gbc.writeMem(0x230d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2483, gbc.sp());
        EXPECT(0x230f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0113
        gbc.setState(0x9b54, 0xcb64, 0x2450, 0xeb9c, 0xa6c1, 0xbfdb, 0x1, 0x0);
        gbc.writeMem(0x9b54, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcb64, gbc.sp());
        EXPECT(0x9b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b54));
        EXPECT(0xc, gbc.readMem(0x9b55));
        // CB 0C 0114
        gbc.setState(0xc189, 0xad8a, 0xffe0, 0x210b, 0xacb3, 0x4d0f, 0x0, 0x0);
        gbc.writeMem(0xc189, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xad8a, gbc.sp());
        EXPECT(0xc18b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc189));
        EXPECT(0xc, gbc.readMem(0xc18a));
        // CB 0C 0115
        gbc.setState(0x55af, 0xda99, 0x5f60, 0x61d, 0xe8f1, 0x9a37, 0x1, 0x1);
        gbc.writeMem(0x55af, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xda99, gbc.sp());
        EXPECT(0x55b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0116
        gbc.setState(0x8094, 0xa10f, 0x3300, 0x92f5, 0xffba, 0x75eb, 0x0, 0x0);
        gbc.writeMem(0x8094, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa10f, gbc.sp());
        EXPECT(0x8096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8094));
        EXPECT(0xc, gbc.readMem(0x8095));
        // CB 0C 0117
        gbc.setState(0xe172, 0x6b6e, 0x8a30, 0xd21d, 0x1481, 0x34f7, 0x0, 0x0);
        gbc.writeMem(0xe172, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6b6e, gbc.sp());
        EXPECT(0xe174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe172));
        EXPECT(0xc, gbc.readMem(0xe173));
        // CB 0C 0118
        gbc.setState(0x9fa1, 0x530b, 0x7e20, 0xa6b4, 0xb258, 0x2ce9, 0x1, 0x1);
        gbc.writeMem(0x9fa1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x530b, gbc.sp());
        EXPECT(0x9fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa1));
        EXPECT(0xc, gbc.readMem(0x9fa2));
        // CB 0C 0119
        gbc.setState(0x6b37, 0x3950, 0x76f0, 0xda53, 0x6416, 0x8736, 0x1, 0x0);
        gbc.writeMem(0x6b37, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3950, gbc.sp());
        EXPECT(0x6b39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 011A
        gbc.setState(0xbc2f, 0x79f0, 0xe320, 0xdf9e, 0xdf95, 0x8605, 0x0, 0x0);
        gbc.writeMem(0xbc2f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x79f0, gbc.sp());
        EXPECT(0xbc31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2f));
        EXPECT(0xc, gbc.readMem(0xbc30));
        // CB 0C 011B
        gbc.setState(0x1917, 0x4563, 0x53c0, 0x4c32, 0xa4df, 0x8ada, 0x1, 0x0);
        gbc.writeMem(0x1917, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4563, gbc.sp());
        EXPECT(0x1919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 011C
        gbc.setState(0x6ea8, 0xcaf0, 0xd370, 0x2756, 0x93df, 0x4c39, 0x1, 0x1);
        gbc.writeMem(0x6ea8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcaf0, gbc.sp());
        EXPECT(0x6eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 011D
        gbc.setState(0xd00, 0xb0f6, 0x8020, 0x7d29, 0xb2da, 0xa8, 0x0, 0x0);
        gbc.writeMem(0xd00, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb0f6, gbc.sp());
        EXPECT(0xd02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 011E
        gbc.setState(0x44fb, 0xf497, 0xbd00, 0x4ed9, 0x89a1, 0xd266, 0x1, 0x1);
        gbc.writeMem(0x44fb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf497, gbc.sp());
        EXPECT(0x44fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 011F
        gbc.setState(0xe14e, 0x3888, 0x8280, 0xf759, 0xe5a5, 0xbf8, 0x0, 0x0);
        gbc.writeMem(0xe14e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3888, gbc.sp());
        EXPECT(0xe150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14e));
        EXPECT(0xc, gbc.readMem(0xe14f));
        // CB 0C 0120
        gbc.setState(0x8e2f, 0x4c29, 0xd5c0, 0xcf1e, 0xa2a, 0xf7a9, 0x1, 0x1);
        gbc.writeMem(0x8e2f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4c29, gbc.sp());
        EXPECT(0x8e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e2f));
        EXPECT(0xc, gbc.readMem(0x8e30));
        // CB 0C 0121
        gbc.setState(0x7ea2, 0x6f2f, 0xf7c0, 0xc0e8, 0xadec, 0xec01, 0x0, 0x1);
        gbc.writeMem(0x7ea2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6f2f, gbc.sp());
        EXPECT(0x7ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0122
        gbc.setState(0x63f6, 0x9114, 0x4400, 0xa274, 0xe8cd, 0xb985, 0x1, 0x1);
        gbc.writeMem(0x63f6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9114, gbc.sp());
        EXPECT(0x63f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0123
        gbc.setState(0x75da, 0x3fc, 0x6690, 0x553, 0x874, 0xb56f, 0x1, 0x0);
        gbc.writeMem(0x75da, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3fc, gbc.sp());
        EXPECT(0x75dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0124
        gbc.setState(0xbe11, 0xafc9, 0xa5e0, 0xc2a4, 0x4141, 0xd1d7, 0x1, 0x0);
        gbc.writeMem(0xbe11, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xafc9, gbc.sp());
        EXPECT(0xbe13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe11));
        EXPECT(0xc, gbc.readMem(0xbe12));
        // CB 0C 0125
        gbc.setState(0xd71f, 0xc6ee, 0xb3f0, 0xc72d, 0x4e41, 0x73d9, 0x0, 0x1);
        gbc.writeMem(0xd71f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc6ee, gbc.sp());
        EXPECT(0xd721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71f));
        EXPECT(0xc, gbc.readMem(0xd720));
        // CB 0C 0126
        gbc.setState(0x5766, 0xdb6f, 0xf4e0, 0x1925, 0x2818, 0x795a, 0x0, 0x0);
        gbc.writeMem(0x5766, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdb6f, gbc.sp());
        EXPECT(0x5768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0127
        gbc.setState(0xc05e, 0x3756, 0x70f0, 0xb19a, 0xbb12, 0x72ce, 0x0, 0x1);
        gbc.writeMem(0xc05e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3756, gbc.sp());
        EXPECT(0xc060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc05e));
        EXPECT(0xc, gbc.readMem(0xc05f));
        // CB 0C 0128
        gbc.setState(0x421d, 0xb9b5, 0xcf40, 0xe96c, 0x2662, 0xfd08, 0x0, 0x0);
        gbc.writeMem(0x421d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb9b5, gbc.sp());
        EXPECT(0x421f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0129
        gbc.setState(0x44a9, 0xf41d, 0xe280, 0xba30, 0xa31c, 0xf4dc, 0x1, 0x0);
        gbc.writeMem(0x44a9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf41d, gbc.sp());
        EXPECT(0x44ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 012A
        gbc.setState(0x78c1, 0xa6b, 0x18e0, 0xa703, 0x11c3, 0xe1c8, 0x0, 0x0);
        gbc.writeMem(0x78c1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa6b, gbc.sp());
        EXPECT(0x78c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 012B
        gbc.setState(0xd929, 0xeb2d, 0x8fd0, 0x8fd1, 0x1093, 0xc65b, 0x1, 0x0);
        gbc.writeMem(0xd929, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xeb2d, gbc.sp());
        EXPECT(0xd92b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd929));
        EXPECT(0xc, gbc.readMem(0xd92a));
        // CB 0C 012C
        gbc.setState(0x4aff, 0x7609, 0xc4d0, 0x89bf, 0x3a3, 0xcbe1, 0x1, 0x1);
        gbc.writeMem(0x4aff, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7609, gbc.sp());
        EXPECT(0x4b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 012D
        gbc.setState(0xe2e, 0x129f, 0x4e60, 0xfacb, 0x6cee, 0xc5de, 0x0, 0x0);
        gbc.writeMem(0xe2e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x129f, gbc.sp());
        EXPECT(0xe30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 012E
        gbc.setState(0x7491, 0x7187, 0x3c00, 0xb26e, 0x7fb0, 0xa639, 0x0, 0x0);
        gbc.writeMem(0x7491, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7187, gbc.sp());
        EXPECT(0x7493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 012F
        gbc.setState(0x2599, 0x2346, 0xe750, 0xe043, 0x5eee, 0xe0cf, 0x1, 0x0);
        gbc.writeMem(0x2599, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2346, gbc.sp());
        EXPECT(0x259b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0130
        gbc.setState(0x95bd, 0x8272, 0x9ce0, 0x3314, 0x517, 0xc8e1, 0x0, 0x1);
        gbc.writeMem(0x95bd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8272, gbc.sp());
        EXPECT(0x95bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95bd));
        EXPECT(0xc, gbc.readMem(0x95be));
        // CB 0C 0131
        gbc.setState(0x8aa3, 0x24cb, 0xdc20, 0x4939, 0xb17c, 0xf8a, 0x1, 0x1);
        gbc.writeMem(0x8aa3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x24cb, gbc.sp());
        EXPECT(0x8aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa3));
        EXPECT(0xc, gbc.readMem(0x8aa4));
        // CB 0C 0132
        gbc.setState(0x8478, 0xa4d1, 0x640, 0x5381, 0x7cf3, 0x8102, 0x1, 0x1);
        gbc.writeMem(0x8478, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa4d1, gbc.sp());
        EXPECT(0x847a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8478));
        EXPECT(0xc, gbc.readMem(0x8479));
        // CB 0C 0133
        gbc.setState(0x49af, 0xe0ab, 0x7fd0, 0x6083, 0x491c, 0xd9fc, 0x1, 0x0);
        gbc.writeMem(0x49af, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe0ab, gbc.sp());
        EXPECT(0x49b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0134
        gbc.setState(0x97d9, 0x7bce, 0xe640, 0x34c0, 0x8d61, 0xbb25, 0x1, 0x1);
        gbc.writeMem(0x97d9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7bce, gbc.sp());
        EXPECT(0x97db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d9));
        EXPECT(0xc, gbc.readMem(0x97da));
        // CB 0C 0135
        gbc.setState(0xd525, 0x7b00, 0x6d0, 0x52e3, 0xd314, 0xc903, 0x1, 0x0);
        gbc.writeMem(0xd525, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7b00, gbc.sp());
        EXPECT(0xd527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd525));
        EXPECT(0xc, gbc.readMem(0xd526));
        // CB 0C 0136
        gbc.setState(0xd53f, 0x4cb0, 0xe8d0, 0x455e, 0xf81e, 0xe501, 0x1, 0x1);
        gbc.writeMem(0xd53f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4cb0, gbc.sp());
        EXPECT(0xd541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd53f));
        EXPECT(0xc, gbc.readMem(0xd540));
        // CB 0C 0137
        gbc.setState(0xb71a, 0x6290, 0xb580, 0x8b91, 0xf189, 0xbba0, 0x1, 0x1);
        gbc.writeMem(0xb71a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6290, gbc.sp());
        EXPECT(0xb71c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb71a));
        EXPECT(0xc, gbc.readMem(0xb71b));
        // CB 0C 0139
        gbc.setState(0x685d, 0x3c70, 0xd360, 0x659b, 0xef9, 0xf594, 0x1, 0x1);
        gbc.writeMem(0x685d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3c70, gbc.sp());
        EXPECT(0x685f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 013A
        gbc.setState(0x30ef, 0x6699, 0xe810, 0x4f4b, 0xf096, 0xe306, 0x1, 0x1);
        gbc.writeMem(0x30ef, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6699, gbc.sp());
        EXPECT(0x30f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 013B
        gbc.setState(0xe4b8, 0x46ab, 0x1f00, 0xddb3, 0x305c, 0x6091, 0x1, 0x1);
        gbc.writeMem(0xe4b8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x46ab, gbc.sp());
        EXPECT(0xe4ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b8));
        EXPECT(0xc, gbc.readMem(0xe4b9));
        // CB 0C 013C
        gbc.setState(0xb76e, 0x8b31, 0xa080, 0x36ab, 0xbd10, 0xf646, 0x0, 0x1);
        gbc.writeMem(0xb76e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8b31, gbc.sp());
        EXPECT(0xb770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb76e));
        EXPECT(0xc, gbc.readMem(0xb76f));
        // CB 0C 013D
        gbc.setState(0xa24a, 0x8f8c, 0x3d90, 0x64ec, 0x24a, 0xb8d8, 0x0, 0x1);
        gbc.writeMem(0xa24a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8f8c, gbc.sp());
        EXPECT(0xa24c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24a));
        EXPECT(0xc, gbc.readMem(0xa24b));
        // CB 0C 013E
        gbc.setState(0x4ea1, 0x180f, 0xb9d0, 0x5ceb, 0x8407, 0x4953, 0x0, 0x0);
        gbc.writeMem(0x4ea1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x180f, gbc.sp());
        EXPECT(0x4ea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 013F
        gbc.setState(0x918d, 0xd415, 0xe9a0, 0xe13f, 0xb51f, 0x9e5, 0x0, 0x1);
        gbc.writeMem(0x918d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd415, gbc.sp());
        EXPECT(0x918f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x918d));
        EXPECT(0xc, gbc.readMem(0x918e));
        // CB 0C 0140
        gbc.setState(0xb14b, 0x9c2f, 0x3950, 0x2849, 0x6aa7, 0xd353, 0x1, 0x0);
        gbc.writeMem(0xb14b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9c2f, gbc.sp());
        EXPECT(0xb14d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb14b));
        EXPECT(0xc, gbc.readMem(0xb14c));
        // CB 0C 0141
        gbc.setState(0xb15e, 0x5af5, 0x8710, 0x1a93, 0x1bb5, 0x28c1, 0x0, 0x0);
        gbc.writeMem(0xb15e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5af5, gbc.sp());
        EXPECT(0xb160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb15e));
        EXPECT(0xc, gbc.readMem(0xb15f));
        // CB 0C 0142
        gbc.setState(0x3487, 0x5ca9, 0xf020, 0xd1a4, 0xdd9c, 0xb730, 0x1, 0x1);
        gbc.writeMem(0x3487, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5ca9, gbc.sp());
        EXPECT(0x3489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0143
        gbc.setState(0x9218, 0x22f, 0x3720, 0xce9a, 0x9c1a, 0x98f9, 0x1, 0x1);
        gbc.writeMem(0x9218, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x22f, gbc.sp());
        EXPECT(0x921a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9218));
        EXPECT(0xc, gbc.readMem(0x9219));
        // CB 0C 0144
        gbc.setState(0xd437, 0x1012, 0x3290, 0x23ef, 0xbe54, 0x95fc, 0x0, 0x1);
        gbc.writeMem(0xd437, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1012, gbc.sp());
        EXPECT(0xd439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd437));
        EXPECT(0xc, gbc.readMem(0xd438));
        // CB 0C 0145
        gbc.setState(0x9de7, 0x5ded, 0xdfb0, 0x9359, 0x186a, 0x6ea2, 0x0, 0x0);
        gbc.writeMem(0x9de7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5ded, gbc.sp());
        EXPECT(0x9de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de7));
        EXPECT(0xc, gbc.readMem(0x9de8));
        // CB 0C 0146
        gbc.setState(0x6ce9, 0xffb4, 0x9270, 0x1364, 0xa6da, 0xc554, 0x0, 0x1);
        gbc.writeMem(0x6ce9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xffb4, gbc.sp());
        EXPECT(0x6ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0147
        gbc.setState(0x8eb2, 0x4f65, 0x1090, 0x7b4c, 0xf73, 0xe986, 0x0, 0x1);
        gbc.writeMem(0x8eb2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4f65, gbc.sp());
        EXPECT(0x8eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb2));
        EXPECT(0xc, gbc.readMem(0x8eb3));
        // CB 0C 0148
        gbc.setState(0xaa07, 0x3d9f, 0x91d0, 0xb175, 0xcaff, 0x28b4, 0x1, 0x1);
        gbc.writeMem(0xaa07, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3d9f, gbc.sp());
        EXPECT(0xaa09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa07));
        EXPECT(0xc, gbc.readMem(0xaa08));
        // CB 0C 0149
        gbc.setState(0x3908, 0xe585, 0x6180, 0xf758, 0x97ee, 0x6619, 0x0, 0x1);
        gbc.writeMem(0x3908, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe585, gbc.sp());
        EXPECT(0x390a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 014A
        gbc.setState(0x958b, 0x3662, 0x3d10, 0x2b62, 0xacdf, 0xb23b, 0x1, 0x0);
        gbc.writeMem(0x958b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3662, gbc.sp());
        EXPECT(0x958d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x958b));
        EXPECT(0xc, gbc.readMem(0x958c));
        // CB 0C 014B
        gbc.setState(0x519a, 0x3c30, 0xf6f0, 0xbb16, 0x32cd, 0x7745, 0x0, 0x0);
        gbc.writeMem(0x519a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3c30, gbc.sp());
        EXPECT(0x519c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 014C
        gbc.setState(0xccc4, 0xdc9c, 0xdcb0, 0xb17e, 0xba2a, 0x5373, 0x1, 0x1);
        gbc.writeMem(0xccc4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xdc9c, gbc.sp());
        EXPECT(0xccc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc4));
        EXPECT(0xc, gbc.readMem(0xccc5));
        // CB 0C 014D
        gbc.setState(0x2a7, 0xe59b, 0xf00, 0x351a, 0x8a80, 0x55d, 0x0, 0x0);
        gbc.writeMem(0x2a7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe59b, gbc.sp());
        EXPECT(0x2a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 014E
        gbc.setState(0xfd2, 0xafcf, 0xc5e0, 0x67d5, 0x4477, 0x82b3, 0x0, 0x0);
        gbc.writeMem(0xfd2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xafcf, gbc.sp());
        EXPECT(0xfd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 014F
        gbc.setState(0x1418, 0x9731, 0xb030, 0x1008, 0xd83b, 0xba8, 0x1, 0x0);
        gbc.writeMem(0x1418, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9731, gbc.sp());
        EXPECT(0x141a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0150
        gbc.setState(0x368c, 0x9e80, 0xbce0, 0x89b6, 0x2878, 0xc079, 0x0, 0x0);
        gbc.writeMem(0x368c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9e80, gbc.sp());
        EXPECT(0x368e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0151
        gbc.setState(0x1c66, 0x681b, 0x28c0, 0x44b6, 0xd013, 0xd6ea, 0x1, 0x1);
        gbc.writeMem(0x1c66, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x681b, gbc.sp());
        EXPECT(0x1c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0152
        gbc.setState(0x8dd2, 0xa14, 0xbfc0, 0xcdeb, 0x17b6, 0xce14, 0x1, 0x1);
        gbc.writeMem(0x8dd2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa14, gbc.sp());
        EXPECT(0x8dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd2));
        EXPECT(0xc, gbc.readMem(0x8dd3));
        // CB 0C 0153
        gbc.setState(0x8a2f, 0x169, 0x9820, 0xff9d, 0x2976, 0xfcba, 0x0, 0x1);
        gbc.writeMem(0x8a2f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x169, gbc.sp());
        EXPECT(0x8a31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2f));
        EXPECT(0xc, gbc.readMem(0x8a30));
        // CB 0C 0154
        gbc.setState(0x11bd, 0xaf16, 0x54b0, 0xf87c, 0xfdd, 0x7f91, 0x1, 0x0);
        gbc.writeMem(0x11bd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xaf16, gbc.sp());
        EXPECT(0x11bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0155
        gbc.setState(0xc693, 0x260f, 0xe710, 0xba85, 0xeb19, 0x9b7f, 0x1, 0x1);
        gbc.writeMem(0xc693, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x260f, gbc.sp());
        EXPECT(0xc695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc693));
        EXPECT(0xc, gbc.readMem(0xc694));
        // CB 0C 0157
        gbc.setState(0xdcb7, 0x7006, 0x16c0, 0x184b, 0x530f, 0xba49, 0x0, 0x0);
        gbc.writeMem(0xdcb7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7006, gbc.sp());
        EXPECT(0xdcb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb7));
        EXPECT(0xc, gbc.readMem(0xdcb8));
        // CB 0C 0158
        gbc.setState(0x6957, 0x776d, 0x9b20, 0xf1e8, 0x6867, 0x68a9, 0x0, 0x0);
        gbc.writeMem(0x6957, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x776d, gbc.sp());
        EXPECT(0x6959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 015A
        gbc.setState(0x5054, 0xdd3b, 0x5bc0, 0xd888, 0x23ba, 0x9806, 0x0, 0x0);
        gbc.writeMem(0x5054, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdd3b, gbc.sp());
        EXPECT(0x5056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 015B
        gbc.setState(0x4534, 0x4f53, 0x75f0, 0x1e82, 0xfa73, 0xa018, 0x0, 0x1);
        gbc.writeMem(0x4534, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4f53, gbc.sp());
        EXPECT(0x4536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 015C
        gbc.setState(0x912d, 0x36be, 0xd700, 0x5774, 0xa78d, 0xebbb, 0x1, 0x1);
        gbc.writeMem(0x912d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x36be, gbc.sp());
        EXPECT(0x912f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x912d));
        EXPECT(0xc, gbc.readMem(0x912e));
        // CB 0C 015D
        gbc.setState(0x4f7b, 0x24d8, 0x38b0, 0x8aa8, 0x4743, 0x9105, 0x0, 0x0);
        gbc.writeMem(0x4f7b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x24d8, gbc.sp());
        EXPECT(0x4f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 015E
        gbc.setState(0xe43e, 0x661f, 0xcc70, 0x4c15, 0xe546, 0xb888, 0x1, 0x1);
        gbc.writeMem(0xe43e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x661f, gbc.sp());
        EXPECT(0xe440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe43e));
        EXPECT(0xc, gbc.readMem(0xe43f));
        // CB 0C 015F
        gbc.setState(0x29c9, 0x49ce, 0xf080, 0x11ce, 0xaf77, 0xc648, 0x1, 0x1);
        gbc.writeMem(0x29c9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x49ce, gbc.sp());
        EXPECT(0x29cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0160
        gbc.setState(0xb81c, 0x3261, 0x1450, 0xfdf4, 0x6e19, 0x74af, 0x1, 0x0);
        gbc.writeMem(0xb81c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3261, gbc.sp());
        EXPECT(0xb81e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb81c));
        EXPECT(0xc, gbc.readMem(0xb81d));
        // CB 0C 0161
        gbc.setState(0x4db8, 0x96d8, 0xf3d0, 0x61a1, 0xf2ad, 0x9a05, 0x0, 0x0);
        gbc.writeMem(0x4db8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x96d8, gbc.sp());
        EXPECT(0x4dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0162
        gbc.setState(0xe57f, 0xd473, 0x9710, 0xd828, 0x3c7d, 0x73e3, 0x0, 0x0);
        gbc.writeMem(0xe57f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd473, gbc.sp());
        EXPECT(0xe581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57f));
        EXPECT(0xc, gbc.readMem(0xe580));
        // CB 0C 0163
        gbc.setState(0xcfbd, 0x86bb, 0x1e80, 0x4745, 0x44c5, 0x574e, 0x0, 0x0);
        gbc.writeMem(0xcfbd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x86bb, gbc.sp());
        EXPECT(0xcfbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfbd));
        EXPECT(0xc, gbc.readMem(0xcfbe));
        // CB 0C 0164
        gbc.setState(0x5c8a, 0xdef4, 0x8e30, 0xc094, 0xa82, 0xc797, 0x1, 0x1);
        gbc.writeMem(0x5c8a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdef4, gbc.sp());
        EXPECT(0x5c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0165
        gbc.setState(0xca21, 0x28b8, 0xb400, 0xc190, 0xbff0, 0x3871, 0x1, 0x1);
        gbc.writeMem(0xca21, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x28b8, gbc.sp());
        EXPECT(0xca23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca21));
        EXPECT(0xc, gbc.readMem(0xca22));
        // CB 0C 0166
        gbc.setState(0x585, 0xdf51, 0x8100, 0x74f7, 0xd597, 0xd819, 0x1, 0x1);
        gbc.writeMem(0x585, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdf51, gbc.sp());
        EXPECT(0x587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0168
        gbc.setState(0x9612, 0x2240, 0x60f0, 0x4924, 0xd199, 0x485f, 0x0, 0x1);
        gbc.writeMem(0x9612, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2240, gbc.sp());
        EXPECT(0x9614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9612));
        EXPECT(0xc, gbc.readMem(0x9613));
        // CB 0C 0169
        gbc.setState(0x4edf, 0x7d8a, 0x1670, 0xba78, 0x2f50, 0xe43e, 0x0, 0x1);
        gbc.writeMem(0x4edf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7d8a, gbc.sp());
        EXPECT(0x4ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 016A
        gbc.setState(0x6855, 0x5eb3, 0xcd90, 0xd1fb, 0xedd5, 0x1ce6, 0x1, 0x0);
        gbc.writeMem(0x6855, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5eb3, gbc.sp());
        EXPECT(0x6857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 016B
        gbc.setState(0xdc5f, 0x5766, 0xf360, 0xb6e0, 0xc043, 0x6e82, 0x0, 0x0);
        gbc.writeMem(0xdc5f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5766, gbc.sp());
        EXPECT(0xdc61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc5f));
        EXPECT(0xc, gbc.readMem(0xdc60));
        // CB 0C 016C
        gbc.setState(0x61b6, 0x3f09, 0x18f0, 0xf245, 0xa265, 0x5820, 0x0, 0x0);
        gbc.writeMem(0x61b6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3f09, gbc.sp());
        EXPECT(0x61b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 016E
        gbc.setState(0xe69c, 0xece2, 0xe390, 0xfbef, 0x114, 0xb596, 0x1, 0x0);
        gbc.writeMem(0xe69c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xece2, gbc.sp());
        EXPECT(0xe69e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe69c));
        EXPECT(0xc, gbc.readMem(0xe69d));
        // CB 0C 0170
        gbc.setState(0x7fd6, 0x16c9, 0x19f0, 0xca2d, 0xafa0, 0x968c, 0x0, 0x0);
        gbc.writeMem(0x7fd6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x16c9, gbc.sp());
        EXPECT(0x7fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0171
        gbc.setState(0x3dac, 0x3fed, 0xe050, 0x418d, 0xa654, 0x35a5, 0x0, 0x1);
        gbc.writeMem(0x3dac, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3fed, gbc.sp());
        EXPECT(0x3dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0172
        gbc.setState(0x146c, 0xbb88, 0xf650, 0x6fa4, 0x3aa1, 0x8693, 0x1, 0x1);
        gbc.writeMem(0x146c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbb88, gbc.sp());
        EXPECT(0x146e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0173
        gbc.setState(0x8d9d, 0x4ebc, 0xef40, 0xc4db, 0x1b5, 0xd533, 0x0, 0x1);
        gbc.writeMem(0x8d9d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4ebc, gbc.sp());
        EXPECT(0x8d9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d9d));
        EXPECT(0xc, gbc.readMem(0x8d9e));
        // CB 0C 0174
        gbc.setState(0x245b, 0xaca7, 0x9730, 0x2bef, 0x560b, 0x39af, 0x1, 0x0);
        gbc.writeMem(0x245b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xaca7, gbc.sp());
        EXPECT(0x245d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0175
        gbc.setState(0x3441, 0x77e9, 0x9da0, 0x6af5, 0xdff, 0xa8c9, 0x0, 0x0);
        gbc.writeMem(0x3441, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x77e9, gbc.sp());
        EXPECT(0x3443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0176
        gbc.setState(0x4df1, 0xafc5, 0x8b0, 0x25da, 0xa10, 0xb1cd, 0x1, 0x0);
        gbc.writeMem(0x4df1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xafc5, gbc.sp());
        EXPECT(0x4df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0177
        gbc.setState(0xaba, 0xe3c7, 0xceb0, 0xed56, 0xb8e0, 0x95e5, 0x0, 0x0);
        gbc.writeMem(0xaba, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe3c7, gbc.sp());
        EXPECT(0xabc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0179
        gbc.setState(0xdd98, 0xc842, 0x210, 0x2c57, 0xd5b0, 0x76ae, 0x1, 0x0);
        gbc.writeMem(0xdd98, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc842, gbc.sp());
        EXPECT(0xdd9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd98));
        EXPECT(0xc, gbc.readMem(0xdd99));
        // CB 0C 017A
        gbc.setState(0x4526, 0xd17, 0x5fd0, 0x3c14, 0x262, 0xd629, 0x1, 0x1);
        gbc.writeMem(0x4526, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd17, gbc.sp());
        EXPECT(0x4528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 017B
        gbc.setState(0x9a06, 0xb872, 0x68c0, 0x630c, 0x73d5, 0x1f89, 0x0, 0x1);
        gbc.writeMem(0x9a06, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb872, gbc.sp());
        EXPECT(0x9a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a06));
        EXPECT(0xc, gbc.readMem(0x9a07));
        // CB 0C 017D
        gbc.setState(0x18e1, 0xc2ca, 0x31c0, 0xda31, 0xd302, 0xfd27, 0x1, 0x0);
        gbc.writeMem(0x18e1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc2ca, gbc.sp());
        EXPECT(0x18e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 017E
        gbc.setState(0x305d, 0x78c8, 0xbd20, 0xc7bc, 0xad27, 0x820c, 0x0, 0x0);
        gbc.writeMem(0x305d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x78c8, gbc.sp());
        EXPECT(0x305f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 017F
        gbc.setState(0xcd83, 0x9d33, 0x4ad0, 0x19d5, 0x1823, 0xed26, 0x0, 0x0);
        gbc.writeMem(0xcd83, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9d33, gbc.sp());
        EXPECT(0xcd85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd83));
        EXPECT(0xc, gbc.readMem(0xcd84));
        // CB 0C 0180
        gbc.setState(0x50ce, 0x81d0, 0x6150, 0x71a5, 0xbc8, 0x6536, 0x0, 0x0);
        gbc.writeMem(0x50ce, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x81d0, gbc.sp());
        EXPECT(0x50d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0181
        gbc.setState(0xb84b, 0xa1f9, 0x6500, 0xe440, 0x329f, 0x459d, 0x1, 0x0);
        gbc.writeMem(0xb84b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa1f9, gbc.sp());
        EXPECT(0xb84d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb84b));
        EXPECT(0xc, gbc.readMem(0xb84c));
        // CB 0C 0182
        gbc.setState(0x5fa8, 0xbc77, 0xe20, 0xe597, 0xde92, 0xfb21, 0x0, 0x1);
        gbc.writeMem(0x5fa8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbc77, gbc.sp());
        EXPECT(0x5faa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0183
        gbc.setState(0x64a8, 0x2f1d, 0xb490, 0x7e54, 0xc79e, 0x2525, 0x0, 0x1);
        gbc.writeMem(0x64a8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2f1d, gbc.sp());
        EXPECT(0x64aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0184
        gbc.setState(0x5dd4, 0xb961, 0x3610, 0x2cbb, 0x6a80, 0x2cdd, 0x0, 0x1);
        gbc.writeMem(0x5dd4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb961, gbc.sp());
        EXPECT(0x5dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0185
        gbc.setState(0x47b6, 0xae14, 0x9e90, 0x5201, 0xcfb3, 0x2041, 0x0, 0x1);
        gbc.writeMem(0x47b6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xae14, gbc.sp());
        EXPECT(0x47b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0186
        gbc.setState(0x39aa, 0xd90, 0x5700, 0x3d21, 0xb469, 0xc40b, 0x0, 0x1);
        gbc.writeMem(0x39aa, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd90, gbc.sp());
        EXPECT(0x39ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0187
        gbc.setState(0x6f6f, 0x290f, 0x6340, 0x4d6a, 0xcf0e, 0xccc2, 0x1, 0x0);
        gbc.writeMem(0x6f6f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x290f, gbc.sp());
        EXPECT(0x6f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0188
        gbc.setState(0x59bd, 0x67e4, 0x24e0, 0x1298, 0xb073, 0x15d2, 0x1, 0x1);
        gbc.writeMem(0x59bd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x67e4, gbc.sp());
        EXPECT(0x59bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0189
        gbc.setState(0xb361, 0x7eff, 0x7100, 0x93cf, 0xdf09, 0x51d5, 0x0, 0x1);
        gbc.writeMem(0xb361, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7eff, gbc.sp());
        EXPECT(0xb363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb361));
        EXPECT(0xc, gbc.readMem(0xb362));
        // CB 0C 018A
        gbc.setState(0x3de6, 0xa559, 0x5f60, 0x8225, 0x3959, 0x27e4, 0x1, 0x1);
        gbc.writeMem(0x3de6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa559, gbc.sp());
        EXPECT(0x3de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 018B
        gbc.setState(0xdb1, 0x17b2, 0xdc10, 0x5fcd, 0xeea4, 0x80e9, 0x1, 0x1);
        gbc.writeMem(0xdb1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x17b2, gbc.sp());
        EXPECT(0xdb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 018C
        gbc.setState(0x960a, 0xf17, 0xea60, 0xae9c, 0x24c3, 0x2fd9, 0x0, 0x1);
        gbc.writeMem(0x960a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf17, gbc.sp());
        EXPECT(0x960c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x960a));
        EXPECT(0xc, gbc.readMem(0x960b));
        // CB 0C 018D
        gbc.setState(0x9c6c, 0xcb3, 0x560, 0xb091, 0x58f9, 0xe040, 0x1, 0x0);
        gbc.writeMem(0x9c6c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xcb3, gbc.sp());
        EXPECT(0x9c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c6c));
        EXPECT(0xc, gbc.readMem(0x9c6d));
        // CB 0C 018E
        gbc.setState(0x3909, 0x5627, 0x2300, 0x513e, 0xb17c, 0x539f, 0x1, 0x1);
        gbc.writeMem(0x3909, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5627, gbc.sp());
        EXPECT(0x390b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 018F
        gbc.setState(0x5e5b, 0xe7d2, 0x7520, 0xba95, 0x31d1, 0xafd5, 0x0, 0x1);
        gbc.writeMem(0x5e5b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe7d2, gbc.sp());
        EXPECT(0x5e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0190
        gbc.setState(0x7c26, 0xcef9, 0xc500, 0x5b47, 0xeb1d, 0x82c1, 0x1, 0x0);
        gbc.writeMem(0x7c26, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcef9, gbc.sp());
        EXPECT(0x7c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0191
        gbc.setState(0x975e, 0x3957, 0xeae0, 0xa507, 0x171a, 0xebe7, 0x0, 0x1);
        gbc.writeMem(0x975e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3957, gbc.sp());
        EXPECT(0x9760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x975e));
        EXPECT(0xc, gbc.readMem(0x975f));
        // CB 0C 0192
        gbc.setState(0x6f2c, 0xc437, 0x40c0, 0x8ead, 0x59b7, 0x127, 0x1, 0x0);
        gbc.writeMem(0x6f2c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc437, gbc.sp());
        EXPECT(0x6f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0193
        gbc.setState(0x16f1, 0x68c6, 0x9300, 0x5209, 0x8add, 0x9c9a, 0x1, 0x1);
        gbc.writeMem(0x16f1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x68c6, gbc.sp());
        EXPECT(0x16f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0194
        gbc.setState(0x3733, 0x64f6, 0x9140, 0x7fce, 0x8808, 0xa48c, 0x0, 0x1);
        gbc.writeMem(0x3733, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x64f6, gbc.sp());
        EXPECT(0x3735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0195
        gbc.setState(0xe032, 0x22da, 0xdfc0, 0x9157, 0x323a, 0x33c7, 0x0, 0x0);
        gbc.writeMem(0xe032, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x22da, gbc.sp());
        EXPECT(0xe034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe032));
        EXPECT(0xc, gbc.readMem(0xe033));
        // CB 0C 0196
        gbc.setState(0x838e, 0xcf43, 0x85b0, 0xa5bb, 0x57bc, 0x7f77, 0x1, 0x0);
        gbc.writeMem(0x838e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcf43, gbc.sp());
        EXPECT(0x8390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x838e));
        EXPECT(0xc, gbc.readMem(0x838f));
        // CB 0C 0197
        gbc.setState(0xda50, 0x7a91, 0x9610, 0xcd67, 0xc3af, 0x6541, 0x1, 0x1);
        gbc.writeMem(0xda50, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7a91, gbc.sp());
        EXPECT(0xda52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda50));
        EXPECT(0xc, gbc.readMem(0xda51));
        // CB 0C 0198
        gbc.setState(0xdcf9, 0x49b3, 0x32a0, 0x4707, 0x3534, 0x33b5, 0x0, 0x0);
        gbc.writeMem(0xdcf9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x49b3, gbc.sp());
        EXPECT(0xdcfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf9));
        EXPECT(0xc, gbc.readMem(0xdcfa));
        // CB 0C 0199
        gbc.setState(0x450d, 0x919a, 0xd190, 0xc24, 0x7557, 0x9136, 0x0, 0x0);
        gbc.writeMem(0x450d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x919a, gbc.sp());
        EXPECT(0x450f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 019A
        gbc.setState(0xbf2c, 0x41cb, 0xfcd0, 0x61cf, 0xe144, 0x76f7, 0x0, 0x0);
        gbc.writeMem(0xbf2c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x41cb, gbc.sp());
        EXPECT(0xbf2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf2c));
        EXPECT(0xc, gbc.readMem(0xbf2d));
        // CB 0C 019B
        gbc.setState(0x3f4c, 0xa7a2, 0xa4e0, 0x84ca, 0xbc65, 0xa487, 0x0, 0x1);
        gbc.writeMem(0x3f4c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa7a2, gbc.sp());
        EXPECT(0x3f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 019C
        gbc.setState(0x25d, 0xc4a5, 0x9500, 0x8ab, 0x4b1c, 0xc2c5, 0x1, 0x0);
        gbc.writeMem(0x25d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc4a5, gbc.sp());
        EXPECT(0x25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 019D
        gbc.setState(0x5956, 0x92b5, 0xf00, 0x75e2, 0xd734, 0x855c, 0x1, 0x0);
        gbc.writeMem(0x5956, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x92b5, gbc.sp());
        EXPECT(0x5958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 019E
        gbc.setState(0xaf76, 0x1379, 0x85b0, 0x2e76, 0x7bbe, 0x42ac, 0x1, 0x1);
        gbc.writeMem(0xaf76, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1379, gbc.sp());
        EXPECT(0xaf78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf76));
        EXPECT(0xc, gbc.readMem(0xaf77));
        // CB 0C 019F
        gbc.setState(0xdcc2, 0xf9b2, 0x4f40, 0xe6e0, 0x7f80, 0x41f, 0x0, 0x0);
        gbc.writeMem(0xdcc2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf9b2, gbc.sp());
        EXPECT(0xdcc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc2));
        EXPECT(0xc, gbc.readMem(0xdcc3));
        // CB 0C 01A0
        gbc.setState(0xbc4c, 0x37b, 0xd770, 0x617f, 0x490c, 0x9de7, 0x0, 0x1);
        gbc.writeMem(0xbc4c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x37b, gbc.sp());
        EXPECT(0xbc4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc4c));
        EXPECT(0xc, gbc.readMem(0xbc4d));
        // CB 0C 01A2
        gbc.setState(0xc253, 0xbc9b, 0xa9a0, 0x7686, 0xa26d, 0xe78a, 0x0, 0x1);
        gbc.writeMem(0xc253, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbc9b, gbc.sp());
        EXPECT(0xc255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc253));
        EXPECT(0xc, gbc.readMem(0xc254));
        // CB 0C 01A3
        gbc.setState(0xd0ab, 0x596e, 0x26e0, 0x3181, 0x4910, 0x7a9d, 0x0, 0x0);
        gbc.writeMem(0xd0ab, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x596e, gbc.sp());
        EXPECT(0xd0ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ab));
        EXPECT(0xc, gbc.readMem(0xd0ac));
        // CB 0C 01A4
        gbc.setState(0xd130, 0x2b5c, 0xd220, 0x546b, 0x7fc6, 0x6c3b, 0x1, 0x1);
        gbc.writeMem(0xd130, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2b5c, gbc.sp());
        EXPECT(0xd132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd130));
        EXPECT(0xc, gbc.readMem(0xd131));
        // CB 0C 01A5
        gbc.setState(0xa846, 0x10a, 0x8430, 0x6a19, 0xf2f4, 0xe9d1, 0x0, 0x1);
        gbc.writeMem(0xa846, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x10a, gbc.sp());
        EXPECT(0xa848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa846));
        EXPECT(0xc, gbc.readMem(0xa847));
        // CB 0C 01A6
        gbc.setState(0x7dfb, 0xeaf8, 0x3d70, 0x5fec, 0x99c2, 0x3fb4, 0x1, 0x0);
        gbc.writeMem(0x7dfb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xeaf8, gbc.sp());
        EXPECT(0x7dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01A7
        gbc.setState(0xc854, 0x3aa2, 0x91e0, 0x9ed8, 0x1c1a, 0xd394, 0x1, 0x0);
        gbc.writeMem(0xc854, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3aa2, gbc.sp());
        EXPECT(0xc856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc854));
        EXPECT(0xc, gbc.readMem(0xc855));
        // CB 0C 01A8
        gbc.setState(0xad20, 0x8d2f, 0xf9d0, 0x7a3d, 0xa914, 0x6fe5, 0x1, 0x1);
        gbc.writeMem(0xad20, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8d2f, gbc.sp());
        EXPECT(0xad22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad20));
        EXPECT(0xc, gbc.readMem(0xad21));
        // CB 0C 01A9
        gbc.setState(0x2bd7, 0xe6d7, 0x5fe0, 0xcb2e, 0x989f, 0x3101, 0x0, 0x1);
        gbc.writeMem(0x2bd7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe6d7, gbc.sp());
        EXPECT(0x2bd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01AB
        gbc.setState(0xbfae, 0xdbb9, 0x81b0, 0xfeca, 0x7522, 0x4ec8, 0x1, 0x1);
        gbc.writeMem(0xbfae, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdbb9, gbc.sp());
        EXPECT(0xbfb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfae));
        EXPECT(0xc, gbc.readMem(0xbfaf));
        // CB 0C 01AC
        gbc.setState(0x6da8, 0xff21, 0xcc0, 0x722d, 0x317, 0xd09b, 0x1, 0x1);
        gbc.writeMem(0x6da8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xff21, gbc.sp());
        EXPECT(0x6daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01AD
        gbc.setState(0x9082, 0x3c70, 0xe3c0, 0x421, 0xbcb4, 0xeef7, 0x1, 0x1);
        gbc.writeMem(0x9082, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3c70, gbc.sp());
        EXPECT(0x9084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9082));
        EXPECT(0xc, gbc.readMem(0x9083));
        // CB 0C 01AE
        gbc.setState(0xd250, 0x9e2d, 0xf510, 0x435d, 0x4f1e, 0xb0b3, 0x0, 0x0);
        gbc.writeMem(0xd250, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9e2d, gbc.sp());
        EXPECT(0xd252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd250));
        EXPECT(0xc, gbc.readMem(0xd251));
        // CB 0C 01AF
        gbc.setState(0xdcbc, 0xf79, 0xdc40, 0xfe4c, 0xc116, 0xe44c, 0x1, 0x0);
        gbc.writeMem(0xdcbc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf79, gbc.sp());
        EXPECT(0xdcbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcbc));
        EXPECT(0xc, gbc.readMem(0xdcbd));
        // CB 0C 01B0
        gbc.setState(0xa57, 0xd047, 0x72a0, 0x8333, 0x481, 0x27bb, 0x0, 0x0);
        gbc.writeMem(0xa57, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd047, gbc.sp());
        EXPECT(0xa59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01B1
        gbc.setState(0x6387, 0x133f, 0x8d0, 0x46e9, 0x4556, 0xcead, 0x0, 0x0);
        gbc.writeMem(0x6387, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x133f, gbc.sp());
        EXPECT(0x6389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01B2
        gbc.setState(0x80da, 0xbd0d, 0x13e0, 0x421, 0x3867, 0x8730, 0x1, 0x1);
        gbc.writeMem(0x80da, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbd0d, gbc.sp());
        EXPECT(0x80dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80da));
        EXPECT(0xc, gbc.readMem(0x80db));
        // CB 0C 01B3
        gbc.setState(0x7f90, 0xa9c6, 0x78b0, 0x5aa6, 0x106c, 0xe0c3, 0x0, 0x0);
        gbc.writeMem(0x7f90, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa9c6, gbc.sp());
        EXPECT(0x7f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01B4
        gbc.setState(0x7a69, 0xd6e, 0xc110, 0x8f13, 0x8c1f, 0xf682, 0x1, 0x0);
        gbc.writeMem(0x7a69, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd6e, gbc.sp());
        EXPECT(0x7a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01B5
        gbc.setState(0xb92f, 0x86a2, 0x6b10, 0x10cd, 0x91d9, 0xa502, 0x0, 0x1);
        gbc.writeMem(0xb92f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x86a2, gbc.sp());
        EXPECT(0xb931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb92f));
        EXPECT(0xc, gbc.readMem(0xb930));
        // CB 0C 01B6
        gbc.setState(0xa0d5, 0xb49e, 0x7f70, 0xdd49, 0xa71, 0x436d, 0x1, 0x0);
        gbc.writeMem(0xa0d5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb49e, gbc.sp());
        EXPECT(0xa0d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d5));
        EXPECT(0xc, gbc.readMem(0xa0d6));
        // CB 0C 01B7
        gbc.setState(0x72e8, 0x1128, 0x9600, 0x267d, 0xe1bb, 0xfd11, 0x1, 0x0);
        gbc.writeMem(0x72e8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1128, gbc.sp());
        EXPECT(0x72ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01B9
        gbc.setState(0xae99, 0x8810, 0x7650, 0x7e8f, 0x4082, 0x11ca, 0x0, 0x0);
        gbc.writeMem(0xae99, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8810, gbc.sp());
        EXPECT(0xae9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae99));
        EXPECT(0xc, gbc.readMem(0xae9a));
        // CB 0C 01BA
        gbc.setState(0x323e, 0x2e6b, 0xe160, 0xc154, 0x37a2, 0x9c46, 0x0, 0x1);
        gbc.writeMem(0x323e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2e6b, gbc.sp());
        EXPECT(0x3240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01BC
        gbc.setState(0xbeab, 0x69f3, 0xe5c0, 0xfd9b, 0xadbd, 0x23e3, 0x0, 0x0);
        gbc.writeMem(0xbeab, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x69f3, gbc.sp());
        EXPECT(0xbead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeab));
        EXPECT(0xc, gbc.readMem(0xbeac));
        // CB 0C 01BD
        gbc.setState(0xcf42, 0x43c0, 0xbfb0, 0x720d, 0x2a28, 0x8b90, 0x0, 0x1);
        gbc.writeMem(0xcf42, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x43c0, gbc.sp());
        EXPECT(0xcf44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf42));
        EXPECT(0xc, gbc.readMem(0xcf43));
        // CB 0C 01BE
        gbc.setState(0x21b4, 0x4174, 0xa5c0, 0xea23, 0x672a, 0xfbfc, 0x1, 0x1);
        gbc.writeMem(0x21b4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4174, gbc.sp());
        EXPECT(0x21b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01BF
        gbc.setState(0x1011, 0x487, 0x16a0, 0xd7a2, 0x8aea, 0x6ddc, 0x0, 0x1);
        gbc.writeMem(0x1011, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x487, gbc.sp());
        EXPECT(0x1013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01C0
        gbc.setState(0x79e9, 0xa2cb, 0x19a0, 0x15a0, 0x959e, 0xabac, 0x1, 0x1);
        gbc.writeMem(0x79e9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa2cb, gbc.sp());
        EXPECT(0x79eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01C1
        gbc.setState(0x45f8, 0x6af7, 0x9480, 0x592e, 0xe612, 0x9848, 0x1, 0x1);
        gbc.writeMem(0x45f8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6af7, gbc.sp());
        EXPECT(0x45fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01C2
        gbc.setState(0x41d2, 0x53c9, 0x5ab0, 0xd01f, 0xb862, 0x54ab, 0x0, 0x0);
        gbc.writeMem(0x41d2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x53c9, gbc.sp());
        EXPECT(0x41d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01C3
        gbc.setState(0x368d, 0x8504, 0xf6f0, 0xc5a, 0xcd3d, 0x7b1c, 0x1, 0x0);
        gbc.writeMem(0x368d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8504, gbc.sp());
        EXPECT(0x368f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01C4
        gbc.setState(0x1e8e, 0x1930, 0x67a0, 0x1c97, 0xd8df, 0x6280, 0x1, 0x1);
        gbc.writeMem(0x1e8e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1930, gbc.sp());
        EXPECT(0x1e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01C5
        gbc.setState(0xdb91, 0x1966, 0xd240, 0x2906, 0x7721, 0x4091, 0x1, 0x0);
        gbc.writeMem(0xdb91, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1966, gbc.sp());
        EXPECT(0xdb93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb91));
        EXPECT(0xc, gbc.readMem(0xdb92));
        // CB 0C 01C6
        gbc.setState(0x5940, 0x22f1, 0x4760, 0x6d22, 0x18a9, 0xfda2, 0x0, 0x0);
        gbc.writeMem(0x5940, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x22f1, gbc.sp());
        EXPECT(0x5942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01C7
        gbc.setState(0x5613, 0x6be4, 0x25b0, 0x78de, 0x3310, 0x3aa4, 0x1, 0x1);
        gbc.writeMem(0x5613, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6be4, gbc.sp());
        EXPECT(0x5615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01C8
        gbc.setState(0xa418, 0xda37, 0x1e70, 0xeb43, 0xb033, 0x38c6, 0x1, 0x0);
        gbc.writeMem(0xa418, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xda37, gbc.sp());
        EXPECT(0xa41a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa418));
        EXPECT(0xc, gbc.readMem(0xa419));
        // CB 0C 01C9
        gbc.setState(0x47fe, 0xca4a, 0x130, 0x2abe, 0x1e72, 0x9480, 0x0, 0x1);
        gbc.writeMem(0x47fe, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xca4a, gbc.sp());
        EXPECT(0x4800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01CA
        gbc.setState(0x1754, 0x58c0, 0x1ab0, 0x42d0, 0x4c64, 0xdc88, 0x0, 0x0);
        gbc.writeMem(0x1754, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x58c0, gbc.sp());
        EXPECT(0x1756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01CC
        gbc.setState(0x1c02, 0x7d68, 0x3190, 0x39c5, 0x37c6, 0xf050, 0x1, 0x0);
        gbc.writeMem(0x1c02, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7d68, gbc.sp());
        EXPECT(0x1c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01CD
        gbc.setState(0xd95b, 0xaa96, 0x43f0, 0xb2e7, 0xd7fe, 0xfed, 0x1, 0x0);
        gbc.writeMem(0xd95b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xaa96, gbc.sp());
        EXPECT(0xd95d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd95b));
        EXPECT(0xc, gbc.readMem(0xd95c));
        // CB 0C 01CE
        gbc.setState(0x7476, 0x8c4e, 0x8b40, 0x6e94, 0x4080, 0x8919, 0x0, 0x0);
        gbc.writeMem(0x7476, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8c4e, gbc.sp());
        EXPECT(0x7478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01CF
        gbc.setState(0xeb77, 0xb126, 0x9b50, 0x2f51, 0x24d1, 0x28c1, 0x0, 0x0);
        gbc.writeMem(0xeb77, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb126, gbc.sp());
        EXPECT(0xeb79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb77));
        EXPECT(0xc, gbc.readMem(0xeb78));
        // CB 0C 01D0
        gbc.setState(0x388c, 0xcac0, 0x61d0, 0x25d6, 0x135d, 0xe055, 0x0, 0x0);
        gbc.writeMem(0x388c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcac0, gbc.sp());
        EXPECT(0x388e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01D1
        gbc.setState(0x170, 0xb898, 0xbcd0, 0xb9d8, 0x8d3, 0x8cd2, 0x1, 0x1);
        gbc.writeMem(0x170, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb898, gbc.sp());
        EXPECT(0x172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01D2
        gbc.setState(0xa80e, 0xe8aa, 0x3c40, 0x23a6, 0xe1fe, 0x2c87, 0x1, 0x0);
        gbc.writeMem(0xa80e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe8aa, gbc.sp());
        EXPECT(0xa810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80e));
        EXPECT(0xc, gbc.readMem(0xa80f));
        // CB 0C 01D3
        gbc.setState(0x624c, 0x92c8, 0x5ce0, 0x36ee, 0x111c, 0x4848, 0x0, 0x0);
        gbc.writeMem(0x624c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x92c8, gbc.sp());
        EXPECT(0x624e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01D4
        gbc.setState(0xb112, 0x76d1, 0x1700, 0x3ce6, 0x1359, 0xc6ee, 0x1, 0x1);
        gbc.writeMem(0xb112, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x76d1, gbc.sp());
        EXPECT(0xb114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb112));
        EXPECT(0xc, gbc.readMem(0xb113));
        // CB 0C 01D5
        gbc.setState(0xcf84, 0x9ddc, 0x5c50, 0x2ae7, 0x3dc1, 0xb261, 0x0, 0x1);
        gbc.writeMem(0xcf84, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9ddc, gbc.sp());
        EXPECT(0xcf86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf84));
        EXPECT(0xc, gbc.readMem(0xcf85));
        // CB 0C 01D6
        gbc.setState(0xea8e, 0xfa68, 0x6180, 0x6cc7, 0xf866, 0xd9a1, 0x1, 0x0);
        gbc.writeMem(0xea8e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfa68, gbc.sp());
        EXPECT(0xea90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea8e));
        EXPECT(0xc, gbc.readMem(0xea8f));
        // CB 0C 01D7
        gbc.setState(0x5449, 0xe112, 0x1b20, 0x8ff3, 0xbd2d, 0x2171, 0x1, 0x1);
        gbc.writeMem(0x5449, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe112, gbc.sp());
        EXPECT(0x544b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01D8
        gbc.setState(0xadf8, 0x6646, 0x6de0, 0xa19c, 0x3875, 0x12f9, 0x0, 0x1);
        gbc.writeMem(0xadf8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6646, gbc.sp());
        EXPECT(0xadfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf8));
        EXPECT(0xc, gbc.readMem(0xadf9));
        // CB 0C 01D9
        gbc.setState(0x76ed, 0x202f, 0x98f0, 0xc6de, 0xfd48, 0x55c, 0x1, 0x1);
        gbc.writeMem(0x76ed, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x202f, gbc.sp());
        EXPECT(0x76ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01DA
        gbc.setState(0xd167, 0xbe4a, 0xd930, 0xe119, 0x248, 0xc3b6, 0x1, 0x1);
        gbc.writeMem(0xd167, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbe4a, gbc.sp());
        EXPECT(0xd169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd167));
        EXPECT(0xc, gbc.readMem(0xd168));
        // CB 0C 01DB
        gbc.setState(0x3f1c, 0x7d36, 0x61d0, 0xbc38, 0x2f2b, 0x16d2, 0x0, 0x1);
        gbc.writeMem(0x3f1c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7d36, gbc.sp());
        EXPECT(0x3f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01DC
        gbc.setState(0x6ba1, 0x5943, 0x9110, 0xd0b6, 0xb108, 0xde03, 0x1, 0x0);
        gbc.writeMem(0x6ba1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5943, gbc.sp());
        EXPECT(0x6ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01DD
        gbc.setState(0x7297, 0x2b9, 0xe4d0, 0xa62, 0xc3b0, 0x981d, 0x0, 0x1);
        gbc.writeMem(0x7297, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2b9, gbc.sp());
        EXPECT(0x7299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01DE
        gbc.setState(0xc4c2, 0x8713, 0xf5e0, 0x88d9, 0x7887, 0x30fd, 0x0, 0x0);
        gbc.writeMem(0xc4c2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8713, gbc.sp());
        EXPECT(0xc4c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c2));
        EXPECT(0xc, gbc.readMem(0xc4c3));
        // CB 0C 01DF
        gbc.setState(0x618d, 0x70b7, 0x3f40, 0x58e5, 0x2a43, 0x3a9a, 0x0, 0x1);
        gbc.writeMem(0x618d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x70b7, gbc.sp());
        EXPECT(0x618f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01E0
        gbc.setState(0x5d41, 0x4216, 0x6b90, 0x7ce1, 0xb1ea, 0x3de9, 0x1, 0x1);
        gbc.writeMem(0x5d41, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4216, gbc.sp());
        EXPECT(0x5d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01E1
        gbc.setState(0xd985, 0x6b1a, 0x9d70, 0x24a8, 0xa764, 0xe5, 0x0, 0x0);
        gbc.writeMem(0xd985, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6b1a, gbc.sp());
        EXPECT(0xd987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd985));
        EXPECT(0xc, gbc.readMem(0xd986));
        // CB 0C 01E2
        gbc.setState(0x525f, 0xaf8d, 0x5410, 0xfc57, 0xc0ca, 0x5fec, 0x0, 0x0);
        gbc.writeMem(0x525f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xaf8d, gbc.sp());
        EXPECT(0x5261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01E3
        gbc.setState(0x2866, 0xe93f, 0xfd20, 0x9bab, 0x64a, 0x7e5f, 0x1, 0x1);
        gbc.writeMem(0x2866, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe93f, gbc.sp());
        EXPECT(0x2868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01E4
        gbc.setState(0xcd5, 0x39eb, 0x80d0, 0xe93f, 0xc12e, 0x9281, 0x1, 0x0);
        gbc.writeMem(0xcd5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x39eb, gbc.sp());
        EXPECT(0xcd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01E5
        gbc.setState(0x6fbe, 0x8430, 0x8600, 0xe04d, 0x675d, 0xe74b, 0x1, 0x0);
        gbc.writeMem(0x6fbe, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8430, gbc.sp());
        EXPECT(0x6fc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01E6
        gbc.setState(0xa362, 0xb92b, 0x2930, 0xb726, 0xe4a9, 0xfc8, 0x1, 0x0);
        gbc.writeMem(0xa362, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb92b, gbc.sp());
        EXPECT(0xa364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa362));
        EXPECT(0xc, gbc.readMem(0xa363));
        // CB 0C 01E7
        gbc.setState(0x24ed, 0x8d37, 0xf910, 0x615a, 0x352f, 0x92db, 0x0, 0x0);
        gbc.writeMem(0x24ed, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8d37, gbc.sp());
        EXPECT(0x24ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01E8
        gbc.setState(0x7ec7, 0x88cb, 0x26d0, 0xedd2, 0x4848, 0xfcef, 0x1, 0x1);
        gbc.writeMem(0x7ec7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x88cb, gbc.sp());
        EXPECT(0x7ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01E9
        gbc.setState(0xd54a, 0x408b, 0xe5e0, 0x78fe, 0xc622, 0x376a, 0x1, 0x1);
        gbc.writeMem(0xd54a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x408b, gbc.sp());
        EXPECT(0xd54c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd54a));
        EXPECT(0xc, gbc.readMem(0xd54b));
        // CB 0C 01EA
        gbc.setState(0x1063, 0x2d96, 0x96f0, 0xf1f8, 0xde23, 0xf95c, 0x0, 0x1);
        gbc.writeMem(0x1063, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2d96, gbc.sp());
        EXPECT(0x1065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01EB
        gbc.setState(0xaa44, 0xa971, 0x4150, 0xd165, 0x5134, 0xe585, 0x0, 0x0);
        gbc.writeMem(0xaa44, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa971, gbc.sp());
        EXPECT(0xaa46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa44));
        EXPECT(0xc, gbc.readMem(0xaa45));
        // CB 0C 01EC
        gbc.setState(0x6681, 0xba33, 0xf6c0, 0x3202, 0x6bc9, 0xaa04, 0x1, 0x0);
        gbc.writeMem(0x6681, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xba33, gbc.sp());
        EXPECT(0x6683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01ED
        gbc.setState(0x91, 0x549f, 0xde60, 0x7ee3, 0xfab4, 0xb5e, 0x1, 0x0);
        gbc.writeMem(0x91, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x549f, gbc.sp());
        EXPECT(0x93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01EE
        gbc.setState(0xc1ad, 0x5b13, 0x3f50, 0x5df5, 0xf0e7, 0x8554, 0x1, 0x1);
        gbc.writeMem(0xc1ad, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5b13, gbc.sp());
        EXPECT(0xc1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ad));
        EXPECT(0xc, gbc.readMem(0xc1ae));
        // CB 0C 01EF
        gbc.setState(0x981b, 0x3cc4, 0xc370, 0x91f0, 0x551, 0xd0c7, 0x1, 0x1);
        gbc.writeMem(0x981b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3cc4, gbc.sp());
        EXPECT(0x981d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x981b));
        EXPECT(0xc, gbc.readMem(0x981c));
        // CB 0C 01F0
        gbc.setState(0x3212, 0x3cc, 0xd380, 0x671, 0xf211, 0xcad8, 0x0, 0x1);
        gbc.writeMem(0x3212, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3cc, gbc.sp());
        EXPECT(0x3214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01F1
        gbc.setState(0xc4de, 0x534a, 0x7a70, 0x4b5c, 0x60b0, 0xdafa, 0x0, 0x0);
        gbc.writeMem(0xc4de, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x534a, gbc.sp());
        EXPECT(0xc4e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4de));
        EXPECT(0xc, gbc.readMem(0xc4df));
        // CB 0C 01F2
        gbc.setState(0x9f0d, 0x5b51, 0x2ef0, 0xeecb, 0x5bbc, 0x53d4, 0x0, 0x1);
        gbc.writeMem(0x9f0d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5b51, gbc.sp());
        EXPECT(0x9f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f0d));
        EXPECT(0xc, gbc.readMem(0x9f0e));
        // CB 0C 01F3
        gbc.setState(0xb72c, 0xd565, 0x610, 0x48e5, 0x5638, 0xc460, 0x1, 0x0);
        gbc.writeMem(0xb72c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd565, gbc.sp());
        EXPECT(0xb72e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb72c));
        EXPECT(0xc, gbc.readMem(0xb72d));
        // CB 0C 01F4
        gbc.setState(0x8839, 0x5246, 0x38a0, 0xfc36, 0x6b34, 0xa79c, 0x1, 0x1);
        gbc.writeMem(0x8839, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5246, gbc.sp());
        EXPECT(0x883b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8839));
        EXPECT(0xc, gbc.readMem(0x883a));
        // CB 0C 01F5
        gbc.setState(0x4f6f, 0x72f0, 0x1b20, 0xbd0f, 0x6cf2, 0xe657, 0x1, 0x0);
        gbc.writeMem(0x4f6f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x72f0, gbc.sp());
        EXPECT(0x4f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01F6
        gbc.setState(0xd16d, 0xd2e7, 0xa200, 0xc8d1, 0x9528, 0x4908, 0x1, 0x0);
        gbc.writeMem(0xd16d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd2e7, gbc.sp());
        EXPECT(0xd16f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd16d));
        EXPECT(0xc, gbc.readMem(0xd16e));
        // CB 0C 01F7
        gbc.setState(0x334f, 0x9180, 0x9e70, 0x5a56, 0x462e, 0xb3a3, 0x0, 0x0);
        gbc.writeMem(0x334f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9180, gbc.sp());
        EXPECT(0x3351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01F8
        gbc.setState(0x26f5, 0x2f3b, 0x5f90, 0x5ddf, 0x77ee, 0x1d79, 0x1, 0x1);
        gbc.writeMem(0x26f5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2f3b, gbc.sp());
        EXPECT(0x26f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01F9
        gbc.setState(0x39d6, 0xfdc3, 0x380, 0x357b, 0x8ebf, 0x199, 0x0, 0x0);
        gbc.writeMem(0x39d6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfdc3, gbc.sp());
        EXPECT(0x39d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01FA
        gbc.setState(0x221e, 0x2a00, 0xb8d0, 0x27a1, 0x3c71, 0x51e2, 0x0, 0x0);
        gbc.writeMem(0x221e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2a00, gbc.sp());
        EXPECT(0x2220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01FB
        gbc.setState(0x71a5, 0x7ec, 0xd890, 0x2e1d, 0x40c6, 0xeb4c, 0x1, 0x1);
        gbc.writeMem(0x71a5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7ec, gbc.sp());
        EXPECT(0x71a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 01FC
        gbc.setState(0x7037, 0xdda9, 0xc7e0, 0xea28, 0xcf90, 0x7484, 0x1, 0x1);
        gbc.writeMem(0x7037, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xdda9, gbc.sp());
        EXPECT(0x7039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 01FE
        gbc.setState(0xadac, 0x263a, 0x65c0, 0x94a5, 0x1653, 0x3b4f, 0x0, 0x0);
        gbc.writeMem(0xadac, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x263a, gbc.sp());
        EXPECT(0xadae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadac));
        EXPECT(0xc, gbc.readMem(0xadad));
        // CB 0C 01FF
        gbc.setState(0x7e62, 0xa52a, 0x1ab0, 0xbc75, 0xbcda, 0xf1dd, 0x1, 0x1);
        gbc.writeMem(0x7e62, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa52a, gbc.sp());
        EXPECT(0x7e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0200
        gbc.setState(0x3d95, 0x7b55, 0xe8e0, 0x19ed, 0x7608, 0x7625, 0x0, 0x0);
        gbc.writeMem(0x3d95, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7b55, gbc.sp());
        EXPECT(0x3d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0201
        gbc.setState(0x2de8, 0xb863, 0xeda0, 0xd07, 0x7927, 0x6cbd, 0x0, 0x1);
        gbc.writeMem(0x2de8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb863, gbc.sp());
        EXPECT(0x2dea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0202
        gbc.setState(0x870c, 0xe523, 0xc050, 0xb5e, 0xe78c, 0x6683, 0x0, 0x0);
        gbc.writeMem(0x870c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe523, gbc.sp());
        EXPECT(0x870e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870c));
        EXPECT(0xc, gbc.readMem(0x870d));
        // CB 0C 0203
        gbc.setState(0xa6cc, 0x86c7, 0x6ab0, 0x6aeb, 0x5e36, 0x1c48, 0x1, 0x0);
        gbc.writeMem(0xa6cc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x86c7, gbc.sp());
        EXPECT(0xa6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6cc));
        EXPECT(0xc, gbc.readMem(0xa6cd));
        // CB 0C 0204
        gbc.setState(0x1923, 0x76b9, 0x3100, 0xe31b, 0x666c, 0xcc81, 0x0, 0x1);
        gbc.writeMem(0x1923, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x76b9, gbc.sp());
        EXPECT(0x1925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0205
        gbc.setState(0x1eb9, 0x99e0, 0x3610, 0x1fbe, 0x3df3, 0xb176, 0x1, 0x1);
        gbc.writeMem(0x1eb9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x99e0, gbc.sp());
        EXPECT(0x1ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0206
        gbc.setState(0x48e0, 0xc10e, 0xfad0, 0x80a, 0xcbbf, 0xb0f3, 0x1, 0x1);
        gbc.writeMem(0x48e0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc10e, gbc.sp());
        EXPECT(0x48e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0207
        gbc.setState(0x8611, 0x2c51, 0x1b80, 0x7756, 0xb15c, 0x817e, 0x1, 0x0);
        gbc.writeMem(0x8611, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2c51, gbc.sp());
        EXPECT(0x8613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8611));
        EXPECT(0xc, gbc.readMem(0x8612));
        // CB 0C 0208
        gbc.setState(0xbf7e, 0x9ee5, 0x3d00, 0xddd2, 0x6f6e, 0xa753, 0x1, 0x1);
        gbc.writeMem(0xbf7e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9ee5, gbc.sp());
        EXPECT(0xbf80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf7e));
        EXPECT(0xc, gbc.readMem(0xbf7f));
        // CB 0C 0209
        gbc.setState(0x1039, 0x2dff, 0xdb20, 0xbe90, 0x70a, 0xb095, 0x1, 0x1);
        gbc.writeMem(0x1039, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2dff, gbc.sp());
        EXPECT(0x103b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 020A
        gbc.setState(0x2310, 0xfd1b, 0x770, 0xcbbb, 0xf26a, 0x9a32, 0x1, 0x0);
        gbc.writeMem(0x2310, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfd1b, gbc.sp());
        EXPECT(0x2312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 020B
        gbc.setState(0x78f0, 0xdb28, 0xc4f0, 0x5088, 0x9681, 0x583f, 0x0, 0x1);
        gbc.writeMem(0x78f0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdb28, gbc.sp());
        EXPECT(0x78f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 020C
        gbc.setState(0x8bfa, 0x69ca, 0xa1f0, 0x7e0, 0xfb74, 0xa6a7, 0x0, 0x0);
        gbc.writeMem(0x8bfa, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x69ca, gbc.sp());
        EXPECT(0x8bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bfa));
        EXPECT(0xc, gbc.readMem(0x8bfb));
        // CB 0C 020D
        gbc.setState(0x4048, 0x728, 0x8090, 0x255b, 0x7d02, 0xac50, 0x1, 0x1);
        gbc.writeMem(0x4048, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x728, gbc.sp());
        EXPECT(0x404a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 020E
        gbc.setState(0x9650, 0xa5b3, 0xcbf0, 0x13f9, 0x1057, 0x13ac, 0x0, 0x1);
        gbc.writeMem(0x9650, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa5b3, gbc.sp());
        EXPECT(0x9652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9650));
        EXPECT(0xc, gbc.readMem(0x9651));
        // CB 0C 020F
        gbc.setState(0xe0e3, 0xb6e8, 0x1b70, 0xa36f, 0xe52f, 0x3c7e, 0x0, 0x0);
        gbc.writeMem(0xe0e3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb6e8, gbc.sp());
        EXPECT(0xe0e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0e3));
        EXPECT(0xc, gbc.readMem(0xe0e4));
        // CB 0C 0210
        gbc.setState(0x51e5, 0x25db, 0x1840, 0x7a2d, 0x55f7, 0xd9b1, 0x0, 0x0);
        gbc.writeMem(0x51e5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x25db, gbc.sp());
        EXPECT(0x51e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0211
        gbc.setState(0xee66, 0xf3a8, 0xad10, 0x3675, 0x80a0, 0x65af, 0x1, 0x1);
        gbc.writeMem(0xee66, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf3a8, gbc.sp());
        EXPECT(0xee68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee66));
        EXPECT(0xc, gbc.readMem(0xee67));
        // CB 0C 0212
        gbc.setState(0xac73, 0x11b5, 0xa5c0, 0x27e0, 0x1539, 0xa210, 0x0, 0x0);
        gbc.writeMem(0xac73, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x11b5, gbc.sp());
        EXPECT(0xac75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac73));
        EXPECT(0xc, gbc.readMem(0xac74));
        // CB 0C 0213
        gbc.setState(0xeb82, 0xd852, 0x5c20, 0xafa5, 0x903e, 0xbfcf, 0x1, 0x1);
        gbc.writeMem(0xeb82, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd852, gbc.sp());
        EXPECT(0xeb84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb82));
        EXPECT(0xc, gbc.readMem(0xeb83));
        // CB 0C 0214
        gbc.setState(0xd6a3, 0x3cf6, 0x6540, 0x53ff, 0x3c98, 0x2c26, 0x0, 0x1);
        gbc.writeMem(0xd6a3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3cf6, gbc.sp());
        EXPECT(0xd6a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a3));
        EXPECT(0xc, gbc.readMem(0xd6a4));
        // CB 0C 0215
        gbc.setState(0x74e1, 0xfa33, 0x8c90, 0x871c, 0x49c1, 0xb5c0, 0x1, 0x0);
        gbc.writeMem(0x74e1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfa33, gbc.sp());
        EXPECT(0x74e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0216
        gbc.setState(0x7ee6, 0xe83e, 0x2990, 0x18c9, 0x6553, 0x8cdd, 0x1, 0x0);
        gbc.writeMem(0x7ee6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe83e, gbc.sp());
        EXPECT(0x7ee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0217
        gbc.setState(0x1179, 0x81a7, 0x47a0, 0x74c1, 0x91f4, 0xd79f, 0x1, 0x0);
        gbc.writeMem(0x1179, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x81a7, gbc.sp());
        EXPECT(0x117b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0218
        gbc.setState(0x5c4f, 0xf4e6, 0x7740, 0x910e, 0x85d7, 0x18f2, 0x1, 0x0);
        gbc.writeMem(0x5c4f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf4e6, gbc.sp());
        EXPECT(0x5c51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0219
        gbc.setState(0xb693, 0xc4e, 0x76a0, 0xfc03, 0xedd6, 0x504e, 0x0, 0x1);
        gbc.writeMem(0xb693, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc4e, gbc.sp());
        EXPECT(0xb695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb693));
        EXPECT(0xc, gbc.readMem(0xb694));
        // CB 0C 021A
        gbc.setState(0x764d, 0x4a24, 0xc0c0, 0x61c5, 0xbb91, 0xb294, 0x0, 0x0);
        gbc.writeMem(0x764d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4a24, gbc.sp());
        EXPECT(0x764f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 021B
        gbc.setState(0x7b58, 0x11db, 0x8040, 0xf188, 0x8a7d, 0xfa56, 0x0, 0x0);
        gbc.writeMem(0x7b58, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x11db, gbc.sp());
        EXPECT(0x7b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 021C
        gbc.setState(0x5523, 0x9d6f, 0xe900, 0x693b, 0x2a94, 0x688c, 0x1, 0x1);
        gbc.writeMem(0x5523, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9d6f, gbc.sp());
        EXPECT(0x5525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 021D
        gbc.setState(0xd56a, 0x11dd, 0x6520, 0x5391, 0xd322, 0x80cc, 0x0, 0x0);
        gbc.writeMem(0xd56a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x11dd, gbc.sp());
        EXPECT(0xd56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd56a));
        EXPECT(0xc, gbc.readMem(0xd56b));
        // CB 0C 021E
        gbc.setState(0x921f, 0x8e0a, 0xf130, 0xcf21, 0xfde6, 0xba6d, 0x1, 0x0);
        gbc.writeMem(0x921f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8e0a, gbc.sp());
        EXPECT(0x9221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x921f));
        EXPECT(0xc, gbc.readMem(0x9220));
        // CB 0C 021F
        gbc.setState(0xd800, 0x84f8, 0x3920, 0x9e02, 0xe4e, 0x313e, 0x1, 0x1);
        gbc.writeMem(0xd800, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x84f8, gbc.sp());
        EXPECT(0xd802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd800));
        EXPECT(0xc, gbc.readMem(0xd801));
        // CB 0C 0220
        gbc.setState(0x66b9, 0xf51a, 0xa7c0, 0xe244, 0x1f12, 0x6d99, 0x0, 0x0);
        gbc.writeMem(0x66b9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf51a, gbc.sp());
        EXPECT(0x66bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0221
        gbc.setState(0x58c7, 0xd8e3, 0x3fb0, 0xb6df, 0x9635, 0xb149, 0x0, 0x0);
        gbc.writeMem(0x58c7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd8e3, gbc.sp());
        EXPECT(0x58c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0222
        gbc.setState(0x98ea, 0xe8d, 0x9300, 0x9479, 0xd03c, 0x1b32, 0x1, 0x0);
        gbc.writeMem(0x98ea, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe8d, gbc.sp());
        EXPECT(0x98ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ea));
        EXPECT(0xc, gbc.readMem(0x98eb));
        // CB 0C 0223
        gbc.setState(0xa47e, 0x6717, 0x8c50, 0x6441, 0x30c9, 0x2e4b, 0x1, 0x0);
        gbc.writeMem(0xa47e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6717, gbc.sp());
        EXPECT(0xa480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa47e));
        EXPECT(0xc, gbc.readMem(0xa47f));
        // CB 0C 0224
        gbc.setState(0x56a5, 0x999b, 0x1c80, 0x2b55, 0x49e3, 0xd22b, 0x1, 0x0);
        gbc.writeMem(0x56a5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x999b, gbc.sp());
        EXPECT(0x56a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0225
        gbc.setState(0x442c, 0x1311, 0xd460, 0xb9be, 0xfe40, 0xa1df, 0x1, 0x0);
        gbc.writeMem(0x442c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1311, gbc.sp());
        EXPECT(0x442e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0226
        gbc.setState(0x5f04, 0xb400, 0x4a50, 0xa97e, 0xe14c, 0x2677, 0x1, 0x0);
        gbc.writeMem(0x5f04, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb400, gbc.sp());
        EXPECT(0x5f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0228
        gbc.setState(0xaf29, 0x2a1d, 0x1c90, 0x9463, 0x920d, 0x72be, 0x0, 0x0);
        gbc.writeMem(0xaf29, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2a1d, gbc.sp());
        EXPECT(0xaf2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf29));
        EXPECT(0xc, gbc.readMem(0xaf2a));
        // CB 0C 0229
        gbc.setState(0x2c9f, 0x992c, 0xe7a0, 0xa269, 0xd959, 0x99b1, 0x1, 0x1);
        gbc.writeMem(0x2c9f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x992c, gbc.sp());
        EXPECT(0x2ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 022A
        gbc.setState(0xe4fd, 0xd2ca, 0x96b0, 0x7bab, 0x280a, 0x709d, 0x0, 0x1);
        gbc.writeMem(0xe4fd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd2ca, gbc.sp());
        EXPECT(0xe4ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4fd));
        EXPECT(0xc, gbc.readMem(0xe4fe));
        // CB 0C 022B
        gbc.setState(0xc8cf, 0xe66d, 0xb20, 0x3eda, 0x9230, 0x22da, 0x1, 0x0);
        gbc.writeMem(0xc8cf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe66d, gbc.sp());
        EXPECT(0xc8d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8cf));
        EXPECT(0xc, gbc.readMem(0xc8d0));
        // CB 0C 022C
        gbc.setState(0x837f, 0xe3cd, 0x2220, 0x6d40, 0x1e62, 0x7e8d, 0x0, 0x1);
        gbc.writeMem(0x837f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe3cd, gbc.sp());
        EXPECT(0x8381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x837f));
        EXPECT(0xc, gbc.readMem(0x8380));
        // CB 0C 022D
        gbc.setState(0xbafb, 0x693b, 0x1120, 0xae75, 0xd555, 0xc4db, 0x1, 0x0);
        gbc.writeMem(0xbafb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x693b, gbc.sp());
        EXPECT(0xbafd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbafb));
        EXPECT(0xc, gbc.readMem(0xbafc));
        // CB 0C 022E
        gbc.setState(0x5f79, 0xd7a5, 0xcf00, 0x1603, 0x7821, 0xc66c, 0x0, 0x0);
        gbc.writeMem(0x5f79, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd7a5, gbc.sp());
        EXPECT(0x5f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 022F
        gbc.setState(0xc843, 0x35b4, 0x7980, 0xa559, 0xa366, 0x5843, 0x1, 0x1);
        gbc.writeMem(0xc843, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x35b4, gbc.sp());
        EXPECT(0xc845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc843));
        EXPECT(0xc, gbc.readMem(0xc844));
        // CB 0C 0230
        gbc.setState(0xcab1, 0xbe55, 0x84b0, 0x3ff2, 0x2243, 0x8553, 0x1, 0x1);
        gbc.writeMem(0xcab1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xbe55, gbc.sp());
        EXPECT(0xcab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab1));
        EXPECT(0xc, gbc.readMem(0xcab2));
        // CB 0C 0231
        gbc.setState(0x3997, 0xaff, 0x7750, 0xcb2, 0x165c, 0x303, 0x0, 0x0);
        gbc.writeMem(0x3997, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xaff, gbc.sp());
        EXPECT(0x3999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0232
        gbc.setState(0x7af, 0xcf0, 0xb640, 0x8901, 0xca05, 0x9c99, 0x1, 0x0);
        gbc.writeMem(0x7af, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcf0, gbc.sp());
        EXPECT(0x7b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0233
        gbc.setState(0x12da, 0x177e, 0x5e70, 0x4df0, 0x3b50, 0x7c4d, 0x0, 0x1);
        gbc.writeMem(0x12da, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x177e, gbc.sp());
        EXPECT(0x12dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0234
        gbc.setState(0xc639, 0xa91d, 0x2110, 0xf9ee, 0x48b, 0x27a2, 0x0, 0x0);
        gbc.writeMem(0xc639, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa91d, gbc.sp());
        EXPECT(0xc63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc639));
        EXPECT(0xc, gbc.readMem(0xc63a));
        // CB 0C 0235
        gbc.setState(0x1135, 0x12da, 0x3920, 0x7c9a, 0x3564, 0xf7bb, 0x0, 0x1);
        gbc.writeMem(0x1135, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x12da, gbc.sp());
        EXPECT(0x1137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0236
        gbc.setState(0x6111, 0x640b, 0x4e90, 0x3859, 0x9e47, 0xfcd5, 0x0, 0x0);
        gbc.writeMem(0x6111, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x640b, gbc.sp());
        EXPECT(0x6113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0237
        gbc.setState(0xb09, 0x2a4b, 0x1a40, 0xfa92, 0x940b, 0xfc76, 0x0, 0x0);
        gbc.writeMem(0xb09, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2a4b, gbc.sp());
        EXPECT(0xb0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0238
        gbc.setState(0x3fb9, 0xea99, 0x28a0, 0xca12, 0xb0b1, 0x473b, 0x1, 0x0);
        gbc.writeMem(0x3fb9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xea99, gbc.sp());
        EXPECT(0x3fbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0239
        gbc.setState(0xc47a, 0x667c, 0x64e0, 0xe4e2, 0x2a87, 0x47c6, 0x0, 0x1);
        gbc.writeMem(0xc47a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x667c, gbc.sp());
        EXPECT(0xc47c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc47a));
        EXPECT(0xc, gbc.readMem(0xc47b));
        // CB 0C 023A
        gbc.setState(0x6d92, 0x5d81, 0x86b0, 0xd3bb, 0xd427, 0x86fe, 0x1, 0x1);
        gbc.writeMem(0x6d92, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5d81, gbc.sp());
        EXPECT(0x6d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 023B
        gbc.setState(0x4f99, 0xfe86, 0xc390, 0xfc52, 0xc023, 0xe1dd, 0x0, 0x0);
        gbc.writeMem(0x4f99, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfe86, gbc.sp());
        EXPECT(0x4f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 023C
        gbc.setState(0x7323, 0xac18, 0xa3d0, 0x45b2, 0x55ab, 0x9120, 0x1, 0x0);
        gbc.writeMem(0x7323, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xac18, gbc.sp());
        EXPECT(0x7325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 023D
        gbc.setState(0x6a58, 0x8397, 0x5640, 0xb5, 0x8693, 0x754f, 0x1, 0x1);
        gbc.writeMem(0x6a58, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8397, gbc.sp());
        EXPECT(0x6a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 023E
        gbc.setState(0xb6e, 0x2c32, 0x2c70, 0x5840, 0x95c9, 0x244f, 0x0, 0x0);
        gbc.writeMem(0xb6e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2c32, gbc.sp());
        EXPECT(0xb70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 023F
        gbc.setState(0x2aef, 0x924b, 0x1520, 0x9d7a, 0xcc01, 0x7990, 0x0, 0x0);
        gbc.writeMem(0x2aef, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x924b, gbc.sp());
        EXPECT(0x2af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0240
        gbc.setState(0x9e82, 0x121c, 0x7020, 0x2c67, 0x508d, 0x387a, 0x1, 0x1);
        gbc.writeMem(0x9e82, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x121c, gbc.sp());
        EXPECT(0x9e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e82));
        EXPECT(0xc, gbc.readMem(0x9e83));
        // CB 0C 0241
        gbc.setState(0xb0ce, 0x41b7, 0x7810, 0xfcd1, 0x6bd9, 0xe291, 0x1, 0x1);
        gbc.writeMem(0xb0ce, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x41b7, gbc.sp());
        EXPECT(0xb0d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ce));
        EXPECT(0xc, gbc.readMem(0xb0cf));
        // CB 0C 0242
        gbc.setState(0xc6ef, 0x1680, 0x6a50, 0xdff7, 0x50a6, 0xc559, 0x1, 0x1);
        gbc.writeMem(0xc6ef, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1680, gbc.sp());
        EXPECT(0xc6f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ef));
        EXPECT(0xc, gbc.readMem(0xc6f0));
        // CB 0C 0243
        gbc.setState(0xa00c, 0x1f17, 0x5260, 0xeb41, 0x26bd, 0x52e4, 0x0, 0x0);
        gbc.writeMem(0xa00c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1f17, gbc.sp());
        EXPECT(0xa00e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00c));
        EXPECT(0xc, gbc.readMem(0xa00d));
        // CB 0C 0244
        gbc.setState(0x76fb, 0xd6b2, 0x96c0, 0x722f, 0x573c, 0x7fd9, 0x0, 0x1);
        gbc.writeMem(0x76fb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd6b2, gbc.sp());
        EXPECT(0x76fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0245
        gbc.setState(0x9923, 0x9cdc, 0x65f0, 0xf68a, 0xef6d, 0x7cbb, 0x1, 0x1);
        gbc.writeMem(0x9923, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9cdc, gbc.sp());
        EXPECT(0x9925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9923));
        EXPECT(0xc, gbc.readMem(0x9924));
        // CB 0C 0246
        gbc.setState(0x582c, 0xd0ac, 0x28e0, 0x1751, 0xf96a, 0xfde2, 0x1, 0x1);
        gbc.writeMem(0x582c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd0ac, gbc.sp());
        EXPECT(0x582e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0247
        gbc.setState(0x2765, 0x506, 0xc9d0, 0xb88a, 0xf4c8, 0xc668, 0x1, 0x0);
        gbc.writeMem(0x2765, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x506, gbc.sp());
        EXPECT(0x2767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0248
        gbc.setState(0x5614, 0xf3cb, 0xcd10, 0x33c9, 0x9c4d, 0x9734, 0x0, 0x0);
        gbc.writeMem(0x5614, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf3cb, gbc.sp());
        EXPECT(0x5616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0249
        gbc.setState(0xad0b, 0xd0fb, 0x38d0, 0x5d5f, 0x33be, 0xd29a, 0x1, 0x1);
        gbc.writeMem(0xad0b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd0fb, gbc.sp());
        EXPECT(0xad0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad0b));
        EXPECT(0xc, gbc.readMem(0xad0c));
        // CB 0C 024A
        gbc.setState(0xa583, 0xa9d0, 0x20b0, 0xde17, 0xf080, 0xfe80, 0x0, 0x1);
        gbc.writeMem(0xa583, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa9d0, gbc.sp());
        EXPECT(0xa585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa583));
        EXPECT(0xc, gbc.readMem(0xa584));
        // CB 0C 024B
        gbc.setState(0x6875, 0x99e9, 0x6570, 0xe56e, 0x2a61, 0xffe0, 0x0, 0x1);
        gbc.writeMem(0x6875, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x99e9, gbc.sp());
        EXPECT(0x6877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 024C
        gbc.setState(0x73e7, 0xf798, 0xd200, 0xbfcb, 0xf268, 0xd7b, 0x0, 0x1);
        gbc.writeMem(0x73e7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf798, gbc.sp());
        EXPECT(0x73e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 024D
        gbc.setState(0x97cc, 0xf47e, 0x6fe0, 0x2109, 0xde23, 0xb9f, 0x0, 0x1);
        gbc.writeMem(0x97cc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf47e, gbc.sp());
        EXPECT(0x97ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97cc));
        EXPECT(0xc, gbc.readMem(0x97cd));
        // CB 0C 024E
        gbc.setState(0x91a2, 0x4202, 0x6700, 0xc09, 0x9943, 0x6417, 0x1, 0x1);
        gbc.writeMem(0x91a2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4202, gbc.sp());
        EXPECT(0x91a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a2));
        EXPECT(0xc, gbc.readMem(0x91a3));
        // CB 0C 024F
        gbc.setState(0x46e6, 0x5ac, 0xfdb0, 0x31cc, 0x4285, 0xd89c, 0x0, 0x1);
        gbc.writeMem(0x46e6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5ac, gbc.sp());
        EXPECT(0x46e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0250
        gbc.setState(0xaf9, 0x4695, 0x42d0, 0x4650, 0xc73f, 0x601d, 0x0, 0x1);
        gbc.writeMem(0xaf9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4695, gbc.sp());
        EXPECT(0xafb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0251
        gbc.setState(0xc6e6, 0x6847, 0x35e0, 0xbf8c, 0x2a8, 0x40ab, 0x0, 0x0);
        gbc.writeMem(0xc6e6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6847, gbc.sp());
        EXPECT(0xc6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e6));
        EXPECT(0xc, gbc.readMem(0xc6e7));
        // CB 0C 0252
        gbc.setState(0x6d05, 0x5d4, 0x7100, 0x7fbe, 0xc2eb, 0xc4c5, 0x0, 0x1);
        gbc.writeMem(0x6d05, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5d4, gbc.sp());
        EXPECT(0x6d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0253
        gbc.setState(0xbe5, 0x94d3, 0x2840, 0x799e, 0xcd2e, 0x1804, 0x0, 0x1);
        gbc.writeMem(0xbe5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x94d3, gbc.sp());
        EXPECT(0xbe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0254
        gbc.setState(0x3ff, 0x8eb3, 0xc60, 0x6fd4, 0xaf09, 0x491e, 0x1, 0x0);
        gbc.writeMem(0x3ff, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8eb3, gbc.sp());
        EXPECT(0x401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0255
        gbc.setState(0x1ea0, 0x8ee7, 0x4370, 0xbc54, 0x46f0, 0x16a7, 0x0, 0x1);
        gbc.writeMem(0x1ea0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8ee7, gbc.sp());
        EXPECT(0x1ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0256
        gbc.setState(0x6bbc, 0x31e7, 0xfa90, 0x344f, 0x6cbd, 0x37fc, 0x0, 0x1);
        gbc.writeMem(0x6bbc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x31e7, gbc.sp());
        EXPECT(0x6bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0257
        gbc.setState(0x7c84, 0x2b8d, 0x1d50, 0x98cf, 0xd112, 0x8afc, 0x0, 0x1);
        gbc.writeMem(0x7c84, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2b8d, gbc.sp());
        EXPECT(0x7c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0258
        gbc.setState(0xa776, 0x72ef, 0x7d40, 0xefe, 0xc462, 0xaaa7, 0x1, 0x1);
        gbc.writeMem(0xa776, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x72ef, gbc.sp());
        EXPECT(0xa778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa776));
        EXPECT(0xc, gbc.readMem(0xa777));
        // CB 0C 0259
        gbc.setState(0x4380, 0x8436, 0x1d70, 0xd7c0, 0xf0ff, 0x197a, 0x0, 0x0);
        gbc.writeMem(0x4380, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8436, gbc.sp());
        EXPECT(0x4382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 025A
        gbc.setState(0x5ec, 0x9f8b, 0x2b30, 0x7977, 0x3ec9, 0xe9df, 0x0, 0x0);
        gbc.writeMem(0x5ec, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9f8b, gbc.sp());
        EXPECT(0x5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 025B
        gbc.setState(0xc0a6, 0x8908, 0xc400, 0xd23d, 0x50cd, 0x36f3, 0x1, 0x0);
        gbc.writeMem(0xc0a6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8908, gbc.sp());
        EXPECT(0xc0a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a6));
        EXPECT(0xc, gbc.readMem(0xc0a7));
        // CB 0C 025C
        gbc.setState(0x9c8e, 0x7652, 0x50, 0x255e, 0x134b, 0x9e1c, 0x0, 0x0);
        gbc.writeMem(0x9c8e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7652, gbc.sp());
        EXPECT(0x9c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c8e));
        EXPECT(0xc, gbc.readMem(0x9c8f));
        // CB 0C 025D
        gbc.setState(0x7be9, 0xbaf7, 0xcc80, 0x1db4, 0xce2e, 0x9102, 0x0, 0x0);
        gbc.writeMem(0x7be9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbaf7, gbc.sp());
        EXPECT(0x7beb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 025E
        gbc.setState(0x1353, 0xb8c7, 0x72d0, 0xf317, 0xa61c, 0x76a9, 0x0, 0x0);
        gbc.writeMem(0x1353, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb8c7, gbc.sp());
        EXPECT(0x1355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 025F
        gbc.setState(0x3f0d, 0xfa5f, 0xac70, 0xac44, 0x2f9a, 0x25ec, 0x0, 0x1);
        gbc.writeMem(0x3f0d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfa5f, gbc.sp());
        EXPECT(0x3f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0260
        gbc.setState(0x99fb, 0xe671, 0x3be0, 0x8ce5, 0x20c, 0xf9a0, 0x1, 0x0);
        gbc.writeMem(0x99fb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe671, gbc.sp());
        EXPECT(0x99fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99fb));
        EXPECT(0xc, gbc.readMem(0x99fc));
        // CB 0C 0261
        gbc.setState(0x279a, 0x4e59, 0x6870, 0xda28, 0x7081, 0x6a1, 0x0, 0x0);
        gbc.writeMem(0x279a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4e59, gbc.sp());
        EXPECT(0x279c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0262
        gbc.setState(0xadb, 0xe97f, 0x9490, 0x371e, 0x5b33, 0xc2de, 0x1, 0x0);
        gbc.writeMem(0xadb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe97f, gbc.sp());
        EXPECT(0xadd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0263
        gbc.setState(0xe074, 0x70e6, 0x89a0, 0x4e43, 0x4418, 0xa98, 0x1, 0x1);
        gbc.writeMem(0xe074, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x70e6, gbc.sp());
        EXPECT(0xe076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe074));
        EXPECT(0xc, gbc.readMem(0xe075));
        // CB 0C 0264
        gbc.setState(0x62e6, 0x40c8, 0xa890, 0x8973, 0x4d2f, 0x4f27, 0x0, 0x0);
        gbc.writeMem(0x62e6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x40c8, gbc.sp());
        EXPECT(0x62e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0265
        gbc.setState(0x5586, 0x3312, 0xde0, 0x6fb6, 0xf292, 0xfca6, 0x1, 0x1);
        gbc.writeMem(0x5586, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3312, gbc.sp());
        EXPECT(0x5588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0266
        gbc.setState(0x180e, 0x6ddf, 0x3be0, 0x1c53, 0xab31, 0xd202, 0x0, 0x1);
        gbc.writeMem(0x180e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6ddf, gbc.sp());
        EXPECT(0x1810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0267
        gbc.setState(0x90b0, 0x23e6, 0xae90, 0xec9d, 0x4fe5, 0xa6f0, 0x1, 0x1);
        gbc.writeMem(0x90b0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x23e6, gbc.sp());
        EXPECT(0x90b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b0));
        EXPECT(0xc, gbc.readMem(0x90b1));
        // CB 0C 0268
        gbc.setState(0x1687, 0x3873, 0x1f30, 0x428b, 0x75eb, 0xd542, 0x1, 0x0);
        gbc.writeMem(0x1687, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3873, gbc.sp());
        EXPECT(0x1689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0269
        gbc.setState(0x6804, 0xb895, 0x2f0, 0x2a3f, 0x665c, 0x4009, 0x0, 0x0);
        gbc.writeMem(0x6804, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb895, gbc.sp());
        EXPECT(0x6806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 026A
        gbc.setState(0xceb3, 0x1802, 0x9b50, 0xba8f, 0xf430, 0xd156, 0x1, 0x1);
        gbc.writeMem(0xceb3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1802, gbc.sp());
        EXPECT(0xceb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb3));
        EXPECT(0xc, gbc.readMem(0xceb4));
        // CB 0C 026B
        gbc.setState(0xc47, 0x4870, 0x7dc0, 0x2353, 0x5a16, 0xa0cb, 0x0, 0x1);
        gbc.writeMem(0xc47, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4870, gbc.sp());
        EXPECT(0xc49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 026C
        gbc.setState(0x2eef, 0x3ee9, 0xfbd0, 0x87bd, 0xbc82, 0xfe24, 0x1, 0x0);
        gbc.writeMem(0x2eef, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3ee9, gbc.sp());
        EXPECT(0x2ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 026D
        gbc.setState(0x1ee4, 0x19c9, 0x2830, 0xf556, 0x915d, 0xfa50, 0x1, 0x0);
        gbc.writeMem(0x1ee4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x19c9, gbc.sp());
        EXPECT(0x1ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 026E
        gbc.setState(0x1a9e, 0x653d, 0xa010, 0x9c6b, 0x2465, 0x23ee, 0x0, 0x0);
        gbc.writeMem(0x1a9e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x653d, gbc.sp());
        EXPECT(0x1aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 026F
        gbc.setState(0x8674, 0xba46, 0x2810, 0x6187, 0x2431, 0x1ab, 0x1, 0x0);
        gbc.writeMem(0x8674, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xba46, gbc.sp());
        EXPECT(0x8676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8674));
        EXPECT(0xc, gbc.readMem(0x8675));
        // CB 0C 0270
        gbc.setState(0x4b0d, 0x6c05, 0x7680, 0x57e8, 0xe643, 0x50c1, 0x0, 0x0);
        gbc.writeMem(0x4b0d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6c05, gbc.sp());
        EXPECT(0x4b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0271
        gbc.setState(0xd365, 0x79ae, 0xab30, 0xa58, 0x4f08, 0x611e, 0x0, 0x0);
        gbc.writeMem(0xd365, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x79ae, gbc.sp());
        EXPECT(0xd367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd365));
        EXPECT(0xc, gbc.readMem(0xd366));
        // CB 0C 0272
        gbc.setState(0x3e72, 0xf62a, 0xc2d0, 0x8a8f, 0x1ac7, 0x5042, 0x1, 0x0);
        gbc.writeMem(0x3e72, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf62a, gbc.sp());
        EXPECT(0x3e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0273
        gbc.setState(0xd77d, 0x2bc, 0xb9c0, 0x3d5e, 0x82e7, 0x8b44, 0x1, 0x0);
        gbc.writeMem(0xd77d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2bc, gbc.sp());
        EXPECT(0xd77f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd77d));
        EXPECT(0xc, gbc.readMem(0xd77e));
        // CB 0C 0274
        gbc.setState(0x18ba, 0xcb89, 0x6b70, 0x8474, 0x4217, 0xe53e, 0x0, 0x1);
        gbc.writeMem(0x18ba, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcb89, gbc.sp());
        EXPECT(0x18bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0275
        gbc.setState(0x2d71, 0x8384, 0xd7a0, 0x65d1, 0xca06, 0xcab5, 0x1, 0x0);
        gbc.writeMem(0x2d71, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8384, gbc.sp());
        EXPECT(0x2d73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0276
        gbc.setState(0x7e8, 0x310d, 0x1f10, 0xe397, 0x5593, 0x98b0, 0x0, 0x1);
        gbc.writeMem(0x7e8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x310d, gbc.sp());
        EXPECT(0x7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0277
        gbc.setState(0x2922, 0x3577, 0x7b50, 0x663e, 0xc08a, 0x74a4, 0x1, 0x0);
        gbc.writeMem(0x2922, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3577, gbc.sp());
        EXPECT(0x2924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0278
        gbc.setState(0x6c61, 0x615a, 0xb6b0, 0xfe02, 0xebbc, 0x9b91, 0x0, 0x0);
        gbc.writeMem(0x6c61, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x615a, gbc.sp());
        EXPECT(0x6c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0279
        gbc.setState(0x96c1, 0x3f89, 0x6a0, 0x573e, 0xad8e, 0xfb1a, 0x1, 0x1);
        gbc.writeMem(0x96c1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3f89, gbc.sp());
        EXPECT(0x96c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c1));
        EXPECT(0xc, gbc.readMem(0x96c2));
        // CB 0C 027A
        gbc.setState(0x60f9, 0xc9b2, 0x70f0, 0xa3d7, 0xd2b3, 0x76f4, 0x1, 0x0);
        gbc.writeMem(0x60f9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc9b2, gbc.sp());
        EXPECT(0x60fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 027B
        gbc.setState(0xcdc0, 0xa7a7, 0x7930, 0xb274, 0xb235, 0xbfb0, 0x1, 0x1);
        gbc.writeMem(0xcdc0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa7a7, gbc.sp());
        EXPECT(0xcdc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdc0));
        EXPECT(0xc, gbc.readMem(0xcdc1));
        // CB 0C 027C
        gbc.setState(0x6a18, 0x98b8, 0x6780, 0x4805, 0xaf7a, 0x1d3e, 0x0, 0x0);
        gbc.writeMem(0x6a18, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x98b8, gbc.sp());
        EXPECT(0x6a1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 027D
        gbc.setState(0x3de0, 0xb087, 0x6120, 0x2790, 0xf0d8, 0xda10, 0x0, 0x1);
        gbc.writeMem(0x3de0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb087, gbc.sp());
        EXPECT(0x3de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 027E
        gbc.setState(0x6298, 0x55ee, 0x74c0, 0x424b, 0xbf45, 0x3a81, 0x0, 0x1);
        gbc.writeMem(0x6298, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x55ee, gbc.sp());
        EXPECT(0x629a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 027F
        gbc.setState(0x831a, 0x9465, 0x4af0, 0x5068, 0xffe2, 0x58cc, 0x0, 0x1);
        gbc.writeMem(0x831a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9465, gbc.sp());
        EXPECT(0x831c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x831a));
        EXPECT(0xc, gbc.readMem(0x831b));
        // CB 0C 0280
        gbc.setState(0x278e, 0x23f4, 0xf0e0, 0x7375, 0xcc24, 0x4ff6, 0x1, 0x0);
        gbc.writeMem(0x278e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x23f4, gbc.sp());
        EXPECT(0x2790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0281
        gbc.setState(0xe78e, 0xa57, 0x16c0, 0xd0a0, 0x4500, 0x6cb2, 0x1, 0x1);
        gbc.writeMem(0xe78e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa57, gbc.sp());
        EXPECT(0xe790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe78e));
        EXPECT(0xc, gbc.readMem(0xe78f));
        // CB 0C 0282
        gbc.setState(0xba6e, 0x8e81, 0x2760, 0x8a1c, 0x573, 0x78ca, 0x0, 0x0);
        gbc.writeMem(0xba6e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8e81, gbc.sp());
        EXPECT(0xba70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba6e));
        EXPECT(0xc, gbc.readMem(0xba6f));
        // CB 0C 0283
        gbc.setState(0xac66, 0xdaf3, 0x86e0, 0xc201, 0x249, 0x4efa, 0x0, 0x0);
        gbc.writeMem(0xac66, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdaf3, gbc.sp());
        EXPECT(0xac68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac66));
        EXPECT(0xc, gbc.readMem(0xac67));
        // CB 0C 0284
        gbc.setState(0x88bb, 0xff36, 0x2fd0, 0x5b6c, 0x76ca, 0xf8c5, 0x1, 0x1);
        gbc.writeMem(0x88bb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xff36, gbc.sp());
        EXPECT(0x88bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88bb));
        EXPECT(0xc, gbc.readMem(0x88bc));
        // CB 0C 0286
        gbc.setState(0xee18, 0xe7eb, 0xfe70, 0x57e4, 0x2b1, 0xa816, 0x1, 0x1);
        gbc.writeMem(0xee18, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe7eb, gbc.sp());
        EXPECT(0xee1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee18));
        EXPECT(0xc, gbc.readMem(0xee19));
        // CB 0C 0287
        gbc.setState(0xeb, 0x19f5, 0x3a60, 0xcb74, 0xcec8, 0x9a21, 0x1, 0x0);
        gbc.writeMem(0xeb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x19f5, gbc.sp());
        EXPECT(0xed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0288
        gbc.setState(0xec86, 0x77b7, 0xb660, 0x1223, 0x8a3c, 0x51be, 0x0, 0x1);
        gbc.writeMem(0xec86, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x77b7, gbc.sp());
        EXPECT(0xec88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec86));
        EXPECT(0xc, gbc.readMem(0xec87));
        // CB 0C 0289
        gbc.setState(0x7a8e, 0x5e3f, 0xe310, 0xa617, 0xc057, 0x452d, 0x1, 0x1);
        gbc.writeMem(0x7a8e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5e3f, gbc.sp());
        EXPECT(0x7a90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 028A
        gbc.setState(0x28f3, 0x6d4b, 0xc1e0, 0xae6d, 0x5df8, 0xa15a, 0x1, 0x0);
        gbc.writeMem(0x28f3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6d4b, gbc.sp());
        EXPECT(0x28f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 028B
        gbc.setState(0x6a80, 0x8787, 0x5670, 0xa449, 0xd4f8, 0xbf0, 0x1, 0x0);
        gbc.writeMem(0x6a80, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8787, gbc.sp());
        EXPECT(0x6a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 028C
        gbc.setState(0xba21, 0xb5df, 0xa950, 0xeb41, 0x20c1, 0x192c, 0x1, 0x1);
        gbc.writeMem(0xba21, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb5df, gbc.sp());
        EXPECT(0xba23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba21));
        EXPECT(0xc, gbc.readMem(0xba22));
        // CB 0C 028D
        gbc.setState(0xd4c2, 0x1a31, 0xced0, 0xb5b7, 0xc634, 0xce34, 0x1, 0x0);
        gbc.writeMem(0xd4c2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1a31, gbc.sp());
        EXPECT(0xd4c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c2));
        EXPECT(0xc, gbc.readMem(0xd4c3));
        // CB 0C 028F
        gbc.setState(0xbe73, 0xe99f, 0x8c60, 0x940a, 0xbb08, 0xa845, 0x1, 0x1);
        gbc.writeMem(0xbe73, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe99f, gbc.sp());
        EXPECT(0xbe75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe73));
        EXPECT(0xc, gbc.readMem(0xbe74));
        // CB 0C 0290
        gbc.setState(0x7028, 0x5b7a, 0x150, 0xc8e4, 0x31ba, 0x8e1, 0x0, 0x1);
        gbc.writeMem(0x7028, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5b7a, gbc.sp());
        EXPECT(0x702a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0292
        gbc.setState(0x84bd, 0x71e9, 0x3860, 0x9b22, 0x4244, 0x656d, 0x0, 0x0);
        gbc.writeMem(0x84bd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x71e9, gbc.sp());
        EXPECT(0x84bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84bd));
        EXPECT(0xc, gbc.readMem(0x84be));
        // CB 0C 0293
        gbc.setState(0xeb8b, 0xf80a, 0xe90, 0xe454, 0x2776, 0xbfc5, 0x1, 0x0);
        gbc.writeMem(0xeb8b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf80a, gbc.sp());
        EXPECT(0xeb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb8b));
        EXPECT(0xc, gbc.readMem(0xeb8c));
        // CB 0C 0294
        gbc.setState(0x1bc, 0x2fa3, 0xc690, 0x8b6a, 0x465c, 0xdc8f, 0x0, 0x1);
        gbc.writeMem(0x1bc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2fa3, gbc.sp());
        EXPECT(0x1be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0295
        gbc.setState(0xd6e2, 0x43b2, 0x96c0, 0x9b80, 0xd3cd, 0xce92, 0x0, 0x1);
        gbc.writeMem(0xd6e2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x43b2, gbc.sp());
        EXPECT(0xd6e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6e2));
        EXPECT(0xc, gbc.readMem(0xd6e3));
        // CB 0C 0296
        gbc.setState(0x78a0, 0xf9bf, 0xa530, 0xd4a3, 0x8a81, 0x2060, 0x0, 0x0);
        gbc.writeMem(0x78a0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf9bf, gbc.sp());
        EXPECT(0x78a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0297
        gbc.setState(0x4dea, 0x7384, 0x9550, 0xf34c, 0xb9a4, 0x4ddc, 0x0, 0x1);
        gbc.writeMem(0x4dea, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7384, gbc.sp());
        EXPECT(0x4dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0298
        gbc.setState(0x37a5, 0x176f, 0x9690, 0xa389, 0xa14e, 0x7240, 0x1, 0x0);
        gbc.writeMem(0x37a5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x176f, gbc.sp());
        EXPECT(0x37a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0299
        gbc.setState(0xd336, 0x2721, 0x9350, 0xa421, 0xe2b6, 0x426f, 0x0, 0x0);
        gbc.writeMem(0xd336, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2721, gbc.sp());
        EXPECT(0xd338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd336));
        EXPECT(0xc, gbc.readMem(0xd337));
        // CB 0C 029A
        gbc.setState(0x459f, 0x91cd, 0xe170, 0x437e, 0x1478, 0x9532, 0x0, 0x1);
        gbc.writeMem(0x459f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x91cd, gbc.sp());
        EXPECT(0x45a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 029B
        gbc.setState(0x891, 0x129, 0xa7d0, 0x2169, 0xb0b3, 0xc3f5, 0x1, 0x1);
        gbc.writeMem(0x891, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x129, gbc.sp());
        EXPECT(0x893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 029C
        gbc.setState(0x5409, 0xfe1e, 0x4350, 0x8992, 0x6b88, 0xa634, 0x0, 0x0);
        gbc.writeMem(0x5409, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfe1e, gbc.sp());
        EXPECT(0x540b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 029D
        gbc.setState(0x2ab4, 0xc788, 0x1cf0, 0x9a8d, 0x944b, 0xb817, 0x0, 0x1);
        gbc.writeMem(0x2ab4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc788, gbc.sp());
        EXPECT(0x2ab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 029E
        gbc.setState(0x8557, 0xc9d9, 0x9ed0, 0x70a1, 0xac8d, 0xd93b, 0x1, 0x0);
        gbc.writeMem(0x8557, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc9d9, gbc.sp());
        EXPECT(0x8559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8557));
        EXPECT(0xc, gbc.readMem(0x8558));
        // CB 0C 029F
        gbc.setState(0x5565, 0x8a87, 0x9040, 0x8208, 0x56d1, 0x571b, 0x0, 0x1);
        gbc.writeMem(0x5565, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8a87, gbc.sp());
        EXPECT(0x5567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02A0
        gbc.setState(0x487a, 0x83c1, 0x7ed0, 0xcdaa, 0xa292, 0x5037, 0x0, 0x1);
        gbc.writeMem(0x487a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x83c1, gbc.sp());
        EXPECT(0x487c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02A2
        gbc.setState(0xce, 0x2e3c, 0x5390, 0xd8c4, 0x674a, 0xb93d, 0x1, 0x1);
        gbc.writeMem(0xce, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2e3c, gbc.sp());
        EXPECT(0xd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02A3
        gbc.setState(0x67a7, 0xa4e8, 0x8780, 0x8bc5, 0x57b7, 0x4d4a, 0x0, 0x0);
        gbc.writeMem(0x67a7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa4e8, gbc.sp());
        EXPECT(0x67a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02A4
        gbc.setState(0xbe8b, 0xe7c2, 0x95a0, 0x2617, 0x6737, 0x71dd, 0x0, 0x0);
        gbc.writeMem(0xbe8b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe7c2, gbc.sp());
        EXPECT(0xbe8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8b));
        EXPECT(0xc, gbc.readMem(0xbe8c));
        // CB 0C 02A5
        gbc.setState(0x2d30, 0xb4b8, 0x8030, 0xd5b, 0x3b51, 0xbac6, 0x1, 0x1);
        gbc.writeMem(0x2d30, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb4b8, gbc.sp());
        EXPECT(0x2d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02A6
        gbc.setState(0x61f4, 0xa02e, 0x1f50, 0x24e1, 0x57b2, 0x4ecb, 0x1, 0x1);
        gbc.writeMem(0x61f4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa02e, gbc.sp());
        EXPECT(0x61f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02A8
        gbc.setState(0x6fd4, 0x6d90, 0x62a0, 0x268, 0x451a, 0x70ba, 0x0, 0x0);
        gbc.writeMem(0x6fd4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6d90, gbc.sp());
        EXPECT(0x6fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02A9
        gbc.setState(0x1ae7, 0x644d, 0x4920, 0x9974, 0xcd11, 0x1bc8, 0x1, 0x1);
        gbc.writeMem(0x1ae7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x644d, gbc.sp());
        EXPECT(0x1ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02AB
        gbc.setState(0xd13, 0x54d5, 0xef90, 0x9c6f, 0xa481, 0x424a, 0x0, 0x0);
        gbc.writeMem(0xd13, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x54d5, gbc.sp());
        EXPECT(0xd15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02AC
        gbc.setState(0xd2cc, 0x5132, 0xf160, 0x6aaf, 0xc310, 0x995b, 0x0, 0x0);
        gbc.writeMem(0xd2cc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5132, gbc.sp());
        EXPECT(0xd2ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2cc));
        EXPECT(0xc, gbc.readMem(0xd2cd));
        // CB 0C 02AD
        gbc.setState(0x40e3, 0x3e49, 0xb90, 0xf9ca, 0x3094, 0x510b, 0x1, 0x0);
        gbc.writeMem(0x40e3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3e49, gbc.sp());
        EXPECT(0x40e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02AE
        gbc.setState(0xa8d7, 0xd007, 0x1eb0, 0xe304, 0x7421, 0xa21, 0x1, 0x0);
        gbc.writeMem(0xa8d7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd007, gbc.sp());
        EXPECT(0xa8d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d7));
        EXPECT(0xc, gbc.readMem(0xa8d8));
        // CB 0C 02AF
        gbc.setState(0x5356, 0x7da9, 0x2990, 0x5d72, 0xa1f, 0xa36d, 0x0, 0x0);
        gbc.writeMem(0x5356, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7da9, gbc.sp());
        EXPECT(0x5358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02B0
        gbc.setState(0x7cde, 0x68f7, 0x4c20, 0x3831, 0x6fa5, 0xfadc, 0x1, 0x1);
        gbc.writeMem(0x7cde, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x68f7, gbc.sp());
        EXPECT(0x7ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02B1
        gbc.setState(0x2301, 0x24e1, 0xfd20, 0xc601, 0xb4d8, 0x9c70, 0x1, 0x1);
        gbc.writeMem(0x2301, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x24e1, gbc.sp());
        EXPECT(0x2303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02B2
        gbc.setState(0x5436, 0x6b83, 0x8850, 0x84, 0xefac, 0x745d, 0x0, 0x0);
        gbc.writeMem(0x5436, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6b83, gbc.sp());
        EXPECT(0x5438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02B3
        gbc.setState(0x46d6, 0xf219, 0x2f20, 0x409f, 0xb1df, 0xd360, 0x0, 0x0);
        gbc.writeMem(0x46d6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf219, gbc.sp());
        EXPECT(0x46d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02B4
        gbc.setState(0x5c33, 0x5002, 0x6cd0, 0x454, 0x41b8, 0x722a, 0x1, 0x1);
        gbc.writeMem(0x5c33, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5002, gbc.sp());
        EXPECT(0x5c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02B5
        gbc.setState(0x5cc8, 0x2a2, 0x3ce0, 0x5c39, 0x2790, 0x6294, 0x0, 0x1);
        gbc.writeMem(0x5cc8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2a2, gbc.sp());
        EXPECT(0x5cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02B6
        gbc.setState(0xd454, 0x5bce, 0x8250, 0x90e2, 0xeca7, 0xde00, 0x0, 0x1);
        gbc.writeMem(0xd454, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5bce, gbc.sp());
        EXPECT(0xd456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd454));
        EXPECT(0xc, gbc.readMem(0xd455));
        // CB 0C 02B7
        gbc.setState(0xde8a, 0x65e2, 0x1b70, 0x58f3, 0xa1c6, 0x515b, 0x0, 0x0);
        gbc.writeMem(0xde8a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x65e2, gbc.sp());
        EXPECT(0xde8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde8a));
        EXPECT(0xc, gbc.readMem(0xde8b));
        // CB 0C 02B9
        gbc.setState(0x744, 0x1e0, 0x5c80, 0x66f1, 0xa3b0, 0x7f41, 0x0, 0x0);
        gbc.writeMem(0x744, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1e0, gbc.sp());
        EXPECT(0x746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02BA
        gbc.setState(0xe4f4, 0x41f2, 0xbcc0, 0x2bae, 0x1d6b, 0x3d86, 0x0, 0x1);
        gbc.writeMem(0xe4f4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x41f2, gbc.sp());
        EXPECT(0xe4f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f4));
        EXPECT(0xc, gbc.readMem(0xe4f5));
        // CB 0C 02BB
        gbc.setState(0x356, 0xb7a2, 0xe2a0, 0x7082, 0x31c8, 0x88a7, 0x1, 0x0);
        gbc.writeMem(0x356, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb7a2, gbc.sp());
        EXPECT(0x358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02BC
        gbc.setState(0xaad3, 0x3215, 0x2180, 0xdfed, 0x7d8d, 0x98e4, 0x0, 0x1);
        gbc.writeMem(0xaad3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3215, gbc.sp());
        EXPECT(0xaad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad3));
        EXPECT(0xc, gbc.readMem(0xaad4));
        // CB 0C 02BE
        gbc.setState(0xada6, 0xfc75, 0x79f0, 0xd1fb, 0xd689, 0x9fe5, 0x1, 0x1);
        gbc.writeMem(0xada6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfc75, gbc.sp());
        EXPECT(0xada8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada6));
        EXPECT(0xc, gbc.readMem(0xada7));
        // CB 0C 02BF
        gbc.setState(0xe859, 0x3fa6, 0x9ed0, 0x7bb2, 0xa1d9, 0xc8a1, 0x1, 0x0);
        gbc.writeMem(0xe859, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3fa6, gbc.sp());
        EXPECT(0xe85b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe859));
        EXPECT(0xc, gbc.readMem(0xe85a));
        // CB 0C 02C0
        gbc.setState(0xc2fa, 0xea57, 0x3e00, 0x840c, 0x12f6, 0xa032, 0x0, 0x0);
        gbc.writeMem(0xc2fa, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xea57, gbc.sp());
        EXPECT(0xc2fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2fa));
        EXPECT(0xc, gbc.readMem(0xc2fb));
        // CB 0C 02C2
        gbc.setState(0x7503, 0x4a18, 0x4d90, 0xafc5, 0x61e1, 0x2d5b, 0x1, 0x0);
        gbc.writeMem(0x7503, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4a18, gbc.sp());
        EXPECT(0x7505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02C3
        gbc.setState(0x4450, 0x1944, 0x5040, 0x1df2, 0x6047, 0xd88a, 0x0, 0x1);
        gbc.writeMem(0x4450, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1944, gbc.sp());
        EXPECT(0x4452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02C4
        gbc.setState(0xefc2, 0x9598, 0x3920, 0x59d5, 0x2764, 0xd607, 0x1, 0x0);
        gbc.writeMem(0xefc2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9598, gbc.sp());
        EXPECT(0xefc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc2));
        EXPECT(0xc, gbc.readMem(0xefc3));
        // CB 0C 02C5
        gbc.setState(0x6520, 0x62c5, 0xe0b0, 0xe0c4, 0xce99, 0x221c, 0x1, 0x0);
        gbc.writeMem(0x6520, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x62c5, gbc.sp());
        EXPECT(0x6522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02C6
        gbc.setState(0x8739, 0x4710, 0x8520, 0x46aa, 0x52a5, 0x2e3d, 0x0, 0x0);
        gbc.writeMem(0x8739, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4710, gbc.sp());
        EXPECT(0x873b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8739));
        EXPECT(0xc, gbc.readMem(0x873a));
        // CB 0C 02C7
        gbc.setState(0xe708, 0xf39d, 0x89b0, 0xb271, 0x94c2, 0x3733, 0x1, 0x0);
        gbc.writeMem(0xe708, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf39d, gbc.sp());
        EXPECT(0xe70a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe708));
        EXPECT(0xc, gbc.readMem(0xe709));
        // CB 0C 02C8
        gbc.setState(0x31c, 0x82dc, 0xbef0, 0x9393, 0x721f, 0xdf3c, 0x0, 0x0);
        gbc.writeMem(0x31c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x82dc, gbc.sp());
        EXPECT(0x31e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02C9
        gbc.setState(0xc4cf, 0x54d5, 0xdc00, 0x769d, 0xafe6, 0x7927, 0x0, 0x0);
        gbc.writeMem(0xc4cf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x54d5, gbc.sp());
        EXPECT(0xc4d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4cf));
        EXPECT(0xc, gbc.readMem(0xc4d0));
        // CB 0C 02CA
        gbc.setState(0x3fb, 0xb9b0, 0x29c0, 0x3b61, 0x3469, 0xae54, 0x1, 0x1);
        gbc.writeMem(0x3fb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb9b0, gbc.sp());
        EXPECT(0x3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02CB
        gbc.setState(0xb914, 0x9ad2, 0x51a0, 0xeec0, 0xa1ca, 0xd8c, 0x0, 0x0);
        gbc.writeMem(0xb914, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9ad2, gbc.sp());
        EXPECT(0xb916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb914));
        EXPECT(0xc, gbc.readMem(0xb915));
        // CB 0C 02CC
        gbc.setState(0xef76, 0x2ff8, 0x3ca0, 0xa583, 0xaf0c, 0xc40e, 0x1, 0x1);
        gbc.writeMem(0xef76, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2ff8, gbc.sp());
        EXPECT(0xef78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef76));
        EXPECT(0xc, gbc.readMem(0xef77));
        // CB 0C 02CD
        gbc.setState(0x25f1, 0x34e, 0x8c20, 0xc4db, 0x5cb5, 0xa56e, 0x0, 0x1);
        gbc.writeMem(0x25f1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x34e, gbc.sp());
        EXPECT(0x25f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02CE
        gbc.setState(0x9aa3, 0xd278, 0xde10, 0xbed2, 0x1064, 0x35a4, 0x0, 0x1);
        gbc.writeMem(0x9aa3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd278, gbc.sp());
        EXPECT(0x9aa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa3));
        EXPECT(0xc, gbc.readMem(0x9aa4));
        // CB 0C 02CF
        gbc.setState(0x1c33, 0x816c, 0xc9a0, 0x1d2f, 0x7d0c, 0xe15e, 0x1, 0x0);
        gbc.writeMem(0x1c33, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x816c, gbc.sp());
        EXPECT(0x1c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02D0
        gbc.setState(0x6fa0, 0xb213, 0x8a30, 0x2eed, 0x6f0e, 0x3128, 0x0, 0x1);
        gbc.writeMem(0x6fa0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb213, gbc.sp());
        EXPECT(0x6fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02D1
        gbc.setState(0xbf0e, 0x2c63, 0x7710, 0xe8aa, 0x95f6, 0x94, 0x1, 0x0);
        gbc.writeMem(0xbf0e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2c63, gbc.sp());
        EXPECT(0xbf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf0e));
        EXPECT(0xc, gbc.readMem(0xbf0f));
        // CB 0C 02D2
        gbc.setState(0xd213, 0xff27, 0x5370, 0x2afb, 0xa4ed, 0xdac7, 0x0, 0x1);
        gbc.writeMem(0xd213, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xff27, gbc.sp());
        EXPECT(0xd215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd213));
        EXPECT(0xc, gbc.readMem(0xd214));
        // CB 0C 02D3
        gbc.setState(0x2c3f, 0x7036, 0x8c80, 0xf59e, 0x7b4c, 0xf89a, 0x1, 0x1);
        gbc.writeMem(0x2c3f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7036, gbc.sp());
        EXPECT(0x2c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02D4
        gbc.setState(0x3514, 0xcac3, 0xb810, 0x4d5d, 0x5d48, 0x1ee3, 0x1, 0x1);
        gbc.writeMem(0x3514, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcac3, gbc.sp());
        EXPECT(0x3516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02D5
        gbc.setState(0xaea9, 0xd56b, 0x8ba0, 0xe27c, 0x3063, 0x8581, 0x1, 0x0);
        gbc.writeMem(0xaea9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd56b, gbc.sp());
        EXPECT(0xaeab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea9));
        EXPECT(0xc, gbc.readMem(0xaeaa));
        // CB 0C 02D6
        gbc.setState(0x8008, 0x92e1, 0x8ff0, 0x7a72, 0xe8bb, 0x5a91, 0x1, 0x1);
        gbc.writeMem(0x8008, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x92e1, gbc.sp());
        EXPECT(0x800a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8008));
        EXPECT(0xc, gbc.readMem(0x8009));
        // CB 0C 02D7
        gbc.setState(0xbdba, 0xc393, 0x3d30, 0xa13e, 0x26a7, 0x5fe5, 0x0, 0x1);
        gbc.writeMem(0xbdba, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc393, gbc.sp());
        EXPECT(0xbdbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdba));
        EXPECT(0xc, gbc.readMem(0xbdbb));
        // CB 0C 02D8
        gbc.setState(0x95c5, 0x3cb0, 0xe0e0, 0xe673, 0x5381, 0xda1a, 0x0, 0x0);
        gbc.writeMem(0x95c5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3cb0, gbc.sp());
        EXPECT(0x95c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c5));
        EXPECT(0xc, gbc.readMem(0x95c6));
        // CB 0C 02D9
        gbc.setState(0x2242, 0x1265, 0x6b10, 0x41d4, 0x937b, 0x203d, 0x1, 0x0);
        gbc.writeMem(0x2242, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1265, gbc.sp());
        EXPECT(0x2244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02DA
        gbc.setState(0xeb2f, 0xcf22, 0xe940, 0xc80e, 0x4c63, 0xec80, 0x1, 0x0);
        gbc.writeMem(0xeb2f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcf22, gbc.sp());
        EXPECT(0xeb31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2f));
        EXPECT(0xc, gbc.readMem(0xeb30));
        // CB 0C 02DB
        gbc.setState(0x2698, 0x65d5, 0xf9c0, 0xc584, 0x2f73, 0xa05d, 0x0, 0x1);
        gbc.writeMem(0x2698, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x65d5, gbc.sp());
        EXPECT(0x269a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02DC
        gbc.setState(0x541, 0xada8, 0x80f0, 0x55e6, 0x1cf2, 0xf29c, 0x0, 0x0);
        gbc.writeMem(0x541, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xada8, gbc.sp());
        EXPECT(0x543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02DD
        gbc.setState(0xd460, 0x1f9e, 0x1d80, 0x970b, 0xef61, 0xc69c, 0x0, 0x1);
        gbc.writeMem(0xd460, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1f9e, gbc.sp());
        EXPECT(0xd462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd460));
        EXPECT(0xc, gbc.readMem(0xd461));
        // CB 0C 02DE
        gbc.setState(0xe195, 0x8175, 0x47c0, 0xd70f, 0xda74, 0x9193, 0x0, 0x0);
        gbc.writeMem(0xe195, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8175, gbc.sp());
        EXPECT(0xe197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe195));
        EXPECT(0xc, gbc.readMem(0xe196));
        // CB 0C 02DF
        gbc.setState(0x208f, 0xde7d, 0xbcf0, 0x89bd, 0x885a, 0x1c44, 0x1, 0x0);
        gbc.writeMem(0x208f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xde7d, gbc.sp());
        EXPECT(0x2091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02E0
        gbc.setState(0x2820, 0x8128, 0x1ab0, 0xe452, 0x3edd, 0x5487, 0x1, 0x1);
        gbc.writeMem(0x2820, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8128, gbc.sp());
        EXPECT(0x2822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02E1
        gbc.setState(0x5f67, 0x9224, 0x4b0, 0x23d5, 0xcbed, 0x5a39, 0x0, 0x1);
        gbc.writeMem(0x5f67, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9224, gbc.sp());
        EXPECT(0x5f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02E2
        gbc.setState(0xef9b, 0x96, 0xa0b0, 0xf01f, 0x61c5, 0x2263, 0x1, 0x1);
        gbc.writeMem(0xef9b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x96, gbc.sp());
        EXPECT(0xef9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef9b));
        EXPECT(0xc, gbc.readMem(0xef9c));
        // CB 0C 02E3
        gbc.setState(0xe3ee, 0x8b0b, 0x8430, 0xb88c, 0x7910, 0x9c58, 0x1, 0x1);
        gbc.writeMem(0xe3ee, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8b0b, gbc.sp());
        EXPECT(0xe3f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ee));
        EXPECT(0xc, gbc.readMem(0xe3ef));
        // CB 0C 02E4
        gbc.setState(0x8fd2, 0x3305, 0xbf20, 0x18aa, 0xed8f, 0xcdfc, 0x0, 0x1);
        gbc.writeMem(0x8fd2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3305, gbc.sp());
        EXPECT(0x8fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd2));
        EXPECT(0xc, gbc.readMem(0x8fd3));
        // CB 0C 02E5
        gbc.setState(0x9190, 0x8d05, 0xfb70, 0xb476, 0xe659, 0xbd8d, 0x0, 0x1);
        gbc.writeMem(0x9190, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8d05, gbc.sp());
        EXPECT(0x9192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9190));
        EXPECT(0xc, gbc.readMem(0x9191));
        // CB 0C 02E6
        gbc.setState(0xdbe5, 0x7ba8, 0xf410, 0x2acb, 0x6b, 0x447f, 0x0, 0x0);
        gbc.writeMem(0xdbe5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7ba8, gbc.sp());
        EXPECT(0xdbe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe5));
        EXPECT(0xc, gbc.readMem(0xdbe6));
        // CB 0C 02E7
        gbc.setState(0xec6d, 0xfd22, 0x9ec0, 0xc57e, 0x194d, 0x11a0, 0x0, 0x1);
        gbc.writeMem(0xec6d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfd22, gbc.sp());
        EXPECT(0xec6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec6d));
        EXPECT(0xc, gbc.readMem(0xec6e));
        // CB 0C 02E9
        gbc.setState(0xc8bb, 0xa317, 0xaa0, 0x2cf5, 0x182c, 0x87c9, 0x0, 0x1);
        gbc.writeMem(0xc8bb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa317, gbc.sp());
        EXPECT(0xc8bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8bb));
        EXPECT(0xc, gbc.readMem(0xc8bc));
        // CB 0C 02EA
        gbc.setState(0xe06b, 0x7f99, 0x2b40, 0x3e93, 0xf723, 0x94be, 0x0, 0x0);
        gbc.writeMem(0xe06b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7f99, gbc.sp());
        EXPECT(0xe06d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06b));
        EXPECT(0xc, gbc.readMem(0xe06c));
        // CB 0C 02EB
        gbc.setState(0x5726, 0x50b7, 0xc1a0, 0xd49d, 0x1d9a, 0xa191, 0x0, 0x1);
        gbc.writeMem(0x5726, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x50b7, gbc.sp());
        EXPECT(0x5728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02EC
        gbc.setState(0xedc0, 0xcc7f, 0x96c0, 0x7a25, 0xbbfe, 0x7593, 0x0, 0x0);
        gbc.writeMem(0xedc0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcc7f, gbc.sp());
        EXPECT(0xedc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc0));
        EXPECT(0xc, gbc.readMem(0xedc1));
        // CB 0C 02ED
        gbc.setState(0x380d, 0xe2ac, 0x34b0, 0x9d14, 0x3159, 0xf0c7, 0x0, 0x1);
        gbc.writeMem(0x380d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe2ac, gbc.sp());
        EXPECT(0x380f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02EE
        gbc.setState(0x1ebe, 0x3ceb, 0xc030, 0x6ab0, 0x7bb1, 0x4894, 0x0, 0x0);
        gbc.writeMem(0x1ebe, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3ceb, gbc.sp());
        EXPECT(0x1ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02EF
        gbc.setState(0x990d, 0x247e, 0x7c10, 0xc, 0x1017, 0xd8d3, 0x0, 0x1);
        gbc.writeMem(0x990d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x247e, gbc.sp());
        EXPECT(0x990f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x990d));
        EXPECT(0xc, gbc.readMem(0x990e));
        // CB 0C 02F0
        gbc.setState(0x8004, 0x8fd8, 0x6a20, 0xa4c5, 0xf9a7, 0xc798, 0x0, 0x0);
        gbc.writeMem(0x8004, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8fd8, gbc.sp());
        EXPECT(0x8006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8004));
        EXPECT(0xc, gbc.readMem(0x8005));
        // CB 0C 02F1
        gbc.setState(0xc3c0, 0xfcd2, 0xdc80, 0x904b, 0x55d, 0x5cf5, 0x0, 0x1);
        gbc.writeMem(0xc3c0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfcd2, gbc.sp());
        EXPECT(0xc3c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c0));
        EXPECT(0xc, gbc.readMem(0xc3c1));
        // CB 0C 02F2
        gbc.setState(0x8432, 0xc106, 0x7680, 0xeb18, 0xfea6, 0x731f, 0x0, 0x0);
        gbc.writeMem(0x8432, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc106, gbc.sp());
        EXPECT(0x8434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8432));
        EXPECT(0xc, gbc.readMem(0x8433));
        // CB 0C 02F3
        gbc.setState(0x9075, 0x4dac, 0x7b30, 0xbf54, 0xd7d0, 0xf071, 0x1, 0x1);
        gbc.writeMem(0x9075, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4dac, gbc.sp());
        EXPECT(0x9077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9075));
        EXPECT(0xc, gbc.readMem(0x9076));
        // CB 0C 02F4
        gbc.setState(0x95ac, 0x4471, 0x220, 0x5fba, 0x69c2, 0xc057, 0x1, 0x1);
        gbc.writeMem(0x95ac, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4471, gbc.sp());
        EXPECT(0x95ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ac));
        EXPECT(0xc, gbc.readMem(0x95ad));
        // CB 0C 02F5
        gbc.setState(0xc57b, 0x7f7d, 0xb490, 0xc99, 0x600b, 0x2415, 0x0, 0x0);
        gbc.writeMem(0xc57b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7f7d, gbc.sp());
        EXPECT(0xc57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc57b));
        EXPECT(0xc, gbc.readMem(0xc57c));
        // CB 0C 02F6
        gbc.setState(0x5898, 0x61b2, 0x4000, 0xc435, 0xc0b6, 0xfa18, 0x0, 0x1);
        gbc.writeMem(0x5898, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x61b2, gbc.sp());
        EXPECT(0x589a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02F7
        gbc.setState(0x6165, 0x8808, 0xe830, 0xe06a, 0xc353, 0x95c5, 0x1, 0x0);
        gbc.writeMem(0x6165, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8808, gbc.sp());
        EXPECT(0x6167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02F8
        gbc.setState(0x6f5d, 0x23f2, 0x810, 0x1a27, 0x1ac7, 0x25b8, 0x1, 0x0);
        gbc.writeMem(0x6f5d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x23f2, gbc.sp());
        EXPECT(0x6f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02F9
        gbc.setState(0xcf80, 0xac2f, 0x2720, 0xe32a, 0x5623, 0x6f3c, 0x1, 0x0);
        gbc.writeMem(0xcf80, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xac2f, gbc.sp());
        EXPECT(0xcf82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf80));
        EXPECT(0xc, gbc.readMem(0xcf81));
        // CB 0C 02FA
        gbc.setState(0x5745, 0x3b1e, 0xedd0, 0xeca3, 0xff97, 0x98dc, 0x0, 0x1);
        gbc.writeMem(0x5745, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3b1e, gbc.sp());
        EXPECT(0x5747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02FB
        gbc.setState(0xb812, 0xff2, 0x1cc0, 0x3d9a, 0xd4c1, 0x5aa2, 0x0, 0x1);
        gbc.writeMem(0xb812, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xff2, gbc.sp());
        EXPECT(0xb814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb812));
        EXPECT(0xc, gbc.readMem(0xb813));
        // CB 0C 02FC
        gbc.setState(0x1f9d, 0xb420, 0xc6f0, 0xace5, 0x4765, 0xed87, 0x0, 0x0);
        gbc.writeMem(0x1f9d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb420, gbc.sp());
        EXPECT(0x1f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02FD
        gbc.setState(0x3643, 0xfdb1, 0xdda0, 0x10bc, 0xe8c5, 0x2b5, 0x1, 0x0);
        gbc.writeMem(0x3643, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xfdb1, gbc.sp());
        EXPECT(0x3645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 02FE
        gbc.setState(0x7af3, 0x94ad, 0xd770, 0x190e, 0x78e, 0x69da, 0x0, 0x0);
        gbc.writeMem(0x7af3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x94ad, gbc.sp());
        EXPECT(0x7af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 02FF
        gbc.setState(0xe3e0, 0xc448, 0x1830, 0xeadc, 0xead8, 0x665e, 0x0, 0x1);
        gbc.writeMem(0xe3e0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc448, gbc.sp());
        EXPECT(0xe3e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e0));
        EXPECT(0xc, gbc.readMem(0xe3e1));
        // CB 0C 0300
        gbc.setState(0xe4f1, 0x3618, 0x64a0, 0x4a6b, 0xfc4f, 0x7e36, 0x0, 0x0);
        gbc.writeMem(0xe4f1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3618, gbc.sp());
        EXPECT(0xe4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f1));
        EXPECT(0xc, gbc.readMem(0xe4f2));
        // CB 0C 0301
        gbc.setState(0xabf4, 0x2bfe, 0x2500, 0xf814, 0x2b7e, 0x3fc0, 0x1, 0x1);
        gbc.writeMem(0xabf4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2bfe, gbc.sp());
        EXPECT(0xabf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf4));
        EXPECT(0xc, gbc.readMem(0xabf5));
        // CB 0C 0302
        gbc.setState(0x245d, 0x98b5, 0x8680, 0x2a8, 0xdb63, 0x10e2, 0x0, 0x1);
        gbc.writeMem(0x245d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x98b5, gbc.sp());
        EXPECT(0x245f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0303
        gbc.setState(0xa767, 0x4c96, 0x86d0, 0xf766, 0x1344, 0x6c5c, 0x1, 0x0);
        gbc.writeMem(0xa767, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4c96, gbc.sp());
        EXPECT(0xa769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa767));
        EXPECT(0xc, gbc.readMem(0xa768));
        // CB 0C 0304
        gbc.setState(0xdca8, 0x67fe, 0xe1f0, 0xb9d4, 0xd09, 0x7d92, 0x0, 0x1);
        gbc.writeMem(0xdca8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x67fe, gbc.sp());
        EXPECT(0xdcaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdca8));
        EXPECT(0xc, gbc.readMem(0xdca9));
        // CB 0C 0305
        gbc.setState(0xeb1c, 0x8be7, 0x9080, 0xe70, 0x49df, 0x5514, 0x1, 0x1);
        gbc.writeMem(0xeb1c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8be7, gbc.sp());
        EXPECT(0xeb1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb1c));
        EXPECT(0xc, gbc.readMem(0xeb1d));
        // CB 0C 0306
        gbc.setState(0x66dc, 0xc2f4, 0x3bd0, 0x6b8f, 0xfd4e, 0xf65c, 0x0, 0x0);
        gbc.writeMem(0x66dc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc2f4, gbc.sp());
        EXPECT(0x66de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0307
        gbc.setState(0x7484, 0x34fe, 0x2e90, 0xb4c6, 0x8359, 0xd1d, 0x0, 0x1);
        gbc.writeMem(0x7484, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x34fe, gbc.sp());
        EXPECT(0x7486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0308
        gbc.setState(0x32d9, 0x839b, 0x5020, 0xfe3f, 0x2fa6, 0xa5b, 0x0, 0x0);
        gbc.writeMem(0x32d9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x839b, gbc.sp());
        EXPECT(0x32db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 030A
        gbc.setState(0xb094, 0x782c, 0xe940, 0x1d3f, 0x37b4, 0xba33, 0x1, 0x0);
        gbc.writeMem(0xb094, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x782c, gbc.sp());
        EXPECT(0xb096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb094));
        EXPECT(0xc, gbc.readMem(0xb095));
        // CB 0C 030B
        gbc.setState(0x8ed4, 0xf7a1, 0x7750, 0x160d, 0xf6bb, 0x9adf, 0x1, 0x0);
        gbc.writeMem(0x8ed4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf7a1, gbc.sp());
        EXPECT(0x8ed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed4));
        EXPECT(0xc, gbc.readMem(0x8ed5));
        // CB 0C 030C
        gbc.setState(0xee60, 0x998e, 0x8d60, 0xd2a3, 0x710a, 0x2f3d, 0x1, 0x0);
        gbc.writeMem(0xee60, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x998e, gbc.sp());
        EXPECT(0xee62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee60));
        EXPECT(0xc, gbc.readMem(0xee61));
        // CB 0C 030D
        gbc.setState(0xca03, 0x3e70, 0xb350, 0x78f7, 0xee44, 0x9ab7, 0x1, 0x0);
        gbc.writeMem(0xca03, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3e70, gbc.sp());
        EXPECT(0xca05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca03));
        EXPECT(0xc, gbc.readMem(0xca04));
        // CB 0C 030E
        gbc.setState(0xd75e, 0x14d8, 0x5a00, 0xe0c0, 0x47a1, 0xc801, 0x0, 0x0);
        gbc.writeMem(0xd75e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x14d8, gbc.sp());
        EXPECT(0xd760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75e));
        EXPECT(0xc, gbc.readMem(0xd75f));
        // CB 0C 030F
        gbc.setState(0x4257, 0x5311, 0xc210, 0xd02f, 0x2436, 0x23a0, 0x1, 0x1);
        gbc.writeMem(0x4257, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5311, gbc.sp());
        EXPECT(0x4259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0310
        gbc.setState(0xa071, 0x23c5, 0x1720, 0xd21a, 0x918b, 0xe0c9, 0x1, 0x0);
        gbc.writeMem(0xa071, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x23c5, gbc.sp());
        EXPECT(0xa073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa071));
        EXPECT(0xc, gbc.readMem(0xa072));
        // CB 0C 0311
        gbc.setState(0x9a8, 0xb2ec, 0x65f0, 0xd57a, 0x417e, 0x277e, 0x0, 0x1);
        gbc.writeMem(0x9a8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb2ec, gbc.sp());
        EXPECT(0x9aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0312
        gbc.setState(0x63d7, 0xa2af, 0x94b0, 0xe380, 0xbdd1, 0xfe19, 0x1, 0x0);
        gbc.writeMem(0x63d7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa2af, gbc.sp());
        EXPECT(0x63d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0313
        gbc.setState(0xaec7, 0xcac9, 0x5fd0, 0xc8ba, 0x4cf0, 0x3457, 0x1, 0x0);
        gbc.writeMem(0xaec7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcac9, gbc.sp());
        EXPECT(0xaec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec7));
        EXPECT(0xc, gbc.readMem(0xaec8));
        // CB 0C 0314
        gbc.setState(0x471f, 0xbc82, 0x2610, 0x996a, 0xb9d0, 0xcfd0, 0x0, 0x0);
        gbc.writeMem(0x471f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbc82, gbc.sp());
        EXPECT(0x4721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0315
        gbc.setState(0xc4f1, 0xa206, 0xaa50, 0xedd2, 0x208, 0x612e, 0x0, 0x0);
        gbc.writeMem(0xc4f1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa206, gbc.sp());
        EXPECT(0xc4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f1));
        EXPECT(0xc, gbc.readMem(0xc4f2));
        // CB 0C 0316
        gbc.setState(0x991e, 0x2a7f, 0x73b0, 0x5201, 0x7290, 0xa5a8, 0x0, 0x0);
        gbc.writeMem(0x991e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2a7f, gbc.sp());
        EXPECT(0x9920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991e));
        EXPECT(0xc, gbc.readMem(0x991f));
        // CB 0C 0318
        gbc.setState(0x234d, 0xc8d8, 0x4850, 0x908b, 0x4d2c, 0x2e84, 0x1, 0x1);
        gbc.writeMem(0x234d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc8d8, gbc.sp());
        EXPECT(0x234f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0319
        gbc.setState(0x17b5, 0xd2be, 0x4920, 0x582a, 0x6b24, 0x6979, 0x1, 0x1);
        gbc.writeMem(0x17b5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd2be, gbc.sp());
        EXPECT(0x17b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 031A
        gbc.setState(0x5c12, 0x272e, 0x26f0, 0xcde0, 0xac0c, 0x4bb8, 0x1, 0x1);
        gbc.writeMem(0x5c12, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x272e, gbc.sp());
        EXPECT(0x5c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 031B
        gbc.setState(0x1ce3, 0xa45a, 0x16d0, 0x331e, 0xba6a, 0xe54, 0x0, 0x0);
        gbc.writeMem(0x1ce3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa45a, gbc.sp());
        EXPECT(0x1ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 031C
        gbc.setState(0x3c3c, 0x5445, 0x1850, 0xeb70, 0x3137, 0xda3, 0x0, 0x0);
        gbc.writeMem(0x3c3c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5445, gbc.sp());
        EXPECT(0x3c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 031D
        gbc.setState(0x10c9, 0xdf9e, 0xca70, 0x4175, 0x1a3a, 0x9ae6, 0x0, 0x0);
        gbc.writeMem(0x10c9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdf9e, gbc.sp());
        EXPECT(0x10cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 031E
        gbc.setState(0x6113, 0x20d0, 0x26a0, 0xf75e, 0xca90, 0x354, 0x0, 0x0);
        gbc.writeMem(0x6113, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x20d0, gbc.sp());
        EXPECT(0x6115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 031F
        gbc.setState(0x3e6f, 0x48f0, 0x1870, 0x425f, 0xc8c5, 0x3e66, 0x0, 0x1);
        gbc.writeMem(0x3e6f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x48f0, gbc.sp());
        EXPECT(0x3e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0320
        gbc.setState(0xbc24, 0xe20d, 0x8c10, 0x61ba, 0x29be, 0x82db, 0x1, 0x1);
        gbc.writeMem(0xbc24, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe20d, gbc.sp());
        EXPECT(0xbc26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc24));
        EXPECT(0xc, gbc.readMem(0xbc25));
        // CB 0C 0321
        gbc.setState(0x5eb8, 0x2d20, 0xbba0, 0x33a9, 0xdfd6, 0xd12f, 0x0, 0x1);
        gbc.writeMem(0x5eb8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2d20, gbc.sp());
        EXPECT(0x5eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0322
        gbc.setState(0x34c4, 0xed7b, 0x1020, 0xbba0, 0x245e, 0x1b1b, 0x0, 0x0);
        gbc.writeMem(0x34c4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xed7b, gbc.sp());
        EXPECT(0x34c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0323
        gbc.setState(0xd226, 0x52e8, 0x9320, 0xd68a, 0x7bc4, 0x4b2a, 0x0, 0x0);
        gbc.writeMem(0xd226, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x52e8, gbc.sp());
        EXPECT(0xd228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd226));
        EXPECT(0xc, gbc.readMem(0xd227));
        // CB 0C 0324
        gbc.setState(0x6982, 0x9ae8, 0x31e0, 0x6615, 0xf29f, 0xc9d, 0x1, 0x1);
        gbc.writeMem(0x6982, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9ae8, gbc.sp());
        EXPECT(0x6984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0325
        gbc.setState(0x1e0a, 0xf7dd, 0x67a0, 0xdda4, 0x7fea, 0xe159, 0x1, 0x0);
        gbc.writeMem(0x1e0a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf7dd, gbc.sp());
        EXPECT(0x1e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0326
        gbc.setState(0xc48e, 0x8704, 0x7ed0, 0xfc3, 0x9fa0, 0x73a, 0x0, 0x0);
        gbc.writeMem(0xc48e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8704, gbc.sp());
        EXPECT(0xc490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc48e));
        EXPECT(0xc, gbc.readMem(0xc48f));
        // CB 0C 0327
        gbc.setState(0xb9b5, 0xffaa, 0x6730, 0xbfff, 0xc65b, 0xe151, 0x0, 0x0);
        gbc.writeMem(0xb9b5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xffaa, gbc.sp());
        EXPECT(0xb9b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b5));
        EXPECT(0xc, gbc.readMem(0xb9b6));
        // CB 0C 0328
        gbc.setState(0x2a8d, 0x497b, 0xc190, 0xc5ee, 0x8840, 0x29f6, 0x0, 0x1);
        gbc.writeMem(0x2a8d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x497b, gbc.sp());
        EXPECT(0x2a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0329
        gbc.setState(0xda50, 0x30de, 0x7eb0, 0x614d, 0xeb32, 0x3de, 0x1, 0x0);
        gbc.writeMem(0xda50, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x30de, gbc.sp());
        EXPECT(0xda52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda50));
        EXPECT(0xc, gbc.readMem(0xda51));
        // CB 0C 032A
        gbc.setState(0x4819, 0xd317, 0xde60, 0xcf1b, 0x99b9, 0x7df4, 0x1, 0x1);
        gbc.writeMem(0x4819, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd317, gbc.sp());
        EXPECT(0x481b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 032B
        gbc.setState(0x6725, 0xacee, 0x2350, 0xa088, 0x1cd5, 0x6e0e, 0x0, 0x0);
        gbc.writeMem(0x6725, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xacee, gbc.sp());
        EXPECT(0x6727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 032C
        gbc.setState(0x442c, 0xefea, 0x42f0, 0x7058, 0xc2c6, 0xad80, 0x1, 0x1);
        gbc.writeMem(0x442c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xefea, gbc.sp());
        EXPECT(0x442e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 032D
        gbc.setState(0x8e, 0xe679, 0xf5d0, 0xa82b, 0x99e2, 0x1a3a, 0x1, 0x0);
        gbc.writeMem(0x8e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe679, gbc.sp());
        EXPECT(0x90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 032E
        gbc.setState(0xc15, 0x771, 0xcc00, 0x762, 0x9f6f, 0x736e, 0x0, 0x1);
        gbc.writeMem(0xc15, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x771, gbc.sp());
        EXPECT(0xc17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 032F
        gbc.setState(0xac5c, 0x7a51, 0xf0f0, 0x84ac, 0x1684, 0x41ca, 0x1, 0x1);
        gbc.writeMem(0xac5c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7a51, gbc.sp());
        EXPECT(0xac5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac5c));
        EXPECT(0xc, gbc.readMem(0xac5d));
        // CB 0C 0330
        gbc.setState(0x49fe, 0x230e, 0x97c0, 0x51f9, 0x6b16, 0x7db9, 0x0, 0x0);
        gbc.writeMem(0x49fe, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x230e, gbc.sp());
        EXPECT(0x4a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0331
        gbc.setState(0xefd5, 0xca66, 0x7c00, 0x8df2, 0x973b, 0x2dcb, 0x0, 0x1);
        gbc.writeMem(0xefd5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xca66, gbc.sp());
        EXPECT(0xefd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd5));
        EXPECT(0xc, gbc.readMem(0xefd6));
        // CB 0C 0332
        gbc.setState(0x8376, 0x94cb, 0x990, 0xb8c9, 0xdf82, 0xc12b, 0x0, 0x1);
        gbc.writeMem(0x8376, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x94cb, gbc.sp());
        EXPECT(0x8378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8376));
        EXPECT(0xc, gbc.readMem(0x8377));
        // CB 0C 0333
        gbc.setState(0xc91d, 0x5b7d, 0x140, 0xaebc, 0x7cd8, 0x2106, 0x0, 0x0);
        gbc.writeMem(0xc91d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5b7d, gbc.sp());
        EXPECT(0xc91f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc91d));
        EXPECT(0xc, gbc.readMem(0xc91e));
        // CB 0C 0334
        gbc.setState(0x858f, 0x3715, 0x8d90, 0xae36, 0x3893, 0x5b61, 0x1, 0x0);
        gbc.writeMem(0x858f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3715, gbc.sp());
        EXPECT(0x8591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x858f));
        EXPECT(0xc, gbc.readMem(0x8590));
        // CB 0C 0336
        gbc.setState(0x93c4, 0xae62, 0xdc60, 0x31e0, 0x9146, 0xc71d, 0x1, 0x0);
        gbc.writeMem(0x93c4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xae62, gbc.sp());
        EXPECT(0x93c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c4));
        EXPECT(0xc, gbc.readMem(0x93c5));
        // CB 0C 0337
        gbc.setState(0x2f02, 0xa189, 0x2810, 0x179c, 0x910c, 0x1659, 0x0, 0x0);
        gbc.writeMem(0x2f02, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa189, gbc.sp());
        EXPECT(0x2f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0338
        gbc.setState(0xdc38, 0xa7c3, 0x4c30, 0xb40a, 0x14e7, 0x2ed2, 0x1, 0x1);
        gbc.writeMem(0xdc38, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa7c3, gbc.sp());
        EXPECT(0xdc3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc38));
        EXPECT(0xc, gbc.readMem(0xdc39));
        // CB 0C 0339
        gbc.setState(0x9a43, 0x2a1a, 0xcf80, 0x94ca, 0xde5, 0xfe22, 0x0, 0x1);
        gbc.writeMem(0x9a43, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2a1a, gbc.sp());
        EXPECT(0x9a45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a43));
        EXPECT(0xc, gbc.readMem(0x9a44));
        // CB 0C 033A
        gbc.setState(0x3840, 0x5e21, 0xf350, 0x9b9a, 0xa9cb, 0xc288, 0x1, 0x0);
        gbc.writeMem(0x3840, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5e21, gbc.sp());
        EXPECT(0x3842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 033C
        gbc.setState(0x410, 0xb469, 0x9ef0, 0x41f0, 0xa1b4, 0x266a, 0x0, 0x1);
        gbc.writeMem(0x410, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb469, gbc.sp());
        EXPECT(0x412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 033D
        gbc.setState(0x8c00, 0xac9, 0x4110, 0x90f0, 0x88ee, 0xd4f0, 0x0, 0x1);
        gbc.writeMem(0x8c00, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xac9, gbc.sp());
        EXPECT(0x8c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c00));
        EXPECT(0xc, gbc.readMem(0x8c01));
        // CB 0C 033E
        gbc.setState(0xe439, 0xe362, 0xa410, 0xaca8, 0x9e18, 0x7abc, 0x1, 0x0);
        gbc.writeMem(0xe439, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe362, gbc.sp());
        EXPECT(0xe43b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe439));
        EXPECT(0xc, gbc.readMem(0xe43a));
        // CB 0C 033F
        gbc.setState(0x5197, 0x89d7, 0x8730, 0x5520, 0x7516, 0x843e, 0x0, 0x1);
        gbc.writeMem(0x5197, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x89d7, gbc.sp());
        EXPECT(0x5199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0340
        gbc.setState(0xa246, 0x1c8b, 0x9080, 0x58a9, 0xdfd5, 0x2985, 0x1, 0x1);
        gbc.writeMem(0xa246, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1c8b, gbc.sp());
        EXPECT(0xa248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa246));
        EXPECT(0xc, gbc.readMem(0xa247));
        // CB 0C 0341
        gbc.setState(0x93c2, 0x9ef6, 0xc6f0, 0x4ca0, 0xb099, 0xbb50, 0x0, 0x1);
        gbc.writeMem(0x93c2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9ef6, gbc.sp());
        EXPECT(0x93c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c2));
        EXPECT(0xc, gbc.readMem(0x93c3));
        // CB 0C 0342
        gbc.setState(0xa012, 0x664f, 0x5870, 0xd3d9, 0xdd6f, 0x8736, 0x0, 0x0);
        gbc.writeMem(0xa012, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x664f, gbc.sp());
        EXPECT(0xa014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa012));
        EXPECT(0xc, gbc.readMem(0xa013));
        // CB 0C 0343
        gbc.setState(0x3c46, 0x17c, 0xca80, 0xeef4, 0xa217, 0x590b, 0x1, 0x0);
        gbc.writeMem(0x3c46, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x17c, gbc.sp());
        EXPECT(0x3c48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0344
        gbc.setState(0x278b, 0xe0d5, 0x8720, 0xb150, 0x63d2, 0x7553, 0x0, 0x1);
        gbc.writeMem(0x278b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe0d5, gbc.sp());
        EXPECT(0x278d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0346
        gbc.setState(0x670d, 0x537, 0xf700, 0xfb81, 0x83bc, 0x9ba6, 0x1, 0x0);
        gbc.writeMem(0x670d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x537, gbc.sp());
        EXPECT(0x670f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0347
        gbc.setState(0x73c8, 0x47c5, 0xdcb0, 0x9b4, 0x2724, 0x6746, 0x1, 0x0);
        gbc.writeMem(0x73c8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x47c5, gbc.sp());
        EXPECT(0x73ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0348
        gbc.setState(0x3aef, 0x767b, 0x7c10, 0xdbe9, 0x94cf, 0x11a0, 0x1, 0x1);
        gbc.writeMem(0x3aef, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x767b, gbc.sp());
        EXPECT(0x3af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0349
        gbc.setState(0xa39, 0x7f13, 0x1750, 0xf101, 0xde99, 0xb584, 0x0, 0x1);
        gbc.writeMem(0xa39, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7f13, gbc.sp());
        EXPECT(0xa3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 034A
        gbc.setState(0xc8db, 0xa7f3, 0xe270, 0xf5b0, 0xc59, 0x51b, 0x0, 0x1);
        gbc.writeMem(0xc8db, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa7f3, gbc.sp());
        EXPECT(0xc8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8db));
        EXPECT(0xc, gbc.readMem(0xc8dc));
        // CB 0C 034B
        gbc.setState(0xaed, 0x33bd, 0xb780, 0x19f7, 0x985b, 0xc595, 0x1, 0x1);
        gbc.writeMem(0xaed, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x33bd, gbc.sp());
        EXPECT(0xaef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 034C
        gbc.setState(0xeebb, 0x3e, 0x99c0, 0x9f59, 0x74b4, 0x1110, 0x0, 0x0);
        gbc.writeMem(0xeebb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3e, gbc.sp());
        EXPECT(0xeebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeebb));
        EXPECT(0xc, gbc.readMem(0xeebc));
        // CB 0C 034D
        gbc.setState(0x6693, 0x4762, 0xba70, 0x1958, 0x4ea3, 0xa3c3, 0x0, 0x0);
        gbc.writeMem(0x6693, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4762, gbc.sp());
        EXPECT(0x6695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 034E
        gbc.setState(0x8c10, 0x4efc, 0x750, 0x810a, 0x8825, 0xd0a1, 0x0, 0x0);
        gbc.writeMem(0x8c10, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4efc, gbc.sp());
        EXPECT(0x8c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c10));
        EXPECT(0xc, gbc.readMem(0x8c11));
        // CB 0C 034F
        gbc.setState(0x694a, 0xfa5f, 0xaaf0, 0x3529, 0xbb40, 0x1375, 0x1, 0x0);
        gbc.writeMem(0x694a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfa5f, gbc.sp());
        EXPECT(0x694c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0350
        gbc.setState(0x3a46, 0xef47, 0x7eb0, 0xf2f9, 0x60e2, 0xcbaf, 0x1, 0x0);
        gbc.writeMem(0x3a46, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xef47, gbc.sp());
        EXPECT(0x3a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0351
        gbc.setState(0xed7d, 0x4e0f, 0x20d0, 0x6f0e, 0xecfa, 0x80ec, 0x0, 0x0);
        gbc.writeMem(0xed7d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4e0f, gbc.sp());
        EXPECT(0xed7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed7d));
        EXPECT(0xc, gbc.readMem(0xed7e));
        // CB 0C 0352
        gbc.setState(0xcc40, 0x4241, 0xc20, 0x4bb1, 0x4f95, 0xcbd6, 0x0, 0x1);
        gbc.writeMem(0xcc40, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4241, gbc.sp());
        EXPECT(0xcc42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc40));
        EXPECT(0xc, gbc.readMem(0xcc41));
        // CB 0C 0354
        gbc.setState(0xe573, 0x66de, 0x5d60, 0x4f37, 0x9bc7, 0x2d4d, 0x1, 0x0);
        gbc.writeMem(0xe573, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x66de, gbc.sp());
        EXPECT(0xe575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe573));
        EXPECT(0xc, gbc.readMem(0xe574));
        // CB 0C 0355
        gbc.setState(0x151c, 0x1b9, 0x4e90, 0x38c4, 0xe3e, 0x1301, 0x0, 0x0);
        gbc.writeMem(0x151c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1b9, gbc.sp());
        EXPECT(0x151e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0356
        gbc.setState(0x7de3, 0x673, 0x1c50, 0xe96b, 0xe94a, 0x72f3, 0x1, 0x0);
        gbc.writeMem(0x7de3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x673, gbc.sp());
        EXPECT(0x7de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0357
        gbc.setState(0x65eb, 0xa1a9, 0xf2a0, 0x3737, 0x4cb0, 0xace4, 0x1, 0x1);
        gbc.writeMem(0x65eb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa1a9, gbc.sp());
        EXPECT(0x65ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0358
        gbc.setState(0xaf51, 0x8f25, 0x8c60, 0x982d, 0xb4b7, 0x8f38, 0x0, 0x1);
        gbc.writeMem(0xaf51, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8f25, gbc.sp());
        EXPECT(0xaf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf51));
        EXPECT(0xc, gbc.readMem(0xaf52));
        // CB 0C 0359
        gbc.setState(0x528a, 0x7378, 0x3870, 0x5d0d, 0xf3c2, 0x197e, 0x0, 0x0);
        gbc.writeMem(0x528a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7378, gbc.sp());
        EXPECT(0x528c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 035A
        gbc.setState(0xa03e, 0x63be, 0x5640, 0x2149, 0x8f9a, 0x37d6, 0x0, 0x1);
        gbc.writeMem(0xa03e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x63be, gbc.sp());
        EXPECT(0xa040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03e));
        EXPECT(0xc, gbc.readMem(0xa03f));
        // CB 0C 035B
        gbc.setState(0xc80c, 0x3baa, 0xf230, 0x46c6, 0x8e3, 0xa05e, 0x0, 0x1);
        gbc.writeMem(0xc80c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3baa, gbc.sp());
        EXPECT(0xc80e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc80c));
        EXPECT(0xc, gbc.readMem(0xc80d));
        // CB 0C 035C
        gbc.setState(0x49ae, 0xc7e8, 0x4690, 0x8e32, 0x2b0, 0x797b, 0x0, 0x0);
        gbc.writeMem(0x49ae, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc7e8, gbc.sp());
        EXPECT(0x49b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 035D
        gbc.setState(0x1944, 0x653a, 0x3990, 0x8abf, 0x7e75, 0x361d, 0x0, 0x0);
        gbc.writeMem(0x1944, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x653a, gbc.sp());
        EXPECT(0x1946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 035F
        gbc.setState(0xb60b, 0xd622, 0x1c90, 0x5502, 0x7cd4, 0xad88, 0x0, 0x0);
        gbc.writeMem(0xb60b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd622, gbc.sp());
        EXPECT(0xb60d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60b));
        EXPECT(0xc, gbc.readMem(0xb60c));
        // CB 0C 0360
        gbc.setState(0x7849, 0xd0d0, 0xd0e0, 0xbbbe, 0x8195, 0x7d61, 0x0, 0x0);
        gbc.writeMem(0x7849, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd0d0, gbc.sp());
        EXPECT(0x784b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0361
        gbc.setState(0xe8b9, 0x72f8, 0x9a10, 0x28fc, 0x8d43, 0x3dec, 0x0, 0x0);
        gbc.writeMem(0xe8b9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x72f8, gbc.sp());
        EXPECT(0xe8bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b9));
        EXPECT(0xc, gbc.readMem(0xe8ba));
        // CB 0C 0362
        gbc.setState(0x4a95, 0x6f2, 0xc30, 0x205a, 0x79b0, 0xe986, 0x1, 0x1);
        gbc.writeMem(0x4a95, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6f2, gbc.sp());
        EXPECT(0x4a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0363
        gbc.setState(0x10ce, 0xd2c1, 0xe9a0, 0x484d, 0x7e15, 0xe3e3, 0x0, 0x1);
        gbc.writeMem(0x10ce, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd2c1, gbc.sp());
        EXPECT(0x10d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0364
        gbc.setState(0x540c, 0x74bb, 0x93e0, 0x6086, 0xf5bb, 0x951a, 0x0, 0x0);
        gbc.writeMem(0x540c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x74bb, gbc.sp());
        EXPECT(0x540e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0365
        gbc.setState(0x62a2, 0x2f26, 0xefa0, 0x21fb, 0xaab, 0xc13c, 0x1, 0x1);
        gbc.writeMem(0x62a2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2f26, gbc.sp());
        EXPECT(0x62a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0366
        gbc.setState(0x79d3, 0x56d3, 0x69a0, 0xb6d1, 0xf7a7, 0x1f39, 0x1, 0x0);
        gbc.writeMem(0x79d3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x56d3, gbc.sp());
        EXPECT(0x79d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0367
        gbc.setState(0x533d, 0x40ae, 0x1c40, 0xa40b, 0x4fe1, 0xe4b8, 0x0, 0x0);
        gbc.writeMem(0x533d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x40ae, gbc.sp());
        EXPECT(0x533f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0368
        gbc.setState(0x440e, 0x2dcf, 0xe370, 0x988a, 0xe299, 0x4b62, 0x0, 0x0);
        gbc.writeMem(0x440e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2dcf, gbc.sp());
        EXPECT(0x4410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0369
        gbc.setState(0xcbf, 0xe491, 0x8590, 0xaa63, 0xbc02, 0x80e9, 0x1, 0x1);
        gbc.writeMem(0xcbf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe491, gbc.sp());
        EXPECT(0xcc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 036A
        gbc.setState(0x7688, 0xcc63, 0x8370, 0x46d1, 0xe198, 0x4a09, 0x1, 0x1);
        gbc.writeMem(0x7688, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xcc63, gbc.sp());
        EXPECT(0x768a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 036B
        gbc.setState(0x9ab0, 0xa1c0, 0x22b0, 0xea35, 0x80b9, 0xe850, 0x1, 0x1);
        gbc.writeMem(0x9ab0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa1c0, gbc.sp());
        EXPECT(0x9ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab0));
        EXPECT(0xc, gbc.readMem(0x9ab1));
        // CB 0C 036C
        gbc.setState(0x2fb6, 0x6d6b, 0x64f0, 0x7982, 0x51b6, 0x71a8, 0x0, 0x0);
        gbc.writeMem(0x2fb6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6d6b, gbc.sp());
        EXPECT(0x2fb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 036D
        gbc.setState(0xa84c, 0x8084, 0xd40, 0x4bbf, 0x5283, 0xf2ab, 0x1, 0x1);
        gbc.writeMem(0xa84c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8084, gbc.sp());
        EXPECT(0xa84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa84c));
        EXPECT(0xc, gbc.readMem(0xa84d));
        // CB 0C 036E
        gbc.setState(0x442d, 0x8293, 0x2c00, 0xb20d, 0x4fc8, 0x68f7, 0x1, 0x0);
        gbc.writeMem(0x442d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8293, gbc.sp());
        EXPECT(0x442f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 036F
        gbc.setState(0x5bf9, 0xc7e7, 0x71f0, 0xa652, 0xef45, 0x3068, 0x1, 0x1);
        gbc.writeMem(0x5bf9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc7e7, gbc.sp());
        EXPECT(0x5bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0370
        gbc.setState(0x4330, 0x8fc2, 0x9f0, 0x2ab3, 0x4920, 0xbcbb, 0x0, 0x1);
        gbc.writeMem(0x4330, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8fc2, gbc.sp());
        EXPECT(0x4332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0371
        gbc.setState(0x7030, 0x70bc, 0xe440, 0x1ba, 0x3e0c, 0x1ccd, 0x1, 0x0);
        gbc.writeMem(0x7030, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x70bc, gbc.sp());
        EXPECT(0x7032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0372
        gbc.setState(0x2426, 0x2218, 0xf2f0, 0x1720, 0xd9ad, 0xa10, 0x1, 0x1);
        gbc.writeMem(0x2426, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2218, gbc.sp());
        EXPECT(0x2428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0373
        gbc.setState(0x4a00, 0xa559, 0xbf30, 0xd56c, 0x73cb, 0x15d1, 0x0, 0x1);
        gbc.writeMem(0x4a00, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa559, gbc.sp());
        EXPECT(0x4a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0374
        gbc.setState(0xa43, 0x4f8d, 0x3760, 0xf1cd, 0xdfe8, 0x25c1, 0x0, 0x0);
        gbc.writeMem(0xa43, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4f8d, gbc.sp());
        EXPECT(0xa45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0375
        gbc.setState(0x1208, 0x6f10, 0xc90, 0x3907, 0xc5f9, 0xc113, 0x0, 0x1);
        gbc.writeMem(0x1208, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6f10, gbc.sp());
        EXPECT(0x120a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0376
        gbc.setState(0x78b9, 0xf37b, 0x2eb0, 0xa964, 0x142a, 0xbe5b, 0x1, 0x0);
        gbc.writeMem(0x78b9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf37b, gbc.sp());
        EXPECT(0x78bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0377
        gbc.setState(0x9874, 0x5781, 0xfbc0, 0x31d, 0xf1b2, 0x21ec, 0x1, 0x1);
        gbc.writeMem(0x9874, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5781, gbc.sp());
        EXPECT(0x9876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9874));
        EXPECT(0xc, gbc.readMem(0x9875));
        // CB 0C 0378
        gbc.setState(0xbccf, 0x759e, 0x75c0, 0x2b15, 0xdcf0, 0x38f6, 0x1, 0x0);
        gbc.writeMem(0xbccf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x759e, gbc.sp());
        EXPECT(0xbcd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbccf));
        EXPECT(0xc, gbc.readMem(0xbcd0));
        // CB 0C 0379
        gbc.setState(0x9cf, 0x7d86, 0xb510, 0x74a5, 0x3580, 0xc959, 0x1, 0x0);
        gbc.writeMem(0x9cf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7d86, gbc.sp());
        EXPECT(0x9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 037A
        gbc.setState(0x9fb3, 0x9e0e, 0x86e0, 0xbdb2, 0x72a0, 0xf096, 0x0, 0x0);
        gbc.writeMem(0x9fb3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9e0e, gbc.sp());
        EXPECT(0x9fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb3));
        EXPECT(0xc, gbc.readMem(0x9fb4));
        // CB 0C 037B
        gbc.setState(0x1d5d, 0x1333, 0x3e50, 0x795, 0x9a2d, 0xd2e8, 0x1, 0x0);
        gbc.writeMem(0x1d5d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1333, gbc.sp());
        EXPECT(0x1d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 037C
        gbc.setState(0x660d, 0x9aad, 0x8fd0, 0xdad5, 0xdc47, 0x67a4, 0x1, 0x1);
        gbc.writeMem(0x660d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9aad, gbc.sp());
        EXPECT(0x660f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 037D
        gbc.setState(0x8b6f, 0x8a97, 0xdfd0, 0xb57b, 0xe563, 0x9045, 0x0, 0x1);
        gbc.writeMem(0x8b6f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8a97, gbc.sp());
        EXPECT(0x8b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b6f));
        EXPECT(0xc, gbc.readMem(0x8b70));
        // CB 0C 037E
        gbc.setState(0x70c4, 0xe8fe, 0xb770, 0x76fe, 0x96ce, 0xd2a0, 0x0, 0x0);
        gbc.writeMem(0x70c4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe8fe, gbc.sp());
        EXPECT(0x70c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 037F
        gbc.setState(0x26, 0x5dbd, 0xe2c0, 0x7df4, 0x2804, 0x59a8, 0x0, 0x0);
        gbc.writeMem(0x26, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5dbd, gbc.sp());
        EXPECT(0x28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0380
        gbc.setState(0xcbca, 0xa59c, 0xe5a0, 0x3e68, 0x5842, 0x305e, 0x0, 0x1);
        gbc.writeMem(0xcbca, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa59c, gbc.sp());
        EXPECT(0xcbcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbca));
        EXPECT(0xc, gbc.readMem(0xcbcb));
        // CB 0C 0381
        gbc.setState(0x8672, 0xcbec, 0xe500, 0xd3bd, 0x423c, 0xcd68, 0x1, 0x0);
        gbc.writeMem(0x8672, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcbec, gbc.sp());
        EXPECT(0x8674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8672));
        EXPECT(0xc, gbc.readMem(0x8673));
        // CB 0C 0382
        gbc.setState(0xd241, 0x31de, 0x3890, 0x1540, 0x3315, 0xf366, 0x1, 0x1);
        gbc.writeMem(0xd241, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x31de, gbc.sp());
        EXPECT(0xd243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd241));
        EXPECT(0xc, gbc.readMem(0xd242));
        // CB 0C 0383
        gbc.setState(0x3920, 0xfe37, 0x3690, 0x8427, 0xe0ac, 0x7b3b, 0x1, 0x0);
        gbc.writeMem(0x3920, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfe37, gbc.sp());
        EXPECT(0x3922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0384
        gbc.setState(0x2b6c, 0x3b31, 0x9a20, 0x141a, 0x488e, 0x9eb, 0x0, 0x0);
        gbc.writeMem(0x2b6c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3b31, gbc.sp());
        EXPECT(0x2b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0385
        gbc.setState(0x8019, 0xad7e, 0x8da0, 0x67b7, 0x6200, 0x1abe, 0x1, 0x1);
        gbc.writeMem(0x8019, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xad7e, gbc.sp());
        EXPECT(0x801b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8019));
        EXPECT(0xc, gbc.readMem(0x801a));
        // CB 0C 0386
        gbc.setState(0x54f5, 0xcf12, 0xf450, 0xf8fd, 0x7905, 0x5c46, 0x0, 0x0);
        gbc.writeMem(0x54f5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xcf12, gbc.sp());
        EXPECT(0x54f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0388
        gbc.setState(0xd3f4, 0x8ee6, 0x5cf0, 0x13be, 0x5b2d, 0xfabc, 0x1, 0x0);
        gbc.writeMem(0xd3f4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8ee6, gbc.sp());
        EXPECT(0xd3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f4));
        EXPECT(0xc, gbc.readMem(0xd3f5));
        // CB 0C 0389
        gbc.setState(0xb112, 0x868b, 0xb9f0, 0xbb02, 0x5b9d, 0x94bc, 0x1, 0x1);
        gbc.writeMem(0xb112, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x868b, gbc.sp());
        EXPECT(0xb114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb112));
        EXPECT(0xc, gbc.readMem(0xb113));
        // CB 0C 038A
        gbc.setState(0x17c5, 0xeaba, 0x9850, 0xd0b7, 0xb408, 0xbbbb, 0x1, 0x0);
        gbc.writeMem(0x17c5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xeaba, gbc.sp());
        EXPECT(0x17c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 038B
        gbc.setState(0x290c, 0x474f, 0xb8c0, 0x1c0f, 0x7728, 0xdb9f, 0x1, 0x0);
        gbc.writeMem(0x290c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x474f, gbc.sp());
        EXPECT(0x290e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 038C
        gbc.setState(0x3554, 0xca10, 0xa050, 0xb478, 0xc870, 0x685d, 0x1, 0x0);
        gbc.writeMem(0x3554, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xca10, gbc.sp());
        EXPECT(0x3556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 038D
        gbc.setState(0xa934, 0xfd45, 0xb600, 0x512c, 0xac65, 0x624a, 0x0, 0x0);
        gbc.writeMem(0xa934, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfd45, gbc.sp());
        EXPECT(0xa936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa934));
        EXPECT(0xc, gbc.readMem(0xa935));
        // CB 0C 038E
        gbc.setState(0x289f, 0x2210, 0x9ce0, 0x5012, 0x1e87, 0x4df5, 0x0, 0x1);
        gbc.writeMem(0x289f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2210, gbc.sp());
        EXPECT(0x28a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 038F
        gbc.setState(0x8aac, 0xab0, 0x900, 0x71ac, 0x7c3c, 0x8014, 0x0, 0x1);
        gbc.writeMem(0x8aac, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xab0, gbc.sp());
        EXPECT(0x8aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aac));
        EXPECT(0xc, gbc.readMem(0x8aad));
        // CB 0C 0390
        gbc.setState(0xedfe, 0x4c4f, 0x6e80, 0x6998, 0xb522, 0xfcda, 0x0, 0x1);
        gbc.writeMem(0xedfe, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4c4f, gbc.sp());
        EXPECT(0xee00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedfe));
        EXPECT(0xc, gbc.readMem(0xedff));
        // CB 0C 0391
        gbc.setState(0x8931, 0x7d62, 0xc0e0, 0x3c29, 0x5a60, 0xa8e4, 0x1, 0x1);
        gbc.writeMem(0x8931, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7d62, gbc.sp());
        EXPECT(0x8933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8931));
        EXPECT(0xc, gbc.readMem(0x8932));
        // CB 0C 0392
        gbc.setState(0xbd87, 0xe57d, 0xe4a0, 0xcfa2, 0x523c, 0xf97f, 0x1, 0x1);
        gbc.writeMem(0xbd87, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe57d, gbc.sp());
        EXPECT(0xbd89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd87));
        EXPECT(0xc, gbc.readMem(0xbd88));
        // CB 0C 0393
        gbc.setState(0x735, 0x1e35, 0x6d40, 0x1950, 0xe624, 0xdcf2, 0x0, 0x0);
        gbc.writeMem(0x735, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1e35, gbc.sp());
        EXPECT(0x737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0394
        gbc.setState(0x3d45, 0xc33d, 0x3dc0, 0xc67, 0x8394, 0xf9c1, 0x1, 0x0);
        gbc.writeMem(0x3d45, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc33d, gbc.sp());
        EXPECT(0x3d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0395
        gbc.setState(0x18a9, 0xb0d6, 0x99e0, 0x256c, 0x8268, 0xe69f, 0x1, 0x1);
        gbc.writeMem(0x18a9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb0d6, gbc.sp());
        EXPECT(0x18ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0396
        gbc.setState(0x5406, 0x2d65, 0x7380, 0xbca1, 0xc655, 0x1d09, 0x0, 0x1);
        gbc.writeMem(0x5406, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2d65, gbc.sp());
        EXPECT(0x5408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 0397
        gbc.setState(0xb00c, 0x8ebd, 0x3530, 0xd881, 0x2500, 0x1fba, 0x0, 0x0);
        gbc.writeMem(0xb00c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8ebd, gbc.sp());
        EXPECT(0xb00e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb00c));
        EXPECT(0xc, gbc.readMem(0xb00d));
        // CB 0C 0398
        gbc.setState(0x623a, 0xd573, 0x89f0, 0xebe0, 0x2c77, 0xf02f, 0x0, 0x0);
        gbc.writeMem(0x623a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd573, gbc.sp());
        EXPECT(0x623c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 0399
        gbc.setState(0x4097, 0x7ff3, 0xf2b0, 0x3398, 0x9a25, 0xdf15, 0x0, 0x0);
        gbc.writeMem(0x4097, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7ff3, gbc.sp());
        EXPECT(0x4099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 039A
        gbc.setState(0x5aa, 0xcb31, 0xc950, 0x759f, 0x6103, 0x2d27, 0x0, 0x1);
        gbc.writeMem(0x5aa, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcb31, gbc.sp());
        EXPECT(0x5ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 039B
        gbc.setState(0xd318, 0x7982, 0x3d60, 0x5158, 0x2510, 0x9303, 0x0, 0x1);
        gbc.writeMem(0xd318, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7982, gbc.sp());
        EXPECT(0xd31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd318));
        EXPECT(0xc, gbc.readMem(0xd319));
        // CB 0C 039C
        gbc.setState(0x30f1, 0x7628, 0x48f0, 0x9b99, 0x1c12, 0x83ff, 0x0, 0x1);
        gbc.writeMem(0x30f1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7628, gbc.sp());
        EXPECT(0x30f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 039D
        gbc.setState(0xccc6, 0xc7ae, 0xfe70, 0x9973, 0x1a9, 0xab30, 0x0, 0x0);
        gbc.writeMem(0xccc6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc7ae, gbc.sp());
        EXPECT(0xccc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc6));
        EXPECT(0xc, gbc.readMem(0xccc7));
        // CB 0C 039E
        gbc.setState(0x23d, 0x316d, 0x5d40, 0x1a2, 0x8cf2, 0x7894, 0x0, 0x1);
        gbc.writeMem(0x23d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x316d, gbc.sp());
        EXPECT(0x23f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 039F
        gbc.setState(0xcc91, 0x252b, 0x6130, 0x2e9d, 0xc737, 0xf93f, 0x0, 0x0);
        gbc.writeMem(0xcc91, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x252b, gbc.sp());
        EXPECT(0xcc93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc91));
        EXPECT(0xc, gbc.readMem(0xcc92));
        // CB 0C 03A0
        gbc.setState(0x3bb0, 0x94d1, 0xee70, 0x66b6, 0xaeb, 0x4b0c, 0x0, 0x0);
        gbc.writeMem(0x3bb0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x94d1, gbc.sp());
        EXPECT(0x3bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03A1
        gbc.setState(0x3609, 0xa011, 0x9df0, 0xebaa, 0xc5c4, 0x7e7d, 0x1, 0x0);
        gbc.writeMem(0x3609, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa011, gbc.sp());
        EXPECT(0x360b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 03A2
        gbc.setState(0x2011, 0x6b59, 0xa650, 0x5487, 0xf37e, 0x2fed, 0x1, 0x1);
        gbc.writeMem(0x2011, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6b59, gbc.sp());
        EXPECT(0x2013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03A3
        gbc.setState(0x4d14, 0x6a49, 0x5c60, 0xda07, 0xb5ac, 0x109c, 0x0, 0x1);
        gbc.writeMem(0x4d14, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6a49, gbc.sp());
        EXPECT(0x4d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 03A4
        gbc.setState(0x8f50, 0x989c, 0x5e80, 0xeaa2, 0x9505, 0xf51b, 0x0, 0x0);
        gbc.writeMem(0x8f50, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x989c, gbc.sp());
        EXPECT(0x8f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f50));
        EXPECT(0xc, gbc.readMem(0x8f51));
        // CB 0C 03A5
        gbc.setState(0x3574, 0xa9d6, 0x8910, 0x8061, 0xdf30, 0xdc9b, 0x0, 0x1);
        gbc.writeMem(0x3574, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa9d6, gbc.sp());
        EXPECT(0x3576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 03A6
        gbc.setState(0x36ed, 0x6250, 0x5c90, 0x4b3d, 0x3485, 0x876c, 0x1, 0x1);
        gbc.writeMem(0x36ed, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6250, gbc.sp());
        EXPECT(0x36ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03A7
        gbc.setState(0xe1ef, 0x9114, 0x4c60, 0x8bea, 0x602a, 0x1aea, 0x1, 0x1);
        gbc.writeMem(0xe1ef, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9114, gbc.sp());
        EXPECT(0xe1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ef));
        EXPECT(0xc, gbc.readMem(0xe1f0));
        // CB 0C 03A8
        gbc.setState(0x15e4, 0xa417, 0x8220, 0xae74, 0x4bba, 0x587, 0x1, 0x1);
        gbc.writeMem(0x15e4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa417, gbc.sp());
        EXPECT(0x15e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03A9
        gbc.setState(0x10c5, 0xd5e5, 0x62c0, 0xbb9b, 0xe752, 0x5fb5, 0x0, 0x0);
        gbc.writeMem(0x10c5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd5e5, gbc.sp());
        EXPECT(0x10c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03AA
        gbc.setState(0x7e9b, 0xd7d1, 0x50e0, 0xbf56, 0xe936, 0xa788, 0x1, 0x1);
        gbc.writeMem(0x7e9b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd7d1, gbc.sp());
        EXPECT(0x7e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03AB
        gbc.setState(0xba04, 0x55, 0xe240, 0xc11, 0x2799, 0x4f78, 0x0, 0x0);
        gbc.writeMem(0xba04, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x55, gbc.sp());
        EXPECT(0xba06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba04));
        EXPECT(0xc, gbc.readMem(0xba05));
        // CB 0C 03AC
        gbc.setState(0x6ed1, 0x8306, 0xdbb0, 0x5e43, 0x633b, 0xccad, 0x0, 0x1);
        gbc.writeMem(0x6ed1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8306, gbc.sp());
        EXPECT(0x6ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 03AD
        gbc.setState(0xdfb2, 0x67d5, 0xe2d0, 0x7d4e, 0xc619, 0x1f34, 0x1, 0x1);
        gbc.writeMem(0xdfb2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x67d5, gbc.sp());
        EXPECT(0xdfb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb2));
        EXPECT(0xc, gbc.readMem(0xdfb3));
        // CB 0C 03AE
        gbc.setState(0x2d40, 0xc256, 0x1640, 0xb87d, 0x563, 0x4a25, 0x0, 0x0);
        gbc.writeMem(0x2d40, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc256, gbc.sp());
        EXPECT(0x2d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 03AF
        gbc.setState(0x3e7e, 0x5d71, 0xb620, 0xa330, 0x9064, 0xb401, 0x1, 0x1);
        gbc.writeMem(0x3e7e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5d71, gbc.sp());
        EXPECT(0x3e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 03B0
        gbc.setState(0x6b6e, 0x5e99, 0x1650, 0xfaa5, 0xfcf, 0xef1b, 0x0, 0x1);
        gbc.writeMem(0x6b6e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5e99, gbc.sp());
        EXPECT(0x6b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03B1
        gbc.setState(0x5b1a, 0x4422, 0x15d0, 0x78c3, 0xceee, 0x5e9a, 0x1, 0x1);
        gbc.writeMem(0x5b1a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4422, gbc.sp());
        EXPECT(0x5b1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 03B2
        gbc.setState(0xadc3, 0x65a8, 0x9c40, 0x7c45, 0x9c8e, 0xf357, 0x1, 0x1);
        gbc.writeMem(0xadc3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x65a8, gbc.sp());
        EXPECT(0xadc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc3));
        EXPECT(0xc, gbc.readMem(0xadc4));
        // CB 0C 03B3
        gbc.setState(0xb9c, 0x2c48, 0xaf40, 0x1f78, 0x5058, 0x44b7, 0x1, 0x0);
        gbc.writeMem(0xb9c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2c48, gbc.sp());
        EXPECT(0xb9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 03B5
        gbc.setState(0x6797, 0x2584, 0x8330, 0x4bd4, 0x56a5, 0xf13a, 0x1, 0x0);
        gbc.writeMem(0x6797, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2584, gbc.sp());
        EXPECT(0x6799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03B6
        gbc.setState(0xe29d, 0x2fd7, 0xfc80, 0xa9d5, 0x16c5, 0xe0fc, 0x0, 0x1);
        gbc.writeMem(0xe29d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2fd7, gbc.sp());
        EXPECT(0xe29f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe29d));
        EXPECT(0xc, gbc.readMem(0xe29e));
        // CB 0C 03B7
        gbc.setState(0xe1de, 0x382d, 0x92a0, 0x6e67, 0xf9a1, 0x7a49, 0x1, 0x0);
        gbc.writeMem(0xe1de, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x382d, gbc.sp());
        EXPECT(0xe1e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1de));
        EXPECT(0xc, gbc.readMem(0xe1df));
        // CB 0C 03B8
        gbc.setState(0x429f, 0x1e03, 0xd590, 0x61ad, 0xf72a, 0x31a6, 0x0, 0x0);
        gbc.writeMem(0x429f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1e03, gbc.sp());
        EXPECT(0x42a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03B9
        gbc.setState(0x2147, 0x69ec, 0x8e00, 0x93d7, 0x31ff, 0x8590, 0x1, 0x1);
        gbc.writeMem(0x2147, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x69ec, gbc.sp());
        EXPECT(0x2149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03BA
        gbc.setState(0x59e6, 0x9321, 0x8da0, 0x30fb, 0xbe22, 0x2944, 0x1, 0x0);
        gbc.writeMem(0x59e6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9321, gbc.sp());
        EXPECT(0x59e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03BB
        gbc.setState(0x6179, 0xe82a, 0x13c0, 0xbd97, 0x1814, 0x8f8c, 0x0, 0x0);
        gbc.writeMem(0x6179, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe82a, gbc.sp());
        EXPECT(0x617b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03BC
        gbc.setState(0xbbfe, 0x4b36, 0x2620, 0xb2ba, 0x158, 0xe920, 0x1, 0x0);
        gbc.writeMem(0xbbfe, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4b36, gbc.sp());
        EXPECT(0xbc00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbfe));
        EXPECT(0xc, gbc.readMem(0xbbff));
        // CB 0C 03BD
        gbc.setState(0xd77b, 0x7ce8, 0x1fc0, 0xd2aa, 0x2e40, 0x8895, 0x0, 0x1);
        gbc.writeMem(0xd77b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7ce8, gbc.sp());
        EXPECT(0xd77d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd77b));
        EXPECT(0xc, gbc.readMem(0xd77c));
        // CB 0C 03BE
        gbc.setState(0xb6fc, 0x57d0, 0x5f60, 0x70dd, 0xfcf1, 0x2a8b, 0x0, 0x0);
        gbc.writeMem(0xb6fc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x57d0, gbc.sp());
        EXPECT(0xb6fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6fc));
        EXPECT(0xc, gbc.readMem(0xb6fd));
        // CB 0C 03BF
        gbc.setState(0x89c7, 0x4329, 0xb9d0, 0xb3e4, 0x4032, 0xf9f1, 0x0, 0x0);
        gbc.writeMem(0x89c7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4329, gbc.sp());
        EXPECT(0x89c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c7));
        EXPECT(0xc, gbc.readMem(0x89c8));
        // CB 0C 03C0
        gbc.setState(0x8ce1, 0x3ba6, 0xf040, 0x7684, 0xe913, 0x4399, 0x0, 0x1);
        gbc.writeMem(0x8ce1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3ba6, gbc.sp());
        EXPECT(0x8ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce1));
        EXPECT(0xc, gbc.readMem(0x8ce2));
        // CB 0C 03C1
        gbc.setState(0x1447, 0x2f58, 0x3b0, 0x97c1, 0xa4b9, 0xd74f, 0x1, 0x0);
        gbc.writeMem(0x1447, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2f58, gbc.sp());
        EXPECT(0x1449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03C2
        gbc.setState(0x7bb1, 0xd3c2, 0x4120, 0x9788, 0xbb13, 0x160d, 0x0, 0x1);
        gbc.writeMem(0x7bb1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd3c2, gbc.sp());
        EXPECT(0x7bb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 03C3
        gbc.setState(0xd874, 0xb1ca, 0xe3a0, 0x607d, 0x42f6, 0x5772, 0x0, 0x0);
        gbc.writeMem(0xd874, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb1ca, gbc.sp());
        EXPECT(0xd876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd874));
        EXPECT(0xc, gbc.readMem(0xd875));
        // CB 0C 03C4
        gbc.setState(0xd763, 0x9815, 0x3150, 0x7716, 0xbd90, 0x8c7d, 0x1, 0x0);
        gbc.writeMem(0xd763, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9815, gbc.sp());
        EXPECT(0xd765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd763));
        EXPECT(0xc, gbc.readMem(0xd764));
        // CB 0C 03C5
        gbc.setState(0x2250, 0xd26f, 0x9260, 0x3f8, 0x84c4, 0xfe4, 0x0, 0x0);
        gbc.writeMem(0x2250, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd26f, gbc.sp());
        EXPECT(0x2252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03C6
        gbc.setState(0x5a7d, 0x47b8, 0x63e0, 0xd599, 0x5df0, 0x737f, 0x1, 0x1);
        gbc.writeMem(0x5a7d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x47b8, gbc.sp());
        EXPECT(0x5a7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03C7
        gbc.setState(0xb3f9, 0xa924, 0x7d00, 0x54b6, 0x265b, 0xc1ac, 0x0, 0x1);
        gbc.writeMem(0xb3f9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa924, gbc.sp());
        EXPECT(0xb3fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f9));
        EXPECT(0xc, gbc.readMem(0xb3fa));
        // CB 0C 03C8
        gbc.setState(0x35df, 0xbe32, 0xdf20, 0xd677, 0x71cc, 0x3fa5, 0x0, 0x0);
        gbc.writeMem(0x35df, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbe32, gbc.sp());
        EXPECT(0x35e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03C9
        gbc.setState(0x539a, 0x5bdd, 0xd220, 0x85de, 0x314e, 0xc81e, 0x1, 0x0);
        gbc.writeMem(0x539a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5bdd, gbc.sp());
        EXPECT(0x539c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 03CA
        gbc.setState(0x283b, 0x49d5, 0x31f0, 0x8590, 0xd14d, 0xbf25, 0x0, 0x1);
        gbc.writeMem(0x283b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x49d5, gbc.sp());
        EXPECT(0x283d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03CB
        gbc.setState(0xc64d, 0x5cc, 0xcfe0, 0x817d, 0xe3e8, 0x1041, 0x0, 0x1);
        gbc.writeMem(0xc64d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5cc, gbc.sp());
        EXPECT(0xc64f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc64d));
        EXPECT(0xc, gbc.readMem(0xc64e));
        // CB 0C 03CC
        gbc.setState(0x60d1, 0xe0c3, 0x9030, 0x3976, 0x63e1, 0xf974, 0x0, 0x1);
        gbc.writeMem(0x60d1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe0c3, gbc.sp());
        EXPECT(0x60d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03CD
        gbc.setState(0x103e, 0x1908, 0x52e0, 0xe8bb, 0xa61b, 0x3dd3, 0x1, 0x1);
        gbc.writeMem(0x103e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1908, gbc.sp());
        EXPECT(0x1040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03CE
        gbc.setState(0x9793, 0x545a, 0x90, 0xb773, 0xa9b5, 0xc9c7, 0x0, 0x0);
        gbc.writeMem(0x9793, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x545a, gbc.sp());
        EXPECT(0x9795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9793));
        EXPECT(0xc, gbc.readMem(0x9794));
        // CB 0C 03CF
        gbc.setState(0x8e0f, 0x8077, 0xca70, 0xd14, 0x415c, 0x332b, 0x1, 0x1);
        gbc.writeMem(0x8e0f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8077, gbc.sp());
        EXPECT(0x8e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e0f));
        EXPECT(0xc, gbc.readMem(0x8e10));
        // CB 0C 03D0
        gbc.setState(0x9cd4, 0xe95a, 0x5f60, 0x4917, 0xf54b, 0x2ba1, 0x0, 0x1);
        gbc.writeMem(0x9cd4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe95a, gbc.sp());
        EXPECT(0x9cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd4));
        EXPECT(0xc, gbc.readMem(0x9cd5));
        // CB 0C 03D1
        gbc.setState(0x810c, 0x7745, 0xcca0, 0xf53a, 0x3fe, 0x4ae, 0x1, 0x0);
        gbc.writeMem(0x810c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7745, gbc.sp());
        EXPECT(0x810e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x810c));
        EXPECT(0xc, gbc.readMem(0x810d));
        // CB 0C 03D2
        gbc.setState(0x63e2, 0x16f2, 0x4c80, 0xfdaf, 0x8597, 0xd0f2, 0x1, 0x0);
        gbc.writeMem(0x63e2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x16f2, gbc.sp());
        EXPECT(0x63e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 03D3
        gbc.setState(0x4bbe, 0x9546, 0xc6f0, 0x7b32, 0x1ab6, 0x6abf, 0x0, 0x0);
        gbc.writeMem(0x4bbe, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9546, gbc.sp());
        EXPECT(0x4bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 03D4
        gbc.setState(0xe3af, 0xf47, 0xcb00, 0x5a7c, 0xd41e, 0xb6e0, 0x1, 0x1);
        gbc.writeMem(0xe3af, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf47, gbc.sp());
        EXPECT(0xe3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3af));
        EXPECT(0xc, gbc.readMem(0xe3b0));
        // CB 0C 03D5
        gbc.setState(0x7723, 0x89c4, 0x5b10, 0x7dc4, 0xa443, 0x93ce, 0x0, 0x0);
        gbc.writeMem(0x7723, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x89c4, gbc.sp());
        EXPECT(0x7725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03D6
        gbc.setState(0x975, 0x1000, 0xef40, 0xbb0, 0x276a, 0xa36e, 0x0, 0x1);
        gbc.writeMem(0x975, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1000, gbc.sp());
        EXPECT(0x977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03D7
        gbc.setState(0x4e10, 0x4697, 0x44d0, 0xc2e2, 0xcbba, 0x149d, 0x0, 0x0);
        gbc.writeMem(0x4e10, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4697, gbc.sp());
        EXPECT(0x4e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 03D8
        gbc.setState(0xb69a, 0x4459, 0xb870, 0x79a1, 0xa991, 0xd6d8, 0x1, 0x0);
        gbc.writeMem(0xb69a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4459, gbc.sp());
        EXPECT(0xb69c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb69a));
        EXPECT(0xc, gbc.readMem(0xb69b));
        // CB 0C 03D9
        gbc.setState(0x633b, 0x3fd5, 0x5430, 0xafa4, 0xb99b, 0xa12b, 0x0, 0x0);
        gbc.writeMem(0x633b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3fd5, gbc.sp());
        EXPECT(0x633d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03DA
        gbc.setState(0xa679, 0xe178, 0xe6a0, 0xdd4d, 0x3f5, 0x5be5, 0x1, 0x1);
        gbc.writeMem(0xa679, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe178, gbc.sp());
        EXPECT(0xa67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa679));
        EXPECT(0xc, gbc.readMem(0xa67a));
        // CB 0C 03DB
        gbc.setState(0x86a0, 0xa8b1, 0x18c0, 0xe335, 0xe12d, 0x5d0f, 0x1, 0x0);
        gbc.writeMem(0x86a0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa8b1, gbc.sp());
        EXPECT(0x86a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a0));
        EXPECT(0xc, gbc.readMem(0x86a1));
        // CB 0C 03DC
        gbc.setState(0x7cd6, 0xed1f, 0x1ad0, 0x5eaa, 0x5079, 0x8500, 0x0, 0x0);
        gbc.writeMem(0x7cd6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xed1f, gbc.sp());
        EXPECT(0x7cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03DD
        gbc.setState(0x7aed, 0x6d78, 0x8de0, 0x9e47, 0xa4ac, 0x9d58, 0x1, 0x1);
        gbc.writeMem(0x7aed, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6d78, gbc.sp());
        EXPECT(0x7aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03DE
        gbc.setState(0xd496, 0x436c, 0xd00, 0x1c9b, 0x7708, 0x26a, 0x0, 0x1);
        gbc.writeMem(0xd496, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x436c, gbc.sp());
        EXPECT(0xd498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd496));
        EXPECT(0xc, gbc.readMem(0xd497));
        // CB 0C 03DF
        gbc.setState(0x37de, 0x87ca, 0xf560, 0xc7c3, 0x4938, 0xe539, 0x1, 0x1);
        gbc.writeMem(0x37de, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x87ca, gbc.sp());
        EXPECT(0x37e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0C 03E0
        gbc.setState(0xc33f, 0x4c5a, 0xbb00, 0x523b, 0xcabf, 0xbc78, 0x0, 0x1);
        gbc.writeMem(0xc33f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4c5a, gbc.sp());
        EXPECT(0xc341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc33f));
        EXPECT(0xc, gbc.readMem(0xc340));
        // CB 0C 03E1
        gbc.setState(0xcd07, 0x7d2, 0xd480, 0x1fd9, 0xf10c, 0x2528, 0x1, 0x0);
        gbc.writeMem(0xcd07, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7d2, gbc.sp());
        EXPECT(0xcd09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd07));
        EXPECT(0xc, gbc.readMem(0xcd08));
        // CB 0C 03E3
        gbc.setState(0x3689, 0xf1e3, 0x5d90, 0xdc68, 0xb1d2, 0xf4e0, 0x1, 0x0);
        gbc.writeMem(0x3689, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf1e3, gbc.sp());
        EXPECT(0x368b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 03E4
        gbc.setState(0x77b6, 0xc707, 0x9050, 0x4f68, 0xf236, 0x72af, 0x1, 0x1);
        gbc.writeMem(0x77b6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc707, gbc.sp());
        EXPECT(0x77b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0C 03E5
        gbc.setState(0xbc9d, 0xf37e, 0x4fe0, 0xa06f, 0x4c04, 0x14af, 0x0, 0x1);
        gbc.writeMem(0xbc9d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf37e, gbc.sp());
        EXPECT(0xbc9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9d));
        EXPECT(0xc, gbc.readMem(0xbc9e));
        // CB 0C 03E6
        gbc.setState(0xe699, 0x21e9, 0xde70, 0x56ae, 0x10bc, 0x98c4, 0x0, 0x1);
        gbc.writeMem(0xe699, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x21e9, gbc.sp());
        EXPECT(0xe69b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe699));
        EXPECT(0xc, gbc.readMem(0xe69a));
        // CB 0C 03E7
        gbc.setState(0x1009, 0x6ea9, 0x88c0, 0xa6ea, 0x3a49, 0x90ca, 0x1, 0x1);
        gbc.writeMem(0x1009, { 0xcb, 0xc });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6ea9, gbc.sp());
        EXPECT(0x100b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
