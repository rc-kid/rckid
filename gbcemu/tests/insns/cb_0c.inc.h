    TEST(gbcemu, opcode_cb_0c) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 0C 0000
        gbc.setState(0x3900, 0x6b51, 0x5950, 0x5d6, 0x64e7, 0xe833, 0x1, 0x0);
        gbc.writeMem(0x3900, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6b51);
        EXPECT(gbc.pc(), 0x3902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0001
        gbc.setState(0x5189, 0xa3ef, 0x3cd0, 0x70d6, 0x43de, 0xe7b7, 0x1, 0x0);
        gbc.writeMem(0x5189, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa3ef);
        EXPECT(gbc.pc(), 0x518b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0002
        gbc.setState(0xaa58, 0x5bc6, 0xde50, 0xf239, 0x4ed5, 0x9ef7, 0x0, 0x0);
        gbc.writeMem(0xaa58, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5bc6);
        EXPECT(gbc.pc(), 0xaa5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa58), 0xcb);
        EXPECT(gbc.readMem(0xaa59), 0xc);
        // CB 0C 0003
        gbc.setState(0xb329, 0x27a1, 0x6480, 0xd23b, 0x68aa, 0xfafb, 0x1, 0x0);
        gbc.writeMem(0xb329, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x27a1);
        EXPECT(gbc.pc(), 0xb32b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb329), 0xcb);
        EXPECT(gbc.readMem(0xb32a), 0xc);
        // CB 0C 0004
        gbc.setState(0x5b0a, 0xddba, 0x8ce0, 0x7594, 0x16d9, 0xd317, 0x1, 0x0);
        gbc.writeMem(0x5b0a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xddba);
        EXPECT(gbc.pc(), 0x5b0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0005
        gbc.setState(0xb857, 0xa242, 0xd7f0, 0x3c8d, 0x55a1, 0x19eb, 0x0, 0x0);
        gbc.writeMem(0xb857, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa242);
        EXPECT(gbc.pc(), 0xb859);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb857), 0xcb);
        EXPECT(gbc.readMem(0xb858), 0xc);
        // CB 0C 0006
        gbc.setState(0x5849, 0xf2dd, 0x1990, 0x8612, 0x1ccc, 0x9e49, 0x1, 0x1);
        gbc.writeMem(0x5849, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf2dd);
        EXPECT(gbc.pc(), 0x584b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0007
        gbc.setState(0xe957, 0x4fcf, 0xdb10, 0xe406, 0x722e, 0x41d6, 0x0, 0x1);
        gbc.writeMem(0xe957, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4fcf);
        EXPECT(gbc.pc(), 0xe959);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe957), 0xcb);
        EXPECT(gbc.readMem(0xe958), 0xc);
        // CB 0C 000A
        gbc.setState(0x7d9f, 0x20fe, 0xb780, 0x7552, 0xb06b, 0xd00c, 0x1, 0x0);
        gbc.writeMem(0x7d9f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x20fe);
        EXPECT(gbc.pc(), 0x7da1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 000B
        gbc.setState(0xbb6b, 0x2742, 0xe0f0, 0x7eec, 0x518a, 0x5ba1, 0x1, 0x1);
        gbc.writeMem(0xbb6b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2742);
        EXPECT(gbc.pc(), 0xbb6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb6b), 0xcb);
        EXPECT(gbc.readMem(0xbb6c), 0xc);
        // CB 0C 000D
        gbc.setState(0x270f, 0xdc31, 0x6ec0, 0xc506, 0x1b35, 0x5953, 0x0, 0x1);
        gbc.writeMem(0x270f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xdc31);
        EXPECT(gbc.pc(), 0x2711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 000E
        gbc.setState(0x7820, 0x2b14, 0xbf0, 0x7924, 0xd0eb, 0xe3e, 0x1, 0x1);
        gbc.writeMem(0x7820, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2b14);
        EXPECT(gbc.pc(), 0x7822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 000F
        gbc.setState(0xaed6, 0xd512, 0x7970, 0x754a, 0xd7fd, 0x724c, 0x0, 0x1);
        gbc.writeMem(0xaed6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd512);
        EXPECT(gbc.pc(), 0xaed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaed6), 0xcb);
        EXPECT(gbc.readMem(0xaed7), 0xc);
        // CB 0C 0010
        gbc.setState(0xe2f9, 0xb268, 0xdbb0, 0xc01d, 0xe244, 0x74f9, 0x1, 0x1);
        gbc.writeMem(0xe2f9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb268);
        EXPECT(gbc.pc(), 0xe2fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2f9), 0xcb);
        EXPECT(gbc.readMem(0xe2fa), 0xc);
        // CB 0C 0011
        gbc.setState(0xe51b, 0x5784, 0xc8d0, 0x22cd, 0xc2d, 0x4a4e, 0x0, 0x1);
        gbc.writeMem(0xe51b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5784);
        EXPECT(gbc.pc(), 0xe51d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe51b), 0xcb);
        EXPECT(gbc.readMem(0xe51c), 0xc);
        // CB 0C 0012
        gbc.setState(0xa7b1, 0xf144, 0xd110, 0xb7cf, 0x6e93, 0x3507, 0x0, 0x1);
        gbc.writeMem(0xa7b1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf144);
        EXPECT(gbc.pc(), 0xa7b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b1), 0xcb);
        EXPECT(gbc.readMem(0xa7b2), 0xc);
        // CB 0C 0013
        gbc.setState(0xab65, 0x6a19, 0xe060, 0x43ec, 0xfb00, 0xa46c, 0x0, 0x0);
        gbc.writeMem(0xab65, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6a19);
        EXPECT(gbc.pc(), 0xab67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab65), 0xcb);
        EXPECT(gbc.readMem(0xab66), 0xc);
        // CB 0C 0014
        gbc.setState(0x9e06, 0xb8b6, 0x8560, 0x4cf1, 0x75b0, 0xb3d3, 0x1, 0x1);
        gbc.writeMem(0x9e06, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb8b6);
        EXPECT(gbc.pc(), 0x9e08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e06), 0xcb);
        EXPECT(gbc.readMem(0x9e07), 0xc);
        // CB 0C 0015
        gbc.setState(0xbb98, 0x5317, 0x1210, 0x6261, 0x30ee, 0x5a63, 0x0, 0x0);
        gbc.writeMem(0xbb98, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5317);
        EXPECT(gbc.pc(), 0xbb9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb98), 0xcb);
        EXPECT(gbc.readMem(0xbb99), 0xc);
        // CB 0C 0016
        gbc.setState(0x17a0, 0x1771, 0x6f00, 0xb720, 0x972f, 0x8826, 0x0, 0x1);
        gbc.writeMem(0x17a0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1771);
        EXPECT(gbc.pc(), 0x17a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0017
        gbc.setState(0x1640, 0x908d, 0xda90, 0xded9, 0xd417, 0x8f3a, 0x1, 0x1);
        gbc.writeMem(0x1640, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x908d);
        EXPECT(gbc.pc(), 0x1642);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0018
        gbc.setState(0x2b72, 0x90e0, 0x2140, 0xa5ad, 0xb8b1, 0xc915, 0x0, 0x1);
        gbc.writeMem(0x2b72, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x90e0);
        EXPECT(gbc.pc(), 0x2b74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 001A
        gbc.setState(0x1eab, 0xc8a6, 0x1870, 0xa246, 0xff1, 0xeeb7, 0x1, 0x0);
        gbc.writeMem(0x1eab, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc8a6);
        EXPECT(gbc.pc(), 0x1ead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 001B
        gbc.setState(0x8b79, 0xab9d, 0x1be0, 0xedb9, 0xb840, 0xee5b, 0x0, 0x1);
        gbc.writeMem(0x8b79, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xab9d);
        EXPECT(gbc.pc(), 0x8b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b79), 0xcb);
        EXPECT(gbc.readMem(0x8b7a), 0xc);
        // CB 0C 001C
        gbc.setState(0x1504, 0xe518, 0x9490, 0xb4c4, 0x378e, 0x76f1, 0x1, 0x1);
        gbc.writeMem(0x1504, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe518);
        EXPECT(gbc.pc(), 0x1506);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 001D
        gbc.setState(0x852d, 0xea86, 0x5fa0, 0x99b1, 0x9ca6, 0x34d4, 0x1, 0x1);
        gbc.writeMem(0x852d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xea86);
        EXPECT(gbc.pc(), 0x852f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x852d), 0xcb);
        EXPECT(gbc.readMem(0x852e), 0xc);
        // CB 0C 001E
        gbc.setState(0x875c, 0x7f60, 0xfe70, 0x1aee, 0xab4f, 0x8557, 0x0, 0x1);
        gbc.writeMem(0x875c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7f60);
        EXPECT(gbc.pc(), 0x875e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x875c), 0xcb);
        EXPECT(gbc.readMem(0x875d), 0xc);
        // CB 0C 001F
        gbc.setState(0x8ccf, 0x5f55, 0x9990, 0x7eaf, 0x51a8, 0x59f, 0x0, 0x0);
        gbc.writeMem(0x8ccf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5f55);
        EXPECT(gbc.pc(), 0x8cd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ccf), 0xcb);
        EXPECT(gbc.readMem(0x8cd0), 0xc);
        // CB 0C 0020
        gbc.setState(0x2c60, 0x7d8, 0x6060, 0x2066, 0x7edb, 0x11bb, 0x1, 0x0);
        gbc.writeMem(0x2c60, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7d8);
        EXPECT(gbc.pc(), 0x2c62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0021
        gbc.setState(0xec78, 0x38ea, 0x5a20, 0x95f, 0x6e6e, 0xd939, 0x1, 0x1);
        gbc.writeMem(0xec78, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x38ea);
        EXPECT(gbc.pc(), 0xec7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec78), 0xcb);
        EXPECT(gbc.readMem(0xec79), 0xc);
        // CB 0C 0022
        gbc.setState(0x95dd, 0x7918, 0xf80, 0x5bad, 0x3b42, 0xc7d8, 0x1, 0x0);
        gbc.writeMem(0x95dd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7918);
        EXPECT(gbc.pc(), 0x95df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95dd), 0xcb);
        EXPECT(gbc.readMem(0x95de), 0xc);
        // CB 0C 0023
        gbc.setState(0x8786, 0xe3b0, 0xd280, 0x4265, 0x63e, 0x566, 0x0, 0x1);
        gbc.writeMem(0x8786, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe3b0);
        EXPECT(gbc.pc(), 0x8788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8786), 0xcb);
        EXPECT(gbc.readMem(0x8787), 0xc);
        // CB 0C 0024
        gbc.setState(0x1438, 0xe0e2, 0xf280, 0x5769, 0x6c71, 0xb599, 0x1, 0x0);
        gbc.writeMem(0x1438, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe0e2);
        EXPECT(gbc.pc(), 0x143a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0025
        gbc.setState(0xc26, 0x5dc9, 0x29f0, 0x4f4a, 0x471, 0x9142, 0x1, 0x0);
        gbc.writeMem(0xc26, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5dc9);
        EXPECT(gbc.pc(), 0xc28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0026
        gbc.setState(0xef7b, 0xb327, 0x96f0, 0x5b93, 0xd361, 0xb323, 0x1, 0x1);
        gbc.writeMem(0xef7b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb327);
        EXPECT(gbc.pc(), 0xef7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef7b), 0xcb);
        EXPECT(gbc.readMem(0xef7c), 0xc);
        // CB 0C 0027
        gbc.setState(0xcae7, 0x8669, 0xe120, 0x36d2, 0x5191, 0x5dff, 0x0, 0x1);
        gbc.writeMem(0xcae7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8669);
        EXPECT(gbc.pc(), 0xcae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcae7), 0xcb);
        EXPECT(gbc.readMem(0xcae8), 0xc);
        // CB 0C 0028
        gbc.setState(0x9323, 0x1278, 0x7340, 0x8b1a, 0x4df1, 0xc6c7, 0x0, 0x1);
        gbc.writeMem(0x9323, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x1278);
        EXPECT(gbc.pc(), 0x9325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9323), 0xcb);
        EXPECT(gbc.readMem(0x9324), 0xc);
        // CB 0C 0029
        gbc.setState(0xa9e1, 0x7e12, 0xac0, 0x6c8f, 0x7312, 0x9820, 0x1, 0x1);
        gbc.writeMem(0xa9e1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7e12);
        EXPECT(gbc.pc(), 0xa9e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9e1), 0xcb);
        EXPECT(gbc.readMem(0xa9e2), 0xc);
        // CB 0C 002A
        gbc.setState(0x1984, 0xdd91, 0xe90, 0x22dc, 0x90a9, 0x387a, 0x0, 0x0);
        gbc.writeMem(0x1984, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xdd91);
        EXPECT(gbc.pc(), 0x1986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 002B
        gbc.setState(0x94d2, 0x3c3e, 0x6fa0, 0x3325, 0x166d, 0x4f5a, 0x0, 0x0);
        gbc.writeMem(0x94d2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3c3e);
        EXPECT(gbc.pc(), 0x94d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94d2), 0xcb);
        EXPECT(gbc.readMem(0x94d3), 0xc);
        // CB 0C 002D
        gbc.setState(0x1745, 0x37b, 0x1f90, 0x5cf6, 0x499f, 0xd933, 0x0, 0x0);
        gbc.writeMem(0x1745, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x37b);
        EXPECT(gbc.pc(), 0x1747);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 002E
        gbc.setState(0xaa78, 0x9b07, 0xcff0, 0xae90, 0x740e, 0xa9ba, 0x0, 0x1);
        gbc.writeMem(0xaa78, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9b07);
        EXPECT(gbc.pc(), 0xaa7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa78), 0xcb);
        EXPECT(gbc.readMem(0xaa79), 0xc);
        // CB 0C 002F
        gbc.setState(0x9c35, 0xa1e4, 0xeb20, 0x7069, 0x5f86, 0x328a, 0x1, 0x0);
        gbc.writeMem(0x9c35, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa1e4);
        EXPECT(gbc.pc(), 0x9c37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c35), 0xcb);
        EXPECT(gbc.readMem(0x9c36), 0xc);
        // CB 0C 0030
        gbc.setState(0xcc75, 0x2123, 0x64a0, 0x857, 0xc2b0, 0x56be, 0x0, 0x1);
        gbc.writeMem(0xcc75, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2123);
        EXPECT(gbc.pc(), 0xcc77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc75), 0xcb);
        EXPECT(gbc.readMem(0xcc76), 0xc);
        // CB 0C 0031
        gbc.setState(0xdbc5, 0x361f, 0x8e00, 0x8c51, 0x543b, 0x8646, 0x1, 0x0);
        gbc.writeMem(0xdbc5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x361f);
        EXPECT(gbc.pc(), 0xdbc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbc5), 0xcb);
        EXPECT(gbc.readMem(0xdbc6), 0xc);
        // CB 0C 0032
        gbc.setState(0xeef9, 0x2bff, 0xd8f0, 0xd6af, 0xb3d6, 0xcf13, 0x1, 0x0);
        gbc.writeMem(0xeef9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2bff);
        EXPECT(gbc.pc(), 0xeefb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeef9), 0xcb);
        EXPECT(gbc.readMem(0xeefa), 0xc);
        // CB 0C 0033
        gbc.setState(0x54f8, 0xa6ef, 0x9490, 0xf9ae, 0xe1d3, 0x5e2c, 0x0, 0x1);
        gbc.writeMem(0x54f8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa6ef);
        EXPECT(gbc.pc(), 0x54fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0034
        gbc.setState(0x494d, 0xeb0e, 0xf8c0, 0x9c73, 0x65b3, 0xaca8, 0x0, 0x0);
        gbc.writeMem(0x494d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xeb0e);
        EXPECT(gbc.pc(), 0x494f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0035
        gbc.setState(0x22eb, 0x7251, 0xbfd0, 0x145e, 0x520d, 0x9096, 0x1, 0x0);
        gbc.writeMem(0x22eb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7251);
        EXPECT(gbc.pc(), 0x22ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0036
        gbc.setState(0xe18d, 0x5d8f, 0x31c0, 0xbfe6, 0x159f, 0x998f, 0x1, 0x0);
        gbc.writeMem(0xe18d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5d8f);
        EXPECT(gbc.pc(), 0xe18f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe18d), 0xcb);
        EXPECT(gbc.readMem(0xe18e), 0xc);
        // CB 0C 0037
        gbc.setState(0x7ea7, 0xd0dd, 0x7fb0, 0xfd78, 0xecf7, 0x6ac0, 0x0, 0x1);
        gbc.writeMem(0x7ea7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd0dd);
        EXPECT(gbc.pc(), 0x7ea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0038
        gbc.setState(0x41ba, 0xfb97, 0x4740, 0xf38, 0x2ff1, 0x4181, 0x1, 0x1);
        gbc.writeMem(0x41ba, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xfb97);
        EXPECT(gbc.pc(), 0x41bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0039
        gbc.setState(0x4ab0, 0xba76, 0x43a0, 0x949f, 0xfde2, 0x6e0, 0x0, 0x1);
        gbc.writeMem(0x4ab0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xba76);
        EXPECT(gbc.pc(), 0x4ab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 003A
        gbc.setState(0x7761, 0xc22, 0xf1f0, 0x1046, 0xc532, 0x6f01, 0x1, 0x1);
        gbc.writeMem(0x7761, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc22);
        EXPECT(gbc.pc(), 0x7763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 003B
        gbc.setState(0xd954, 0xfbbd, 0xa6c0, 0xab73, 0xd457, 0xb7c3, 0x0, 0x1);
        gbc.writeMem(0xd954, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfbbd);
        EXPECT(gbc.pc(), 0xd956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd954), 0xcb);
        EXPECT(gbc.readMem(0xd955), 0xc);
        // CB 0C 003C
        gbc.setState(0xa98a, 0xe8bf, 0x2750, 0x1e23, 0x8031, 0x84a2, 0x0, 0x0);
        gbc.writeMem(0xa98a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe8bf);
        EXPECT(gbc.pc(), 0xa98c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa98a), 0xcb);
        EXPECT(gbc.readMem(0xa98b), 0xc);
        // CB 0C 003D
        gbc.setState(0x268e, 0xcb33, 0x31a0, 0xf429, 0xd286, 0x13cc, 0x1, 0x0);
        gbc.writeMem(0x268e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xcb33);
        EXPECT(gbc.pc(), 0x2690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 003E
        gbc.setState(0x6e4f, 0x5fc4, 0xaa70, 0xa0a9, 0x5df7, 0x6a9, 0x1, 0x0);
        gbc.writeMem(0x6e4f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5fc4);
        EXPECT(gbc.pc(), 0x6e51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0040
        gbc.setState(0x8b5d, 0x7ecf, 0x9310, 0x88dc, 0x841c, 0x2bf, 0x0, 0x0);
        gbc.writeMem(0x8b5d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7ecf);
        EXPECT(gbc.pc(), 0x8b5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b5d), 0xcb);
        EXPECT(gbc.readMem(0x8b5e), 0xc);
        // CB 0C 0041
        gbc.setState(0x942d, 0x2075, 0x8e00, 0x8630, 0x9bae, 0x4018, 0x1, 0x1);
        gbc.writeMem(0x942d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2075);
        EXPECT(gbc.pc(), 0x942f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x942d), 0xcb);
        EXPECT(gbc.readMem(0x942e), 0xc);
        // CB 0C 0042
        gbc.setState(0xe9e2, 0x4774, 0xf190, 0x175c, 0x9e74, 0x4fdb, 0x1, 0x1);
        gbc.writeMem(0xe9e2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4774);
        EXPECT(gbc.pc(), 0xe9e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9e2), 0xcb);
        EXPECT(gbc.readMem(0xe9e3), 0xc);
        // CB 0C 0043
        gbc.setState(0x1506, 0x1679, 0x1ff0, 0x9c2d, 0xb45b, 0xda7e, 0x0, 0x1);
        gbc.writeMem(0x1506, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1679);
        EXPECT(gbc.pc(), 0x1508);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0044
        gbc.setState(0x3321, 0xb084, 0x76f0, 0x9f21, 0x5c9e, 0x6a0b, 0x0, 0x1);
        gbc.writeMem(0x3321, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb084);
        EXPECT(gbc.pc(), 0x3323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0045
        gbc.setState(0xbe4d, 0x472c, 0xd0d0, 0xf3bd, 0x68, 0xb6d3, 0x0, 0x0);
        gbc.writeMem(0xbe4d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x472c);
        EXPECT(gbc.pc(), 0xbe4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe4d), 0xcb);
        EXPECT(gbc.readMem(0xbe4e), 0xc);
        // CB 0C 0046
        gbc.setState(0x5c79, 0x89e6, 0x65b0, 0x2570, 0x3f00, 0xb905, 0x0, 0x0);
        gbc.writeMem(0x5c79, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x89e6);
        EXPECT(gbc.pc(), 0x5c7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0047
        gbc.setState(0x40eb, 0x2dcb, 0x8410, 0xdc21, 0x6478, 0x161c, 0x0, 0x1);
        gbc.writeMem(0x40eb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2dcb);
        EXPECT(gbc.pc(), 0x40ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0048
        gbc.setState(0x18fc, 0x7c8b, 0x48f0, 0x7a45, 0x3f59, 0xa657, 0x0, 0x0);
        gbc.writeMem(0x18fc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7c8b);
        EXPECT(gbc.pc(), 0x18fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0049
        gbc.setState(0x573, 0x75b1, 0x2320, 0x1aca, 0x8e6e, 0x2d9f, 0x0, 0x1);
        gbc.writeMem(0x573, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x75b1);
        EXPECT(gbc.pc(), 0x575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 004A
        gbc.setState(0xc59c, 0x5d3a, 0xbd0, 0x2b2f, 0x3a68, 0xbe0d, 0x1, 0x0);
        gbc.writeMem(0xc59c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5d3a);
        EXPECT(gbc.pc(), 0xc59e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc59c), 0xcb);
        EXPECT(gbc.readMem(0xc59d), 0xc);
        // CB 0C 004B
        gbc.setState(0x4a9a, 0xcf09, 0xd5b0, 0x8d16, 0x59e8, 0x2ff7, 0x0, 0x0);
        gbc.writeMem(0x4a9a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xcf09);
        EXPECT(gbc.pc(), 0x4a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 004C
        gbc.setState(0x8d8f, 0x5f86, 0xab10, 0xee18, 0xcc28, 0xbe89, 0x0, 0x0);
        gbc.writeMem(0x8d8f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5f86);
        EXPECT(gbc.pc(), 0x8d91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d8f), 0xcb);
        EXPECT(gbc.readMem(0x8d90), 0xc);
        // CB 0C 004D
        gbc.setState(0xe8f8, 0x1cc7, 0x28a0, 0xe482, 0xfc8a, 0xaffd, 0x0, 0x0);
        gbc.writeMem(0xe8f8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1cc7);
        EXPECT(gbc.pc(), 0xe8fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8f8), 0xcb);
        EXPECT(gbc.readMem(0xe8f9), 0xc);
        // CB 0C 004E
        gbc.setState(0x9264, 0xf97c, 0xddc0, 0xfd2d, 0xaeb6, 0xaac6, 0x0, 0x0);
        gbc.writeMem(0x9264, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf97c);
        EXPECT(gbc.pc(), 0x9266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9264), 0xcb);
        EXPECT(gbc.readMem(0x9265), 0xc);
        // CB 0C 004F
        gbc.setState(0x5ccd, 0x96b7, 0x4590, 0x37b3, 0xd619, 0xf82d, 0x1, 0x0);
        gbc.writeMem(0x5ccd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x96b7);
        EXPECT(gbc.pc(), 0x5ccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0051
        gbc.setState(0xdbd3, 0xffd4, 0x55b0, 0x706d, 0xfb7, 0xd76d, 0x1, 0x0);
        gbc.writeMem(0xdbd3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xffd4);
        EXPECT(gbc.pc(), 0xdbd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbd3), 0xcb);
        EXPECT(gbc.readMem(0xdbd4), 0xc);
        // CB 0C 0052
        gbc.setState(0xc4c0, 0xba09, 0xa430, 0x7899, 0x6331, 0xb19e, 0x0, 0x0);
        gbc.writeMem(0xc4c0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xba09);
        EXPECT(gbc.pc(), 0xc4c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4c0), 0xcb);
        EXPECT(gbc.readMem(0xc4c1), 0xc);
        // CB 0C 0053
        gbc.setState(0xef89, 0xbe47, 0xff90, 0xa0e1, 0x548c, 0xdb16, 0x0, 0x1);
        gbc.writeMem(0xef89, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xbe47);
        EXPECT(gbc.pc(), 0xef8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef89), 0xcb);
        EXPECT(gbc.readMem(0xef8a), 0xc);
        // CB 0C 0054
        gbc.setState(0x80ac, 0x8766, 0x4600, 0x3a33, 0x32d4, 0xb35, 0x1, 0x0);
        gbc.writeMem(0x80ac, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8766);
        EXPECT(gbc.pc(), 0x80ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80ac), 0xcb);
        EXPECT(gbc.readMem(0x80ad), 0xc);
        // CB 0C 0055
        gbc.setState(0x2f13, 0x8d66, 0x8db0, 0xd1d6, 0xdb2c, 0xb5e3, 0x1, 0x0);
        gbc.writeMem(0x2f13, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8d66);
        EXPECT(gbc.pc(), 0x2f15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0056
        gbc.setState(0x5c88, 0xe6a7, 0x10d0, 0x18c9, 0xf2fc, 0xade1, 0x1, 0x0);
        gbc.writeMem(0x5c88, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe6a7);
        EXPECT(gbc.pc(), 0x5c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0057
        gbc.setState(0x9e0f, 0x31a4, 0x4610, 0x1c6c, 0xae7b, 0x76c1, 0x0, 0x0);
        gbc.writeMem(0x9e0f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x31a4);
        EXPECT(gbc.pc(), 0x9e11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e0f), 0xcb);
        EXPECT(gbc.readMem(0x9e10), 0xc);
        // CB 0C 0058
        gbc.setState(0xe256, 0x4698, 0x1ff0, 0x8d31, 0xd704, 0x2840, 0x1, 0x1);
        gbc.writeMem(0xe256, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4698);
        EXPECT(gbc.pc(), 0xe258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe256), 0xcb);
        EXPECT(gbc.readMem(0xe257), 0xc);
        // CB 0C 0059
        gbc.setState(0x4b52, 0xf9e0, 0x8be0, 0x2f5c, 0xfa3a, 0xccab, 0x1, 0x1);
        gbc.writeMem(0x4b52, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf9e0);
        EXPECT(gbc.pc(), 0x4b54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 005A
        gbc.setState(0xdfe9, 0x5065, 0x5820, 0xb129, 0x9cf8, 0x89da, 0x1, 0x0);
        gbc.writeMem(0xdfe9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5065);
        EXPECT(gbc.pc(), 0xdfeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfe9), 0xcb);
        EXPECT(gbc.readMem(0xdfea), 0xc);
        // CB 0C 005C
        gbc.setState(0x6e, 0x2460, 0xa4c0, 0x9175, 0x868d, 0x9848, 0x1, 0x1);
        gbc.writeMem(0x6e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2460);
        EXPECT(gbc.pc(), 0x70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 005D
        gbc.setState(0x1809, 0xe9fd, 0x4d30, 0x67e9, 0xb6aa, 0x352, 0x0, 0x1);
        gbc.writeMem(0x1809, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe9fd);
        EXPECT(gbc.pc(), 0x180b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 005E
        gbc.setState(0x33db, 0x6287, 0x4ce0, 0x4447, 0x9c7, 0x330d, 0x0, 0x1);
        gbc.writeMem(0x33db, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6287);
        EXPECT(gbc.pc(), 0x33dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 005F
        gbc.setState(0xbd48, 0x9770, 0xe110, 0x5b69, 0x6a8d, 0x11c9, 0x1, 0x0);
        gbc.writeMem(0xbd48, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9770);
        EXPECT(gbc.pc(), 0xbd4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd48), 0xcb);
        EXPECT(gbc.readMem(0xbd49), 0xc);
        // CB 0C 0060
        gbc.setState(0xe7d0, 0x1faf, 0x5d40, 0x57a5, 0xea6e, 0x9fad, 0x1, 0x1);
        gbc.writeMem(0xe7d0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1faf);
        EXPECT(gbc.pc(), 0xe7d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7d0), 0xcb);
        EXPECT(gbc.readMem(0xe7d1), 0xc);
        // CB 0C 0061
        gbc.setState(0x4d2, 0x3294, 0xd760, 0x4ae1, 0x3cf7, 0x4744, 0x1, 0x0);
        gbc.writeMem(0x4d2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3294);
        EXPECT(gbc.pc(), 0x4d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0063
        gbc.setState(0x40fc, 0x6cd3, 0xa550, 0x7795, 0xfed, 0xa5f6, 0x0, 0x0);
        gbc.writeMem(0x40fc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6cd3);
        EXPECT(gbc.pc(), 0x40fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0064
        gbc.setState(0x8af7, 0x7148, 0x9b70, 0x674f, 0xa0b8, 0xaa, 0x0, 0x0);
        gbc.writeMem(0x8af7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7148);
        EXPECT(gbc.pc(), 0x8af9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af7), 0xcb);
        EXPECT(gbc.readMem(0x8af8), 0xc);
        // CB 0C 0065
        gbc.setState(0xe5b7, 0xe8c0, 0xfc50, 0xe77f, 0x7b43, 0xac0, 0x0, 0x1);
        gbc.writeMem(0xe5b7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe8c0);
        EXPECT(gbc.pc(), 0xe5b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5b7), 0xcb);
        EXPECT(gbc.readMem(0xe5b8), 0xc);
        // CB 0C 0066
        gbc.setState(0x5024, 0xae7, 0x34d0, 0xdcf8, 0x9d3c, 0x170e, 0x0, 0x1);
        gbc.writeMem(0x5024, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xae7);
        EXPECT(gbc.pc(), 0x5026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0067
        gbc.setState(0xa929, 0xbcb, 0x1780, 0x87ba, 0xa4d, 0xcce2, 0x1, 0x0);
        gbc.writeMem(0xa929, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xbcb);
        EXPECT(gbc.pc(), 0xa92b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa929), 0xcb);
        EXPECT(gbc.readMem(0xa92a), 0xc);
        // CB 0C 0068
        gbc.setState(0x4012, 0x2cea, 0x6d10, 0x9e95, 0x1647, 0x85a4, 0x1, 0x1);
        gbc.writeMem(0x4012, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2cea);
        EXPECT(gbc.pc(), 0x4014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0069
        gbc.setState(0x9e39, 0x1c12, 0x9b70, 0x13ad, 0x6e40, 0x6b03, 0x0, 0x0);
        gbc.writeMem(0x9e39, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1c12);
        EXPECT(gbc.pc(), 0x9e3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e39), 0xcb);
        EXPECT(gbc.readMem(0x9e3a), 0xc);
        // CB 0C 006A
        gbc.setState(0xc4ea, 0xd739, 0x7490, 0xc562, 0x4114, 0x71d0, 0x0, 0x0);
        gbc.writeMem(0xc4ea, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd739);
        EXPECT(gbc.pc(), 0xc4ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ea), 0xcb);
        EXPECT(gbc.readMem(0xc4eb), 0xc);
        // CB 0C 006B
        gbc.setState(0xa1f9, 0x9add, 0x740, 0x698e, 0x6072, 0xcd5a, 0x1, 0x0);
        gbc.writeMem(0xa1f9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9add);
        EXPECT(gbc.pc(), 0xa1fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f9), 0xcb);
        EXPECT(gbc.readMem(0xa1fa), 0xc);
        // CB 0C 006C
        gbc.setState(0x47ed, 0x1d8d, 0x8cf0, 0x635c, 0xe2bd, 0x3bbb, 0x1, 0x0);
        gbc.writeMem(0x47ed, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1d8d);
        EXPECT(gbc.pc(), 0x47ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 006D
        gbc.setState(0x619b, 0x21bb, 0x3c30, 0x9060, 0x2d45, 0x1c44, 0x0, 0x1);
        gbc.writeMem(0x619b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x21bb);
        EXPECT(gbc.pc(), 0x619d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 006E
        gbc.setState(0xec89, 0x2c34, 0x78f0, 0xc771, 0x5eb5, 0xa585, 0x0, 0x1);
        gbc.writeMem(0xec89, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2c34);
        EXPECT(gbc.pc(), 0xec8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec89), 0xcb);
        EXPECT(gbc.readMem(0xec8a), 0xc);
        // CB 0C 006F
        gbc.setState(0xe87b, 0xc4c2, 0xa230, 0xc390, 0x4277, 0xf610, 0x0, 0x0);
        gbc.writeMem(0xe87b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc4c2);
        EXPECT(gbc.pc(), 0xe87d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe87b), 0xcb);
        EXPECT(gbc.readMem(0xe87c), 0xc);
        // CB 0C 0070
        gbc.setState(0x5f54, 0xbd3d, 0x1a80, 0xcc0c, 0xb4b1, 0xfde3, 0x1, 0x1);
        gbc.writeMem(0x5f54, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xbd3d);
        EXPECT(gbc.pc(), 0x5f56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0071
        gbc.setState(0x36e0, 0xf9b1, 0x56d0, 0xee81, 0x563f, 0x4502, 0x0, 0x1);
        gbc.writeMem(0x36e0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xf9b1);
        EXPECT(gbc.pc(), 0x36e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0072
        gbc.setState(0x52bc, 0x96bb, 0x53c0, 0xa185, 0xb3e0, 0x23f2, 0x1, 0x1);
        gbc.writeMem(0x52bc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x96bb);
        EXPECT(gbc.pc(), 0x52be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0073
        gbc.setState(0xaa79, 0x9d3b, 0x7880, 0x7c53, 0x9e42, 0x5ad0, 0x0, 0x0);
        gbc.writeMem(0xaa79, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9d3b);
        EXPECT(gbc.pc(), 0xaa7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa79), 0xcb);
        EXPECT(gbc.readMem(0xaa7a), 0xc);
        // CB 0C 0075
        gbc.setState(0x9933, 0xdcb3, 0x94a0, 0x97f6, 0x193e, 0x44ca, 0x0, 0x0);
        gbc.writeMem(0x9933, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdcb3);
        EXPECT(gbc.pc(), 0x9935);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9933), 0xcb);
        EXPECT(gbc.readMem(0x9934), 0xc);
        // CB 0C 0078
        gbc.setState(0x15a5, 0xe1a2, 0x3fc0, 0xa663, 0x4683, 0xecbf, 0x0, 0x0);
        gbc.writeMem(0x15a5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe1a2);
        EXPECT(gbc.pc(), 0x15a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0079
        gbc.setState(0x22e6, 0x98a, 0xdaa0, 0x93e0, 0x11d5, 0xeed4, 0x0, 0x0);
        gbc.writeMem(0x22e6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x98a);
        EXPECT(gbc.pc(), 0x22e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 007A
        gbc.setState(0x2df, 0xc9e, 0xa7e0, 0x49a5, 0x5008, 0xe34c, 0x1, 0x0);
        gbc.writeMem(0x2df, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc9e);
        EXPECT(gbc.pc(), 0x2e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 007B
        gbc.setState(0x1507, 0x132f, 0x6a50, 0x51d3, 0xecd5, 0xae01, 0x0, 0x1);
        gbc.writeMem(0x1507, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x132f);
        EXPECT(gbc.pc(), 0x1509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 007C
        gbc.setState(0x1dc0, 0xb3c6, 0x2720, 0xa880, 0xe70a, 0x7115, 0x0, 0x0);
        gbc.writeMem(0x1dc0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb3c6);
        EXPECT(gbc.pc(), 0x1dc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 007D
        gbc.setState(0x7504, 0x7522, 0x1d50, 0xce0e, 0xf55f, 0xb4f0, 0x0, 0x1);
        gbc.writeMem(0x7504, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7522);
        EXPECT(gbc.pc(), 0x7506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 007E
        gbc.setState(0x51f3, 0x7289, 0xb870, 0x30e3, 0xe400, 0xafd1, 0x0, 0x0);
        gbc.writeMem(0x51f3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7289);
        EXPECT(gbc.pc(), 0x51f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 007F
        gbc.setState(0xb026, 0x9259, 0xc100, 0xc5ec, 0xd45e, 0x2ce2, 0x0, 0x0);
        gbc.writeMem(0xb026, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9259);
        EXPECT(gbc.pc(), 0xb028);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb026), 0xcb);
        EXPECT(gbc.readMem(0xb027), 0xc);
        // CB 0C 0080
        gbc.setState(0x17a, 0x5087, 0x8d40, 0xa217, 0xa3eb, 0xd150, 0x1, 0x1);
        gbc.writeMem(0x17a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5087);
        EXPECT(gbc.pc(), 0x17c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0081
        gbc.setState(0xaca5, 0x971a, 0x3de0, 0x18ae, 0xa756, 0xb18a, 0x0, 0x0);
        gbc.writeMem(0xaca5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x971a);
        EXPECT(gbc.pc(), 0xaca7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaca5), 0xcb);
        EXPECT(gbc.readMem(0xaca6), 0xc);
        // CB 0C 0082
        gbc.setState(0xddf8, 0x91e, 0x6650, 0xda25, 0x25, 0x1371, 0x1, 0x1);
        gbc.writeMem(0xddf8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x91e);
        EXPECT(gbc.pc(), 0xddfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddf8), 0xcb);
        EXPECT(gbc.readMem(0xddf9), 0xc);
        // CB 0C 0083
        gbc.setState(0x67aa, 0x9890, 0x5e30, 0x55dc, 0xd23e, 0x1a26, 0x0, 0x0);
        gbc.writeMem(0x67aa, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9890);
        EXPECT(gbc.pc(), 0x67ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0084
        gbc.setState(0xe14f, 0x505b, 0x6f50, 0x9612, 0xb611, 0x430e, 0x0, 0x1);
        gbc.writeMem(0xe14f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x505b);
        EXPECT(gbc.pc(), 0xe151);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe14f), 0xcb);
        EXPECT(gbc.readMem(0xe150), 0xc);
        // CB 0C 0085
        gbc.setState(0xb38c, 0x55a5, 0x2820, 0xae39, 0xce70, 0x9ece, 0x0, 0x0);
        gbc.writeMem(0xb38c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x55a5);
        EXPECT(gbc.pc(), 0xb38e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb38c), 0xcb);
        EXPECT(gbc.readMem(0xb38d), 0xc);
        // CB 0C 0086
        gbc.setState(0x24cf, 0xa105, 0xef60, 0xb127, 0x5321, 0x6b84, 0x0, 0x1);
        gbc.writeMem(0x24cf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa105);
        EXPECT(gbc.pc(), 0x24d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0087
        gbc.setState(0xbf54, 0x2707, 0x2390, 0xdab9, 0x4e63, 0xd730, 0x1, 0x0);
        gbc.writeMem(0xbf54, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2707);
        EXPECT(gbc.pc(), 0xbf56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf54), 0xcb);
        EXPECT(gbc.readMem(0xbf55), 0xc);
        // CB 0C 0088
        gbc.setState(0xbfea, 0xf2f1, 0x2800, 0x3452, 0x42bf, 0xb409, 0x0, 0x0);
        gbc.writeMem(0xbfea, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf2f1);
        EXPECT(gbc.pc(), 0xbfec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfea), 0xcb);
        EXPECT(gbc.readMem(0xbfeb), 0xc);
        // CB 0C 0089
        gbc.setState(0xadd, 0xc3a2, 0xc40, 0xec0, 0x42c5, 0x1b11, 0x1, 0x1);
        gbc.writeMem(0xadd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc3a2);
        EXPECT(gbc.pc(), 0xadf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 008A
        gbc.setState(0xcf82, 0x2026, 0x28a0, 0x3629, 0x913, 0xf1e8, 0x0, 0x1);
        gbc.writeMem(0xcf82, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2026);
        EXPECT(gbc.pc(), 0xcf84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf82), 0xcb);
        EXPECT(gbc.readMem(0xcf83), 0xc);
        // CB 0C 008B
        gbc.setState(0xd486, 0x9567, 0x5b80, 0x9e8a, 0x6c6b, 0xef49, 0x0, 0x1);
        gbc.writeMem(0xd486, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9567);
        EXPECT(gbc.pc(), 0xd488);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd486), 0xcb);
        EXPECT(gbc.readMem(0xd487), 0xc);
        // CB 0C 008C
        gbc.setState(0xaa9, 0x2b8, 0x1410, 0xfb0, 0xdd2e, 0xd5b5, 0x0, 0x1);
        gbc.writeMem(0xaa9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2b8);
        EXPECT(gbc.pc(), 0xaab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 008D
        gbc.setState(0x1020, 0x164c, 0x2380, 0xe08c, 0x585, 0x2d93, 0x0, 0x1);
        gbc.writeMem(0x1020, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x164c);
        EXPECT(gbc.pc(), 0x1022);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 008E
        gbc.setState(0xc8c1, 0x547d, 0x5510, 0xb605, 0xb6da, 0x1676, 0x0, 0x0);
        gbc.writeMem(0xc8c1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x547d);
        EXPECT(gbc.pc(), 0xc8c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8c1), 0xcb);
        EXPECT(gbc.readMem(0xc8c2), 0xc);
        // CB 0C 008F
        gbc.setState(0xea4a, 0x181f, 0xbcc0, 0xd884, 0x8e48, 0xb46d, 0x0, 0x0);
        gbc.writeMem(0xea4a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x181f);
        EXPECT(gbc.pc(), 0xea4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea4a), 0xcb);
        EXPECT(gbc.readMem(0xea4b), 0xc);
        // CB 0C 0090
        gbc.setState(0xe824, 0x968d, 0x450, 0x30e1, 0x3a2, 0x65b5, 0x0, 0x0);
        gbc.writeMem(0xe824, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x968d);
        EXPECT(gbc.pc(), 0xe826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe824), 0xcb);
        EXPECT(gbc.readMem(0xe825), 0xc);
        // CB 0C 0091
        gbc.setState(0x9c14, 0x819a, 0x810, 0x6f6d, 0x89cf, 0x22e5, 0x1, 0x0);
        gbc.writeMem(0x9c14, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x819a);
        EXPECT(gbc.pc(), 0x9c16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c14), 0xcb);
        EXPECT(gbc.readMem(0x9c15), 0xc);
        // CB 0C 0092
        gbc.setState(0x791c, 0xdb2d, 0x92f0, 0xae00, 0x89ac, 0x2496, 0x0, 0x0);
        gbc.writeMem(0x791c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xdb2d);
        EXPECT(gbc.pc(), 0x791e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0093
        gbc.setState(0xab16, 0x5d01, 0xb820, 0xe5e, 0xb17b, 0x2d25, 0x1, 0x1);
        gbc.writeMem(0xab16, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5d01);
        EXPECT(gbc.pc(), 0xab18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab16), 0xcb);
        EXPECT(gbc.readMem(0xab17), 0xc);
        // CB 0C 0094
        gbc.setState(0x1619, 0x65f7, 0xcfe0, 0x6c37, 0xd76e, 0x7c1f, 0x1, 0x1);
        gbc.writeMem(0x1619, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x65f7);
        EXPECT(gbc.pc(), 0x161b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0095
        gbc.setState(0xa7c4, 0x77aa, 0xcae0, 0x4907, 0x877a, 0x834c, 0x0, 0x1);
        gbc.writeMem(0xa7c4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x77aa);
        EXPECT(gbc.pc(), 0xa7c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7c4), 0xcb);
        EXPECT(gbc.readMem(0xa7c5), 0xc);
        // CB 0C 0096
        gbc.setState(0x2781, 0x5d9b, 0x7880, 0x1454, 0x5e72, 0x8589, 0x1, 0x0);
        gbc.writeMem(0x2781, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5d9b);
        EXPECT(gbc.pc(), 0x2783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0097
        gbc.setState(0x88a, 0x11f3, 0xa2f0, 0x5dd2, 0xe68e, 0xa7cf, 0x0, 0x0);
        gbc.writeMem(0x88a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x11f3);
        EXPECT(gbc.pc(), 0x88c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0098
        gbc.setState(0xee29, 0x86f3, 0x8a70, 0xa7a5, 0x756f, 0x89ee, 0x1, 0x1);
        gbc.writeMem(0xee29, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x86f3);
        EXPECT(gbc.pc(), 0xee2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee29), 0xcb);
        EXPECT(gbc.readMem(0xee2a), 0xc);
        // CB 0C 0099
        gbc.setState(0x4a13, 0x2e45, 0xc520, 0x8593, 0xad28, 0x298, 0x1, 0x0);
        gbc.writeMem(0x4a13, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2e45);
        EXPECT(gbc.pc(), 0x4a15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 009A
        gbc.setState(0x2f4d, 0xac7f, 0x22a0, 0x3f8b, 0xf4ae, 0xe220, 0x0, 0x0);
        gbc.writeMem(0x2f4d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xac7f);
        EXPECT(gbc.pc(), 0x2f4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 009B
        gbc.setState(0x732e, 0x36e, 0xecf0, 0x5680, 0x72c8, 0xadfc, 0x0, 0x0);
        gbc.writeMem(0x732e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x36e);
        EXPECT(gbc.pc(), 0x7330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 009D
        gbc.setState(0xbf41, 0x1b83, 0xe010, 0xd370, 0xded, 0xdb6, 0x1, 0x0);
        gbc.writeMem(0xbf41, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1b83);
        EXPECT(gbc.pc(), 0xbf43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf41), 0xcb);
        EXPECT(gbc.readMem(0xbf42), 0xc);
        // CB 0C 009E
        gbc.setState(0x5ff6, 0xdcb9, 0x7eb0, 0xb150, 0x9145, 0x7a32, 0x1, 0x1);
        gbc.writeMem(0x5ff6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xdcb9);
        EXPECT(gbc.pc(), 0x5ff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 009F
        gbc.setState(0x1ac, 0x3bff, 0xe490, 0xad3, 0xe362, 0x78ca, 0x0, 0x0);
        gbc.writeMem(0x1ac, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3bff);
        EXPECT(gbc.pc(), 0x1ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 00A0
        gbc.setState(0xc990, 0x9eed, 0x8de0, 0xad6d, 0x4f64, 0x399, 0x1, 0x1);
        gbc.writeMem(0xc990, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x9eed);
        EXPECT(gbc.pc(), 0xc992);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc990), 0xcb);
        EXPECT(gbc.readMem(0xc991), 0xc);
        // CB 0C 00A1
        gbc.setState(0x225a, 0x135c, 0x990, 0xa04b, 0x1e1b, 0xd14d, 0x0, 0x1);
        gbc.writeMem(0x225a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x135c);
        EXPECT(gbc.pc(), 0x225c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00A2
        gbc.setState(0xdf2b, 0x7901, 0xdef0, 0x18f9, 0xf468, 0xaf3a, 0x1, 0x1);
        gbc.writeMem(0xdf2b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7901);
        EXPECT(gbc.pc(), 0xdf2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf2b), 0xcb);
        EXPECT(gbc.readMem(0xdf2c), 0xc);
        // CB 0C 00A3
        gbc.setState(0x5e3f, 0x89a7, 0xf310, 0xc8b3, 0x6367, 0x1a35, 0x1, 0x1);
        gbc.writeMem(0x5e3f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x89a7);
        EXPECT(gbc.pc(), 0x5e41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 00A4
        gbc.setState(0xb651, 0xfd5e, 0x59c0, 0x6be, 0x57cb, 0x9cce, 0x0, 0x1);
        gbc.writeMem(0xb651, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xfd5e);
        EXPECT(gbc.pc(), 0xb653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb651), 0xcb);
        EXPECT(gbc.readMem(0xb652), 0xc);
        // CB 0C 00A6
        gbc.setState(0x369f, 0x5bb6, 0xcd80, 0xdcb5, 0xa813, 0x9dbd, 0x1, 0x0);
        gbc.writeMem(0x369f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5bb6);
        EXPECT(gbc.pc(), 0x36a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00A7
        gbc.setState(0xb21a, 0xd172, 0x15a0, 0x8696, 0x725, 0x9a6f, 0x0, 0x1);
        gbc.writeMem(0xb21a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd172);
        EXPECT(gbc.pc(), 0xb21c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb21a), 0xcb);
        EXPECT(gbc.readMem(0xb21b), 0xc);
        // CB 0C 00A8
        gbc.setState(0x9f9b, 0x3ff0, 0x74b0, 0x38b0, 0x8689, 0xd9dd, 0x1, 0x0);
        gbc.writeMem(0x9f9b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3ff0);
        EXPECT(gbc.pc(), 0x9f9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f9b), 0xcb);
        EXPECT(gbc.readMem(0x9f9c), 0xc);
        // CB 0C 00A9
        gbc.setState(0x458c, 0x2d7, 0x2990, 0x4470, 0x803, 0x8206, 0x0, 0x0);
        gbc.writeMem(0x458c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2d7);
        EXPECT(gbc.pc(), 0x458e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 00AA
        gbc.setState(0xe677, 0x58b3, 0x4f10, 0x308d, 0x9937, 0xf164, 0x0, 0x0);
        gbc.writeMem(0xe677, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x58b3);
        EXPECT(gbc.pc(), 0xe679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe677), 0xcb);
        EXPECT(gbc.readMem(0xe678), 0xc);
        // CB 0C 00AB
        gbc.setState(0xec11, 0xd6ed, 0xf040, 0x49ee, 0x7867, 0x5d2c, 0x1, 0x1);
        gbc.writeMem(0xec11, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd6ed);
        EXPECT(gbc.pc(), 0xec13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec11), 0xcb);
        EXPECT(gbc.readMem(0xec12), 0xc);
        // CB 0C 00AC
        gbc.setState(0x26, 0xebd2, 0x1530, 0xad23, 0x53e9, 0x2fc7, 0x1, 0x1);
        gbc.writeMem(0x26, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xebd2);
        EXPECT(gbc.pc(), 0x28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00AD
        gbc.setState(0xa4f2, 0xa4e, 0xd910, 0x414e, 0x3c60, 0xe7db, 0x0, 0x0);
        gbc.writeMem(0xa4f2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa4e);
        EXPECT(gbc.pc(), 0xa4f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4f2), 0xcb);
        EXPECT(gbc.readMem(0xa4f3), 0xc);
        // CB 0C 00AE
        gbc.setState(0x6da8, 0xd84f, 0x6470, 0x3d27, 0x1958, 0x891c, 0x1, 0x1);
        gbc.writeMem(0x6da8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd84f);
        EXPECT(gbc.pc(), 0x6daa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00AF
        gbc.setState(0x1335, 0x14d5, 0x99b0, 0xdf4a, 0xe162, 0xa5eb, 0x1, 0x0);
        gbc.writeMem(0x1335, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x14d5);
        EXPECT(gbc.pc(), 0x1337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00B0
        gbc.setState(0xc776, 0xb396, 0x10f0, 0x813, 0x830a, 0x1927, 0x1, 0x1);
        gbc.writeMem(0xc776, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb396);
        EXPECT(gbc.pc(), 0xc778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc776), 0xcb);
        EXPECT(gbc.readMem(0xc777), 0xc);
        // CB 0C 00B1
        gbc.setState(0xd9fd, 0x705f, 0x540, 0xc7b7, 0x6c16, 0xb845, 0x1, 0x1);
        gbc.writeMem(0xd9fd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x705f);
        EXPECT(gbc.pc(), 0xd9ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9fd), 0xcb);
        EXPECT(gbc.readMem(0xd9fe), 0xc);
        // CB 0C 00B2
        gbc.setState(0x1d84, 0x27bb, 0x4ab0, 0xb234, 0x2225, 0xb8ee, 0x0, 0x1);
        gbc.writeMem(0x1d84, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x27bb);
        EXPECT(gbc.pc(), 0x1d86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 00B3
        gbc.setState(0xe0fc, 0xe71c, 0xde40, 0x4d99, 0x1005, 0xc8d, 0x1, 0x0);
        gbc.writeMem(0xe0fc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe71c);
        EXPECT(gbc.pc(), 0xe0fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0fc), 0xcb);
        EXPECT(gbc.readMem(0xe0fd), 0xc);
        // CB 0C 00B4
        gbc.setState(0x547d, 0x89d3, 0xc840, 0xb6aa, 0x3750, 0x2a7d, 0x1, 0x1);
        gbc.writeMem(0x547d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x89d3);
        EXPECT(gbc.pc(), 0x547f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 00B5
        gbc.setState(0x31ba, 0x23ed, 0x7ed0, 0xb483, 0x303a, 0xa597, 0x1, 0x0);
        gbc.writeMem(0x31ba, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x23ed);
        EXPECT(gbc.pc(), 0x31bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00B6
        gbc.setState(0x8c03, 0xe636, 0xb910, 0xa300, 0x64d, 0x6c0, 0x0, 0x1);
        gbc.writeMem(0x8c03, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe636);
        EXPECT(gbc.pc(), 0x8c05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c03), 0xcb);
        EXPECT(gbc.readMem(0x8c04), 0xc);
        // CB 0C 00B7
        gbc.setState(0x78a4, 0x6537, 0x3040, 0xc6e7, 0xc973, 0x4781, 0x1, 0x0);
        gbc.writeMem(0x78a4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6537);
        EXPECT(gbc.pc(), 0x78a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00B8
        gbc.setState(0xebd0, 0xa4d9, 0x4860, 0x1e29, 0x6589, 0xe740, 0x0, 0x1);
        gbc.writeMem(0xebd0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa4d9);
        EXPECT(gbc.pc(), 0xebd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebd0), 0xcb);
        EXPECT(gbc.readMem(0xebd1), 0xc);
        // CB 0C 00B9
        gbc.setState(0xd781, 0xa069, 0x3190, 0xab96, 0xc167, 0xd5c0, 0x1, 0x1);
        gbc.writeMem(0xd781, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa069);
        EXPECT(gbc.pc(), 0xd783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd781), 0xcb);
        EXPECT(gbc.readMem(0xd782), 0xc);
        // CB 0C 00BA
        gbc.setState(0x6324, 0xd204, 0xca70, 0x7f71, 0x363d, 0x66eb, 0x1, 0x0);
        gbc.writeMem(0x6324, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd204);
        EXPECT(gbc.pc(), 0x6326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 00BB
        gbc.setState(0xc954, 0x8c99, 0x46f0, 0xb2f5, 0xcc7d, 0x149a, 0x0, 0x0);
        gbc.writeMem(0xc954, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8c99);
        EXPECT(gbc.pc(), 0xc956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc954), 0xcb);
        EXPECT(gbc.readMem(0xc955), 0xc);
        // CB 0C 00BC
        gbc.setState(0xcbc, 0x2686, 0x94f0, 0x241c, 0xa400, 0x292d, 0x0, 0x0);
        gbc.writeMem(0xcbc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2686);
        EXPECT(gbc.pc(), 0xcbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00BD
        gbc.setState(0xa5bc, 0xd8b3, 0x2dd0, 0xb9, 0x7ebd, 0x48a1, 0x1, 0x1);
        gbc.writeMem(0xa5bc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd8b3);
        EXPECT(gbc.pc(), 0xa5be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5bc), 0xcb);
        EXPECT(gbc.readMem(0xa5bd), 0xc);
        // CB 0C 00BE
        gbc.setState(0xe048, 0x8175, 0x3c10, 0x425c, 0x1500, 0x807, 0x1, 0x1);
        gbc.writeMem(0xe048, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8175);
        EXPECT(gbc.pc(), 0xe04a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe048), 0xcb);
        EXPECT(gbc.readMem(0xe049), 0xc);
        // CB 0C 00BF
        gbc.setState(0x68ef, 0xf90e, 0xf380, 0xbc3, 0x3a05, 0x3e49, 0x1, 0x0);
        gbc.writeMem(0x68ef, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf90e);
        EXPECT(gbc.pc(), 0x68f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 00C0
        gbc.setState(0xe72, 0x7002, 0x680, 0x9ff5, 0xa122, 0x8e71, 0x0, 0x0);
        gbc.writeMem(0xe72, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7002);
        EXPECT(gbc.pc(), 0xe74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 00C1
        gbc.setState(0x9c1a, 0xf932, 0x77f0, 0xad8c, 0xdff0, 0xb1f7, 0x1, 0x0);
        gbc.writeMem(0x9c1a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf932);
        EXPECT(gbc.pc(), 0x9c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c1a), 0xcb);
        EXPECT(gbc.readMem(0x9c1b), 0xc);
        // CB 0C 00C2
        gbc.setState(0x4f8f, 0xaa25, 0xeba0, 0x31d6, 0x9a54, 0xbca1, 0x0, 0x0);
        gbc.writeMem(0x4f8f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xaa25);
        EXPECT(gbc.pc(), 0x4f91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 00C4
        gbc.setState(0xc9bf, 0x7ce7, 0x3790, 0xec64, 0x1bdb, 0x470c, 0x1, 0x1);
        gbc.writeMem(0xc9bf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7ce7);
        EXPECT(gbc.pc(), 0xc9c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9bf), 0xcb);
        EXPECT(gbc.readMem(0xc9c0), 0xc);
        // CB 0C 00C5
        gbc.setState(0xd436, 0x7c07, 0x36c0, 0xd7d6, 0xf761, 0x62ba, 0x0, 0x0);
        gbc.writeMem(0xd436, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7c07);
        EXPECT(gbc.pc(), 0xd438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd436), 0xcb);
        EXPECT(gbc.readMem(0xd437), 0xc);
        // CB 0C 00C6
        gbc.setState(0x2ff6, 0xa44d, 0x2b60, 0x78ba, 0xc77, 0xd275, 0x0, 0x0);
        gbc.writeMem(0x2ff6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa44d);
        EXPECT(gbc.pc(), 0x2ff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 00C7
        gbc.setState(0x3554, 0xf037, 0x28f0, 0xaa63, 0x7b12, 0x93ab, 0x1, 0x1);
        gbc.writeMem(0x3554, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf037);
        EXPECT(gbc.pc(), 0x3556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00C8
        gbc.setState(0x584d, 0x1bdd, 0x9720, 0xfdaa, 0xfb44, 0xfb80, 0x1, 0x1);
        gbc.writeMem(0x584d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1bdd);
        EXPECT(gbc.pc(), 0x584f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00C9
        gbc.setState(0x43c9, 0x5534, 0x8e30, 0xe596, 0x1e8c, 0xe845, 0x1, 0x1);
        gbc.writeMem(0x43c9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5534);
        EXPECT(gbc.pc(), 0x43cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 00CA
        gbc.setState(0xccca, 0xa0b5, 0x9590, 0xd4bf, 0x6289, 0xb369, 0x0, 0x1);
        gbc.writeMem(0xccca, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa0b5);
        EXPECT(gbc.pc(), 0xcccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccca), 0xcb);
        EXPECT(gbc.readMem(0xcccb), 0xc);
        // CB 0C 00CB
        gbc.setState(0xa7c7, 0xfcb1, 0xc150, 0xd3b9, 0x81e8, 0xbe79, 0x1, 0x1);
        gbc.writeMem(0xa7c7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xfcb1);
        EXPECT(gbc.pc(), 0xa7c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7c7), 0xcb);
        EXPECT(gbc.readMem(0xa7c8), 0xc);
        // CB 0C 00CC
        gbc.setState(0xd103, 0x77b1, 0x34b0, 0x52a4, 0x41c2, 0xf00c, 0x1, 0x0);
        gbc.writeMem(0xd103, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x77b1);
        EXPECT(gbc.pc(), 0xd105);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd103), 0xcb);
        EXPECT(gbc.readMem(0xd104), 0xc);
        // CB 0C 00CD
        gbc.setState(0x4dae, 0xe757, 0x19e0, 0xf4c, 0x8c0, 0x227, 0x1, 0x1);
        gbc.writeMem(0x4dae, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe757);
        EXPECT(gbc.pc(), 0x4db0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 00CE
        gbc.setState(0xb6eb, 0x2d50, 0x18c0, 0x120, 0xa020, 0xa2cf, 0x1, 0x0);
        gbc.writeMem(0xb6eb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2d50);
        EXPECT(gbc.pc(), 0xb6ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6eb), 0xcb);
        EXPECT(gbc.readMem(0xb6ec), 0xc);
        // CB 0C 00CF
        gbc.setState(0xe9d1, 0x6e7d, 0x1480, 0x6f1a, 0x1fa7, 0x4776, 0x1, 0x0);
        gbc.writeMem(0xe9d1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6e7d);
        EXPECT(gbc.pc(), 0xe9d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9d1), 0xcb);
        EXPECT(gbc.readMem(0xe9d2), 0xc);
        // CB 0C 00D0
        gbc.setState(0x7b6c, 0x49fd, 0x7900, 0xb7b9, 0x95a1, 0x3f4, 0x1, 0x0);
        gbc.writeMem(0x7b6c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x49fd);
        EXPECT(gbc.pc(), 0x7b6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00D1
        gbc.setState(0xa7fd, 0x6b1d, 0x7af0, 0xba92, 0x862d, 0x4cbb, 0x1, 0x1);
        gbc.writeMem(0xa7fd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6b1d);
        EXPECT(gbc.pc(), 0xa7ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7fd), 0xcb);
        EXPECT(gbc.readMem(0xa7fe), 0xc);
        // CB 0C 00D3
        gbc.setState(0x55d8, 0xa29d, 0xc60, 0x24ac, 0xe0e7, 0xe39a, 0x1, 0x1);
        gbc.writeMem(0x55d8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa29d);
        EXPECT(gbc.pc(), 0x55da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00D4
        gbc.setState(0xe03, 0x4ec8, 0x4aa0, 0xae13, 0xe7ec, 0x86fc, 0x1, 0x1);
        gbc.writeMem(0xe03, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4ec8);
        EXPECT(gbc.pc(), 0xe05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 00D5
        gbc.setState(0x6087, 0xe011, 0x7c30, 0xb1ca, 0x6e63, 0xb96a, 0x1, 0x1);
        gbc.writeMem(0x6087, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe011);
        EXPECT(gbc.pc(), 0x6089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00D6
        gbc.setState(0x2b34, 0xd2bc, 0xbbf0, 0x4ad, 0xc472, 0x6d5f, 0x0, 0x0);
        gbc.writeMem(0x2b34, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd2bc);
        EXPECT(gbc.pc(), 0x2b36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00D7
        gbc.setState(0xc969, 0x9d1e, 0xaef0, 0x22ee, 0xf6a0, 0xbf2d, 0x1, 0x1);
        gbc.writeMem(0xc969, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9d1e);
        EXPECT(gbc.pc(), 0xc96b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc969), 0xcb);
        EXPECT(gbc.readMem(0xc96a), 0xc);
        // CB 0C 00D8
        gbc.setState(0x9888, 0xb525, 0xd570, 0x7a3e, 0x84d7, 0x43fa, 0x1, 0x0);
        gbc.writeMem(0x9888, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb525);
        EXPECT(gbc.pc(), 0x988a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9888), 0xcb);
        EXPECT(gbc.readMem(0x9889), 0xc);
        // CB 0C 00D9
        gbc.setState(0x11e, 0x8e08, 0x4040, 0xed3b, 0xce17, 0x74ed, 0x1, 0x1);
        gbc.writeMem(0x11e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8e08);
        EXPECT(gbc.pc(), 0x120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 00DA
        gbc.setState(0x8225, 0x72a5, 0x4200, 0xd075, 0x3ea4, 0x67b0, 0x1, 0x0);
        gbc.writeMem(0x8225, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x72a5);
        EXPECT(gbc.pc(), 0x8227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8225), 0xcb);
        EXPECT(gbc.readMem(0x8226), 0xc);
        // CB 0C 00DC
        gbc.setState(0x7d68, 0x5246, 0xeaa0, 0x42da, 0xe5a8, 0x7144, 0x0, 0x0);
        gbc.writeMem(0x7d68, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5246);
        EXPECT(gbc.pc(), 0x7d6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00DD
        gbc.setState(0xb73, 0x75bf, 0xafe0, 0xc3e8, 0x3715, 0x964e, 0x0, 0x0);
        gbc.writeMem(0xb73, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x75bf);
        EXPECT(gbc.pc(), 0xb75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 00DE
        gbc.setState(0x8209, 0x6f9b, 0xe300, 0xe262, 0xb214, 0x68d0, 0x0, 0x1);
        gbc.writeMem(0x8209, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6f9b);
        EXPECT(gbc.pc(), 0x820b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8209), 0xcb);
        EXPECT(gbc.readMem(0x820a), 0xc);
        // CB 0C 00DF
        gbc.setState(0xcf92, 0xa99b, 0xeea0, 0xd799, 0x2341, 0x26fe, 0x1, 0x1);
        gbc.writeMem(0xcf92, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa99b);
        EXPECT(gbc.pc(), 0xcf94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf92), 0xcb);
        EXPECT(gbc.readMem(0xcf93), 0xc);
        // CB 0C 00E0
        gbc.setState(0x5fc0, 0xd669, 0xca60, 0x8b59, 0x32e9, 0x2b0f, 0x1, 0x1);
        gbc.writeMem(0x5fc0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd669);
        EXPECT(gbc.pc(), 0x5fc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00E1
        gbc.setState(0xcd0e, 0xc7ff, 0xfd40, 0x786a, 0xebda, 0xf81e, 0x1, 0x0);
        gbc.writeMem(0xcd0e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc7ff);
        EXPECT(gbc.pc(), 0xcd10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd0e), 0xcb);
        EXPECT(gbc.readMem(0xcd0f), 0xc);
        // CB 0C 00E3
        gbc.setState(0x80ef, 0xcfd0, 0xc140, 0x619, 0x3ea7, 0xda4a, 0x0, 0x0);
        gbc.writeMem(0x80ef, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xcfd0);
        EXPECT(gbc.pc(), 0x80f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ef), 0xcb);
        EXPECT(gbc.readMem(0x80f0), 0xc);
        // CB 0C 00E4
        gbc.setState(0xde8e, 0x57d, 0x5a40, 0x1579, 0x16a6, 0x8925, 0x0, 0x0);
        gbc.writeMem(0xde8e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x57d);
        EXPECT(gbc.pc(), 0xde90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde8e), 0xcb);
        EXPECT(gbc.readMem(0xde8f), 0xc);
        // CB 0C 00E5
        gbc.setState(0x39e9, 0xa0e3, 0xa1a0, 0xe17a, 0xbe1, 0x5e36, 0x1, 0x1);
        gbc.writeMem(0x39e9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa0e3);
        EXPECT(gbc.pc(), 0x39eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 00E6
        gbc.setState(0x82e6, 0x6d3c, 0xfe30, 0xbc27, 0xa1f0, 0x4457, 0x0, 0x1);
        gbc.writeMem(0x82e6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6d3c);
        EXPECT(gbc.pc(), 0x82e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e6), 0xcb);
        EXPECT(gbc.readMem(0x82e7), 0xc);
        // CB 0C 00E7
        gbc.setState(0x6ffd, 0x6f7c, 0x1070, 0xdbf9, 0x69fe, 0xc3f9, 0x0, 0x1);
        gbc.writeMem(0x6ffd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6f7c);
        EXPECT(gbc.pc(), 0x6fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00E8
        gbc.setState(0x1a34, 0x47ac, 0x5a90, 0xa776, 0x7290, 0x1fe8, 0x1, 0x1);
        gbc.writeMem(0x1a34, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x47ac);
        EXPECT(gbc.pc(), 0x1a36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00E9
        gbc.setState(0x8b9f, 0x437d, 0x780, 0xdefe, 0x754, 0x4af4, 0x0, 0x0);
        gbc.writeMem(0x8b9f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x437d);
        EXPECT(gbc.pc(), 0x8ba1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b9f), 0xcb);
        EXPECT(gbc.readMem(0x8ba0), 0xc);
        // CB 0C 00EA
        gbc.setState(0x301b, 0xafeb, 0xa990, 0x6c25, 0xf707, 0x2d13, 0x1, 0x0);
        gbc.writeMem(0x301b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xafeb);
        EXPECT(gbc.pc(), 0x301d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00EB
        gbc.setState(0xafa6, 0x799f, 0xddb0, 0x3556, 0x5b63, 0xc113, 0x0, 0x1);
        gbc.writeMem(0xafa6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x799f);
        EXPECT(gbc.pc(), 0xafa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafa6), 0xcb);
        EXPECT(gbc.readMem(0xafa7), 0xc);
        // CB 0C 00EC
        gbc.setState(0x63bd, 0xe0f7, 0x61c0, 0xa69d, 0x76df, 0x1987, 0x0, 0x0);
        gbc.writeMem(0x63bd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe0f7);
        EXPECT(gbc.pc(), 0x63bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00ED
        gbc.setState(0x86e2, 0xc6db, 0x7650, 0x161b, 0x11c6, 0x59d2, 0x0, 0x1);
        gbc.writeMem(0x86e2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc6db);
        EXPECT(gbc.pc(), 0x86e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86e2), 0xcb);
        EXPECT(gbc.readMem(0x86e3), 0xc);
        // CB 0C 00EE
        gbc.setState(0x8d85, 0x8c4d, 0x7a60, 0xf7bd, 0x6f13, 0x6e67, 0x0, 0x1);
        gbc.writeMem(0x8d85, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8c4d);
        EXPECT(gbc.pc(), 0x8d87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d85), 0xcb);
        EXPECT(gbc.readMem(0x8d86), 0xc);
        // CB 0C 00EF
        gbc.setState(0xa67b, 0xe291, 0xd50, 0x7fda, 0xc4c9, 0x3d36, 0x0, 0x0);
        gbc.writeMem(0xa67b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe291);
        EXPECT(gbc.pc(), 0xa67d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa67b), 0xcb);
        EXPECT(gbc.readMem(0xa67c), 0xc);
        // CB 0C 00F0
        gbc.setState(0x675d, 0x155f, 0x340, 0x2f49, 0x2855, 0x5843, 0x1, 0x0);
        gbc.writeMem(0x675d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x155f);
        EXPECT(gbc.pc(), 0x675f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 00F1
        gbc.setState(0x1b5e, 0x3de, 0xff0, 0xbe52, 0x3f0e, 0xdf5c, 0x1, 0x0);
        gbc.writeMem(0x1b5e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3de);
        EXPECT(gbc.pc(), 0x1b60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00F2
        gbc.setState(0xc11b, 0xd514, 0x720, 0xddb, 0x2efd, 0xbc17, 0x1, 0x1);
        gbc.writeMem(0xc11b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd514);
        EXPECT(gbc.pc(), 0xc11d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc11b), 0xcb);
        EXPECT(gbc.readMem(0xc11c), 0xc);
        // CB 0C 00F3
        gbc.setState(0x571f, 0xbfe3, 0xff40, 0xbc5b, 0xe04d, 0x9db1, 0x1, 0x1);
        gbc.writeMem(0x571f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbfe3);
        EXPECT(gbc.pc(), 0x5721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00F4
        gbc.setState(0x4f17, 0xc58e, 0xbfe0, 0x94aa, 0xc1eb, 0x543, 0x0, 0x1);
        gbc.writeMem(0x4f17, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc58e);
        EXPECT(gbc.pc(), 0x4f19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00F5
        gbc.setState(0x4bb8, 0x156d, 0xbf40, 0x5d3a, 0xbdcd, 0x3fcf, 0x0, 0x1);
        gbc.writeMem(0x4bb8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x156d);
        EXPECT(gbc.pc(), 0x4bba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00F6
        gbc.setState(0x9f75, 0x8e32, 0xc850, 0x3204, 0xc40b, 0xb5fc, 0x0, 0x1);
        gbc.writeMem(0x9f75, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8e32);
        EXPECT(gbc.pc(), 0x9f77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f75), 0xcb);
        EXPECT(gbc.readMem(0x9f76), 0xc);
        // CB 0C 00F7
        gbc.setState(0x9453, 0x99e3, 0x8060, 0x8514, 0x4a11, 0xd43d, 0x1, 0x0);
        gbc.writeMem(0x9453, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x99e3);
        EXPECT(gbc.pc(), 0x9455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9453), 0xcb);
        EXPECT(gbc.readMem(0x9454), 0xc);
        // CB 0C 00F8
        gbc.setState(0xb423, 0xd280, 0xecd0, 0xb39b, 0x70a6, 0x2235, 0x0, 0x0);
        gbc.writeMem(0xb423, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd280);
        EXPECT(gbc.pc(), 0xb425);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb423), 0xcb);
        EXPECT(gbc.readMem(0xb424), 0xc);
        // CB 0C 00F9
        gbc.setState(0x112e, 0x2a2f, 0xe170, 0x3d08, 0x717d, 0x73ff, 0x0, 0x1);
        gbc.writeMem(0x112e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2a2f);
        EXPECT(gbc.pc(), 0x1130);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00FA
        gbc.setState(0xa3b2, 0xf3aa, 0x960, 0x3c23, 0x8545, 0x4dd2, 0x1, 0x0);
        gbc.writeMem(0xa3b2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xf3aa);
        EXPECT(gbc.pc(), 0xa3b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3b2), 0xcb);
        EXPECT(gbc.readMem(0xa3b3), 0xc);
        // CB 0C 00FB
        gbc.setState(0xea72, 0x8e32, 0x4740, 0x1054, 0x4c8f, 0x887f, 0x1, 0x0);
        gbc.writeMem(0xea72, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8e32);
        EXPECT(gbc.pc(), 0xea74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea72), 0xcb);
        EXPECT(gbc.readMem(0xea73), 0xc);
        // CB 0C 00FC
        gbc.setState(0xa2b9, 0x1c24, 0xb9d0, 0xb9e, 0xa653, 0x2475, 0x0, 0x1);
        gbc.writeMem(0xa2b9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1c24);
        EXPECT(gbc.pc(), 0xa2bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b9), 0xcb);
        EXPECT(gbc.readMem(0xa2ba), 0xc);
        // CB 0C 00FD
        gbc.setState(0x4a67, 0x3d0e, 0x8260, 0x76fa, 0x5092, 0xa735, 0x1, 0x0);
        gbc.writeMem(0x4a67, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3d0e);
        EXPECT(gbc.pc(), 0x4a69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 00FE
        gbc.setState(0xe874, 0xfb52, 0xf110, 0x5453, 0x4078, 0xe7d1, 0x1, 0x1);
        gbc.writeMem(0xe874, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xfb52);
        EXPECT(gbc.pc(), 0xe876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe874), 0xcb);
        EXPECT(gbc.readMem(0xe875), 0xc);
        // CB 0C 00FF
        gbc.setState(0x8c00, 0xc2d1, 0xf6c0, 0xe8ec, 0x593e, 0x790d, 0x1, 0x1);
        gbc.writeMem(0x8c00, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc2d1);
        EXPECT(gbc.pc(), 0x8c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c00), 0xcb);
        EXPECT(gbc.readMem(0x8c01), 0xc);
        // CB 0C 0100
        gbc.setState(0xe950, 0x1cb7, 0x45e0, 0x2f40, 0xc896, 0xccc4, 0x1, 0x1);
        gbc.writeMem(0xe950, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1cb7);
        EXPECT(gbc.pc(), 0xe952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe950), 0xcb);
        EXPECT(gbc.readMem(0xe951), 0xc);
        // CB 0C 0101
        gbc.setState(0xbcf3, 0xf425, 0x6b80, 0x5fd3, 0x48d9, 0xf07d, 0x1, 0x0);
        gbc.writeMem(0xbcf3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf425);
        EXPECT(gbc.pc(), 0xbcf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcf3), 0xcb);
        EXPECT(gbc.readMem(0xbcf4), 0xc);
        // CB 0C 0102
        gbc.setState(0xa1c9, 0x17b8, 0x1d30, 0x10f, 0x7a29, 0x725b, 0x0, 0x1);
        gbc.writeMem(0xa1c9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x17b8);
        EXPECT(gbc.pc(), 0xa1cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1c9), 0xcb);
        EXPECT(gbc.readMem(0xa1ca), 0xc);
        // CB 0C 0103
        gbc.setState(0x35e7, 0xc4d, 0x5120, 0x583e, 0x571c, 0x18cd, 0x1, 0x0);
        gbc.writeMem(0x35e7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc4d);
        EXPECT(gbc.pc(), 0x35e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0104
        gbc.setState(0x9f51, 0x6c5e, 0x5d40, 0x1c6f, 0x8d04, 0xd399, 0x0, 0x0);
        gbc.writeMem(0x9f51, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6c5e);
        EXPECT(gbc.pc(), 0x9f53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f51), 0xcb);
        EXPECT(gbc.readMem(0x9f52), 0xc);
        // CB 0C 0105
        gbc.setState(0xd3ff, 0x7e1f, 0x6260, 0x6956, 0x5c55, 0x913a, 0x1, 0x0);
        gbc.writeMem(0xd3ff, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7e1f);
        EXPECT(gbc.pc(), 0xd401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ff), 0xcb);
        EXPECT(gbc.readMem(0xd400), 0xc);
        // CB 0C 0106
        gbc.setState(0x61b6, 0x333a, 0xbce0, 0x2392, 0x83ad, 0x972, 0x1, 0x0);
        gbc.writeMem(0x61b6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x333a);
        EXPECT(gbc.pc(), 0x61b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0107
        gbc.setState(0x6b88, 0xdc1a, 0x92e0, 0x6f89, 0xfdbc, 0xc976, 0x1, 0x1);
        gbc.writeMem(0x6b88, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xdc1a);
        EXPECT(gbc.pc(), 0x6b8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0108
        gbc.setState(0x1168, 0x65b2, 0x4180, 0x9b71, 0x1733, 0xc882, 0x1, 0x0);
        gbc.writeMem(0x1168, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x65b2);
        EXPECT(gbc.pc(), 0x116a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0109
        gbc.setState(0x1942, 0xb5d, 0x6390, 0xfc44, 0xd7ce, 0x61ce, 0x1, 0x1);
        gbc.writeMem(0x1942, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb5d);
        EXPECT(gbc.pc(), 0x1944);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 010A
        gbc.setState(0x65ba, 0xe9b6, 0x6560, 0xfabe, 0xecfa, 0x8052, 0x0, 0x1);
        gbc.writeMem(0x65ba, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe9b6);
        EXPECT(gbc.pc(), 0x65bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 010B
        gbc.setState(0xc133, 0xa736, 0x47f0, 0x7a6e, 0xa673, 0xc616, 0x0, 0x0);
        gbc.writeMem(0xc133, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa736);
        EXPECT(gbc.pc(), 0xc135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc133), 0xcb);
        EXPECT(gbc.readMem(0xc134), 0xc);
        // CB 0C 010C
        gbc.setState(0x433e, 0x7c05, 0x4430, 0x55d4, 0x3a74, 0xa0b2, 0x1, 0x0);
        gbc.writeMem(0x433e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7c05);
        EXPECT(gbc.pc(), 0x4340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 010D
        gbc.setState(0x6852, 0xe596, 0xf540, 0x67fe, 0xbb6b, 0xb006, 0x1, 0x1);
        gbc.writeMem(0x6852, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe596);
        EXPECT(gbc.pc(), 0x6854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 010E
        gbc.setState(0xcf76, 0xd999, 0x73b0, 0x3ccd, 0x8413, 0x2a38, 0x1, 0x0);
        gbc.writeMem(0xcf76, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xd999);
        EXPECT(gbc.pc(), 0xcf78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf76), 0xcb);
        EXPECT(gbc.readMem(0xcf77), 0xc);
        // CB 0C 010F
        gbc.setState(0x1696, 0x4422, 0xdb00, 0xb6ea, 0xe069, 0xf9ee, 0x1, 0x0);
        gbc.writeMem(0x1696, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4422);
        EXPECT(gbc.pc(), 0x1698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0110
        gbc.setState(0x8d2a, 0x84a4, 0xda20, 0x41c7, 0x25f1, 0x439f, 0x0, 0x1);
        gbc.writeMem(0x8d2a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x84a4);
        EXPECT(gbc.pc(), 0x8d2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d2a), 0xcb);
        EXPECT(gbc.readMem(0x8d2b), 0xc);
        // CB 0C 0111
        gbc.setState(0x526a, 0x90d6, 0xa690, 0xdc5d, 0x6d08, 0x7edc, 0x1, 0x0);
        gbc.writeMem(0x526a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x90d6);
        EXPECT(gbc.pc(), 0x526c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0112
        gbc.setState(0x230d, 0x2483, 0x9750, 0x2c8, 0x4a3b, 0x7417, 0x0, 0x1);
        gbc.writeMem(0x230d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2483);
        EXPECT(gbc.pc(), 0x230f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0113
        gbc.setState(0x9b54, 0xcb64, 0x2450, 0xeb9c, 0xa6c1, 0xbfdb, 0x1, 0x0);
        gbc.writeMem(0x9b54, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xcb64);
        EXPECT(gbc.pc(), 0x9b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b54), 0xcb);
        EXPECT(gbc.readMem(0x9b55), 0xc);
        // CB 0C 0114
        gbc.setState(0xc189, 0xad8a, 0xffe0, 0x210b, 0xacb3, 0x4d0f, 0x0, 0x0);
        gbc.writeMem(0xc189, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xad8a);
        EXPECT(gbc.pc(), 0xc18b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc189), 0xcb);
        EXPECT(gbc.readMem(0xc18a), 0xc);
        // CB 0C 0115
        gbc.setState(0x55af, 0xda99, 0x5f60, 0x61d, 0xe8f1, 0x9a37, 0x1, 0x1);
        gbc.writeMem(0x55af, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xda99);
        EXPECT(gbc.pc(), 0x55b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0116
        gbc.setState(0x8094, 0xa10f, 0x3300, 0x92f5, 0xffba, 0x75eb, 0x0, 0x0);
        gbc.writeMem(0x8094, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa10f);
        EXPECT(gbc.pc(), 0x8096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8094), 0xcb);
        EXPECT(gbc.readMem(0x8095), 0xc);
        // CB 0C 0117
        gbc.setState(0xe172, 0x6b6e, 0x8a30, 0xd21d, 0x1481, 0x34f7, 0x0, 0x0);
        gbc.writeMem(0xe172, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6b6e);
        EXPECT(gbc.pc(), 0xe174);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe172), 0xcb);
        EXPECT(gbc.readMem(0xe173), 0xc);
        // CB 0C 0118
        gbc.setState(0x9fa1, 0x530b, 0x7e20, 0xa6b4, 0xb258, 0x2ce9, 0x1, 0x1);
        gbc.writeMem(0x9fa1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x530b);
        EXPECT(gbc.pc(), 0x9fa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fa1), 0xcb);
        EXPECT(gbc.readMem(0x9fa2), 0xc);
        // CB 0C 0119
        gbc.setState(0x6b37, 0x3950, 0x76f0, 0xda53, 0x6416, 0x8736, 0x1, 0x0);
        gbc.writeMem(0x6b37, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3950);
        EXPECT(gbc.pc(), 0x6b39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 011A
        gbc.setState(0xbc2f, 0x79f0, 0xe320, 0xdf9e, 0xdf95, 0x8605, 0x0, 0x0);
        gbc.writeMem(0xbc2f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x79f0);
        EXPECT(gbc.pc(), 0xbc31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc2f), 0xcb);
        EXPECT(gbc.readMem(0xbc30), 0xc);
        // CB 0C 011B
        gbc.setState(0x1917, 0x4563, 0x53c0, 0x4c32, 0xa4df, 0x8ada, 0x1, 0x0);
        gbc.writeMem(0x1917, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4563);
        EXPECT(gbc.pc(), 0x1919);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 011C
        gbc.setState(0x6ea8, 0xcaf0, 0xd370, 0x2756, 0x93df, 0x4c39, 0x1, 0x1);
        gbc.writeMem(0x6ea8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xcaf0);
        EXPECT(gbc.pc(), 0x6eaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 011D
        gbc.setState(0xd00, 0xb0f6, 0x8020, 0x7d29, 0xb2da, 0xa8, 0x0, 0x0);
        gbc.writeMem(0xd00, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb0f6);
        EXPECT(gbc.pc(), 0xd02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 011E
        gbc.setState(0x44fb, 0xf497, 0xbd00, 0x4ed9, 0x89a1, 0xd266, 0x1, 0x1);
        gbc.writeMem(0x44fb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf497);
        EXPECT(gbc.pc(), 0x44fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 011F
        gbc.setState(0xe14e, 0x3888, 0x8280, 0xf759, 0xe5a5, 0xbf8, 0x0, 0x0);
        gbc.writeMem(0xe14e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3888);
        EXPECT(gbc.pc(), 0xe150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe14e), 0xcb);
        EXPECT(gbc.readMem(0xe14f), 0xc);
        // CB 0C 0120
        gbc.setState(0x8e2f, 0x4c29, 0xd5c0, 0xcf1e, 0xa2a, 0xf7a9, 0x1, 0x1);
        gbc.writeMem(0x8e2f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4c29);
        EXPECT(gbc.pc(), 0x8e31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e2f), 0xcb);
        EXPECT(gbc.readMem(0x8e30), 0xc);
        // CB 0C 0121
        gbc.setState(0x7ea2, 0x6f2f, 0xf7c0, 0xc0e8, 0xadec, 0xec01, 0x0, 0x1);
        gbc.writeMem(0x7ea2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6f2f);
        EXPECT(gbc.pc(), 0x7ea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0122
        gbc.setState(0x63f6, 0x9114, 0x4400, 0xa274, 0xe8cd, 0xb985, 0x1, 0x1);
        gbc.writeMem(0x63f6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9114);
        EXPECT(gbc.pc(), 0x63f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0123
        gbc.setState(0x75da, 0x3fc, 0x6690, 0x553, 0x874, 0xb56f, 0x1, 0x0);
        gbc.writeMem(0x75da, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3fc);
        EXPECT(gbc.pc(), 0x75dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0124
        gbc.setState(0xbe11, 0xafc9, 0xa5e0, 0xc2a4, 0x4141, 0xd1d7, 0x1, 0x0);
        gbc.writeMem(0xbe11, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xafc9);
        EXPECT(gbc.pc(), 0xbe13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe11), 0xcb);
        EXPECT(gbc.readMem(0xbe12), 0xc);
        // CB 0C 0125
        gbc.setState(0xd71f, 0xc6ee, 0xb3f0, 0xc72d, 0x4e41, 0x73d9, 0x0, 0x1);
        gbc.writeMem(0xd71f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc6ee);
        EXPECT(gbc.pc(), 0xd721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd71f), 0xcb);
        EXPECT(gbc.readMem(0xd720), 0xc);
        // CB 0C 0126
        gbc.setState(0x5766, 0xdb6f, 0xf4e0, 0x1925, 0x2818, 0x795a, 0x0, 0x0);
        gbc.writeMem(0x5766, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xdb6f);
        EXPECT(gbc.pc(), 0x5768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0127
        gbc.setState(0xc05e, 0x3756, 0x70f0, 0xb19a, 0xbb12, 0x72ce, 0x0, 0x1);
        gbc.writeMem(0xc05e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3756);
        EXPECT(gbc.pc(), 0xc060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc05e), 0xcb);
        EXPECT(gbc.readMem(0xc05f), 0xc);
        // CB 0C 0128
        gbc.setState(0x421d, 0xb9b5, 0xcf40, 0xe96c, 0x2662, 0xfd08, 0x0, 0x0);
        gbc.writeMem(0x421d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb9b5);
        EXPECT(gbc.pc(), 0x421f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0129
        gbc.setState(0x44a9, 0xf41d, 0xe280, 0xba30, 0xa31c, 0xf4dc, 0x1, 0x0);
        gbc.writeMem(0x44a9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf41d);
        EXPECT(gbc.pc(), 0x44ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 012A
        gbc.setState(0x78c1, 0xa6b, 0x18e0, 0xa703, 0x11c3, 0xe1c8, 0x0, 0x0);
        gbc.writeMem(0x78c1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa6b);
        EXPECT(gbc.pc(), 0x78c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 012B
        gbc.setState(0xd929, 0xeb2d, 0x8fd0, 0x8fd1, 0x1093, 0xc65b, 0x1, 0x0);
        gbc.writeMem(0xd929, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xeb2d);
        EXPECT(gbc.pc(), 0xd92b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd929), 0xcb);
        EXPECT(gbc.readMem(0xd92a), 0xc);
        // CB 0C 012C
        gbc.setState(0x4aff, 0x7609, 0xc4d0, 0x89bf, 0x3a3, 0xcbe1, 0x1, 0x1);
        gbc.writeMem(0x4aff, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7609);
        EXPECT(gbc.pc(), 0x4b01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 012D
        gbc.setState(0xe2e, 0x129f, 0x4e60, 0xfacb, 0x6cee, 0xc5de, 0x0, 0x0);
        gbc.writeMem(0xe2e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x129f);
        EXPECT(gbc.pc(), 0xe30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 012E
        gbc.setState(0x7491, 0x7187, 0x3c00, 0xb26e, 0x7fb0, 0xa639, 0x0, 0x0);
        gbc.writeMem(0x7491, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7187);
        EXPECT(gbc.pc(), 0x7493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 012F
        gbc.setState(0x2599, 0x2346, 0xe750, 0xe043, 0x5eee, 0xe0cf, 0x1, 0x0);
        gbc.writeMem(0x2599, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2346);
        EXPECT(gbc.pc(), 0x259b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0130
        gbc.setState(0x95bd, 0x8272, 0x9ce0, 0x3314, 0x517, 0xc8e1, 0x0, 0x1);
        gbc.writeMem(0x95bd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8272);
        EXPECT(gbc.pc(), 0x95bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95bd), 0xcb);
        EXPECT(gbc.readMem(0x95be), 0xc);
        // CB 0C 0131
        gbc.setState(0x8aa3, 0x24cb, 0xdc20, 0x4939, 0xb17c, 0xf8a, 0x1, 0x1);
        gbc.writeMem(0x8aa3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x24cb);
        EXPECT(gbc.pc(), 0x8aa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aa3), 0xcb);
        EXPECT(gbc.readMem(0x8aa4), 0xc);
        // CB 0C 0132
        gbc.setState(0x8478, 0xa4d1, 0x640, 0x5381, 0x7cf3, 0x8102, 0x1, 0x1);
        gbc.writeMem(0x8478, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa4d1);
        EXPECT(gbc.pc(), 0x847a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8478), 0xcb);
        EXPECT(gbc.readMem(0x8479), 0xc);
        // CB 0C 0133
        gbc.setState(0x49af, 0xe0ab, 0x7fd0, 0x6083, 0x491c, 0xd9fc, 0x1, 0x0);
        gbc.writeMem(0x49af, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe0ab);
        EXPECT(gbc.pc(), 0x49b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0134
        gbc.setState(0x97d9, 0x7bce, 0xe640, 0x34c0, 0x8d61, 0xbb25, 0x1, 0x1);
        gbc.writeMem(0x97d9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7bce);
        EXPECT(gbc.pc(), 0x97db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97d9), 0xcb);
        EXPECT(gbc.readMem(0x97da), 0xc);
        // CB 0C 0135
        gbc.setState(0xd525, 0x7b00, 0x6d0, 0x52e3, 0xd314, 0xc903, 0x1, 0x0);
        gbc.writeMem(0xd525, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7b00);
        EXPECT(gbc.pc(), 0xd527);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd525), 0xcb);
        EXPECT(gbc.readMem(0xd526), 0xc);
        // CB 0C 0136
        gbc.setState(0xd53f, 0x4cb0, 0xe8d0, 0x455e, 0xf81e, 0xe501, 0x1, 0x1);
        gbc.writeMem(0xd53f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4cb0);
        EXPECT(gbc.pc(), 0xd541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd53f), 0xcb);
        EXPECT(gbc.readMem(0xd540), 0xc);
        // CB 0C 0137
        gbc.setState(0xb71a, 0x6290, 0xb580, 0x8b91, 0xf189, 0xbba0, 0x1, 0x1);
        gbc.writeMem(0xb71a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6290);
        EXPECT(gbc.pc(), 0xb71c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb71a), 0xcb);
        EXPECT(gbc.readMem(0xb71b), 0xc);
        // CB 0C 0139
        gbc.setState(0x685d, 0x3c70, 0xd360, 0x659b, 0xef9, 0xf594, 0x1, 0x1);
        gbc.writeMem(0x685d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3c70);
        EXPECT(gbc.pc(), 0x685f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 013A
        gbc.setState(0x30ef, 0x6699, 0xe810, 0x4f4b, 0xf096, 0xe306, 0x1, 0x1);
        gbc.writeMem(0x30ef, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6699);
        EXPECT(gbc.pc(), 0x30f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 013B
        gbc.setState(0xe4b8, 0x46ab, 0x1f00, 0xddb3, 0x305c, 0x6091, 0x1, 0x1);
        gbc.writeMem(0xe4b8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x46ab);
        EXPECT(gbc.pc(), 0xe4ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4b8), 0xcb);
        EXPECT(gbc.readMem(0xe4b9), 0xc);
        // CB 0C 013C
        gbc.setState(0xb76e, 0x8b31, 0xa080, 0x36ab, 0xbd10, 0xf646, 0x0, 0x1);
        gbc.writeMem(0xb76e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8b31);
        EXPECT(gbc.pc(), 0xb770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb76e), 0xcb);
        EXPECT(gbc.readMem(0xb76f), 0xc);
        // CB 0C 013D
        gbc.setState(0xa24a, 0x8f8c, 0x3d90, 0x64ec, 0x24a, 0xb8d8, 0x0, 0x1);
        gbc.writeMem(0xa24a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8f8c);
        EXPECT(gbc.pc(), 0xa24c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa24a), 0xcb);
        EXPECT(gbc.readMem(0xa24b), 0xc);
        // CB 0C 013E
        gbc.setState(0x4ea1, 0x180f, 0xb9d0, 0x5ceb, 0x8407, 0x4953, 0x0, 0x0);
        gbc.writeMem(0x4ea1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x180f);
        EXPECT(gbc.pc(), 0x4ea3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 013F
        gbc.setState(0x918d, 0xd415, 0xe9a0, 0xe13f, 0xb51f, 0x9e5, 0x0, 0x1);
        gbc.writeMem(0x918d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd415);
        EXPECT(gbc.pc(), 0x918f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x918d), 0xcb);
        EXPECT(gbc.readMem(0x918e), 0xc);
        // CB 0C 0140
        gbc.setState(0xb14b, 0x9c2f, 0x3950, 0x2849, 0x6aa7, 0xd353, 0x1, 0x0);
        gbc.writeMem(0xb14b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9c2f);
        EXPECT(gbc.pc(), 0xb14d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb14b), 0xcb);
        EXPECT(gbc.readMem(0xb14c), 0xc);
        // CB 0C 0141
        gbc.setState(0xb15e, 0x5af5, 0x8710, 0x1a93, 0x1bb5, 0x28c1, 0x0, 0x0);
        gbc.writeMem(0xb15e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5af5);
        EXPECT(gbc.pc(), 0xb160);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb15e), 0xcb);
        EXPECT(gbc.readMem(0xb15f), 0xc);
        // CB 0C 0142
        gbc.setState(0x3487, 0x5ca9, 0xf020, 0xd1a4, 0xdd9c, 0xb730, 0x1, 0x1);
        gbc.writeMem(0x3487, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5ca9);
        EXPECT(gbc.pc(), 0x3489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0143
        gbc.setState(0x9218, 0x22f, 0x3720, 0xce9a, 0x9c1a, 0x98f9, 0x1, 0x1);
        gbc.writeMem(0x9218, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x22f);
        EXPECT(gbc.pc(), 0x921a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9218), 0xcb);
        EXPECT(gbc.readMem(0x9219), 0xc);
        // CB 0C 0144
        gbc.setState(0xd437, 0x1012, 0x3290, 0x23ef, 0xbe54, 0x95fc, 0x0, 0x1);
        gbc.writeMem(0xd437, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x1012);
        EXPECT(gbc.pc(), 0xd439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd437), 0xcb);
        EXPECT(gbc.readMem(0xd438), 0xc);
        // CB 0C 0145
        gbc.setState(0x9de7, 0x5ded, 0xdfb0, 0x9359, 0x186a, 0x6ea2, 0x0, 0x0);
        gbc.writeMem(0x9de7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5ded);
        EXPECT(gbc.pc(), 0x9de9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9de7), 0xcb);
        EXPECT(gbc.readMem(0x9de8), 0xc);
        // CB 0C 0146
        gbc.setState(0x6ce9, 0xffb4, 0x9270, 0x1364, 0xa6da, 0xc554, 0x0, 0x1);
        gbc.writeMem(0x6ce9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xffb4);
        EXPECT(gbc.pc(), 0x6ceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0147
        gbc.setState(0x8eb2, 0x4f65, 0x1090, 0x7b4c, 0xf73, 0xe986, 0x0, 0x1);
        gbc.writeMem(0x8eb2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4f65);
        EXPECT(gbc.pc(), 0x8eb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eb2), 0xcb);
        EXPECT(gbc.readMem(0x8eb3), 0xc);
        // CB 0C 0148
        gbc.setState(0xaa07, 0x3d9f, 0x91d0, 0xb175, 0xcaff, 0x28b4, 0x1, 0x1);
        gbc.writeMem(0xaa07, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3d9f);
        EXPECT(gbc.pc(), 0xaa09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa07), 0xcb);
        EXPECT(gbc.readMem(0xaa08), 0xc);
        // CB 0C 0149
        gbc.setState(0x3908, 0xe585, 0x6180, 0xf758, 0x97ee, 0x6619, 0x0, 0x1);
        gbc.writeMem(0x3908, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe585);
        EXPECT(gbc.pc(), 0x390a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 014A
        gbc.setState(0x958b, 0x3662, 0x3d10, 0x2b62, 0xacdf, 0xb23b, 0x1, 0x0);
        gbc.writeMem(0x958b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3662);
        EXPECT(gbc.pc(), 0x958d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x958b), 0xcb);
        EXPECT(gbc.readMem(0x958c), 0xc);
        // CB 0C 014B
        gbc.setState(0x519a, 0x3c30, 0xf6f0, 0xbb16, 0x32cd, 0x7745, 0x0, 0x0);
        gbc.writeMem(0x519a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3c30);
        EXPECT(gbc.pc(), 0x519c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 014C
        gbc.setState(0xccc4, 0xdc9c, 0xdcb0, 0xb17e, 0xba2a, 0x5373, 0x1, 0x1);
        gbc.writeMem(0xccc4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xdc9c);
        EXPECT(gbc.pc(), 0xccc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccc4), 0xcb);
        EXPECT(gbc.readMem(0xccc5), 0xc);
        // CB 0C 014D
        gbc.setState(0x2a7, 0xe59b, 0xf00, 0x351a, 0x8a80, 0x55d, 0x0, 0x0);
        gbc.writeMem(0x2a7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe59b);
        EXPECT(gbc.pc(), 0x2a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 014E
        gbc.setState(0xfd2, 0xafcf, 0xc5e0, 0x67d5, 0x4477, 0x82b3, 0x0, 0x0);
        gbc.writeMem(0xfd2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xafcf);
        EXPECT(gbc.pc(), 0xfd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 014F
        gbc.setState(0x1418, 0x9731, 0xb030, 0x1008, 0xd83b, 0xba8, 0x1, 0x0);
        gbc.writeMem(0x1418, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9731);
        EXPECT(gbc.pc(), 0x141a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0150
        gbc.setState(0x368c, 0x9e80, 0xbce0, 0x89b6, 0x2878, 0xc079, 0x0, 0x0);
        gbc.writeMem(0x368c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9e80);
        EXPECT(gbc.pc(), 0x368e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0151
        gbc.setState(0x1c66, 0x681b, 0x28c0, 0x44b6, 0xd013, 0xd6ea, 0x1, 0x1);
        gbc.writeMem(0x1c66, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x681b);
        EXPECT(gbc.pc(), 0x1c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0152
        gbc.setState(0x8dd2, 0xa14, 0xbfc0, 0xcdeb, 0x17b6, 0xce14, 0x1, 0x1);
        gbc.writeMem(0x8dd2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa14);
        EXPECT(gbc.pc(), 0x8dd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dd2), 0xcb);
        EXPECT(gbc.readMem(0x8dd3), 0xc);
        // CB 0C 0153
        gbc.setState(0x8a2f, 0x169, 0x9820, 0xff9d, 0x2976, 0xfcba, 0x0, 0x1);
        gbc.writeMem(0x8a2f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x169);
        EXPECT(gbc.pc(), 0x8a31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a2f), 0xcb);
        EXPECT(gbc.readMem(0x8a30), 0xc);
        // CB 0C 0154
        gbc.setState(0x11bd, 0xaf16, 0x54b0, 0xf87c, 0xfdd, 0x7f91, 0x1, 0x0);
        gbc.writeMem(0x11bd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xaf16);
        EXPECT(gbc.pc(), 0x11bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0155
        gbc.setState(0xc693, 0x260f, 0xe710, 0xba85, 0xeb19, 0x9b7f, 0x1, 0x1);
        gbc.writeMem(0xc693, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x260f);
        EXPECT(gbc.pc(), 0xc695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc693), 0xcb);
        EXPECT(gbc.readMem(0xc694), 0xc);
        // CB 0C 0157
        gbc.setState(0xdcb7, 0x7006, 0x16c0, 0x184b, 0x530f, 0xba49, 0x0, 0x0);
        gbc.writeMem(0xdcb7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7006);
        EXPECT(gbc.pc(), 0xdcb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb7), 0xcb);
        EXPECT(gbc.readMem(0xdcb8), 0xc);
        // CB 0C 0158
        gbc.setState(0x6957, 0x776d, 0x9b20, 0xf1e8, 0x6867, 0x68a9, 0x0, 0x0);
        gbc.writeMem(0x6957, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x776d);
        EXPECT(gbc.pc(), 0x6959);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 015A
        gbc.setState(0x5054, 0xdd3b, 0x5bc0, 0xd888, 0x23ba, 0x9806, 0x0, 0x0);
        gbc.writeMem(0x5054, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xdd3b);
        EXPECT(gbc.pc(), 0x5056);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 015B
        gbc.setState(0x4534, 0x4f53, 0x75f0, 0x1e82, 0xfa73, 0xa018, 0x0, 0x1);
        gbc.writeMem(0x4534, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4f53);
        EXPECT(gbc.pc(), 0x4536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 015C
        gbc.setState(0x912d, 0x36be, 0xd700, 0x5774, 0xa78d, 0xebbb, 0x1, 0x1);
        gbc.writeMem(0x912d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x36be);
        EXPECT(gbc.pc(), 0x912f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x912d), 0xcb);
        EXPECT(gbc.readMem(0x912e), 0xc);
        // CB 0C 015D
        gbc.setState(0x4f7b, 0x24d8, 0x38b0, 0x8aa8, 0x4743, 0x9105, 0x0, 0x0);
        gbc.writeMem(0x4f7b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x24d8);
        EXPECT(gbc.pc(), 0x4f7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 015E
        gbc.setState(0xe43e, 0x661f, 0xcc70, 0x4c15, 0xe546, 0xb888, 0x1, 0x1);
        gbc.writeMem(0xe43e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x661f);
        EXPECT(gbc.pc(), 0xe440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe43e), 0xcb);
        EXPECT(gbc.readMem(0xe43f), 0xc);
        // CB 0C 015F
        gbc.setState(0x29c9, 0x49ce, 0xf080, 0x11ce, 0xaf77, 0xc648, 0x1, 0x1);
        gbc.writeMem(0x29c9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x49ce);
        EXPECT(gbc.pc(), 0x29cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0160
        gbc.setState(0xb81c, 0x3261, 0x1450, 0xfdf4, 0x6e19, 0x74af, 0x1, 0x0);
        gbc.writeMem(0xb81c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3261);
        EXPECT(gbc.pc(), 0xb81e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb81c), 0xcb);
        EXPECT(gbc.readMem(0xb81d), 0xc);
        // CB 0C 0161
        gbc.setState(0x4db8, 0x96d8, 0xf3d0, 0x61a1, 0xf2ad, 0x9a05, 0x0, 0x0);
        gbc.writeMem(0x4db8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x96d8);
        EXPECT(gbc.pc(), 0x4dba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0162
        gbc.setState(0xe57f, 0xd473, 0x9710, 0xd828, 0x3c7d, 0x73e3, 0x0, 0x0);
        gbc.writeMem(0xe57f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd473);
        EXPECT(gbc.pc(), 0xe581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe57f), 0xcb);
        EXPECT(gbc.readMem(0xe580), 0xc);
        // CB 0C 0163
        gbc.setState(0xcfbd, 0x86bb, 0x1e80, 0x4745, 0x44c5, 0x574e, 0x0, 0x0);
        gbc.writeMem(0xcfbd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x86bb);
        EXPECT(gbc.pc(), 0xcfbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfbd), 0xcb);
        EXPECT(gbc.readMem(0xcfbe), 0xc);
        // CB 0C 0164
        gbc.setState(0x5c8a, 0xdef4, 0x8e30, 0xc094, 0xa82, 0xc797, 0x1, 0x1);
        gbc.writeMem(0x5c8a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xdef4);
        EXPECT(gbc.pc(), 0x5c8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0165
        gbc.setState(0xca21, 0x28b8, 0xb400, 0xc190, 0xbff0, 0x3871, 0x1, 0x1);
        gbc.writeMem(0xca21, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x28b8);
        EXPECT(gbc.pc(), 0xca23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca21), 0xcb);
        EXPECT(gbc.readMem(0xca22), 0xc);
        // CB 0C 0166
        gbc.setState(0x585, 0xdf51, 0x8100, 0x74f7, 0xd597, 0xd819, 0x1, 0x1);
        gbc.writeMem(0x585, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xdf51);
        EXPECT(gbc.pc(), 0x587);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0168
        gbc.setState(0x9612, 0x2240, 0x60f0, 0x4924, 0xd199, 0x485f, 0x0, 0x1);
        gbc.writeMem(0x9612, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2240);
        EXPECT(gbc.pc(), 0x9614);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9612), 0xcb);
        EXPECT(gbc.readMem(0x9613), 0xc);
        // CB 0C 0169
        gbc.setState(0x4edf, 0x7d8a, 0x1670, 0xba78, 0x2f50, 0xe43e, 0x0, 0x1);
        gbc.writeMem(0x4edf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7d8a);
        EXPECT(gbc.pc(), 0x4ee1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 016A
        gbc.setState(0x6855, 0x5eb3, 0xcd90, 0xd1fb, 0xedd5, 0x1ce6, 0x1, 0x0);
        gbc.writeMem(0x6855, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5eb3);
        EXPECT(gbc.pc(), 0x6857);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 016B
        gbc.setState(0xdc5f, 0x5766, 0xf360, 0xb6e0, 0xc043, 0x6e82, 0x0, 0x0);
        gbc.writeMem(0xdc5f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5766);
        EXPECT(gbc.pc(), 0xdc61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc5f), 0xcb);
        EXPECT(gbc.readMem(0xdc60), 0xc);
        // CB 0C 016C
        gbc.setState(0x61b6, 0x3f09, 0x18f0, 0xf245, 0xa265, 0x5820, 0x0, 0x0);
        gbc.writeMem(0x61b6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3f09);
        EXPECT(gbc.pc(), 0x61b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 016E
        gbc.setState(0xe69c, 0xece2, 0xe390, 0xfbef, 0x114, 0xb596, 0x1, 0x0);
        gbc.writeMem(0xe69c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xece2);
        EXPECT(gbc.pc(), 0xe69e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe69c), 0xcb);
        EXPECT(gbc.readMem(0xe69d), 0xc);
        // CB 0C 0170
        gbc.setState(0x7fd6, 0x16c9, 0x19f0, 0xca2d, 0xafa0, 0x968c, 0x0, 0x0);
        gbc.writeMem(0x7fd6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x16c9);
        EXPECT(gbc.pc(), 0x7fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0171
        gbc.setState(0x3dac, 0x3fed, 0xe050, 0x418d, 0xa654, 0x35a5, 0x0, 0x1);
        gbc.writeMem(0x3dac, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3fed);
        EXPECT(gbc.pc(), 0x3dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0172
        gbc.setState(0x146c, 0xbb88, 0xf650, 0x6fa4, 0x3aa1, 0x8693, 0x1, 0x1);
        gbc.writeMem(0x146c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbb88);
        EXPECT(gbc.pc(), 0x146e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0173
        gbc.setState(0x8d9d, 0x4ebc, 0xef40, 0xc4db, 0x1b5, 0xd533, 0x0, 0x1);
        gbc.writeMem(0x8d9d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4ebc);
        EXPECT(gbc.pc(), 0x8d9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d9d), 0xcb);
        EXPECT(gbc.readMem(0x8d9e), 0xc);
        // CB 0C 0174
        gbc.setState(0x245b, 0xaca7, 0x9730, 0x2bef, 0x560b, 0x39af, 0x1, 0x0);
        gbc.writeMem(0x245b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xaca7);
        EXPECT(gbc.pc(), 0x245d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0175
        gbc.setState(0x3441, 0x77e9, 0x9da0, 0x6af5, 0xdff, 0xa8c9, 0x0, 0x0);
        gbc.writeMem(0x3441, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x77e9);
        EXPECT(gbc.pc(), 0x3443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0176
        gbc.setState(0x4df1, 0xafc5, 0x8b0, 0x25da, 0xa10, 0xb1cd, 0x1, 0x0);
        gbc.writeMem(0x4df1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xafc5);
        EXPECT(gbc.pc(), 0x4df3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0177
        gbc.setState(0xaba, 0xe3c7, 0xceb0, 0xed56, 0xb8e0, 0x95e5, 0x0, 0x0);
        gbc.writeMem(0xaba, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe3c7);
        EXPECT(gbc.pc(), 0xabc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0179
        gbc.setState(0xdd98, 0xc842, 0x210, 0x2c57, 0xd5b0, 0x76ae, 0x1, 0x0);
        gbc.writeMem(0xdd98, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc842);
        EXPECT(gbc.pc(), 0xdd9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd98), 0xcb);
        EXPECT(gbc.readMem(0xdd99), 0xc);
        // CB 0C 017A
        gbc.setState(0x4526, 0xd17, 0x5fd0, 0x3c14, 0x262, 0xd629, 0x1, 0x1);
        gbc.writeMem(0x4526, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd17);
        EXPECT(gbc.pc(), 0x4528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 017B
        gbc.setState(0x9a06, 0xb872, 0x68c0, 0x630c, 0x73d5, 0x1f89, 0x0, 0x1);
        gbc.writeMem(0x9a06, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb872);
        EXPECT(gbc.pc(), 0x9a08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a06), 0xcb);
        EXPECT(gbc.readMem(0x9a07), 0xc);
        // CB 0C 017D
        gbc.setState(0x18e1, 0xc2ca, 0x31c0, 0xda31, 0xd302, 0xfd27, 0x1, 0x0);
        gbc.writeMem(0x18e1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xc2ca);
        EXPECT(gbc.pc(), 0x18e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 017E
        gbc.setState(0x305d, 0x78c8, 0xbd20, 0xc7bc, 0xad27, 0x820c, 0x0, 0x0);
        gbc.writeMem(0x305d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x78c8);
        EXPECT(gbc.pc(), 0x305f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 017F
        gbc.setState(0xcd83, 0x9d33, 0x4ad0, 0x19d5, 0x1823, 0xed26, 0x0, 0x0);
        gbc.writeMem(0xcd83, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9d33);
        EXPECT(gbc.pc(), 0xcd85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd83), 0xcb);
        EXPECT(gbc.readMem(0xcd84), 0xc);
        // CB 0C 0180
        gbc.setState(0x50ce, 0x81d0, 0x6150, 0x71a5, 0xbc8, 0x6536, 0x0, 0x0);
        gbc.writeMem(0x50ce, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x81d0);
        EXPECT(gbc.pc(), 0x50d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0181
        gbc.setState(0xb84b, 0xa1f9, 0x6500, 0xe440, 0x329f, 0x459d, 0x1, 0x0);
        gbc.writeMem(0xb84b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa1f9);
        EXPECT(gbc.pc(), 0xb84d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb84b), 0xcb);
        EXPECT(gbc.readMem(0xb84c), 0xc);
        // CB 0C 0182
        gbc.setState(0x5fa8, 0xbc77, 0xe20, 0xe597, 0xde92, 0xfb21, 0x0, 0x1);
        gbc.writeMem(0x5fa8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbc77);
        EXPECT(gbc.pc(), 0x5faa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0183
        gbc.setState(0x64a8, 0x2f1d, 0xb490, 0x7e54, 0xc79e, 0x2525, 0x0, 0x1);
        gbc.writeMem(0x64a8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2f1d);
        EXPECT(gbc.pc(), 0x64aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0184
        gbc.setState(0x5dd4, 0xb961, 0x3610, 0x2cbb, 0x6a80, 0x2cdd, 0x0, 0x1);
        gbc.writeMem(0x5dd4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb961);
        EXPECT(gbc.pc(), 0x5dd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0185
        gbc.setState(0x47b6, 0xae14, 0x9e90, 0x5201, 0xcfb3, 0x2041, 0x0, 0x1);
        gbc.writeMem(0x47b6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xae14);
        EXPECT(gbc.pc(), 0x47b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0186
        gbc.setState(0x39aa, 0xd90, 0x5700, 0x3d21, 0xb469, 0xc40b, 0x0, 0x1);
        gbc.writeMem(0x39aa, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd90);
        EXPECT(gbc.pc(), 0x39ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0187
        gbc.setState(0x6f6f, 0x290f, 0x6340, 0x4d6a, 0xcf0e, 0xccc2, 0x1, 0x0);
        gbc.writeMem(0x6f6f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x290f);
        EXPECT(gbc.pc(), 0x6f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0188
        gbc.setState(0x59bd, 0x67e4, 0x24e0, 0x1298, 0xb073, 0x15d2, 0x1, 0x1);
        gbc.writeMem(0x59bd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x67e4);
        EXPECT(gbc.pc(), 0x59bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0189
        gbc.setState(0xb361, 0x7eff, 0x7100, 0x93cf, 0xdf09, 0x51d5, 0x0, 0x1);
        gbc.writeMem(0xb361, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7eff);
        EXPECT(gbc.pc(), 0xb363);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb361), 0xcb);
        EXPECT(gbc.readMem(0xb362), 0xc);
        // CB 0C 018A
        gbc.setState(0x3de6, 0xa559, 0x5f60, 0x8225, 0x3959, 0x27e4, 0x1, 0x1);
        gbc.writeMem(0x3de6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa559);
        EXPECT(gbc.pc(), 0x3de8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 018B
        gbc.setState(0xdb1, 0x17b2, 0xdc10, 0x5fcd, 0xeea4, 0x80e9, 0x1, 0x1);
        gbc.writeMem(0xdb1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x17b2);
        EXPECT(gbc.pc(), 0xdb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 018C
        gbc.setState(0x960a, 0xf17, 0xea60, 0xae9c, 0x24c3, 0x2fd9, 0x0, 0x1);
        gbc.writeMem(0x960a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf17);
        EXPECT(gbc.pc(), 0x960c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x960a), 0xcb);
        EXPECT(gbc.readMem(0x960b), 0xc);
        // CB 0C 018D
        gbc.setState(0x9c6c, 0xcb3, 0x560, 0xb091, 0x58f9, 0xe040, 0x1, 0x0);
        gbc.writeMem(0x9c6c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xcb3);
        EXPECT(gbc.pc(), 0x9c6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c6c), 0xcb);
        EXPECT(gbc.readMem(0x9c6d), 0xc);
        // CB 0C 018E
        gbc.setState(0x3909, 0x5627, 0x2300, 0x513e, 0xb17c, 0x539f, 0x1, 0x1);
        gbc.writeMem(0x3909, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5627);
        EXPECT(gbc.pc(), 0x390b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 018F
        gbc.setState(0x5e5b, 0xe7d2, 0x7520, 0xba95, 0x31d1, 0xafd5, 0x0, 0x1);
        gbc.writeMem(0x5e5b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe7d2);
        EXPECT(gbc.pc(), 0x5e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0190
        gbc.setState(0x7c26, 0xcef9, 0xc500, 0x5b47, 0xeb1d, 0x82c1, 0x1, 0x0);
        gbc.writeMem(0x7c26, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xcef9);
        EXPECT(gbc.pc(), 0x7c28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0191
        gbc.setState(0x975e, 0x3957, 0xeae0, 0xa507, 0x171a, 0xebe7, 0x0, 0x1);
        gbc.writeMem(0x975e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3957);
        EXPECT(gbc.pc(), 0x9760);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x975e), 0xcb);
        EXPECT(gbc.readMem(0x975f), 0xc);
        // CB 0C 0192
        gbc.setState(0x6f2c, 0xc437, 0x40c0, 0x8ead, 0x59b7, 0x127, 0x1, 0x0);
        gbc.writeMem(0x6f2c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xc437);
        EXPECT(gbc.pc(), 0x6f2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0193
        gbc.setState(0x16f1, 0x68c6, 0x9300, 0x5209, 0x8add, 0x9c9a, 0x1, 0x1);
        gbc.writeMem(0x16f1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x68c6);
        EXPECT(gbc.pc(), 0x16f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0194
        gbc.setState(0x3733, 0x64f6, 0x9140, 0x7fce, 0x8808, 0xa48c, 0x0, 0x1);
        gbc.writeMem(0x3733, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x64f6);
        EXPECT(gbc.pc(), 0x3735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0195
        gbc.setState(0xe032, 0x22da, 0xdfc0, 0x9157, 0x323a, 0x33c7, 0x0, 0x0);
        gbc.writeMem(0xe032, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x22da);
        EXPECT(gbc.pc(), 0xe034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe032), 0xcb);
        EXPECT(gbc.readMem(0xe033), 0xc);
        // CB 0C 0196
        gbc.setState(0x838e, 0xcf43, 0x85b0, 0xa5bb, 0x57bc, 0x7f77, 0x1, 0x0);
        gbc.writeMem(0x838e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xcf43);
        EXPECT(gbc.pc(), 0x8390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x838e), 0xcb);
        EXPECT(gbc.readMem(0x838f), 0xc);
        // CB 0C 0197
        gbc.setState(0xda50, 0x7a91, 0x9610, 0xcd67, 0xc3af, 0x6541, 0x1, 0x1);
        gbc.writeMem(0xda50, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7a91);
        EXPECT(gbc.pc(), 0xda52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda50), 0xcb);
        EXPECT(gbc.readMem(0xda51), 0xc);
        // CB 0C 0198
        gbc.setState(0xdcf9, 0x49b3, 0x32a0, 0x4707, 0x3534, 0x33b5, 0x0, 0x0);
        gbc.writeMem(0xdcf9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x49b3);
        EXPECT(gbc.pc(), 0xdcfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf9), 0xcb);
        EXPECT(gbc.readMem(0xdcfa), 0xc);
        // CB 0C 0199
        gbc.setState(0x450d, 0x919a, 0xd190, 0xc24, 0x7557, 0x9136, 0x0, 0x0);
        gbc.writeMem(0x450d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x919a);
        EXPECT(gbc.pc(), 0x450f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 019A
        gbc.setState(0xbf2c, 0x41cb, 0xfcd0, 0x61cf, 0xe144, 0x76f7, 0x0, 0x0);
        gbc.writeMem(0xbf2c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x41cb);
        EXPECT(gbc.pc(), 0xbf2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf2c), 0xcb);
        EXPECT(gbc.readMem(0xbf2d), 0xc);
        // CB 0C 019B
        gbc.setState(0x3f4c, 0xa7a2, 0xa4e0, 0x84ca, 0xbc65, 0xa487, 0x0, 0x1);
        gbc.writeMem(0x3f4c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa7a2);
        EXPECT(gbc.pc(), 0x3f4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 019C
        gbc.setState(0x25d, 0xc4a5, 0x9500, 0x8ab, 0x4b1c, 0xc2c5, 0x1, 0x0);
        gbc.writeMem(0x25d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc4a5);
        EXPECT(gbc.pc(), 0x25f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 019D
        gbc.setState(0x5956, 0x92b5, 0xf00, 0x75e2, 0xd734, 0x855c, 0x1, 0x0);
        gbc.writeMem(0x5956, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x92b5);
        EXPECT(gbc.pc(), 0x5958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 019E
        gbc.setState(0xaf76, 0x1379, 0x85b0, 0x2e76, 0x7bbe, 0x42ac, 0x1, 0x1);
        gbc.writeMem(0xaf76, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1379);
        EXPECT(gbc.pc(), 0xaf78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf76), 0xcb);
        EXPECT(gbc.readMem(0xaf77), 0xc);
        // CB 0C 019F
        gbc.setState(0xdcc2, 0xf9b2, 0x4f40, 0xe6e0, 0x7f80, 0x41f, 0x0, 0x0);
        gbc.writeMem(0xdcc2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf9b2);
        EXPECT(gbc.pc(), 0xdcc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcc2), 0xcb);
        EXPECT(gbc.readMem(0xdcc3), 0xc);
        // CB 0C 01A0
        gbc.setState(0xbc4c, 0x37b, 0xd770, 0x617f, 0x490c, 0x9de7, 0x0, 0x1);
        gbc.writeMem(0xbc4c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x37b);
        EXPECT(gbc.pc(), 0xbc4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc4c), 0xcb);
        EXPECT(gbc.readMem(0xbc4d), 0xc);
        // CB 0C 01A2
        gbc.setState(0xc253, 0xbc9b, 0xa9a0, 0x7686, 0xa26d, 0xe78a, 0x0, 0x1);
        gbc.writeMem(0xc253, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xbc9b);
        EXPECT(gbc.pc(), 0xc255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc253), 0xcb);
        EXPECT(gbc.readMem(0xc254), 0xc);
        // CB 0C 01A3
        gbc.setState(0xd0ab, 0x596e, 0x26e0, 0x3181, 0x4910, 0x7a9d, 0x0, 0x0);
        gbc.writeMem(0xd0ab, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x596e);
        EXPECT(gbc.pc(), 0xd0ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0ab), 0xcb);
        EXPECT(gbc.readMem(0xd0ac), 0xc);
        // CB 0C 01A4
        gbc.setState(0xd130, 0x2b5c, 0xd220, 0x546b, 0x7fc6, 0x6c3b, 0x1, 0x1);
        gbc.writeMem(0xd130, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2b5c);
        EXPECT(gbc.pc(), 0xd132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd130), 0xcb);
        EXPECT(gbc.readMem(0xd131), 0xc);
        // CB 0C 01A5
        gbc.setState(0xa846, 0x10a, 0x8430, 0x6a19, 0xf2f4, 0xe9d1, 0x0, 0x1);
        gbc.writeMem(0xa846, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x10a);
        EXPECT(gbc.pc(), 0xa848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa846), 0xcb);
        EXPECT(gbc.readMem(0xa847), 0xc);
        // CB 0C 01A6
        gbc.setState(0x7dfb, 0xeaf8, 0x3d70, 0x5fec, 0x99c2, 0x3fb4, 0x1, 0x0);
        gbc.writeMem(0x7dfb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xeaf8);
        EXPECT(gbc.pc(), 0x7dfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01A7
        gbc.setState(0xc854, 0x3aa2, 0x91e0, 0x9ed8, 0x1c1a, 0xd394, 0x1, 0x0);
        gbc.writeMem(0xc854, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3aa2);
        EXPECT(gbc.pc(), 0xc856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc854), 0xcb);
        EXPECT(gbc.readMem(0xc855), 0xc);
        // CB 0C 01A8
        gbc.setState(0xad20, 0x8d2f, 0xf9d0, 0x7a3d, 0xa914, 0x6fe5, 0x1, 0x1);
        gbc.writeMem(0xad20, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8d2f);
        EXPECT(gbc.pc(), 0xad22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad20), 0xcb);
        EXPECT(gbc.readMem(0xad21), 0xc);
        // CB 0C 01A9
        gbc.setState(0x2bd7, 0xe6d7, 0x5fe0, 0xcb2e, 0x989f, 0x3101, 0x0, 0x1);
        gbc.writeMem(0x2bd7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe6d7);
        EXPECT(gbc.pc(), 0x2bd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01AB
        gbc.setState(0xbfae, 0xdbb9, 0x81b0, 0xfeca, 0x7522, 0x4ec8, 0x1, 0x1);
        gbc.writeMem(0xbfae, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xdbb9);
        EXPECT(gbc.pc(), 0xbfb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfae), 0xcb);
        EXPECT(gbc.readMem(0xbfaf), 0xc);
        // CB 0C 01AC
        gbc.setState(0x6da8, 0xff21, 0xcc0, 0x722d, 0x317, 0xd09b, 0x1, 0x1);
        gbc.writeMem(0x6da8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xff21);
        EXPECT(gbc.pc(), 0x6daa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01AD
        gbc.setState(0x9082, 0x3c70, 0xe3c0, 0x421, 0xbcb4, 0xeef7, 0x1, 0x1);
        gbc.writeMem(0x9082, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3c70);
        EXPECT(gbc.pc(), 0x9084);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9082), 0xcb);
        EXPECT(gbc.readMem(0x9083), 0xc);
        // CB 0C 01AE
        gbc.setState(0xd250, 0x9e2d, 0xf510, 0x435d, 0x4f1e, 0xb0b3, 0x0, 0x0);
        gbc.writeMem(0xd250, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9e2d);
        EXPECT(gbc.pc(), 0xd252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd250), 0xcb);
        EXPECT(gbc.readMem(0xd251), 0xc);
        // CB 0C 01AF
        gbc.setState(0xdcbc, 0xf79, 0xdc40, 0xfe4c, 0xc116, 0xe44c, 0x1, 0x0);
        gbc.writeMem(0xdcbc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf79);
        EXPECT(gbc.pc(), 0xdcbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcbc), 0xcb);
        EXPECT(gbc.readMem(0xdcbd), 0xc);
        // CB 0C 01B0
        gbc.setState(0xa57, 0xd047, 0x72a0, 0x8333, 0x481, 0x27bb, 0x0, 0x0);
        gbc.writeMem(0xa57, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd047);
        EXPECT(gbc.pc(), 0xa59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01B1
        gbc.setState(0x6387, 0x133f, 0x8d0, 0x46e9, 0x4556, 0xcead, 0x0, 0x0);
        gbc.writeMem(0x6387, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x133f);
        EXPECT(gbc.pc(), 0x6389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01B2
        gbc.setState(0x80da, 0xbd0d, 0x13e0, 0x421, 0x3867, 0x8730, 0x1, 0x1);
        gbc.writeMem(0x80da, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xbd0d);
        EXPECT(gbc.pc(), 0x80dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80da), 0xcb);
        EXPECT(gbc.readMem(0x80db), 0xc);
        // CB 0C 01B3
        gbc.setState(0x7f90, 0xa9c6, 0x78b0, 0x5aa6, 0x106c, 0xe0c3, 0x0, 0x0);
        gbc.writeMem(0x7f90, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa9c6);
        EXPECT(gbc.pc(), 0x7f92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01B4
        gbc.setState(0x7a69, 0xd6e, 0xc110, 0x8f13, 0x8c1f, 0xf682, 0x1, 0x0);
        gbc.writeMem(0x7a69, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd6e);
        EXPECT(gbc.pc(), 0x7a6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01B5
        gbc.setState(0xb92f, 0x86a2, 0x6b10, 0x10cd, 0x91d9, 0xa502, 0x0, 0x1);
        gbc.writeMem(0xb92f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x86a2);
        EXPECT(gbc.pc(), 0xb931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb92f), 0xcb);
        EXPECT(gbc.readMem(0xb930), 0xc);
        // CB 0C 01B6
        gbc.setState(0xa0d5, 0xb49e, 0x7f70, 0xdd49, 0xa71, 0x436d, 0x1, 0x0);
        gbc.writeMem(0xa0d5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb49e);
        EXPECT(gbc.pc(), 0xa0d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d5), 0xcb);
        EXPECT(gbc.readMem(0xa0d6), 0xc);
        // CB 0C 01B7
        gbc.setState(0x72e8, 0x1128, 0x9600, 0x267d, 0xe1bb, 0xfd11, 0x1, 0x0);
        gbc.writeMem(0x72e8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1128);
        EXPECT(gbc.pc(), 0x72ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01B9
        gbc.setState(0xae99, 0x8810, 0x7650, 0x7e8f, 0x4082, 0x11ca, 0x0, 0x0);
        gbc.writeMem(0xae99, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8810);
        EXPECT(gbc.pc(), 0xae9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae99), 0xcb);
        EXPECT(gbc.readMem(0xae9a), 0xc);
        // CB 0C 01BA
        gbc.setState(0x323e, 0x2e6b, 0xe160, 0xc154, 0x37a2, 0x9c46, 0x0, 0x1);
        gbc.writeMem(0x323e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2e6b);
        EXPECT(gbc.pc(), 0x3240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01BC
        gbc.setState(0xbeab, 0x69f3, 0xe5c0, 0xfd9b, 0xadbd, 0x23e3, 0x0, 0x0);
        gbc.writeMem(0xbeab, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x69f3);
        EXPECT(gbc.pc(), 0xbead);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeab), 0xcb);
        EXPECT(gbc.readMem(0xbeac), 0xc);
        // CB 0C 01BD
        gbc.setState(0xcf42, 0x43c0, 0xbfb0, 0x720d, 0x2a28, 0x8b90, 0x0, 0x1);
        gbc.writeMem(0xcf42, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x43c0);
        EXPECT(gbc.pc(), 0xcf44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf42), 0xcb);
        EXPECT(gbc.readMem(0xcf43), 0xc);
        // CB 0C 01BE
        gbc.setState(0x21b4, 0x4174, 0xa5c0, 0xea23, 0x672a, 0xfbfc, 0x1, 0x1);
        gbc.writeMem(0x21b4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4174);
        EXPECT(gbc.pc(), 0x21b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01BF
        gbc.setState(0x1011, 0x487, 0x16a0, 0xd7a2, 0x8aea, 0x6ddc, 0x0, 0x1);
        gbc.writeMem(0x1011, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x487);
        EXPECT(gbc.pc(), 0x1013);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01C0
        gbc.setState(0x79e9, 0xa2cb, 0x19a0, 0x15a0, 0x959e, 0xabac, 0x1, 0x1);
        gbc.writeMem(0x79e9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa2cb);
        EXPECT(gbc.pc(), 0x79eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01C1
        gbc.setState(0x45f8, 0x6af7, 0x9480, 0x592e, 0xe612, 0x9848, 0x1, 0x1);
        gbc.writeMem(0x45f8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6af7);
        EXPECT(gbc.pc(), 0x45fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01C2
        gbc.setState(0x41d2, 0x53c9, 0x5ab0, 0xd01f, 0xb862, 0x54ab, 0x0, 0x0);
        gbc.writeMem(0x41d2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x53c9);
        EXPECT(gbc.pc(), 0x41d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01C3
        gbc.setState(0x368d, 0x8504, 0xf6f0, 0xc5a, 0xcd3d, 0x7b1c, 0x1, 0x0);
        gbc.writeMem(0x368d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8504);
        EXPECT(gbc.pc(), 0x368f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01C4
        gbc.setState(0x1e8e, 0x1930, 0x67a0, 0x1c97, 0xd8df, 0x6280, 0x1, 0x1);
        gbc.writeMem(0x1e8e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1930);
        EXPECT(gbc.pc(), 0x1e90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01C5
        gbc.setState(0xdb91, 0x1966, 0xd240, 0x2906, 0x7721, 0x4091, 0x1, 0x0);
        gbc.writeMem(0xdb91, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1966);
        EXPECT(gbc.pc(), 0xdb93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb91), 0xcb);
        EXPECT(gbc.readMem(0xdb92), 0xc);
        // CB 0C 01C6
        gbc.setState(0x5940, 0x22f1, 0x4760, 0x6d22, 0x18a9, 0xfda2, 0x0, 0x0);
        gbc.writeMem(0x5940, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x22f1);
        EXPECT(gbc.pc(), 0x5942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01C7
        gbc.setState(0x5613, 0x6be4, 0x25b0, 0x78de, 0x3310, 0x3aa4, 0x1, 0x1);
        gbc.writeMem(0x5613, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6be4);
        EXPECT(gbc.pc(), 0x5615);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01C8
        gbc.setState(0xa418, 0xda37, 0x1e70, 0xeb43, 0xb033, 0x38c6, 0x1, 0x0);
        gbc.writeMem(0xa418, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xda37);
        EXPECT(gbc.pc(), 0xa41a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa418), 0xcb);
        EXPECT(gbc.readMem(0xa419), 0xc);
        // CB 0C 01C9
        gbc.setState(0x47fe, 0xca4a, 0x130, 0x2abe, 0x1e72, 0x9480, 0x0, 0x1);
        gbc.writeMem(0x47fe, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xca4a);
        EXPECT(gbc.pc(), 0x4800);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01CA
        gbc.setState(0x1754, 0x58c0, 0x1ab0, 0x42d0, 0x4c64, 0xdc88, 0x0, 0x0);
        gbc.writeMem(0x1754, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x58c0);
        EXPECT(gbc.pc(), 0x1756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01CC
        gbc.setState(0x1c02, 0x7d68, 0x3190, 0x39c5, 0x37c6, 0xf050, 0x1, 0x0);
        gbc.writeMem(0x1c02, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7d68);
        EXPECT(gbc.pc(), 0x1c04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01CD
        gbc.setState(0xd95b, 0xaa96, 0x43f0, 0xb2e7, 0xd7fe, 0xfed, 0x1, 0x0);
        gbc.writeMem(0xd95b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xaa96);
        EXPECT(gbc.pc(), 0xd95d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd95b), 0xcb);
        EXPECT(gbc.readMem(0xd95c), 0xc);
        // CB 0C 01CE
        gbc.setState(0x7476, 0x8c4e, 0x8b40, 0x6e94, 0x4080, 0x8919, 0x0, 0x0);
        gbc.writeMem(0x7476, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8c4e);
        EXPECT(gbc.pc(), 0x7478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01CF
        gbc.setState(0xeb77, 0xb126, 0x9b50, 0x2f51, 0x24d1, 0x28c1, 0x0, 0x0);
        gbc.writeMem(0xeb77, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb126);
        EXPECT(gbc.pc(), 0xeb79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb77), 0xcb);
        EXPECT(gbc.readMem(0xeb78), 0xc);
        // CB 0C 01D0
        gbc.setState(0x388c, 0xcac0, 0x61d0, 0x25d6, 0x135d, 0xe055, 0x0, 0x0);
        gbc.writeMem(0x388c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xcac0);
        EXPECT(gbc.pc(), 0x388e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01D1
        gbc.setState(0x170, 0xb898, 0xbcd0, 0xb9d8, 0x8d3, 0x8cd2, 0x1, 0x1);
        gbc.writeMem(0x170, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb898);
        EXPECT(gbc.pc(), 0x172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01D2
        gbc.setState(0xa80e, 0xe8aa, 0x3c40, 0x23a6, 0xe1fe, 0x2c87, 0x1, 0x0);
        gbc.writeMem(0xa80e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe8aa);
        EXPECT(gbc.pc(), 0xa810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa80e), 0xcb);
        EXPECT(gbc.readMem(0xa80f), 0xc);
        // CB 0C 01D3
        gbc.setState(0x624c, 0x92c8, 0x5ce0, 0x36ee, 0x111c, 0x4848, 0x0, 0x0);
        gbc.writeMem(0x624c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x92c8);
        EXPECT(gbc.pc(), 0x624e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01D4
        gbc.setState(0xb112, 0x76d1, 0x1700, 0x3ce6, 0x1359, 0xc6ee, 0x1, 0x1);
        gbc.writeMem(0xb112, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x76d1);
        EXPECT(gbc.pc(), 0xb114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb112), 0xcb);
        EXPECT(gbc.readMem(0xb113), 0xc);
        // CB 0C 01D5
        gbc.setState(0xcf84, 0x9ddc, 0x5c50, 0x2ae7, 0x3dc1, 0xb261, 0x0, 0x1);
        gbc.writeMem(0xcf84, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9ddc);
        EXPECT(gbc.pc(), 0xcf86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf84), 0xcb);
        EXPECT(gbc.readMem(0xcf85), 0xc);
        // CB 0C 01D6
        gbc.setState(0xea8e, 0xfa68, 0x6180, 0x6cc7, 0xf866, 0xd9a1, 0x1, 0x0);
        gbc.writeMem(0xea8e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xfa68);
        EXPECT(gbc.pc(), 0xea90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea8e), 0xcb);
        EXPECT(gbc.readMem(0xea8f), 0xc);
        // CB 0C 01D7
        gbc.setState(0x5449, 0xe112, 0x1b20, 0x8ff3, 0xbd2d, 0x2171, 0x1, 0x1);
        gbc.writeMem(0x5449, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe112);
        EXPECT(gbc.pc(), 0x544b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01D8
        gbc.setState(0xadf8, 0x6646, 0x6de0, 0xa19c, 0x3875, 0x12f9, 0x0, 0x1);
        gbc.writeMem(0xadf8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6646);
        EXPECT(gbc.pc(), 0xadfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadf8), 0xcb);
        EXPECT(gbc.readMem(0xadf9), 0xc);
        // CB 0C 01D9
        gbc.setState(0x76ed, 0x202f, 0x98f0, 0xc6de, 0xfd48, 0x55c, 0x1, 0x1);
        gbc.writeMem(0x76ed, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x202f);
        EXPECT(gbc.pc(), 0x76ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01DA
        gbc.setState(0xd167, 0xbe4a, 0xd930, 0xe119, 0x248, 0xc3b6, 0x1, 0x1);
        gbc.writeMem(0xd167, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xbe4a);
        EXPECT(gbc.pc(), 0xd169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd167), 0xcb);
        EXPECT(gbc.readMem(0xd168), 0xc);
        // CB 0C 01DB
        gbc.setState(0x3f1c, 0x7d36, 0x61d0, 0xbc38, 0x2f2b, 0x16d2, 0x0, 0x1);
        gbc.writeMem(0x3f1c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7d36);
        EXPECT(gbc.pc(), 0x3f1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01DC
        gbc.setState(0x6ba1, 0x5943, 0x9110, 0xd0b6, 0xb108, 0xde03, 0x1, 0x0);
        gbc.writeMem(0x6ba1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5943);
        EXPECT(gbc.pc(), 0x6ba3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01DD
        gbc.setState(0x7297, 0x2b9, 0xe4d0, 0xa62, 0xc3b0, 0x981d, 0x0, 0x1);
        gbc.writeMem(0x7297, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2b9);
        EXPECT(gbc.pc(), 0x7299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01DE
        gbc.setState(0xc4c2, 0x8713, 0xf5e0, 0x88d9, 0x7887, 0x30fd, 0x0, 0x0);
        gbc.writeMem(0xc4c2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8713);
        EXPECT(gbc.pc(), 0xc4c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4c2), 0xcb);
        EXPECT(gbc.readMem(0xc4c3), 0xc);
        // CB 0C 01DF
        gbc.setState(0x618d, 0x70b7, 0x3f40, 0x58e5, 0x2a43, 0x3a9a, 0x0, 0x1);
        gbc.writeMem(0x618d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x70b7);
        EXPECT(gbc.pc(), 0x618f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01E0
        gbc.setState(0x5d41, 0x4216, 0x6b90, 0x7ce1, 0xb1ea, 0x3de9, 0x1, 0x1);
        gbc.writeMem(0x5d41, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4216);
        EXPECT(gbc.pc(), 0x5d43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01E1
        gbc.setState(0xd985, 0x6b1a, 0x9d70, 0x24a8, 0xa764, 0xe5, 0x0, 0x0);
        gbc.writeMem(0xd985, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6b1a);
        EXPECT(gbc.pc(), 0xd987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd985), 0xcb);
        EXPECT(gbc.readMem(0xd986), 0xc);
        // CB 0C 01E2
        gbc.setState(0x525f, 0xaf8d, 0x5410, 0xfc57, 0xc0ca, 0x5fec, 0x0, 0x0);
        gbc.writeMem(0x525f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xaf8d);
        EXPECT(gbc.pc(), 0x5261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01E3
        gbc.setState(0x2866, 0xe93f, 0xfd20, 0x9bab, 0x64a, 0x7e5f, 0x1, 0x1);
        gbc.writeMem(0x2866, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe93f);
        EXPECT(gbc.pc(), 0x2868);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01E4
        gbc.setState(0xcd5, 0x39eb, 0x80d0, 0xe93f, 0xc12e, 0x9281, 0x1, 0x0);
        gbc.writeMem(0xcd5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x39eb);
        EXPECT(gbc.pc(), 0xcd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01E5
        gbc.setState(0x6fbe, 0x8430, 0x8600, 0xe04d, 0x675d, 0xe74b, 0x1, 0x0);
        gbc.writeMem(0x6fbe, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8430);
        EXPECT(gbc.pc(), 0x6fc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01E6
        gbc.setState(0xa362, 0xb92b, 0x2930, 0xb726, 0xe4a9, 0xfc8, 0x1, 0x0);
        gbc.writeMem(0xa362, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb92b);
        EXPECT(gbc.pc(), 0xa364);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa362), 0xcb);
        EXPECT(gbc.readMem(0xa363), 0xc);
        // CB 0C 01E7
        gbc.setState(0x24ed, 0x8d37, 0xf910, 0x615a, 0x352f, 0x92db, 0x0, 0x0);
        gbc.writeMem(0x24ed, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8d37);
        EXPECT(gbc.pc(), 0x24ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01E8
        gbc.setState(0x7ec7, 0x88cb, 0x26d0, 0xedd2, 0x4848, 0xfcef, 0x1, 0x1);
        gbc.writeMem(0x7ec7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x88cb);
        EXPECT(gbc.pc(), 0x7ec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01E9
        gbc.setState(0xd54a, 0x408b, 0xe5e0, 0x78fe, 0xc622, 0x376a, 0x1, 0x1);
        gbc.writeMem(0xd54a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x408b);
        EXPECT(gbc.pc(), 0xd54c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd54a), 0xcb);
        EXPECT(gbc.readMem(0xd54b), 0xc);
        // CB 0C 01EA
        gbc.setState(0x1063, 0x2d96, 0x96f0, 0xf1f8, 0xde23, 0xf95c, 0x0, 0x1);
        gbc.writeMem(0x1063, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2d96);
        EXPECT(gbc.pc(), 0x1065);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01EB
        gbc.setState(0xaa44, 0xa971, 0x4150, 0xd165, 0x5134, 0xe585, 0x0, 0x0);
        gbc.writeMem(0xaa44, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa971);
        EXPECT(gbc.pc(), 0xaa46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa44), 0xcb);
        EXPECT(gbc.readMem(0xaa45), 0xc);
        // CB 0C 01EC
        gbc.setState(0x6681, 0xba33, 0xf6c0, 0x3202, 0x6bc9, 0xaa04, 0x1, 0x0);
        gbc.writeMem(0x6681, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xba33);
        EXPECT(gbc.pc(), 0x6683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01ED
        gbc.setState(0x91, 0x549f, 0xde60, 0x7ee3, 0xfab4, 0xb5e, 0x1, 0x0);
        gbc.writeMem(0x91, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x549f);
        EXPECT(gbc.pc(), 0x93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01EE
        gbc.setState(0xc1ad, 0x5b13, 0x3f50, 0x5df5, 0xf0e7, 0x8554, 0x1, 0x1);
        gbc.writeMem(0xc1ad, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5b13);
        EXPECT(gbc.pc(), 0xc1af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ad), 0xcb);
        EXPECT(gbc.readMem(0xc1ae), 0xc);
        // CB 0C 01EF
        gbc.setState(0x981b, 0x3cc4, 0xc370, 0x91f0, 0x551, 0xd0c7, 0x1, 0x1);
        gbc.writeMem(0x981b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3cc4);
        EXPECT(gbc.pc(), 0x981d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x981b), 0xcb);
        EXPECT(gbc.readMem(0x981c), 0xc);
        // CB 0C 01F0
        gbc.setState(0x3212, 0x3cc, 0xd380, 0x671, 0xf211, 0xcad8, 0x0, 0x1);
        gbc.writeMem(0x3212, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3cc);
        EXPECT(gbc.pc(), 0x3214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01F1
        gbc.setState(0xc4de, 0x534a, 0x7a70, 0x4b5c, 0x60b0, 0xdafa, 0x0, 0x0);
        gbc.writeMem(0xc4de, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x534a);
        EXPECT(gbc.pc(), 0xc4e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4de), 0xcb);
        EXPECT(gbc.readMem(0xc4df), 0xc);
        // CB 0C 01F2
        gbc.setState(0x9f0d, 0x5b51, 0x2ef0, 0xeecb, 0x5bbc, 0x53d4, 0x0, 0x1);
        gbc.writeMem(0x9f0d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5b51);
        EXPECT(gbc.pc(), 0x9f0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f0d), 0xcb);
        EXPECT(gbc.readMem(0x9f0e), 0xc);
        // CB 0C 01F3
        gbc.setState(0xb72c, 0xd565, 0x610, 0x48e5, 0x5638, 0xc460, 0x1, 0x0);
        gbc.writeMem(0xb72c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd565);
        EXPECT(gbc.pc(), 0xb72e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb72c), 0xcb);
        EXPECT(gbc.readMem(0xb72d), 0xc);
        // CB 0C 01F4
        gbc.setState(0x8839, 0x5246, 0x38a0, 0xfc36, 0x6b34, 0xa79c, 0x1, 0x1);
        gbc.writeMem(0x8839, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5246);
        EXPECT(gbc.pc(), 0x883b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8839), 0xcb);
        EXPECT(gbc.readMem(0x883a), 0xc);
        // CB 0C 01F5
        gbc.setState(0x4f6f, 0x72f0, 0x1b20, 0xbd0f, 0x6cf2, 0xe657, 0x1, 0x0);
        gbc.writeMem(0x4f6f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x72f0);
        EXPECT(gbc.pc(), 0x4f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01F6
        gbc.setState(0xd16d, 0xd2e7, 0xa200, 0xc8d1, 0x9528, 0x4908, 0x1, 0x0);
        gbc.writeMem(0xd16d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd2e7);
        EXPECT(gbc.pc(), 0xd16f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd16d), 0xcb);
        EXPECT(gbc.readMem(0xd16e), 0xc);
        // CB 0C 01F7
        gbc.setState(0x334f, 0x9180, 0x9e70, 0x5a56, 0x462e, 0xb3a3, 0x0, 0x0);
        gbc.writeMem(0x334f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9180);
        EXPECT(gbc.pc(), 0x3351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01F8
        gbc.setState(0x26f5, 0x2f3b, 0x5f90, 0x5ddf, 0x77ee, 0x1d79, 0x1, 0x1);
        gbc.writeMem(0x26f5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2f3b);
        EXPECT(gbc.pc(), 0x26f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01F9
        gbc.setState(0x39d6, 0xfdc3, 0x380, 0x357b, 0x8ebf, 0x199, 0x0, 0x0);
        gbc.writeMem(0x39d6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfdc3);
        EXPECT(gbc.pc(), 0x39d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01FA
        gbc.setState(0x221e, 0x2a00, 0xb8d0, 0x27a1, 0x3c71, 0x51e2, 0x0, 0x0);
        gbc.writeMem(0x221e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2a00);
        EXPECT(gbc.pc(), 0x2220);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01FB
        gbc.setState(0x71a5, 0x7ec, 0xd890, 0x2e1d, 0x40c6, 0xeb4c, 0x1, 0x1);
        gbc.writeMem(0x71a5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7ec);
        EXPECT(gbc.pc(), 0x71a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 01FC
        gbc.setState(0x7037, 0xdda9, 0xc7e0, 0xea28, 0xcf90, 0x7484, 0x1, 0x1);
        gbc.writeMem(0x7037, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xdda9);
        EXPECT(gbc.pc(), 0x7039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 01FE
        gbc.setState(0xadac, 0x263a, 0x65c0, 0x94a5, 0x1653, 0x3b4f, 0x0, 0x0);
        gbc.writeMem(0xadac, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x263a);
        EXPECT(gbc.pc(), 0xadae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadac), 0xcb);
        EXPECT(gbc.readMem(0xadad), 0xc);
        // CB 0C 01FF
        gbc.setState(0x7e62, 0xa52a, 0x1ab0, 0xbc75, 0xbcda, 0xf1dd, 0x1, 0x1);
        gbc.writeMem(0x7e62, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa52a);
        EXPECT(gbc.pc(), 0x7e64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0200
        gbc.setState(0x3d95, 0x7b55, 0xe8e0, 0x19ed, 0x7608, 0x7625, 0x0, 0x0);
        gbc.writeMem(0x3d95, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7b55);
        EXPECT(gbc.pc(), 0x3d97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0201
        gbc.setState(0x2de8, 0xb863, 0xeda0, 0xd07, 0x7927, 0x6cbd, 0x0, 0x1);
        gbc.writeMem(0x2de8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb863);
        EXPECT(gbc.pc(), 0x2dea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0202
        gbc.setState(0x870c, 0xe523, 0xc050, 0xb5e, 0xe78c, 0x6683, 0x0, 0x0);
        gbc.writeMem(0x870c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe523);
        EXPECT(gbc.pc(), 0x870e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x870c), 0xcb);
        EXPECT(gbc.readMem(0x870d), 0xc);
        // CB 0C 0203
        gbc.setState(0xa6cc, 0x86c7, 0x6ab0, 0x6aeb, 0x5e36, 0x1c48, 0x1, 0x0);
        gbc.writeMem(0xa6cc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x86c7);
        EXPECT(gbc.pc(), 0xa6ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6cc), 0xcb);
        EXPECT(gbc.readMem(0xa6cd), 0xc);
        // CB 0C 0204
        gbc.setState(0x1923, 0x76b9, 0x3100, 0xe31b, 0x666c, 0xcc81, 0x0, 0x1);
        gbc.writeMem(0x1923, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x76b9);
        EXPECT(gbc.pc(), 0x1925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0205
        gbc.setState(0x1eb9, 0x99e0, 0x3610, 0x1fbe, 0x3df3, 0xb176, 0x1, 0x1);
        gbc.writeMem(0x1eb9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x99e0);
        EXPECT(gbc.pc(), 0x1ebb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0206
        gbc.setState(0x48e0, 0xc10e, 0xfad0, 0x80a, 0xcbbf, 0xb0f3, 0x1, 0x1);
        gbc.writeMem(0x48e0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc10e);
        EXPECT(gbc.pc(), 0x48e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0207
        gbc.setState(0x8611, 0x2c51, 0x1b80, 0x7756, 0xb15c, 0x817e, 0x1, 0x0);
        gbc.writeMem(0x8611, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2c51);
        EXPECT(gbc.pc(), 0x8613);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8611), 0xcb);
        EXPECT(gbc.readMem(0x8612), 0xc);
        // CB 0C 0208
        gbc.setState(0xbf7e, 0x9ee5, 0x3d00, 0xddd2, 0x6f6e, 0xa753, 0x1, 0x1);
        gbc.writeMem(0xbf7e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9ee5);
        EXPECT(gbc.pc(), 0xbf80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf7e), 0xcb);
        EXPECT(gbc.readMem(0xbf7f), 0xc);
        // CB 0C 0209
        gbc.setState(0x1039, 0x2dff, 0xdb20, 0xbe90, 0x70a, 0xb095, 0x1, 0x1);
        gbc.writeMem(0x1039, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2dff);
        EXPECT(gbc.pc(), 0x103b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 020A
        gbc.setState(0x2310, 0xfd1b, 0x770, 0xcbbb, 0xf26a, 0x9a32, 0x1, 0x0);
        gbc.writeMem(0x2310, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xfd1b);
        EXPECT(gbc.pc(), 0x2312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 020B
        gbc.setState(0x78f0, 0xdb28, 0xc4f0, 0x5088, 0x9681, 0x583f, 0x0, 0x1);
        gbc.writeMem(0x78f0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xdb28);
        EXPECT(gbc.pc(), 0x78f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 020C
        gbc.setState(0x8bfa, 0x69ca, 0xa1f0, 0x7e0, 0xfb74, 0xa6a7, 0x0, 0x0);
        gbc.writeMem(0x8bfa, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x69ca);
        EXPECT(gbc.pc(), 0x8bfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bfa), 0xcb);
        EXPECT(gbc.readMem(0x8bfb), 0xc);
        // CB 0C 020D
        gbc.setState(0x4048, 0x728, 0x8090, 0x255b, 0x7d02, 0xac50, 0x1, 0x1);
        gbc.writeMem(0x4048, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x728);
        EXPECT(gbc.pc(), 0x404a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 020E
        gbc.setState(0x9650, 0xa5b3, 0xcbf0, 0x13f9, 0x1057, 0x13ac, 0x0, 0x1);
        gbc.writeMem(0x9650, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa5b3);
        EXPECT(gbc.pc(), 0x9652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9650), 0xcb);
        EXPECT(gbc.readMem(0x9651), 0xc);
        // CB 0C 020F
        gbc.setState(0xe0e3, 0xb6e8, 0x1b70, 0xa36f, 0xe52f, 0x3c7e, 0x0, 0x0);
        gbc.writeMem(0xe0e3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb6e8);
        EXPECT(gbc.pc(), 0xe0e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0e3), 0xcb);
        EXPECT(gbc.readMem(0xe0e4), 0xc);
        // CB 0C 0210
        gbc.setState(0x51e5, 0x25db, 0x1840, 0x7a2d, 0x55f7, 0xd9b1, 0x0, 0x0);
        gbc.writeMem(0x51e5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x25db);
        EXPECT(gbc.pc(), 0x51e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0211
        gbc.setState(0xee66, 0xf3a8, 0xad10, 0x3675, 0x80a0, 0x65af, 0x1, 0x1);
        gbc.writeMem(0xee66, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf3a8);
        EXPECT(gbc.pc(), 0xee68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee66), 0xcb);
        EXPECT(gbc.readMem(0xee67), 0xc);
        // CB 0C 0212
        gbc.setState(0xac73, 0x11b5, 0xa5c0, 0x27e0, 0x1539, 0xa210, 0x0, 0x0);
        gbc.writeMem(0xac73, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x11b5);
        EXPECT(gbc.pc(), 0xac75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac73), 0xcb);
        EXPECT(gbc.readMem(0xac74), 0xc);
        // CB 0C 0213
        gbc.setState(0xeb82, 0xd852, 0x5c20, 0xafa5, 0x903e, 0xbfcf, 0x1, 0x1);
        gbc.writeMem(0xeb82, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd852);
        EXPECT(gbc.pc(), 0xeb84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb82), 0xcb);
        EXPECT(gbc.readMem(0xeb83), 0xc);
        // CB 0C 0214
        gbc.setState(0xd6a3, 0x3cf6, 0x6540, 0x53ff, 0x3c98, 0x2c26, 0x0, 0x1);
        gbc.writeMem(0xd6a3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3cf6);
        EXPECT(gbc.pc(), 0xd6a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6a3), 0xcb);
        EXPECT(gbc.readMem(0xd6a4), 0xc);
        // CB 0C 0215
        gbc.setState(0x74e1, 0xfa33, 0x8c90, 0x871c, 0x49c1, 0xb5c0, 0x1, 0x0);
        gbc.writeMem(0x74e1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfa33);
        EXPECT(gbc.pc(), 0x74e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0216
        gbc.setState(0x7ee6, 0xe83e, 0x2990, 0x18c9, 0x6553, 0x8cdd, 0x1, 0x0);
        gbc.writeMem(0x7ee6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe83e);
        EXPECT(gbc.pc(), 0x7ee8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0217
        gbc.setState(0x1179, 0x81a7, 0x47a0, 0x74c1, 0x91f4, 0xd79f, 0x1, 0x0);
        gbc.writeMem(0x1179, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x81a7);
        EXPECT(gbc.pc(), 0x117b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0218
        gbc.setState(0x5c4f, 0xf4e6, 0x7740, 0x910e, 0x85d7, 0x18f2, 0x1, 0x0);
        gbc.writeMem(0x5c4f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf4e6);
        EXPECT(gbc.pc(), 0x5c51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0219
        gbc.setState(0xb693, 0xc4e, 0x76a0, 0xfc03, 0xedd6, 0x504e, 0x0, 0x1);
        gbc.writeMem(0xb693, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc4e);
        EXPECT(gbc.pc(), 0xb695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb693), 0xcb);
        EXPECT(gbc.readMem(0xb694), 0xc);
        // CB 0C 021A
        gbc.setState(0x764d, 0x4a24, 0xc0c0, 0x61c5, 0xbb91, 0xb294, 0x0, 0x0);
        gbc.writeMem(0x764d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4a24);
        EXPECT(gbc.pc(), 0x764f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 021B
        gbc.setState(0x7b58, 0x11db, 0x8040, 0xf188, 0x8a7d, 0xfa56, 0x0, 0x0);
        gbc.writeMem(0x7b58, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x11db);
        EXPECT(gbc.pc(), 0x7b5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 021C
        gbc.setState(0x5523, 0x9d6f, 0xe900, 0x693b, 0x2a94, 0x688c, 0x1, 0x1);
        gbc.writeMem(0x5523, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9d6f);
        EXPECT(gbc.pc(), 0x5525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 021D
        gbc.setState(0xd56a, 0x11dd, 0x6520, 0x5391, 0xd322, 0x80cc, 0x0, 0x0);
        gbc.writeMem(0xd56a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x11dd);
        EXPECT(gbc.pc(), 0xd56c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd56a), 0xcb);
        EXPECT(gbc.readMem(0xd56b), 0xc);
        // CB 0C 021E
        gbc.setState(0x921f, 0x8e0a, 0xf130, 0xcf21, 0xfde6, 0xba6d, 0x1, 0x0);
        gbc.writeMem(0x921f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8e0a);
        EXPECT(gbc.pc(), 0x9221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x921f), 0xcb);
        EXPECT(gbc.readMem(0x9220), 0xc);
        // CB 0C 021F
        gbc.setState(0xd800, 0x84f8, 0x3920, 0x9e02, 0xe4e, 0x313e, 0x1, 0x1);
        gbc.writeMem(0xd800, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x84f8);
        EXPECT(gbc.pc(), 0xd802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd800), 0xcb);
        EXPECT(gbc.readMem(0xd801), 0xc);
        // CB 0C 0220
        gbc.setState(0x66b9, 0xf51a, 0xa7c0, 0xe244, 0x1f12, 0x6d99, 0x0, 0x0);
        gbc.writeMem(0x66b9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf51a);
        EXPECT(gbc.pc(), 0x66bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0221
        gbc.setState(0x58c7, 0xd8e3, 0x3fb0, 0xb6df, 0x9635, 0xb149, 0x0, 0x0);
        gbc.writeMem(0x58c7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd8e3);
        EXPECT(gbc.pc(), 0x58c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0222
        gbc.setState(0x98ea, 0xe8d, 0x9300, 0x9479, 0xd03c, 0x1b32, 0x1, 0x0);
        gbc.writeMem(0x98ea, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe8d);
        EXPECT(gbc.pc(), 0x98ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ea), 0xcb);
        EXPECT(gbc.readMem(0x98eb), 0xc);
        // CB 0C 0223
        gbc.setState(0xa47e, 0x6717, 0x8c50, 0x6441, 0x30c9, 0x2e4b, 0x1, 0x0);
        gbc.writeMem(0xa47e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6717);
        EXPECT(gbc.pc(), 0xa480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa47e), 0xcb);
        EXPECT(gbc.readMem(0xa47f), 0xc);
        // CB 0C 0224
        gbc.setState(0x56a5, 0x999b, 0x1c80, 0x2b55, 0x49e3, 0xd22b, 0x1, 0x0);
        gbc.writeMem(0x56a5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x999b);
        EXPECT(gbc.pc(), 0x56a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0225
        gbc.setState(0x442c, 0x1311, 0xd460, 0xb9be, 0xfe40, 0xa1df, 0x1, 0x0);
        gbc.writeMem(0x442c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1311);
        EXPECT(gbc.pc(), 0x442e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0226
        gbc.setState(0x5f04, 0xb400, 0x4a50, 0xa97e, 0xe14c, 0x2677, 0x1, 0x0);
        gbc.writeMem(0x5f04, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb400);
        EXPECT(gbc.pc(), 0x5f06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0228
        gbc.setState(0xaf29, 0x2a1d, 0x1c90, 0x9463, 0x920d, 0x72be, 0x0, 0x0);
        gbc.writeMem(0xaf29, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2a1d);
        EXPECT(gbc.pc(), 0xaf2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf29), 0xcb);
        EXPECT(gbc.readMem(0xaf2a), 0xc);
        // CB 0C 0229
        gbc.setState(0x2c9f, 0x992c, 0xe7a0, 0xa269, 0xd959, 0x99b1, 0x1, 0x1);
        gbc.writeMem(0x2c9f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x992c);
        EXPECT(gbc.pc(), 0x2ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 022A
        gbc.setState(0xe4fd, 0xd2ca, 0x96b0, 0x7bab, 0x280a, 0x709d, 0x0, 0x1);
        gbc.writeMem(0xe4fd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd2ca);
        EXPECT(gbc.pc(), 0xe4ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4fd), 0xcb);
        EXPECT(gbc.readMem(0xe4fe), 0xc);
        // CB 0C 022B
        gbc.setState(0xc8cf, 0xe66d, 0xb20, 0x3eda, 0x9230, 0x22da, 0x1, 0x0);
        gbc.writeMem(0xc8cf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe66d);
        EXPECT(gbc.pc(), 0xc8d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8cf), 0xcb);
        EXPECT(gbc.readMem(0xc8d0), 0xc);
        // CB 0C 022C
        gbc.setState(0x837f, 0xe3cd, 0x2220, 0x6d40, 0x1e62, 0x7e8d, 0x0, 0x1);
        gbc.writeMem(0x837f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe3cd);
        EXPECT(gbc.pc(), 0x8381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x837f), 0xcb);
        EXPECT(gbc.readMem(0x8380), 0xc);
        // CB 0C 022D
        gbc.setState(0xbafb, 0x693b, 0x1120, 0xae75, 0xd555, 0xc4db, 0x1, 0x0);
        gbc.writeMem(0xbafb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x693b);
        EXPECT(gbc.pc(), 0xbafd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbafb), 0xcb);
        EXPECT(gbc.readMem(0xbafc), 0xc);
        // CB 0C 022E
        gbc.setState(0x5f79, 0xd7a5, 0xcf00, 0x1603, 0x7821, 0xc66c, 0x0, 0x0);
        gbc.writeMem(0x5f79, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd7a5);
        EXPECT(gbc.pc(), 0x5f7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 022F
        gbc.setState(0xc843, 0x35b4, 0x7980, 0xa559, 0xa366, 0x5843, 0x1, 0x1);
        gbc.writeMem(0xc843, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x35b4);
        EXPECT(gbc.pc(), 0xc845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc843), 0xcb);
        EXPECT(gbc.readMem(0xc844), 0xc);
        // CB 0C 0230
        gbc.setState(0xcab1, 0xbe55, 0x84b0, 0x3ff2, 0x2243, 0x8553, 0x1, 0x1);
        gbc.writeMem(0xcab1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xbe55);
        EXPECT(gbc.pc(), 0xcab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab1), 0xcb);
        EXPECT(gbc.readMem(0xcab2), 0xc);
        // CB 0C 0231
        gbc.setState(0x3997, 0xaff, 0x7750, 0xcb2, 0x165c, 0x303, 0x0, 0x0);
        gbc.writeMem(0x3997, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xaff);
        EXPECT(gbc.pc(), 0x3999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0232
        gbc.setState(0x7af, 0xcf0, 0xb640, 0x8901, 0xca05, 0x9c99, 0x1, 0x0);
        gbc.writeMem(0x7af, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xcf0);
        EXPECT(gbc.pc(), 0x7b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0233
        gbc.setState(0x12da, 0x177e, 0x5e70, 0x4df0, 0x3b50, 0x7c4d, 0x0, 0x1);
        gbc.writeMem(0x12da, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x177e);
        EXPECT(gbc.pc(), 0x12dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0234
        gbc.setState(0xc639, 0xa91d, 0x2110, 0xf9ee, 0x48b, 0x27a2, 0x0, 0x0);
        gbc.writeMem(0xc639, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa91d);
        EXPECT(gbc.pc(), 0xc63b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc639), 0xcb);
        EXPECT(gbc.readMem(0xc63a), 0xc);
        // CB 0C 0235
        gbc.setState(0x1135, 0x12da, 0x3920, 0x7c9a, 0x3564, 0xf7bb, 0x0, 0x1);
        gbc.writeMem(0x1135, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x12da);
        EXPECT(gbc.pc(), 0x1137);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0236
        gbc.setState(0x6111, 0x640b, 0x4e90, 0x3859, 0x9e47, 0xfcd5, 0x0, 0x0);
        gbc.writeMem(0x6111, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x640b);
        EXPECT(gbc.pc(), 0x6113);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0237
        gbc.setState(0xb09, 0x2a4b, 0x1a40, 0xfa92, 0x940b, 0xfc76, 0x0, 0x0);
        gbc.writeMem(0xb09, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2a4b);
        EXPECT(gbc.pc(), 0xb0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0238
        gbc.setState(0x3fb9, 0xea99, 0x28a0, 0xca12, 0xb0b1, 0x473b, 0x1, 0x0);
        gbc.writeMem(0x3fb9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xea99);
        EXPECT(gbc.pc(), 0x3fbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0239
        gbc.setState(0xc47a, 0x667c, 0x64e0, 0xe4e2, 0x2a87, 0x47c6, 0x0, 0x1);
        gbc.writeMem(0xc47a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x667c);
        EXPECT(gbc.pc(), 0xc47c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc47a), 0xcb);
        EXPECT(gbc.readMem(0xc47b), 0xc);
        // CB 0C 023A
        gbc.setState(0x6d92, 0x5d81, 0x86b0, 0xd3bb, 0xd427, 0x86fe, 0x1, 0x1);
        gbc.writeMem(0x6d92, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5d81);
        EXPECT(gbc.pc(), 0x6d94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 023B
        gbc.setState(0x4f99, 0xfe86, 0xc390, 0xfc52, 0xc023, 0xe1dd, 0x0, 0x0);
        gbc.writeMem(0x4f99, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xfe86);
        EXPECT(gbc.pc(), 0x4f9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 023C
        gbc.setState(0x7323, 0xac18, 0xa3d0, 0x45b2, 0x55ab, 0x9120, 0x1, 0x0);
        gbc.writeMem(0x7323, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xac18);
        EXPECT(gbc.pc(), 0x7325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 023D
        gbc.setState(0x6a58, 0x8397, 0x5640, 0xb5, 0x8693, 0x754f, 0x1, 0x1);
        gbc.writeMem(0x6a58, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8397);
        EXPECT(gbc.pc(), 0x6a5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 023E
        gbc.setState(0xb6e, 0x2c32, 0x2c70, 0x5840, 0x95c9, 0x244f, 0x0, 0x0);
        gbc.writeMem(0xb6e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2c32);
        EXPECT(gbc.pc(), 0xb70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 023F
        gbc.setState(0x2aef, 0x924b, 0x1520, 0x9d7a, 0xcc01, 0x7990, 0x0, 0x0);
        gbc.writeMem(0x2aef, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x924b);
        EXPECT(gbc.pc(), 0x2af1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0240
        gbc.setState(0x9e82, 0x121c, 0x7020, 0x2c67, 0x508d, 0x387a, 0x1, 0x1);
        gbc.writeMem(0x9e82, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x121c);
        EXPECT(gbc.pc(), 0x9e84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e82), 0xcb);
        EXPECT(gbc.readMem(0x9e83), 0xc);
        // CB 0C 0241
        gbc.setState(0xb0ce, 0x41b7, 0x7810, 0xfcd1, 0x6bd9, 0xe291, 0x1, 0x1);
        gbc.writeMem(0xb0ce, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x41b7);
        EXPECT(gbc.pc(), 0xb0d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ce), 0xcb);
        EXPECT(gbc.readMem(0xb0cf), 0xc);
        // CB 0C 0242
        gbc.setState(0xc6ef, 0x1680, 0x6a50, 0xdff7, 0x50a6, 0xc559, 0x1, 0x1);
        gbc.writeMem(0xc6ef, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1680);
        EXPECT(gbc.pc(), 0xc6f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ef), 0xcb);
        EXPECT(gbc.readMem(0xc6f0), 0xc);
        // CB 0C 0243
        gbc.setState(0xa00c, 0x1f17, 0x5260, 0xeb41, 0x26bd, 0x52e4, 0x0, 0x0);
        gbc.writeMem(0xa00c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1f17);
        EXPECT(gbc.pc(), 0xa00e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa00c), 0xcb);
        EXPECT(gbc.readMem(0xa00d), 0xc);
        // CB 0C 0244
        gbc.setState(0x76fb, 0xd6b2, 0x96c0, 0x722f, 0x573c, 0x7fd9, 0x0, 0x1);
        gbc.writeMem(0x76fb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd6b2);
        EXPECT(gbc.pc(), 0x76fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0245
        gbc.setState(0x9923, 0x9cdc, 0x65f0, 0xf68a, 0xef6d, 0x7cbb, 0x1, 0x1);
        gbc.writeMem(0x9923, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9cdc);
        EXPECT(gbc.pc(), 0x9925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9923), 0xcb);
        EXPECT(gbc.readMem(0x9924), 0xc);
        // CB 0C 0246
        gbc.setState(0x582c, 0xd0ac, 0x28e0, 0x1751, 0xf96a, 0xfde2, 0x1, 0x1);
        gbc.writeMem(0x582c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd0ac);
        EXPECT(gbc.pc(), 0x582e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0247
        gbc.setState(0x2765, 0x506, 0xc9d0, 0xb88a, 0xf4c8, 0xc668, 0x1, 0x0);
        gbc.writeMem(0x2765, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x506);
        EXPECT(gbc.pc(), 0x2767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0248
        gbc.setState(0x5614, 0xf3cb, 0xcd10, 0x33c9, 0x9c4d, 0x9734, 0x0, 0x0);
        gbc.writeMem(0x5614, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf3cb);
        EXPECT(gbc.pc(), 0x5616);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0249
        gbc.setState(0xad0b, 0xd0fb, 0x38d0, 0x5d5f, 0x33be, 0xd29a, 0x1, 0x1);
        gbc.writeMem(0xad0b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd0fb);
        EXPECT(gbc.pc(), 0xad0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad0b), 0xcb);
        EXPECT(gbc.readMem(0xad0c), 0xc);
        // CB 0C 024A
        gbc.setState(0xa583, 0xa9d0, 0x20b0, 0xde17, 0xf080, 0xfe80, 0x0, 0x1);
        gbc.writeMem(0xa583, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa9d0);
        EXPECT(gbc.pc(), 0xa585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa583), 0xcb);
        EXPECT(gbc.readMem(0xa584), 0xc);
        // CB 0C 024B
        gbc.setState(0x6875, 0x99e9, 0x6570, 0xe56e, 0x2a61, 0xffe0, 0x0, 0x1);
        gbc.writeMem(0x6875, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x99e9);
        EXPECT(gbc.pc(), 0x6877);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 024C
        gbc.setState(0x73e7, 0xf798, 0xd200, 0xbfcb, 0xf268, 0xd7b, 0x0, 0x1);
        gbc.writeMem(0x73e7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf798);
        EXPECT(gbc.pc(), 0x73e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 024D
        gbc.setState(0x97cc, 0xf47e, 0x6fe0, 0x2109, 0xde23, 0xb9f, 0x0, 0x1);
        gbc.writeMem(0x97cc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf47e);
        EXPECT(gbc.pc(), 0x97ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97cc), 0xcb);
        EXPECT(gbc.readMem(0x97cd), 0xc);
        // CB 0C 024E
        gbc.setState(0x91a2, 0x4202, 0x6700, 0xc09, 0x9943, 0x6417, 0x1, 0x1);
        gbc.writeMem(0x91a2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x4202);
        EXPECT(gbc.pc(), 0x91a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91a2), 0xcb);
        EXPECT(gbc.readMem(0x91a3), 0xc);
        // CB 0C 024F
        gbc.setState(0x46e6, 0x5ac, 0xfdb0, 0x31cc, 0x4285, 0xd89c, 0x0, 0x1);
        gbc.writeMem(0x46e6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5ac);
        EXPECT(gbc.pc(), 0x46e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0250
        gbc.setState(0xaf9, 0x4695, 0x42d0, 0x4650, 0xc73f, 0x601d, 0x0, 0x1);
        gbc.writeMem(0xaf9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4695);
        EXPECT(gbc.pc(), 0xafb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0251
        gbc.setState(0xc6e6, 0x6847, 0x35e0, 0xbf8c, 0x2a8, 0x40ab, 0x0, 0x0);
        gbc.writeMem(0xc6e6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6847);
        EXPECT(gbc.pc(), 0xc6e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e6), 0xcb);
        EXPECT(gbc.readMem(0xc6e7), 0xc);
        // CB 0C 0252
        gbc.setState(0x6d05, 0x5d4, 0x7100, 0x7fbe, 0xc2eb, 0xc4c5, 0x0, 0x1);
        gbc.writeMem(0x6d05, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5d4);
        EXPECT(gbc.pc(), 0x6d07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0253
        gbc.setState(0xbe5, 0x94d3, 0x2840, 0x799e, 0xcd2e, 0x1804, 0x0, 0x1);
        gbc.writeMem(0xbe5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x94d3);
        EXPECT(gbc.pc(), 0xbe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0254
        gbc.setState(0x3ff, 0x8eb3, 0xc60, 0x6fd4, 0xaf09, 0x491e, 0x1, 0x0);
        gbc.writeMem(0x3ff, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8eb3);
        EXPECT(gbc.pc(), 0x401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0255
        gbc.setState(0x1ea0, 0x8ee7, 0x4370, 0xbc54, 0x46f0, 0x16a7, 0x0, 0x1);
        gbc.writeMem(0x1ea0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8ee7);
        EXPECT(gbc.pc(), 0x1ea2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0256
        gbc.setState(0x6bbc, 0x31e7, 0xfa90, 0x344f, 0x6cbd, 0x37fc, 0x0, 0x1);
        gbc.writeMem(0x6bbc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x31e7);
        EXPECT(gbc.pc(), 0x6bbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0257
        gbc.setState(0x7c84, 0x2b8d, 0x1d50, 0x98cf, 0xd112, 0x8afc, 0x0, 0x1);
        gbc.writeMem(0x7c84, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2b8d);
        EXPECT(gbc.pc(), 0x7c86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0258
        gbc.setState(0xa776, 0x72ef, 0x7d40, 0xefe, 0xc462, 0xaaa7, 0x1, 0x1);
        gbc.writeMem(0xa776, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x72ef);
        EXPECT(gbc.pc(), 0xa778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa776), 0xcb);
        EXPECT(gbc.readMem(0xa777), 0xc);
        // CB 0C 0259
        gbc.setState(0x4380, 0x8436, 0x1d70, 0xd7c0, 0xf0ff, 0x197a, 0x0, 0x0);
        gbc.writeMem(0x4380, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8436);
        EXPECT(gbc.pc(), 0x4382);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 025A
        gbc.setState(0x5ec, 0x9f8b, 0x2b30, 0x7977, 0x3ec9, 0xe9df, 0x0, 0x0);
        gbc.writeMem(0x5ec, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9f8b);
        EXPECT(gbc.pc(), 0x5ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 025B
        gbc.setState(0xc0a6, 0x8908, 0xc400, 0xd23d, 0x50cd, 0x36f3, 0x1, 0x0);
        gbc.writeMem(0xc0a6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8908);
        EXPECT(gbc.pc(), 0xc0a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0a6), 0xcb);
        EXPECT(gbc.readMem(0xc0a7), 0xc);
        // CB 0C 025C
        gbc.setState(0x9c8e, 0x7652, 0x50, 0x255e, 0x134b, 0x9e1c, 0x0, 0x0);
        gbc.writeMem(0x9c8e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7652);
        EXPECT(gbc.pc(), 0x9c90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c8e), 0xcb);
        EXPECT(gbc.readMem(0x9c8f), 0xc);
        // CB 0C 025D
        gbc.setState(0x7be9, 0xbaf7, 0xcc80, 0x1db4, 0xce2e, 0x9102, 0x0, 0x0);
        gbc.writeMem(0x7be9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbaf7);
        EXPECT(gbc.pc(), 0x7beb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 025E
        gbc.setState(0x1353, 0xb8c7, 0x72d0, 0xf317, 0xa61c, 0x76a9, 0x0, 0x0);
        gbc.writeMem(0x1353, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb8c7);
        EXPECT(gbc.pc(), 0x1355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 025F
        gbc.setState(0x3f0d, 0xfa5f, 0xac70, 0xac44, 0x2f9a, 0x25ec, 0x0, 0x1);
        gbc.writeMem(0x3f0d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xfa5f);
        EXPECT(gbc.pc(), 0x3f0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0260
        gbc.setState(0x99fb, 0xe671, 0x3be0, 0x8ce5, 0x20c, 0xf9a0, 0x1, 0x0);
        gbc.writeMem(0x99fb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe671);
        EXPECT(gbc.pc(), 0x99fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fb), 0xcb);
        EXPECT(gbc.readMem(0x99fc), 0xc);
        // CB 0C 0261
        gbc.setState(0x279a, 0x4e59, 0x6870, 0xda28, 0x7081, 0x6a1, 0x0, 0x0);
        gbc.writeMem(0x279a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4e59);
        EXPECT(gbc.pc(), 0x279c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0262
        gbc.setState(0xadb, 0xe97f, 0x9490, 0x371e, 0x5b33, 0xc2de, 0x1, 0x0);
        gbc.writeMem(0xadb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe97f);
        EXPECT(gbc.pc(), 0xadd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0263
        gbc.setState(0xe074, 0x70e6, 0x89a0, 0x4e43, 0x4418, 0xa98, 0x1, 0x1);
        gbc.writeMem(0xe074, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x70e6);
        EXPECT(gbc.pc(), 0xe076);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe074), 0xcb);
        EXPECT(gbc.readMem(0xe075), 0xc);
        // CB 0C 0264
        gbc.setState(0x62e6, 0x40c8, 0xa890, 0x8973, 0x4d2f, 0x4f27, 0x0, 0x0);
        gbc.writeMem(0x62e6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x40c8);
        EXPECT(gbc.pc(), 0x62e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0265
        gbc.setState(0x5586, 0x3312, 0xde0, 0x6fb6, 0xf292, 0xfca6, 0x1, 0x1);
        gbc.writeMem(0x5586, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3312);
        EXPECT(gbc.pc(), 0x5588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0266
        gbc.setState(0x180e, 0x6ddf, 0x3be0, 0x1c53, 0xab31, 0xd202, 0x0, 0x1);
        gbc.writeMem(0x180e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6ddf);
        EXPECT(gbc.pc(), 0x1810);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0267
        gbc.setState(0x90b0, 0x23e6, 0xae90, 0xec9d, 0x4fe5, 0xa6f0, 0x1, 0x1);
        gbc.writeMem(0x90b0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x23e6);
        EXPECT(gbc.pc(), 0x90b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90b0), 0xcb);
        EXPECT(gbc.readMem(0x90b1), 0xc);
        // CB 0C 0268
        gbc.setState(0x1687, 0x3873, 0x1f30, 0x428b, 0x75eb, 0xd542, 0x1, 0x0);
        gbc.writeMem(0x1687, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3873);
        EXPECT(gbc.pc(), 0x1689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0269
        gbc.setState(0x6804, 0xb895, 0x2f0, 0x2a3f, 0x665c, 0x4009, 0x0, 0x0);
        gbc.writeMem(0x6804, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb895);
        EXPECT(gbc.pc(), 0x6806);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 026A
        gbc.setState(0xceb3, 0x1802, 0x9b50, 0xba8f, 0xf430, 0xd156, 0x1, 0x1);
        gbc.writeMem(0xceb3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1802);
        EXPECT(gbc.pc(), 0xceb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb3), 0xcb);
        EXPECT(gbc.readMem(0xceb4), 0xc);
        // CB 0C 026B
        gbc.setState(0xc47, 0x4870, 0x7dc0, 0x2353, 0x5a16, 0xa0cb, 0x0, 0x1);
        gbc.writeMem(0xc47, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4870);
        EXPECT(gbc.pc(), 0xc49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 026C
        gbc.setState(0x2eef, 0x3ee9, 0xfbd0, 0x87bd, 0xbc82, 0xfe24, 0x1, 0x0);
        gbc.writeMem(0x2eef, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3ee9);
        EXPECT(gbc.pc(), 0x2ef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 026D
        gbc.setState(0x1ee4, 0x19c9, 0x2830, 0xf556, 0x915d, 0xfa50, 0x1, 0x0);
        gbc.writeMem(0x1ee4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x19c9);
        EXPECT(gbc.pc(), 0x1ee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 026E
        gbc.setState(0x1a9e, 0x653d, 0xa010, 0x9c6b, 0x2465, 0x23ee, 0x0, 0x0);
        gbc.writeMem(0x1a9e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x653d);
        EXPECT(gbc.pc(), 0x1aa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 026F
        gbc.setState(0x8674, 0xba46, 0x2810, 0x6187, 0x2431, 0x1ab, 0x1, 0x0);
        gbc.writeMem(0x8674, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xba46);
        EXPECT(gbc.pc(), 0x8676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8674), 0xcb);
        EXPECT(gbc.readMem(0x8675), 0xc);
        // CB 0C 0270
        gbc.setState(0x4b0d, 0x6c05, 0x7680, 0x57e8, 0xe643, 0x50c1, 0x0, 0x0);
        gbc.writeMem(0x4b0d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6c05);
        EXPECT(gbc.pc(), 0x4b0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0271
        gbc.setState(0xd365, 0x79ae, 0xab30, 0xa58, 0x4f08, 0x611e, 0x0, 0x0);
        gbc.writeMem(0xd365, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x79ae);
        EXPECT(gbc.pc(), 0xd367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd365), 0xcb);
        EXPECT(gbc.readMem(0xd366), 0xc);
        // CB 0C 0272
        gbc.setState(0x3e72, 0xf62a, 0xc2d0, 0x8a8f, 0x1ac7, 0x5042, 0x1, 0x0);
        gbc.writeMem(0x3e72, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf62a);
        EXPECT(gbc.pc(), 0x3e74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0273
        gbc.setState(0xd77d, 0x2bc, 0xb9c0, 0x3d5e, 0x82e7, 0x8b44, 0x1, 0x0);
        gbc.writeMem(0xd77d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2bc);
        EXPECT(gbc.pc(), 0xd77f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd77d), 0xcb);
        EXPECT(gbc.readMem(0xd77e), 0xc);
        // CB 0C 0274
        gbc.setState(0x18ba, 0xcb89, 0x6b70, 0x8474, 0x4217, 0xe53e, 0x0, 0x1);
        gbc.writeMem(0x18ba, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xcb89);
        EXPECT(gbc.pc(), 0x18bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0275
        gbc.setState(0x2d71, 0x8384, 0xd7a0, 0x65d1, 0xca06, 0xcab5, 0x1, 0x0);
        gbc.writeMem(0x2d71, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8384);
        EXPECT(gbc.pc(), 0x2d73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0276
        gbc.setState(0x7e8, 0x310d, 0x1f10, 0xe397, 0x5593, 0x98b0, 0x0, 0x1);
        gbc.writeMem(0x7e8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x310d);
        EXPECT(gbc.pc(), 0x7ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0277
        gbc.setState(0x2922, 0x3577, 0x7b50, 0x663e, 0xc08a, 0x74a4, 0x1, 0x0);
        gbc.writeMem(0x2922, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3577);
        EXPECT(gbc.pc(), 0x2924);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0278
        gbc.setState(0x6c61, 0x615a, 0xb6b0, 0xfe02, 0xebbc, 0x9b91, 0x0, 0x0);
        gbc.writeMem(0x6c61, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x615a);
        EXPECT(gbc.pc(), 0x6c63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0279
        gbc.setState(0x96c1, 0x3f89, 0x6a0, 0x573e, 0xad8e, 0xfb1a, 0x1, 0x1);
        gbc.writeMem(0x96c1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3f89);
        EXPECT(gbc.pc(), 0x96c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c1), 0xcb);
        EXPECT(gbc.readMem(0x96c2), 0xc);
        // CB 0C 027A
        gbc.setState(0x60f9, 0xc9b2, 0x70f0, 0xa3d7, 0xd2b3, 0x76f4, 0x1, 0x0);
        gbc.writeMem(0x60f9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc9b2);
        EXPECT(gbc.pc(), 0x60fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 027B
        gbc.setState(0xcdc0, 0xa7a7, 0x7930, 0xb274, 0xb235, 0xbfb0, 0x1, 0x1);
        gbc.writeMem(0xcdc0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa7a7);
        EXPECT(gbc.pc(), 0xcdc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdc0), 0xcb);
        EXPECT(gbc.readMem(0xcdc1), 0xc);
        // CB 0C 027C
        gbc.setState(0x6a18, 0x98b8, 0x6780, 0x4805, 0xaf7a, 0x1d3e, 0x0, 0x0);
        gbc.writeMem(0x6a18, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x98b8);
        EXPECT(gbc.pc(), 0x6a1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 027D
        gbc.setState(0x3de0, 0xb087, 0x6120, 0x2790, 0xf0d8, 0xda10, 0x0, 0x1);
        gbc.writeMem(0x3de0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb087);
        EXPECT(gbc.pc(), 0x3de2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 027E
        gbc.setState(0x6298, 0x55ee, 0x74c0, 0x424b, 0xbf45, 0x3a81, 0x0, 0x1);
        gbc.writeMem(0x6298, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x55ee);
        EXPECT(gbc.pc(), 0x629a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 027F
        gbc.setState(0x831a, 0x9465, 0x4af0, 0x5068, 0xffe2, 0x58cc, 0x0, 0x1);
        gbc.writeMem(0x831a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9465);
        EXPECT(gbc.pc(), 0x831c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x831a), 0xcb);
        EXPECT(gbc.readMem(0x831b), 0xc);
        // CB 0C 0280
        gbc.setState(0x278e, 0x23f4, 0xf0e0, 0x7375, 0xcc24, 0x4ff6, 0x1, 0x0);
        gbc.writeMem(0x278e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x23f4);
        EXPECT(gbc.pc(), 0x2790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0281
        gbc.setState(0xe78e, 0xa57, 0x16c0, 0xd0a0, 0x4500, 0x6cb2, 0x1, 0x1);
        gbc.writeMem(0xe78e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa57);
        EXPECT(gbc.pc(), 0xe790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe78e), 0xcb);
        EXPECT(gbc.readMem(0xe78f), 0xc);
        // CB 0C 0282
        gbc.setState(0xba6e, 0x8e81, 0x2760, 0x8a1c, 0x573, 0x78ca, 0x0, 0x0);
        gbc.writeMem(0xba6e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8e81);
        EXPECT(gbc.pc(), 0xba70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba6e), 0xcb);
        EXPECT(gbc.readMem(0xba6f), 0xc);
        // CB 0C 0283
        gbc.setState(0xac66, 0xdaf3, 0x86e0, 0xc201, 0x249, 0x4efa, 0x0, 0x0);
        gbc.writeMem(0xac66, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xdaf3);
        EXPECT(gbc.pc(), 0xac68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac66), 0xcb);
        EXPECT(gbc.readMem(0xac67), 0xc);
        // CB 0C 0284
        gbc.setState(0x88bb, 0xff36, 0x2fd0, 0x5b6c, 0x76ca, 0xf8c5, 0x1, 0x1);
        gbc.writeMem(0x88bb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xff36);
        EXPECT(gbc.pc(), 0x88bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88bb), 0xcb);
        EXPECT(gbc.readMem(0x88bc), 0xc);
        // CB 0C 0286
        gbc.setState(0xee18, 0xe7eb, 0xfe70, 0x57e4, 0x2b1, 0xa816, 0x1, 0x1);
        gbc.writeMem(0xee18, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe7eb);
        EXPECT(gbc.pc(), 0xee1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee18), 0xcb);
        EXPECT(gbc.readMem(0xee19), 0xc);
        // CB 0C 0287
        gbc.setState(0xeb, 0x19f5, 0x3a60, 0xcb74, 0xcec8, 0x9a21, 0x1, 0x0);
        gbc.writeMem(0xeb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x19f5);
        EXPECT(gbc.pc(), 0xed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0288
        gbc.setState(0xec86, 0x77b7, 0xb660, 0x1223, 0x8a3c, 0x51be, 0x0, 0x1);
        gbc.writeMem(0xec86, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x77b7);
        EXPECT(gbc.pc(), 0xec88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec86), 0xcb);
        EXPECT(gbc.readMem(0xec87), 0xc);
        // CB 0C 0289
        gbc.setState(0x7a8e, 0x5e3f, 0xe310, 0xa617, 0xc057, 0x452d, 0x1, 0x1);
        gbc.writeMem(0x7a8e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5e3f);
        EXPECT(gbc.pc(), 0x7a90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 028A
        gbc.setState(0x28f3, 0x6d4b, 0xc1e0, 0xae6d, 0x5df8, 0xa15a, 0x1, 0x0);
        gbc.writeMem(0x28f3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6d4b);
        EXPECT(gbc.pc(), 0x28f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 028B
        gbc.setState(0x6a80, 0x8787, 0x5670, 0xa449, 0xd4f8, 0xbf0, 0x1, 0x0);
        gbc.writeMem(0x6a80, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8787);
        EXPECT(gbc.pc(), 0x6a82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 028C
        gbc.setState(0xba21, 0xb5df, 0xa950, 0xeb41, 0x20c1, 0x192c, 0x1, 0x1);
        gbc.writeMem(0xba21, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb5df);
        EXPECT(gbc.pc(), 0xba23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba21), 0xcb);
        EXPECT(gbc.readMem(0xba22), 0xc);
        // CB 0C 028D
        gbc.setState(0xd4c2, 0x1a31, 0xced0, 0xb5b7, 0xc634, 0xce34, 0x1, 0x0);
        gbc.writeMem(0xd4c2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1a31);
        EXPECT(gbc.pc(), 0xd4c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4c2), 0xcb);
        EXPECT(gbc.readMem(0xd4c3), 0xc);
        // CB 0C 028F
        gbc.setState(0xbe73, 0xe99f, 0x8c60, 0x940a, 0xbb08, 0xa845, 0x1, 0x1);
        gbc.writeMem(0xbe73, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe99f);
        EXPECT(gbc.pc(), 0xbe75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe73), 0xcb);
        EXPECT(gbc.readMem(0xbe74), 0xc);
        // CB 0C 0290
        gbc.setState(0x7028, 0x5b7a, 0x150, 0xc8e4, 0x31ba, 0x8e1, 0x0, 0x1);
        gbc.writeMem(0x7028, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5b7a);
        EXPECT(gbc.pc(), 0x702a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0292
        gbc.setState(0x84bd, 0x71e9, 0x3860, 0x9b22, 0x4244, 0x656d, 0x0, 0x0);
        gbc.writeMem(0x84bd, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x71e9);
        EXPECT(gbc.pc(), 0x84bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84bd), 0xcb);
        EXPECT(gbc.readMem(0x84be), 0xc);
        // CB 0C 0293
        gbc.setState(0xeb8b, 0xf80a, 0xe90, 0xe454, 0x2776, 0xbfc5, 0x1, 0x0);
        gbc.writeMem(0xeb8b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf80a);
        EXPECT(gbc.pc(), 0xeb8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb8b), 0xcb);
        EXPECT(gbc.readMem(0xeb8c), 0xc);
        // CB 0C 0294
        gbc.setState(0x1bc, 0x2fa3, 0xc690, 0x8b6a, 0x465c, 0xdc8f, 0x0, 0x1);
        gbc.writeMem(0x1bc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2fa3);
        EXPECT(gbc.pc(), 0x1be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0295
        gbc.setState(0xd6e2, 0x43b2, 0x96c0, 0x9b80, 0xd3cd, 0xce92, 0x0, 0x1);
        gbc.writeMem(0xd6e2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x43b2);
        EXPECT(gbc.pc(), 0xd6e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e2), 0xcb);
        EXPECT(gbc.readMem(0xd6e3), 0xc);
        // CB 0C 0296
        gbc.setState(0x78a0, 0xf9bf, 0xa530, 0xd4a3, 0x8a81, 0x2060, 0x0, 0x0);
        gbc.writeMem(0x78a0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf9bf);
        EXPECT(gbc.pc(), 0x78a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0297
        gbc.setState(0x4dea, 0x7384, 0x9550, 0xf34c, 0xb9a4, 0x4ddc, 0x0, 0x1);
        gbc.writeMem(0x4dea, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7384);
        EXPECT(gbc.pc(), 0x4dec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0298
        gbc.setState(0x37a5, 0x176f, 0x9690, 0xa389, 0xa14e, 0x7240, 0x1, 0x0);
        gbc.writeMem(0x37a5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x176f);
        EXPECT(gbc.pc(), 0x37a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0299
        gbc.setState(0xd336, 0x2721, 0x9350, 0xa421, 0xe2b6, 0x426f, 0x0, 0x0);
        gbc.writeMem(0xd336, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x2721);
        EXPECT(gbc.pc(), 0xd338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd336), 0xcb);
        EXPECT(gbc.readMem(0xd337), 0xc);
        // CB 0C 029A
        gbc.setState(0x459f, 0x91cd, 0xe170, 0x437e, 0x1478, 0x9532, 0x0, 0x1);
        gbc.writeMem(0x459f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x91cd);
        EXPECT(gbc.pc(), 0x45a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 029B
        gbc.setState(0x891, 0x129, 0xa7d0, 0x2169, 0xb0b3, 0xc3f5, 0x1, 0x1);
        gbc.writeMem(0x891, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x129);
        EXPECT(gbc.pc(), 0x893);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 029C
        gbc.setState(0x5409, 0xfe1e, 0x4350, 0x8992, 0x6b88, 0xa634, 0x0, 0x0);
        gbc.writeMem(0x5409, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xfe1e);
        EXPECT(gbc.pc(), 0x540b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 029D
        gbc.setState(0x2ab4, 0xc788, 0x1cf0, 0x9a8d, 0x944b, 0xb817, 0x0, 0x1);
        gbc.writeMem(0x2ab4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc788);
        EXPECT(gbc.pc(), 0x2ab6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 029E
        gbc.setState(0x8557, 0xc9d9, 0x9ed0, 0x70a1, 0xac8d, 0xd93b, 0x1, 0x0);
        gbc.writeMem(0x8557, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc9d9);
        EXPECT(gbc.pc(), 0x8559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8557), 0xcb);
        EXPECT(gbc.readMem(0x8558), 0xc);
        // CB 0C 029F
        gbc.setState(0x5565, 0x8a87, 0x9040, 0x8208, 0x56d1, 0x571b, 0x0, 0x1);
        gbc.writeMem(0x5565, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8a87);
        EXPECT(gbc.pc(), 0x5567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02A0
        gbc.setState(0x487a, 0x83c1, 0x7ed0, 0xcdaa, 0xa292, 0x5037, 0x0, 0x1);
        gbc.writeMem(0x487a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x83c1);
        EXPECT(gbc.pc(), 0x487c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02A2
        gbc.setState(0xce, 0x2e3c, 0x5390, 0xd8c4, 0x674a, 0xb93d, 0x1, 0x1);
        gbc.writeMem(0xce, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2e3c);
        EXPECT(gbc.pc(), 0xd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02A3
        gbc.setState(0x67a7, 0xa4e8, 0x8780, 0x8bc5, 0x57b7, 0x4d4a, 0x0, 0x0);
        gbc.writeMem(0x67a7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa4e8);
        EXPECT(gbc.pc(), 0x67a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02A4
        gbc.setState(0xbe8b, 0xe7c2, 0x95a0, 0x2617, 0x6737, 0x71dd, 0x0, 0x0);
        gbc.writeMem(0xbe8b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe7c2);
        EXPECT(gbc.pc(), 0xbe8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe8b), 0xcb);
        EXPECT(gbc.readMem(0xbe8c), 0xc);
        // CB 0C 02A5
        gbc.setState(0x2d30, 0xb4b8, 0x8030, 0xd5b, 0x3b51, 0xbac6, 0x1, 0x1);
        gbc.writeMem(0x2d30, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb4b8);
        EXPECT(gbc.pc(), 0x2d32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02A6
        gbc.setState(0x61f4, 0xa02e, 0x1f50, 0x24e1, 0x57b2, 0x4ecb, 0x1, 0x1);
        gbc.writeMem(0x61f4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa02e);
        EXPECT(gbc.pc(), 0x61f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02A8
        gbc.setState(0x6fd4, 0x6d90, 0x62a0, 0x268, 0x451a, 0x70ba, 0x0, 0x0);
        gbc.writeMem(0x6fd4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6d90);
        EXPECT(gbc.pc(), 0x6fd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02A9
        gbc.setState(0x1ae7, 0x644d, 0x4920, 0x9974, 0xcd11, 0x1bc8, 0x1, 0x1);
        gbc.writeMem(0x1ae7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x644d);
        EXPECT(gbc.pc(), 0x1ae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02AB
        gbc.setState(0xd13, 0x54d5, 0xef90, 0x9c6f, 0xa481, 0x424a, 0x0, 0x0);
        gbc.writeMem(0xd13, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x54d5);
        EXPECT(gbc.pc(), 0xd15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02AC
        gbc.setState(0xd2cc, 0x5132, 0xf160, 0x6aaf, 0xc310, 0x995b, 0x0, 0x0);
        gbc.writeMem(0xd2cc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5132);
        EXPECT(gbc.pc(), 0xd2ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2cc), 0xcb);
        EXPECT(gbc.readMem(0xd2cd), 0xc);
        // CB 0C 02AD
        gbc.setState(0x40e3, 0x3e49, 0xb90, 0xf9ca, 0x3094, 0x510b, 0x1, 0x0);
        gbc.writeMem(0x40e3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3e49);
        EXPECT(gbc.pc(), 0x40e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02AE
        gbc.setState(0xa8d7, 0xd007, 0x1eb0, 0xe304, 0x7421, 0xa21, 0x1, 0x0);
        gbc.writeMem(0xa8d7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd007);
        EXPECT(gbc.pc(), 0xa8d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8d7), 0xcb);
        EXPECT(gbc.readMem(0xa8d8), 0xc);
        // CB 0C 02AF
        gbc.setState(0x5356, 0x7da9, 0x2990, 0x5d72, 0xa1f, 0xa36d, 0x0, 0x0);
        gbc.writeMem(0x5356, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7da9);
        EXPECT(gbc.pc(), 0x5358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02B0
        gbc.setState(0x7cde, 0x68f7, 0x4c20, 0x3831, 0x6fa5, 0xfadc, 0x1, 0x1);
        gbc.writeMem(0x7cde, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x68f7);
        EXPECT(gbc.pc(), 0x7ce0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02B1
        gbc.setState(0x2301, 0x24e1, 0xfd20, 0xc601, 0xb4d8, 0x9c70, 0x1, 0x1);
        gbc.writeMem(0x2301, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x24e1);
        EXPECT(gbc.pc(), 0x2303);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02B2
        gbc.setState(0x5436, 0x6b83, 0x8850, 0x84, 0xefac, 0x745d, 0x0, 0x0);
        gbc.writeMem(0x5436, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6b83);
        EXPECT(gbc.pc(), 0x5438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02B3
        gbc.setState(0x46d6, 0xf219, 0x2f20, 0x409f, 0xb1df, 0xd360, 0x0, 0x0);
        gbc.writeMem(0x46d6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf219);
        EXPECT(gbc.pc(), 0x46d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02B4
        gbc.setState(0x5c33, 0x5002, 0x6cd0, 0x454, 0x41b8, 0x722a, 0x1, 0x1);
        gbc.writeMem(0x5c33, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5002);
        EXPECT(gbc.pc(), 0x5c35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02B5
        gbc.setState(0x5cc8, 0x2a2, 0x3ce0, 0x5c39, 0x2790, 0x6294, 0x0, 0x1);
        gbc.writeMem(0x5cc8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2a2);
        EXPECT(gbc.pc(), 0x5cca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02B6
        gbc.setState(0xd454, 0x5bce, 0x8250, 0x90e2, 0xeca7, 0xde00, 0x0, 0x1);
        gbc.writeMem(0xd454, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5bce);
        EXPECT(gbc.pc(), 0xd456);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd454), 0xcb);
        EXPECT(gbc.readMem(0xd455), 0xc);
        // CB 0C 02B7
        gbc.setState(0xde8a, 0x65e2, 0x1b70, 0x58f3, 0xa1c6, 0x515b, 0x0, 0x0);
        gbc.writeMem(0xde8a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x65e2);
        EXPECT(gbc.pc(), 0xde8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde8a), 0xcb);
        EXPECT(gbc.readMem(0xde8b), 0xc);
        // CB 0C 02B9
        gbc.setState(0x744, 0x1e0, 0x5c80, 0x66f1, 0xa3b0, 0x7f41, 0x0, 0x0);
        gbc.writeMem(0x744, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1e0);
        EXPECT(gbc.pc(), 0x746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02BA
        gbc.setState(0xe4f4, 0x41f2, 0xbcc0, 0x2bae, 0x1d6b, 0x3d86, 0x0, 0x1);
        gbc.writeMem(0xe4f4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x41f2);
        EXPECT(gbc.pc(), 0xe4f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4f4), 0xcb);
        EXPECT(gbc.readMem(0xe4f5), 0xc);
        // CB 0C 02BB
        gbc.setState(0x356, 0xb7a2, 0xe2a0, 0x7082, 0x31c8, 0x88a7, 0x1, 0x0);
        gbc.writeMem(0x356, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb7a2);
        EXPECT(gbc.pc(), 0x358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02BC
        gbc.setState(0xaad3, 0x3215, 0x2180, 0xdfed, 0x7d8d, 0x98e4, 0x0, 0x1);
        gbc.writeMem(0xaad3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3215);
        EXPECT(gbc.pc(), 0xaad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaad3), 0xcb);
        EXPECT(gbc.readMem(0xaad4), 0xc);
        // CB 0C 02BE
        gbc.setState(0xada6, 0xfc75, 0x79f0, 0xd1fb, 0xd689, 0x9fe5, 0x1, 0x1);
        gbc.writeMem(0xada6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfc75);
        EXPECT(gbc.pc(), 0xada8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xada6), 0xcb);
        EXPECT(gbc.readMem(0xada7), 0xc);
        // CB 0C 02BF
        gbc.setState(0xe859, 0x3fa6, 0x9ed0, 0x7bb2, 0xa1d9, 0xc8a1, 0x1, 0x0);
        gbc.writeMem(0xe859, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3fa6);
        EXPECT(gbc.pc(), 0xe85b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe859), 0xcb);
        EXPECT(gbc.readMem(0xe85a), 0xc);
        // CB 0C 02C0
        gbc.setState(0xc2fa, 0xea57, 0x3e00, 0x840c, 0x12f6, 0xa032, 0x0, 0x0);
        gbc.writeMem(0xc2fa, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xea57);
        EXPECT(gbc.pc(), 0xc2fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2fa), 0xcb);
        EXPECT(gbc.readMem(0xc2fb), 0xc);
        // CB 0C 02C2
        gbc.setState(0x7503, 0x4a18, 0x4d90, 0xafc5, 0x61e1, 0x2d5b, 0x1, 0x0);
        gbc.writeMem(0x7503, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4a18);
        EXPECT(gbc.pc(), 0x7505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02C3
        gbc.setState(0x4450, 0x1944, 0x5040, 0x1df2, 0x6047, 0xd88a, 0x0, 0x1);
        gbc.writeMem(0x4450, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1944);
        EXPECT(gbc.pc(), 0x4452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02C4
        gbc.setState(0xefc2, 0x9598, 0x3920, 0x59d5, 0x2764, 0xd607, 0x1, 0x0);
        gbc.writeMem(0xefc2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9598);
        EXPECT(gbc.pc(), 0xefc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefc2), 0xcb);
        EXPECT(gbc.readMem(0xefc3), 0xc);
        // CB 0C 02C5
        gbc.setState(0x6520, 0x62c5, 0xe0b0, 0xe0c4, 0xce99, 0x221c, 0x1, 0x0);
        gbc.writeMem(0x6520, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x62c5);
        EXPECT(gbc.pc(), 0x6522);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02C6
        gbc.setState(0x8739, 0x4710, 0x8520, 0x46aa, 0x52a5, 0x2e3d, 0x0, 0x0);
        gbc.writeMem(0x8739, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4710);
        EXPECT(gbc.pc(), 0x873b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8739), 0xcb);
        EXPECT(gbc.readMem(0x873a), 0xc);
        // CB 0C 02C7
        gbc.setState(0xe708, 0xf39d, 0x89b0, 0xb271, 0x94c2, 0x3733, 0x1, 0x0);
        gbc.writeMem(0xe708, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf39d);
        EXPECT(gbc.pc(), 0xe70a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe708), 0xcb);
        EXPECT(gbc.readMem(0xe709), 0xc);
        // CB 0C 02C8
        gbc.setState(0x31c, 0x82dc, 0xbef0, 0x9393, 0x721f, 0xdf3c, 0x0, 0x0);
        gbc.writeMem(0x31c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x82dc);
        EXPECT(gbc.pc(), 0x31e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02C9
        gbc.setState(0xc4cf, 0x54d5, 0xdc00, 0x769d, 0xafe6, 0x7927, 0x0, 0x0);
        gbc.writeMem(0xc4cf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x54d5);
        EXPECT(gbc.pc(), 0xc4d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4cf), 0xcb);
        EXPECT(gbc.readMem(0xc4d0), 0xc);
        // CB 0C 02CA
        gbc.setState(0x3fb, 0xb9b0, 0x29c0, 0x3b61, 0x3469, 0xae54, 0x1, 0x1);
        gbc.writeMem(0x3fb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb9b0);
        EXPECT(gbc.pc(), 0x3fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02CB
        gbc.setState(0xb914, 0x9ad2, 0x51a0, 0xeec0, 0xa1ca, 0xd8c, 0x0, 0x0);
        gbc.writeMem(0xb914, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9ad2);
        EXPECT(gbc.pc(), 0xb916);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb914), 0xcb);
        EXPECT(gbc.readMem(0xb915), 0xc);
        // CB 0C 02CC
        gbc.setState(0xef76, 0x2ff8, 0x3ca0, 0xa583, 0xaf0c, 0xc40e, 0x1, 0x1);
        gbc.writeMem(0xef76, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2ff8);
        EXPECT(gbc.pc(), 0xef78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef76), 0xcb);
        EXPECT(gbc.readMem(0xef77), 0xc);
        // CB 0C 02CD
        gbc.setState(0x25f1, 0x34e, 0x8c20, 0xc4db, 0x5cb5, 0xa56e, 0x0, 0x1);
        gbc.writeMem(0x25f1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x34e);
        EXPECT(gbc.pc(), 0x25f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02CE
        gbc.setState(0x9aa3, 0xd278, 0xde10, 0xbed2, 0x1064, 0x35a4, 0x0, 0x1);
        gbc.writeMem(0x9aa3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd278);
        EXPECT(gbc.pc(), 0x9aa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aa3), 0xcb);
        EXPECT(gbc.readMem(0x9aa4), 0xc);
        // CB 0C 02CF
        gbc.setState(0x1c33, 0x816c, 0xc9a0, 0x1d2f, 0x7d0c, 0xe15e, 0x1, 0x0);
        gbc.writeMem(0x1c33, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x816c);
        EXPECT(gbc.pc(), 0x1c35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02D0
        gbc.setState(0x6fa0, 0xb213, 0x8a30, 0x2eed, 0x6f0e, 0x3128, 0x0, 0x1);
        gbc.writeMem(0x6fa0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb213);
        EXPECT(gbc.pc(), 0x6fa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02D1
        gbc.setState(0xbf0e, 0x2c63, 0x7710, 0xe8aa, 0x95f6, 0x94, 0x1, 0x0);
        gbc.writeMem(0xbf0e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2c63);
        EXPECT(gbc.pc(), 0xbf10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf0e), 0xcb);
        EXPECT(gbc.readMem(0xbf0f), 0xc);
        // CB 0C 02D2
        gbc.setState(0xd213, 0xff27, 0x5370, 0x2afb, 0xa4ed, 0xdac7, 0x0, 0x1);
        gbc.writeMem(0xd213, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xff27);
        EXPECT(gbc.pc(), 0xd215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd213), 0xcb);
        EXPECT(gbc.readMem(0xd214), 0xc);
        // CB 0C 02D3
        gbc.setState(0x2c3f, 0x7036, 0x8c80, 0xf59e, 0x7b4c, 0xf89a, 0x1, 0x1);
        gbc.writeMem(0x2c3f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7036);
        EXPECT(gbc.pc(), 0x2c41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02D4
        gbc.setState(0x3514, 0xcac3, 0xb810, 0x4d5d, 0x5d48, 0x1ee3, 0x1, 0x1);
        gbc.writeMem(0x3514, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xcac3);
        EXPECT(gbc.pc(), 0x3516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02D5
        gbc.setState(0xaea9, 0xd56b, 0x8ba0, 0xe27c, 0x3063, 0x8581, 0x1, 0x0);
        gbc.writeMem(0xaea9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd56b);
        EXPECT(gbc.pc(), 0xaeab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaea9), 0xcb);
        EXPECT(gbc.readMem(0xaeaa), 0xc);
        // CB 0C 02D6
        gbc.setState(0x8008, 0x92e1, 0x8ff0, 0x7a72, 0xe8bb, 0x5a91, 0x1, 0x1);
        gbc.writeMem(0x8008, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x92e1);
        EXPECT(gbc.pc(), 0x800a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8008), 0xcb);
        EXPECT(gbc.readMem(0x8009), 0xc);
        // CB 0C 02D7
        gbc.setState(0xbdba, 0xc393, 0x3d30, 0xa13e, 0x26a7, 0x5fe5, 0x0, 0x1);
        gbc.writeMem(0xbdba, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc393);
        EXPECT(gbc.pc(), 0xbdbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdba), 0xcb);
        EXPECT(gbc.readMem(0xbdbb), 0xc);
        // CB 0C 02D8
        gbc.setState(0x95c5, 0x3cb0, 0xe0e0, 0xe673, 0x5381, 0xda1a, 0x0, 0x0);
        gbc.writeMem(0x95c5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3cb0);
        EXPECT(gbc.pc(), 0x95c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95c5), 0xcb);
        EXPECT(gbc.readMem(0x95c6), 0xc);
        // CB 0C 02D9
        gbc.setState(0x2242, 0x1265, 0x6b10, 0x41d4, 0x937b, 0x203d, 0x1, 0x0);
        gbc.writeMem(0x2242, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1265);
        EXPECT(gbc.pc(), 0x2244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02DA
        gbc.setState(0xeb2f, 0xcf22, 0xe940, 0xc80e, 0x4c63, 0xec80, 0x1, 0x0);
        gbc.writeMem(0xeb2f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcf22);
        EXPECT(gbc.pc(), 0xeb31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb2f), 0xcb);
        EXPECT(gbc.readMem(0xeb30), 0xc);
        // CB 0C 02DB
        gbc.setState(0x2698, 0x65d5, 0xf9c0, 0xc584, 0x2f73, 0xa05d, 0x0, 0x1);
        gbc.writeMem(0x2698, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x65d5);
        EXPECT(gbc.pc(), 0x269a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02DC
        gbc.setState(0x541, 0xada8, 0x80f0, 0x55e6, 0x1cf2, 0xf29c, 0x0, 0x0);
        gbc.writeMem(0x541, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xada8);
        EXPECT(gbc.pc(), 0x543);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02DD
        gbc.setState(0xd460, 0x1f9e, 0x1d80, 0x970b, 0xef61, 0xc69c, 0x0, 0x1);
        gbc.writeMem(0xd460, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1f9e);
        EXPECT(gbc.pc(), 0xd462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd460), 0xcb);
        EXPECT(gbc.readMem(0xd461), 0xc);
        // CB 0C 02DE
        gbc.setState(0xe195, 0x8175, 0x47c0, 0xd70f, 0xda74, 0x9193, 0x0, 0x0);
        gbc.writeMem(0xe195, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8175);
        EXPECT(gbc.pc(), 0xe197);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe195), 0xcb);
        EXPECT(gbc.readMem(0xe196), 0xc);
        // CB 0C 02DF
        gbc.setState(0x208f, 0xde7d, 0xbcf0, 0x89bd, 0x885a, 0x1c44, 0x1, 0x0);
        gbc.writeMem(0x208f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xde7d);
        EXPECT(gbc.pc(), 0x2091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02E0
        gbc.setState(0x2820, 0x8128, 0x1ab0, 0xe452, 0x3edd, 0x5487, 0x1, 0x1);
        gbc.writeMem(0x2820, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8128);
        EXPECT(gbc.pc(), 0x2822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02E1
        gbc.setState(0x5f67, 0x9224, 0x4b0, 0x23d5, 0xcbed, 0x5a39, 0x0, 0x1);
        gbc.writeMem(0x5f67, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9224);
        EXPECT(gbc.pc(), 0x5f69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02E2
        gbc.setState(0xef9b, 0x96, 0xa0b0, 0xf01f, 0x61c5, 0x2263, 0x1, 0x1);
        gbc.writeMem(0xef9b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x96);
        EXPECT(gbc.pc(), 0xef9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef9b), 0xcb);
        EXPECT(gbc.readMem(0xef9c), 0xc);
        // CB 0C 02E3
        gbc.setState(0xe3ee, 0x8b0b, 0x8430, 0xb88c, 0x7910, 0x9c58, 0x1, 0x1);
        gbc.writeMem(0xe3ee, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8b0b);
        EXPECT(gbc.pc(), 0xe3f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3ee), 0xcb);
        EXPECT(gbc.readMem(0xe3ef), 0xc);
        // CB 0C 02E4
        gbc.setState(0x8fd2, 0x3305, 0xbf20, 0x18aa, 0xed8f, 0xcdfc, 0x0, 0x1);
        gbc.writeMem(0x8fd2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3305);
        EXPECT(gbc.pc(), 0x8fd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fd2), 0xcb);
        EXPECT(gbc.readMem(0x8fd3), 0xc);
        // CB 0C 02E5
        gbc.setState(0x9190, 0x8d05, 0xfb70, 0xb476, 0xe659, 0xbd8d, 0x0, 0x1);
        gbc.writeMem(0x9190, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8d05);
        EXPECT(gbc.pc(), 0x9192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9190), 0xcb);
        EXPECT(gbc.readMem(0x9191), 0xc);
        // CB 0C 02E6
        gbc.setState(0xdbe5, 0x7ba8, 0xf410, 0x2acb, 0x6b, 0x447f, 0x0, 0x0);
        gbc.writeMem(0xdbe5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7ba8);
        EXPECT(gbc.pc(), 0xdbe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbe5), 0xcb);
        EXPECT(gbc.readMem(0xdbe6), 0xc);
        // CB 0C 02E7
        gbc.setState(0xec6d, 0xfd22, 0x9ec0, 0xc57e, 0x194d, 0x11a0, 0x0, 0x1);
        gbc.writeMem(0xec6d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xfd22);
        EXPECT(gbc.pc(), 0xec6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec6d), 0xcb);
        EXPECT(gbc.readMem(0xec6e), 0xc);
        // CB 0C 02E9
        gbc.setState(0xc8bb, 0xa317, 0xaa0, 0x2cf5, 0x182c, 0x87c9, 0x0, 0x1);
        gbc.writeMem(0xc8bb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa317);
        EXPECT(gbc.pc(), 0xc8bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8bb), 0xcb);
        EXPECT(gbc.readMem(0xc8bc), 0xc);
        // CB 0C 02EA
        gbc.setState(0xe06b, 0x7f99, 0x2b40, 0x3e93, 0xf723, 0x94be, 0x0, 0x0);
        gbc.writeMem(0xe06b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7f99);
        EXPECT(gbc.pc(), 0xe06d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe06b), 0xcb);
        EXPECT(gbc.readMem(0xe06c), 0xc);
        // CB 0C 02EB
        gbc.setState(0x5726, 0x50b7, 0xc1a0, 0xd49d, 0x1d9a, 0xa191, 0x0, 0x1);
        gbc.writeMem(0x5726, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x50b7);
        EXPECT(gbc.pc(), 0x5728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02EC
        gbc.setState(0xedc0, 0xcc7f, 0x96c0, 0x7a25, 0xbbfe, 0x7593, 0x0, 0x0);
        gbc.writeMem(0xedc0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcc7f);
        EXPECT(gbc.pc(), 0xedc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedc0), 0xcb);
        EXPECT(gbc.readMem(0xedc1), 0xc);
        // CB 0C 02ED
        gbc.setState(0x380d, 0xe2ac, 0x34b0, 0x9d14, 0x3159, 0xf0c7, 0x0, 0x1);
        gbc.writeMem(0x380d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe2ac);
        EXPECT(gbc.pc(), 0x380f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02EE
        gbc.setState(0x1ebe, 0x3ceb, 0xc030, 0x6ab0, 0x7bb1, 0x4894, 0x0, 0x0);
        gbc.writeMem(0x1ebe, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3ceb);
        EXPECT(gbc.pc(), 0x1ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02EF
        gbc.setState(0x990d, 0x247e, 0x7c10, 0xc, 0x1017, 0xd8d3, 0x0, 0x1);
        gbc.writeMem(0x990d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x247e);
        EXPECT(gbc.pc(), 0x990f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x990d), 0xcb);
        EXPECT(gbc.readMem(0x990e), 0xc);
        // CB 0C 02F0
        gbc.setState(0x8004, 0x8fd8, 0x6a20, 0xa4c5, 0xf9a7, 0xc798, 0x0, 0x0);
        gbc.writeMem(0x8004, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8fd8);
        EXPECT(gbc.pc(), 0x8006);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8004), 0xcb);
        EXPECT(gbc.readMem(0x8005), 0xc);
        // CB 0C 02F1
        gbc.setState(0xc3c0, 0xfcd2, 0xdc80, 0x904b, 0x55d, 0x5cf5, 0x0, 0x1);
        gbc.writeMem(0xc3c0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xfcd2);
        EXPECT(gbc.pc(), 0xc3c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3c0), 0xcb);
        EXPECT(gbc.readMem(0xc3c1), 0xc);
        // CB 0C 02F2
        gbc.setState(0x8432, 0xc106, 0x7680, 0xeb18, 0xfea6, 0x731f, 0x0, 0x0);
        gbc.writeMem(0x8432, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc106);
        EXPECT(gbc.pc(), 0x8434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8432), 0xcb);
        EXPECT(gbc.readMem(0x8433), 0xc);
        // CB 0C 02F3
        gbc.setState(0x9075, 0x4dac, 0x7b30, 0xbf54, 0xd7d0, 0xf071, 0x1, 0x1);
        gbc.writeMem(0x9075, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4dac);
        EXPECT(gbc.pc(), 0x9077);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9075), 0xcb);
        EXPECT(gbc.readMem(0x9076), 0xc);
        // CB 0C 02F4
        gbc.setState(0x95ac, 0x4471, 0x220, 0x5fba, 0x69c2, 0xc057, 0x1, 0x1);
        gbc.writeMem(0x95ac, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4471);
        EXPECT(gbc.pc(), 0x95ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ac), 0xcb);
        EXPECT(gbc.readMem(0x95ad), 0xc);
        // CB 0C 02F5
        gbc.setState(0xc57b, 0x7f7d, 0xb490, 0xc99, 0x600b, 0x2415, 0x0, 0x0);
        gbc.writeMem(0xc57b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7f7d);
        EXPECT(gbc.pc(), 0xc57d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc57b), 0xcb);
        EXPECT(gbc.readMem(0xc57c), 0xc);
        // CB 0C 02F6
        gbc.setState(0x5898, 0x61b2, 0x4000, 0xc435, 0xc0b6, 0xfa18, 0x0, 0x1);
        gbc.writeMem(0x5898, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x61b2);
        EXPECT(gbc.pc(), 0x589a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02F7
        gbc.setState(0x6165, 0x8808, 0xe830, 0xe06a, 0xc353, 0x95c5, 0x1, 0x0);
        gbc.writeMem(0x6165, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8808);
        EXPECT(gbc.pc(), 0x6167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02F8
        gbc.setState(0x6f5d, 0x23f2, 0x810, 0x1a27, 0x1ac7, 0x25b8, 0x1, 0x0);
        gbc.writeMem(0x6f5d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x23f2);
        EXPECT(gbc.pc(), 0x6f5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02F9
        gbc.setState(0xcf80, 0xac2f, 0x2720, 0xe32a, 0x5623, 0x6f3c, 0x1, 0x0);
        gbc.writeMem(0xcf80, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xac2f);
        EXPECT(gbc.pc(), 0xcf82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf80), 0xcb);
        EXPECT(gbc.readMem(0xcf81), 0xc);
        // CB 0C 02FA
        gbc.setState(0x5745, 0x3b1e, 0xedd0, 0xeca3, 0xff97, 0x98dc, 0x0, 0x1);
        gbc.writeMem(0x5745, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3b1e);
        EXPECT(gbc.pc(), 0x5747);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02FB
        gbc.setState(0xb812, 0xff2, 0x1cc0, 0x3d9a, 0xd4c1, 0x5aa2, 0x0, 0x1);
        gbc.writeMem(0xb812, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xff2);
        EXPECT(gbc.pc(), 0xb814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb812), 0xcb);
        EXPECT(gbc.readMem(0xb813), 0xc);
        // CB 0C 02FC
        gbc.setState(0x1f9d, 0xb420, 0xc6f0, 0xace5, 0x4765, 0xed87, 0x0, 0x0);
        gbc.writeMem(0x1f9d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb420);
        EXPECT(gbc.pc(), 0x1f9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02FD
        gbc.setState(0x3643, 0xfdb1, 0xdda0, 0x10bc, 0xe8c5, 0x2b5, 0x1, 0x0);
        gbc.writeMem(0x3643, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xfdb1);
        EXPECT(gbc.pc(), 0x3645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 02FE
        gbc.setState(0x7af3, 0x94ad, 0xd770, 0x190e, 0x78e, 0x69da, 0x0, 0x0);
        gbc.writeMem(0x7af3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x94ad);
        EXPECT(gbc.pc(), 0x7af5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 02FF
        gbc.setState(0xe3e0, 0xc448, 0x1830, 0xeadc, 0xead8, 0x665e, 0x0, 0x1);
        gbc.writeMem(0xe3e0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc448);
        EXPECT(gbc.pc(), 0xe3e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3e0), 0xcb);
        EXPECT(gbc.readMem(0xe3e1), 0xc);
        // CB 0C 0300
        gbc.setState(0xe4f1, 0x3618, 0x64a0, 0x4a6b, 0xfc4f, 0x7e36, 0x0, 0x0);
        gbc.writeMem(0xe4f1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3618);
        EXPECT(gbc.pc(), 0xe4f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4f1), 0xcb);
        EXPECT(gbc.readMem(0xe4f2), 0xc);
        // CB 0C 0301
        gbc.setState(0xabf4, 0x2bfe, 0x2500, 0xf814, 0x2b7e, 0x3fc0, 0x1, 0x1);
        gbc.writeMem(0xabf4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2bfe);
        EXPECT(gbc.pc(), 0xabf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabf4), 0xcb);
        EXPECT(gbc.readMem(0xabf5), 0xc);
        // CB 0C 0302
        gbc.setState(0x245d, 0x98b5, 0x8680, 0x2a8, 0xdb63, 0x10e2, 0x0, 0x1);
        gbc.writeMem(0x245d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x98b5);
        EXPECT(gbc.pc(), 0x245f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0303
        gbc.setState(0xa767, 0x4c96, 0x86d0, 0xf766, 0x1344, 0x6c5c, 0x1, 0x0);
        gbc.writeMem(0xa767, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4c96);
        EXPECT(gbc.pc(), 0xa769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa767), 0xcb);
        EXPECT(gbc.readMem(0xa768), 0xc);
        // CB 0C 0304
        gbc.setState(0xdca8, 0x67fe, 0xe1f0, 0xb9d4, 0xd09, 0x7d92, 0x0, 0x1);
        gbc.writeMem(0xdca8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x67fe);
        EXPECT(gbc.pc(), 0xdcaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdca8), 0xcb);
        EXPECT(gbc.readMem(0xdca9), 0xc);
        // CB 0C 0305
        gbc.setState(0xeb1c, 0x8be7, 0x9080, 0xe70, 0x49df, 0x5514, 0x1, 0x1);
        gbc.writeMem(0xeb1c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8be7);
        EXPECT(gbc.pc(), 0xeb1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb1c), 0xcb);
        EXPECT(gbc.readMem(0xeb1d), 0xc);
        // CB 0C 0306
        gbc.setState(0x66dc, 0xc2f4, 0x3bd0, 0x6b8f, 0xfd4e, 0xf65c, 0x0, 0x0);
        gbc.writeMem(0x66dc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc2f4);
        EXPECT(gbc.pc(), 0x66de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0307
        gbc.setState(0x7484, 0x34fe, 0x2e90, 0xb4c6, 0x8359, 0xd1d, 0x0, 0x1);
        gbc.writeMem(0x7484, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x34fe);
        EXPECT(gbc.pc(), 0x7486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0308
        gbc.setState(0x32d9, 0x839b, 0x5020, 0xfe3f, 0x2fa6, 0xa5b, 0x0, 0x0);
        gbc.writeMem(0x32d9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x839b);
        EXPECT(gbc.pc(), 0x32db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 030A
        gbc.setState(0xb094, 0x782c, 0xe940, 0x1d3f, 0x37b4, 0xba33, 0x1, 0x0);
        gbc.writeMem(0xb094, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x782c);
        EXPECT(gbc.pc(), 0xb096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb094), 0xcb);
        EXPECT(gbc.readMem(0xb095), 0xc);
        // CB 0C 030B
        gbc.setState(0x8ed4, 0xf7a1, 0x7750, 0x160d, 0xf6bb, 0x9adf, 0x1, 0x0);
        gbc.writeMem(0x8ed4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf7a1);
        EXPECT(gbc.pc(), 0x8ed6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed4), 0xcb);
        EXPECT(gbc.readMem(0x8ed5), 0xc);
        // CB 0C 030C
        gbc.setState(0xee60, 0x998e, 0x8d60, 0xd2a3, 0x710a, 0x2f3d, 0x1, 0x0);
        gbc.writeMem(0xee60, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x998e);
        EXPECT(gbc.pc(), 0xee62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee60), 0xcb);
        EXPECT(gbc.readMem(0xee61), 0xc);
        // CB 0C 030D
        gbc.setState(0xca03, 0x3e70, 0xb350, 0x78f7, 0xee44, 0x9ab7, 0x1, 0x0);
        gbc.writeMem(0xca03, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3e70);
        EXPECT(gbc.pc(), 0xca05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca03), 0xcb);
        EXPECT(gbc.readMem(0xca04), 0xc);
        // CB 0C 030E
        gbc.setState(0xd75e, 0x14d8, 0x5a00, 0xe0c0, 0x47a1, 0xc801, 0x0, 0x0);
        gbc.writeMem(0xd75e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x14d8);
        EXPECT(gbc.pc(), 0xd760);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd75e), 0xcb);
        EXPECT(gbc.readMem(0xd75f), 0xc);
        // CB 0C 030F
        gbc.setState(0x4257, 0x5311, 0xc210, 0xd02f, 0x2436, 0x23a0, 0x1, 0x1);
        gbc.writeMem(0x4257, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5311);
        EXPECT(gbc.pc(), 0x4259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0310
        gbc.setState(0xa071, 0x23c5, 0x1720, 0xd21a, 0x918b, 0xe0c9, 0x1, 0x0);
        gbc.writeMem(0xa071, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x23c5);
        EXPECT(gbc.pc(), 0xa073);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa071), 0xcb);
        EXPECT(gbc.readMem(0xa072), 0xc);
        // CB 0C 0311
        gbc.setState(0x9a8, 0xb2ec, 0x65f0, 0xd57a, 0x417e, 0x277e, 0x0, 0x1);
        gbc.writeMem(0x9a8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb2ec);
        EXPECT(gbc.pc(), 0x9aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0312
        gbc.setState(0x63d7, 0xa2af, 0x94b0, 0xe380, 0xbdd1, 0xfe19, 0x1, 0x0);
        gbc.writeMem(0x63d7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa2af);
        EXPECT(gbc.pc(), 0x63d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0313
        gbc.setState(0xaec7, 0xcac9, 0x5fd0, 0xc8ba, 0x4cf0, 0x3457, 0x1, 0x0);
        gbc.writeMem(0xaec7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xcac9);
        EXPECT(gbc.pc(), 0xaec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaec7), 0xcb);
        EXPECT(gbc.readMem(0xaec8), 0xc);
        // CB 0C 0314
        gbc.setState(0x471f, 0xbc82, 0x2610, 0x996a, 0xb9d0, 0xcfd0, 0x0, 0x0);
        gbc.writeMem(0x471f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xbc82);
        EXPECT(gbc.pc(), 0x4721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0315
        gbc.setState(0xc4f1, 0xa206, 0xaa50, 0xedd2, 0x208, 0x612e, 0x0, 0x0);
        gbc.writeMem(0xc4f1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa206);
        EXPECT(gbc.pc(), 0xc4f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4f1), 0xcb);
        EXPECT(gbc.readMem(0xc4f2), 0xc);
        // CB 0C 0316
        gbc.setState(0x991e, 0x2a7f, 0x73b0, 0x5201, 0x7290, 0xa5a8, 0x0, 0x0);
        gbc.writeMem(0x991e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2a7f);
        EXPECT(gbc.pc(), 0x9920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x991e), 0xcb);
        EXPECT(gbc.readMem(0x991f), 0xc);
        // CB 0C 0318
        gbc.setState(0x234d, 0xc8d8, 0x4850, 0x908b, 0x4d2c, 0x2e84, 0x1, 0x1);
        gbc.writeMem(0x234d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc8d8);
        EXPECT(gbc.pc(), 0x234f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0319
        gbc.setState(0x17b5, 0xd2be, 0x4920, 0x582a, 0x6b24, 0x6979, 0x1, 0x1);
        gbc.writeMem(0x17b5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd2be);
        EXPECT(gbc.pc(), 0x17b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 031A
        gbc.setState(0x5c12, 0x272e, 0x26f0, 0xcde0, 0xac0c, 0x4bb8, 0x1, 0x1);
        gbc.writeMem(0x5c12, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x272e);
        EXPECT(gbc.pc(), 0x5c14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 031B
        gbc.setState(0x1ce3, 0xa45a, 0x16d0, 0x331e, 0xba6a, 0xe54, 0x0, 0x0);
        gbc.writeMem(0x1ce3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa45a);
        EXPECT(gbc.pc(), 0x1ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 031C
        gbc.setState(0x3c3c, 0x5445, 0x1850, 0xeb70, 0x3137, 0xda3, 0x0, 0x0);
        gbc.writeMem(0x3c3c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5445);
        EXPECT(gbc.pc(), 0x3c3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 031D
        gbc.setState(0x10c9, 0xdf9e, 0xca70, 0x4175, 0x1a3a, 0x9ae6, 0x0, 0x0);
        gbc.writeMem(0x10c9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xdf9e);
        EXPECT(gbc.pc(), 0x10cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 031E
        gbc.setState(0x6113, 0x20d0, 0x26a0, 0xf75e, 0xca90, 0x354, 0x0, 0x0);
        gbc.writeMem(0x6113, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x20d0);
        EXPECT(gbc.pc(), 0x6115);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 031F
        gbc.setState(0x3e6f, 0x48f0, 0x1870, 0x425f, 0xc8c5, 0x3e66, 0x0, 0x1);
        gbc.writeMem(0x3e6f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x48f0);
        EXPECT(gbc.pc(), 0x3e71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0320
        gbc.setState(0xbc24, 0xe20d, 0x8c10, 0x61ba, 0x29be, 0x82db, 0x1, 0x1);
        gbc.writeMem(0xbc24, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe20d);
        EXPECT(gbc.pc(), 0xbc26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc24), 0xcb);
        EXPECT(gbc.readMem(0xbc25), 0xc);
        // CB 0C 0321
        gbc.setState(0x5eb8, 0x2d20, 0xbba0, 0x33a9, 0xdfd6, 0xd12f, 0x0, 0x1);
        gbc.writeMem(0x5eb8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2d20);
        EXPECT(gbc.pc(), 0x5eba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0322
        gbc.setState(0x34c4, 0xed7b, 0x1020, 0xbba0, 0x245e, 0x1b1b, 0x0, 0x0);
        gbc.writeMem(0x34c4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xed7b);
        EXPECT(gbc.pc(), 0x34c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0323
        gbc.setState(0xd226, 0x52e8, 0x9320, 0xd68a, 0x7bc4, 0x4b2a, 0x0, 0x0);
        gbc.writeMem(0xd226, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x52e8);
        EXPECT(gbc.pc(), 0xd228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd226), 0xcb);
        EXPECT(gbc.readMem(0xd227), 0xc);
        // CB 0C 0324
        gbc.setState(0x6982, 0x9ae8, 0x31e0, 0x6615, 0xf29f, 0xc9d, 0x1, 0x1);
        gbc.writeMem(0x6982, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9ae8);
        EXPECT(gbc.pc(), 0x6984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0325
        gbc.setState(0x1e0a, 0xf7dd, 0x67a0, 0xdda4, 0x7fea, 0xe159, 0x1, 0x0);
        gbc.writeMem(0x1e0a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf7dd);
        EXPECT(gbc.pc(), 0x1e0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0326
        gbc.setState(0xc48e, 0x8704, 0x7ed0, 0xfc3, 0x9fa0, 0x73a, 0x0, 0x0);
        gbc.writeMem(0xc48e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8704);
        EXPECT(gbc.pc(), 0xc490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc48e), 0xcb);
        EXPECT(gbc.readMem(0xc48f), 0xc);
        // CB 0C 0327
        gbc.setState(0xb9b5, 0xffaa, 0x6730, 0xbfff, 0xc65b, 0xe151, 0x0, 0x0);
        gbc.writeMem(0xb9b5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xffaa);
        EXPECT(gbc.pc(), 0xb9b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9b5), 0xcb);
        EXPECT(gbc.readMem(0xb9b6), 0xc);
        // CB 0C 0328
        gbc.setState(0x2a8d, 0x497b, 0xc190, 0xc5ee, 0x8840, 0x29f6, 0x0, 0x1);
        gbc.writeMem(0x2a8d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x497b);
        EXPECT(gbc.pc(), 0x2a8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0329
        gbc.setState(0xda50, 0x30de, 0x7eb0, 0x614d, 0xeb32, 0x3de, 0x1, 0x0);
        gbc.writeMem(0xda50, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x30de);
        EXPECT(gbc.pc(), 0xda52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda50), 0xcb);
        EXPECT(gbc.readMem(0xda51), 0xc);
        // CB 0C 032A
        gbc.setState(0x4819, 0xd317, 0xde60, 0xcf1b, 0x99b9, 0x7df4, 0x1, 0x1);
        gbc.writeMem(0x4819, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd317);
        EXPECT(gbc.pc(), 0x481b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 032B
        gbc.setState(0x6725, 0xacee, 0x2350, 0xa088, 0x1cd5, 0x6e0e, 0x0, 0x0);
        gbc.writeMem(0x6725, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xacee);
        EXPECT(gbc.pc(), 0x6727);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 032C
        gbc.setState(0x442c, 0xefea, 0x42f0, 0x7058, 0xc2c6, 0xad80, 0x1, 0x1);
        gbc.writeMem(0x442c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xefea);
        EXPECT(gbc.pc(), 0x442e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 032D
        gbc.setState(0x8e, 0xe679, 0xf5d0, 0xa82b, 0x99e2, 0x1a3a, 0x1, 0x0);
        gbc.writeMem(0x8e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe679);
        EXPECT(gbc.pc(), 0x90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 032E
        gbc.setState(0xc15, 0x771, 0xcc00, 0x762, 0x9f6f, 0x736e, 0x0, 0x1);
        gbc.writeMem(0xc15, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x771);
        EXPECT(gbc.pc(), 0xc17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 032F
        gbc.setState(0xac5c, 0x7a51, 0xf0f0, 0x84ac, 0x1684, 0x41ca, 0x1, 0x1);
        gbc.writeMem(0xac5c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7a51);
        EXPECT(gbc.pc(), 0xac5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac5c), 0xcb);
        EXPECT(gbc.readMem(0xac5d), 0xc);
        // CB 0C 0330
        gbc.setState(0x49fe, 0x230e, 0x97c0, 0x51f9, 0x6b16, 0x7db9, 0x0, 0x0);
        gbc.writeMem(0x49fe, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x230e);
        EXPECT(gbc.pc(), 0x4a00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0331
        gbc.setState(0xefd5, 0xca66, 0x7c00, 0x8df2, 0x973b, 0x2dcb, 0x0, 0x1);
        gbc.writeMem(0xefd5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xca66);
        EXPECT(gbc.pc(), 0xefd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefd5), 0xcb);
        EXPECT(gbc.readMem(0xefd6), 0xc);
        // CB 0C 0332
        gbc.setState(0x8376, 0x94cb, 0x990, 0xb8c9, 0xdf82, 0xc12b, 0x0, 0x1);
        gbc.writeMem(0x8376, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x94cb);
        EXPECT(gbc.pc(), 0x8378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8376), 0xcb);
        EXPECT(gbc.readMem(0x8377), 0xc);
        // CB 0C 0333
        gbc.setState(0xc91d, 0x5b7d, 0x140, 0xaebc, 0x7cd8, 0x2106, 0x0, 0x0);
        gbc.writeMem(0xc91d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5b7d);
        EXPECT(gbc.pc(), 0xc91f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc91d), 0xcb);
        EXPECT(gbc.readMem(0xc91e), 0xc);
        // CB 0C 0334
        gbc.setState(0x858f, 0x3715, 0x8d90, 0xae36, 0x3893, 0x5b61, 0x1, 0x0);
        gbc.writeMem(0x858f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3715);
        EXPECT(gbc.pc(), 0x8591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x858f), 0xcb);
        EXPECT(gbc.readMem(0x8590), 0xc);
        // CB 0C 0336
        gbc.setState(0x93c4, 0xae62, 0xdc60, 0x31e0, 0x9146, 0xc71d, 0x1, 0x0);
        gbc.writeMem(0x93c4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xae62);
        EXPECT(gbc.pc(), 0x93c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93c4), 0xcb);
        EXPECT(gbc.readMem(0x93c5), 0xc);
        // CB 0C 0337
        gbc.setState(0x2f02, 0xa189, 0x2810, 0x179c, 0x910c, 0x1659, 0x0, 0x0);
        gbc.writeMem(0x2f02, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa189);
        EXPECT(gbc.pc(), 0x2f04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0338
        gbc.setState(0xdc38, 0xa7c3, 0x4c30, 0xb40a, 0x14e7, 0x2ed2, 0x1, 0x1);
        gbc.writeMem(0xdc38, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa7c3);
        EXPECT(gbc.pc(), 0xdc3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc38), 0xcb);
        EXPECT(gbc.readMem(0xdc39), 0xc);
        // CB 0C 0339
        gbc.setState(0x9a43, 0x2a1a, 0xcf80, 0x94ca, 0xde5, 0xfe22, 0x0, 0x1);
        gbc.writeMem(0x9a43, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2a1a);
        EXPECT(gbc.pc(), 0x9a45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a43), 0xcb);
        EXPECT(gbc.readMem(0x9a44), 0xc);
        // CB 0C 033A
        gbc.setState(0x3840, 0x5e21, 0xf350, 0x9b9a, 0xa9cb, 0xc288, 0x1, 0x0);
        gbc.writeMem(0x3840, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5e21);
        EXPECT(gbc.pc(), 0x3842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 033C
        gbc.setState(0x410, 0xb469, 0x9ef0, 0x41f0, 0xa1b4, 0x266a, 0x0, 0x1);
        gbc.writeMem(0x410, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb469);
        EXPECT(gbc.pc(), 0x412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 033D
        gbc.setState(0x8c00, 0xac9, 0x4110, 0x90f0, 0x88ee, 0xd4f0, 0x0, 0x1);
        gbc.writeMem(0x8c00, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xac9);
        EXPECT(gbc.pc(), 0x8c02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c00), 0xcb);
        EXPECT(gbc.readMem(0x8c01), 0xc);
        // CB 0C 033E
        gbc.setState(0xe439, 0xe362, 0xa410, 0xaca8, 0x9e18, 0x7abc, 0x1, 0x0);
        gbc.writeMem(0xe439, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe362);
        EXPECT(gbc.pc(), 0xe43b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe439), 0xcb);
        EXPECT(gbc.readMem(0xe43a), 0xc);
        // CB 0C 033F
        gbc.setState(0x5197, 0x89d7, 0x8730, 0x5520, 0x7516, 0x843e, 0x0, 0x1);
        gbc.writeMem(0x5197, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x89d7);
        EXPECT(gbc.pc(), 0x5199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0340
        gbc.setState(0xa246, 0x1c8b, 0x9080, 0x58a9, 0xdfd5, 0x2985, 0x1, 0x1);
        gbc.writeMem(0xa246, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1c8b);
        EXPECT(gbc.pc(), 0xa248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa246), 0xcb);
        EXPECT(gbc.readMem(0xa247), 0xc);
        // CB 0C 0341
        gbc.setState(0x93c2, 0x9ef6, 0xc6f0, 0x4ca0, 0xb099, 0xbb50, 0x0, 0x1);
        gbc.writeMem(0x93c2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9ef6);
        EXPECT(gbc.pc(), 0x93c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93c2), 0xcb);
        EXPECT(gbc.readMem(0x93c3), 0xc);
        // CB 0C 0342
        gbc.setState(0xa012, 0x664f, 0x5870, 0xd3d9, 0xdd6f, 0x8736, 0x0, 0x0);
        gbc.writeMem(0xa012, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x664f);
        EXPECT(gbc.pc(), 0xa014);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa012), 0xcb);
        EXPECT(gbc.readMem(0xa013), 0xc);
        // CB 0C 0343
        gbc.setState(0x3c46, 0x17c, 0xca80, 0xeef4, 0xa217, 0x590b, 0x1, 0x0);
        gbc.writeMem(0x3c46, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x17c);
        EXPECT(gbc.pc(), 0x3c48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0344
        gbc.setState(0x278b, 0xe0d5, 0x8720, 0xb150, 0x63d2, 0x7553, 0x0, 0x1);
        gbc.writeMem(0x278b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe0d5);
        EXPECT(gbc.pc(), 0x278d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0346
        gbc.setState(0x670d, 0x537, 0xf700, 0xfb81, 0x83bc, 0x9ba6, 0x1, 0x0);
        gbc.writeMem(0x670d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x537);
        EXPECT(gbc.pc(), 0x670f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0347
        gbc.setState(0x73c8, 0x47c5, 0xdcb0, 0x9b4, 0x2724, 0x6746, 0x1, 0x0);
        gbc.writeMem(0x73c8, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x47c5);
        EXPECT(gbc.pc(), 0x73ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0348
        gbc.setState(0x3aef, 0x767b, 0x7c10, 0xdbe9, 0x94cf, 0x11a0, 0x1, 0x1);
        gbc.writeMem(0x3aef, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x767b);
        EXPECT(gbc.pc(), 0x3af1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0349
        gbc.setState(0xa39, 0x7f13, 0x1750, 0xf101, 0xde99, 0xb584, 0x0, 0x1);
        gbc.writeMem(0xa39, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7f13);
        EXPECT(gbc.pc(), 0xa3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 034A
        gbc.setState(0xc8db, 0xa7f3, 0xe270, 0xf5b0, 0xc59, 0x51b, 0x0, 0x1);
        gbc.writeMem(0xc8db, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa7f3);
        EXPECT(gbc.pc(), 0xc8dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8db), 0xcb);
        EXPECT(gbc.readMem(0xc8dc), 0xc);
        // CB 0C 034B
        gbc.setState(0xaed, 0x33bd, 0xb780, 0x19f7, 0x985b, 0xc595, 0x1, 0x1);
        gbc.writeMem(0xaed, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x33bd);
        EXPECT(gbc.pc(), 0xaef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 034C
        gbc.setState(0xeebb, 0x3e, 0x99c0, 0x9f59, 0x74b4, 0x1110, 0x0, 0x0);
        gbc.writeMem(0xeebb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3e);
        EXPECT(gbc.pc(), 0xeebd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeebb), 0xcb);
        EXPECT(gbc.readMem(0xeebc), 0xc);
        // CB 0C 034D
        gbc.setState(0x6693, 0x4762, 0xba70, 0x1958, 0x4ea3, 0xa3c3, 0x0, 0x0);
        gbc.writeMem(0x6693, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4762);
        EXPECT(gbc.pc(), 0x6695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 034E
        gbc.setState(0x8c10, 0x4efc, 0x750, 0x810a, 0x8825, 0xd0a1, 0x0, 0x0);
        gbc.writeMem(0x8c10, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4efc);
        EXPECT(gbc.pc(), 0x8c12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c10), 0xcb);
        EXPECT(gbc.readMem(0x8c11), 0xc);
        // CB 0C 034F
        gbc.setState(0x694a, 0xfa5f, 0xaaf0, 0x3529, 0xbb40, 0x1375, 0x1, 0x0);
        gbc.writeMem(0x694a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfa5f);
        EXPECT(gbc.pc(), 0x694c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0350
        gbc.setState(0x3a46, 0xef47, 0x7eb0, 0xf2f9, 0x60e2, 0xcbaf, 0x1, 0x0);
        gbc.writeMem(0x3a46, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xef47);
        EXPECT(gbc.pc(), 0x3a48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0351
        gbc.setState(0xed7d, 0x4e0f, 0x20d0, 0x6f0e, 0xecfa, 0x80ec, 0x0, 0x0);
        gbc.writeMem(0xed7d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4e0f);
        EXPECT(gbc.pc(), 0xed7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed7d), 0xcb);
        EXPECT(gbc.readMem(0xed7e), 0xc);
        // CB 0C 0352
        gbc.setState(0xcc40, 0x4241, 0xc20, 0x4bb1, 0x4f95, 0xcbd6, 0x0, 0x1);
        gbc.writeMem(0xcc40, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4241);
        EXPECT(gbc.pc(), 0xcc42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc40), 0xcb);
        EXPECT(gbc.readMem(0xcc41), 0xc);
        // CB 0C 0354
        gbc.setState(0xe573, 0x66de, 0x5d60, 0x4f37, 0x9bc7, 0x2d4d, 0x1, 0x0);
        gbc.writeMem(0xe573, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x66de);
        EXPECT(gbc.pc(), 0xe575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe573), 0xcb);
        EXPECT(gbc.readMem(0xe574), 0xc);
        // CB 0C 0355
        gbc.setState(0x151c, 0x1b9, 0x4e90, 0x38c4, 0xe3e, 0x1301, 0x0, 0x0);
        gbc.writeMem(0x151c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1b9);
        EXPECT(gbc.pc(), 0x151e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0356
        gbc.setState(0x7de3, 0x673, 0x1c50, 0xe96b, 0xe94a, 0x72f3, 0x1, 0x0);
        gbc.writeMem(0x7de3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x673);
        EXPECT(gbc.pc(), 0x7de5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0357
        gbc.setState(0x65eb, 0xa1a9, 0xf2a0, 0x3737, 0x4cb0, 0xace4, 0x1, 0x1);
        gbc.writeMem(0x65eb, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa1a9);
        EXPECT(gbc.pc(), 0x65ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0358
        gbc.setState(0xaf51, 0x8f25, 0x8c60, 0x982d, 0xb4b7, 0x8f38, 0x0, 0x1);
        gbc.writeMem(0xaf51, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8f25);
        EXPECT(gbc.pc(), 0xaf53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf51), 0xcb);
        EXPECT(gbc.readMem(0xaf52), 0xc);
        // CB 0C 0359
        gbc.setState(0x528a, 0x7378, 0x3870, 0x5d0d, 0xf3c2, 0x197e, 0x0, 0x0);
        gbc.writeMem(0x528a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7378);
        EXPECT(gbc.pc(), 0x528c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 035A
        gbc.setState(0xa03e, 0x63be, 0x5640, 0x2149, 0x8f9a, 0x37d6, 0x0, 0x1);
        gbc.writeMem(0xa03e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x63be);
        EXPECT(gbc.pc(), 0xa040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa03e), 0xcb);
        EXPECT(gbc.readMem(0xa03f), 0xc);
        // CB 0C 035B
        gbc.setState(0xc80c, 0x3baa, 0xf230, 0x46c6, 0x8e3, 0xa05e, 0x0, 0x1);
        gbc.writeMem(0xc80c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3baa);
        EXPECT(gbc.pc(), 0xc80e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc80c), 0xcb);
        EXPECT(gbc.readMem(0xc80d), 0xc);
        // CB 0C 035C
        gbc.setState(0x49ae, 0xc7e8, 0x4690, 0x8e32, 0x2b0, 0x797b, 0x0, 0x0);
        gbc.writeMem(0x49ae, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc7e8);
        EXPECT(gbc.pc(), 0x49b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 035D
        gbc.setState(0x1944, 0x653a, 0x3990, 0x8abf, 0x7e75, 0x361d, 0x0, 0x0);
        gbc.writeMem(0x1944, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x653a);
        EXPECT(gbc.pc(), 0x1946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 035F
        gbc.setState(0xb60b, 0xd622, 0x1c90, 0x5502, 0x7cd4, 0xad88, 0x0, 0x0);
        gbc.writeMem(0xb60b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd622);
        EXPECT(gbc.pc(), 0xb60d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb60b), 0xcb);
        EXPECT(gbc.readMem(0xb60c), 0xc);
        // CB 0C 0360
        gbc.setState(0x7849, 0xd0d0, 0xd0e0, 0xbbbe, 0x8195, 0x7d61, 0x0, 0x0);
        gbc.writeMem(0x7849, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd0d0);
        EXPECT(gbc.pc(), 0x784b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0361
        gbc.setState(0xe8b9, 0x72f8, 0x9a10, 0x28fc, 0x8d43, 0x3dec, 0x0, 0x0);
        gbc.writeMem(0xe8b9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x72f8);
        EXPECT(gbc.pc(), 0xe8bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8b9), 0xcb);
        EXPECT(gbc.readMem(0xe8ba), 0xc);
        // CB 0C 0362
        gbc.setState(0x4a95, 0x6f2, 0xc30, 0x205a, 0x79b0, 0xe986, 0x1, 0x1);
        gbc.writeMem(0x4a95, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6f2);
        EXPECT(gbc.pc(), 0x4a97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0363
        gbc.setState(0x10ce, 0xd2c1, 0xe9a0, 0x484d, 0x7e15, 0xe3e3, 0x0, 0x1);
        gbc.writeMem(0x10ce, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd2c1);
        EXPECT(gbc.pc(), 0x10d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0364
        gbc.setState(0x540c, 0x74bb, 0x93e0, 0x6086, 0xf5bb, 0x951a, 0x0, 0x0);
        gbc.writeMem(0x540c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x74bb);
        EXPECT(gbc.pc(), 0x540e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0365
        gbc.setState(0x62a2, 0x2f26, 0xefa0, 0x21fb, 0xaab, 0xc13c, 0x1, 0x1);
        gbc.writeMem(0x62a2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2f26);
        EXPECT(gbc.pc(), 0x62a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0366
        gbc.setState(0x79d3, 0x56d3, 0x69a0, 0xb6d1, 0xf7a7, 0x1f39, 0x1, 0x0);
        gbc.writeMem(0x79d3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x56d3);
        EXPECT(gbc.pc(), 0x79d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0367
        gbc.setState(0x533d, 0x40ae, 0x1c40, 0xa40b, 0x4fe1, 0xe4b8, 0x0, 0x0);
        gbc.writeMem(0x533d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x40ae);
        EXPECT(gbc.pc(), 0x533f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0368
        gbc.setState(0x440e, 0x2dcf, 0xe370, 0x988a, 0xe299, 0x4b62, 0x0, 0x0);
        gbc.writeMem(0x440e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2dcf);
        EXPECT(gbc.pc(), 0x4410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0369
        gbc.setState(0xcbf, 0xe491, 0x8590, 0xaa63, 0xbc02, 0x80e9, 0x1, 0x1);
        gbc.writeMem(0xcbf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe491);
        EXPECT(gbc.pc(), 0xcc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 036A
        gbc.setState(0x7688, 0xcc63, 0x8370, 0x46d1, 0xe198, 0x4a09, 0x1, 0x1);
        gbc.writeMem(0x7688, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xcc63);
        EXPECT(gbc.pc(), 0x768a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 036B
        gbc.setState(0x9ab0, 0xa1c0, 0x22b0, 0xea35, 0x80b9, 0xe850, 0x1, 0x1);
        gbc.writeMem(0x9ab0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa1c0);
        EXPECT(gbc.pc(), 0x9ab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ab0), 0xcb);
        EXPECT(gbc.readMem(0x9ab1), 0xc);
        // CB 0C 036C
        gbc.setState(0x2fb6, 0x6d6b, 0x64f0, 0x7982, 0x51b6, 0x71a8, 0x0, 0x0);
        gbc.writeMem(0x2fb6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6d6b);
        EXPECT(gbc.pc(), 0x2fb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 036D
        gbc.setState(0xa84c, 0x8084, 0xd40, 0x4bbf, 0x5283, 0xf2ab, 0x1, 0x1);
        gbc.writeMem(0xa84c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x8084);
        EXPECT(gbc.pc(), 0xa84e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa84c), 0xcb);
        EXPECT(gbc.readMem(0xa84d), 0xc);
        // CB 0C 036E
        gbc.setState(0x442d, 0x8293, 0x2c00, 0xb20d, 0x4fc8, 0x68f7, 0x1, 0x0);
        gbc.writeMem(0x442d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8293);
        EXPECT(gbc.pc(), 0x442f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 036F
        gbc.setState(0x5bf9, 0xc7e7, 0x71f0, 0xa652, 0xef45, 0x3068, 0x1, 0x1);
        gbc.writeMem(0x5bf9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc7e7);
        EXPECT(gbc.pc(), 0x5bfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0370
        gbc.setState(0x4330, 0x8fc2, 0x9f0, 0x2ab3, 0x4920, 0xbcbb, 0x0, 0x1);
        gbc.writeMem(0x4330, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8fc2);
        EXPECT(gbc.pc(), 0x4332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0371
        gbc.setState(0x7030, 0x70bc, 0xe440, 0x1ba, 0x3e0c, 0x1ccd, 0x1, 0x0);
        gbc.writeMem(0x7030, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x70bc);
        EXPECT(gbc.pc(), 0x7032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0372
        gbc.setState(0x2426, 0x2218, 0xf2f0, 0x1720, 0xd9ad, 0xa10, 0x1, 0x1);
        gbc.writeMem(0x2426, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2218);
        EXPECT(gbc.pc(), 0x2428);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0373
        gbc.setState(0x4a00, 0xa559, 0xbf30, 0xd56c, 0x73cb, 0x15d1, 0x0, 0x1);
        gbc.writeMem(0x4a00, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa559);
        EXPECT(gbc.pc(), 0x4a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0374
        gbc.setState(0xa43, 0x4f8d, 0x3760, 0xf1cd, 0xdfe8, 0x25c1, 0x0, 0x0);
        gbc.writeMem(0xa43, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4f8d);
        EXPECT(gbc.pc(), 0xa45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0375
        gbc.setState(0x1208, 0x6f10, 0xc90, 0x3907, 0xc5f9, 0xc113, 0x0, 0x1);
        gbc.writeMem(0x1208, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6f10);
        EXPECT(gbc.pc(), 0x120a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0376
        gbc.setState(0x78b9, 0xf37b, 0x2eb0, 0xa964, 0x142a, 0xbe5b, 0x1, 0x0);
        gbc.writeMem(0x78b9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf37b);
        EXPECT(gbc.pc(), 0x78bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0377
        gbc.setState(0x9874, 0x5781, 0xfbc0, 0x31d, 0xf1b2, 0x21ec, 0x1, 0x1);
        gbc.writeMem(0x9874, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5781);
        EXPECT(gbc.pc(), 0x9876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9874), 0xcb);
        EXPECT(gbc.readMem(0x9875), 0xc);
        // CB 0C 0378
        gbc.setState(0xbccf, 0x759e, 0x75c0, 0x2b15, 0xdcf0, 0x38f6, 0x1, 0x0);
        gbc.writeMem(0xbccf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x759e);
        EXPECT(gbc.pc(), 0xbcd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbccf), 0xcb);
        EXPECT(gbc.readMem(0xbcd0), 0xc);
        // CB 0C 0379
        gbc.setState(0x9cf, 0x7d86, 0xb510, 0x74a5, 0x3580, 0xc959, 0x1, 0x0);
        gbc.writeMem(0x9cf, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7d86);
        EXPECT(gbc.pc(), 0x9d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 037A
        gbc.setState(0x9fb3, 0x9e0e, 0x86e0, 0xbdb2, 0x72a0, 0xf096, 0x0, 0x0);
        gbc.writeMem(0x9fb3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9e0e);
        EXPECT(gbc.pc(), 0x9fb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fb3), 0xcb);
        EXPECT(gbc.readMem(0x9fb4), 0xc);
        // CB 0C 037B
        gbc.setState(0x1d5d, 0x1333, 0x3e50, 0x795, 0x9a2d, 0xd2e8, 0x1, 0x0);
        gbc.writeMem(0x1d5d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1333);
        EXPECT(gbc.pc(), 0x1d5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 037C
        gbc.setState(0x660d, 0x9aad, 0x8fd0, 0xdad5, 0xdc47, 0x67a4, 0x1, 0x1);
        gbc.writeMem(0x660d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9aad);
        EXPECT(gbc.pc(), 0x660f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 037D
        gbc.setState(0x8b6f, 0x8a97, 0xdfd0, 0xb57b, 0xe563, 0x9045, 0x0, 0x1);
        gbc.writeMem(0x8b6f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8a97);
        EXPECT(gbc.pc(), 0x8b71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b6f), 0xcb);
        EXPECT(gbc.readMem(0x8b70), 0xc);
        // CB 0C 037E
        gbc.setState(0x70c4, 0xe8fe, 0xb770, 0x76fe, 0x96ce, 0xd2a0, 0x0, 0x0);
        gbc.writeMem(0x70c4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe8fe);
        EXPECT(gbc.pc(), 0x70c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 037F
        gbc.setState(0x26, 0x5dbd, 0xe2c0, 0x7df4, 0x2804, 0x59a8, 0x0, 0x0);
        gbc.writeMem(0x26, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5dbd);
        EXPECT(gbc.pc(), 0x28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0380
        gbc.setState(0xcbca, 0xa59c, 0xe5a0, 0x3e68, 0x5842, 0x305e, 0x0, 0x1);
        gbc.writeMem(0xcbca, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa59c);
        EXPECT(gbc.pc(), 0xcbcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbca), 0xcb);
        EXPECT(gbc.readMem(0xcbcb), 0xc);
        // CB 0C 0381
        gbc.setState(0x8672, 0xcbec, 0xe500, 0xd3bd, 0x423c, 0xcd68, 0x1, 0x0);
        gbc.writeMem(0x8672, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xcbec);
        EXPECT(gbc.pc(), 0x8674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8672), 0xcb);
        EXPECT(gbc.readMem(0x8673), 0xc);
        // CB 0C 0382
        gbc.setState(0xd241, 0x31de, 0x3890, 0x1540, 0x3315, 0xf366, 0x1, 0x1);
        gbc.writeMem(0xd241, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x31de);
        EXPECT(gbc.pc(), 0xd243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd241), 0xcb);
        EXPECT(gbc.readMem(0xd242), 0xc);
        // CB 0C 0383
        gbc.setState(0x3920, 0xfe37, 0x3690, 0x8427, 0xe0ac, 0x7b3b, 0x1, 0x0);
        gbc.writeMem(0x3920, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xfe37);
        EXPECT(gbc.pc(), 0x3922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0384
        gbc.setState(0x2b6c, 0x3b31, 0x9a20, 0x141a, 0x488e, 0x9eb, 0x0, 0x0);
        gbc.writeMem(0x2b6c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3b31);
        EXPECT(gbc.pc(), 0x2b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0385
        gbc.setState(0x8019, 0xad7e, 0x8da0, 0x67b7, 0x6200, 0x1abe, 0x1, 0x1);
        gbc.writeMem(0x8019, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xad7e);
        EXPECT(gbc.pc(), 0x801b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8019), 0xcb);
        EXPECT(gbc.readMem(0x801a), 0xc);
        // CB 0C 0386
        gbc.setState(0x54f5, 0xcf12, 0xf450, 0xf8fd, 0x7905, 0x5c46, 0x0, 0x0);
        gbc.writeMem(0x54f5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xcf12);
        EXPECT(gbc.pc(), 0x54f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0388
        gbc.setState(0xd3f4, 0x8ee6, 0x5cf0, 0x13be, 0x5b2d, 0xfabc, 0x1, 0x0);
        gbc.writeMem(0xd3f4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8ee6);
        EXPECT(gbc.pc(), 0xd3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3f4), 0xcb);
        EXPECT(gbc.readMem(0xd3f5), 0xc);
        // CB 0C 0389
        gbc.setState(0xb112, 0x868b, 0xb9f0, 0xbb02, 0x5b9d, 0x94bc, 0x1, 0x1);
        gbc.writeMem(0xb112, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x868b);
        EXPECT(gbc.pc(), 0xb114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb112), 0xcb);
        EXPECT(gbc.readMem(0xb113), 0xc);
        // CB 0C 038A
        gbc.setState(0x17c5, 0xeaba, 0x9850, 0xd0b7, 0xb408, 0xbbbb, 0x1, 0x0);
        gbc.writeMem(0x17c5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xeaba);
        EXPECT(gbc.pc(), 0x17c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 038B
        gbc.setState(0x290c, 0x474f, 0xb8c0, 0x1c0f, 0x7728, 0xdb9f, 0x1, 0x0);
        gbc.writeMem(0x290c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x474f);
        EXPECT(gbc.pc(), 0x290e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 038C
        gbc.setState(0x3554, 0xca10, 0xa050, 0xb478, 0xc870, 0x685d, 0x1, 0x0);
        gbc.writeMem(0x3554, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xca10);
        EXPECT(gbc.pc(), 0x3556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 038D
        gbc.setState(0xa934, 0xfd45, 0xb600, 0x512c, 0xac65, 0x624a, 0x0, 0x0);
        gbc.writeMem(0xa934, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xfd45);
        EXPECT(gbc.pc(), 0xa936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa934), 0xcb);
        EXPECT(gbc.readMem(0xa935), 0xc);
        // CB 0C 038E
        gbc.setState(0x289f, 0x2210, 0x9ce0, 0x5012, 0x1e87, 0x4df5, 0x0, 0x1);
        gbc.writeMem(0x289f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2210);
        EXPECT(gbc.pc(), 0x28a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 038F
        gbc.setState(0x8aac, 0xab0, 0x900, 0x71ac, 0x7c3c, 0x8014, 0x0, 0x1);
        gbc.writeMem(0x8aac, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xab0);
        EXPECT(gbc.pc(), 0x8aae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aac), 0xcb);
        EXPECT(gbc.readMem(0x8aad), 0xc);
        // CB 0C 0390
        gbc.setState(0xedfe, 0x4c4f, 0x6e80, 0x6998, 0xb522, 0xfcda, 0x0, 0x1);
        gbc.writeMem(0xedfe, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4c4f);
        EXPECT(gbc.pc(), 0xee00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedfe), 0xcb);
        EXPECT(gbc.readMem(0xedff), 0xc);
        // CB 0C 0391
        gbc.setState(0x8931, 0x7d62, 0xc0e0, 0x3c29, 0x5a60, 0xa8e4, 0x1, 0x1);
        gbc.writeMem(0x8931, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7d62);
        EXPECT(gbc.pc(), 0x8933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8931), 0xcb);
        EXPECT(gbc.readMem(0x8932), 0xc);
        // CB 0C 0392
        gbc.setState(0xbd87, 0xe57d, 0xe4a0, 0xcfa2, 0x523c, 0xf97f, 0x1, 0x1);
        gbc.writeMem(0xbd87, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe57d);
        EXPECT(gbc.pc(), 0xbd89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd87), 0xcb);
        EXPECT(gbc.readMem(0xbd88), 0xc);
        // CB 0C 0393
        gbc.setState(0x735, 0x1e35, 0x6d40, 0x1950, 0xe624, 0xdcf2, 0x0, 0x0);
        gbc.writeMem(0x735, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1e35);
        EXPECT(gbc.pc(), 0x737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0394
        gbc.setState(0x3d45, 0xc33d, 0x3dc0, 0xc67, 0x8394, 0xf9c1, 0x1, 0x0);
        gbc.writeMem(0x3d45, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc33d);
        EXPECT(gbc.pc(), 0x3d47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0395
        gbc.setState(0x18a9, 0xb0d6, 0x99e0, 0x256c, 0x8268, 0xe69f, 0x1, 0x1);
        gbc.writeMem(0x18a9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb0d6);
        EXPECT(gbc.pc(), 0x18ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0396
        gbc.setState(0x5406, 0x2d65, 0x7380, 0xbca1, 0xc655, 0x1d09, 0x0, 0x1);
        gbc.writeMem(0x5406, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2d65);
        EXPECT(gbc.pc(), 0x5408);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 0397
        gbc.setState(0xb00c, 0x8ebd, 0x3530, 0xd881, 0x2500, 0x1fba, 0x0, 0x0);
        gbc.writeMem(0xb00c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8ebd);
        EXPECT(gbc.pc(), 0xb00e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb00c), 0xcb);
        EXPECT(gbc.readMem(0xb00d), 0xc);
        // CB 0C 0398
        gbc.setState(0x623a, 0xd573, 0x89f0, 0xebe0, 0x2c77, 0xf02f, 0x0, 0x0);
        gbc.writeMem(0x623a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd573);
        EXPECT(gbc.pc(), 0x623c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 0399
        gbc.setState(0x4097, 0x7ff3, 0xf2b0, 0x3398, 0x9a25, 0xdf15, 0x0, 0x0);
        gbc.writeMem(0x4097, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7ff3);
        EXPECT(gbc.pc(), 0x4099);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 039A
        gbc.setState(0x5aa, 0xcb31, 0xc950, 0x759f, 0x6103, 0x2d27, 0x0, 0x1);
        gbc.writeMem(0x5aa, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xcb31);
        EXPECT(gbc.pc(), 0x5ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 039B
        gbc.setState(0xd318, 0x7982, 0x3d60, 0x5158, 0x2510, 0x9303, 0x0, 0x1);
        gbc.writeMem(0xd318, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7982);
        EXPECT(gbc.pc(), 0xd31a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd318), 0xcb);
        EXPECT(gbc.readMem(0xd319), 0xc);
        // CB 0C 039C
        gbc.setState(0x30f1, 0x7628, 0x48f0, 0x9b99, 0x1c12, 0x83ff, 0x0, 0x1);
        gbc.writeMem(0x30f1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7628);
        EXPECT(gbc.pc(), 0x30f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 039D
        gbc.setState(0xccc6, 0xc7ae, 0xfe70, 0x9973, 0x1a9, 0xab30, 0x0, 0x0);
        gbc.writeMem(0xccc6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc7ae);
        EXPECT(gbc.pc(), 0xccc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccc6), 0xcb);
        EXPECT(gbc.readMem(0xccc7), 0xc);
        // CB 0C 039E
        gbc.setState(0x23d, 0x316d, 0x5d40, 0x1a2, 0x8cf2, 0x7894, 0x0, 0x1);
        gbc.writeMem(0x23d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x316d);
        EXPECT(gbc.pc(), 0x23f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 039F
        gbc.setState(0xcc91, 0x252b, 0x6130, 0x2e9d, 0xc737, 0xf93f, 0x0, 0x0);
        gbc.writeMem(0xcc91, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x252b);
        EXPECT(gbc.pc(), 0xcc93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc91), 0xcb);
        EXPECT(gbc.readMem(0xcc92), 0xc);
        // CB 0C 03A0
        gbc.setState(0x3bb0, 0x94d1, 0xee70, 0x66b6, 0xaeb, 0x4b0c, 0x0, 0x0);
        gbc.writeMem(0x3bb0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x94d1);
        EXPECT(gbc.pc(), 0x3bb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03A1
        gbc.setState(0x3609, 0xa011, 0x9df0, 0xebaa, 0xc5c4, 0x7e7d, 0x1, 0x0);
        gbc.writeMem(0x3609, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa011);
        EXPECT(gbc.pc(), 0x360b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 03A2
        gbc.setState(0x2011, 0x6b59, 0xa650, 0x5487, 0xf37e, 0x2fed, 0x1, 0x1);
        gbc.writeMem(0x2011, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6b59);
        EXPECT(gbc.pc(), 0x2013);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03A3
        gbc.setState(0x4d14, 0x6a49, 0x5c60, 0xda07, 0xb5ac, 0x109c, 0x0, 0x1);
        gbc.writeMem(0x4d14, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6a49);
        EXPECT(gbc.pc(), 0x4d16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 03A4
        gbc.setState(0x8f50, 0x989c, 0x5e80, 0xeaa2, 0x9505, 0xf51b, 0x0, 0x0);
        gbc.writeMem(0x8f50, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x989c);
        EXPECT(gbc.pc(), 0x8f52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f50), 0xcb);
        EXPECT(gbc.readMem(0x8f51), 0xc);
        // CB 0C 03A5
        gbc.setState(0x3574, 0xa9d6, 0x8910, 0x8061, 0xdf30, 0xdc9b, 0x0, 0x1);
        gbc.writeMem(0x3574, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa9d6);
        EXPECT(gbc.pc(), 0x3576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 03A6
        gbc.setState(0x36ed, 0x6250, 0x5c90, 0x4b3d, 0x3485, 0x876c, 0x1, 0x1);
        gbc.writeMem(0x36ed, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6250);
        EXPECT(gbc.pc(), 0x36ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03A7
        gbc.setState(0xe1ef, 0x9114, 0x4c60, 0x8bea, 0x602a, 0x1aea, 0x1, 0x1);
        gbc.writeMem(0xe1ef, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9114);
        EXPECT(gbc.pc(), 0xe1f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1ef), 0xcb);
        EXPECT(gbc.readMem(0xe1f0), 0xc);
        // CB 0C 03A8
        gbc.setState(0x15e4, 0xa417, 0x8220, 0xae74, 0x4bba, 0x587, 0x1, 0x1);
        gbc.writeMem(0x15e4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa417);
        EXPECT(gbc.pc(), 0x15e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03A9
        gbc.setState(0x10c5, 0xd5e5, 0x62c0, 0xbb9b, 0xe752, 0x5fb5, 0x0, 0x0);
        gbc.writeMem(0x10c5, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd5e5);
        EXPECT(gbc.pc(), 0x10c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03AA
        gbc.setState(0x7e9b, 0xd7d1, 0x50e0, 0xbf56, 0xe936, 0xa788, 0x1, 0x1);
        gbc.writeMem(0x7e9b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd7d1);
        EXPECT(gbc.pc(), 0x7e9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03AB
        gbc.setState(0xba04, 0x55, 0xe240, 0xc11, 0x2799, 0x4f78, 0x0, 0x0);
        gbc.writeMem(0xba04, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x55);
        EXPECT(gbc.pc(), 0xba06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba04), 0xcb);
        EXPECT(gbc.readMem(0xba05), 0xc);
        // CB 0C 03AC
        gbc.setState(0x6ed1, 0x8306, 0xdbb0, 0x5e43, 0x633b, 0xccad, 0x0, 0x1);
        gbc.writeMem(0x6ed1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8306);
        EXPECT(gbc.pc(), 0x6ed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 03AD
        gbc.setState(0xdfb2, 0x67d5, 0xe2d0, 0x7d4e, 0xc619, 0x1f34, 0x1, 0x1);
        gbc.writeMem(0xdfb2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x67d5);
        EXPECT(gbc.pc(), 0xdfb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfb2), 0xcb);
        EXPECT(gbc.readMem(0xdfb3), 0xc);
        // CB 0C 03AE
        gbc.setState(0x2d40, 0xc256, 0x1640, 0xb87d, 0x563, 0x4a25, 0x0, 0x0);
        gbc.writeMem(0x2d40, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc256);
        EXPECT(gbc.pc(), 0x2d42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 03AF
        gbc.setState(0x3e7e, 0x5d71, 0xb620, 0xa330, 0x9064, 0xb401, 0x1, 0x1);
        gbc.writeMem(0x3e7e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5d71);
        EXPECT(gbc.pc(), 0x3e80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 03B0
        gbc.setState(0x6b6e, 0x5e99, 0x1650, 0xfaa5, 0xfcf, 0xef1b, 0x0, 0x1);
        gbc.writeMem(0x6b6e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5e99);
        EXPECT(gbc.pc(), 0x6b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03B1
        gbc.setState(0x5b1a, 0x4422, 0x15d0, 0x78c3, 0xceee, 0x5e9a, 0x1, 0x1);
        gbc.writeMem(0x5b1a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4422);
        EXPECT(gbc.pc(), 0x5b1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 03B2
        gbc.setState(0xadc3, 0x65a8, 0x9c40, 0x7c45, 0x9c8e, 0xf357, 0x1, 0x1);
        gbc.writeMem(0xadc3, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x65a8);
        EXPECT(gbc.pc(), 0xadc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadc3), 0xcb);
        EXPECT(gbc.readMem(0xadc4), 0xc);
        // CB 0C 03B3
        gbc.setState(0xb9c, 0x2c48, 0xaf40, 0x1f78, 0x5058, 0x44b7, 0x1, 0x0);
        gbc.writeMem(0xb9c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2c48);
        EXPECT(gbc.pc(), 0xb9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 03B5
        gbc.setState(0x6797, 0x2584, 0x8330, 0x4bd4, 0x56a5, 0xf13a, 0x1, 0x0);
        gbc.writeMem(0x6797, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2584);
        EXPECT(gbc.pc(), 0x6799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03B6
        gbc.setState(0xe29d, 0x2fd7, 0xfc80, 0xa9d5, 0x16c5, 0xe0fc, 0x0, 0x1);
        gbc.writeMem(0xe29d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2fd7);
        EXPECT(gbc.pc(), 0xe29f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe29d), 0xcb);
        EXPECT(gbc.readMem(0xe29e), 0xc);
        // CB 0C 03B7
        gbc.setState(0xe1de, 0x382d, 0x92a0, 0x6e67, 0xf9a1, 0x7a49, 0x1, 0x0);
        gbc.writeMem(0xe1de, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x382d);
        EXPECT(gbc.pc(), 0xe1e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1de), 0xcb);
        EXPECT(gbc.readMem(0xe1df), 0xc);
        // CB 0C 03B8
        gbc.setState(0x429f, 0x1e03, 0xd590, 0x61ad, 0xf72a, 0x31a6, 0x0, 0x0);
        gbc.writeMem(0x429f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1e03);
        EXPECT(gbc.pc(), 0x42a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03B9
        gbc.setState(0x2147, 0x69ec, 0x8e00, 0x93d7, 0x31ff, 0x8590, 0x1, 0x1);
        gbc.writeMem(0x2147, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x69ec);
        EXPECT(gbc.pc(), 0x2149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03BA
        gbc.setState(0x59e6, 0x9321, 0x8da0, 0x30fb, 0xbe22, 0x2944, 0x1, 0x0);
        gbc.writeMem(0x59e6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9321);
        EXPECT(gbc.pc(), 0x59e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03BB
        gbc.setState(0x6179, 0xe82a, 0x13c0, 0xbd97, 0x1814, 0x8f8c, 0x0, 0x0);
        gbc.writeMem(0x6179, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe82a);
        EXPECT(gbc.pc(), 0x617b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03BC
        gbc.setState(0xbbfe, 0x4b36, 0x2620, 0xb2ba, 0x158, 0xe920, 0x1, 0x0);
        gbc.writeMem(0xbbfe, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4b36);
        EXPECT(gbc.pc(), 0xbc00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbfe), 0xcb);
        EXPECT(gbc.readMem(0xbbff), 0xc);
        // CB 0C 03BD
        gbc.setState(0xd77b, 0x7ce8, 0x1fc0, 0xd2aa, 0x2e40, 0x8895, 0x0, 0x1);
        gbc.writeMem(0xd77b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7ce8);
        EXPECT(gbc.pc(), 0xd77d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd77b), 0xcb);
        EXPECT(gbc.readMem(0xd77c), 0xc);
        // CB 0C 03BE
        gbc.setState(0xb6fc, 0x57d0, 0x5f60, 0x70dd, 0xfcf1, 0x2a8b, 0x0, 0x0);
        gbc.writeMem(0xb6fc, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x57d0);
        EXPECT(gbc.pc(), 0xb6fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6fc), 0xcb);
        EXPECT(gbc.readMem(0xb6fd), 0xc);
        // CB 0C 03BF
        gbc.setState(0x89c7, 0x4329, 0xb9d0, 0xb3e4, 0x4032, 0xf9f1, 0x0, 0x0);
        gbc.writeMem(0x89c7, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x4329);
        EXPECT(gbc.pc(), 0x89c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89c7), 0xcb);
        EXPECT(gbc.readMem(0x89c8), 0xc);
        // CB 0C 03C0
        gbc.setState(0x8ce1, 0x3ba6, 0xf040, 0x7684, 0xe913, 0x4399, 0x0, 0x1);
        gbc.writeMem(0x8ce1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3ba6);
        EXPECT(gbc.pc(), 0x8ce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ce1), 0xcb);
        EXPECT(gbc.readMem(0x8ce2), 0xc);
        // CB 0C 03C1
        gbc.setState(0x1447, 0x2f58, 0x3b0, 0x97c1, 0xa4b9, 0xd74f, 0x1, 0x0);
        gbc.writeMem(0x1447, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2f58);
        EXPECT(gbc.pc(), 0x1449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03C2
        gbc.setState(0x7bb1, 0xd3c2, 0x4120, 0x9788, 0xbb13, 0x160d, 0x0, 0x1);
        gbc.writeMem(0x7bb1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd3c2);
        EXPECT(gbc.pc(), 0x7bb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 03C3
        gbc.setState(0xd874, 0xb1ca, 0xe3a0, 0x607d, 0x42f6, 0x5772, 0x0, 0x0);
        gbc.writeMem(0xd874, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb1ca);
        EXPECT(gbc.pc(), 0xd876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd874), 0xcb);
        EXPECT(gbc.readMem(0xd875), 0xc);
        // CB 0C 03C4
        gbc.setState(0xd763, 0x9815, 0x3150, 0x7716, 0xbd90, 0x8c7d, 0x1, 0x0);
        gbc.writeMem(0xd763, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9815);
        EXPECT(gbc.pc(), 0xd765);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd763), 0xcb);
        EXPECT(gbc.readMem(0xd764), 0xc);
        // CB 0C 03C5
        gbc.setState(0x2250, 0xd26f, 0x9260, 0x3f8, 0x84c4, 0xfe4, 0x0, 0x0);
        gbc.writeMem(0x2250, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd26f);
        EXPECT(gbc.pc(), 0x2252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03C6
        gbc.setState(0x5a7d, 0x47b8, 0x63e0, 0xd599, 0x5df0, 0x737f, 0x1, 0x1);
        gbc.writeMem(0x5a7d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x47b8);
        EXPECT(gbc.pc(), 0x5a7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03C7
        gbc.setState(0xb3f9, 0xa924, 0x7d00, 0x54b6, 0x265b, 0xc1ac, 0x0, 0x1);
        gbc.writeMem(0xb3f9, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa924);
        EXPECT(gbc.pc(), 0xb3fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f9), 0xcb);
        EXPECT(gbc.readMem(0xb3fa), 0xc);
        // CB 0C 03C8
        gbc.setState(0x35df, 0xbe32, 0xdf20, 0xd677, 0x71cc, 0x3fa5, 0x0, 0x0);
        gbc.writeMem(0x35df, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbe32);
        EXPECT(gbc.pc(), 0x35e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03C9
        gbc.setState(0x539a, 0x5bdd, 0xd220, 0x85de, 0x314e, 0xc81e, 0x1, 0x0);
        gbc.writeMem(0x539a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5bdd);
        EXPECT(gbc.pc(), 0x539c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 03CA
        gbc.setState(0x283b, 0x49d5, 0x31f0, 0x8590, 0xd14d, 0xbf25, 0x0, 0x1);
        gbc.writeMem(0x283b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x49d5);
        EXPECT(gbc.pc(), 0x283d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03CB
        gbc.setState(0xc64d, 0x5cc, 0xcfe0, 0x817d, 0xe3e8, 0x1041, 0x0, 0x1);
        gbc.writeMem(0xc64d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5cc);
        EXPECT(gbc.pc(), 0xc64f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc64d), 0xcb);
        EXPECT(gbc.readMem(0xc64e), 0xc);
        // CB 0C 03CC
        gbc.setState(0x60d1, 0xe0c3, 0x9030, 0x3976, 0x63e1, 0xf974, 0x0, 0x1);
        gbc.writeMem(0x60d1, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe0c3);
        EXPECT(gbc.pc(), 0x60d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03CD
        gbc.setState(0x103e, 0x1908, 0x52e0, 0xe8bb, 0xa61b, 0x3dd3, 0x1, 0x1);
        gbc.writeMem(0x103e, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x1908);
        EXPECT(gbc.pc(), 0x1040);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03CE
        gbc.setState(0x9793, 0x545a, 0x90, 0xb773, 0xa9b5, 0xc9c7, 0x0, 0x0);
        gbc.writeMem(0x9793, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x545a);
        EXPECT(gbc.pc(), 0x9795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9793), 0xcb);
        EXPECT(gbc.readMem(0x9794), 0xc);
        // CB 0C 03CF
        gbc.setState(0x8e0f, 0x8077, 0xca70, 0xd14, 0x415c, 0x332b, 0x1, 0x1);
        gbc.writeMem(0x8e0f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8077);
        EXPECT(gbc.pc(), 0x8e11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e0f), 0xcb);
        EXPECT(gbc.readMem(0x8e10), 0xc);
        // CB 0C 03D0
        gbc.setState(0x9cd4, 0xe95a, 0x5f60, 0x4917, 0xf54b, 0x2ba1, 0x0, 0x1);
        gbc.writeMem(0x9cd4, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe95a);
        EXPECT(gbc.pc(), 0x9cd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cd4), 0xcb);
        EXPECT(gbc.readMem(0x9cd5), 0xc);
        // CB 0C 03D1
        gbc.setState(0x810c, 0x7745, 0xcca0, 0xf53a, 0x3fe, 0x4ae, 0x1, 0x0);
        gbc.writeMem(0x810c, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7745);
        EXPECT(gbc.pc(), 0x810e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x810c), 0xcb);
        EXPECT(gbc.readMem(0x810d), 0xc);
        // CB 0C 03D2
        gbc.setState(0x63e2, 0x16f2, 0x4c80, 0xfdaf, 0x8597, 0xd0f2, 0x1, 0x0);
        gbc.writeMem(0x63e2, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x16f2);
        EXPECT(gbc.pc(), 0x63e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 03D3
        gbc.setState(0x4bbe, 0x9546, 0xc6f0, 0x7b32, 0x1ab6, 0x6abf, 0x0, 0x0);
        gbc.writeMem(0x4bbe, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9546);
        EXPECT(gbc.pc(), 0x4bc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 03D4
        gbc.setState(0xe3af, 0xf47, 0xcb00, 0x5a7c, 0xd41e, 0xb6e0, 0x1, 0x1);
        gbc.writeMem(0xe3af, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf47);
        EXPECT(gbc.pc(), 0xe3b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3af), 0xcb);
        EXPECT(gbc.readMem(0xe3b0), 0xc);
        // CB 0C 03D5
        gbc.setState(0x7723, 0x89c4, 0x5b10, 0x7dc4, 0xa443, 0x93ce, 0x0, 0x0);
        gbc.writeMem(0x7723, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x89c4);
        EXPECT(gbc.pc(), 0x7725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03D6
        gbc.setState(0x975, 0x1000, 0xef40, 0xbb0, 0x276a, 0xa36e, 0x0, 0x1);
        gbc.writeMem(0x975, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1000);
        EXPECT(gbc.pc(), 0x977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03D7
        gbc.setState(0x4e10, 0x4697, 0x44d0, 0xc2e2, 0xcbba, 0x149d, 0x0, 0x0);
        gbc.writeMem(0x4e10, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4697);
        EXPECT(gbc.pc(), 0x4e12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 03D8
        gbc.setState(0xb69a, 0x4459, 0xb870, 0x79a1, 0xa991, 0xd6d8, 0x1, 0x0);
        gbc.writeMem(0xb69a, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4459);
        EXPECT(gbc.pc(), 0xb69c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb69a), 0xcb);
        EXPECT(gbc.readMem(0xb69b), 0xc);
        // CB 0C 03D9
        gbc.setState(0x633b, 0x3fd5, 0x5430, 0xafa4, 0xb99b, 0xa12b, 0x0, 0x0);
        gbc.writeMem(0x633b, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3fd5);
        EXPECT(gbc.pc(), 0x633d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03DA
        gbc.setState(0xa679, 0xe178, 0xe6a0, 0xdd4d, 0x3f5, 0x5be5, 0x1, 0x1);
        gbc.writeMem(0xa679, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe178);
        EXPECT(gbc.pc(), 0xa67b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa679), 0xcb);
        EXPECT(gbc.readMem(0xa67a), 0xc);
        // CB 0C 03DB
        gbc.setState(0x86a0, 0xa8b1, 0x18c0, 0xe335, 0xe12d, 0x5d0f, 0x1, 0x0);
        gbc.writeMem(0x86a0, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa8b1);
        EXPECT(gbc.pc(), 0x86a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86a0), 0xcb);
        EXPECT(gbc.readMem(0x86a1), 0xc);
        // CB 0C 03DC
        gbc.setState(0x7cd6, 0xed1f, 0x1ad0, 0x5eaa, 0x5079, 0x8500, 0x0, 0x0);
        gbc.writeMem(0x7cd6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xed1f);
        EXPECT(gbc.pc(), 0x7cd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03DD
        gbc.setState(0x7aed, 0x6d78, 0x8de0, 0x9e47, 0xa4ac, 0x9d58, 0x1, 0x1);
        gbc.writeMem(0x7aed, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6d78);
        EXPECT(gbc.pc(), 0x7aef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03DE
        gbc.setState(0xd496, 0x436c, 0xd00, 0x1c9b, 0x7708, 0x26a, 0x0, 0x1);
        gbc.writeMem(0xd496, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x436c);
        EXPECT(gbc.pc(), 0xd498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd496), 0xcb);
        EXPECT(gbc.readMem(0xd497), 0xc);
        // CB 0C 03DF
        gbc.setState(0x37de, 0x87ca, 0xf560, 0xc7c3, 0x4938, 0xe539, 0x1, 0x1);
        gbc.writeMem(0x37de, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x87ca);
        EXPECT(gbc.pc(), 0x37e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0C 03E0
        gbc.setState(0xc33f, 0x4c5a, 0xbb00, 0x523b, 0xcabf, 0xbc78, 0x0, 0x1);
        gbc.writeMem(0xc33f, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4c5a);
        EXPECT(gbc.pc(), 0xc341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc33f), 0xcb);
        EXPECT(gbc.readMem(0xc340), 0xc);
        // CB 0C 03E1
        gbc.setState(0xcd07, 0x7d2, 0xd480, 0x1fd9, 0xf10c, 0x2528, 0x1, 0x0);
        gbc.writeMem(0xcd07, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7d2);
        EXPECT(gbc.pc(), 0xcd09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd07), 0xcb);
        EXPECT(gbc.readMem(0xcd08), 0xc);
        // CB 0C 03E3
        gbc.setState(0x3689, 0xf1e3, 0x5d90, 0xdc68, 0xb1d2, 0xf4e0, 0x1, 0x0);
        gbc.writeMem(0x3689, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf1e3);
        EXPECT(gbc.pc(), 0x368b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 03E4
        gbc.setState(0x77b6, 0xc707, 0x9050, 0x4f68, 0xf236, 0x72af, 0x1, 0x1);
        gbc.writeMem(0x77b6, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc707);
        EXPECT(gbc.pc(), 0x77b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0C 03E5
        gbc.setState(0xbc9d, 0xf37e, 0x4fe0, 0xa06f, 0x4c04, 0x14af, 0x0, 0x1);
        gbc.writeMem(0xbc9d, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf37e);
        EXPECT(gbc.pc(), 0xbc9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc9d), 0xcb);
        EXPECT(gbc.readMem(0xbc9e), 0xc);
        // CB 0C 03E6
        gbc.setState(0xe699, 0x21e9, 0xde70, 0x56ae, 0x10bc, 0x98c4, 0x0, 0x1);
        gbc.writeMem(0xe699, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x21e9);
        EXPECT(gbc.pc(), 0xe69b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe699), 0xcb);
        EXPECT(gbc.readMem(0xe69a), 0xc);
        // CB 0C 03E7
        gbc.setState(0x1009, 0x6ea9, 0x88c0, 0xa6ea, 0x3a49, 0x90ca, 0x1, 0x1);
        gbc.writeMem(0x1009, { 0xcb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6ea9);
        EXPECT(gbc.pc(), 0x100b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
