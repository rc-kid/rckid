    TEST(gbcemu, opcode_cb_d8) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB D8 0000
        gbc.setState(0x2fd5, 0x3754, 0x590, 0x3df, 0x3832, 0x83a2, 0x1, 0x0);
        gbc.writeMem(0x2fd5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3754, gbc.sp());
        EXPECT(0x2fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0001
        gbc.setState(0x9a1d, 0x982b, 0xac00, 0x1f7d, 0x14f, 0x83e8, 0x0, 0x0);
        gbc.writeMem(0x9a1d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x982b, gbc.sp());
        EXPECT(0x9a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a1d));
        EXPECT(0xd8, gbc.readMem(0x9a1e));
        // CB D8 0002
        gbc.setState(0x81ae, 0xd218, 0xe0d0, 0xbc42, 0xf3fa, 0x86e6, 0x0, 0x1);
        gbc.writeMem(0x81ae, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd218, gbc.sp());
        EXPECT(0x81b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ae));
        EXPECT(0xd8, gbc.readMem(0x81af));
        // CB D8 0003
        gbc.setState(0x8cfb, 0x1c26, 0x5d70, 0xad5f, 0x7dd9, 0x76ae, 0x0, 0x0);
        gbc.writeMem(0x8cfb, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1c26, gbc.sp());
        EXPECT(0x8cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cfb));
        EXPECT(0xd8, gbc.readMem(0x8cfc));
        // CB D8 0004
        gbc.setState(0x4d06, 0x3cd, 0x1440, 0xd618, 0xe24a, 0x3a2a, 0x1, 0x1);
        gbc.writeMem(0x4d06, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3cd, gbc.sp());
        EXPECT(0x4d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0005
        gbc.setState(0xe6ec, 0x75b1, 0x9690, 0x9168, 0x588, 0x8c38, 0x1, 0x0);
        gbc.writeMem(0xe6ec, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x75b1, gbc.sp());
        EXPECT(0xe6ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ec));
        EXPECT(0xd8, gbc.readMem(0xe6ed));
        // CB D8 0006
        gbc.setState(0x8c34, 0x8d42, 0xb5a0, 0x3c92, 0x5a66, 0xabb9, 0x1, 0x0);
        gbc.writeMem(0x8c34, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8d42, gbc.sp());
        EXPECT(0x8c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c34));
        EXPECT(0xd8, gbc.readMem(0x8c35));
        // CB D8 0007
        gbc.setState(0x8e8c, 0x8f76, 0xc460, 0xaedd, 0xb90d, 0x777a, 0x1, 0x1);
        gbc.writeMem(0x8e8c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8f76, gbc.sp());
        EXPECT(0x8e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e8c));
        EXPECT(0xd8, gbc.readMem(0x8e8d));
        // CB D8 0009
        gbc.setState(0xdafb, 0xbe00, 0xc790, 0x856e, 0x73f8, 0x7385, 0x0, 0x0);
        gbc.writeMem(0xdafb, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xbe00, gbc.sp());
        EXPECT(0xdafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdafb));
        EXPECT(0xd8, gbc.readMem(0xdafc));
        // CB D8 000A
        gbc.setState(0x285a, 0x97ae, 0x9520, 0xc0ca, 0xd81f, 0x6c0e, 0x1, 0x1);
        gbc.writeMem(0x285a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x97ae, gbc.sp());
        EXPECT(0x285c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 000B
        gbc.setState(0x7ead, 0x98cd, 0x7fc0, 0xaf93, 0x3323, 0x6db8, 0x1, 0x1);
        gbc.writeMem(0x7ead, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x98cd, gbc.sp());
        EXPECT(0x7eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 000C
        gbc.setState(0xee16, 0x400c, 0xfa90, 0xa980, 0xc404, 0xaddf, 0x1, 0x0);
        gbc.writeMem(0xee16, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x400c, gbc.sp());
        EXPECT(0xee18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee16));
        EXPECT(0xd8, gbc.readMem(0xee17));
        // CB D8 000D
        gbc.setState(0x703b, 0x881a, 0x9350, 0x8057, 0x1f6f, 0xb8f, 0x1, 0x0);
        gbc.writeMem(0x703b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x881a, gbc.sp());
        EXPECT(0x703d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 000E
        gbc.setState(0x4df2, 0xfd2, 0xb940, 0xbd54, 0x6f00, 0x3397, 0x0, 0x1);
        gbc.writeMem(0x4df2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfd2, gbc.sp());
        EXPECT(0x4df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 000F
        gbc.setState(0xfbf, 0x5b70, 0xa9d0, 0x2655, 0x9b7d, 0x10d9, 0x1, 0x1);
        gbc.writeMem(0xfbf, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5b70, gbc.sp());
        EXPECT(0xfc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0010
        gbc.setState(0x94c8, 0x9c37, 0xfc20, 0xbafb, 0xa14a, 0xe9bf, 0x1, 0x0);
        gbc.writeMem(0x94c8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9c37, gbc.sp());
        EXPECT(0x94ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c8));
        EXPECT(0xd8, gbc.readMem(0x94c9));
        // CB D8 0011
        gbc.setState(0x8f0f, 0xcac1, 0x1250, 0x13cd, 0xd630, 0xe861, 0x0, 0x0);
        gbc.writeMem(0x8f0f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcac1, gbc.sp());
        EXPECT(0x8f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f0f));
        EXPECT(0xd8, gbc.readMem(0x8f10));
        // CB D8 0012
        gbc.setState(0x6e6f, 0x87b6, 0xa570, 0x98eb, 0x1c6b, 0x6693, 0x1, 0x0);
        gbc.writeMem(0x6e6f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x87b6, gbc.sp());
        EXPECT(0x6e71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0013
        gbc.setState(0x7289, 0x7b89, 0xc220, 0x9bb4, 0xe97c, 0x6baa, 0x1, 0x1);
        gbc.writeMem(0x7289, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7b89, gbc.sp());
        EXPECT(0x728b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0014
        gbc.setState(0x2fb5, 0x2e1e, 0xbf0, 0xa4ea, 0x7e8f, 0x1be4, 0x1, 0x0);
        gbc.writeMem(0x2fb5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2e1e, gbc.sp());
        EXPECT(0x2fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0015
        gbc.setState(0x28a8, 0x3ff2, 0xebe0, 0xd444, 0xa1d3, 0x4ac5, 0x0, 0x1);
        gbc.writeMem(0x28a8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3ff2, gbc.sp());
        EXPECT(0x28aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0016
        gbc.setState(0x789b, 0xfab9, 0xd970, 0xc566, 0xc2ba, 0x63, 0x0, 0x1);
        gbc.writeMem(0x789b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfab9, gbc.sp());
        EXPECT(0x789d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0018
        gbc.setState(0xc945, 0x1991, 0x7920, 0xd2e2, 0x52cf, 0xdbff, 0x0, 0x1);
        gbc.writeMem(0xc945, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1991, gbc.sp());
        EXPECT(0xc947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc945));
        EXPECT(0xd8, gbc.readMem(0xc946));
        // CB D8 0019
        gbc.setState(0x9092, 0x8cd6, 0xd9b0, 0xeddc, 0x1ca, 0xe845, 0x0, 0x0);
        gbc.writeMem(0x9092, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8cd6, gbc.sp());
        EXPECT(0x9094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9092));
        EXPECT(0xd8, gbc.readMem(0x9093));
        // CB D8 001A
        gbc.setState(0x512a, 0x185d, 0x1a90, 0xf20d, 0x3fe3, 0xdb93, 0x1, 0x1);
        gbc.writeMem(0x512a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x185d, gbc.sp());
        EXPECT(0x512c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 001B
        gbc.setState(0x64a7, 0xba37, 0x8f20, 0xec0a, 0x3e3d, 0x4fe5, 0x0, 0x0);
        gbc.writeMem(0x64a7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xba37, gbc.sp());
        EXPECT(0x64a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 001C
        gbc.setState(0x6072, 0x53ac, 0x26e0, 0xbdf4, 0x3200, 0x2062, 0x1, 0x0);
        gbc.writeMem(0x6072, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x53ac, gbc.sp());
        EXPECT(0x6074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 001D
        gbc.setState(0x97df, 0x4e6b, 0x3e50, 0xf442, 0x5c1f, 0xb38f, 0x0, 0x0);
        gbc.writeMem(0x97df, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4e6b, gbc.sp());
        EXPECT(0x97e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97df));
        EXPECT(0xd8, gbc.readMem(0x97e0));
        // CB D8 001E
        gbc.setState(0x8612, 0x1c9f, 0xd140, 0x203a, 0x62bb, 0x624d, 0x1, 0x1);
        gbc.writeMem(0x8612, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1c9f, gbc.sp());
        EXPECT(0x8614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8612));
        EXPECT(0xd8, gbc.readMem(0x8613));
        // CB D8 001F
        gbc.setState(0x8e30, 0x8d01, 0x8870, 0xbb91, 0x4bd4, 0xbd64, 0x0, 0x0);
        gbc.writeMem(0x8e30, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8d01, gbc.sp());
        EXPECT(0x8e32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e30));
        EXPECT(0xd8, gbc.readMem(0x8e31));
        // CB D8 0020
        gbc.setState(0xc294, 0x418f, 0x73d0, 0xe367, 0xb5b5, 0xe1c2, 0x1, 0x0);
        gbc.writeMem(0xc294, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x418f, gbc.sp());
        EXPECT(0xc296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc294));
        EXPECT(0xd8, gbc.readMem(0xc295));
        // CB D8 0021
        gbc.setState(0x1743, 0x30e4, 0x1330, 0xaa01, 0x4ab4, 0x2b79, 0x1, 0x1);
        gbc.writeMem(0x1743, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x30e4, gbc.sp());
        EXPECT(0x1745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0022
        gbc.setState(0xc831, 0xa220, 0x1610, 0x606d, 0xf10f, 0x5cff, 0x1, 0x0);
        gbc.writeMem(0xc831, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa220, gbc.sp());
        EXPECT(0xc833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc831));
        EXPECT(0xd8, gbc.readMem(0xc832));
        // CB D8 0023
        gbc.setState(0x15ca, 0xbb5c, 0xbf40, 0x698e, 0x9d01, 0x71a, 0x0, 0x0);
        gbc.writeMem(0x15ca, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbb5c, gbc.sp());
        EXPECT(0x15cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0024
        gbc.setState(0xdd0c, 0x9727, 0x8920, 0xe5f5, 0x5429, 0x8eaa, 0x0, 0x1);
        gbc.writeMem(0xdd0c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9727, gbc.sp());
        EXPECT(0xdd0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0c));
        EXPECT(0xd8, gbc.readMem(0xdd0d));
        // CB D8 0025
        gbc.setState(0x3261, 0x3e80, 0xe6e0, 0x5c30, 0xab56, 0x64ae, 0x1, 0x1);
        gbc.writeMem(0x3261, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3e80, gbc.sp());
        EXPECT(0x3263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0026
        gbc.setState(0xc9cc, 0xe184, 0x3f50, 0xe8f9, 0x7abd, 0x4f6, 0x0, 0x1);
        gbc.writeMem(0xc9cc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe184, gbc.sp());
        EXPECT(0xc9ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9cc));
        EXPECT(0xd8, gbc.readMem(0xc9cd));
        // CB D8 0027
        gbc.setState(0x9225, 0x46e5, 0xf270, 0xbd28, 0x76f9, 0x2702, 0x0, 0x0);
        gbc.writeMem(0x9225, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x46e5, gbc.sp());
        EXPECT(0x9227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9225));
        EXPECT(0xd8, gbc.readMem(0x9226));
        // CB D8 0028
        gbc.setState(0x8baf, 0xbcb2, 0xbb70, 0x1885, 0x1bee, 0x8907, 0x0, 0x1);
        gbc.writeMem(0x8baf, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbcb2, gbc.sp());
        EXPECT(0x8bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8baf));
        EXPECT(0xd8, gbc.readMem(0x8bb0));
        // CB D8 0029
        gbc.setState(0x2a6f, 0x6fba, 0x1b40, 0xcd6, 0xece7, 0x33ba, 0x0, 0x0);
        gbc.writeMem(0x2a6f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6fba, gbc.sp());
        EXPECT(0x2a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 002A
        gbc.setState(0x1a94, 0xa9ff, 0xd40, 0x778a, 0x30da, 0x23b9, 0x1, 0x1);
        gbc.writeMem(0x1a94, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa9ff, gbc.sp());
        EXPECT(0x1a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 002B
        gbc.setState(0x9269, 0x38cc, 0x51b0, 0x17d6, 0x4366, 0xb44c, 0x0, 0x0);
        gbc.writeMem(0x9269, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x38cc, gbc.sp());
        EXPECT(0x926b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9269));
        EXPECT(0xd8, gbc.readMem(0x926a));
        // CB D8 002C
        gbc.setState(0x66a6, 0x91fd, 0x6860, 0x68d5, 0x3380, 0xa3b7, 0x0, 0x0);
        gbc.writeMem(0x66a6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x91fd, gbc.sp());
        EXPECT(0x66a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 002D
        gbc.setState(0x693a, 0xda6a, 0x550, 0x8154, 0xd4b0, 0x5d82, 0x0, 0x0);
        gbc.writeMem(0x693a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xda6a, gbc.sp());
        EXPECT(0x693c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 002E
        gbc.setState(0x1c29, 0x9333, 0x820, 0x3470, 0x1bda, 0x1e2a, 0x0, 0x0);
        gbc.writeMem(0x1c29, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9333, gbc.sp());
        EXPECT(0x1c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 002F
        gbc.setState(0x671e, 0xacfb, 0x81e0, 0xabf1, 0x1785, 0x39ac, 0x1, 0x1);
        gbc.writeMem(0x671e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xacfb, gbc.sp());
        EXPECT(0x6720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0030
        gbc.setState(0xe07a, 0x52ba, 0x8a50, 0xce93, 0xf3f9, 0xdae6, 0x1, 0x1);
        gbc.writeMem(0xe07a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x52ba, gbc.sp());
        EXPECT(0xe07c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe07a));
        EXPECT(0xd8, gbc.readMem(0xe07b));
        // CB D8 0031
        gbc.setState(0xb056, 0xdc01, 0x6e70, 0xf50a, 0x4452, 0x4faa, 0x0, 0x0);
        gbc.writeMem(0xb056, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdc01, gbc.sp());
        EXPECT(0xb058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb056));
        EXPECT(0xd8, gbc.readMem(0xb057));
        // CB D8 0032
        gbc.setState(0x85fa, 0xa8f, 0xcc90, 0xf297, 0xdc46, 0x3c19, 0x0, 0x1);
        gbc.writeMem(0x85fa, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa8f, gbc.sp());
        EXPECT(0x85fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85fa));
        EXPECT(0xd8, gbc.readMem(0x85fb));
        // CB D8 0033
        gbc.setState(0x8ea9, 0x8e4a, 0xcd50, 0x7957, 0x406e, 0x6dc3, 0x0, 0x0);
        gbc.writeMem(0x8ea9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8e4a, gbc.sp());
        EXPECT(0x8eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea9));
        EXPECT(0xd8, gbc.readMem(0x8eaa));
        // CB D8 0034
        gbc.setState(0xd460, 0x68c, 0x9550, 0xd20, 0x568f, 0x9f37, 0x1, 0x1);
        gbc.writeMem(0xd460, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x68c, gbc.sp());
        EXPECT(0xd462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd460));
        EXPECT(0xd8, gbc.readMem(0xd461));
        // CB D8 0035
        gbc.setState(0x543, 0x78fd, 0xe5d0, 0xd3b1, 0x2596, 0x78ea, 0x1, 0x0);
        gbc.writeMem(0x543, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x78fd, gbc.sp());
        EXPECT(0x545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0036
        gbc.setState(0x2a9b, 0xf72b, 0xec50, 0x921f, 0x8614, 0x235, 0x1, 0x1);
        gbc.writeMem(0x2a9b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf72b, gbc.sp());
        EXPECT(0x2a9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0037
        gbc.setState(0xaff4, 0x9ef2, 0x2ef0, 0x28b2, 0x6b44, 0x25b3, 0x0, 0x0);
        gbc.writeMem(0xaff4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9ef2, gbc.sp());
        EXPECT(0xaff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff4));
        EXPECT(0xd8, gbc.readMem(0xaff5));
        // CB D8 0038
        gbc.setState(0xb458, 0x9df7, 0x7980, 0x2a5d, 0x23e7, 0x142b, 0x0, 0x0);
        gbc.writeMem(0xb458, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9df7, gbc.sp());
        EXPECT(0xb45a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb458));
        EXPECT(0xd8, gbc.readMem(0xb459));
        // CB D8 0039
        gbc.setState(0x2faf, 0xdf88, 0x3730, 0x72b9, 0x3a33, 0xef4, 0x0, 0x1);
        gbc.writeMem(0x2faf, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdf88, gbc.sp());
        EXPECT(0x2fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 003A
        gbc.setState(0x6866, 0x10c5, 0x7650, 0x7a52, 0xd46, 0x53ed, 0x0, 0x1);
        gbc.writeMem(0x6866, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x10c5, gbc.sp());
        EXPECT(0x6868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 003B
        gbc.setState(0x493, 0x8dd4, 0xe6b0, 0xb6a0, 0x1d48, 0x8b57, 0x1, 0x1);
        gbc.writeMem(0x493, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8dd4, gbc.sp());
        EXPECT(0x495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 003C
        gbc.setState(0x41d8, 0x9c32, 0x6ae0, 0x60f7, 0x2f7, 0x8c92, 0x0, 0x1);
        gbc.writeMem(0x41d8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9c32, gbc.sp());
        EXPECT(0x41da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 003D
        gbc.setState(0x5128, 0xcdd7, 0xb700, 0xcb04, 0xd45, 0x48db, 0x0, 0x1);
        gbc.writeMem(0x5128, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcdd7, gbc.sp());
        EXPECT(0x512a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 003E
        gbc.setState(0x82ea, 0xbb6e, 0x8560, 0x4ca2, 0xc349, 0xce17, 0x1, 0x1);
        gbc.writeMem(0x82ea, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbb6e, gbc.sp());
        EXPECT(0x82ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ea));
        EXPECT(0xd8, gbc.readMem(0x82eb));
        // CB D8 003F
        gbc.setState(0x23af, 0x2bef, 0x1fe0, 0xcb89, 0xda2b, 0x9a37, 0x0, 0x1);
        gbc.writeMem(0x23af, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2bef, gbc.sp());
        EXPECT(0x23b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0040
        gbc.setState(0x5ef2, 0x1afc, 0x6ee0, 0x6768, 0x4306, 0xcaf7, 0x1, 0x1);
        gbc.writeMem(0x5ef2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1afc, gbc.sp());
        EXPECT(0x5ef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0041
        gbc.setState(0x59b3, 0x24f8, 0xbe70, 0x12da, 0x1b60, 0x99d0, 0x1, 0x1);
        gbc.writeMem(0x59b3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x24f8, gbc.sp());
        EXPECT(0x59b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0042
        gbc.setState(0x982, 0xb4b, 0x7090, 0x6882, 0xcd5a, 0x9d60, 0x1, 0x0);
        gbc.writeMem(0x982, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb4b, gbc.sp());
        EXPECT(0x984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0043
        gbc.setState(0xda4c, 0x42fa, 0xf190, 0x8345, 0x640d, 0xb359, 0x1, 0x1);
        gbc.writeMem(0xda4c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x42fa, gbc.sp());
        EXPECT(0xda4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda4c));
        EXPECT(0xd8, gbc.readMem(0xda4d));
        // CB D8 0045
        gbc.setState(0x2240, 0x7497, 0x96b0, 0x3a9d, 0xb33f, 0xfa4e, 0x0, 0x0);
        gbc.writeMem(0x2240, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7497, gbc.sp());
        EXPECT(0x2242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0046
        gbc.setState(0x915, 0x9605, 0xe600, 0x3cac, 0x83e, 0xb494, 0x0, 0x0);
        gbc.writeMem(0x915, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9605, gbc.sp());
        EXPECT(0x917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0047
        gbc.setState(0x8faa, 0x5679, 0x7f00, 0xf3f4, 0xd671, 0xb37a, 0x0, 0x0);
        gbc.writeMem(0x8faa, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5679, gbc.sp());
        EXPECT(0x8fac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8faa));
        EXPECT(0xd8, gbc.readMem(0x8fab));
        // CB D8 0048
        gbc.setState(0x183f, 0xee70, 0x5810, 0xa0d9, 0xfa07, 0xd988, 0x1, 0x0);
        gbc.writeMem(0x183f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xee70, gbc.sp());
        EXPECT(0x1841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0049
        gbc.setState(0xde70, 0x7fc6, 0xddc0, 0x34d4, 0x55fe, 0x9ef1, 0x1, 0x0);
        gbc.writeMem(0xde70, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7fc6, gbc.sp());
        EXPECT(0xde72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde70));
        EXPECT(0xd8, gbc.readMem(0xde71));
        // CB D8 004A
        gbc.setState(0x19dd, 0xacd1, 0x9a90, 0x7c3e, 0x6083, 0x8e01, 0x1, 0x0);
        gbc.writeMem(0x19dd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xacd1, gbc.sp());
        EXPECT(0x19df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 004C
        gbc.setState(0x241b, 0x59e8, 0xee30, 0x6867, 0x24fd, 0xe62c, 0x1, 0x1);
        gbc.writeMem(0x241b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x59e8, gbc.sp());
        EXPECT(0x241d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 004E
        gbc.setState(0x471e, 0x5607, 0x4eb0, 0x6093, 0xeaf6, 0x5f64, 0x1, 0x0);
        gbc.writeMem(0x471e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5607, gbc.sp());
        EXPECT(0x4720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 004F
        gbc.setState(0xb070, 0x6d7c, 0xcbc0, 0xc27f, 0x9ef1, 0xafe5, 0x1, 0x0);
        gbc.writeMem(0xb070, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6d7c, gbc.sp());
        EXPECT(0xb072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb070));
        EXPECT(0xd8, gbc.readMem(0xb071));
        // CB D8 0051
        gbc.setState(0xbe7b, 0x61a5, 0x720, 0x571c, 0xde5a, 0x5681, 0x0, 0x1);
        gbc.writeMem(0xbe7b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x61a5, gbc.sp());
        EXPECT(0xbe7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe7b));
        EXPECT(0xd8, gbc.readMem(0xbe7c));
        // CB D8 0053
        gbc.setState(0xb8d5, 0x1005, 0x9330, 0xf587, 0xcf37, 0x5503, 0x0, 0x1);
        gbc.writeMem(0xb8d5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1005, gbc.sp());
        EXPECT(0xb8d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d5));
        EXPECT(0xd8, gbc.readMem(0xb8d6));
        // CB D8 0054
        gbc.setState(0x6e1, 0x241b, 0x5380, 0xd822, 0xc979, 0x209c, 0x1, 0x0);
        gbc.writeMem(0x6e1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x241b, gbc.sp());
        EXPECT(0x6e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0055
        gbc.setState(0x7e6d, 0xa026, 0x7300, 0xab17, 0x7543, 0xa781, 0x1, 0x0);
        gbc.writeMem(0x7e6d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa026, gbc.sp());
        EXPECT(0x7e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0057
        gbc.setState(0x382f, 0xbf2a, 0x85f0, 0xf6e2, 0xb002, 0x2e71, 0x1, 0x1);
        gbc.writeMem(0x382f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbf2a, gbc.sp());
        EXPECT(0x3831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0058
        gbc.setState(0x7a70, 0xcdfb, 0x1200, 0x2236, 0xc5fc, 0xec8, 0x0, 0x0);
        gbc.writeMem(0x7a70, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcdfb, gbc.sp());
        EXPECT(0x7a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0059
        gbc.setState(0x8d7c, 0xb859, 0xedf0, 0xcaae, 0x9c9d, 0xfb86, 0x1, 0x0);
        gbc.writeMem(0x8d7c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb859, gbc.sp());
        EXPECT(0x8d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d7c));
        EXPECT(0xd8, gbc.readMem(0x8d7d));
        // CB D8 005A
        gbc.setState(0xc0df, 0xbb3b, 0xe480, 0x1b20, 0x38a6, 0xe313, 0x0, 0x1);
        gbc.writeMem(0xc0df, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbb3b, gbc.sp());
        EXPECT(0xc0e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0df));
        EXPECT(0xd8, gbc.readMem(0xc0e0));
        // CB D8 005B
        gbc.setState(0x3404, 0xa822, 0x57b0, 0x5642, 0x18c0, 0x59b9, 0x0, 0x1);
        gbc.writeMem(0x3404, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa822, gbc.sp());
        EXPECT(0x3406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 005C
        gbc.setState(0x18d0, 0x1832, 0x430, 0x5225, 0xcf9e, 0x4fa5, 0x1, 0x1);
        gbc.writeMem(0x18d0, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1832, gbc.sp());
        EXPECT(0x18d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 005D
        gbc.setState(0x2ce6, 0x4843, 0x6020, 0x5aa5, 0xbc42, 0x33a4, 0x1, 0x0);
        gbc.writeMem(0x2ce6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4843, gbc.sp());
        EXPECT(0x2ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 005E
        gbc.setState(0x4d67, 0xcf2f, 0x9c70, 0x4ae7, 0x70aa, 0x89e6, 0x1, 0x1);
        gbc.writeMem(0x4d67, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcf2f, gbc.sp());
        EXPECT(0x4d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 005F
        gbc.setState(0x28b0, 0x6889, 0xc060, 0xc0e1, 0x4810, 0xc89, 0x1, 0x0);
        gbc.writeMem(0x28b0, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6889, gbc.sp());
        EXPECT(0x28b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0060
        gbc.setState(0x11fd, 0x7cb, 0x5780, 0xaa57, 0x24c2, 0xee19, 0x0, 0x0);
        gbc.writeMem(0x11fd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7cb, gbc.sp());
        EXPECT(0x11ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0061
        gbc.setState(0x3a02, 0x9337, 0xb580, 0xbaff, 0xde9e, 0xc8b, 0x0, 0x1);
        gbc.writeMem(0x3a02, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9337, gbc.sp());
        EXPECT(0x3a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0062
        gbc.setState(0xd7e4, 0xb7b7, 0xe1d0, 0x502a, 0x2c38, 0x20da, 0x0, 0x1);
        gbc.writeMem(0xd7e4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb7b7, gbc.sp());
        EXPECT(0xd7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e4));
        EXPECT(0xd8, gbc.readMem(0xd7e5));
        // CB D8 0063
        gbc.setState(0xaf1f, 0x12d3, 0x4800, 0x747e, 0xf898, 0x46e4, 0x0, 0x0);
        gbc.writeMem(0xaf1f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x12d3, gbc.sp());
        EXPECT(0xaf21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf1f));
        EXPECT(0xd8, gbc.readMem(0xaf20));
        // CB D8 0064
        gbc.setState(0x965d, 0xc944, 0xce40, 0xeb1a, 0x66ef, 0xaf2, 0x0, 0x1);
        gbc.writeMem(0x965d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc944, gbc.sp());
        EXPECT(0x965f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x965d));
        EXPECT(0xd8, gbc.readMem(0x965e));
        // CB D8 0065
        gbc.setState(0xa33b, 0x7295, 0xecd0, 0x9ae6, 0x63d0, 0xd276, 0x1, 0x1);
        gbc.writeMem(0xa33b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7295, gbc.sp());
        EXPECT(0xa33d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33b));
        EXPECT(0xd8, gbc.readMem(0xa33c));
        // CB D8 0066
        gbc.setState(0xcb5c, 0x1c22, 0x96d0, 0x1efc, 0xd0b4, 0x6810, 0x0, 0x0);
        gbc.writeMem(0xcb5c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1c22, gbc.sp());
        EXPECT(0xcb5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb5c));
        EXPECT(0xd8, gbc.readMem(0xcb5d));
        // CB D8 0067
        gbc.setState(0x6ad, 0x84ff, 0x62a0, 0xdf51, 0xbdfd, 0xb803, 0x0, 0x1);
        gbc.writeMem(0x6ad, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x84ff, gbc.sp());
        EXPECT(0x6af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0068
        gbc.setState(0xbab9, 0xefa5, 0xf670, 0x8d58, 0xb69b, 0xce4b, 0x0, 0x0);
        gbc.writeMem(0xbab9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xefa5, gbc.sp());
        EXPECT(0xbabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab9));
        EXPECT(0xd8, gbc.readMem(0xbaba));
        // CB D8 0069
        gbc.setState(0xade1, 0x71d1, 0xd260, 0x2c11, 0xa3ba, 0x37ab, 0x0, 0x0);
        gbc.writeMem(0xade1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x71d1, gbc.sp());
        EXPECT(0xade3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xade1));
        EXPECT(0xd8, gbc.readMem(0xade2));
        // CB D8 006A
        gbc.setState(0xa9a6, 0x8261, 0x370, 0xb024, 0xc10b, 0x5bc7, 0x1, 0x0);
        gbc.writeMem(0xa9a6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8261, gbc.sp());
        EXPECT(0xa9a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a6));
        EXPECT(0xd8, gbc.readMem(0xa9a7));
        // CB D8 006B
        gbc.setState(0xb578, 0x756a, 0xf180, 0x6cb8, 0x5c3a, 0x5625, 0x0, 0x0);
        gbc.writeMem(0xb578, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x756a, gbc.sp());
        EXPECT(0xb57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb578));
        EXPECT(0xd8, gbc.readMem(0xb579));
        // CB D8 006C
        gbc.setState(0xbfae, 0xc86f, 0xec60, 0x8d48, 0x36c6, 0x79f6, 0x1, 0x1);
        gbc.writeMem(0xbfae, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc86f, gbc.sp());
        EXPECT(0xbfb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfae));
        EXPECT(0xd8, gbc.readMem(0xbfaf));
        // CB D8 006D
        gbc.setState(0x8c7e, 0x52c0, 0xd920, 0xf8e6, 0x7f74, 0xde5f, 0x1, 0x0);
        gbc.writeMem(0x8c7e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x52c0, gbc.sp());
        EXPECT(0x8c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c7e));
        EXPECT(0xd8, gbc.readMem(0x8c7f));
        // CB D8 006E
        gbc.setState(0x3b8, 0x16c2, 0x5ec0, 0x8f2f, 0xb9bd, 0x9513, 0x1, 0x1);
        gbc.writeMem(0x3b8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x16c2, gbc.sp());
        EXPECT(0x3ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 006F
        gbc.setState(0x76e, 0x636b, 0xf3b0, 0x9f07, 0x5ff1, 0xfc01, 0x1, 0x0);
        gbc.writeMem(0x76e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x636b, gbc.sp());
        EXPECT(0x770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0070
        gbc.setState(0xb069, 0xacb2, 0x7a20, 0x3abe, 0x9270, 0x9c26, 0x0, 0x0);
        gbc.writeMem(0xb069, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xacb2, gbc.sp());
        EXPECT(0xb06b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb069));
        EXPECT(0xd8, gbc.readMem(0xb06a));
        // CB D8 0071
        gbc.setState(0xa6f2, 0x276e, 0x63a0, 0x4495, 0x141e, 0xce5a, 0x1, 0x0);
        gbc.writeMem(0xa6f2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x276e, gbc.sp());
        EXPECT(0xa6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f2));
        EXPECT(0xd8, gbc.readMem(0xa6f3));
        // CB D8 0072
        gbc.setState(0xc920, 0x9844, 0x3c90, 0x3ca8, 0xbf1b, 0xd879, 0x0, 0x1);
        gbc.writeMem(0xc920, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9844, gbc.sp());
        EXPECT(0xc922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc920));
        EXPECT(0xd8, gbc.readMem(0xc921));
        // CB D8 0073
        gbc.setState(0xe1, 0xe35c, 0xe2b0, 0x99c6, 0xc4c9, 0x9208, 0x1, 0x0);
        gbc.writeMem(0xe1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe35c, gbc.sp());
        EXPECT(0xe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0075
        gbc.setState(0xb2c6, 0x44eb, 0xf9e0, 0xcf93, 0xd98f, 0xdb54, 0x1, 0x0);
        gbc.writeMem(0xb2c6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x44eb, gbc.sp());
        EXPECT(0xb2c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2c6));
        EXPECT(0xd8, gbc.readMem(0xb2c7));
        // CB D8 0076
        gbc.setState(0xa6f2, 0xc7f8, 0x6bf0, 0x2807, 0xf840, 0x905b, 0x1, 0x1);
        gbc.writeMem(0xa6f2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc7f8, gbc.sp());
        EXPECT(0xa6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f2));
        EXPECT(0xd8, gbc.readMem(0xa6f3));
        // CB D8 0077
        gbc.setState(0x1a74, 0x866d, 0x90c0, 0xd8ce, 0xcbee, 0x23ec, 0x0, 0x0);
        gbc.writeMem(0x1a74, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x866d, gbc.sp());
        EXPECT(0x1a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0078
        gbc.setState(0x2997, 0xea1c, 0x4f90, 0xe791, 0x9fba, 0x7964, 0x1, 0x1);
        gbc.writeMem(0x2997, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xea1c, gbc.sp());
        EXPECT(0x2999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0079
        gbc.setState(0xe983, 0xbcc, 0x4e0, 0x24ad, 0xf470, 0xaf26, 0x1, 0x1);
        gbc.writeMem(0xe983, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbcc, gbc.sp());
        EXPECT(0xe985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe983));
        EXPECT(0xd8, gbc.readMem(0xe984));
        // CB D8 007A
        gbc.setState(0x1a44, 0xa74, 0x2d0, 0x94b0, 0x965a, 0x4745, 0x0, 0x0);
        gbc.writeMem(0x1a44, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa74, gbc.sp());
        EXPECT(0x1a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 007B
        gbc.setState(0x3b42, 0xf4da, 0x28e0, 0x34e3, 0x7e72, 0x6af3, 0x1, 0x0);
        gbc.writeMem(0x3b42, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf4da, gbc.sp());
        EXPECT(0x3b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 007C
        gbc.setState(0x62ce, 0xa6b5, 0xe7e0, 0x245, 0x2d77, 0x4133, 0x0, 0x0);
        gbc.writeMem(0x62ce, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa6b5, gbc.sp());
        EXPECT(0x62d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 007D
        gbc.setState(0x3c89, 0xc145, 0xe900, 0x192, 0xf977, 0xe983, 0x1, 0x1);
        gbc.writeMem(0x3c89, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc145, gbc.sp());
        EXPECT(0x3c8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 007E
        gbc.setState(0x4c14, 0x8162, 0x9190, 0x8696, 0x31d4, 0x12c9, 0x0, 0x1);
        gbc.writeMem(0x4c14, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8162, gbc.sp());
        EXPECT(0x4c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 007F
        gbc.setState(0xc9ce, 0xf524, 0x8580, 0x3778, 0xf14, 0x8645, 0x0, 0x0);
        gbc.writeMem(0xc9ce, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf524, gbc.sp());
        EXPECT(0xc9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ce));
        EXPECT(0xd8, gbc.readMem(0xc9cf));
        // CB D8 0080
        gbc.setState(0xc250, 0xf7bf, 0x2550, 0x2d77, 0xd609, 0xe00b, 0x0, 0x1);
        gbc.writeMem(0xc250, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf7bf, gbc.sp());
        EXPECT(0xc252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc250));
        EXPECT(0xd8, gbc.readMem(0xc251));
        // CB D8 0081
        gbc.setState(0x71fa, 0x94eb, 0xefb0, 0x6ccc, 0x1c14, 0x7571, 0x1, 0x0);
        gbc.writeMem(0x71fa, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x94eb, gbc.sp());
        EXPECT(0x71fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0082
        gbc.setState(0x5c6, 0x3549, 0x8470, 0x9574, 0x8499, 0x7739, 0x0, 0x1);
        gbc.writeMem(0x5c6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3549, gbc.sp());
        EXPECT(0x5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0083
        gbc.setState(0xbbbd, 0x24b8, 0x1d20, 0x7a67, 0x2ed1, 0x7a44, 0x0, 0x0);
        gbc.writeMem(0xbbbd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x24b8, gbc.sp());
        EXPECT(0xbbbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbbd));
        EXPECT(0xd8, gbc.readMem(0xbbbe));
        // CB D8 0084
        gbc.setState(0x75d0, 0x561a, 0x9cc0, 0x15f3, 0x9693, 0x96c1, 0x0, 0x1);
        gbc.writeMem(0x75d0, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x561a, gbc.sp());
        EXPECT(0x75d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0085
        gbc.setState(0xdd05, 0x753c, 0xa500, 0xb613, 0x3bcd, 0x5953, 0x0, 0x1);
        gbc.writeMem(0xdd05, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x753c, gbc.sp());
        EXPECT(0xdd07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd05));
        EXPECT(0xd8, gbc.readMem(0xdd06));
        // CB D8 0086
        gbc.setState(0xbc24, 0x2aff, 0xfba0, 0x2b81, 0x369f, 0x1361, 0x0, 0x1);
        gbc.writeMem(0xbc24, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2aff, gbc.sp());
        EXPECT(0xbc26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc24));
        EXPECT(0xd8, gbc.readMem(0xbc25));
        // CB D8 0087
        gbc.setState(0x6a40, 0x64a2, 0xe530, 0xe3a4, 0x1647, 0xb77d, 0x0, 0x0);
        gbc.writeMem(0x6a40, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x64a2, gbc.sp());
        EXPECT(0x6a42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0088
        gbc.setState(0x5825, 0x89ce, 0x3e50, 0xe325, 0xc8c3, 0x2d70, 0x0, 0x0);
        gbc.writeMem(0x5825, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x89ce, gbc.sp());
        EXPECT(0x5827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0089
        gbc.setState(0x271b, 0xb8d7, 0xed30, 0xbd73, 0xf4ae, 0x5f6b, 0x1, 0x0);
        gbc.writeMem(0x271b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb8d7, gbc.sp());
        EXPECT(0x271d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 008A
        gbc.setState(0xa59, 0xeca0, 0x350, 0x69db, 0x8d, 0xad14, 0x0, 0x1);
        gbc.writeMem(0xa59, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xeca0, gbc.sp());
        EXPECT(0xa5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 008B
        gbc.setState(0xda89, 0x7aa4, 0x2550, 0xc74c, 0xdee4, 0x52e6, 0x1, 0x1);
        gbc.writeMem(0xda89, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7aa4, gbc.sp());
        EXPECT(0xda8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda89));
        EXPECT(0xd8, gbc.readMem(0xda8a));
        // CB D8 008C
        gbc.setState(0x402b, 0x96a1, 0x280, 0x92f, 0x693e, 0xa543, 0x1, 0x1);
        gbc.writeMem(0x402b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x96a1, gbc.sp());
        EXPECT(0x402d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 008D
        gbc.setState(0x6c0a, 0x41e0, 0x8360, 0x4875, 0xae95, 0xa9c, 0x1, 0x1);
        gbc.writeMem(0x6c0a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x41e0, gbc.sp());
        EXPECT(0x6c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 008E
        gbc.setState(0x9d4, 0x62fc, 0x1c00, 0x58c7, 0x858a, 0x7f0a, 0x0, 0x0);
        gbc.writeMem(0x9d4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x62fc, gbc.sp());
        EXPECT(0x9d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 008F
        gbc.setState(0x81f6, 0x5b4b, 0xfe70, 0x6038, 0xf052, 0xb226, 0x1, 0x1);
        gbc.writeMem(0x81f6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5b4b, gbc.sp());
        EXPECT(0x81f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f6));
        EXPECT(0xd8, gbc.readMem(0x81f7));
        // CB D8 0090
        gbc.setState(0xbaa2, 0xadae, 0xc170, 0x1e5b, 0xd5d1, 0x4a6b, 0x1, 0x0);
        gbc.writeMem(0xbaa2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xadae, gbc.sp());
        EXPECT(0xbaa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa2));
        EXPECT(0xd8, gbc.readMem(0xbaa3));
        // CB D8 0092
        gbc.setState(0x606c, 0x53c7, 0xf110, 0x262f, 0xfc11, 0xc50c, 0x1, 0x0);
        gbc.writeMem(0x606c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x53c7, gbc.sp());
        EXPECT(0x606e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0093
        gbc.setState(0xe372, 0xef13, 0x25f0, 0xd10, 0xc3d0, 0xbd74, 0x1, 0x1);
        gbc.writeMem(0xe372, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xef13, gbc.sp());
        EXPECT(0xe374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe372));
        EXPECT(0xd8, gbc.readMem(0xe373));
        // CB D8 0094
        gbc.setState(0x2da6, 0x156d, 0xcea0, 0xd8ef, 0xe05f, 0xc614, 0x1, 0x1);
        gbc.writeMem(0x2da6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x156d, gbc.sp());
        EXPECT(0x2da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0095
        gbc.setState(0xbef8, 0x1787, 0xd930, 0x2faf, 0xf129, 0xc3a4, 0x0, 0x0);
        gbc.writeMem(0xbef8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1787, gbc.sp());
        EXPECT(0xbefa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef8));
        EXPECT(0xd8, gbc.readMem(0xbef9));
        // CB D8 0096
        gbc.setState(0x6fe8, 0xd8e2, 0xe50, 0x5025, 0x2346, 0x2c3a, 0x1, 0x0);
        gbc.writeMem(0x6fe8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd8e2, gbc.sp());
        EXPECT(0x6fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0097
        gbc.setState(0xb9df, 0x1ac4, 0x2220, 0x1add, 0xc550, 0xe295, 0x0, 0x0);
        gbc.writeMem(0xb9df, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1ac4, gbc.sp());
        EXPECT(0xb9e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9df));
        EXPECT(0xd8, gbc.readMem(0xb9e0));
        // CB D8 0098
        gbc.setState(0x3dc2, 0x5a42, 0x1fa0, 0x31a0, 0x3d5, 0xd761, 0x1, 0x1);
        gbc.writeMem(0x3dc2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5a42, gbc.sp());
        EXPECT(0x3dc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0099
        gbc.setState(0x22b4, 0x4123, 0xe070, 0xba77, 0xab8c, 0x57af, 0x0, 0x0);
        gbc.writeMem(0x22b4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4123, gbc.sp());
        EXPECT(0x22b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 009A
        gbc.setState(0x1450, 0x4fcb, 0x64d0, 0xe81b, 0xea1, 0x75bc, 0x0, 0x1);
        gbc.writeMem(0x1450, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4fcb, gbc.sp());
        EXPECT(0x1452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 009B
        gbc.setState(0x2625, 0x2e54, 0xef30, 0xee47, 0x919e, 0x843b, 0x0, 0x0);
        gbc.writeMem(0x2625, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2e54, gbc.sp());
        EXPECT(0x2627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 009C
        gbc.setState(0x49ab, 0x85b9, 0x6d50, 0xc846, 0x4265, 0x2e37, 0x1, 0x0);
        gbc.writeMem(0x49ab, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x85b9, gbc.sp());
        EXPECT(0x49ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 009D
        gbc.setState(0xdaa3, 0xc00c, 0x3c80, 0x22da, 0x409b, 0x519b, 0x1, 0x0);
        gbc.writeMem(0xdaa3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc00c, gbc.sp());
        EXPECT(0xdaa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaa3));
        EXPECT(0xd8, gbc.readMem(0xdaa4));
        // CB D8 009E
        gbc.setState(0x4365, 0x721, 0xcc50, 0x481d, 0x7fc1, 0xc1a9, 0x1, 0x0);
        gbc.writeMem(0x4365, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x721, gbc.sp());
        EXPECT(0x4367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 009F
        gbc.setState(0xedda, 0x27e2, 0xa240, 0xcf7d, 0x2ed1, 0xf93f, 0x0, 0x0);
        gbc.writeMem(0xedda, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x27e2, gbc.sp());
        EXPECT(0xeddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedda));
        EXPECT(0xd8, gbc.readMem(0xeddb));
        // CB D8 00A1
        gbc.setState(0xdd59, 0xe610, 0x9e90, 0xb8a7, 0x7bc1, 0xe770, 0x0, 0x1);
        gbc.writeMem(0xdd59, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe610, gbc.sp());
        EXPECT(0xdd5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd59));
        EXPECT(0xd8, gbc.readMem(0xdd5a));
        // CB D8 00A2
        gbc.setState(0x1687, 0x2cd4, 0xd1a0, 0xb767, 0xad88, 0x9541, 0x0, 0x0);
        gbc.writeMem(0x1687, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2cd4, gbc.sp());
        EXPECT(0x1689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00A3
        gbc.setState(0x900, 0xdaae, 0x77f0, 0xbe12, 0xb795, 0x6f1c, 0x0, 0x1);
        gbc.writeMem(0x900, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdaae, gbc.sp());
        EXPECT(0x902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00A5
        gbc.setState(0x261, 0x77b1, 0xa7d0, 0xebb, 0xd366, 0xa887, 0x1, 0x1);
        gbc.writeMem(0x261, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x77b1, gbc.sp());
        EXPECT(0x263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00A6
        gbc.setState(0x81f7, 0x5306, 0x1ea0, 0xf634, 0xdf76, 0x49f7, 0x1, 0x1);
        gbc.writeMem(0x81f7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5306, gbc.sp());
        EXPECT(0x81f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f7));
        EXPECT(0xd8, gbc.readMem(0x81f8));
        // CB D8 00A7
        gbc.setState(0xab22, 0x9d67, 0x2f40, 0x6dda, 0x8739, 0xe527, 0x0, 0x0);
        gbc.writeMem(0xab22, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9d67, gbc.sp());
        EXPECT(0xab24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab22));
        EXPECT(0xd8, gbc.readMem(0xab23));
        // CB D8 00A8
        gbc.setState(0x3cb7, 0x8677, 0xf140, 0x224c, 0x4d59, 0xc3a0, 0x1, 0x0);
        gbc.writeMem(0x3cb7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8677, gbc.sp());
        EXPECT(0x3cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00A9
        gbc.setState(0x963f, 0xd810, 0xcbc0, 0x2b6b, 0x2790, 0xcae5, 0x0, 0x0);
        gbc.writeMem(0x963f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd810, gbc.sp());
        EXPECT(0x9641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x963f));
        EXPECT(0xd8, gbc.readMem(0x9640));
        // CB D8 00AA
        gbc.setState(0xb643, 0x5bcf, 0xfab0, 0xaa47, 0x5a12, 0xa8c, 0x1, 0x0);
        gbc.writeMem(0xb643, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5bcf, gbc.sp());
        EXPECT(0xb645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb643));
        EXPECT(0xd8, gbc.readMem(0xb644));
        // CB D8 00AB
        gbc.setState(0x6933, 0xbf7b, 0x6b70, 0x5f9f, 0x99ab, 0x2804, 0x1, 0x0);
        gbc.writeMem(0x6933, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbf7b, gbc.sp());
        EXPECT(0x6935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00AC
        gbc.setState(0xcb28, 0xb185, 0x65f0, 0x5ee1, 0x2f0c, 0xbffc, 0x1, 0x0);
        gbc.writeMem(0xcb28, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb185, gbc.sp());
        EXPECT(0xcb2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb28));
        EXPECT(0xd8, gbc.readMem(0xcb29));
        // CB D8 00AD
        gbc.setState(0x7392, 0x3e82, 0xec10, 0xbb0c, 0x9351, 0x37c, 0x1, 0x1);
        gbc.writeMem(0x7392, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3e82, gbc.sp());
        EXPECT(0x7394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00AE
        gbc.setState(0x64fe, 0x1c59, 0xd4d0, 0x2e55, 0x971d, 0x5ef9, 0x1, 0x1);
        gbc.writeMem(0x64fe, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1c59, gbc.sp());
        EXPECT(0x6500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00AF
        gbc.setState(0xa128, 0xd1b6, 0x6b80, 0x5115, 0x1295, 0x46d8, 0x0, 0x1);
        gbc.writeMem(0xa128, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd1b6, gbc.sp());
        EXPECT(0xa12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa128));
        EXPECT(0xd8, gbc.readMem(0xa129));
        // CB D8 00B0
        gbc.setState(0x46a1, 0x2d08, 0x3c90, 0xdc68, 0x115f, 0xfd2a, 0x0, 0x1);
        gbc.writeMem(0x46a1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2d08, gbc.sp());
        EXPECT(0x46a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00B1
        gbc.setState(0x9cd2, 0xacdc, 0x1760, 0x279c, 0x3994, 0x77e1, 0x0, 0x1);
        gbc.writeMem(0x9cd2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xacdc, gbc.sp());
        EXPECT(0x9cd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd2));
        EXPECT(0xd8, gbc.readMem(0x9cd3));
        // CB D8 00B2
        gbc.setState(0x8d92, 0xeab8, 0x9ff0, 0xd6df, 0x8ed8, 0x6966, 0x0, 0x1);
        gbc.writeMem(0x8d92, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xeab8, gbc.sp());
        EXPECT(0x8d94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d92));
        EXPECT(0xd8, gbc.readMem(0x8d93));
        // CB D8 00B3
        gbc.setState(0x8f16, 0x6944, 0xdaa0, 0xf1bc, 0xb223, 0x25c6, 0x0, 0x1);
        gbc.writeMem(0x8f16, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6944, gbc.sp());
        EXPECT(0x8f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f16));
        EXPECT(0xd8, gbc.readMem(0x8f17));
        // CB D8 00B4
        gbc.setState(0x243b, 0x7cb9, 0x33a0, 0x2d46, 0x651b, 0x8371, 0x1, 0x0);
        gbc.writeMem(0x243b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7cb9, gbc.sp());
        EXPECT(0x243d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00B5
        gbc.setState(0xb12b, 0xe60c, 0x3d40, 0x76e6, 0xa3df, 0xf7cf, 0x1, 0x1);
        gbc.writeMem(0xb12b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe60c, gbc.sp());
        EXPECT(0xb12d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb12b));
        EXPECT(0xd8, gbc.readMem(0xb12c));
        // CB D8 00B6
        gbc.setState(0x739, 0x27c0, 0x7820, 0xecc3, 0xf3f5, 0xb2a1, 0x1, 0x0);
        gbc.writeMem(0x739, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x27c0, gbc.sp());
        EXPECT(0x73b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00B8
        gbc.setState(0x6a98, 0x2eb7, 0x8d60, 0x2d33, 0x9b9c, 0x41d0, 0x1, 0x0);
        gbc.writeMem(0x6a98, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2eb7, gbc.sp());
        EXPECT(0x6a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00B9
        gbc.setState(0x731c, 0x30d8, 0x580, 0x56eb, 0xdff2, 0xebce, 0x1, 0x1);
        gbc.writeMem(0x731c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x30d8, gbc.sp());
        EXPECT(0x731e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00BA
        gbc.setState(0xb4b6, 0x1e79, 0xb5a0, 0xf725, 0x9901, 0x8d36, 0x1, 0x0);
        gbc.writeMem(0xb4b6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1e79, gbc.sp());
        EXPECT(0xb4b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b6));
        EXPECT(0xd8, gbc.readMem(0xb4b7));
        // CB D8 00BB
        gbc.setState(0xbaf0, 0x75ca, 0x4be0, 0xc2ae, 0x8efe, 0xa792, 0x1, 0x0);
        gbc.writeMem(0xbaf0, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x75ca, gbc.sp());
        EXPECT(0xbaf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaf0));
        EXPECT(0xd8, gbc.readMem(0xbaf1));
        // CB D8 00BC
        gbc.setState(0x4dc5, 0x8e3, 0x5410, 0x3a4c, 0x318, 0xf0bb, 0x0, 0x1);
        gbc.writeMem(0x4dc5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8e3, gbc.sp());
        EXPECT(0x4dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00BD
        gbc.setState(0xce5f, 0xbec4, 0x4d40, 0x237a, 0x357c, 0x4260, 0x0, 0x1);
        gbc.writeMem(0xce5f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbec4, gbc.sp());
        EXPECT(0xce61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce5f));
        EXPECT(0xd8, gbc.readMem(0xce60));
        // CB D8 00BE
        gbc.setState(0x4633, 0xecfe, 0x2680, 0xf307, 0x9ae6, 0x870f, 0x0, 0x0);
        gbc.writeMem(0x4633, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xecfe, gbc.sp());
        EXPECT(0x4635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00BF
        gbc.setState(0xb894, 0x111a, 0xdc80, 0x738a, 0x285e, 0xd4ed, 0x0, 0x1);
        gbc.writeMem(0xb894, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x111a, gbc.sp());
        EXPECT(0xb896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb894));
        EXPECT(0xd8, gbc.readMem(0xb895));
        // CB D8 00C0
        gbc.setState(0x20fb, 0x8f26, 0x8450, 0x134a, 0x1635, 0x2c0b, 0x1, 0x0);
        gbc.writeMem(0x20fb, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8f26, gbc.sp());
        EXPECT(0x20fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00C1
        gbc.setState(0x4fad, 0x777, 0x85e0, 0xbcfe, 0x6449, 0x6221, 0x1, 0x1);
        gbc.writeMem(0x4fad, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x777, gbc.sp());
        EXPECT(0x4faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00C2
        gbc.setState(0x254c, 0x8c21, 0xf210, 0xa98, 0x8593, 0x4c4f, 0x0, 0x1);
        gbc.writeMem(0x254c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8c21, gbc.sp());
        EXPECT(0x254e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00C4
        gbc.setState(0x1395, 0xdaf9, 0x3c20, 0x5d4f, 0xa7ce, 0x4d20, 0x0, 0x0);
        gbc.writeMem(0x1395, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdaf9, gbc.sp());
        EXPECT(0x1397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00C5
        gbc.setState(0xd10b, 0xf879, 0x5fb0, 0xdd3a, 0x1f8d, 0xe00c, 0x0, 0x1);
        gbc.writeMem(0xd10b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf879, gbc.sp());
        EXPECT(0xd10d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10b));
        EXPECT(0xd8, gbc.readMem(0xd10c));
        // CB D8 00C6
        gbc.setState(0x9e2e, 0xe177, 0x5b20, 0xf5bf, 0x7fbe, 0x70de, 0x1, 0x1);
        gbc.writeMem(0x9e2e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe177, gbc.sp());
        EXPECT(0x9e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e2e));
        EXPECT(0xd8, gbc.readMem(0x9e2f));
        // CB D8 00C7
        gbc.setState(0x5208, 0x25bb, 0xbb70, 0xad03, 0x6be5, 0x22ee, 0x0, 0x0);
        gbc.writeMem(0x5208, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x25bb, gbc.sp());
        EXPECT(0x520a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00C8
        gbc.setState(0x2d49, 0x5cdc, 0xe670, 0x701c, 0x3525, 0xf89a, 0x1, 0x1);
        gbc.writeMem(0x2d49, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5cdc, gbc.sp());
        EXPECT(0x2d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00C9
        gbc.setState(0xe22d, 0x73f6, 0x7620, 0x70cd, 0xa02e, 0xec55, 0x0, 0x1);
        gbc.writeMem(0xe22d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x73f6, gbc.sp());
        EXPECT(0xe22f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe22d));
        EXPECT(0xd8, gbc.readMem(0xe22e));
        // CB D8 00CA
        gbc.setState(0x6090, 0x526a, 0xc5c0, 0xc73b, 0x2e2, 0x994, 0x1, 0x1);
        gbc.writeMem(0x6090, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x526a, gbc.sp());
        EXPECT(0x6092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00CB
        gbc.setState(0x85c0, 0xda08, 0x5590, 0x9b5e, 0xbddf, 0x235b, 0x1, 0x1);
        gbc.writeMem(0x85c0, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xda08, gbc.sp());
        EXPECT(0x85c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c0));
        EXPECT(0xd8, gbc.readMem(0x85c1));
        // CB D8 00CC
        gbc.setState(0xc361, 0x2164, 0xc190, 0x9e2d, 0xe234, 0x4d8c, 0x1, 0x0);
        gbc.writeMem(0xc361, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2164, gbc.sp());
        EXPECT(0xc363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc361));
        EXPECT(0xd8, gbc.readMem(0xc362));
        // CB D8 00CD
        gbc.setState(0xd42d, 0xb14e, 0xc7a0, 0xa89a, 0xa40d, 0x44f4, 0x1, 0x1);
        gbc.writeMem(0xd42d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb14e, gbc.sp());
        EXPECT(0xd42f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd42d));
        EXPECT(0xd8, gbc.readMem(0xd42e));
        // CB D8 00CE
        gbc.setState(0xe8a9, 0x69bc, 0x57e0, 0x4e40, 0xd6f9, 0x2f55, 0x0, 0x1);
        gbc.writeMem(0xe8a9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x69bc, gbc.sp());
        EXPECT(0xe8ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a9));
        EXPECT(0xd8, gbc.readMem(0xe8aa));
        // CB D8 00CF
        gbc.setState(0xc142, 0xcfd, 0x84e0, 0x23e2, 0x9422, 0xa602, 0x0, 0x1);
        gbc.writeMem(0xc142, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcfd, gbc.sp());
        EXPECT(0xc144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc142));
        EXPECT(0xd8, gbc.readMem(0xc143));
        // CB D8 00D0
        gbc.setState(0x86ea, 0xf54, 0x71d0, 0x3a45, 0x1800, 0xc3aa, 0x1, 0x0);
        gbc.writeMem(0x86ea, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf54, gbc.sp());
        EXPECT(0x86ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ea));
        EXPECT(0xd8, gbc.readMem(0x86eb));
        // CB D8 00D1
        gbc.setState(0xe3e0, 0x803d, 0x3860, 0x113b, 0x14ca, 0xe565, 0x1, 0x1);
        gbc.writeMem(0xe3e0, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x803d, gbc.sp());
        EXPECT(0xe3e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e0));
        EXPECT(0xd8, gbc.readMem(0xe3e1));
        // CB D8 00D2
        gbc.setState(0xa24b, 0x901a, 0x2af0, 0x8129, 0xb03, 0xcc89, 0x0, 0x1);
        gbc.writeMem(0xa24b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x901a, gbc.sp());
        EXPECT(0xa24d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24b));
        EXPECT(0xd8, gbc.readMem(0xa24c));
        // CB D8 00D3
        gbc.setState(0x834f, 0xa264, 0x6a70, 0xdba8, 0x245, 0x213b, 0x1, 0x0);
        gbc.writeMem(0x834f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa264, gbc.sp());
        EXPECT(0x8351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x834f));
        EXPECT(0xd8, gbc.readMem(0x8350));
        // CB D8 00D4
        gbc.setState(0x7dd1, 0xf2f6, 0xed90, 0x2c7e, 0xd3f4, 0xa0aa, 0x1, 0x1);
        gbc.writeMem(0x7dd1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf2f6, gbc.sp());
        EXPECT(0x7dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00D5
        gbc.setState(0xec14, 0xc4b8, 0xdd20, 0xba00, 0x8c90, 0x620, 0x0, 0x1);
        gbc.writeMem(0xec14, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc4b8, gbc.sp());
        EXPECT(0xec16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec14));
        EXPECT(0xd8, gbc.readMem(0xec15));
        // CB D8 00D6
        gbc.setState(0xbe55, 0x160a, 0x18a0, 0x19be, 0xf9cb, 0xc9e3, 0x1, 0x1);
        gbc.writeMem(0xbe55, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x160a, gbc.sp());
        EXPECT(0xbe57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe55));
        EXPECT(0xd8, gbc.readMem(0xbe56));
        // CB D8 00D7
        gbc.setState(0x962a, 0xb357, 0x6b70, 0x7681, 0x83fa, 0x66dc, 0x0, 0x0);
        gbc.writeMem(0x962a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb357, gbc.sp());
        EXPECT(0x962c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x962a));
        EXPECT(0xd8, gbc.readMem(0x962b));
        // CB D8 00D8
        gbc.setState(0xb060, 0xef4, 0x72b0, 0xb0b1, 0x66b4, 0xf2c1, 0x1, 0x1);
        gbc.writeMem(0xb060, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xef4, gbc.sp());
        EXPECT(0xb062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb060));
        EXPECT(0xd8, gbc.readMem(0xb061));
        // CB D8 00D9
        gbc.setState(0xdd19, 0x971, 0x3c90, 0x9dcf, 0x84c2, 0xce38, 0x1, 0x1);
        gbc.writeMem(0xdd19, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x971, gbc.sp());
        EXPECT(0xdd1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd19));
        EXPECT(0xd8, gbc.readMem(0xdd1a));
        // CB D8 00DA
        gbc.setState(0xef5d, 0x7b7a, 0x5c40, 0x2bd2, 0x21cd, 0xf727, 0x0, 0x0);
        gbc.writeMem(0xef5d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7b7a, gbc.sp());
        EXPECT(0xef5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef5d));
        EXPECT(0xd8, gbc.readMem(0xef5e));
        // CB D8 00DB
        gbc.setState(0xa7bd, 0xbff2, 0xe360, 0xa1b9, 0xba12, 0xf001, 0x0, 0x0);
        gbc.writeMem(0xa7bd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbff2, gbc.sp());
        EXPECT(0xa7bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7bd));
        EXPECT(0xd8, gbc.readMem(0xa7be));
        // CB D8 00DC
        gbc.setState(0x9b36, 0x2689, 0xbd10, 0x184, 0xbf1d, 0x58e1, 0x1, 0x1);
        gbc.writeMem(0x9b36, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2689, gbc.sp());
        EXPECT(0x9b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b36));
        EXPECT(0xd8, gbc.readMem(0x9b37));
        // CB D8 00DD
        gbc.setState(0x922, 0x1fa4, 0xead0, 0x597c, 0x306a, 0xdfb3, 0x0, 0x1);
        gbc.writeMem(0x922, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1fa4, gbc.sp());
        EXPECT(0x924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00DF
        gbc.setState(0xb657, 0xc85b, 0xc130, 0x1a56, 0xb606, 0x1c2a, 0x0, 0x0);
        gbc.writeMem(0xb657, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc85b, gbc.sp());
        EXPECT(0xb659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb657));
        EXPECT(0xd8, gbc.readMem(0xb658));
        // CB D8 00E0
        gbc.setState(0xc5a, 0x6b0e, 0x8010, 0x914e, 0x33d7, 0xe05, 0x1, 0x0);
        gbc.writeMem(0xc5a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6b0e, gbc.sp());
        EXPECT(0xc5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00E1
        gbc.setState(0x587e, 0x7390, 0x980, 0xf534, 0xbd86, 0x8c58, 0x0, 0x1);
        gbc.writeMem(0x587e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7390, gbc.sp());
        EXPECT(0x5880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00E2
        gbc.setState(0x1006, 0xe653, 0x1e00, 0x44c5, 0x267e, 0xa9d1, 0x0, 0x1);
        gbc.writeMem(0x1006, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe653, gbc.sp());
        EXPECT(0x1008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00E3
        gbc.setState(0x61e4, 0x224, 0x2500, 0x3f9e, 0xaf40, 0xfa47, 0x0, 0x1);
        gbc.writeMem(0x61e4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x224, gbc.sp());
        EXPECT(0x61e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00E4
        gbc.setState(0x1b6c, 0xe3fb, 0xbd60, 0x25b4, 0x601, 0x8414, 0x0, 0x0);
        gbc.writeMem(0x1b6c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe3fb, gbc.sp());
        EXPECT(0x1b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00E5
        gbc.setState(0xcbe, 0x405e, 0x6010, 0x2e61, 0xba39, 0xd9c9, 0x1, 0x1);
        gbc.writeMem(0xcbe, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x405e, gbc.sp());
        EXPECT(0xcc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00E6
        gbc.setState(0xd3e2, 0xba64, 0x420, 0x3cf8, 0xa92a, 0x3ae3, 0x0, 0x1);
        gbc.writeMem(0xd3e2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xba64, gbc.sp());
        EXPECT(0xd3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3e2));
        EXPECT(0xd8, gbc.readMem(0xd3e3));
        // CB D8 00E7
        gbc.setState(0xea91, 0xd39, 0x2690, 0xf576, 0xce2a, 0xc102, 0x1, 0x1);
        gbc.writeMem(0xea91, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd39, gbc.sp());
        EXPECT(0xea93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea91));
        EXPECT(0xd8, gbc.readMem(0xea92));
        // CB D8 00E8
        gbc.setState(0x95ae, 0x8c07, 0xb440, 0xd848, 0xa9c6, 0x9c7c, 0x1, 0x1);
        gbc.writeMem(0x95ae, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8c07, gbc.sp());
        EXPECT(0x95b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ae));
        EXPECT(0xd8, gbc.readMem(0x95af));
        // CB D8 00E9
        gbc.setState(0x69bc, 0xa58d, 0xa820, 0x1c1a, 0x3090, 0xa6e8, 0x1, 0x0);
        gbc.writeMem(0x69bc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa58d, gbc.sp());
        EXPECT(0x69be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00EA
        gbc.setState(0x6286, 0x8f8c, 0xfae0, 0xd305, 0xd3a7, 0x99cf, 0x1, 0x0);
        gbc.writeMem(0x6286, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8f8c, gbc.sp());
        EXPECT(0x6288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00EB
        gbc.setState(0xbbe8, 0x4fa6, 0x1950, 0xdcb0, 0xaa34, 0x3ba, 0x0, 0x0);
        gbc.writeMem(0xbbe8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4fa6, gbc.sp());
        EXPECT(0xbbea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe8));
        EXPECT(0xd8, gbc.readMem(0xbbe9));
        // CB D8 00EC
        gbc.setState(0x12be, 0xa289, 0x4540, 0xb32c, 0x8485, 0x1e98, 0x0, 0x1);
        gbc.writeMem(0x12be, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa289, gbc.sp());
        EXPECT(0x12c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00ED
        gbc.setState(0x1cc8, 0x46e2, 0x8d70, 0x1b65, 0x9a82, 0x5965, 0x1, 0x1);
        gbc.writeMem(0x1cc8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x46e2, gbc.sp());
        EXPECT(0x1cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00EE
        gbc.setState(0x7e6a, 0xad2a, 0x5e30, 0xe11d, 0xdd4f, 0x2ddd, 0x0, 0x1);
        gbc.writeMem(0x7e6a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xad2a, gbc.sp());
        EXPECT(0x7e6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00EF
        gbc.setState(0xb7e6, 0x236b, 0xe040, 0x5bee, 0x5cf0, 0x479a, 0x0, 0x1);
        gbc.writeMem(0xb7e6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x236b, gbc.sp());
        EXPECT(0xb7e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e6));
        EXPECT(0xd8, gbc.readMem(0xb7e7));
        // CB D8 00F0
        gbc.setState(0x1da9, 0xb4c9, 0xf650, 0x2b75, 0x983f, 0x31e3, 0x1, 0x1);
        gbc.writeMem(0x1da9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb4c9, gbc.sp());
        EXPECT(0x1dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00F1
        gbc.setState(0x4b91, 0x7462, 0xbf40, 0xbbf4, 0x389d, 0x9af7, 0x0, 0x0);
        gbc.writeMem(0x4b91, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7462, gbc.sp());
        EXPECT(0x4b93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00F2
        gbc.setState(0x7ef5, 0xee76, 0x9030, 0x5020, 0x2a78, 0xdf6b, 0x1, 0x0);
        gbc.writeMem(0x7ef5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xee76, gbc.sp());
        EXPECT(0x7ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00F3
        gbc.setState(0xb3f6, 0xabd7, 0xfd10, 0xdafc, 0xf8d3, 0x9192, 0x0, 0x0);
        gbc.writeMem(0xb3f6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xabd7, gbc.sp());
        EXPECT(0xb3f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f6));
        EXPECT(0xd8, gbc.readMem(0xb3f7));
        // CB D8 00F4
        gbc.setState(0xda8f, 0x476d, 0xba50, 0x33cc, 0x77c1, 0x664a, 0x0, 0x0);
        gbc.writeMem(0xda8f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x476d, gbc.sp());
        EXPECT(0xda91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8f));
        EXPECT(0xd8, gbc.readMem(0xda90));
        // CB D8 00F5
        gbc.setState(0xd2d6, 0xedb5, 0xb7b0, 0xb0e, 0x1be1, 0x3f5d, 0x1, 0x0);
        gbc.writeMem(0xd2d6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xedb5, gbc.sp());
        EXPECT(0xd2d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d6));
        EXPECT(0xd8, gbc.readMem(0xd2d7));
        // CB D8 00F6
        gbc.setState(0x5046, 0xcac8, 0xf810, 0xeb1a, 0x869d, 0x9889, 0x1, 0x1);
        gbc.writeMem(0x5046, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xcac8, gbc.sp());
        EXPECT(0x5048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00F7
        gbc.setState(0xc98d, 0x1b97, 0x48b0, 0x2f38, 0x26e2, 0xb985, 0x1, 0x0);
        gbc.writeMem(0xc98d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1b97, gbc.sp());
        EXPECT(0xc98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc98d));
        EXPECT(0xd8, gbc.readMem(0xc98e));
        // CB D8 00F8
        gbc.setState(0x1f97, 0x7279, 0x6e20, 0x64a, 0xe886, 0x7918, 0x0, 0x1);
        gbc.writeMem(0x1f97, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7279, gbc.sp());
        EXPECT(0x1f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00FA
        gbc.setState(0x81ce, 0x4b29, 0xc4f0, 0xfe12, 0x703d, 0xf1f, 0x1, 0x0);
        gbc.writeMem(0x81ce, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4b29, gbc.sp());
        EXPECT(0x81d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ce));
        EXPECT(0xd8, gbc.readMem(0x81cf));
        // CB D8 00FB
        gbc.setState(0x1051, 0xfb6, 0x74b0, 0x95c5, 0xdf60, 0x6e93, 0x0, 0x1);
        gbc.writeMem(0x1051, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xfb6, gbc.sp());
        EXPECT(0x1053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00FC
        gbc.setState(0x4940, 0x9126, 0x8780, 0x71ef, 0xe56d, 0x7fe7, 0x0, 0x1);
        gbc.writeMem(0x4940, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9126, gbc.sp());
        EXPECT(0x4942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 00FD
        gbc.setState(0x35a, 0x716, 0x8a90, 0xd0da, 0x2579, 0x19d9, 0x0, 0x0);
        gbc.writeMem(0x35a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x716, gbc.sp());
        EXPECT(0x35c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00FE
        gbc.setState(0x7818, 0x87e, 0x4ab0, 0x91d6, 0xab1, 0xc1b8, 0x1, 0x0);
        gbc.writeMem(0x7818, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x87e, gbc.sp());
        EXPECT(0x781a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 00FF
        gbc.setState(0x3b73, 0x315, 0x7f0, 0x7f43, 0xe3e8, 0xa3e7, 0x0, 0x0);
        gbc.writeMem(0x3b73, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x315, gbc.sp());
        EXPECT(0x3b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0100
        gbc.setState(0x3fa, 0x457c, 0x4180, 0xe510, 0x9d85, 0x400, 0x1, 0x1);
        gbc.writeMem(0x3fa, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x457c, gbc.sp());
        EXPECT(0x3fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0101
        gbc.setState(0xdac8, 0xd7ec, 0x3990, 0x9d3f, 0xbb47, 0x78a2, 0x1, 0x0);
        gbc.writeMem(0xdac8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd7ec, gbc.sp());
        EXPECT(0xdaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac8));
        EXPECT(0xd8, gbc.readMem(0xdac9));
        // CB D8 0102
        gbc.setState(0x904c, 0x6fcf, 0xf860, 0xff6e, 0xa24, 0xe196, 0x0, 0x0);
        gbc.writeMem(0x904c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6fcf, gbc.sp());
        EXPECT(0x904e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x904c));
        EXPECT(0xd8, gbc.readMem(0x904d));
        // CB D8 0103
        gbc.setState(0xe82, 0x8812, 0x9440, 0xcbad, 0xdb4b, 0xa377, 0x0, 0x0);
        gbc.writeMem(0xe82, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8812, gbc.sp());
        EXPECT(0xe84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0105
        gbc.setState(0xb8c3, 0xb047, 0xb260, 0x165e, 0xb85b, 0x1a90, 0x0, 0x1);
        gbc.writeMem(0xb8c3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb047, gbc.sp());
        EXPECT(0xb8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c3));
        EXPECT(0xd8, gbc.readMem(0xb8c4));
        // CB D8 0106
        gbc.setState(0x1f23, 0x89a4, 0x22f0, 0x41a7, 0xc9b9, 0xe443, 0x0, 0x0);
        gbc.writeMem(0x1f23, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x89a4, gbc.sp());
        EXPECT(0x1f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0107
        gbc.setState(0x7a8a, 0x21ce, 0x7e50, 0x689d, 0xbf2c, 0xf8bf, 0x1, 0x1);
        gbc.writeMem(0x7a8a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x21ce, gbc.sp());
        EXPECT(0x7a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0108
        gbc.setState(0x6901, 0xbacf, 0x69b0, 0xdc4d, 0x83ed, 0xe2d2, 0x0, 0x0);
        gbc.writeMem(0x6901, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbacf, gbc.sp());
        EXPECT(0x6903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0109
        gbc.setState(0xc80b, 0xe1d1, 0xf020, 0xaba2, 0xf45e, 0x4f69, 0x0, 0x0);
        gbc.writeMem(0xc80b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe1d1, gbc.sp());
        EXPECT(0xc80d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc80b));
        EXPECT(0xd8, gbc.readMem(0xc80c));
        // CB D8 010A
        gbc.setState(0xd940, 0x8aae, 0xcb0, 0xe21d, 0xce10, 0xf050, 0x0, 0x0);
        gbc.writeMem(0xd940, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8aae, gbc.sp());
        EXPECT(0xd942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd940));
        EXPECT(0xd8, gbc.readMem(0xd941));
        // CB D8 010B
        gbc.setState(0x8e1c, 0xf7c, 0xf130, 0xa03c, 0x8d99, 0xddef, 0x0, 0x1);
        gbc.writeMem(0x8e1c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf7c, gbc.sp());
        EXPECT(0x8e1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e1c));
        EXPECT(0xd8, gbc.readMem(0x8e1d));
        // CB D8 010C
        gbc.setState(0xbb21, 0x1f42, 0xf230, 0x6ccd, 0x777b, 0xafcb, 0x0, 0x1);
        gbc.writeMem(0xbb21, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1f42, gbc.sp());
        EXPECT(0xbb23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb21));
        EXPECT(0xd8, gbc.readMem(0xbb22));
        // CB D8 010D
        gbc.setState(0x7e12, 0xfe1, 0x2600, 0x426f, 0x45e, 0x7026, 0x0, 0x1);
        gbc.writeMem(0x7e12, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xfe1, gbc.sp());
        EXPECT(0x7e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 010E
        gbc.setState(0x2bae, 0xc9be, 0x4f90, 0x7eec, 0x2a9c, 0xb340, 0x1, 0x0);
        gbc.writeMem(0x2bae, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc9be, gbc.sp());
        EXPECT(0x2bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 010F
        gbc.setState(0xa26f, 0x7e7c, 0x73a0, 0xec8b, 0x83ae, 0xc285, 0x0, 0x0);
        gbc.writeMem(0xa26f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7e7c, gbc.sp());
        EXPECT(0xa271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa26f));
        EXPECT(0xd8, gbc.readMem(0xa270));
        // CB D8 0110
        gbc.setState(0x29e9, 0x92ce, 0xb980, 0x6c4f, 0x1d3d, 0xb273, 0x0, 0x0);
        gbc.writeMem(0x29e9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x92ce, gbc.sp());
        EXPECT(0x29eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0111
        gbc.setState(0xd10a, 0x18f0, 0x1830, 0x1084, 0x9879, 0x3b0e, 0x1, 0x1);
        gbc.writeMem(0xd10a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x18f0, gbc.sp());
        EXPECT(0xd10c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10a));
        EXPECT(0xd8, gbc.readMem(0xd10b));
        // CB D8 0112
        gbc.setState(0x15ef, 0x102, 0xf050, 0xf511, 0x8d82, 0xbd5c, 0x1, 0x1);
        gbc.writeMem(0x15ef, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x102, gbc.sp());
        EXPECT(0x15f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0113
        gbc.setState(0xe764, 0x28d, 0x1670, 0x7ed4, 0x661e, 0x33e2, 0x0, 0x1);
        gbc.writeMem(0xe764, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x28d, gbc.sp());
        EXPECT(0xe766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe764));
        EXPECT(0xd8, gbc.readMem(0xe765));
        // CB D8 0114
        gbc.setState(0x517a, 0xe1d6, 0x75f0, 0x2028, 0x8f62, 0xa39b, 0x1, 0x0);
        gbc.writeMem(0x517a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe1d6, gbc.sp());
        EXPECT(0x517c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0115
        gbc.setState(0xa0f1, 0xb60d, 0x1760, 0x16e1, 0x1a5f, 0xd6a, 0x1, 0x1);
        gbc.writeMem(0xa0f1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb60d, gbc.sp());
        EXPECT(0xa0f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f1));
        EXPECT(0xd8, gbc.readMem(0xa0f2));
        // CB D8 0116
        gbc.setState(0x8ecf, 0xde, 0x34d0, 0x6e9d, 0x2c46, 0xb05c, 0x0, 0x1);
        gbc.writeMem(0x8ecf, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xde, gbc.sp());
        EXPECT(0x8ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ecf));
        EXPECT(0xd8, gbc.readMem(0x8ed0));
        // CB D8 0117
        gbc.setState(0xa41d, 0xf600, 0xc060, 0x97ef, 0xf580, 0xff66, 0x1, 0x1);
        gbc.writeMem(0xa41d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf600, gbc.sp());
        EXPECT(0xa41f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa41d));
        EXPECT(0xd8, gbc.readMem(0xa41e));
        // CB D8 0118
        gbc.setState(0x152d, 0x89e, 0xa810, 0x8d89, 0x1440, 0xe302, 0x0, 0x0);
        gbc.writeMem(0x152d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x89e, gbc.sp());
        EXPECT(0x152f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0119
        gbc.setState(0x1c0b, 0xdf5a, 0x2ad0, 0x1e61, 0xaec3, 0x7ff2, 0x1, 0x1);
        gbc.writeMem(0x1c0b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdf5a, gbc.sp());
        EXPECT(0x1c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 011A
        gbc.setState(0x2b1c, 0x9943, 0xf110, 0x5860, 0xdc6b, 0x59c9, 0x0, 0x0);
        gbc.writeMem(0x2b1c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9943, gbc.sp());
        EXPECT(0x2b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 011B
        gbc.setState(0x7b1e, 0xe170, 0x1260, 0x5a6f, 0xfce8, 0xb4e5, 0x0, 0x0);
        gbc.writeMem(0x7b1e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe170, gbc.sp());
        EXPECT(0x7b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 011D
        gbc.setState(0x2f70, 0xdbe1, 0x9440, 0xe0d5, 0xb7a3, 0xeef8, 0x1, 0x0);
        gbc.writeMem(0x2f70, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdbe1, gbc.sp());
        EXPECT(0x2f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 011E
        gbc.setState(0x8463, 0xbf01, 0xe690, 0x1286, 0xc193, 0x690a, 0x0, 0x0);
        gbc.writeMem(0x8463, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbf01, gbc.sp());
        EXPECT(0x8465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8463));
        EXPECT(0xd8, gbc.readMem(0x8464));
        // CB D8 011F
        gbc.setState(0x5e3c, 0x2279, 0x2d30, 0x1c02, 0xa5b3, 0x20f2, 0x1, 0x1);
        gbc.writeMem(0x5e3c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2279, gbc.sp());
        EXPECT(0x5e3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0120
        gbc.setState(0x4792, 0x9399, 0xb9d0, 0xd4f0, 0xe56a, 0x700, 0x1, 0x1);
        gbc.writeMem(0x4792, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9399, gbc.sp());
        EXPECT(0x4794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0121
        gbc.setState(0x7732, 0x573a, 0x8f60, 0x4add, 0xf79b, 0x3c7, 0x0, 0x0);
        gbc.writeMem(0x7732, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x573a, gbc.sp());
        EXPECT(0x7734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0122
        gbc.setState(0x51a9, 0x51be, 0x5480, 0x7784, 0x84e4, 0x431d, 0x0, 0x1);
        gbc.writeMem(0x51a9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x51be, gbc.sp());
        EXPECT(0x51ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0123
        gbc.setState(0x4571, 0x1527, 0xc980, 0x17b9, 0xa8d9, 0x45f1, 0x1, 0x0);
        gbc.writeMem(0x4571, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1527, gbc.sp());
        EXPECT(0x4573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0124
        gbc.setState(0x94e8, 0xc76, 0x76d0, 0x5c20, 0x2711, 0x4fb5, 0x1, 0x1);
        gbc.writeMem(0x94e8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc76, gbc.sp());
        EXPECT(0x94ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94e8));
        EXPECT(0xd8, gbc.readMem(0x94e9));
        // CB D8 0125
        gbc.setState(0x2edc, 0x471b, 0x7220, 0x4649, 0x1384, 0xa2a, 0x0, 0x1);
        gbc.writeMem(0x2edc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x471b, gbc.sp());
        EXPECT(0x2ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0126
        gbc.setState(0x40cc, 0x8af4, 0x2e90, 0x66d4, 0x5fc7, 0x19d8, 0x1, 0x0);
        gbc.writeMem(0x40cc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8af4, gbc.sp());
        EXPECT(0x40ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0127
        gbc.setState(0x60ca, 0x7870, 0xd110, 0xd89b, 0xd6ff, 0x219a, 0x0, 0x1);
        gbc.writeMem(0x60ca, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7870, gbc.sp());
        EXPECT(0x60cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0128
        gbc.setState(0x808a, 0x5703, 0x1c90, 0xed9e, 0xd9a8, 0xa9ea, 0x1, 0x1);
        gbc.writeMem(0x808a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5703, gbc.sp());
        EXPECT(0x808c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x808a));
        EXPECT(0xd8, gbc.readMem(0x808b));
        // CB D8 0129
        gbc.setState(0x1888, 0x430c, 0x66b0, 0xc3cb, 0x352c, 0x5546, 0x0, 0x1);
        gbc.writeMem(0x1888, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x430c, gbc.sp());
        EXPECT(0x188a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 012A
        gbc.setState(0x21c4, 0x658f, 0x3da0, 0x947e, 0x51a9, 0xa112, 0x0, 0x1);
        gbc.writeMem(0x21c4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x658f, gbc.sp());
        EXPECT(0x21c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 012B
        gbc.setState(0x4712, 0xd3d0, 0x41d0, 0x7206, 0xb2ca, 0xd53e, 0x1, 0x1);
        gbc.writeMem(0x4712, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd3d0, gbc.sp());
        EXPECT(0x4714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 012C
        gbc.setState(0x253, 0xd882, 0xa490, 0xfcae, 0xb09d, 0x6414, 0x0, 0x1);
        gbc.writeMem(0x253, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd882, gbc.sp());
        EXPECT(0x255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 012D
        gbc.setState(0x6dc1, 0xd9a0, 0x3f30, 0x96e0, 0xc401, 0xe8d8, 0x1, 0x0);
        gbc.writeMem(0x6dc1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd9a0, gbc.sp());
        EXPECT(0x6dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 012E
        gbc.setState(0x443, 0x7a3c, 0xbb70, 0x2538, 0xe763, 0x3041, 0x0, 0x0);
        gbc.writeMem(0x443, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7a3c, gbc.sp());
        EXPECT(0x445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 012F
        gbc.setState(0x6106, 0xaa06, 0x9640, 0x6c3f, 0x8411, 0x902b, 0x0, 0x0);
        gbc.writeMem(0x6106, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xaa06, gbc.sp());
        EXPECT(0x6108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0130
        gbc.setState(0x580b, 0xcbdc, 0xe1d0, 0xead0, 0xd356, 0x3440, 0x1, 0x0);
        gbc.writeMem(0x580b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xcbdc, gbc.sp());
        EXPECT(0x580d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0131
        gbc.setState(0x71d0, 0xa27, 0x2c0, 0x52c0, 0xd7ee, 0x47f4, 0x0, 0x1);
        gbc.writeMem(0x71d0, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa27, gbc.sp());
        EXPECT(0x71d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0132
        gbc.setState(0xbcd8, 0x666d, 0x3680, 0xe543, 0x9f2a, 0x3ba8, 0x1, 0x1);
        gbc.writeMem(0xbcd8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x666d, gbc.sp());
        EXPECT(0xbcda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd8));
        EXPECT(0xd8, gbc.readMem(0xbcd9));
        // CB D8 0133
        gbc.setState(0x3101, 0xfbe9, 0xfd70, 0x2455, 0x5d19, 0x1c05, 0x0, 0x1);
        gbc.writeMem(0x3101, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfbe9, gbc.sp());
        EXPECT(0x3103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0134
        gbc.setState(0xb675, 0xc992, 0x31a0, 0xf7b7, 0x7474, 0xeab, 0x0, 0x0);
        gbc.writeMem(0xb675, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc992, gbc.sp());
        EXPECT(0xb677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb675));
        EXPECT(0xd8, gbc.readMem(0xb676));
        // CB D8 0135
        gbc.setState(0xca7a, 0xe255, 0x1180, 0xeeae, 0x3306, 0xed66, 0x1, 0x0);
        gbc.writeMem(0xca7a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe255, gbc.sp());
        EXPECT(0xca7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca7a));
        EXPECT(0xd8, gbc.readMem(0xca7b));
        // CB D8 0136
        gbc.setState(0x8eee, 0x74f7, 0x90d0, 0xfb91, 0x860e, 0xc1a2, 0x0, 0x0);
        gbc.writeMem(0x8eee, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x74f7, gbc.sp());
        EXPECT(0x8ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eee));
        EXPECT(0xd8, gbc.readMem(0x8eef));
        // CB D8 0137
        gbc.setState(0x3f64, 0xd158, 0x5630, 0xb95f, 0x8803, 0x4699, 0x0, 0x1);
        gbc.writeMem(0x3f64, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd158, gbc.sp());
        EXPECT(0x3f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0138
        gbc.setState(0xa55b, 0xb09c, 0xa60, 0xa75e, 0x1d47, 0xd72, 0x1, 0x0);
        gbc.writeMem(0xa55b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb09c, gbc.sp());
        EXPECT(0xa55d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa55b));
        EXPECT(0xd8, gbc.readMem(0xa55c));
        // CB D8 0139
        gbc.setState(0x4755, 0x2447, 0xd300, 0xbb8a, 0x2a0c, 0xc38c, 0x0, 0x0);
        gbc.writeMem(0x4755, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2447, gbc.sp());
        EXPECT(0x4757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 013A
        gbc.setState(0x7981, 0x23e4, 0x8da0, 0x5e93, 0x4678, 0x6b9d, 0x0, 0x1);
        gbc.writeMem(0x7981, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x23e4, gbc.sp());
        EXPECT(0x7983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 013C
        gbc.setState(0x3590, 0xf7a3, 0xa060, 0x6558, 0xdf44, 0xe2d, 0x1, 0x0);
        gbc.writeMem(0x3590, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf7a3, gbc.sp());
        EXPECT(0x3592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 013D
        gbc.setState(0xadf1, 0x28ce, 0xffc0, 0xfbf4, 0x2dd4, 0x17ea, 0x0, 0x1);
        gbc.writeMem(0xadf1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x28ce, gbc.sp());
        EXPECT(0xadf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf1));
        EXPECT(0xd8, gbc.readMem(0xadf2));
        // CB D8 013E
        gbc.setState(0x67bd, 0x659e, 0x32b0, 0x4d4b, 0xd577, 0xda03, 0x1, 0x0);
        gbc.writeMem(0x67bd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x659e, gbc.sp());
        EXPECT(0x67bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 013F
        gbc.setState(0xce3e, 0x596, 0xb080, 0x8d2e, 0x72da, 0x3975, 0x1, 0x1);
        gbc.writeMem(0xce3e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x596, gbc.sp());
        EXPECT(0xce40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce3e));
        EXPECT(0xd8, gbc.readMem(0xce3f));
        // CB D8 0140
        gbc.setState(0x56c, 0xb5c9, 0xa480, 0xf770, 0xeba7, 0x71b5, 0x0, 0x0);
        gbc.writeMem(0x56c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb5c9, gbc.sp());
        EXPECT(0x56e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0141
        gbc.setState(0x60d6, 0x154e, 0xebd0, 0xdb2d, 0x41fe, 0x167e, 0x0, 0x0);
        gbc.writeMem(0x60d6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x154e, gbc.sp());
        EXPECT(0x60d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0142
        gbc.setState(0x79cf, 0x86ab, 0x9bf0, 0x70a8, 0xbd4e, 0x7ca1, 0x0, 0x0);
        gbc.writeMem(0x79cf, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x86ab, gbc.sp());
        EXPECT(0x79d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0143
        gbc.setState(0x3233, 0xc0db, 0x2560, 0xed40, 0x1a11, 0x65e8, 0x0, 0x0);
        gbc.writeMem(0x3233, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc0db, gbc.sp());
        EXPECT(0x3235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0144
        gbc.setState(0xaf67, 0x7e0b, 0xbbd0, 0xdf23, 0xb8af, 0x7205, 0x0, 0x1);
        gbc.writeMem(0xaf67, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7e0b, gbc.sp());
        EXPECT(0xaf69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf67));
        EXPECT(0xd8, gbc.readMem(0xaf68));
        // CB D8 0145
        gbc.setState(0xbd16, 0x97b9, 0x3970, 0x9cb4, 0x4b0d, 0x5c7f, 0x0, 0x1);
        gbc.writeMem(0xbd16, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x97b9, gbc.sp());
        EXPECT(0xbd18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd16));
        EXPECT(0xd8, gbc.readMem(0xbd17));
        // CB D8 0147
        gbc.setState(0x40eb, 0x3a82, 0x3110, 0x6c6, 0xa298, 0x9d0b, 0x1, 0x1);
        gbc.writeMem(0x40eb, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3a82, gbc.sp());
        EXPECT(0x40ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0148
        gbc.setState(0xaffc, 0xf6fb, 0x5300, 0x3881, 0xeecf, 0xf627, 0x1, 0x0);
        gbc.writeMem(0xaffc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf6fb, gbc.sp());
        EXPECT(0xaffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaffc));
        EXPECT(0xd8, gbc.readMem(0xaffd));
        // CB D8 0149
        gbc.setState(0x9d36, 0x5bef, 0x98d0, 0x1b5a, 0xc24f, 0x886a, 0x0, 0x1);
        gbc.writeMem(0x9d36, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5bef, gbc.sp());
        EXPECT(0x9d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d36));
        EXPECT(0xd8, gbc.readMem(0x9d37));
        // CB D8 014A
        gbc.setState(0x4a4c, 0x7c5b, 0xba70, 0x69c9, 0xf18b, 0x57e7, 0x0, 0x1);
        gbc.writeMem(0x4a4c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7c5b, gbc.sp());
        EXPECT(0x4a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 014B
        gbc.setState(0xbfb8, 0x5dae, 0x77e0, 0xe215, 0x57fa, 0xc39f, 0x0, 0x1);
        gbc.writeMem(0xbfb8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5dae, gbc.sp());
        EXPECT(0xbfba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb8));
        EXPECT(0xd8, gbc.readMem(0xbfb9));
        // CB D8 014C
        gbc.setState(0x799d, 0x9680, 0x5560, 0x8d4d, 0xec1f, 0x2f37, 0x0, 0x1);
        gbc.writeMem(0x799d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9680, gbc.sp());
        EXPECT(0x799f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 014D
        gbc.setState(0x3323, 0xec89, 0x6360, 0x67dd, 0x9ce3, 0x5cac, 0x1, 0x0);
        gbc.writeMem(0x3323, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xec89, gbc.sp());
        EXPECT(0x3325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 014E
        gbc.setState(0xef99, 0xd6bc, 0x8fe0, 0x26af, 0x2733, 0x1b4a, 0x0, 0x1);
        gbc.writeMem(0xef99, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd6bc, gbc.sp());
        EXPECT(0xef9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef99));
        EXPECT(0xd8, gbc.readMem(0xef9a));
        // CB D8 0150
        gbc.setState(0x3f4f, 0x3c3b, 0x5e30, 0x2ecf, 0xf6e4, 0x7f30, 0x0, 0x1);
        gbc.writeMem(0x3f4f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3c3b, gbc.sp());
        EXPECT(0x3f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0151
        gbc.setState(0x92b6, 0xa783, 0xa670, 0x6a24, 0x6062, 0xf61e, 0x0, 0x1);
        gbc.writeMem(0x92b6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa783, gbc.sp());
        EXPECT(0x92b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b6));
        EXPECT(0xd8, gbc.readMem(0x92b7));
        // CB D8 0152
        gbc.setState(0xb274, 0xd7a1, 0x99a0, 0xf27e, 0x6d99, 0x62cd, 0x0, 0x0);
        gbc.writeMem(0xb274, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd7a1, gbc.sp());
        EXPECT(0xb276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb274));
        EXPECT(0xd8, gbc.readMem(0xb275));
        // CB D8 0153
        gbc.setState(0x14f1, 0x564a, 0x9630, 0x5fd0, 0x359, 0xd8c4, 0x0, 0x1);
        gbc.writeMem(0x14f1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x564a, gbc.sp());
        EXPECT(0x14f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0154
        gbc.setState(0x361f, 0xf06f, 0xc710, 0x78af, 0x8cca, 0xfb10, 0x1, 0x0);
        gbc.writeMem(0x361f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf06f, gbc.sp());
        EXPECT(0x3621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0155
        gbc.setState(0x818b, 0x4bc6, 0x80a0, 0xf6dc, 0x39ea, 0x3a42, 0x1, 0x0);
        gbc.writeMem(0x818b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4bc6, gbc.sp());
        EXPECT(0x818d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x818b));
        EXPECT(0xd8, gbc.readMem(0x818c));
        // CB D8 0157
        gbc.setState(0xcf17, 0x1d26, 0x9760, 0x91ef, 0x502d, 0xbcc1, 0x1, 0x0);
        gbc.writeMem(0xcf17, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1d26, gbc.sp());
        EXPECT(0xcf19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf17));
        EXPECT(0xd8, gbc.readMem(0xcf18));
        // CB D8 015A
        gbc.setState(0xec6, 0x908a, 0xb270, 0x15ce, 0xea61, 0x5d08, 0x0, 0x1);
        gbc.writeMem(0xec6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x908a, gbc.sp());
        EXPECT(0xec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 015B
        gbc.setState(0x31f6, 0x164, 0x3c20, 0x5b04, 0xe6d2, 0xd111, 0x0, 0x1);
        gbc.writeMem(0x31f6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x164, gbc.sp());
        EXPECT(0x31f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 015C
        gbc.setState(0x9c3d, 0x3400, 0xcf80, 0x755e, 0x8b28, 0xba54, 0x0, 0x0);
        gbc.writeMem(0x9c3d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3400, gbc.sp());
        EXPECT(0x9c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3d));
        EXPECT(0xd8, gbc.readMem(0x9c3e));
        // CB D8 015D
        gbc.setState(0xd64, 0xb62c, 0xfc80, 0x69b4, 0xc37f, 0xc3e1, 0x0, 0x1);
        gbc.writeMem(0xd64, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb62c, gbc.sp());
        EXPECT(0xd66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 015E
        gbc.setState(0x1456, 0x6026, 0x4d60, 0x556e, 0xbbf, 0x77fb, 0x1, 0x0);
        gbc.writeMem(0x1456, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6026, gbc.sp());
        EXPECT(0x1458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 015F
        gbc.setState(0xafca, 0x6135, 0x8b00, 0xf6af, 0xeb23, 0x81be, 0x0, 0x1);
        gbc.writeMem(0xafca, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6135, gbc.sp());
        EXPECT(0xafcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafca));
        EXPECT(0xd8, gbc.readMem(0xafcb));
        // CB D8 0162
        gbc.setState(0xb70f, 0x9c6b, 0xe8d0, 0x3cc5, 0x5425, 0x8eff, 0x0, 0x0);
        gbc.writeMem(0xb70f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9c6b, gbc.sp());
        EXPECT(0xb711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70f));
        EXPECT(0xd8, gbc.readMem(0xb710));
        // CB D8 0164
        gbc.setState(0xb5e4, 0x33af, 0x9e80, 0x519c, 0x39c2, 0x2bae, 0x1, 0x1);
        gbc.writeMem(0xb5e4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x33af, gbc.sp());
        EXPECT(0xb5e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e4));
        EXPECT(0xd8, gbc.readMem(0xb5e5));
        // CB D8 0165
        gbc.setState(0xeedf, 0x39b4, 0xc170, 0x8524, 0x907, 0x155f, 0x0, 0x1);
        gbc.writeMem(0xeedf, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x39b4, gbc.sp());
        EXPECT(0xeee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeedf));
        EXPECT(0xd8, gbc.readMem(0xeee0));
        // CB D8 0166
        gbc.setState(0x822e, 0x9031, 0xefc0, 0x336b, 0x2c8a, 0x7073, 0x1, 0x1);
        gbc.writeMem(0x822e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9031, gbc.sp());
        EXPECT(0x8230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x822e));
        EXPECT(0xd8, gbc.readMem(0x822f));
        // CB D8 0167
        gbc.setState(0x7c35, 0xe0ad, 0xb940, 0xe31c, 0x6403, 0x79c8, 0x1, 0x1);
        gbc.writeMem(0x7c35, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe0ad, gbc.sp());
        EXPECT(0x7c37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0168
        gbc.setState(0x7c43, 0x76f6, 0x6680, 0x62cb, 0xc40f, 0xf40e, 0x0, 0x0);
        gbc.writeMem(0x7c43, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x76f6, gbc.sp());
        EXPECT(0x7c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0169
        gbc.setState(0x482f, 0xbe4c, 0x1cd0, 0x5ce3, 0x9ac8, 0xe9aa, 0x0, 0x0);
        gbc.writeMem(0x482f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbe4c, gbc.sp());
        EXPECT(0x4831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 016B
        gbc.setState(0x6fb4, 0x3c7e, 0xbd40, 0xbed, 0x9ee5, 0xf921, 0x1, 0x1);
        gbc.writeMem(0x6fb4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3c7e, gbc.sp());
        EXPECT(0x6fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 016C
        gbc.setState(0x2c0e, 0x32ad, 0x9060, 0xc83f, 0xe94b, 0x73b2, 0x0, 0x0);
        gbc.writeMem(0x2c0e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x32ad, gbc.sp());
        EXPECT(0x2c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 016D
        gbc.setState(0x3d91, 0x79c7, 0x34e0, 0xf764, 0x16c0, 0x1d10, 0x0, 0x0);
        gbc.writeMem(0x3d91, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x79c7, gbc.sp());
        EXPECT(0x3d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 016E
        gbc.setState(0xaded, 0xad6f, 0x9370, 0xac38, 0x2465, 0xca74, 0x1, 0x0);
        gbc.writeMem(0xaded, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xad6f, gbc.sp());
        EXPECT(0xadef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaded));
        EXPECT(0xd8, gbc.readMem(0xadee));
        // CB D8 016F
        gbc.setState(0xdd85, 0x22b7, 0x160, 0xf437, 0x55cd, 0x20a0, 0x1, 0x1);
        gbc.writeMem(0xdd85, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x22b7, gbc.sp());
        EXPECT(0xdd87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd85));
        EXPECT(0xd8, gbc.readMem(0xdd86));
        // CB D8 0170
        gbc.setState(0xefb, 0xccaf, 0xc360, 0x6795, 0x5ba0, 0x4673, 0x0, 0x0);
        gbc.writeMem(0xefb, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xccaf, gbc.sp());
        EXPECT(0xefd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0171
        gbc.setState(0x51, 0x3542, 0x3df0, 0x62ac, 0xd551, 0xeb6e, 0x1, 0x1);
        gbc.writeMem(0x51, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3542, gbc.sp());
        EXPECT(0x53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0172
        gbc.setState(0x8980, 0xc349, 0xcee0, 0xf9b1, 0xa8ad, 0xbba5, 0x0, 0x0);
        gbc.writeMem(0x8980, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc349, gbc.sp());
        EXPECT(0x8982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8980));
        EXPECT(0xd8, gbc.readMem(0x8981));
        // CB D8 0173
        gbc.setState(0xc3bc, 0xc6cf, 0x6940, 0x7a19, 0x9ab4, 0xdcf7, 0x1, 0x1);
        gbc.writeMem(0xc3bc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc6cf, gbc.sp());
        EXPECT(0xc3be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3bc));
        EXPECT(0xd8, gbc.readMem(0xc3bd));
        // CB D8 0174
        gbc.setState(0xcbf8, 0xb385, 0xfde0, 0x41b5, 0x5661, 0x572b, 0x1, 0x1);
        gbc.writeMem(0xcbf8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb385, gbc.sp());
        EXPECT(0xcbfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf8));
        EXPECT(0xd8, gbc.readMem(0xcbf9));
        // CB D8 0177
        gbc.setState(0x164f, 0x176e, 0x62c0, 0xe6f1, 0xacf7, 0xe56d, 0x1, 0x1);
        gbc.writeMem(0x164f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x176e, gbc.sp());
        EXPECT(0x1651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0178
        gbc.setState(0xd94e, 0xe4d4, 0xad60, 0x639, 0xee1f, 0x1c61, 0x0, 0x1);
        gbc.writeMem(0xd94e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe4d4, gbc.sp());
        EXPECT(0xd950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94e));
        EXPECT(0xd8, gbc.readMem(0xd94f));
        // CB D8 0179
        gbc.setState(0x4bcf, 0x73c8, 0x8820, 0xad2c, 0x6c4b, 0xf701, 0x0, 0x0);
        gbc.writeMem(0x4bcf, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x73c8, gbc.sp());
        EXPECT(0x4bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 017A
        gbc.setState(0x1452, 0xb9ab, 0x7cf0, 0x5b34, 0xa9e8, 0xe927, 0x0, 0x0);
        gbc.writeMem(0x1452, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb9ab, gbc.sp());
        EXPECT(0x1454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 017B
        gbc.setState(0x8d61, 0x580d, 0xfed0, 0xc25b, 0x2ae6, 0x2750, 0x0, 0x1);
        gbc.writeMem(0x8d61, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x580d, gbc.sp());
        EXPECT(0x8d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d61));
        EXPECT(0xd8, gbc.readMem(0x8d62));
        // CB D8 017C
        gbc.setState(0x4964, 0xc7ec, 0xe400, 0x4762, 0x2cfe, 0xb06f, 0x1, 0x0);
        gbc.writeMem(0x4964, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc7ec, gbc.sp());
        EXPECT(0x4966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 017E
        gbc.setState(0x5bfd, 0x70de, 0x1820, 0x4170, 0x3e21, 0x4018, 0x0, 0x0);
        gbc.writeMem(0x5bfd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x70de, gbc.sp());
        EXPECT(0x5bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 017F
        gbc.setState(0x3b46, 0xb215, 0x7160, 0xba2c, 0x36dc, 0xb539, 0x1, 0x0);
        gbc.writeMem(0x3b46, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb215, gbc.sp());
        EXPECT(0x3b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0180
        gbc.setState(0x7978, 0x87aa, 0x5be0, 0x2ff1, 0x2911, 0xcea7, 0x1, 0x1);
        gbc.writeMem(0x7978, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x87aa, gbc.sp());
        EXPECT(0x797a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0181
        gbc.setState(0x11f6, 0x88ab, 0xee10, 0xa317, 0x371, 0x3211, 0x0, 0x0);
        gbc.writeMem(0x11f6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x88ab, gbc.sp());
        EXPECT(0x11f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0182
        gbc.setState(0xd80f, 0x2b5c, 0x250, 0x25b5, 0xa762, 0xd945, 0x0, 0x1);
        gbc.writeMem(0xd80f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2b5c, gbc.sp());
        EXPECT(0xd811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd80f));
        EXPECT(0xd8, gbc.readMem(0xd810));
        // CB D8 0183
        gbc.setState(0xed02, 0x7833, 0xc5b0, 0x5ba, 0x6e6b, 0x1b71, 0x1, 0x1);
        gbc.writeMem(0xed02, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7833, gbc.sp());
        EXPECT(0xed04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed02));
        EXPECT(0xd8, gbc.readMem(0xed03));
        // CB D8 0184
        gbc.setState(0x9b2d, 0x48df, 0x25a0, 0x3d84, 0x7a66, 0x996f, 0x1, 0x1);
        gbc.writeMem(0x9b2d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x48df, gbc.sp());
        EXPECT(0x9b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b2d));
        EXPECT(0xd8, gbc.readMem(0x9b2e));
        // CB D8 0185
        gbc.setState(0xc550, 0x3636, 0xc4a0, 0x6be8, 0xe81c, 0x3642, 0x1, 0x0);
        gbc.writeMem(0xc550, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3636, gbc.sp());
        EXPECT(0xc552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc550));
        EXPECT(0xd8, gbc.readMem(0xc551));
        // CB D8 0186
        gbc.setState(0x1d59, 0xbad5, 0xc490, 0xee5c, 0x61f4, 0x110, 0x1, 0x0);
        gbc.writeMem(0x1d59, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbad5, gbc.sp());
        EXPECT(0x1d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0187
        gbc.setState(0x1312, 0xd0aa, 0xd60, 0x213c, 0x210e, 0x933, 0x0, 0x0);
        gbc.writeMem(0x1312, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd0aa, gbc.sp());
        EXPECT(0x1314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0188
        gbc.setState(0x7fba, 0x540d, 0xa8d0, 0x6d95, 0xc5f6, 0x3ec3, 0x1, 0x0);
        gbc.writeMem(0x7fba, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x540d, gbc.sp());
        EXPECT(0x7fbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0189
        gbc.setState(0xee90, 0x65d6, 0x4aa0, 0xcf49, 0x3478, 0x575f, 0x0, 0x0);
        gbc.writeMem(0xee90, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x65d6, gbc.sp());
        EXPECT(0xee92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee90));
        EXPECT(0xd8, gbc.readMem(0xee91));
        // CB D8 018A
        gbc.setState(0xd7b6, 0xa4b, 0xf6c0, 0xdcd1, 0xa15, 0x6034, 0x0, 0x1);
        gbc.writeMem(0xd7b6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa4b, gbc.sp());
        EXPECT(0xd7b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b6));
        EXPECT(0xd8, gbc.readMem(0xd7b7));
        // CB D8 018C
        gbc.setState(0x453e, 0x202a, 0x7e10, 0x992f, 0x464e, 0xe37, 0x1, 0x0);
        gbc.writeMem(0x453e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x202a, gbc.sp());
        EXPECT(0x4540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 018D
        gbc.setState(0xb931, 0xf10, 0xc1c0, 0xc5c5, 0xd06f, 0x469c, 0x0, 0x1);
        gbc.writeMem(0xb931, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf10, gbc.sp());
        EXPECT(0xb933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb931));
        EXPECT(0xd8, gbc.readMem(0xb932));
        // CB D8 018E
        gbc.setState(0x9afa, 0xda5c, 0xc6e0, 0x1a73, 0x7537, 0x39f0, 0x0, 0x0);
        gbc.writeMem(0x9afa, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xda5c, gbc.sp());
        EXPECT(0x9afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9afa));
        EXPECT(0xd8, gbc.readMem(0x9afb));
        // CB D8 018F
        gbc.setState(0xe9ca, 0x63cb, 0xbc70, 0xecc0, 0x2465, 0xc55c, 0x1, 0x0);
        gbc.writeMem(0xe9ca, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x63cb, gbc.sp());
        EXPECT(0xe9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ca));
        EXPECT(0xd8, gbc.readMem(0xe9cb));
        // CB D8 0190
        gbc.setState(0xa94a, 0x1ee8, 0xe70, 0xccf0, 0xf03d, 0xedd2, 0x1, 0x0);
        gbc.writeMem(0xa94a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1ee8, gbc.sp());
        EXPECT(0xa94c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa94a));
        EXPECT(0xd8, gbc.readMem(0xa94b));
        // CB D8 0191
        gbc.setState(0x92bd, 0xe9c3, 0xdd80, 0x1ac1, 0xe8e2, 0xa1bd, 0x1, 0x1);
        gbc.writeMem(0x92bd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe9c3, gbc.sp());
        EXPECT(0x92bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92bd));
        EXPECT(0xd8, gbc.readMem(0x92be));
        // CB D8 0192
        gbc.setState(0x6c6e, 0x84d0, 0x5620, 0xe34d, 0x6c53, 0x2c78, 0x1, 0x1);
        gbc.writeMem(0x6c6e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x84d0, gbc.sp());
        EXPECT(0x6c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0193
        gbc.setState(0x6739, 0xa938, 0x2e40, 0x9014, 0x60ff, 0x99d4, 0x1, 0x0);
        gbc.writeMem(0x6739, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa938, gbc.sp());
        EXPECT(0x673b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0194
        gbc.setState(0xb1fc, 0xf926, 0xf3a0, 0x8b3d, 0x71b, 0xcdcc, 0x0, 0x0);
        gbc.writeMem(0xb1fc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf926, gbc.sp());
        EXPECT(0xb1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1fc));
        EXPECT(0xd8, gbc.readMem(0xb1fd));
        // CB D8 0195
        gbc.setState(0xc2af, 0xd400, 0x1a80, 0x8d9, 0xe8d3, 0x62f8, 0x1, 0x1);
        gbc.writeMem(0xc2af, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd400, gbc.sp());
        EXPECT(0xc2b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2af));
        EXPECT(0xd8, gbc.readMem(0xc2b0));
        // CB D8 0196
        gbc.setState(0x5bea, 0x921a, 0x3d70, 0xcc49, 0xcb07, 0xfe81, 0x1, 0x1);
        gbc.writeMem(0x5bea, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x921a, gbc.sp());
        EXPECT(0x5bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0197
        gbc.setState(0xc900, 0xb376, 0xf710, 0xb87f, 0x12fe, 0x70ca, 0x0, 0x0);
        gbc.writeMem(0xc900, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb376, gbc.sp());
        EXPECT(0xc902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc900));
        EXPECT(0xd8, gbc.readMem(0xc901));
        // CB D8 0198
        gbc.setState(0x1f71, 0x6119, 0x940, 0x1531, 0x7093, 0xc443, 0x1, 0x1);
        gbc.writeMem(0x1f71, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6119, gbc.sp());
        EXPECT(0x1f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0199
        gbc.setState(0x94b1, 0x212c, 0x2b60, 0x278, 0x9e79, 0x1d89, 0x1, 0x1);
        gbc.writeMem(0x94b1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x212c, gbc.sp());
        EXPECT(0x94b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94b1));
        EXPECT(0xd8, gbc.readMem(0x94b2));
        // CB D8 019A
        gbc.setState(0x2871, 0xde17, 0x79c0, 0x3091, 0x11a5, 0xa544, 0x1, 0x1);
        gbc.writeMem(0x2871, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xde17, gbc.sp());
        EXPECT(0x2873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 019B
        gbc.setState(0x293b, 0x35f4, 0x6eb0, 0x5b3e, 0xf398, 0xfe25, 0x1, 0x0);
        gbc.writeMem(0x293b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x35f4, gbc.sp());
        EXPECT(0x293d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 019C
        gbc.setState(0xcdac, 0xfc06, 0x6060, 0x4d23, 0xeaf3, 0x271f, 0x1, 0x0);
        gbc.writeMem(0xcdac, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfc06, gbc.sp());
        EXPECT(0xcdae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdac));
        EXPECT(0xd8, gbc.readMem(0xcdad));
        // CB D8 019D
        gbc.setState(0x9995, 0xb64b, 0xb7b0, 0x756c, 0x12e7, 0x6ed2, 0x0, 0x0);
        gbc.writeMem(0x9995, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb64b, gbc.sp());
        EXPECT(0x9997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9995));
        EXPECT(0xd8, gbc.readMem(0x9996));
        // CB D8 019E
        gbc.setState(0x7bbd, 0x51e9, 0x6800, 0xbcaf, 0xcc5, 0x2f82, 0x1, 0x0);
        gbc.writeMem(0x7bbd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x51e9, gbc.sp());
        EXPECT(0x7bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 019F
        gbc.setState(0xdab, 0xa0ec, 0xc460, 0x4258, 0x5701, 0xfe53, 0x0, 0x0);
        gbc.writeMem(0xdab, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa0ec, gbc.sp());
        EXPECT(0xdad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01A0
        gbc.setState(0x9a3b, 0xe365, 0x2a90, 0xa3aa, 0xec24, 0xf2c, 0x0, 0x1);
        gbc.writeMem(0x9a3b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe365, gbc.sp());
        EXPECT(0x9a3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a3b));
        EXPECT(0xd8, gbc.readMem(0x9a3c));
        // CB D8 01A1
        gbc.setState(0xf82, 0xe150, 0x40d0, 0x3423, 0xdfc6, 0xc89, 0x1, 0x1);
        gbc.writeMem(0xf82, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe150, gbc.sp());
        EXPECT(0xf84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01A2
        gbc.setState(0x8b3, 0xf20d, 0x7b90, 0x27ef, 0xef10, 0x7ed4, 0x1, 0x1);
        gbc.writeMem(0x8b3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf20d, gbc.sp());
        EXPECT(0x8b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01A3
        gbc.setState(0x619c, 0x437c, 0x5be0, 0xdbb1, 0xfc38, 0x72be, 0x1, 0x0);
        gbc.writeMem(0x619c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x437c, gbc.sp());
        EXPECT(0x619e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01A4
        gbc.setState(0xbfd1, 0x522b, 0x5c60, 0x2c4, 0xcd4d, 0x4992, 0x1, 0x1);
        gbc.writeMem(0xbfd1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x522b, gbc.sp());
        EXPECT(0xbfd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd1));
        EXPECT(0xd8, gbc.readMem(0xbfd2));
        // CB D8 01A5
        gbc.setState(0x1ef2, 0x9003, 0x3770, 0xd3fb, 0xa5d6, 0xb6de, 0x0, 0x0);
        gbc.writeMem(0x1ef2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9003, gbc.sp());
        EXPECT(0x1ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01A6
        gbc.setState(0xc78c, 0xba79, 0x7830, 0x3f5d, 0x145e, 0xe08e, 0x0, 0x0);
        gbc.writeMem(0xc78c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xba79, gbc.sp());
        EXPECT(0xc78e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc78c));
        EXPECT(0xd8, gbc.readMem(0xc78d));
        // CB D8 01A7
        gbc.setState(0x4155, 0xcf92, 0x8a20, 0xfe12, 0xd3bd, 0x9b13, 0x0, 0x0);
        gbc.writeMem(0x4155, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcf92, gbc.sp());
        EXPECT(0x4157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01AA
        gbc.setState(0x7533, 0xb7c7, 0xa270, 0xce5d, 0x2952, 0xcf5e, 0x1, 0x1);
        gbc.writeMem(0x7533, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb7c7, gbc.sp());
        EXPECT(0x7535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01AB
        gbc.setState(0x4d1b, 0x3187, 0x1c60, 0xcdba, 0x2c32, 0x3150, 0x0, 0x0);
        gbc.writeMem(0x4d1b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3187, gbc.sp());
        EXPECT(0x4d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01AC
        gbc.setState(0xb3f0, 0xcb17, 0x4230, 0x6561, 0x3d73, 0x38b, 0x1, 0x1);
        gbc.writeMem(0xb3f0, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcb17, gbc.sp());
        EXPECT(0xb3f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f0));
        EXPECT(0xd8, gbc.readMem(0xb3f1));
        // CB D8 01AD
        gbc.setState(0xcb9f, 0x6fd9, 0x1340, 0xd51a, 0xb3ec, 0x243a, 0x1, 0x1);
        gbc.writeMem(0xcb9f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6fd9, gbc.sp());
        EXPECT(0xcba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9f));
        EXPECT(0xd8, gbc.readMem(0xcba0));
        // CB D8 01AE
        gbc.setState(0x5f3c, 0x8f66, 0x3e60, 0xcfc2, 0x51da, 0x5206, 0x0, 0x1);
        gbc.writeMem(0x5f3c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8f66, gbc.sp());
        EXPECT(0x5f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01AF
        gbc.setState(0x1045, 0xa03, 0xdd30, 0xdca9, 0xb1a4, 0x2a1a, 0x1, 0x0);
        gbc.writeMem(0x1045, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa03, gbc.sp());
        EXPECT(0x1047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01B0
        gbc.setState(0x3fab, 0x5f8d, 0xa110, 0x2540, 0x3696, 0x6fca, 0x1, 0x0);
        gbc.writeMem(0x3fab, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5f8d, gbc.sp());
        EXPECT(0x3fad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01B1
        gbc.setState(0x6fee, 0xf35f, 0xe220, 0x390a, 0x4e5b, 0xc912, 0x1, 0x0);
        gbc.writeMem(0x6fee, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf35f, gbc.sp());
        EXPECT(0x6ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01B2
        gbc.setState(0x5b5d, 0xf5fb, 0xbc50, 0xd416, 0x17a1, 0xdc3f, 0x0, 0x1);
        gbc.writeMem(0x5b5d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf5fb, gbc.sp());
        EXPECT(0x5b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01B3
        gbc.setState(0x165e, 0x88d, 0xd910, 0x5759, 0xb94c, 0xba2a, 0x1, 0x0);
        gbc.writeMem(0x165e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x88d, gbc.sp());
        EXPECT(0x1660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01B4
        gbc.setState(0x2280, 0x5de5, 0x3290, 0xb9c2, 0xd592, 0xf885, 0x0, 0x1);
        gbc.writeMem(0x2280, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5de5, gbc.sp());
        EXPECT(0x2282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01B5
        gbc.setState(0x7ce4, 0x90b9, 0x31c0, 0x14a8, 0xaad, 0x3cfd, 0x0, 0x0);
        gbc.writeMem(0x7ce4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x90b9, gbc.sp());
        EXPECT(0x7ce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01B6
        gbc.setState(0x3f1a, 0xefd, 0xde60, 0x295c, 0x855c, 0xeb96, 0x1, 0x0);
        gbc.writeMem(0x3f1a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xefd, gbc.sp());
        EXPECT(0x3f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01B7
        gbc.setState(0x53a6, 0x4f07, 0x4190, 0xe822, 0x38ab, 0x731e, 0x0, 0x0);
        gbc.writeMem(0x53a6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4f07, gbc.sp());
        EXPECT(0x53a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01B8
        gbc.setState(0x694e, 0x8365, 0x2f30, 0x102c, 0x41d5, 0xbea5, 0x1, 0x1);
        gbc.writeMem(0x694e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8365, gbc.sp());
        EXPECT(0x6950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01B9
        gbc.setState(0xe5e4, 0x3bb2, 0x97c0, 0x976e, 0x5b0f, 0x90c0, 0x0, 0x0);
        gbc.writeMem(0xe5e4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3bb2, gbc.sp());
        EXPECT(0xe5e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e4));
        EXPECT(0xd8, gbc.readMem(0xe5e5));
        // CB D8 01BA
        gbc.setState(0x2c37, 0x257c, 0x90c0, 0x105, 0xcda, 0x5eab, 0x0, 0x0);
        gbc.writeMem(0x2c37, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x257c, gbc.sp());
        EXPECT(0x2c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01BB
        gbc.setState(0x3e61, 0xf1fd, 0xc090, 0x4c1e, 0x49be, 0x1fa6, 0x0, 0x1);
        gbc.writeMem(0x3e61, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf1fd, gbc.sp());
        EXPECT(0x3e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01BC
        gbc.setState(0xce2, 0x3ed9, 0xcbc0, 0x32b6, 0x9bc3, 0x7317, 0x1, 0x0);
        gbc.writeMem(0xce2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3ed9, gbc.sp());
        EXPECT(0xce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01BD
        gbc.setState(0x7c9d, 0xdb64, 0x6180, 0x3e44, 0x95bd, 0x8726, 0x1, 0x1);
        gbc.writeMem(0x7c9d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xdb64, gbc.sp());
        EXPECT(0x7c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01BE
        gbc.setState(0x783c, 0xc2e7, 0x1f40, 0x8f4b, 0xef87, 0xae66, 0x1, 0x0);
        gbc.writeMem(0x783c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc2e7, gbc.sp());
        EXPECT(0x783e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01BF
        gbc.setState(0x31e1, 0xaa0d, 0x72a0, 0x891d, 0xd44, 0x4e06, 0x1, 0x0);
        gbc.writeMem(0x31e1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xaa0d, gbc.sp());
        EXPECT(0x31e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01C0
        gbc.setState(0xdb60, 0x4981, 0xc860, 0x8ba2, 0x13d3, 0x30d6, 0x1, 0x0);
        gbc.writeMem(0xdb60, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4981, gbc.sp());
        EXPECT(0xdb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb60));
        EXPECT(0xd8, gbc.readMem(0xdb61));
        // CB D8 01C1
        gbc.setState(0x289a, 0x346b, 0x7850, 0xbc53, 0xfff3, 0x30a6, 0x0, 0x0);
        gbc.writeMem(0x289a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x346b, gbc.sp());
        EXPECT(0x289c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01C2
        gbc.setState(0xb267, 0xdd09, 0xd190, 0xe6ef, 0x873, 0xe66c, 0x1, 0x0);
        gbc.writeMem(0xb267, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdd09, gbc.sp());
        EXPECT(0xb269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb267));
        EXPECT(0xd8, gbc.readMem(0xb268));
        // CB D8 01C3
        gbc.setState(0xab48, 0xbda4, 0x53b0, 0xace9, 0xe0ac, 0x372c, 0x1, 0x1);
        gbc.writeMem(0xab48, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbda4, gbc.sp());
        EXPECT(0xab4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab48));
        EXPECT(0xd8, gbc.readMem(0xab49));
        // CB D8 01C4
        gbc.setState(0xccaa, 0xdc12, 0x44c0, 0x88ce, 0xe733, 0xaf07, 0x0, 0x0);
        gbc.writeMem(0xccaa, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdc12, gbc.sp());
        EXPECT(0xccac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccaa));
        EXPECT(0xd8, gbc.readMem(0xccab));
        // CB D8 01C5
        gbc.setState(0xed31, 0xc394, 0x4c40, 0xe364, 0x4d41, 0xb565, 0x1, 0x1);
        gbc.writeMem(0xed31, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc394, gbc.sp());
        EXPECT(0xed33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed31));
        EXPECT(0xd8, gbc.readMem(0xed32));
        // CB D8 01C6
        gbc.setState(0xb716, 0xb63, 0x6c30, 0xab80, 0x6c14, 0x43fb, 0x1, 0x1);
        gbc.writeMem(0xb716, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb63, gbc.sp());
        EXPECT(0xb718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb716));
        EXPECT(0xd8, gbc.readMem(0xb717));
        // CB D8 01C7
        gbc.setState(0x6a10, 0x1064, 0xf030, 0x30e9, 0x5903, 0x3b6f, 0x0, 0x0);
        gbc.writeMem(0x6a10, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1064, gbc.sp());
        EXPECT(0x6a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01C8
        gbc.setState(0x98e4, 0x9052, 0xa520, 0x3765, 0xef33, 0x2e5e, 0x1, 0x0);
        gbc.writeMem(0x98e4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9052, gbc.sp());
        EXPECT(0x98e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e4));
        EXPECT(0xd8, gbc.readMem(0x98e5));
        // CB D8 01C9
        gbc.setState(0xb4e1, 0xc3bc, 0xe260, 0x3a9, 0x7d26, 0xce5a, 0x1, 0x0);
        gbc.writeMem(0xb4e1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc3bc, gbc.sp());
        EXPECT(0xb4e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e1));
        EXPECT(0xd8, gbc.readMem(0xb4e2));
        // CB D8 01CA
        gbc.setState(0x4ffa, 0xc723, 0xf450, 0x9f2e, 0xc276, 0x5ec8, 0x0, 0x0);
        gbc.writeMem(0x4ffa, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc723, gbc.sp());
        EXPECT(0x4ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01CB
        gbc.setState(0x3fe, 0xd768, 0x980, 0xb0cf, 0xf18f, 0x22b1, 0x1, 0x1);
        gbc.writeMem(0x3fe, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd768, gbc.sp());
        EXPECT(0x400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01CC
        gbc.setState(0x64c5, 0xa8c1, 0x9d90, 0xb0ad, 0xee77, 0x3090, 0x0, 0x1);
        gbc.writeMem(0x64c5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa8c1, gbc.sp());
        EXPECT(0x64c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01CD
        gbc.setState(0x9603, 0x3b82, 0xbf80, 0x2ff3, 0x17a6, 0x1e4c, 0x1, 0x0);
        gbc.writeMem(0x9603, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3b82, gbc.sp());
        EXPECT(0x9605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9603));
        EXPECT(0xd8, gbc.readMem(0x9604));
        // CB D8 01CE
        gbc.setState(0xe8dd, 0xc346, 0xf240, 0xf89e, 0xbe4d, 0x36c, 0x0, 0x1);
        gbc.writeMem(0xe8dd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc346, gbc.sp());
        EXPECT(0xe8df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8dd));
        EXPECT(0xd8, gbc.readMem(0xe8de));
        // CB D8 01CF
        gbc.setState(0x75f8, 0x35d8, 0x6c00, 0xe7ac, 0x8a2e, 0x9c36, 0x1, 0x1);
        gbc.writeMem(0x75f8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x35d8, gbc.sp());
        EXPECT(0x75fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01D0
        gbc.setState(0x73c8, 0x6c78, 0x17a0, 0x952b, 0xfb44, 0x9368, 0x1, 0x1);
        gbc.writeMem(0x73c8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6c78, gbc.sp());
        EXPECT(0x73ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01D1
        gbc.setState(0x346e, 0x2757, 0xb7d0, 0xaaa4, 0x3998, 0x8bee, 0x1, 0x0);
        gbc.writeMem(0x346e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2757, gbc.sp());
        EXPECT(0x3470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01D4
        gbc.setState(0x292e, 0x5878, 0x9710, 0x479f, 0x8ee6, 0x1d5e, 0x1, 0x1);
        gbc.writeMem(0x292e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5878, gbc.sp());
        EXPECT(0x2930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01D6
        gbc.setState(0x7e3a, 0xe791, 0x1500, 0x2112, 0x9aa5, 0xd00e, 0x1, 0x1);
        gbc.writeMem(0x7e3a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe791, gbc.sp());
        EXPECT(0x7e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01D7
        gbc.setState(0x6de8, 0x12ec, 0x6350, 0x46ae, 0xec0f, 0x21bc, 0x0, 0x0);
        gbc.writeMem(0x6de8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x12ec, gbc.sp());
        EXPECT(0x6dea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01D8
        gbc.setState(0x21a7, 0x62b7, 0xde50, 0x385d, 0x2f55, 0xa0c3, 0x0, 0x0);
        gbc.writeMem(0x21a7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x62b7, gbc.sp());
        EXPECT(0x21a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01D9
        gbc.setState(0x4a3, 0xc18d, 0x1fd0, 0xc97e, 0x864e, 0xf1e0, 0x1, 0x0);
        gbc.writeMem(0x4a3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc18d, gbc.sp());
        EXPECT(0x4a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01DA
        gbc.setState(0x93ba, 0x567b, 0x4360, 0xd42, 0x81b2, 0xb149, 0x1, 0x0);
        gbc.writeMem(0x93ba, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x567b, gbc.sp());
        EXPECT(0x93bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ba));
        EXPECT(0xd8, gbc.readMem(0x93bb));
        // CB D8 01DC
        gbc.setState(0x78, 0xdf53, 0xcbc0, 0x9722, 0xbcef, 0xb9e6, 0x0, 0x0);
        gbc.writeMem(0x78, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdf53, gbc.sp());
        EXPECT(0x7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01DD
        gbc.setState(0x7eb2, 0xcea8, 0x4ac0, 0x5f4f, 0xcf59, 0xb30d, 0x0, 0x1);
        gbc.writeMem(0x7eb2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcea8, gbc.sp());
        EXPECT(0x7eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01DE
        gbc.setState(0x6bed, 0xcb9c, 0x3130, 0xe920, 0xea6c, 0x5e9d, 0x0, 0x1);
        gbc.writeMem(0x6bed, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcb9c, gbc.sp());
        EXPECT(0x6bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01DF
        gbc.setState(0x83d4, 0xd4c2, 0x7c90, 0xb6be, 0xb5d5, 0xe147, 0x0, 0x1);
        gbc.writeMem(0x83d4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd4c2, gbc.sp());
        EXPECT(0x83d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d4));
        EXPECT(0xd8, gbc.readMem(0x83d5));
        // CB D8 01E0
        gbc.setState(0x1140, 0x6f26, 0xf0a0, 0x5dd9, 0x9325, 0x7ec3, 0x1, 0x1);
        gbc.writeMem(0x1140, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6f26, gbc.sp());
        EXPECT(0x1142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01E1
        gbc.setState(0x98b2, 0x7b29, 0xdb00, 0x1e24, 0x31e4, 0xef4b, 0x1, 0x0);
        gbc.writeMem(0x98b2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7b29, gbc.sp());
        EXPECT(0x98b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b2));
        EXPECT(0xd8, gbc.readMem(0x98b3));
        // CB D8 01E2
        gbc.setState(0xc8aa, 0x75a9, 0x7790, 0x4b70, 0xe42c, 0xff2c, 0x1, 0x1);
        gbc.writeMem(0xc8aa, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x75a9, gbc.sp());
        EXPECT(0xc8ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8aa));
        EXPECT(0xd8, gbc.readMem(0xc8ab));
        // CB D8 01E3
        gbc.setState(0x4e5c, 0x6232, 0x8d90, 0x1c68, 0xffa, 0x1e87, 0x1, 0x0);
        gbc.writeMem(0x4e5c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6232, gbc.sp());
        EXPECT(0x4e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01E4
        gbc.setState(0x1dd5, 0x198d, 0xc050, 0x7368, 0x9a5a, 0xd180, 0x0, 0x0);
        gbc.writeMem(0x1dd5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x198d, gbc.sp());
        EXPECT(0x1dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01E5
        gbc.setState(0x4838, 0xc063, 0x3780, 0x7aeb, 0x7092, 0xdf2a, 0x1, 0x1);
        gbc.writeMem(0x4838, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc063, gbc.sp());
        EXPECT(0x483a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01E6
        gbc.setState(0xb135, 0x1855, 0x5ee0, 0xf1c3, 0x9f38, 0xb2c8, 0x1, 0x0);
        gbc.writeMem(0xb135, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1855, gbc.sp());
        EXPECT(0xb137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb135));
        EXPECT(0xd8, gbc.readMem(0xb136));
        // CB D8 01E7
        gbc.setState(0x962f, 0xb72d, 0x6580, 0xadce, 0x4b29, 0xce8d, 0x0, 0x1);
        gbc.writeMem(0x962f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb72d, gbc.sp());
        EXPECT(0x9631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x962f));
        EXPECT(0xd8, gbc.readMem(0x9630));
        // CB D8 01E8
        gbc.setState(0x456b, 0xe373, 0x8390, 0x7a60, 0x4c92, 0xa4c, 0x0, 0x1);
        gbc.writeMem(0x456b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe373, gbc.sp());
        EXPECT(0x456d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01E9
        gbc.setState(0xcf51, 0xc1c8, 0x17a0, 0x4254, 0xa947, 0x11f1, 0x1, 0x1);
        gbc.writeMem(0xcf51, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc1c8, gbc.sp());
        EXPECT(0xcf53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf51));
        EXPECT(0xd8, gbc.readMem(0xcf52));
        // CB D8 01EA
        gbc.setState(0xb344, 0xa92c, 0x9980, 0x8d2, 0x2646, 0xa7b2, 0x0, 0x1);
        gbc.writeMem(0xb344, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa92c, gbc.sp());
        EXPECT(0xb346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb344));
        EXPECT(0xd8, gbc.readMem(0xb345));
        // CB D8 01EB
        gbc.setState(0x9654, 0xf8fc, 0x670, 0x7a2a, 0x1b0a, 0x38f7, 0x1, 0x0);
        gbc.writeMem(0x9654, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf8fc, gbc.sp());
        EXPECT(0x9656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9654));
        EXPECT(0xd8, gbc.readMem(0x9655));
        // CB D8 01EC
        gbc.setState(0xefdc, 0xa021, 0x5a90, 0xc3e9, 0x4b52, 0x88a8, 0x1, 0x0);
        gbc.writeMem(0xefdc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa021, gbc.sp());
        EXPECT(0xefde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefdc));
        EXPECT(0xd8, gbc.readMem(0xefdd));
        // CB D8 01ED
        gbc.setState(0x61f2, 0xe4da, 0x11c0, 0x6058, 0x295e, 0xc67a, 0x1, 0x1);
        gbc.writeMem(0x61f2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe4da, gbc.sp());
        EXPECT(0x61f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01EE
        gbc.setState(0x7aaa, 0x65e0, 0xa420, 0x276e, 0xa7c1, 0xe00, 0x1, 0x1);
        gbc.writeMem(0x7aaa, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x65e0, gbc.sp());
        EXPECT(0x7aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01EF
        gbc.setState(0xb0fe, 0xb540, 0xeb20, 0x186d, 0xe0da, 0x424c, 0x1, 0x0);
        gbc.writeMem(0xb0fe, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb540, gbc.sp());
        EXPECT(0xb100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0fe));
        EXPECT(0xd8, gbc.readMem(0xb0ff));
        // CB D8 01F0
        gbc.setState(0x51ec, 0x2edf, 0xa420, 0x6573, 0x6aa, 0xdbb1, 0x0, 0x0);
        gbc.writeMem(0x51ec, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2edf, gbc.sp());
        EXPECT(0x51ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01F1
        gbc.setState(0x3b29, 0x7da2, 0x13d0, 0xcf67, 0x32ee, 0xc191, 0x0, 0x0);
        gbc.writeMem(0x3b29, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7da2, gbc.sp());
        EXPECT(0x3b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01F2
        gbc.setState(0x5f4e, 0xcee7, 0xcc30, 0x8c6a, 0x3753, 0xcc3e, 0x1, 0x0);
        gbc.writeMem(0x5f4e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcee7, gbc.sp());
        EXPECT(0x5f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01F3
        gbc.setState(0x747e, 0xa37, 0xc1d0, 0x3174, 0x80e9, 0x41c8, 0x0, 0x1);
        gbc.writeMem(0x747e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa37, gbc.sp());
        EXPECT(0x7480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01F4
        gbc.setState(0x4744, 0xd746, 0x6450, 0x932d, 0x56b3, 0x12e4, 0x1, 0x0);
        gbc.writeMem(0x4744, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd746, gbc.sp());
        EXPECT(0x4746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01F5
        gbc.setState(0x63f9, 0xf060, 0xe2e0, 0x52c4, 0x1452, 0x405f, 0x1, 0x0);
        gbc.writeMem(0x63f9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf060, gbc.sp());
        EXPECT(0x63fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01F6
        gbc.setState(0x1568, 0x981e, 0x9c60, 0xefa8, 0x357, 0x90c4, 0x1, 0x0);
        gbc.writeMem(0x1568, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x981e, gbc.sp());
        EXPECT(0x156a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01F7
        gbc.setState(0x1b92, 0x27fc, 0xf810, 0x5414, 0x1ccc, 0x7c94, 0x0, 0x0);
        gbc.writeMem(0x1b92, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x27fc, gbc.sp());
        EXPECT(0x1b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 01F8
        gbc.setState(0xcb70, 0xdc47, 0x3510, 0x413a, 0xfbe9, 0xc9bf, 0x0, 0x1);
        gbc.writeMem(0xcb70, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdc47, gbc.sp());
        EXPECT(0xcb72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb70));
        EXPECT(0xd8, gbc.readMem(0xcb71));
        // CB D8 01F9
        gbc.setState(0x913a, 0x9f57, 0x4930, 0x3096, 0x824b, 0x6cbf, 0x0, 0x0);
        gbc.writeMem(0x913a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9f57, gbc.sp());
        EXPECT(0x913c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x913a));
        EXPECT(0xd8, gbc.readMem(0x913b));
        // CB D8 01FA
        gbc.setState(0x5e62, 0x6e35, 0xc80, 0x64ff, 0x370b, 0x8edd, 0x0, 0x0);
        gbc.writeMem(0x5e62, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6e35, gbc.sp());
        EXPECT(0x5e64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01FB
        gbc.setState(0x4b8c, 0xa021, 0x7f00, 0x4f4a, 0x66fb, 0x6ea5, 0x0, 0x1);
        gbc.writeMem(0x4b8c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa021, gbc.sp());
        EXPECT(0x4b8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01FC
        gbc.setState(0xbde, 0x79c2, 0x1d60, 0x70ec, 0xf1d8, 0x445a, 0x0, 0x1);
        gbc.writeMem(0xbde, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x79c2, gbc.sp());
        EXPECT(0xbe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 01FD
        gbc.setState(0x97ea, 0xe64d, 0xb90, 0x490b, 0x10b, 0x9ed1, 0x1, 0x0);
        gbc.writeMem(0x97ea, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe64d, gbc.sp());
        EXPECT(0x97ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ea));
        EXPECT(0xd8, gbc.readMem(0x97eb));
        // CB D8 01FE
        gbc.setState(0xbe45, 0xddfb, 0x3580, 0x692f, 0xeda2, 0x7398, 0x0, 0x0);
        gbc.writeMem(0xbe45, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xddfb, gbc.sp());
        EXPECT(0xbe47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe45));
        EXPECT(0xd8, gbc.readMem(0xbe46));
        // CB D8 01FF
        gbc.setState(0x6629, 0x9ca0, 0xd0e0, 0x5fd1, 0xa410, 0x6132, 0x1, 0x0);
        gbc.writeMem(0x6629, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9ca0, gbc.sp());
        EXPECT(0x662b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0200
        gbc.setState(0x134, 0x600b, 0xbf80, 0x528d, 0x7159, 0x92c0, 0x1, 0x0);
        gbc.writeMem(0x134, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x600b, gbc.sp());
        EXPECT(0x136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0201
        gbc.setState(0xf34, 0xdc84, 0x9280, 0x7373, 0x40ff, 0x9bd0, 0x0, 0x1);
        gbc.writeMem(0xf34, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xdc84, gbc.sp());
        EXPECT(0xf36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0202
        gbc.setState(0xc8ec, 0x8a2f, 0xc340, 0x43db, 0x250e, 0xdba6, 0x0, 0x0);
        gbc.writeMem(0xc8ec, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8a2f, gbc.sp());
        EXPECT(0xc8ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ec));
        EXPECT(0xd8, gbc.readMem(0xc8ed));
        // CB D8 0203
        gbc.setState(0x9e17, 0xd68c, 0xe530, 0x246d, 0x144a, 0x3ed8, 0x0, 0x1);
        gbc.writeMem(0x9e17, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd68c, gbc.sp());
        EXPECT(0x9e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e17));
        EXPECT(0xd8, gbc.readMem(0x9e18));
        // CB D8 0204
        gbc.setState(0x4ef5, 0x8d02, 0x6390, 0x2746, 0x718c, 0x83e7, 0x0, 0x0);
        gbc.writeMem(0x4ef5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8d02, gbc.sp());
        EXPECT(0x4ef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0205
        gbc.setState(0x8744, 0xd355, 0xaf00, 0xfc27, 0xd47a, 0x3cca, 0x1, 0x1);
        gbc.writeMem(0x8744, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd355, gbc.sp());
        EXPECT(0x8746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8744));
        EXPECT(0xd8, gbc.readMem(0x8745));
        // CB D8 0206
        gbc.setState(0xe478, 0x8003, 0xff60, 0x31f3, 0x39fa, 0xad23, 0x0, 0x0);
        gbc.writeMem(0xe478, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8003, gbc.sp());
        EXPECT(0xe47a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe478));
        EXPECT(0xd8, gbc.readMem(0xe479));
        // CB D8 0207
        gbc.setState(0x450b, 0xdc26, 0xeb90, 0x9743, 0x5c62, 0xbf16, 0x0, 0x1);
        gbc.writeMem(0x450b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xdc26, gbc.sp());
        EXPECT(0x450d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0208
        gbc.setState(0x7a24, 0x8f66, 0xe070, 0xac53, 0x6d89, 0xdc80, 0x0, 0x1);
        gbc.writeMem(0x7a24, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8f66, gbc.sp());
        EXPECT(0x7a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0209
        gbc.setState(0x91a3, 0xfce7, 0xd870, 0x157c, 0x58f4, 0x32d4, 0x1, 0x1);
        gbc.writeMem(0x91a3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfce7, gbc.sp());
        EXPECT(0x91a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a3));
        EXPECT(0xd8, gbc.readMem(0x91a4));
        // CB D8 020A
        gbc.setState(0xc10e, 0xd206, 0x62f0, 0xb622, 0x25bb, 0x71e2, 0x0, 0x0);
        gbc.writeMem(0xc10e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd206, gbc.sp());
        EXPECT(0xc110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc10e));
        EXPECT(0xd8, gbc.readMem(0xc10f));
        // CB D8 020B
        gbc.setState(0xd836, 0x90ba, 0xf550, 0x4b4a, 0xcb74, 0xb13f, 0x0, 0x0);
        gbc.writeMem(0xd836, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x90ba, gbc.sp());
        EXPECT(0xd838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd836));
        EXPECT(0xd8, gbc.readMem(0xd837));
        // CB D8 020C
        gbc.setState(0xda56, 0xaf6, 0xf680, 0x3021, 0x43f4, 0x30fa, 0x0, 0x1);
        gbc.writeMem(0xda56, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xaf6, gbc.sp());
        EXPECT(0xda58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda56));
        EXPECT(0xd8, gbc.readMem(0xda57));
        // CB D8 020D
        gbc.setState(0x714a, 0x5b00, 0x80d0, 0x534d, 0x45c8, 0xf585, 0x1, 0x1);
        gbc.writeMem(0x714a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5b00, gbc.sp());
        EXPECT(0x714c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 020E
        gbc.setState(0x799f, 0x8379, 0x1d30, 0x434a, 0xba5, 0x29c8, 0x1, 0x1);
        gbc.writeMem(0x799f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8379, gbc.sp());
        EXPECT(0x79a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 020F
        gbc.setState(0xbce6, 0xdb40, 0x21b0, 0x23b, 0x80a5, 0x1217, 0x1, 0x0);
        gbc.writeMem(0xbce6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdb40, gbc.sp());
        EXPECT(0xbce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbce6));
        EXPECT(0xd8, gbc.readMem(0xbce7));
        // CB D8 0210
        gbc.setState(0xd9b7, 0x3873, 0xed30, 0x9bce, 0xa53b, 0x909a, 0x0, 0x0);
        gbc.writeMem(0xd9b7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3873, gbc.sp());
        EXPECT(0xd9b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9b7));
        EXPECT(0xd8, gbc.readMem(0xd9b8));
        // CB D8 0211
        gbc.setState(0xab6c, 0x98ba, 0xd500, 0xff95, 0x7de2, 0xe245, 0x1, 0x1);
        gbc.writeMem(0xab6c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x98ba, gbc.sp());
        EXPECT(0xab6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab6c));
        EXPECT(0xd8, gbc.readMem(0xab6d));
        // CB D8 0212
        gbc.setState(0x87a, 0xc5fa, 0x3550, 0x739, 0x1e26, 0xb798, 0x1, 0x0);
        gbc.writeMem(0x87a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc5fa, gbc.sp());
        EXPECT(0x87c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0213
        gbc.setState(0x8ed0, 0xba3f, 0x4080, 0x3368, 0x676b, 0x87e0, 0x1, 0x1);
        gbc.writeMem(0x8ed0, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xba3f, gbc.sp());
        EXPECT(0x8ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed0));
        EXPECT(0xd8, gbc.readMem(0x8ed1));
        // CB D8 0214
        gbc.setState(0x8478, 0xd835, 0x3a50, 0x5033, 0xf805, 0xd04c, 0x1, 0x1);
        gbc.writeMem(0x8478, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd835, gbc.sp());
        EXPECT(0x847a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8478));
        EXPECT(0xd8, gbc.readMem(0x8479));
        // CB D8 0215
        gbc.setState(0xcbcc, 0x72c3, 0x5a70, 0xb94c, 0x5839, 0x1d4b, 0x0, 0x0);
        gbc.writeMem(0xcbcc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x72c3, gbc.sp());
        EXPECT(0xcbce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbcc));
        EXPECT(0xd8, gbc.readMem(0xcbcd));
        // CB D8 0216
        gbc.setState(0x8356, 0x7b9f, 0xd860, 0x5d8c, 0xde7f, 0x8fb6, 0x1, 0x1);
        gbc.writeMem(0x8356, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7b9f, gbc.sp());
        EXPECT(0x8358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8356));
        EXPECT(0xd8, gbc.readMem(0x8357));
        // CB D8 0217
        gbc.setState(0x2ab8, 0xdb19, 0x650, 0x455a, 0x7296, 0x1f67, 0x1, 0x1);
        gbc.writeMem(0x2ab8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdb19, gbc.sp());
        EXPECT(0x2aba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0218
        gbc.setState(0x57ce, 0xc439, 0x25e0, 0x1a9a, 0x619a, 0xf6e3, 0x0, 0x0);
        gbc.writeMem(0x57ce, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc439, gbc.sp());
        EXPECT(0x57d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0219
        gbc.setState(0x24ba, 0x3475, 0xffe0, 0x5f8e, 0xcf86, 0xbfb5, 0x0, 0x0);
        gbc.writeMem(0x24ba, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3475, gbc.sp());
        EXPECT(0x24bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 021A
        gbc.setState(0xe0ab, 0x8c3e, 0x5260, 0xe958, 0x320a, 0x8c6f, 0x0, 0x1);
        gbc.writeMem(0xe0ab, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8c3e, gbc.sp());
        EXPECT(0xe0ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ab));
        EXPECT(0xd8, gbc.readMem(0xe0ac));
        // CB D8 021B
        gbc.setState(0xc58a, 0x4914, 0x9bd0, 0x9151, 0x5bdb, 0xd02, 0x0, 0x1);
        gbc.writeMem(0xc58a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4914, gbc.sp());
        EXPECT(0xc58c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc58a));
        EXPECT(0xd8, gbc.readMem(0xc58b));
        // CB D8 021C
        gbc.setState(0x78a1, 0x9709, 0xca90, 0x87e2, 0xeda5, 0x61e5, 0x1, 0x0);
        gbc.writeMem(0x78a1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9709, gbc.sp());
        EXPECT(0x78a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 021D
        gbc.setState(0x8580, 0x47e5, 0x3550, 0x4afc, 0x3b02, 0x455e, 0x1, 0x0);
        gbc.writeMem(0x8580, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x47e5, gbc.sp());
        EXPECT(0x8582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8580));
        EXPECT(0xd8, gbc.readMem(0x8581));
        // CB D8 021E
        gbc.setState(0xdb32, 0xf3b9, 0x5630, 0x2b83, 0xe410, 0x8b69, 0x1, 0x1);
        gbc.writeMem(0xdb32, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf3b9, gbc.sp());
        EXPECT(0xdb34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb32));
        EXPECT(0xd8, gbc.readMem(0xdb33));
        // CB D8 021F
        gbc.setState(0xcb7a, 0x3e78, 0x3b0, 0x7374, 0x2831, 0x3733, 0x0, 0x0);
        gbc.writeMem(0xcb7a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3e78, gbc.sp());
        EXPECT(0xcb7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb7a));
        EXPECT(0xd8, gbc.readMem(0xcb7b));
        // CB D8 0220
        gbc.setState(0xfba, 0xa6f, 0x1740, 0x6334, 0xdc7c, 0x7691, 0x1, 0x1);
        gbc.writeMem(0xfba, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa6f, gbc.sp());
        EXPECT(0xfbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0221
        gbc.setState(0xe815, 0x118f, 0x8d30, 0xe3ad, 0x399f, 0x6fe6, 0x1, 0x0);
        gbc.writeMem(0xe815, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x118f, gbc.sp());
        EXPECT(0xe817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe815));
        EXPECT(0xd8, gbc.readMem(0xe816));
        // CB D8 0222
        gbc.setState(0x29be, 0xf9bb, 0x3310, 0x31ad, 0x64a2, 0xf742, 0x1, 0x0);
        gbc.writeMem(0x29be, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf9bb, gbc.sp());
        EXPECT(0x29c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0223
        gbc.setState(0xddca, 0x1c9d, 0x8e10, 0x6550, 0x678f, 0xa3b0, 0x1, 0x0);
        gbc.writeMem(0xddca, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1c9d, gbc.sp());
        EXPECT(0xddcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddca));
        EXPECT(0xd8, gbc.readMem(0xddcb));
        // CB D8 0224
        gbc.setState(0x412, 0x1e14, 0x9da0, 0xf956, 0x67a6, 0xdadc, 0x0, 0x1);
        gbc.writeMem(0x412, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1e14, gbc.sp());
        EXPECT(0x414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0225
        gbc.setState(0xc07a, 0xf493, 0xcdc0, 0xfdc, 0x714f, 0xf462, 0x1, 0x0);
        gbc.writeMem(0xc07a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf493, gbc.sp());
        EXPECT(0xc07c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc07a));
        EXPECT(0xd8, gbc.readMem(0xc07b));
        // CB D8 0226
        gbc.setState(0xe90f, 0x7c7f, 0x2f00, 0xb4d7, 0xe65e, 0xcb54, 0x1, 0x1);
        gbc.writeMem(0xe90f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7c7f, gbc.sp());
        EXPECT(0xe911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe90f));
        EXPECT(0xd8, gbc.readMem(0xe910));
        // CB D8 0227
        gbc.setState(0xa2c6, 0x1e92, 0x8ed0, 0x9ab4, 0x621f, 0x1d43, 0x1, 0x0);
        gbc.writeMem(0xa2c6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1e92, gbc.sp());
        EXPECT(0xa2c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c6));
        EXPECT(0xd8, gbc.readMem(0xa2c7));
        // CB D8 0229
        gbc.setState(0xe601, 0x16c6, 0x6b50, 0x6455, 0x30cb, 0x69e0, 0x1, 0x0);
        gbc.writeMem(0xe601, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x16c6, gbc.sp());
        EXPECT(0xe603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe601));
        EXPECT(0xd8, gbc.readMem(0xe602));
        // CB D8 022A
        gbc.setState(0xace5, 0xf320, 0x3bc0, 0x7678, 0xc5d0, 0x1e06, 0x1, 0x0);
        gbc.writeMem(0xace5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf320, gbc.sp());
        EXPECT(0xace7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace5));
        EXPECT(0xd8, gbc.readMem(0xace6));
        // CB D8 022B
        gbc.setState(0x8c2b, 0xc3de, 0x2a80, 0x2ac1, 0xc69f, 0xb754, 0x0, 0x0);
        gbc.writeMem(0x8c2b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc3de, gbc.sp());
        EXPECT(0x8c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c2b));
        EXPECT(0xd8, gbc.readMem(0x8c2c));
        // CB D8 022C
        gbc.setState(0x8d76, 0x2276, 0xa2b0, 0xa79c, 0x4e5f, 0xf1e2, 0x1, 0x1);
        gbc.writeMem(0x8d76, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2276, gbc.sp());
        EXPECT(0x8d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d76));
        EXPECT(0xd8, gbc.readMem(0x8d77));
        // CB D8 022D
        gbc.setState(0x8272, 0x6900, 0xa860, 0xf1cf, 0xf893, 0x19de, 0x1, 0x1);
        gbc.writeMem(0x8272, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6900, gbc.sp());
        EXPECT(0x8274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8272));
        EXPECT(0xd8, gbc.readMem(0x8273));
        // CB D8 022E
        gbc.setState(0x42fc, 0xc73a, 0xea20, 0x8465, 0x90a5, 0x8c20, 0x0, 0x1);
        gbc.writeMem(0x42fc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc73a, gbc.sp());
        EXPECT(0x42fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 022F
        gbc.setState(0x3fb3, 0xe29b, 0x7dc0, 0xc8c8, 0xc6c1, 0x5045, 0x1, 0x1);
        gbc.writeMem(0x3fb3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe29b, gbc.sp());
        EXPECT(0x3fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0230
        gbc.setState(0x2384, 0xbad7, 0x2d40, 0x51a2, 0xe482, 0x403d, 0x0, 0x1);
        gbc.writeMem(0x2384, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbad7, gbc.sp());
        EXPECT(0x2386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0231
        gbc.setState(0xc79b, 0xb45, 0x1760, 0xb919, 0xe065, 0xd625, 0x0, 0x0);
        gbc.writeMem(0xc79b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb45, gbc.sp());
        EXPECT(0xc79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc79b));
        EXPECT(0xd8, gbc.readMem(0xc79c));
        // CB D8 0232
        gbc.setState(0x4a42, 0x5e96, 0xa3f0, 0x130b, 0xa709, 0x61d4, 0x1, 0x1);
        gbc.writeMem(0x4a42, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5e96, gbc.sp());
        EXPECT(0x4a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0233
        gbc.setState(0xcb1, 0x16a7, 0xe890, 0xc842, 0xccf7, 0xf0be, 0x1, 0x1);
        gbc.writeMem(0xcb1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x16a7, gbc.sp());
        EXPECT(0xcb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0234
        gbc.setState(0x128b, 0x5e0b, 0xdb40, 0x320, 0xb625, 0xbf0f, 0x1, 0x1);
        gbc.writeMem(0x128b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5e0b, gbc.sp());
        EXPECT(0x128d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0235
        gbc.setState(0xa848, 0x3785, 0x58e0, 0x22b2, 0x38de, 0x8f53, 0x0, 0x1);
        gbc.writeMem(0xa848, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3785, gbc.sp());
        EXPECT(0xa84a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa848));
        EXPECT(0xd8, gbc.readMem(0xa849));
        // CB D8 0236
        gbc.setState(0x73d2, 0x7f8a, 0xd7d0, 0xeef9, 0xe510, 0xb01f, 0x1, 0x0);
        gbc.writeMem(0x73d2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7f8a, gbc.sp());
        EXPECT(0x73d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0237
        gbc.setState(0x2722, 0x6ecf, 0x38f0, 0x100f, 0xa8f4, 0x35d4, 0x0, 0x0);
        gbc.writeMem(0x2722, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6ecf, gbc.sp());
        EXPECT(0x2724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0238
        gbc.setState(0xda05, 0xbec7, 0x27a0, 0xddc, 0x301f, 0x7900, 0x1, 0x0);
        gbc.writeMem(0xda05, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbec7, gbc.sp());
        EXPECT(0xda07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda05));
        EXPECT(0xd8, gbc.readMem(0xda06));
        // CB D8 023A
        gbc.setState(0xe8a9, 0x7651, 0xd650, 0x3902, 0x5fcb, 0xd09a, 0x1, 0x1);
        gbc.writeMem(0xe8a9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7651, gbc.sp());
        EXPECT(0xe8ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a9));
        EXPECT(0xd8, gbc.readMem(0xe8aa));
        // CB D8 023B
        gbc.setState(0xcad9, 0x4c23, 0x750, 0x8ca9, 0x72dc, 0x234d, 0x0, 0x0);
        gbc.writeMem(0xcad9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4c23, gbc.sp());
        EXPECT(0xcadb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad9));
        EXPECT(0xd8, gbc.readMem(0xcada));
        // CB D8 023C
        gbc.setState(0xe1da, 0xe0c6, 0xf830, 0xd08c, 0x1ea9, 0xd119, 0x0, 0x0);
        gbc.writeMem(0xe1da, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe0c6, gbc.sp());
        EXPECT(0xe1dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1da));
        EXPECT(0xd8, gbc.readMem(0xe1db));
        // CB D8 023D
        gbc.setState(0xa0f2, 0xe65a, 0xf550, 0x4d9c, 0x3693, 0x1ae7, 0x1, 0x1);
        gbc.writeMem(0xa0f2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe65a, gbc.sp());
        EXPECT(0xa0f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f2));
        EXPECT(0xd8, gbc.readMem(0xa0f3));
        // CB D8 0240
        gbc.setState(0x4ee7, 0x85da, 0x39f0, 0x8d50, 0x8b02, 0x6814, 0x1, 0x1);
        gbc.writeMem(0x4ee7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x85da, gbc.sp());
        EXPECT(0x4ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0241
        gbc.setState(0x39be, 0x80ce, 0x5870, 0x969c, 0xff40, 0xf557, 0x1, 0x0);
        gbc.writeMem(0x39be, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x80ce, gbc.sp());
        EXPECT(0x39c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0242
        gbc.setState(0x6294, 0x45e1, 0xc420, 0x3871, 0xf0c8, 0xa176, 0x1, 0x0);
        gbc.writeMem(0x6294, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x45e1, gbc.sp());
        EXPECT(0x6296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0243
        gbc.setState(0x88c8, 0x7c6f, 0x6cf0, 0x668e, 0xad70, 0xff52, 0x1, 0x1);
        gbc.writeMem(0x88c8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7c6f, gbc.sp());
        EXPECT(0x88ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c8));
        EXPECT(0xd8, gbc.readMem(0x88c9));
        // CB D8 0244
        gbc.setState(0xed6c, 0xf438, 0x1870, 0xb86a, 0x12ad, 0xc6c4, 0x0, 0x1);
        gbc.writeMem(0xed6c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf438, gbc.sp());
        EXPECT(0xed6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed6c));
        EXPECT(0xd8, gbc.readMem(0xed6d));
        // CB D8 0245
        gbc.setState(0xb22a, 0x9a04, 0x6670, 0x725, 0x4363, 0xa946, 0x0, 0x1);
        gbc.writeMem(0xb22a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9a04, gbc.sp());
        EXPECT(0xb22c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb22a));
        EXPECT(0xd8, gbc.readMem(0xb22b));
        // CB D8 0246
        gbc.setState(0xae7d, 0x395b, 0xf470, 0xbbef, 0xa967, 0x5a99, 0x0, 0x0);
        gbc.writeMem(0xae7d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x395b, gbc.sp());
        EXPECT(0xae7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae7d));
        EXPECT(0xd8, gbc.readMem(0xae7e));
        // CB D8 0247
        gbc.setState(0x7e93, 0x27a0, 0x44d0, 0xde0f, 0xbcdd, 0x2d5b, 0x0, 0x1);
        gbc.writeMem(0x7e93, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x27a0, gbc.sp());
        EXPECT(0x7e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0248
        gbc.setState(0xed5, 0x396d, 0x7c0, 0x9607, 0xcf9d, 0x8533, 0x0, 0x1);
        gbc.writeMem(0xed5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x396d, gbc.sp());
        EXPECT(0xed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0249
        gbc.setState(0x8620, 0xf8d0, 0x1100, 0xb308, 0xb29c, 0x50e6, 0x0, 0x0);
        gbc.writeMem(0x8620, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf8d0, gbc.sp());
        EXPECT(0x8622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8620));
        EXPECT(0xd8, gbc.readMem(0x8621));
        // CB D8 024A
        gbc.setState(0x3a23, 0xda40, 0x45d0, 0x249, 0x1453, 0xf65, 0x1, 0x0);
        gbc.writeMem(0x3a23, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xda40, gbc.sp());
        EXPECT(0x3a25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 024B
        gbc.setState(0x1a61, 0xbce6, 0x90b0, 0x3cd2, 0xbf2c, 0xd3ca, 0x0, 0x0);
        gbc.writeMem(0x1a61, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbce6, gbc.sp());
        EXPECT(0x1a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 024C
        gbc.setState(0xd9c, 0x73e5, 0x3da0, 0x9f9f, 0x9efc, 0xe516, 0x0, 0x0);
        gbc.writeMem(0xd9c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x73e5, gbc.sp());
        EXPECT(0xd9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 024D
        gbc.setState(0x9dc7, 0xca38, 0x35d0, 0xce3, 0x964a, 0x77cb, 0x0, 0x1);
        gbc.writeMem(0x9dc7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xca38, gbc.sp());
        EXPECT(0x9dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc7));
        EXPECT(0xd8, gbc.readMem(0x9dc8));
        // CB D8 024E
        gbc.setState(0x6a02, 0x7a95, 0x2ae0, 0x3efa, 0x5c11, 0x4834, 0x1, 0x0);
        gbc.writeMem(0x6a02, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7a95, gbc.sp());
        EXPECT(0x6a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 024F
        gbc.setState(0x25ff, 0xe029, 0x4130, 0xa68b, 0x73c4, 0x3e0d, 0x1, 0x1);
        gbc.writeMem(0x25ff, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe029, gbc.sp());
        EXPECT(0x2601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0250
        gbc.setState(0xc30b, 0x1b7b, 0x7980, 0xd26, 0x48f3, 0xb7e, 0x1, 0x1);
        gbc.writeMem(0xc30b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1b7b, gbc.sp());
        EXPECT(0xc30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30b));
        EXPECT(0xd8, gbc.readMem(0xc30c));
        // CB D8 0251
        gbc.setState(0xa58c, 0xf545, 0x6220, 0x3aa4, 0x114b, 0x176e, 0x1, 0x0);
        gbc.writeMem(0xa58c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf545, gbc.sp());
        EXPECT(0xa58e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa58c));
        EXPECT(0xd8, gbc.readMem(0xa58d));
        // CB D8 0253
        gbc.setState(0x66ff, 0x92b7, 0x5150, 0xc8a4, 0xa7d1, 0x661b, 0x1, 0x1);
        gbc.writeMem(0x66ff, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x92b7, gbc.sp());
        EXPECT(0x6701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0254
        gbc.setState(0x95a9, 0xf81f, 0xc330, 0x118a, 0xeb1a, 0xa9bb, 0x1, 0x0);
        gbc.writeMem(0x95a9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf81f, gbc.sp());
        EXPECT(0x95ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a9));
        EXPECT(0xd8, gbc.readMem(0x95aa));
        // CB D8 0255
        gbc.setState(0x52a, 0xf3a4, 0x67c0, 0x545d, 0x48ae, 0x71e6, 0x1, 0x1);
        gbc.writeMem(0x52a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf3a4, gbc.sp());
        EXPECT(0x52c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0256
        gbc.setState(0x57f, 0x4791, 0x34e0, 0xfe4a, 0xbfa8, 0x72ae, 0x1, 0x1);
        gbc.writeMem(0x57f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4791, gbc.sp());
        EXPECT(0x581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0257
        gbc.setState(0xb2e3, 0x10ac, 0x6dc0, 0x2199, 0x64a7, 0xebcc, 0x1, 0x1);
        gbc.writeMem(0xb2e3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x10ac, gbc.sp());
        EXPECT(0xb2e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e3));
        EXPECT(0xd8, gbc.readMem(0xb2e4));
        // CB D8 0258
        gbc.setState(0x2b94, 0xf679, 0xb5d0, 0xee10, 0xcd55, 0xe6e8, 0x0, 0x0);
        gbc.writeMem(0x2b94, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf679, gbc.sp());
        EXPECT(0x2b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0259
        gbc.setState(0x13a7, 0xac58, 0xdc30, 0x218e, 0xcf7a, 0xf365, 0x1, 0x1);
        gbc.writeMem(0x13a7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xac58, gbc.sp());
        EXPECT(0x13a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 025A
        gbc.setState(0x19af, 0x7512, 0x3800, 0xae67, 0xe1f0, 0x6bf7, 0x1, 0x1);
        gbc.writeMem(0x19af, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7512, gbc.sp());
        EXPECT(0x19b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 025B
        gbc.setState(0x1451, 0xe7ec, 0x6600, 0x5e3e, 0xd5e6, 0xd876, 0x0, 0x1);
        gbc.writeMem(0x1451, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe7ec, gbc.sp());
        EXPECT(0x1453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 025C
        gbc.setState(0xef22, 0xd797, 0xb450, 0x71c8, 0x9b59, 0x4c82, 0x0, 0x0);
        gbc.writeMem(0xef22, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd797, gbc.sp());
        EXPECT(0xef24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef22));
        EXPECT(0xd8, gbc.readMem(0xef23));
        // CB D8 025D
        gbc.setState(0xd7ed, 0xc0c, 0x4dd0, 0x81a8, 0x8a85, 0x5dfc, 0x0, 0x1);
        gbc.writeMem(0xd7ed, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc0c, gbc.sp());
        EXPECT(0xd7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ed));
        EXPECT(0xd8, gbc.readMem(0xd7ee));
        // CB D8 025E
        gbc.setState(0x6776, 0xc45b, 0xdcf0, 0x142, 0xf989, 0x35fd, 0x0, 0x0);
        gbc.writeMem(0x6776, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc45b, gbc.sp());
        EXPECT(0x6778, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 025F
        gbc.setState(0x18e7, 0xa1c7, 0x1950, 0x8b15, 0x28ab, 0x33c9, 0x0, 0x1);
        gbc.writeMem(0x18e7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa1c7, gbc.sp());
        EXPECT(0x18e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0260
        gbc.setState(0x5272, 0x4a81, 0xc670, 0xec56, 0xbf2a, 0x9249, 0x1, 0x1);
        gbc.writeMem(0x5272, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4a81, gbc.sp());
        EXPECT(0x5274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0261
        gbc.setState(0x2dd3, 0xc6d5, 0x9bf0, 0xfbc4, 0x7940, 0x8b6f, 0x1, 0x0);
        gbc.writeMem(0x2dd3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc6d5, gbc.sp());
        EXPECT(0x2dd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0262
        gbc.setState(0x71ba, 0x557, 0xd1c0, 0x2d82, 0x61dc, 0x1809, 0x0, 0x0);
        gbc.writeMem(0x71ba, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x557, gbc.sp());
        EXPECT(0x71bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0263
        gbc.setState(0x7780, 0x77da, 0x9190, 0x6053, 0x3335, 0x3732, 0x0, 0x1);
        gbc.writeMem(0x7780, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x77da, gbc.sp());
        EXPECT(0x7782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0264
        gbc.setState(0x8303, 0xe6f, 0x3720, 0xb244, 0x9517, 0xbf44, 0x0, 0x0);
        gbc.writeMem(0x8303, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe6f, gbc.sp());
        EXPECT(0x8305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8303));
        EXPECT(0xd8, gbc.readMem(0x8304));
        // CB D8 0265
        gbc.setState(0x6993, 0xd1e9, 0xfc50, 0x9b25, 0x5136, 0xb760, 0x1, 0x0);
        gbc.writeMem(0x6993, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd1e9, gbc.sp());
        EXPECT(0x6995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0266
        gbc.setState(0x7591, 0xe1fd, 0x5c40, 0x9313, 0xa0ed, 0xb59c, 0x0, 0x1);
        gbc.writeMem(0x7591, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe1fd, gbc.sp());
        EXPECT(0x7593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0267
        gbc.setState(0x2624, 0x237, 0xe680, 0xdc76, 0x68e6, 0xe992, 0x0, 0x1);
        gbc.writeMem(0x2624, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x237, gbc.sp());
        EXPECT(0x2626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0269
        gbc.setState(0xcd00, 0x7e0c, 0xd310, 0x5942, 0x89ad, 0x589b, 0x0, 0x0);
        gbc.writeMem(0xcd00, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7e0c, gbc.sp());
        EXPECT(0xcd02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd00));
        EXPECT(0xd8, gbc.readMem(0xcd01));
        // CB D8 026A
        gbc.setState(0x59a1, 0x94f2, 0xc230, 0xacdd, 0x4579, 0xcf06, 0x1, 0x0);
        gbc.writeMem(0x59a1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x94f2, gbc.sp());
        EXPECT(0x59a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 026B
        gbc.setState(0x408b, 0xe973, 0x4d30, 0xde68, 0x51d0, 0xc711, 0x0, 0x0);
        gbc.writeMem(0x408b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe973, gbc.sp());
        EXPECT(0x408d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 026C
        gbc.setState(0x85c0, 0xceb1, 0x1060, 0xe11b, 0xa315, 0xe1ec, 0x1, 0x0);
        gbc.writeMem(0x85c0, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xceb1, gbc.sp());
        EXPECT(0x85c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c0));
        EXPECT(0xd8, gbc.readMem(0x85c1));
        // CB D8 026D
        gbc.setState(0xd4d8, 0x947e, 0xa0a0, 0x40f5, 0x9b0b, 0x6726, 0x0, 0x1);
        gbc.writeMem(0xd4d8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x947e, gbc.sp());
        EXPECT(0xd4da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d8));
        EXPECT(0xd8, gbc.readMem(0xd4d9));
        // CB D8 026E
        gbc.setState(0x6bb5, 0x6a3a, 0xac60, 0xdcd3, 0x48ae, 0xf6a1, 0x1, 0x0);
        gbc.writeMem(0x6bb5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6a3a, gbc.sp());
        EXPECT(0x6bb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 026F
        gbc.setState(0x4dde, 0x649c, 0xdc10, 0x75ea, 0x4ee8, 0x9b1a, 0x0, 0x0);
        gbc.writeMem(0x4dde, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x649c, gbc.sp());
        EXPECT(0x4de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0271
        gbc.setState(0x9c9b, 0xdb6c, 0x7f00, 0xab00, 0x560a, 0xf4a, 0x1, 0x1);
        gbc.writeMem(0x9c9b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdb6c, gbc.sp());
        EXPECT(0x9c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c9b));
        EXPECT(0xd8, gbc.readMem(0x9c9c));
        // CB D8 0272
        gbc.setState(0xd9e9, 0x3fe1, 0x6c90, 0x29ba, 0x274a, 0xfecd, 0x0, 0x1);
        gbc.writeMem(0xd9e9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3fe1, gbc.sp());
        EXPECT(0xd9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e9));
        EXPECT(0xd8, gbc.readMem(0xd9ea));
        // CB D8 0273
        gbc.setState(0xaf71, 0x14f7, 0xa400, 0x6e0d, 0x7681, 0x70b5, 0x1, 0x1);
        gbc.writeMem(0xaf71, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x14f7, gbc.sp());
        EXPECT(0xaf73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf71));
        EXPECT(0xd8, gbc.readMem(0xaf72));
        // CB D8 0274
        gbc.setState(0xdfc9, 0x2ce3, 0x70c0, 0xc48b, 0xfbbd, 0xf23c, 0x1, 0x1);
        gbc.writeMem(0xdfc9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2ce3, gbc.sp());
        EXPECT(0xdfcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc9));
        EXPECT(0xd8, gbc.readMem(0xdfca));
        // CB D8 0276
        gbc.setState(0x6c73, 0x7456, 0x4e20, 0x692b, 0xd953, 0x21c8, 0x1, 0x1);
        gbc.writeMem(0x6c73, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7456, gbc.sp());
        EXPECT(0x6c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0277
        gbc.setState(0x7f96, 0x7132, 0xa920, 0xca73, 0x6846, 0x5aba, 0x1, 0x0);
        gbc.writeMem(0x7f96, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7132, gbc.sp());
        EXPECT(0x7f98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0279
        gbc.setState(0xeff5, 0x8533, 0x1b60, 0x9640, 0x94, 0x6298, 0x1, 0x1);
        gbc.writeMem(0xeff5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8533, gbc.sp());
        EXPECT(0xeff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff5));
        EXPECT(0xd8, gbc.readMem(0xeff6));
        // CB D8 027A
        gbc.setState(0x58dc, 0xdeb4, 0xa40, 0x35bf, 0x7893, 0x5d76, 0x0, 0x1);
        gbc.writeMem(0x58dc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdeb4, gbc.sp());
        EXPECT(0x58de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 027B
        gbc.setState(0xab71, 0x8549, 0x9430, 0x5cc2, 0x4703, 0x8ab9, 0x0, 0x0);
        gbc.writeMem(0xab71, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8549, gbc.sp());
        EXPECT(0xab73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab71));
        EXPECT(0xd8, gbc.readMem(0xab72));
        // CB D8 027C
        gbc.setState(0x38d8, 0x4378, 0xc9f0, 0x2c7, 0xefb1, 0x85b, 0x1, 0x1);
        gbc.writeMem(0x38d8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4378, gbc.sp());
        EXPECT(0x38da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 027E
        gbc.setState(0xc0ed, 0xd588, 0x1d20, 0x85df, 0x3a3b, 0xcbf, 0x1, 0x0);
        gbc.writeMem(0xc0ed, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd588, gbc.sp());
        EXPECT(0xc0ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ed));
        EXPECT(0xd8, gbc.readMem(0xc0ee));
        // CB D8 027F
        gbc.setState(0x1642, 0xb368, 0xecf0, 0xd952, 0x36fa, 0x9068, 0x1, 0x0);
        gbc.writeMem(0x1642, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb368, gbc.sp());
        EXPECT(0x1644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0280
        gbc.setState(0xc34, 0x723, 0x8160, 0x3284, 0x8558, 0xfae9, 0x1, 0x1);
        gbc.writeMem(0xc34, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x723, gbc.sp());
        EXPECT(0xc36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0282
        gbc.setState(0xbcb4, 0x7608, 0xd410, 0xf364, 0x54b6, 0x1d2, 0x1, 0x0);
        gbc.writeMem(0xbcb4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7608, gbc.sp());
        EXPECT(0xbcb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb4));
        EXPECT(0xd8, gbc.readMem(0xbcb5));
        // CB D8 0283
        gbc.setState(0x9163, 0x7b69, 0x840, 0xaf1b, 0x7cfd, 0xbccf, 0x0, 0x1);
        gbc.writeMem(0x9163, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7b69, gbc.sp());
        EXPECT(0x9165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9163));
        EXPECT(0xd8, gbc.readMem(0x9164));
        // CB D8 0284
        gbc.setState(0xe74c, 0x8de0, 0x9450, 0xf949, 0x2a28, 0x16e4, 0x1, 0x0);
        gbc.writeMem(0xe74c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8de0, gbc.sp());
        EXPECT(0xe74e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe74c));
        EXPECT(0xd8, gbc.readMem(0xe74d));
        // CB D8 0285
        gbc.setState(0xd78b, 0x3fec, 0x8400, 0x7f59, 0xbd25, 0x718, 0x0, 0x1);
        gbc.writeMem(0xd78b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3fec, gbc.sp());
        EXPECT(0xd78d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd78b));
        EXPECT(0xd8, gbc.readMem(0xd78c));
        // CB D8 0286
        gbc.setState(0x485f, 0x17f1, 0xba10, 0x73e1, 0x5fd6, 0x4cdc, 0x0, 0x1);
        gbc.writeMem(0x485f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x17f1, gbc.sp());
        EXPECT(0x4861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0287
        gbc.setState(0x26c8, 0xea3c, 0x7330, 0xba1f, 0xfdab, 0x3210, 0x1, 0x0);
        gbc.writeMem(0x26c8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xea3c, gbc.sp());
        EXPECT(0x26ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0288
        gbc.setState(0x8bd0, 0x290a, 0xa310, 0x580d, 0xf6b5, 0x4f9a, 0x0, 0x0);
        gbc.writeMem(0x8bd0, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x290a, gbc.sp());
        EXPECT(0x8bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd0));
        EXPECT(0xd8, gbc.readMem(0x8bd1));
        // CB D8 0289
        gbc.setState(0x3aea, 0x3dde, 0x1000, 0x1e0a, 0xdadc, 0x9dd2, 0x1, 0x0);
        gbc.writeMem(0x3aea, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3dde, gbc.sp());
        EXPECT(0x3aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 028A
        gbc.setState(0x1134, 0xa46d, 0x74a0, 0x5d78, 0x8178, 0xe093, 0x0, 0x1);
        gbc.writeMem(0x1134, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa46d, gbc.sp());
        EXPECT(0x1136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 028B
        gbc.setState(0x38bf, 0xaf0f, 0x1140, 0x8c19, 0x77d6, 0xfbcb, 0x0, 0x0);
        gbc.writeMem(0x38bf, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xaf0f, gbc.sp());
        EXPECT(0x38c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 028C
        gbc.setState(0x274, 0x1b36, 0x4b80, 0x2bf3, 0xcefa, 0xf680, 0x0, 0x1);
        gbc.writeMem(0x274, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1b36, gbc.sp());
        EXPECT(0x276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 028D
        gbc.setState(0xc014, 0xcba1, 0x94a0, 0x8e66, 0x1851, 0x8b84, 0x0, 0x0);
        gbc.writeMem(0xc014, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcba1, gbc.sp());
        EXPECT(0xc016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc014));
        EXPECT(0xd8, gbc.readMem(0xc015));
        // CB D8 028E
        gbc.setState(0xf8d, 0x95cd, 0xc9e0, 0x84e7, 0x55f4, 0x6d7b, 0x1, 0x0);
        gbc.writeMem(0xf8d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x95cd, gbc.sp());
        EXPECT(0xf8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0290
        gbc.setState(0x9db5, 0xbe87, 0xfa80, 0x49fc, 0x74e9, 0x6b81, 0x1, 0x0);
        gbc.writeMem(0x9db5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbe87, gbc.sp());
        EXPECT(0x9db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db5));
        EXPECT(0xd8, gbc.readMem(0x9db6));
        // CB D8 0291
        gbc.setState(0x8bb3, 0xd568, 0x6050, 0x9a4, 0x71da, 0xedd9, 0x0, 0x1);
        gbc.writeMem(0x8bb3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd568, gbc.sp());
        EXPECT(0x8bb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb3));
        EXPECT(0xd8, gbc.readMem(0x8bb4));
        // CB D8 0292
        gbc.setState(0x2a4c, 0x3566, 0x59d0, 0xf818, 0xec76, 0xce4, 0x0, 0x0);
        gbc.writeMem(0x2a4c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3566, gbc.sp());
        EXPECT(0x2a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0293
        gbc.setState(0x8a3d, 0x7fa4, 0x26d0, 0x533, 0x44fe, 0x9e6c, 0x1, 0x0);
        gbc.writeMem(0x8a3d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7fa4, gbc.sp());
        EXPECT(0x8a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a3d));
        EXPECT(0xd8, gbc.readMem(0x8a3e));
        // CB D8 0294
        gbc.setState(0x4cb4, 0x82fc, 0x79c0, 0xdedd, 0xfbd1, 0x88c0, 0x0, 0x0);
        gbc.writeMem(0x4cb4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x82fc, gbc.sp());
        EXPECT(0x4cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0295
        gbc.setState(0x3bdc, 0x5d3c, 0xa870, 0x9108, 0xcfa, 0x1e6c, 0x1, 0x0);
        gbc.writeMem(0x3bdc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5d3c, gbc.sp());
        EXPECT(0x3bde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0296
        gbc.setState(0x2fc4, 0x5f1, 0x1790, 0x2c96, 0xb16a, 0x20b7, 0x0, 0x0);
        gbc.writeMem(0x2fc4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5f1, gbc.sp());
        EXPECT(0x2fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0297
        gbc.setState(0xab9f, 0xcb16, 0x1180, 0xf9a0, 0x3e7b, 0x4774, 0x0, 0x0);
        gbc.writeMem(0xab9f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcb16, gbc.sp());
        EXPECT(0xaba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9f));
        EXPECT(0xd8, gbc.readMem(0xaba0));
        // CB D8 0298
        gbc.setState(0x3609, 0x1f73, 0xfda0, 0xf5c9, 0x6875, 0xb73c, 0x0, 0x1);
        gbc.writeMem(0x3609, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1f73, gbc.sp());
        EXPECT(0x360b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0299
        gbc.setState(0xa6b7, 0xf387, 0x24f0, 0x914d, 0xfcde, 0x5489, 0x0, 0x1);
        gbc.writeMem(0xa6b7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf387, gbc.sp());
        EXPECT(0xa6b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b7));
        EXPECT(0xd8, gbc.readMem(0xa6b8));
        // CB D8 029A
        gbc.setState(0x68e3, 0x603a, 0x3820, 0xc94, 0x26a8, 0xbf3f, 0x1, 0x1);
        gbc.writeMem(0x68e3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x603a, gbc.sp());
        EXPECT(0x68e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 029B
        gbc.setState(0xe326, 0xb428, 0x60f0, 0xde06, 0x40c8, 0x95f6, 0x1, 0x1);
        gbc.writeMem(0xe326, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb428, gbc.sp());
        EXPECT(0xe328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe326));
        EXPECT(0xd8, gbc.readMem(0xe327));
        // CB D8 029C
        gbc.setState(0xcb00, 0x5679, 0x3e30, 0xec45, 0xfc7e, 0xdb27, 0x0, 0x1);
        gbc.writeMem(0xcb00, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5679, gbc.sp());
        EXPECT(0xcb02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb00));
        EXPECT(0xd8, gbc.readMem(0xcb01));
        // CB D8 029D
        gbc.setState(0x7e8d, 0x20f, 0xa990, 0x1979, 0x7a56, 0xdef7, 0x1, 0x0);
        gbc.writeMem(0x7e8d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x20f, gbc.sp());
        EXPECT(0x7e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 029E
        gbc.setState(0xcec8, 0x9c93, 0x1ea0, 0xd46c, 0x5275, 0x1b23, 0x1, 0x0);
        gbc.writeMem(0xcec8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9c93, gbc.sp());
        EXPECT(0xceca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec8));
        EXPECT(0xd8, gbc.readMem(0xcec9));
        // CB D8 029F
        gbc.setState(0x5270, 0x568a, 0x2760, 0xe436, 0xa421, 0x6d56, 0x1, 0x0);
        gbc.writeMem(0x5270, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x568a, gbc.sp());
        EXPECT(0x5272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02A0
        gbc.setState(0x68ef, 0xdf0d, 0x4570, 0x4bac, 0x3f30, 0xc19e, 0x0, 0x0);
        gbc.writeMem(0x68ef, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdf0d, gbc.sp());
        EXPECT(0x68f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02A1
        gbc.setState(0x794e, 0x76b8, 0x4eb0, 0xc86e, 0x2e73, 0x488a, 0x0, 0x0);
        gbc.writeMem(0x794e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x76b8, gbc.sp());
        EXPECT(0x7950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02A2
        gbc.setState(0x4c15, 0x5173, 0x3700, 0xd25a, 0xc0ba, 0xb952, 0x1, 0x1);
        gbc.writeMem(0x4c15, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5173, gbc.sp());
        EXPECT(0x4c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02A3
        gbc.setState(0x9adf, 0xcf12, 0x2150, 0xb3b7, 0xa6fd, 0xe3b5, 0x1, 0x1);
        gbc.writeMem(0x9adf, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcf12, gbc.sp());
        EXPECT(0x9ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9adf));
        EXPECT(0xd8, gbc.readMem(0x9ae0));
        // CB D8 02A4
        gbc.setState(0x5172, 0x5efc, 0x4ab0, 0xb91, 0xe6cf, 0x4af8, 0x0, 0x0);
        gbc.writeMem(0x5172, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5efc, gbc.sp());
        EXPECT(0x5174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02A5
        gbc.setState(0x2385, 0xb0ad, 0x29d0, 0xd0b8, 0x2a14, 0x6a68, 0x0, 0x0);
        gbc.writeMem(0x2385, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb0ad, gbc.sp());
        EXPECT(0x2387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02A6
        gbc.setState(0xba6, 0x24f8, 0x52f0, 0xa37, 0xa823, 0xe688, 0x0, 0x1);
        gbc.writeMem(0xba6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x24f8, gbc.sp());
        EXPECT(0xba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02A7
        gbc.setState(0x2d31, 0xe14, 0x1110, 0x89d8, 0x8f9c, 0x7145, 0x0, 0x0);
        gbc.writeMem(0x2d31, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe14, gbc.sp());
        EXPECT(0x2d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02A8
        gbc.setState(0xa832, 0x8f0c, 0xa4b0, 0xded0, 0xe184, 0x751d, 0x1, 0x0);
        gbc.writeMem(0xa832, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8f0c, gbc.sp());
        EXPECT(0xa834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa832));
        EXPECT(0xd8, gbc.readMem(0xa833));
        // CB D8 02AA
        gbc.setState(0x2d10, 0xb8ef, 0xb910, 0xe1e3, 0xb119, 0x807a, 0x0, 0x0);
        gbc.writeMem(0x2d10, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb8ef, gbc.sp());
        EXPECT(0x2d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02AB
        gbc.setState(0x1cc9, 0xe94d, 0xb9a0, 0xeb75, 0x363c, 0xff42, 0x1, 0x0);
        gbc.writeMem(0x1cc9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe94d, gbc.sp());
        EXPECT(0x1ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02AC
        gbc.setState(0x59e2, 0xaf18, 0x6ce0, 0x95e7, 0xc28d, 0xa86a, 0x1, 0x0);
        gbc.writeMem(0x59e2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xaf18, gbc.sp());
        EXPECT(0x59e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02AD
        gbc.setState(0xec09, 0x4cb3, 0x11d0, 0xa0af, 0x91a9, 0xb9cd, 0x1, 0x0);
        gbc.writeMem(0xec09, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4cb3, gbc.sp());
        EXPECT(0xec0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec09));
        EXPECT(0xd8, gbc.readMem(0xec0a));
        // CB D8 02AE
        gbc.setState(0x2c68, 0x8172, 0xd0d0, 0xa48b, 0x3db0, 0x7695, 0x0, 0x1);
        gbc.writeMem(0x2c68, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8172, gbc.sp());
        EXPECT(0x2c6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02AF
        gbc.setState(0xc1fc, 0x41ce, 0x7650, 0x999d, 0xade4, 0xa612, 0x0, 0x0);
        gbc.writeMem(0xc1fc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x41ce, gbc.sp());
        EXPECT(0xc1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1fc));
        EXPECT(0xd8, gbc.readMem(0xc1fd));
        // CB D8 02B0
        gbc.setState(0x764e, 0x6051, 0x4590, 0xf2a6, 0x8be5, 0x8bea, 0x1, 0x0);
        gbc.writeMem(0x764e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6051, gbc.sp());
        EXPECT(0x7650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02B2
        gbc.setState(0x481c, 0x9e21, 0xec80, 0xad31, 0x290d, 0x70c4, 0x1, 0x0);
        gbc.writeMem(0x481c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9e21, gbc.sp());
        EXPECT(0x481e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02B3
        gbc.setState(0x1d, 0x9a8e, 0x83d0, 0x46ea, 0x226f, 0xdcc8, 0x1, 0x1);
        gbc.writeMem(0x1d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9a8e, gbc.sp());
        EXPECT(0x1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02B4
        gbc.setState(0x7779, 0x62ad, 0x3650, 0x6790, 0x9e06, 0xbf29, 0x1, 0x0);
        gbc.writeMem(0x7779, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x62ad, gbc.sp());
        EXPECT(0x777b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02B5
        gbc.setState(0xace8, 0x895, 0x1ba0, 0xe01e, 0x477b, 0xc404, 0x0, 0x1);
        gbc.writeMem(0xace8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x895, gbc.sp());
        EXPECT(0xacea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace8));
        EXPECT(0xd8, gbc.readMem(0xace9));
        // CB D8 02B6
        gbc.setState(0x9352, 0x1979, 0x850, 0x3e0a, 0x47ac, 0xcbc2, 0x1, 0x0);
        gbc.writeMem(0x9352, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1979, gbc.sp());
        EXPECT(0x9354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9352));
        EXPECT(0xd8, gbc.readMem(0x9353));
        // CB D8 02B7
        gbc.setState(0x51c0, 0x60d4, 0xc1f0, 0x3c3d, 0xdb13, 0x8aa9, 0x1, 0x1);
        gbc.writeMem(0x51c0, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x60d4, gbc.sp());
        EXPECT(0x51c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02B8
        gbc.setState(0xc31a, 0x64af, 0x7620, 0x8a25, 0x678e, 0xa5df, 0x0, 0x1);
        gbc.writeMem(0xc31a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x64af, gbc.sp());
        EXPECT(0xc31c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31a));
        EXPECT(0xd8, gbc.readMem(0xc31b));
        // CB D8 02B9
        gbc.setState(0x9cd8, 0x5523, 0xbc50, 0xa6b8, 0xda8b, 0xcf7e, 0x0, 0x1);
        gbc.writeMem(0x9cd8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5523, gbc.sp());
        EXPECT(0x9cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd8));
        EXPECT(0xd8, gbc.readMem(0x9cd9));
        // CB D8 02BA
        gbc.setState(0xa70b, 0x8e3, 0xf190, 0xda56, 0x8ffe, 0xab29, 0x0, 0x1);
        gbc.writeMem(0xa70b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8e3, gbc.sp());
        EXPECT(0xa70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa70b));
        EXPECT(0xd8, gbc.readMem(0xa70c));
        // CB D8 02BB
        gbc.setState(0xe14d, 0x5376, 0xf730, 0x9871, 0x8053, 0x71c7, 0x0, 0x0);
        gbc.writeMem(0xe14d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5376, gbc.sp());
        EXPECT(0xe14f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14d));
        EXPECT(0xd8, gbc.readMem(0xe14e));
        // CB D8 02BC
        gbc.setState(0x3d28, 0xbcea, 0xae50, 0x823, 0x21ba, 0x2adc, 0x1, 0x1);
        gbc.writeMem(0x3d28, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbcea, gbc.sp());
        EXPECT(0x3d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02BD
        gbc.setState(0x490e, 0xfafc, 0x3030, 0x55c5, 0xf61f, 0xced4, 0x1, 0x0);
        gbc.writeMem(0x490e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfafc, gbc.sp());
        EXPECT(0x4910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02BE
        gbc.setState(0x9792, 0xaeef, 0x3440, 0x917c, 0xcb7e, 0x63d0, 0x0, 0x1);
        gbc.writeMem(0x9792, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xaeef, gbc.sp());
        EXPECT(0x9794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9792));
        EXPECT(0xd8, gbc.readMem(0x9793));
        // CB D8 02BF
        gbc.setState(0xad47, 0xce37, 0xbd90, 0xe403, 0xd996, 0xfdf5, 0x1, 0x1);
        gbc.writeMem(0xad47, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xce37, gbc.sp());
        EXPECT(0xad49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad47));
        EXPECT(0xd8, gbc.readMem(0xad48));
        // CB D8 02C0
        gbc.setState(0x7be3, 0x54bf, 0x9260, 0x7bc8, 0x295, 0x37e4, 0x0, 0x0);
        gbc.writeMem(0x7be3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x54bf, gbc.sp());
        EXPECT(0x7be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02C1
        gbc.setState(0xb3e5, 0x63e9, 0x67d0, 0xe14b, 0xc3ca, 0xab09, 0x0, 0x1);
        gbc.writeMem(0xb3e5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x63e9, gbc.sp());
        EXPECT(0xb3e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e5));
        EXPECT(0xd8, gbc.readMem(0xb3e6));
        // CB D8 02C2
        gbc.setState(0xe5ef, 0x8dc1, 0x48d0, 0xae95, 0x2d6d, 0x577c, 0x0, 0x1);
        gbc.writeMem(0xe5ef, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8dc1, gbc.sp());
        EXPECT(0xe5f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ef));
        EXPECT(0xd8, gbc.readMem(0xe5f0));
        // CB D8 02C3
        gbc.setState(0x29b9, 0xec7a, 0xed50, 0x1bb1, 0x315d, 0xf383, 0x1, 0x1);
        gbc.writeMem(0x29b9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xec7a, gbc.sp());
        EXPECT(0x29bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02C4
        gbc.setState(0x5055, 0xf0d, 0xc820, 0x52b0, 0x8070, 0xb51f, 0x0, 0x1);
        gbc.writeMem(0x5055, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf0d, gbc.sp());
        EXPECT(0x5057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02C5
        gbc.setState(0x17bc, 0x1ab2, 0x4bb0, 0xb95, 0x4ce4, 0xec0b, 0x1, 0x1);
        gbc.writeMem(0x17bc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1ab2, gbc.sp());
        EXPECT(0x17be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02C6
        gbc.setState(0x9cd8, 0x22ca, 0x16e0, 0xc519, 0xfcfa, 0xe366, 0x1, 0x0);
        gbc.writeMem(0x9cd8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x22ca, gbc.sp());
        EXPECT(0x9cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd8));
        EXPECT(0xd8, gbc.readMem(0x9cd9));
        // CB D8 02C7
        gbc.setState(0xff4, 0x23a1, 0x6550, 0x21c, 0xbb3f, 0x23d2, 0x0, 0x0);
        gbc.writeMem(0xff4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x23a1, gbc.sp());
        EXPECT(0xff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02C8
        gbc.setState(0x9163, 0xa2e6, 0x1b90, 0x1030, 0x5592, 0xf251, 0x0, 0x1);
        gbc.writeMem(0x9163, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa2e6, gbc.sp());
        EXPECT(0x9165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9163));
        EXPECT(0xd8, gbc.readMem(0x9164));
        // CB D8 02C9
        gbc.setState(0xb3b5, 0x322e, 0x1130, 0x3a36, 0x1b0, 0xacd1, 0x1, 0x1);
        gbc.writeMem(0xb3b5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x322e, gbc.sp());
        EXPECT(0xb3b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b5));
        EXPECT(0xd8, gbc.readMem(0xb3b6));
        // CB D8 02CA
        gbc.setState(0xea0a, 0x3503, 0x4e80, 0x30f9, 0x88ff, 0x6733, 0x1, 0x0);
        gbc.writeMem(0xea0a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3503, gbc.sp());
        EXPECT(0xea0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea0a));
        EXPECT(0xd8, gbc.readMem(0xea0b));
        // CB D8 02CB
        gbc.setState(0xeb2b, 0x5884, 0x9080, 0xb94f, 0x7604, 0xc42c, 0x1, 0x1);
        gbc.writeMem(0xeb2b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5884, gbc.sp());
        EXPECT(0xeb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2b));
        EXPECT(0xd8, gbc.readMem(0xeb2c));
        // CB D8 02CC
        gbc.setState(0x86e9, 0xd320, 0x2200, 0x659d, 0xc80f, 0x59e5, 0x1, 0x0);
        gbc.writeMem(0x86e9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd320, gbc.sp());
        EXPECT(0x86eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e9));
        EXPECT(0xd8, gbc.readMem(0x86ea));
        // CB D8 02CD
        gbc.setState(0x6264, 0x422d, 0x5ef0, 0xaa23, 0x6d12, 0xc90c, 0x1, 0x0);
        gbc.writeMem(0x6264, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x422d, gbc.sp());
        EXPECT(0x6266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02CE
        gbc.setState(0x9c7a, 0x6f0a, 0xa330, 0xf5eb, 0x95e, 0x4046, 0x1, 0x1);
        gbc.writeMem(0x9c7a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6f0a, gbc.sp());
        EXPECT(0x9c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7a));
        EXPECT(0xd8, gbc.readMem(0x9c7b));
        // CB D8 02CF
        gbc.setState(0x3b46, 0xe8de, 0x7b80, 0xcdd1, 0x327, 0xacaf, 0x0, 0x0);
        gbc.writeMem(0x3b46, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe8de, gbc.sp());
        EXPECT(0x3b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02D0
        gbc.setState(0xbc45, 0x415f, 0xc8f0, 0x1f7f, 0x727d, 0xfc39, 0x0, 0x1);
        gbc.writeMem(0xbc45, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x415f, gbc.sp());
        EXPECT(0xbc47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc45));
        EXPECT(0xd8, gbc.readMem(0xbc46));
        // CB D8 02D1
        gbc.setState(0x38b6, 0x7e10, 0xd940, 0x7413, 0xbe1a, 0xf3ff, 0x1, 0x0);
        gbc.writeMem(0x38b6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7e10, gbc.sp());
        EXPECT(0x38b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02D2
        gbc.setState(0x77ca, 0x3d65, 0x5290, 0x6906, 0xe28b, 0xc325, 0x0, 0x1);
        gbc.writeMem(0x77ca, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3d65, gbc.sp());
        EXPECT(0x77cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02D3
        gbc.setState(0x58f9, 0x8da6, 0x290, 0xfa9f, 0x9665, 0x8df8, 0x0, 0x0);
        gbc.writeMem(0x58f9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8da6, gbc.sp());
        EXPECT(0x58fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02D4
        gbc.setState(0x7ce7, 0x939e, 0x6af0, 0xce37, 0xc2f4, 0x85d0, 0x1, 0x1);
        gbc.writeMem(0x7ce7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x939e, gbc.sp());
        EXPECT(0x7ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02D5
        gbc.setState(0xe123, 0xa0af, 0x4890, 0x7a9a, 0x29b5, 0xa38e, 0x0, 0x1);
        gbc.writeMem(0xe123, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa0af, gbc.sp());
        EXPECT(0xe125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe123));
        EXPECT(0xd8, gbc.readMem(0xe124));
        // CB D8 02D6
        gbc.setState(0x67a6, 0xe374, 0xbc20, 0x98a3, 0x5e9c, 0xafde, 0x1, 0x1);
        gbc.writeMem(0x67a6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe374, gbc.sp());
        EXPECT(0x67a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02D7
        gbc.setState(0x5293, 0xea5, 0x7d70, 0xd5bd, 0x847, 0x9f20, 0x1, 0x1);
        gbc.writeMem(0x5293, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xea5, gbc.sp());
        EXPECT(0x5295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02D8
        gbc.setState(0xdd6, 0x643d, 0xb2d0, 0x963b, 0x9c67, 0xeeda, 0x1, 0x0);
        gbc.writeMem(0xdd6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x643d, gbc.sp());
        EXPECT(0xdd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02DA
        gbc.setState(0x75e7, 0x9cf9, 0x66e0, 0xa421, 0x5e69, 0x9a3a, 0x1, 0x0);
        gbc.writeMem(0x75e7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9cf9, gbc.sp());
        EXPECT(0x75e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02DB
        gbc.setState(0x69ed, 0x5f2b, 0x2bc0, 0x5bb9, 0x95e8, 0x282c, 0x0, 0x0);
        gbc.writeMem(0x69ed, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5f2b, gbc.sp());
        EXPECT(0x69ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02DC
        gbc.setState(0xc73a, 0x37cd, 0xc9d0, 0xb99, 0x14a, 0x6887, 0x1, 0x0);
        gbc.writeMem(0xc73a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x37cd, gbc.sp());
        EXPECT(0xc73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc73a));
        EXPECT(0xd8, gbc.readMem(0xc73b));
        // CB D8 02DE
        gbc.setState(0x8f63, 0xe24, 0x7660, 0xbd44, 0x650e, 0xd95f, 0x0, 0x0);
        gbc.writeMem(0x8f63, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe24, gbc.sp());
        EXPECT(0x8f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f63));
        EXPECT(0xd8, gbc.readMem(0x8f64));
        // CB D8 02DF
        gbc.setState(0xf1c, 0x8867, 0x4030, 0x675f, 0xc5ad, 0x4b1d, 0x0, 0x1);
        gbc.writeMem(0xf1c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8867, gbc.sp());
        EXPECT(0xf1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02E0
        gbc.setState(0x3ba3, 0x337, 0x5d40, 0x6387, 0x8ff4, 0xa2d8, 0x1, 0x0);
        gbc.writeMem(0x3ba3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x337, gbc.sp());
        EXPECT(0x3ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02E1
        gbc.setState(0x3834, 0xeead, 0x1f90, 0x8e58, 0x777e, 0x9709, 0x1, 0x0);
        gbc.writeMem(0x3834, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xeead, gbc.sp());
        EXPECT(0x3836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02E2
        gbc.setState(0x6b8a, 0xb6eb, 0xf380, 0x25bc, 0x79b8, 0xea26, 0x0, 0x0);
        gbc.writeMem(0x6b8a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb6eb, gbc.sp());
        EXPECT(0x6b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02E3
        gbc.setState(0x942a, 0xeebb, 0x2940, 0x2286, 0xe9dd, 0xc86b, 0x0, 0x0);
        gbc.writeMem(0x942a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xeebb, gbc.sp());
        EXPECT(0x942c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x942a));
        EXPECT(0xd8, gbc.readMem(0x942b));
        // CB D8 02E4
        gbc.setState(0x4934, 0xbefc, 0x1210, 0xe3db, 0x82d4, 0x11ff, 0x1, 0x1);
        gbc.writeMem(0x4934, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbefc, gbc.sp());
        EXPECT(0x4936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02E5
        gbc.setState(0x5cbd, 0xacf9, 0x19e0, 0xd97c, 0x79c1, 0xdccf, 0x0, 0x1);
        gbc.writeMem(0x5cbd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xacf9, gbc.sp());
        EXPECT(0x5cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02E6
        gbc.setState(0x24e8, 0x1f80, 0xec20, 0xdfdd, 0x9891, 0x5b82, 0x1, 0x0);
        gbc.writeMem(0x24e8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1f80, gbc.sp());
        EXPECT(0x24ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02E7
        gbc.setState(0x8e14, 0xa306, 0x32c0, 0xfc3b, 0xc362, 0xeef6, 0x1, 0x1);
        gbc.writeMem(0x8e14, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa306, gbc.sp());
        EXPECT(0x8e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e14));
        EXPECT(0xd8, gbc.readMem(0x8e15));
        // CB D8 02E8
        gbc.setState(0x5155, 0x94b3, 0xb160, 0x674c, 0x74d9, 0x680c, 0x0, 0x1);
        gbc.writeMem(0x5155, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x94b3, gbc.sp());
        EXPECT(0x5157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02E9
        gbc.setState(0xe2b7, 0x1620, 0xccb0, 0xd1f0, 0xf8be, 0xc85, 0x0, 0x0);
        gbc.writeMem(0xe2b7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1620, gbc.sp());
        EXPECT(0xe2b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b7));
        EXPECT(0xd8, gbc.readMem(0xe2b8));
        // CB D8 02EA
        gbc.setState(0xd2c4, 0x301f, 0x2fd0, 0x2ab, 0x7a3, 0x8582, 0x1, 0x0);
        gbc.writeMem(0xd2c4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x301f, gbc.sp());
        EXPECT(0xd2c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c4));
        EXPECT(0xd8, gbc.readMem(0xd2c5));
        // CB D8 02EB
        gbc.setState(0x9ccc, 0xa5e8, 0xaf90, 0x5968, 0x1e17, 0x3772, 0x0, 0x0);
        gbc.writeMem(0x9ccc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa5e8, gbc.sp());
        EXPECT(0x9cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ccc));
        EXPECT(0xd8, gbc.readMem(0x9ccd));
        // CB D8 02EC
        gbc.setState(0x5d63, 0xca38, 0x36d0, 0x2d08, 0x1c6b, 0xa2ec, 0x0, 0x1);
        gbc.writeMem(0x5d63, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xca38, gbc.sp());
        EXPECT(0x5d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02ED
        gbc.setState(0x4851, 0xbda6, 0x8020, 0xd2f0, 0xc85f, 0xcf1d, 0x1, 0x0);
        gbc.writeMem(0x4851, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbda6, gbc.sp());
        EXPECT(0x4853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02EE
        gbc.setState(0x1d15, 0xef00, 0x4680, 0xba2e, 0x605e, 0x41eb, 0x1, 0x0);
        gbc.writeMem(0x1d15, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xef00, gbc.sp());
        EXPECT(0x1d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02EF
        gbc.setState(0xd487, 0xd9bf, 0xf090, 0x6a2c, 0xf132, 0x4df4, 0x1, 0x0);
        gbc.writeMem(0xd487, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd9bf, gbc.sp());
        EXPECT(0xd489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd487));
        EXPECT(0xd8, gbc.readMem(0xd488));
        // CB D8 02F0
        gbc.setState(0x216, 0x33b6, 0x1f60, 0xfd0f, 0xceb8, 0x742a, 0x1, 0x0);
        gbc.writeMem(0x216, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x33b6, gbc.sp());
        EXPECT(0x218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02F1
        gbc.setState(0xe4bd, 0x3e4f, 0x44d0, 0x3f9d, 0xfd3, 0xd8d2, 0x1, 0x1);
        gbc.writeMem(0xe4bd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3e4f, gbc.sp());
        EXPECT(0xe4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4bd));
        EXPECT(0xd8, gbc.readMem(0xe4be));
        // CB D8 02F2
        gbc.setState(0x4a7d, 0x603d, 0x9c80, 0x29e8, 0x4df7, 0x9ff, 0x0, 0x1);
        gbc.writeMem(0x4a7d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x603d, gbc.sp());
        EXPECT(0x4a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 02F3
        gbc.setState(0x35a9, 0xc42b, 0xcfd0, 0x71ff, 0x1da2, 0xa18e, 0x0, 0x0);
        gbc.writeMem(0x35a9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc42b, gbc.sp());
        EXPECT(0x35ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02F4
        gbc.setState(0x9a89, 0x54b6, 0x32d0, 0xc1f, 0x785d, 0x781b, 0x1, 0x0);
        gbc.writeMem(0x9a89, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x54b6, gbc.sp());
        EXPECT(0x9a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a89));
        EXPECT(0xd8, gbc.readMem(0x9a8a));
        // CB D8 02F5
        gbc.setState(0xbbd3, 0xa644, 0x4fb0, 0x3b9c, 0xedd9, 0x1494, 0x1, 0x1);
        gbc.writeMem(0xbbd3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa644, gbc.sp());
        EXPECT(0xbbd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd3));
        EXPECT(0xd8, gbc.readMem(0xbbd4));
        // CB D8 02F6
        gbc.setState(0xdcc2, 0x2c43, 0x5d70, 0xc65e, 0xb8fe, 0x2fdc, 0x0, 0x0);
        gbc.writeMem(0xdcc2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2c43, gbc.sp());
        EXPECT(0xdcc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc2));
        EXPECT(0xd8, gbc.readMem(0xdcc3));
        // CB D8 02F7
        gbc.setState(0xb886, 0x90c2, 0x7070, 0x25dc, 0xc8a9, 0xc45c, 0x1, 0x0);
        gbc.writeMem(0xb886, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x90c2, gbc.sp());
        EXPECT(0xb888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb886));
        EXPECT(0xd8, gbc.readMem(0xb887));
        // CB D8 02F8
        gbc.setState(0x3917, 0xff6b, 0xbb10, 0x2637, 0xaf9f, 0xb76f, 0x0, 0x1);
        gbc.writeMem(0x3917, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xff6b, gbc.sp());
        EXPECT(0x3919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02F9
        gbc.setState(0x7156, 0x26ae, 0x6ed0, 0xe2fb, 0x2831, 0xbc3e, 0x1, 0x1);
        gbc.writeMem(0x7156, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x26ae, gbc.sp());
        EXPECT(0x7158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02FA
        gbc.setState(0x3d55, 0x92f, 0xb7b0, 0x5787, 0x6d36, 0x168, 0x0, 0x1);
        gbc.writeMem(0x3d55, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x92f, gbc.sp());
        EXPECT(0x3d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 02FB
        gbc.setState(0x997a, 0x4abc, 0x7640, 0xa073, 0x1aca, 0xb7df, 0x1, 0x1);
        gbc.writeMem(0x997a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4abc, gbc.sp());
        EXPECT(0x997c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997a));
        EXPECT(0xd8, gbc.readMem(0x997b));
        // CB D8 02FC
        gbc.setState(0xa35d, 0x4df5, 0x4550, 0x441, 0x862e, 0x7998, 0x1, 0x0);
        gbc.writeMem(0xa35d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4df5, gbc.sp());
        EXPECT(0xa35f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa35d));
        EXPECT(0xd8, gbc.readMem(0xa35e));
        // CB D8 02FD
        gbc.setState(0xdddd, 0xed32, 0xe060, 0xd7c5, 0x70d9, 0x562b, 0x0, 0x0);
        gbc.writeMem(0xdddd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xed32, gbc.sp());
        EXPECT(0xdddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdddd));
        EXPECT(0xd8, gbc.readMem(0xddde));
        // CB D8 02FE
        gbc.setState(0xb7d9, 0xdb6b, 0x8300, 0x21cc, 0xe1a7, 0xff10, 0x1, 0x1);
        gbc.writeMem(0xb7d9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdb6b, gbc.sp());
        EXPECT(0xb7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d9));
        EXPECT(0xd8, gbc.readMem(0xb7da));
        // CB D8 02FF
        gbc.setState(0x5189, 0x3844, 0x96a0, 0x64e2, 0xe839, 0xb9ec, 0x0, 0x0);
        gbc.writeMem(0x5189, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3844, gbc.sp());
        EXPECT(0x518b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0300
        gbc.setState(0x466b, 0xa067, 0xd160, 0x27a9, 0x63d8, 0xaa6f, 0x1, 0x0);
        gbc.writeMem(0x466b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa067, gbc.sp());
        EXPECT(0x466d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0301
        gbc.setState(0xec8c, 0x68c, 0xbef0, 0xc211, 0x4566, 0x33b5, 0x0, 0x1);
        gbc.writeMem(0xec8c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x68c, gbc.sp());
        EXPECT(0xec8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec8c));
        EXPECT(0xd8, gbc.readMem(0xec8d));
        // CB D8 0302
        gbc.setState(0x4954, 0xbc49, 0xcd90, 0x8209, 0x5850, 0xf97, 0x0, 0x0);
        gbc.writeMem(0x4954, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbc49, gbc.sp());
        EXPECT(0x4956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0303
        gbc.setState(0x95f7, 0x53ac, 0xdea0, 0x10a0, 0x994a, 0x721, 0x0, 0x1);
        gbc.writeMem(0x95f7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x53ac, gbc.sp());
        EXPECT(0x95f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f7));
        EXPECT(0xd8, gbc.readMem(0x95f8));
        // CB D8 0304
        gbc.setState(0x17a9, 0xeac9, 0x7490, 0xd2e2, 0x3bfc, 0x2fe9, 0x1, 0x0);
        gbc.writeMem(0x17a9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xeac9, gbc.sp());
        EXPECT(0x17ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0305
        gbc.setState(0x768d, 0x1e77, 0x9310, 0x306, 0x9e83, 0x8368, 0x1, 0x0);
        gbc.writeMem(0x768d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1e77, gbc.sp());
        EXPECT(0x768f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0306
        gbc.setState(0xcff2, 0xd360, 0x8890, 0x457e, 0xd547, 0x7307, 0x0, 0x0);
        gbc.writeMem(0xcff2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd360, gbc.sp());
        EXPECT(0xcff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff2));
        EXPECT(0xd8, gbc.readMem(0xcff3));
        // CB D8 0307
        gbc.setState(0x8318, 0xac7f, 0x2e0, 0xb398, 0xad6f, 0x83fb, 0x0, 0x0);
        gbc.writeMem(0x8318, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xac7f, gbc.sp());
        EXPECT(0x831a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8318));
        EXPECT(0xd8, gbc.readMem(0x8319));
        // CB D8 0308
        gbc.setState(0xc8dc, 0xfe4, 0x540, 0x5fb0, 0xe16b, 0xdd57, 0x0, 0x1);
        gbc.writeMem(0xc8dc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfe4, gbc.sp());
        EXPECT(0xc8de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8dc));
        EXPECT(0xd8, gbc.readMem(0xc8dd));
        // CB D8 0309
        gbc.setState(0x3ba3, 0xd44c, 0xd7d0, 0x3f42, 0xa661, 0xb83, 0x0, 0x1);
        gbc.writeMem(0x3ba3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd44c, gbc.sp());
        EXPECT(0x3ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 030A
        gbc.setState(0x5dbb, 0x8b85, 0x7010, 0x3b45, 0x41ac, 0xce24, 0x0, 0x0);
        gbc.writeMem(0x5dbb, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8b85, gbc.sp());
        EXPECT(0x5dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 030B
        gbc.setState(0x3ca8, 0xdd57, 0x1810, 0x8487, 0x402a, 0xede1, 0x0, 0x1);
        gbc.writeMem(0x3ca8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdd57, gbc.sp());
        EXPECT(0x3caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 030C
        gbc.setState(0x55b2, 0xba4b, 0x9e30, 0x5495, 0xe454, 0xe239, 0x0, 0x1);
        gbc.writeMem(0x55b2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xba4b, gbc.sp());
        EXPECT(0x55b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 030D
        gbc.setState(0x2407, 0x3be5, 0xadb0, 0xf59f, 0xbd23, 0xbee2, 0x0, 0x1);
        gbc.writeMem(0x2407, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3be5, gbc.sp());
        EXPECT(0x2409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 030E
        gbc.setState(0x1c11, 0x4179, 0xb4b0, 0xe7b9, 0x9f8b, 0x2070, 0x0, 0x1);
        gbc.writeMem(0x1c11, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4179, gbc.sp());
        EXPECT(0x1c13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 030F
        gbc.setState(0x6730, 0xa2ff, 0xd080, 0x4800, 0xf479, 0xd473, 0x0, 0x1);
        gbc.writeMem(0x6730, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa2ff, gbc.sp());
        EXPECT(0x6732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0310
        gbc.setState(0xd862, 0xe1a3, 0x6ea0, 0x38f5, 0x24f8, 0xed43, 0x0, 0x1);
        gbc.writeMem(0xd862, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe1a3, gbc.sp());
        EXPECT(0xd864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd862));
        EXPECT(0xd8, gbc.readMem(0xd863));
        // CB D8 0312
        gbc.setState(0x1ce2, 0xd119, 0xd6f0, 0xd3b8, 0x63b3, 0xc4dd, 0x0, 0x0);
        gbc.writeMem(0x1ce2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd119, gbc.sp());
        EXPECT(0x1ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0313
        gbc.setState(0x900b, 0x72a2, 0xb370, 0x22, 0x24d8, 0x15fa, 0x0, 0x1);
        gbc.writeMem(0x900b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x72a2, gbc.sp());
        EXPECT(0x900d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x900b));
        EXPECT(0xd8, gbc.readMem(0x900c));
        // CB D8 0314
        gbc.setState(0x6a03, 0xc8e1, 0xe380, 0x88c3, 0x98e5, 0x95e4, 0x0, 0x0);
        gbc.writeMem(0x6a03, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc8e1, gbc.sp());
        EXPECT(0x6a05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0315
        gbc.setState(0x9103, 0xcd9b, 0x5ad0, 0xe578, 0x6728, 0xa821, 0x1, 0x1);
        gbc.writeMem(0x9103, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcd9b, gbc.sp());
        EXPECT(0x9105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9103));
        EXPECT(0xd8, gbc.readMem(0x9104));
        // CB D8 0316
        gbc.setState(0x70e1, 0xa94a, 0xc280, 0xe8f7, 0xb87e, 0x60be, 0x0, 0x0);
        gbc.writeMem(0x70e1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa94a, gbc.sp());
        EXPECT(0x70e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0317
        gbc.setState(0xe3bd, 0x7cb8, 0x8740, 0x2644, 0xd699, 0x98c2, 0x1, 0x0);
        gbc.writeMem(0xe3bd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7cb8, gbc.sp());
        EXPECT(0xe3bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3bd));
        EXPECT(0xd8, gbc.readMem(0xe3be));
        // CB D8 0318
        gbc.setState(0x285a, 0x5c94, 0xb250, 0xd5d2, 0xe7e8, 0x28d1, 0x0, 0x1);
        gbc.writeMem(0x285a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5c94, gbc.sp());
        EXPECT(0x285c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0319
        gbc.setState(0xd55e, 0xf725, 0x3340, 0x9b88, 0x9bef, 0xdf2f, 0x1, 0x0);
        gbc.writeMem(0xd55e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf725, gbc.sp());
        EXPECT(0xd560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd55e));
        EXPECT(0xd8, gbc.readMem(0xd55f));
        // CB D8 031B
        gbc.setState(0x3738, 0xbe04, 0xf5b0, 0x26e0, 0x872b, 0x5b6e, 0x0, 0x0);
        gbc.writeMem(0x3738, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbe04, gbc.sp());
        EXPECT(0x373a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 031C
        gbc.setState(0xa56e, 0xd87f, 0xbba0, 0x2ab0, 0xd412, 0x4e34, 0x1, 0x0);
        gbc.writeMem(0xa56e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd87f, gbc.sp());
        EXPECT(0xa570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa56e));
        EXPECT(0xd8, gbc.readMem(0xa56f));
        // CB D8 031D
        gbc.setState(0xe08d, 0x3342, 0x8590, 0x2785, 0x9cbe, 0x6fce, 0x1, 0x0);
        gbc.writeMem(0xe08d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3342, gbc.sp());
        EXPECT(0xe08f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe08d));
        EXPECT(0xd8, gbc.readMem(0xe08e));
        // CB D8 031E
        gbc.setState(0xd317, 0x1914, 0x3ec0, 0xe944, 0x1fd5, 0x68ec, 0x0, 0x0);
        gbc.writeMem(0xd317, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1914, gbc.sp());
        EXPECT(0xd319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd317));
        EXPECT(0xd8, gbc.readMem(0xd318));
        // CB D8 031F
        gbc.setState(0xdcb8, 0x4033, 0x7a30, 0x76e9, 0xcef7, 0xd061, 0x1, 0x1);
        gbc.writeMem(0xdcb8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4033, gbc.sp());
        EXPECT(0xdcba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb8));
        EXPECT(0xd8, gbc.readMem(0xdcb9));
        // CB D8 0320
        gbc.setState(0x6122, 0x90b2, 0x130, 0xe6e4, 0x5871, 0x7b9, 0x1, 0x1);
        gbc.writeMem(0x6122, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x90b2, gbc.sp());
        EXPECT(0x6124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0321
        gbc.setState(0x474, 0x8483, 0x530, 0xb48a, 0xe6cd, 0x753d, 0x0, 0x0);
        gbc.writeMem(0x474, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8483, gbc.sp());
        EXPECT(0x476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0322
        gbc.setState(0x1a2f, 0x74ee, 0xc770, 0x35d2, 0xa09f, 0x8704, 0x0, 0x0);
        gbc.writeMem(0x1a2f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x74ee, gbc.sp());
        EXPECT(0x1a31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0323
        gbc.setState(0xedd0, 0xe723, 0xc800, 0xe5ae, 0x530d, 0x8e5c, 0x1, 0x1);
        gbc.writeMem(0xedd0, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe723, gbc.sp());
        EXPECT(0xedd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd0));
        EXPECT(0xd8, gbc.readMem(0xedd1));
        // CB D8 0326
        gbc.setState(0x6038, 0x5e1d, 0xa8f0, 0x377c, 0x5e56, 0xb8de, 0x1, 0x0);
        gbc.writeMem(0x6038, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5e1d, gbc.sp());
        EXPECT(0x603a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0327
        gbc.setState(0x6b9c, 0x773c, 0x450, 0xf2ad, 0x56e5, 0x531b, 0x0, 0x1);
        gbc.writeMem(0x6b9c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x773c, gbc.sp());
        EXPECT(0x6b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0329
        gbc.setState(0x40bc, 0xf86e, 0x9ce0, 0xe74, 0xae4b, 0xe7c9, 0x1, 0x1);
        gbc.writeMem(0x40bc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf86e, gbc.sp());
        EXPECT(0x40be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 032A
        gbc.setState(0xa541, 0x6f33, 0x8320, 0x7819, 0x9294, 0x30a7, 0x1, 0x1);
        gbc.writeMem(0xa541, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6f33, gbc.sp());
        EXPECT(0xa543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa541));
        EXPECT(0xd8, gbc.readMem(0xa542));
        // CB D8 032B
        gbc.setState(0xe6f2, 0xcd70, 0xd1d0, 0x3cbb, 0xdbdc, 0x3efd, 0x1, 0x1);
        gbc.writeMem(0xe6f2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcd70, gbc.sp());
        EXPECT(0xe6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f2));
        EXPECT(0xd8, gbc.readMem(0xe6f3));
        // CB D8 032C
        gbc.setState(0xd646, 0xc2f4, 0x8990, 0x1644, 0x302c, 0xfc16, 0x0, 0x1);
        gbc.writeMem(0xd646, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc2f4, gbc.sp());
        EXPECT(0xd648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd646));
        EXPECT(0xd8, gbc.readMem(0xd647));
        // CB D8 032D
        gbc.setState(0xa38b, 0xe9f3, 0xf370, 0xd7a, 0x17be, 0xe140, 0x0, 0x1);
        gbc.writeMem(0xa38b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe9f3, gbc.sp());
        EXPECT(0xa38d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa38b));
        EXPECT(0xd8, gbc.readMem(0xa38c));
        // CB D8 032E
        gbc.setState(0x5dd8, 0xb7a4, 0xf30, 0x4f56, 0x5468, 0xe563, 0x1, 0x0);
        gbc.writeMem(0x5dd8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb7a4, gbc.sp());
        EXPECT(0x5dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 032F
        gbc.setState(0x2056, 0xd3a7, 0x5dd0, 0x2f03, 0x1740, 0x708, 0x1, 0x1);
        gbc.writeMem(0x2056, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd3a7, gbc.sp());
        EXPECT(0x2058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0330
        gbc.setState(0xbcb9, 0xbbc5, 0x3bb0, 0x5d57, 0x4924, 0xa58f, 0x0, 0x0);
        gbc.writeMem(0xbcb9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbbc5, gbc.sp());
        EXPECT(0xbcbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb9));
        EXPECT(0xd8, gbc.readMem(0xbcba));
        // CB D8 0331
        gbc.setState(0x418f, 0x5ca, 0xd0e0, 0xb3eb, 0x8fdc, 0x972e, 0x0, 0x0);
        gbc.writeMem(0x418f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5ca, gbc.sp());
        EXPECT(0x4191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0332
        gbc.setState(0x896, 0x571, 0xe120, 0x7b33, 0x3281, 0xa45f, 0x0, 0x1);
        gbc.writeMem(0x896, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x571, gbc.sp());
        EXPECT(0x898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0333
        gbc.setState(0x975d, 0x9bcb, 0x95c0, 0xbacf, 0x1f45, 0xe78b, 0x0, 0x1);
        gbc.writeMem(0x975d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9bcb, gbc.sp());
        EXPECT(0x975f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x975d));
        EXPECT(0xd8, gbc.readMem(0x975e));
        // CB D8 0336
        gbc.setState(0xf37, 0xcde, 0x8aa0, 0xf581, 0xbe22, 0x2618, 0x0, 0x1);
        gbc.writeMem(0xf37, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xcde, gbc.sp());
        EXPECT(0xf39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0337
        gbc.setState(0x6e41, 0xb1ff, 0x1250, 0xf393, 0x983, 0x3681, 0x0, 0x0);
        gbc.writeMem(0x6e41, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb1ff, gbc.sp());
        EXPECT(0x6e43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0338
        gbc.setState(0x6d71, 0x2e39, 0x8d0, 0xf112, 0xbc2e, 0xe054, 0x0, 0x0);
        gbc.writeMem(0x6d71, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2e39, gbc.sp());
        EXPECT(0x6d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 033A
        gbc.setState(0x6dcd, 0x4b3b, 0x3eb0, 0xfaa0, 0x8ebf, 0x7b6b, 0x0, 0x0);
        gbc.writeMem(0x6dcd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4b3b, gbc.sp());
        EXPECT(0x6dcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 033B
        gbc.setState(0x93f7, 0x74a2, 0xc8a0, 0xa3ce, 0xb7cc, 0xb881, 0x1, 0x0);
        gbc.writeMem(0x93f7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x74a2, gbc.sp());
        EXPECT(0x93f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f7));
        EXPECT(0xd8, gbc.readMem(0x93f8));
        // CB D8 033C
        gbc.setState(0xb2eb, 0x9763, 0x3180, 0xcaf3, 0x60, 0xdb08, 0x1, 0x1);
        gbc.writeMem(0xb2eb, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9763, gbc.sp());
        EXPECT(0xb2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2eb));
        EXPECT(0xd8, gbc.readMem(0xb2ec));
        // CB D8 033D
        gbc.setState(0x8437, 0xd64a, 0x5750, 0x1de8, 0x9ce3, 0xeacf, 0x0, 0x1);
        gbc.writeMem(0x8437, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd64a, gbc.sp());
        EXPECT(0x8439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8437));
        EXPECT(0xd8, gbc.readMem(0x8438));
        // CB D8 033E
        gbc.setState(0x1b29, 0x81ca, 0xe7d0, 0x42de, 0x62b3, 0x3057, 0x0, 0x1);
        gbc.writeMem(0x1b29, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x81ca, gbc.sp());
        EXPECT(0x1b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 033F
        gbc.setState(0xc123, 0xc997, 0x1180, 0xd901, 0x68a, 0xc747, 0x0, 0x1);
        gbc.writeMem(0xc123, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc997, gbc.sp());
        EXPECT(0xc125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc123));
        EXPECT(0xd8, gbc.readMem(0xc124));
        // CB D8 0340
        gbc.setState(0x1298, 0xc461, 0xe430, 0x1f93, 0x10fd, 0x3752, 0x0, 0x1);
        gbc.writeMem(0x1298, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc461, gbc.sp());
        EXPECT(0x129a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0342
        gbc.setState(0xc9c7, 0xd852, 0x19b0, 0x6c59, 0x53e6, 0xfe0d, 0x0, 0x1);
        gbc.writeMem(0xc9c7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd852, gbc.sp());
        EXPECT(0xc9c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c7));
        EXPECT(0xd8, gbc.readMem(0xc9c8));
        // CB D8 0343
        gbc.setState(0x5f8e, 0xbe2f, 0xf60, 0xf450, 0xa1b2, 0xc21f, 0x1, 0x1);
        gbc.writeMem(0x5f8e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbe2f, gbc.sp());
        EXPECT(0x5f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0344
        gbc.setState(0x87a6, 0x16c, 0xaf0, 0x8720, 0x618e, 0xcd6f, 0x0, 0x0);
        gbc.writeMem(0x87a6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x16c, gbc.sp());
        EXPECT(0x87a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a6));
        EXPECT(0xd8, gbc.readMem(0x87a7));
        // CB D8 0345
        gbc.setState(0xd71f, 0xad21, 0xd1d0, 0x6913, 0x6ca2, 0xf0f0, 0x0, 0x0);
        gbc.writeMem(0xd71f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xad21, gbc.sp());
        EXPECT(0xd721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71f));
        EXPECT(0xd8, gbc.readMem(0xd720));
        // CB D8 0347
        gbc.setState(0x58d, 0x374, 0x5220, 0xbadf, 0x5d9a, 0xc466, 0x0, 0x0);
        gbc.writeMem(0x58d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x374, gbc.sp());
        EXPECT(0x58f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0348
        gbc.setState(0x202e, 0xee37, 0x800, 0xf71c, 0xf34b, 0x4206, 0x0, 0x0);
        gbc.writeMem(0x202e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xee37, gbc.sp());
        EXPECT(0x2030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0349
        gbc.setState(0x7004, 0x404, 0x2fb0, 0x899f, 0xf8b2, 0xb568, 0x0, 0x1);
        gbc.writeMem(0x7004, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x404, gbc.sp());
        EXPECT(0x7006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 034A
        gbc.setState(0x268, 0x0, 0x2520, 0xff28, 0xeab7, 0xa14c, 0x1, 0x0);
        gbc.writeMem(0x268, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x0, gbc.sp());
        EXPECT(0x26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 034B
        gbc.setState(0x6191, 0x77ee, 0x6580, 0x1028, 0x3e2f, 0xb4a6, 0x0, 0x0);
        gbc.writeMem(0x6191, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x77ee, gbc.sp());
        EXPECT(0x6193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 034C
        gbc.setState(0x9cfd, 0x6777, 0xfbc0, 0x4052, 0x2103, 0x1d32, 0x1, 0x0);
        gbc.writeMem(0x9cfd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6777, gbc.sp());
        EXPECT(0x9cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cfd));
        EXPECT(0xd8, gbc.readMem(0x9cfe));
        // CB D8 034D
        gbc.setState(0x5235, 0x9f67, 0x1270, 0xf156, 0x836f, 0x6ecf, 0x1, 0x0);
        gbc.writeMem(0x5235, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9f67, gbc.sp());
        EXPECT(0x5237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 034E
        gbc.setState(0x8049, 0x138f, 0x6310, 0xbded, 0xe288, 0x25c5, 0x0, 0x1);
        gbc.writeMem(0x8049, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x138f, gbc.sp());
        EXPECT(0x804b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8049));
        EXPECT(0xd8, gbc.readMem(0x804a));
        // CB D8 034F
        gbc.setState(0xb0c7, 0xf427, 0x7600, 0xd65a, 0xc7de, 0xbaa8, 0x0, 0x0);
        gbc.writeMem(0xb0c7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf427, gbc.sp());
        EXPECT(0xb0c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0c7));
        EXPECT(0xd8, gbc.readMem(0xb0c8));
        // CB D8 0350
        gbc.setState(0xbfae, 0xc675, 0xa5f0, 0xc8c7, 0xbfc1, 0xa436, 0x1, 0x0);
        gbc.writeMem(0xbfae, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc675, gbc.sp());
        EXPECT(0xbfb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfae));
        EXPECT(0xd8, gbc.readMem(0xbfaf));
        // CB D8 0351
        gbc.setState(0x61e3, 0x3018, 0x5be0, 0xc0ab, 0x6171, 0x1fd7, 0x1, 0x1);
        gbc.writeMem(0x61e3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3018, gbc.sp());
        EXPECT(0x61e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0352
        gbc.setState(0x2e27, 0x5055, 0x7270, 0x2cb9, 0xe73a, 0x5be5, 0x0, 0x1);
        gbc.writeMem(0x2e27, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5055, gbc.sp());
        EXPECT(0x2e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0353
        gbc.setState(0xba3d, 0x6202, 0x5820, 0xee41, 0x51b7, 0xe641, 0x0, 0x0);
        gbc.writeMem(0xba3d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6202, gbc.sp());
        EXPECT(0xba3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3d));
        EXPECT(0xd8, gbc.readMem(0xba3e));
        // CB D8 0354
        gbc.setState(0xa086, 0x9bfd, 0x67f0, 0x6b2f, 0xabda, 0x285e, 0x1, 0x1);
        gbc.writeMem(0xa086, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9bfd, gbc.sp());
        EXPECT(0xa088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa086));
        EXPECT(0xd8, gbc.readMem(0xa087));
        // CB D8 0355
        gbc.setState(0x2b3e, 0xaf85, 0xad90, 0x8d34, 0xaa39, 0x3053, 0x0, 0x0);
        gbc.writeMem(0x2b3e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xaf85, gbc.sp());
        EXPECT(0x2b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0356
        gbc.setState(0x89cc, 0xd77d, 0x2c60, 0x53f2, 0x6810, 0x90c9, 0x1, 0x1);
        gbc.writeMem(0x89cc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd77d, gbc.sp());
        EXPECT(0x89ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89cc));
        EXPECT(0xd8, gbc.readMem(0x89cd));
        // CB D8 0357
        gbc.setState(0xbd29, 0xea8, 0x13f0, 0xae35, 0x1119, 0xb817, 0x0, 0x0);
        gbc.writeMem(0xbd29, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xea8, gbc.sp());
        EXPECT(0xbd2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd29));
        EXPECT(0xd8, gbc.readMem(0xbd2a));
        // CB D8 0358
        gbc.setState(0x2bdf, 0x6af1, 0xcc60, 0xf813, 0xe575, 0x7506, 0x1, 0x0);
        gbc.writeMem(0x2bdf, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6af1, gbc.sp());
        EXPECT(0x2be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0359
        gbc.setState(0x5c57, 0xeacc, 0xb690, 0xecdd, 0xd4fc, 0x2d91, 0x0, 0x1);
        gbc.writeMem(0x5c57, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xeacc, gbc.sp());
        EXPECT(0x5c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 035A
        gbc.setState(0x5cb4, 0x6e17, 0x8ce0, 0x245b, 0xcd15, 0x10e0, 0x0, 0x0);
        gbc.writeMem(0x5cb4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6e17, gbc.sp());
        EXPECT(0x5cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 035B
        gbc.setState(0xd6d, 0xb235, 0x630, 0xa820, 0xa210, 0xffc5, 0x1, 0x0);
        gbc.writeMem(0xd6d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb235, gbc.sp());
        EXPECT(0xd6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 035C
        gbc.setState(0x945b, 0xee80, 0x91b0, 0x22c3, 0xdcd, 0x50ad, 0x0, 0x0);
        gbc.writeMem(0x945b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xee80, gbc.sp());
        EXPECT(0x945d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945b));
        EXPECT(0xd8, gbc.readMem(0x945c));
        // CB D8 035E
        gbc.setState(0x2221, 0xf426, 0x8150, 0xc00d, 0xd60a, 0x2b32, 0x1, 0x1);
        gbc.writeMem(0x2221, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf426, gbc.sp());
        EXPECT(0x2223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0360
        gbc.setState(0xb2a2, 0x46eb, 0x6a30, 0x4cb6, 0x325d, 0xc743, 0x1, 0x1);
        gbc.writeMem(0xb2a2, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x46eb, gbc.sp());
        EXPECT(0xb2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a2));
        EXPECT(0xd8, gbc.readMem(0xb2a3));
        // CB D8 0361
        gbc.setState(0xca09, 0xacf2, 0xcef0, 0xe2fe, 0x7a98, 0x5664, 0x0, 0x1);
        gbc.writeMem(0xca09, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xacf2, gbc.sp());
        EXPECT(0xca0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca09));
        EXPECT(0xd8, gbc.readMem(0xca0a));
        // CB D8 0362
        gbc.setState(0xb298, 0x68a0, 0x9fc0, 0xf709, 0x7ef7, 0x8184, 0x1, 0x0);
        gbc.writeMem(0xb298, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x68a0, gbc.sp());
        EXPECT(0xb29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb298));
        EXPECT(0xd8, gbc.readMem(0xb299));
        // CB D8 0363
        gbc.setState(0xc10d, 0x4fab, 0xdf70, 0x82ba, 0x4590, 0x2eca, 0x1, 0x1);
        gbc.writeMem(0xc10d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4fab, gbc.sp());
        EXPECT(0xc10f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc10d));
        EXPECT(0xd8, gbc.readMem(0xc10e));
        // CB D8 0364
        gbc.setState(0x5ce1, 0x6a57, 0x6fe0, 0xe5d8, 0x592c, 0x7c5d, 0x1, 0x0);
        gbc.writeMem(0x5ce1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6a57, gbc.sp());
        EXPECT(0x5ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0365
        gbc.setState(0xa0af, 0xc673, 0xc600, 0x8cb4, 0xf222, 0x55c8, 0x0, 0x1);
        gbc.writeMem(0xa0af, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc673, gbc.sp());
        EXPECT(0xa0b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0af));
        EXPECT(0xd8, gbc.readMem(0xa0b0));
        // CB D8 0366
        gbc.setState(0x6733, 0x3abd, 0x6520, 0xf6af, 0xb1a2, 0x9304, 0x0, 0x1);
        gbc.writeMem(0x6733, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3abd, gbc.sp());
        EXPECT(0x6735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0367
        gbc.setState(0x750b, 0xdf1e, 0xcca0, 0x9f4c, 0xd8f1, 0xe288, 0x1, 0x1);
        gbc.writeMem(0x750b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdf1e, gbc.sp());
        EXPECT(0x750d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0368
        gbc.setState(0xde2b, 0x3de7, 0x9160, 0x3abc, 0x318, 0xd7df, 0x1, 0x1);
        gbc.writeMem(0xde2b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3de7, gbc.sp());
        EXPECT(0xde2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde2b));
        EXPECT(0xd8, gbc.readMem(0xde2c));
        // CB D8 0369
        gbc.setState(0x3d08, 0x9e1d, 0xbc10, 0x4d45, 0xf00e, 0x8208, 0x0, 0x1);
        gbc.writeMem(0x3d08, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9e1d, gbc.sp());
        EXPECT(0x3d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 036A
        gbc.setState(0x2c41, 0x23fc, 0x81c0, 0x9ea8, 0x6a6, 0xe739, 0x0, 0x1);
        gbc.writeMem(0x2c41, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x23fc, gbc.sp());
        EXPECT(0x2c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 036B
        gbc.setState(0x1231, 0xe703, 0x44f0, 0x6c52, 0x7469, 0x7243, 0x1, 0x1);
        gbc.writeMem(0x1231, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe703, gbc.sp());
        EXPECT(0x1233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 036C
        gbc.setState(0xc8d3, 0xaef1, 0x3e60, 0x2213, 0xb89f, 0xab3f, 0x1, 0x1);
        gbc.writeMem(0xc8d3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xaef1, gbc.sp());
        EXPECT(0xc8d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d3));
        EXPECT(0xd8, gbc.readMem(0xc8d4));
        // CB D8 036D
        gbc.setState(0xb7d8, 0x1a9b, 0xb940, 0x55b4, 0x73e8, 0x8e60, 0x1, 0x1);
        gbc.writeMem(0xb7d8, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1a9b, gbc.sp());
        EXPECT(0xb7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d8));
        EXPECT(0xd8, gbc.readMem(0xb7d9));
        // CB D8 036E
        gbc.setState(0x5650, 0x7c31, 0xa290, 0x85de, 0x6f9c, 0x504c, 0x1, 0x1);
        gbc.writeMem(0x5650, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7c31, gbc.sp());
        EXPECT(0x5652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 036F
        gbc.setState(0x1443, 0x7a6, 0xff50, 0xccf6, 0xe122, 0x1c3c, 0x0, 0x0);
        gbc.writeMem(0x1443, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7a6, gbc.sp());
        EXPECT(0x1445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0370
        gbc.setState(0xde62, 0xfe2a, 0x550, 0x4968, 0x577a, 0x9b09, 0x1, 0x0);
        gbc.writeMem(0xde62, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfe2a, gbc.sp());
        EXPECT(0xde64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde62));
        EXPECT(0xd8, gbc.readMem(0xde63));
        // CB D8 0371
        gbc.setState(0x7736, 0xd590, 0x4f90, 0x4bb9, 0x6eeb, 0xb9f8, 0x1, 0x1);
        gbc.writeMem(0x7736, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd590, gbc.sp());
        EXPECT(0x7738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0372
        gbc.setState(0x4ef7, 0x131b, 0x4100, 0x49d, 0xfe9, 0xa649, 0x1, 0x0);
        gbc.writeMem(0x4ef7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x131b, gbc.sp());
        EXPECT(0x4ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0373
        gbc.setState(0x1cd1, 0x52c9, 0xcca0, 0x24ad, 0x864b, 0x5e08, 0x0, 0x1);
        gbc.writeMem(0x1cd1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x52c9, gbc.sp());
        EXPECT(0x1cd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0374
        gbc.setState(0x3f7f, 0x99fe, 0xde40, 0x28db, 0xe1cf, 0xc809, 0x0, 0x1);
        gbc.writeMem(0x3f7f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x99fe, gbc.sp());
        EXPECT(0x3f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0375
        gbc.setState(0x6787, 0x64d0, 0x8ff0, 0x2dea, 0xb701, 0xa005, 0x0, 0x0);
        gbc.writeMem(0x6787, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x64d0, gbc.sp());
        EXPECT(0x6789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0377
        gbc.setState(0xc6e3, 0x8b1e, 0xbe90, 0x1a64, 0x467e, 0x98d0, 0x1, 0x1);
        gbc.writeMem(0xc6e3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8b1e, gbc.sp());
        EXPECT(0xc6e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e3));
        EXPECT(0xd8, gbc.readMem(0xc6e4));
        // CB D8 0378
        gbc.setState(0x509c, 0x2e31, 0x18f0, 0x160f, 0xfdaa, 0xa8e, 0x0, 0x1);
        gbc.writeMem(0x509c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2e31, gbc.sp());
        EXPECT(0x509e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0379
        gbc.setState(0xa3a6, 0x7afc, 0x3270, 0xe221, 0x4deb, 0xb7d8, 0x1, 0x0);
        gbc.writeMem(0xa3a6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7afc, gbc.sp());
        EXPECT(0xa3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a6));
        EXPECT(0xd8, gbc.readMem(0xa3a7));
        // CB D8 037A
        gbc.setState(0xe294, 0xbd2e, 0x1480, 0x8bcb, 0xb874, 0x9a32, 0x1, 0x0);
        gbc.writeMem(0xe294, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbd2e, gbc.sp());
        EXPECT(0xe296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe294));
        EXPECT(0xd8, gbc.readMem(0xe295));
        // CB D8 037B
        gbc.setState(0xad1b, 0xd48d, 0x9540, 0xc5f7, 0x2874, 0x5938, 0x1, 0x0);
        gbc.writeMem(0xad1b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd48d, gbc.sp());
        EXPECT(0xad1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad1b));
        EXPECT(0xd8, gbc.readMem(0xad1c));
        // CB D8 037C
        gbc.setState(0x2642, 0x58f4, 0x76f0, 0x97fb, 0x49cd, 0x348b, 0x0, 0x0);
        gbc.writeMem(0x2642, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x58f4, gbc.sp());
        EXPECT(0x2644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 037D
        gbc.setState(0xa265, 0x4fa7, 0x94e0, 0x716a, 0xadb0, 0xa42c, 0x0, 0x1);
        gbc.writeMem(0xa265, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4fa7, gbc.sp());
        EXPECT(0xa267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa265));
        EXPECT(0xd8, gbc.readMem(0xa266));
        // CB D8 037E
        gbc.setState(0xb429, 0xb402, 0x8770, 0x2da9, 0x1f3b, 0x8bb0, 0x0, 0x1);
        gbc.writeMem(0xb429, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb402, gbc.sp());
        EXPECT(0xb42b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb429));
        EXPECT(0xd8, gbc.readMem(0xb42a));
        // CB D8 037F
        gbc.setState(0x2ab5, 0xeaf8, 0xe260, 0x27e5, 0x32fb, 0x46c1, 0x1, 0x0);
        gbc.writeMem(0x2ab5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xeaf8, gbc.sp());
        EXPECT(0x2ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0381
        gbc.setState(0xd431, 0xcbbc, 0x6280, 0xd353, 0xcf5, 0x3b6b, 0x0, 0x0);
        gbc.writeMem(0xd431, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcbbc, gbc.sp());
        EXPECT(0xd433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd431));
        EXPECT(0xd8, gbc.readMem(0xd432));
        // CB D8 0383
        gbc.setState(0xe468, 0x2895, 0xf20, 0xecea, 0xa280, 0x6ace, 0x1, 0x0);
        gbc.writeMem(0xe468, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2895, gbc.sp());
        EXPECT(0xe46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe468));
        EXPECT(0xd8, gbc.readMem(0xe469));
        // CB D8 0384
        gbc.setState(0x864, 0x884c, 0xf3f0, 0x58a2, 0x2f8a, 0xa016, 0x0, 0x0);
        gbc.writeMem(0x864, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x884c, gbc.sp());
        EXPECT(0x866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0385
        gbc.setState(0xd8e9, 0x7f8f, 0x6c30, 0x9e76, 0xc16d, 0xc3aa, 0x1, 0x1);
        gbc.writeMem(0xd8e9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7f8f, gbc.sp());
        EXPECT(0xd8eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e9));
        EXPECT(0xd8, gbc.readMem(0xd8ea));
        // CB D8 0386
        gbc.setState(0xc1a9, 0xa4a2, 0xaa20, 0xd07e, 0xdbd3, 0xf5ed, 0x1, 0x0);
        gbc.writeMem(0xc1a9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa4a2, gbc.sp());
        EXPECT(0xc1ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a9));
        EXPECT(0xd8, gbc.readMem(0xc1aa));
        // CB D8 0387
        gbc.setState(0xa458, 0x8a7f, 0xbb30, 0xbf7c, 0x82e9, 0x79b1, 0x1, 0x1);
        gbc.writeMem(0xa458, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8a7f, gbc.sp());
        EXPECT(0xa45a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa458));
        EXPECT(0xd8, gbc.readMem(0xa459));
        // CB D8 0388
        gbc.setState(0x304e, 0x9993, 0x1f40, 0xff52, 0x642e, 0x2cb1, 0x0, 0x0);
        gbc.writeMem(0x304e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9993, gbc.sp());
        EXPECT(0x3050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0389
        gbc.setState(0xe6ac, 0x1190, 0x1290, 0xba8a, 0x84b4, 0x3214, 0x1, 0x1);
        gbc.writeMem(0xe6ac, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1190, gbc.sp());
        EXPECT(0xe6ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ac));
        EXPECT(0xd8, gbc.readMem(0xe6ad));
        // CB D8 038A
        gbc.setState(0xc771, 0x4e31, 0x7d20, 0x51ca, 0x67, 0x495f, 0x0, 0x1);
        gbc.writeMem(0xc771, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4e31, gbc.sp());
        EXPECT(0xc773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc771));
        EXPECT(0xd8, gbc.readMem(0xc772));
        // CB D8 038B
        gbc.setState(0x547c, 0x4ce0, 0xa3e0, 0x655e, 0xfd95, 0x161a, 0x0, 0x0);
        gbc.writeMem(0x547c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4ce0, gbc.sp());
        EXPECT(0x547e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 038C
        gbc.setState(0x7f6b, 0x56d2, 0xa450, 0x3dea, 0xc4ba, 0x3b43, 0x0, 0x1);
        gbc.writeMem(0x7f6b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x56d2, gbc.sp());
        EXPECT(0x7f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 038D
        gbc.setState(0x85c0, 0xb781, 0xe20, 0x8158, 0x8e00, 0x4875, 0x0, 0x0);
        gbc.writeMem(0x85c0, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb781, gbc.sp());
        EXPECT(0x85c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c0));
        EXPECT(0xd8, gbc.readMem(0x85c1));
        // CB D8 038E
        gbc.setState(0x1121, 0x196c, 0x7600, 0x30e2, 0xdcb4, 0x6623, 0x1, 0x0);
        gbc.writeMem(0x1121, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x196c, gbc.sp());
        EXPECT(0x1123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 038F
        gbc.setState(0x3a6c, 0x2c3e, 0x6b10, 0xbe70, 0xd28b, 0x46e3, 0x1, 0x0);
        gbc.writeMem(0x3a6c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2c3e, gbc.sp());
        EXPECT(0x3a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0391
        gbc.setState(0x5b4e, 0xf920, 0x1c70, 0xa6b9, 0xb091, 0x2b28, 0x1, 0x0);
        gbc.writeMem(0x5b4e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf920, gbc.sp());
        EXPECT(0x5b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0392
        gbc.setState(0x27ad, 0x4be2, 0x1620, 0x7b1b, 0x188f, 0xf3d8, 0x0, 0x1);
        gbc.writeMem(0x27ad, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4be2, gbc.sp());
        EXPECT(0x27af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0393
        gbc.setState(0x28ee, 0xac33, 0x1270, 0xbab1, 0x7a43, 0x41c2, 0x1, 0x0);
        gbc.writeMem(0x28ee, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xac33, gbc.sp());
        EXPECT(0x28f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0394
        gbc.setState(0x24f1, 0xaabc, 0xd9c0, 0x9e4f, 0x4e84, 0xa2ac, 0x0, 0x1);
        gbc.writeMem(0x24f1, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xaabc, gbc.sp());
        EXPECT(0x24f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 0395
        gbc.setState(0xbeb4, 0xce7e, 0x6ed0, 0x9c01, 0xb05d, 0x1d0f, 0x1, 0x0);
        gbc.writeMem(0xbeb4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xce7e, gbc.sp());
        EXPECT(0xbeb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb4));
        EXPECT(0xd8, gbc.readMem(0xbeb5));
        // CB D8 0396
        gbc.setState(0x72d3, 0xe661, 0x6bb0, 0x75d9, 0x772f, 0xf5e4, 0x1, 0x0);
        gbc.writeMem(0x72d3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe661, gbc.sp());
        EXPECT(0x72d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0397
        gbc.setState(0x2496, 0x6f7a, 0x2b90, 0x848d, 0x8514, 0xea43, 0x0, 0x0);
        gbc.writeMem(0x2496, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6f7a, gbc.sp());
        EXPECT(0x2498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0398
        gbc.setState(0x3ac9, 0xc1e8, 0x9f50, 0x480a, 0xad84, 0x3b0c, 0x1, 0x0);
        gbc.writeMem(0x3ac9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc1e8, gbc.sp());
        EXPECT(0x3acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 0399
        gbc.setState(0xa16b, 0x9bfb, 0xb810, 0x2df7, 0x9db7, 0x5e0f, 0x1, 0x1);
        gbc.writeMem(0xa16b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9bfb, gbc.sp());
        EXPECT(0xa16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa16b));
        EXPECT(0xd8, gbc.readMem(0xa16c));
        // CB D8 039A
        gbc.setState(0x9dd7, 0x3e5a, 0x8910, 0xc58d, 0xdfca, 0xe980, 0x1, 0x0);
        gbc.writeMem(0x9dd7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3e5a, gbc.sp());
        EXPECT(0x9dd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd7));
        EXPECT(0xd8, gbc.readMem(0x9dd8));
        // CB D8 039B
        gbc.setState(0x8038, 0xb131, 0x18d0, 0xc2b9, 0xe881, 0x907f, 0x0, 0x1);
        gbc.writeMem(0x8038, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb131, gbc.sp());
        EXPECT(0x803a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8038));
        EXPECT(0xd8, gbc.readMem(0x8039));
        // CB D8 039C
        gbc.setState(0xa0ca, 0x5dd2, 0xe910, 0x16e6, 0xd029, 0xbc6f, 0x0, 0x0);
        gbc.writeMem(0xa0ca, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5dd2, gbc.sp());
        EXPECT(0xa0cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ca));
        EXPECT(0xd8, gbc.readMem(0xa0cb));
        // CB D8 039D
        gbc.setState(0x36cd, 0xcc67, 0x14d0, 0x6491, 0x48b8, 0xc91e, 0x0, 0x0);
        gbc.writeMem(0x36cd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xcc67, gbc.sp());
        EXPECT(0x36cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 039E
        gbc.setState(0x76fa, 0xfa82, 0x7560, 0x5922, 0x88f4, 0xa27, 0x0, 0x0);
        gbc.writeMem(0x76fa, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfa82, gbc.sp());
        EXPECT(0x76fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 039F
        gbc.setState(0x5adb, 0xa8e7, 0xb1a0, 0xf31d, 0x249, 0x5054, 0x1, 0x1);
        gbc.writeMem(0x5adb, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa8e7, gbc.sp());
        EXPECT(0x5add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03A0
        gbc.setState(0x4621, 0xac37, 0xda30, 0xaa3c, 0xdede, 0x83fc, 0x1, 0x0);
        gbc.writeMem(0x4621, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xac37, gbc.sp());
        EXPECT(0x4623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03A1
        gbc.setState(0xcfec, 0x1caf, 0x71b0, 0x93e9, 0xeb01, 0xe9bb, 0x0, 0x1);
        gbc.writeMem(0xcfec, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1caf, gbc.sp());
        EXPECT(0xcfee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfec));
        EXPECT(0xd8, gbc.readMem(0xcfed));
        // CB D8 03A2
        gbc.setState(0x2ae7, 0x1a6, 0xeea0, 0x68fb, 0x4fad, 0x4d4, 0x1, 0x0);
        gbc.writeMem(0x2ae7, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1a6, gbc.sp());
        EXPECT(0x2ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03A3
        gbc.setState(0xaa97, 0x45f4, 0xec90, 0x84d6, 0xe024, 0x5934, 0x0, 0x1);
        gbc.writeMem(0xaa97, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x45f4, gbc.sp());
        EXPECT(0xaa99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa97));
        EXPECT(0xd8, gbc.readMem(0xaa98));
        // CB D8 03A4
        gbc.setState(0xdac, 0x104, 0x92f0, 0x8a2a, 0x3bb7, 0x408d, 0x0, 0x0);
        gbc.writeMem(0xdac, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x104, gbc.sp());
        EXPECT(0xdae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03A5
        gbc.setState(0xe0f, 0xfa94, 0xee60, 0xeaf0, 0x9e75, 0xd6e3, 0x0, 0x0);
        gbc.writeMem(0xe0f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfa94, gbc.sp());
        EXPECT(0xe11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03A6
        gbc.setState(0x6104, 0x27fd, 0xe940, 0xc54c, 0xcdd7, 0x67e1, 0x1, 0x1);
        gbc.writeMem(0x6104, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x27fd, gbc.sp());
        EXPECT(0x6106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03A7
        gbc.setState(0x8210, 0x9ca, 0xdfa0, 0x60e9, 0xd60d, 0x2bef, 0x1, 0x0);
        gbc.writeMem(0x8210, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9ca, gbc.sp());
        EXPECT(0x8212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8210));
        EXPECT(0xd8, gbc.readMem(0x8211));
        // CB D8 03A8
        gbc.setState(0x1f7c, 0xfa87, 0x4910, 0x9ec3, 0xf01e, 0x1d46, 0x0, 0x1);
        gbc.writeMem(0x1f7c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfa87, gbc.sp());
        EXPECT(0x1f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03A9
        gbc.setState(0x59be, 0xe4dc, 0x5a0, 0x6905, 0xfb8b, 0x587c, 0x1, 0x0);
        gbc.writeMem(0x59be, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe4dc, gbc.sp());
        EXPECT(0x59c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03AB
        gbc.setState(0xd8b9, 0x9a42, 0xaad0, 0x21e5, 0xf13b, 0x7af7, 0x1, 0x1);
        gbc.writeMem(0xd8b9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9a42, gbc.sp());
        EXPECT(0xd8bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b9));
        EXPECT(0xd8, gbc.readMem(0xd8ba));
        // CB D8 03AC
        gbc.setState(0x1df4, 0x2c73, 0xb390, 0xe9f5, 0x4d95, 0x114, 0x1, 0x1);
        gbc.writeMem(0x1df4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2c73, gbc.sp());
        EXPECT(0x1df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03AD
        gbc.setState(0x623f, 0x3a60, 0xa7e0, 0xab59, 0x32dc, 0x52e7, 0x0, 0x1);
        gbc.writeMem(0x623f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3a60, gbc.sp());
        EXPECT(0x6241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03AE
        gbc.setState(0x96f3, 0x943e, 0xf880, 0xf1dc, 0x4349, 0xfb0f, 0x0, 0x1);
        gbc.writeMem(0x96f3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x943e, gbc.sp());
        EXPECT(0x96f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f3));
        EXPECT(0xd8, gbc.readMem(0x96f4));
        // CB D8 03AF
        gbc.setState(0x833a, 0xafcf, 0xc0, 0x7fd0, 0x6d37, 0x4732, 0x1, 0x1);
        gbc.writeMem(0x833a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xafcf, gbc.sp());
        EXPECT(0x833c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x833a));
        EXPECT(0xd8, gbc.readMem(0x833b));
        // CB D8 03B0
        gbc.setState(0x9abd, 0x12bd, 0x8f50, 0x621d, 0x3513, 0x4149, 0x0, 0x1);
        gbc.writeMem(0x9abd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x12bd, gbc.sp());
        EXPECT(0x9abf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abd));
        EXPECT(0xd8, gbc.readMem(0x9abe));
        // CB D8 03B1
        gbc.setState(0x8f24, 0xb52c, 0x61c0, 0x90f4, 0x8c7f, 0x4b16, 0x0, 0x1);
        gbc.writeMem(0x8f24, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb52c, gbc.sp());
        EXPECT(0x8f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f24));
        EXPECT(0xd8, gbc.readMem(0x8f25));
        // CB D8 03B2
        gbc.setState(0x935f, 0xacde, 0x2610, 0xa9e3, 0xdccd, 0x6cec, 0x1, 0x1);
        gbc.writeMem(0x935f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xacde, gbc.sp());
        EXPECT(0x9361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x935f));
        EXPECT(0xd8, gbc.readMem(0x9360));
        // CB D8 03B3
        gbc.setState(0x35bf, 0xc654, 0x7560, 0x2855, 0x52dc, 0x2b4f, 0x1, 0x0);
        gbc.writeMem(0x35bf, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc654, gbc.sp());
        EXPECT(0x35c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03B4
        gbc.setState(0x46a4, 0xaa34, 0x4100, 0x9267, 0x157b, 0xa27, 0x0, 0x0);
        gbc.writeMem(0x46a4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xaa34, gbc.sp());
        EXPECT(0x46a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03B5
        gbc.setState(0x3ad6, 0xb1ab, 0x5bc0, 0x20f1, 0x25a8, 0x2fa, 0x0, 0x0);
        gbc.writeMem(0x3ad6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb1ab, gbc.sp());
        EXPECT(0x3ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03B6
        gbc.setState(0x702a, 0x1699, 0x8790, 0x3e33, 0xba6d, 0xf, 0x0, 0x1);
        gbc.writeMem(0x702a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1699, gbc.sp());
        EXPECT(0x702c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03B7
        gbc.setState(0x78c0, 0x285e, 0x7750, 0x9ae1, 0x8a93, 0xeee4, 0x0, 0x0);
        gbc.writeMem(0x78c0, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x285e, gbc.sp());
        EXPECT(0x78c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03B8
        gbc.setState(0x27de, 0xdd2c, 0xd5d0, 0x2a58, 0xf30, 0x4524, 0x0, 0x0);
        gbc.writeMem(0x27de, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdd2c, gbc.sp());
        EXPECT(0x27e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03B9
        gbc.setState(0xa57b, 0x8f9b, 0x7a00, 0xda67, 0x259f, 0x8df4, 0x1, 0x0);
        gbc.writeMem(0xa57b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8f9b, gbc.sp());
        EXPECT(0xa57d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa57b));
        EXPECT(0xd8, gbc.readMem(0xa57c));
        // CB D8 03BA
        gbc.setState(0x1896, 0xf2f2, 0xc6e0, 0x3125, 0x6a99, 0xba66, 0x1, 0x0);
        gbc.writeMem(0x1896, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf2f2, gbc.sp());
        EXPECT(0x1898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03BB
        gbc.setState(0xe652, 0x67bb, 0x4830, 0x2fbf, 0xf268, 0xf1a3, 0x1, 0x0);
        gbc.writeMem(0xe652, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x67bb, gbc.sp());
        EXPECT(0xe654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe652));
        EXPECT(0xd8, gbc.readMem(0xe653));
        // CB D8 03BC
        gbc.setState(0x208, 0xece5, 0xb8d0, 0x7c6f, 0xa7ac, 0xb9a9, 0x0, 0x0);
        gbc.writeMem(0x208, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xece5, gbc.sp());
        EXPECT(0x20a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03BD
        gbc.setState(0x8a7c, 0x17c9, 0x6870, 0x98c8, 0x896, 0x40d8, 0x0, 0x0);
        gbc.writeMem(0x8a7c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x17c9, gbc.sp());
        EXPECT(0x8a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a7c));
        EXPECT(0xd8, gbc.readMem(0x8a7d));
        // CB D8 03BE
        gbc.setState(0x8dcf, 0x9326, 0x2550, 0xc30b, 0x206e, 0x5cd0, 0x1, 0x0);
        gbc.writeMem(0x8dcf, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9326, gbc.sp());
        EXPECT(0x8dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dcf));
        EXPECT(0xd8, gbc.readMem(0x8dd0));
        // CB D8 03BF
        gbc.setState(0x110b, 0x17b2, 0x49d0, 0x5749, 0x77fe, 0x7f47, 0x1, 0x0);
        gbc.writeMem(0x110b, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x17b2, gbc.sp());
        EXPECT(0x110d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03C0
        gbc.setState(0x1ce3, 0x869f, 0xe010, 0x2558, 0x435b, 0xe9d3, 0x1, 0x1);
        gbc.writeMem(0x1ce3, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x869f, gbc.sp());
        EXPECT(0x1ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03C1
        gbc.setState(0x4cf5, 0xd1c1, 0x8360, 0xbb21, 0xf1f5, 0xdcac, 0x0, 0x0);
        gbc.writeMem(0x4cf5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd1c1, gbc.sp());
        EXPECT(0x4cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03C2
        gbc.setState(0x5e9c, 0xd52, 0x4910, 0x67b9, 0x67cc, 0xf33, 0x1, 0x1);
        gbc.writeMem(0x5e9c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd52, gbc.sp());
        EXPECT(0x5e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03C3
        gbc.setState(0x5d8d, 0xf490, 0x79f0, 0x8490, 0xb7, 0x10d4, 0x0, 0x1);
        gbc.writeMem(0x5d8d, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf490, gbc.sp());
        EXPECT(0x5d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03C4
        gbc.setState(0x1e95, 0xc69, 0x49d0, 0xfd16, 0x6052, 0x17d0, 0x1, 0x0);
        gbc.writeMem(0x1e95, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc69, gbc.sp());
        EXPECT(0x1e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03C5
        gbc.setState(0x5945, 0xdddc, 0xd9e0, 0xdef2, 0xacdb, 0xcfc1, 0x1, 0x1);
        gbc.writeMem(0x5945, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xdddc, gbc.sp());
        EXPECT(0x5947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03C6
        gbc.setState(0x7c1e, 0xed7e, 0xf770, 0x56e3, 0x786f, 0x8822, 0x0, 0x1);
        gbc.writeMem(0x7c1e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xed7e, gbc.sp());
        EXPECT(0x7c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03C7
        gbc.setState(0x2fd6, 0xed81, 0x4870, 0x765, 0x3950, 0x4ea3, 0x0, 0x0);
        gbc.writeMem(0x2fd6, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xed81, gbc.sp());
        EXPECT(0x2fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03C9
        gbc.setState(0x7fca, 0xa8bf, 0xc360, 0xc634, 0x8d71, 0x692c, 0x1, 0x0);
        gbc.writeMem(0x7fca, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa8bf, gbc.sp());
        EXPECT(0x7fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03CA
        gbc.setState(0x779e, 0x8946, 0xb100, 0x85d6, 0x2931, 0xc5c3, 0x0, 0x0);
        gbc.writeMem(0x779e, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8946, gbc.sp());
        EXPECT(0x77a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03CB
        gbc.setState(0x236a, 0x80af, 0x7570, 0x901a, 0x6c7e, 0x2dca, 0x0, 0x0);
        gbc.writeMem(0x236a, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x80af, gbc.sp());
        EXPECT(0x236c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03CC
        gbc.setState(0x223c, 0x67e4, 0x6b20, 0xa227, 0xb76c, 0x9bd1, 0x1, 0x0);
        gbc.writeMem(0x223c, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x67e4, gbc.sp());
        EXPECT(0x223e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03CD
        gbc.setState(0xd363, 0xe3d5, 0x990, 0x56c9, 0x78c6, 0x3be0, 0x1, 0x0);
        gbc.writeMem(0xd363, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe3d5, gbc.sp());
        EXPECT(0xd365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd363));
        EXPECT(0xd8, gbc.readMem(0xd364));
        // CB D8 03CE
        gbc.setState(0x7de5, 0xc128, 0x6fb0, 0xa94a, 0x9b40, 0x77e2, 0x1, 0x1);
        gbc.writeMem(0x7de5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc128, gbc.sp());
        EXPECT(0x7de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03D0
        gbc.setState(0xc5a9, 0xea7, 0xc4e0, 0x838f, 0xa3ae, 0x8089, 0x0, 0x0);
        gbc.writeMem(0xc5a9, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xea7, gbc.sp());
        EXPECT(0xc5ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a9));
        EXPECT(0xd8, gbc.readMem(0xc5aa));
        // CB D8 03D1
        gbc.setState(0xb840, 0x5215, 0xd050, 0x3e7b, 0x9986, 0x8bb2, 0x0, 0x0);
        gbc.writeMem(0xb840, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5215, gbc.sp());
        EXPECT(0xb842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb840));
        EXPECT(0xd8, gbc.readMem(0xb841));
        // CB D8 03D2
        gbc.setState(0xd709, 0xea95, 0xb3c0, 0x2a7c, 0xc97e, 0xf1be, 0x0, 0x0);
        gbc.writeMem(0xd709, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xea95, gbc.sp());
        EXPECT(0xd70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd709));
        EXPECT(0xd8, gbc.readMem(0xd70a));
        // CB D8 03D3
        gbc.setState(0xbb80, 0x5e35, 0x4230, 0x1c8b, 0x1287, 0x8acf, 0x0, 0x0);
        gbc.writeMem(0xbb80, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5e35, gbc.sp());
        EXPECT(0xbb82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb80));
        EXPECT(0xd8, gbc.readMem(0xbb81));
        // CB D8 03D4
        gbc.setState(0x6acc, 0xc457, 0x4f60, 0x41a4, 0x8d7a, 0x4e12, 0x0, 0x1);
        gbc.writeMem(0x6acc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc457, gbc.sp());
        EXPECT(0x6ace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03D5
        gbc.setState(0x8c92, 0x34dd, 0x4a20, 0x9c1f, 0xa56b, 0xe337, 0x1, 0x0);
        gbc.writeMem(0x8c92, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x34dd, gbc.sp());
        EXPECT(0x8c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c92));
        EXPECT(0xd8, gbc.readMem(0x8c93));
        // CB D8 03D6
        gbc.setState(0x9475, 0xa30, 0x48f0, 0xa6d3, 0x76dd, 0x7a85, 0x1, 0x1);
        gbc.writeMem(0x9475, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa30, gbc.sp());
        EXPECT(0x9477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9475));
        EXPECT(0xd8, gbc.readMem(0x9476));
        // CB D8 03D7
        gbc.setState(0x7b5, 0x360, 0x87b0, 0x8f06, 0x5ce, 0xcd0b, 0x0, 0x1);
        gbc.writeMem(0x7b5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x360, gbc.sp());
        EXPECT(0x7b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03D8
        gbc.setState(0x3ff5, 0xe9f2, 0x8f20, 0xddaf, 0x41ff, 0x89bc, 0x1, 0x1);
        gbc.writeMem(0x3ff5, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe9f2, gbc.sp());
        EXPECT(0x3ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03D9
        gbc.setState(0xe6ed, 0x997a, 0x1eb0, 0x4b, 0xf03e, 0xba9b, 0x0, 0x1);
        gbc.writeMem(0xe6ed, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x997a, gbc.sp());
        EXPECT(0xe6ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ed));
        EXPECT(0xd8, gbc.readMem(0xe6ee));
        // CB D8 03DB
        gbc.setState(0xda16, 0x54, 0x7c10, 0xbf33, 0x4957, 0xe31d, 0x0, 0x1);
        gbc.writeMem(0xda16, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x54, gbc.sp());
        EXPECT(0xda18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda16));
        EXPECT(0xd8, gbc.readMem(0xda17));
        // CB D8 03DD
        gbc.setState(0xaf41, 0x4dbb, 0x3990, 0x873a, 0x99ce, 0xac33, 0x0, 0x0);
        gbc.writeMem(0xaf41, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4dbb, gbc.sp());
        EXPECT(0xaf43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf41));
        EXPECT(0xd8, gbc.readMem(0xaf42));
        // CB D8 03DE
        gbc.setState(0xa062, 0x1a88, 0x3030, 0x3d2c, 0xc0b4, 0xd09a, 0x0, 0x1);
        gbc.writeMem(0xa062, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1a88, gbc.sp());
        EXPECT(0xa064, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa062));
        EXPECT(0xd8, gbc.readMem(0xa063));
        // CB D8 03DF
        gbc.setState(0x93f4, 0xf8c4, 0x19f0, 0x2b7f, 0x395f, 0x3dca, 0x0, 0x0);
        gbc.writeMem(0x93f4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf8c4, gbc.sp());
        EXPECT(0x93f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f4));
        EXPECT(0xd8, gbc.readMem(0x93f5));
        // CB D8 03E0
        gbc.setState(0x1c86, 0xdcd0, 0xf950, 0x74c7, 0x775c, 0xa89c, 0x1, 0x0);
        gbc.writeMem(0x1c86, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdcd0, gbc.sp());
        EXPECT(0x1c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03E1
        gbc.setState(0x752f, 0xec32, 0x6400, 0x5c8, 0xfd64, 0xdd86, 0x1, 0x0);
        gbc.writeMem(0x752f, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xec32, gbc.sp());
        EXPECT(0x7531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D8 03E2
        gbc.setState(0xd612, 0xec04, 0x7340, 0xd7c9, 0x2a99, 0x1709, 0x0, 0x0);
        gbc.writeMem(0xd612, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xec04, gbc.sp());
        EXPECT(0xd614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd612));
        EXPECT(0xd8, gbc.readMem(0xd613));
        // CB D8 03E3
        gbc.setState(0x7ab4, 0x5485, 0xd690, 0x357c, 0xb5ed, 0xe77f, 0x0, 0x1);
        gbc.writeMem(0x7ab4, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5485, gbc.sp());
        EXPECT(0x7ab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03E4
        gbc.setState(0xe1dd, 0x33c6, 0x1800, 0x5422, 0x3a39, 0xaa2, 0x1, 0x1);
        gbc.writeMem(0xe1dd, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x33c6, gbc.sp());
        EXPECT(0xe1df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1dd));
        EXPECT(0xd8, gbc.readMem(0xe1de));
        // CB D8 03E5
        gbc.setState(0x94ac, 0x125a, 0xc130, 0xfe7a, 0x5816, 0xd264, 0x1, 0x1);
        gbc.writeMem(0x94ac, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x125a, gbc.sp());
        EXPECT(0x94ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ac));
        EXPECT(0xd8, gbc.readMem(0x94ad));
        // CB D8 03E6
        gbc.setState(0x1bc, 0xfdb8, 0xc590, 0xeac3, 0x3f1f, 0xf594, 0x1, 0x0);
        gbc.writeMem(0x1bc, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfdb8, gbc.sp());
        EXPECT(0x1be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D8 03E7
        gbc.setState(0x2cee, 0x33fd, 0xcbd0, 0xf855, 0x3083, 0xfe20, 0x1, 0x0);
        gbc.writeMem(0x2cee, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x33fd, gbc.sp());
        EXPECT(0x2cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
