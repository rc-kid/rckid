    TEST(gbcemu, opcode_d9) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // D9 0000
        gbc.setState(0x22ec, 0x92f0, 0x1fe0, 0x5a9e, 0x882b, 0x5e8a, 0x1, 0x1);
        gbc.writeMem(0x22ec, { 0xd9 });
        gbc.writeMem(0x92f0, { 0x7f, 0x24 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x92f2, gbc.sp());
        EXPECT(0x247f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x92f0));
        EXPECT(0x24, gbc.readMem(0x92f1));
        // D9 0001
        gbc.setState(0x8e49, 0xacdb, 0x22f0, 0x6680, 0xb1dd, 0xaa96, 0x1, 0x1);
        gbc.writeMem(0x8e49, { 0xd9 });
        gbc.writeMem(0xacdb, { 0x8b, 0x88 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xacdd, gbc.sp());
        EXPECT(0x888b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8e49));
        EXPECT(0x8b, gbc.readMem(0xacdb));
        EXPECT(0x88, gbc.readMem(0xacdc));
        // D9 0002
        gbc.setState(0x1b78, 0xee80, 0xf310, 0x3b45, 0xa21d, 0x6ce3, 0x1, 0x1);
        gbc.writeMem(0x1b78, { 0xd9 });
        gbc.writeMem(0xee80, { 0x30, 0xd0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xee82, gbc.sp());
        EXPECT(0xd030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xee80));
        EXPECT(0xd0, gbc.readMem(0xee81));
        // D9 0003
        gbc.setState(0xe21a, 0x6ddd, 0xcc40, 0x73a9, 0x627a, 0x2c3b, 0x1, 0x1);
        gbc.writeMem(0x6ddd, { 0xda, 0xbb });
        gbc.writeMem(0xe21a, { 0xd9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6ddf, gbc.sp());
        EXPECT(0xbbda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe21a));
        // D9 0004
        gbc.setState(0xd442, 0x8b1b, 0xc0c0, 0x82e3, 0x87de, 0x25f6, 0x0, 0x0);
        gbc.writeMem(0x8b1b, { 0x88, 0x43 });
        gbc.writeMem(0xd442, { 0xd9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8b1d, gbc.sp());
        EXPECT(0x4388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8b1b));
        EXPECT(0x43, gbc.readMem(0x8b1c));
        EXPECT(0xd9, gbc.readMem(0xd442));
        // D9 0005
        gbc.setState(0x8f2d, 0xe09e, 0xc760, 0xf28b, 0x2f49, 0xa191, 0x1, 0x1);
        gbc.writeMem(0x8f2d, { 0xd9 });
        gbc.writeMem(0xe09e, { 0x3c, 0x13 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe0a0, gbc.sp());
        EXPECT(0x133c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8f2d));
        EXPECT(0x3c, gbc.readMem(0xe09e));
        EXPECT(0x13, gbc.readMem(0xe09f));
        // D9 0006
        gbc.setState(0xca1, 0xed72, 0x6200, 0x2ec4, 0xcdce, 0xe691, 0x1, 0x0);
        gbc.writeMem(0xca1, { 0xd9 });
        gbc.writeMem(0xed72, { 0x15, 0x6 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xed74, gbc.sp());
        EXPECT(0x615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xed72));
        EXPECT(0x6, gbc.readMem(0xed73));
        // D9 0007
        gbc.setState(0xb3da, 0x10c4, 0x9160, 0xb0d7, 0x4b25, 0x5a69, 0x0, 0x0);
        gbc.writeMem(0x10c4, { 0xb7, 0x14 });
        gbc.writeMem(0xb3da, { 0xd9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x10c6, gbc.sp());
        EXPECT(0x14b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb3da));
        // D9 0008
        gbc.setState(0x3716, 0x1215, 0x6720, 0xc1c0, 0xc15d, 0xa4de, 0x1, 0x0);
        gbc.writeMem(0x1215, { 0x1a, 0xe6 });
        gbc.writeMem(0x3716, { 0xd9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1217, gbc.sp());
        EXPECT(0xe61a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0009
        gbc.setState(0xe7af, 0x2d02, 0xfa0, 0xa973, 0x3648, 0x85f8, 0x1, 0x1);
        gbc.writeMem(0x2d02, { 0xb2, 0x36 });
        gbc.writeMem(0xe7af, { 0xd9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2d04, gbc.sp());
        EXPECT(0x36b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe7af));
        // D9 000A
        gbc.setState(0xd178, 0xdae1, 0x6dd0, 0x330b, 0xec07, 0x19c2, 0x1, 0x0);
        gbc.writeMem(0xd178, { 0xd9 });
        gbc.writeMem(0xdae1, { 0x51, 0x60 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdae3, gbc.sp());
        EXPECT(0x6051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd178));
        EXPECT(0x51, gbc.readMem(0xdae1));
        EXPECT(0x60, gbc.readMem(0xdae2));
        // D9 000B
        gbc.setState(0x8c6c, 0x1dd3, 0xf540, 0xb752, 0x5ffb, 0xbe04, 0x0, 0x1);
        gbc.writeMem(0x1dd3, { 0xaa, 0x68 });
        gbc.writeMem(0x8c6c, { 0xd9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1dd5, gbc.sp());
        EXPECT(0x68aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8c6c));
        // D9 000C
        gbc.setState(0xd3f2, 0xe29e, 0x3ff0, 0x14a8, 0x72e6, 0x455e, 0x0, 0x0);
        gbc.writeMem(0xd3f2, { 0xd9 });
        gbc.writeMem(0xe29e, { 0x82, 0xac });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe2a0, gbc.sp());
        EXPECT(0xac82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd3f2));
        EXPECT(0x82, gbc.readMem(0xe29e));
        EXPECT(0xac, gbc.readMem(0xe29f));
        // D9 000D
        gbc.setState(0xa589, 0xf88e, 0x3500, 0x28e8, 0xaf46, 0x3d25, 0x0, 0x1);
        gbc.writeMem(0xa589, { 0xd9 });
        gbc.writeMem(0xf88e, { 0x1d, 0x7d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf890, gbc.sp());
        EXPECT(0x7d1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa589));
        EXPECT(0x1d, gbc.readMem(0xf88e));
        EXPECT(0x7d, gbc.readMem(0xf88f));
        // D9 000E
        gbc.setState(0x2202, 0xb059, 0x5990, 0x38ee, 0xf2cc, 0x2294, 0x0, 0x1);
        gbc.writeMem(0x2202, { 0xd9 });
        gbc.writeMem(0xb059, { 0x5d, 0x69 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb05b, gbc.sp());
        EXPECT(0x695d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb059));
        EXPECT(0x69, gbc.readMem(0xb05a));
        // D9 000F
        gbc.setState(0x3d86, 0x4cf5, 0x42c0, 0xa3bb, 0xf947, 0x8955, 0x0, 0x0);
        gbc.writeMem(0x3d86, { 0xd9 });
        gbc.writeMem(0x4cf5, { 0xd4, 0xa });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4cf7, gbc.sp());
        EXPECT(0xad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0010
        gbc.setState(0x9596, 0x99d, 0xa9b0, 0x29c7, 0x6581, 0x462e, 0x1, 0x1);
        gbc.writeMem(0x99d, { 0xf1, 0x63 });
        gbc.writeMem(0x9596, { 0xd9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x99f, gbc.sp());
        EXPECT(0x63f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9596));
        // D9 0011
        gbc.setState(0x2dd9, 0x2de9, 0x7b00, 0xf8bd, 0xfff, 0xebcc, 0x1, 0x1);
        gbc.writeMem(0x2dd9, { 0xd9 });
        gbc.writeMem(0x2de9, { 0xec, 0x20 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2deb, gbc.sp());
        EXPECT(0x20ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0012
        gbc.setState(0x3746, 0xa84a, 0x7f90, 0x8c6, 0xddb7, 0xc932, 0x0, 0x0);
        gbc.writeMem(0x3746, { 0xd9 });
        gbc.writeMem(0xa84a, { 0xb2, 0x96 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa84c, gbc.sp());
        EXPECT(0x96b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa84a));
        EXPECT(0x96, gbc.readMem(0xa84b));
        // D9 0013
        gbc.setState(0x84a6, 0xeaf4, 0x3680, 0xe4c7, 0xcbb, 0x8015, 0x1, 0x1);
        gbc.writeMem(0x84a6, { 0xd9 });
        gbc.writeMem(0xeaf4, { 0x81, 0xb8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xeaf6, gbc.sp());
        EXPECT(0xb881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x84a6));
        EXPECT(0x81, gbc.readMem(0xeaf4));
        EXPECT(0xb8, gbc.readMem(0xeaf5));
        // D9 0014
        gbc.setState(0x80ca, 0xf470, 0xbf70, 0x67d, 0x5c15, 0xdb68, 0x0, 0x0);
        gbc.writeMem(0x80ca, { 0xd9 });
        gbc.writeMem(0xf470, { 0xa5, 0x31 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf472, gbc.sp());
        EXPECT(0x31a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x80ca));
        EXPECT(0xa5, gbc.readMem(0xf470));
        EXPECT(0x31, gbc.readMem(0xf471));
        // D9 0015
        gbc.setState(0xee6d, 0xe271, 0x6090, 0x8d1e, 0x2513, 0x9860, 0x0, 0x1);
        gbc.writeMem(0xe271, { 0x79, 0x99 });
        gbc.writeMem(0xee6d, { 0xd9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe273, gbc.sp());
        EXPECT(0x9979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe271));
        EXPECT(0x99, gbc.readMem(0xe272));
        EXPECT(0xd9, gbc.readMem(0xee6d));
        // D9 0016
        gbc.setState(0xc0ba, 0x23ba, 0x5d00, 0xb722, 0x6f99, 0xef51, 0x1, 0x0);
        gbc.writeMem(0x23ba, { 0xea, 0xd5 });
        gbc.writeMem(0xc0ba, { 0xd9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x23bc, gbc.sp());
        EXPECT(0xd5ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc0ba));
        // D9 0017
        gbc.setState(0x78ef, 0x4dbe, 0x3500, 0xd248, 0x3a48, 0x47a0, 0x1, 0x1);
        gbc.writeMem(0x4dbe, { 0x9f, 0x12 });
        gbc.writeMem(0x78ef, { 0xd9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4dc0, gbc.sp());
        EXPECT(0x129f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0018
        gbc.setState(0xb831, 0x730a, 0x5500, 0x4392, 0x779a, 0x4606, 0x0, 0x1);
        gbc.writeMem(0x730a, { 0x9c, 0xf1 });
        gbc.writeMem(0xb831, { 0xd9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x730c, gbc.sp());
        EXPECT(0xf19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb831));
        // D9 0019
        gbc.setState(0xe3f4, 0xcf98, 0xe970, 0xe093, 0xab46, 0x33cc, 0x0, 0x1);
        gbc.writeMem(0xcf98, { 0x2c, 0x71 });
        gbc.writeMem(0xe3f4, { 0xd9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcf9a, gbc.sp());
        EXPECT(0x712c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcf98));
        EXPECT(0x71, gbc.readMem(0xcf99));
        EXPECT(0xd9, gbc.readMem(0xe3f4));
        // D9 001A
        gbc.setState(0xa80c, 0x682e, 0x7cc0, 0x2524, 0x134c, 0x5cda, 0x0, 0x0);
        gbc.writeMem(0x682e, { 0x77, 0x4c });
        gbc.writeMem(0xa80c, { 0xd9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6830, gbc.sp());
        EXPECT(0x4c77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa80c));
        // D9 001B
        gbc.setState(0xef74, 0x7c2f, 0xaa00, 0x584d, 0xe098, 0x5b06, 0x1, 0x0);
        gbc.writeMem(0x7c2f, { 0xf6, 0xaa });
        gbc.writeMem(0xef74, { 0xd9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7c31, gbc.sp());
        EXPECT(0xaaf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xef74));
        // D9 001C
        gbc.setState(0xbf9a, 0xb5bb, 0x68c0, 0xda75, 0xe11d, 0xf050, 0x1, 0x0);
        gbc.writeMem(0xb5bb, { 0x2e, 0x79 });
        gbc.writeMem(0xbf9a, { 0xd9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb5bd, gbc.sp());
        EXPECT(0x792e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb5bb));
        EXPECT(0x79, gbc.readMem(0xb5bc));
        EXPECT(0xd9, gbc.readMem(0xbf9a));
        // D9 001D
        gbc.setState(0xb6da, 0x188f, 0x6bb0, 0x8530, 0x70df, 0x2a0f, 0x0, 0x0);
        gbc.writeMem(0x188f, { 0xd3, 0xdb });
        gbc.writeMem(0xb6da, { 0xd9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1891, gbc.sp());
        EXPECT(0xdbd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb6da));
        // D9 001E
        gbc.setState(0xe03a, 0x1551, 0xf7b0, 0x5b16, 0x96eb, 0x4397, 0x0, 0x0);
        gbc.writeMem(0x1551, { 0x12, 0x70 });
        gbc.writeMem(0xe03a, { 0xd9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1553, gbc.sp());
        EXPECT(0x7012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe03a));
        // D9 001F
        gbc.setState(0xaa9a, 0x94fc, 0x8b90, 0xbce8, 0xdb71, 0x24d6, 0x0, 0x1);
        gbc.writeMem(0x94fc, { 0x18, 0x45 });
        gbc.writeMem(0xaa9a, { 0xd9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x94fe, gbc.sp());
        EXPECT(0x4518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x94fc));
        EXPECT(0x45, gbc.readMem(0x94fd));
        EXPECT(0xd9, gbc.readMem(0xaa9a));
        // D9 0020
        gbc.setState(0x478a, 0xceb2, 0xc1c0, 0x12ff, 0x3bc2, 0x8cd2, 0x0, 0x0);
        gbc.writeMem(0x478a, { 0xd9 });
        gbc.writeMem(0xceb2, { 0x11, 0xee });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xceb4, gbc.sp());
        EXPECT(0xee11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xceb2));
        EXPECT(0xee, gbc.readMem(0xceb3));
        // D9 0021
        gbc.setState(0xee82, 0x7af3, 0x11a0, 0x99a4, 0x2f54, 0x50ed, 0x0, 0x1);
        gbc.writeMem(0x7af3, { 0xb8, 0x5f });
        gbc.writeMem(0xee82, { 0xd9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7af5, gbc.sp());
        EXPECT(0x5fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xee82));
        // D9 0022
        gbc.setState(0xe3d2, 0x37d6, 0xeca0, 0xf548, 0x8557, 0x8a20, 0x0, 0x1);
        gbc.writeMem(0x37d6, { 0x7c, 0x43 });
        gbc.writeMem(0xe3d2, { 0xd9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x37d8, gbc.sp());
        EXPECT(0x437c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe3d2));
        // D9 0023
        gbc.setState(0xabf3, 0x8906, 0x3da0, 0x4587, 0x308f, 0x384c, 0x0, 0x1);
        gbc.writeMem(0x8906, { 0x53, 0x54 });
        gbc.writeMem(0xabf3, { 0xd9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8908, gbc.sp());
        EXPECT(0x5453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8906));
        EXPECT(0x54, gbc.readMem(0x8907));
        EXPECT(0xd9, gbc.readMem(0xabf3));
        // D9 0024
        gbc.setState(0x136f, 0x95b7, 0x8530, 0xbffc, 0x7c3e, 0x8e5f, 0x0, 0x0);
        gbc.writeMem(0x136f, { 0xd9 });
        gbc.writeMem(0x95b7, { 0x10, 0x4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x95b9, gbc.sp());
        EXPECT(0x410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x95b7));
        EXPECT(0x4, gbc.readMem(0x95b8));
        // D9 0025
        gbc.setState(0xb391, 0x6b58, 0x310, 0x66f6, 0xa6a2, 0xfc69, 0x1, 0x0);
        gbc.writeMem(0x6b58, { 0x25, 0xb2 });
        gbc.writeMem(0xb391, { 0xd9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6b5a, gbc.sp());
        EXPECT(0xb225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb391));
        // D9 0026
        gbc.setState(0x76, 0xccfd, 0xec50, 0xe7e3, 0x3275, 0xfceb, 0x1, 0x0);
        gbc.writeMem(0x76, { 0xd9 });
        gbc.writeMem(0xccfd, { 0xc6, 0x39 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xccff, gbc.sp());
        EXPECT(0x39c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xccfd));
        EXPECT(0x39, gbc.readMem(0xccfe));
        // D9 0027
        gbc.setState(0xa0a2, 0xfb3b, 0x60, 0x7776, 0xcde6, 0x6693, 0x1, 0x0);
        gbc.writeMem(0xa0a2, { 0xd9 });
        gbc.writeMem(0xfb3b, { 0x3a, 0x15 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xfb3d, gbc.sp());
        EXPECT(0x153a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa0a2));
        EXPECT(0x3a, gbc.readMem(0xfb3b));
        EXPECT(0x15, gbc.readMem(0xfb3c));
        // D9 0028
        gbc.setState(0x3456, 0xc897, 0x6590, 0x6780, 0x4cf, 0xb3e0, 0x1, 0x1);
        gbc.writeMem(0x3456, { 0xd9 });
        gbc.writeMem(0xc897, { 0xbe, 0x43 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc899, gbc.sp());
        EXPECT(0x43be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xc897));
        EXPECT(0x43, gbc.readMem(0xc898));
        // D9 0029
        gbc.setState(0x8c7a, 0xd0fb, 0x7200, 0xfa1a, 0x6852, 0x4435, 0x1, 0x1);
        gbc.writeMem(0x8c7a, { 0xd9 });
        gbc.writeMem(0xd0fb, { 0x45, 0x30 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd0fd, gbc.sp());
        EXPECT(0x3045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8c7a));
        EXPECT(0x45, gbc.readMem(0xd0fb));
        EXPECT(0x30, gbc.readMem(0xd0fc));
        // D9 002A
        gbc.setState(0xbab8, 0xdaca, 0x2200, 0xab48, 0xf21c, 0x2b9a, 0x1, 0x0);
        gbc.writeMem(0xbab8, { 0xd9 });
        gbc.writeMem(0xdaca, { 0x1, 0x47 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdacc, gbc.sp());
        EXPECT(0x4701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbab8));
        EXPECT(0x1, gbc.readMem(0xdaca));
        EXPECT(0x47, gbc.readMem(0xdacb));
        // D9 002B
        gbc.setState(0xac6d, 0x15a7, 0xf030, 0xc428, 0xe539, 0x677a, 0x0, 0x1);
        gbc.writeMem(0x15a7, { 0x78, 0x60 });
        gbc.writeMem(0xac6d, { 0xd9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x15a9, gbc.sp());
        EXPECT(0x6078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xac6d));
        // D9 002C
        gbc.setState(0x6d91, 0x9fa7, 0xeb0, 0xd83e, 0xac04, 0x66aa, 0x1, 0x0);
        gbc.writeMem(0x6d91, { 0xd9 });
        gbc.writeMem(0x9fa7, { 0x7a, 0xc3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9fa9, gbc.sp());
        EXPECT(0xc37a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9fa7));
        EXPECT(0xc3, gbc.readMem(0x9fa8));
        // D9 002D
        gbc.setState(0x28c, 0x3e4, 0xfce0, 0x8aac, 0x9210, 0x7939, 0x0, 0x0);
        gbc.writeMem(0x28c, { 0xd9 });
        gbc.writeMem(0x3e4, { 0xd1, 0x7d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3e6, gbc.sp());
        EXPECT(0x7dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 002E
        gbc.setState(0x941d, 0x3c84, 0x520, 0xbada, 0x1d36, 0x980e, 0x0, 0x0);
        gbc.writeMem(0x3c84, { 0x36, 0xfd });
        gbc.writeMem(0x941d, { 0xd9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3c86, gbc.sp());
        EXPECT(0xfd36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x941d));
        // D9 002F
        gbc.setState(0x73bb, 0xe166, 0xe910, 0x5886, 0xa558, 0x89c6, 0x1, 0x1);
        gbc.writeMem(0x73bb, { 0xd9 });
        gbc.writeMem(0xe166, { 0x29, 0x76 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe168, gbc.sp());
        EXPECT(0x7629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe166));
        EXPECT(0x76, gbc.readMem(0xe167));
        // D9 0030
        gbc.setState(0x8a3, 0xc798, 0xa290, 0x5c29, 0x4bd1, 0x5b7, 0x0, 0x1);
        gbc.writeMem(0x8a3, { 0xd9 });
        gbc.writeMem(0xc798, { 0xc9, 0xc3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc79a, gbc.sp());
        EXPECT(0xc3c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc798));
        EXPECT(0xc3, gbc.readMem(0xc799));
        // D9 0031
        gbc.setState(0xd418, 0x5b07, 0xa530, 0xb78e, 0xc57c, 0x5064, 0x1, 0x1);
        gbc.writeMem(0x5b07, { 0x6a, 0x9d });
        gbc.writeMem(0xd418, { 0xd9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5b09, gbc.sp());
        EXPECT(0x9d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd418));
        // D9 0032
        gbc.setState(0xbf63, 0xd76d, 0x8c80, 0x8fb5, 0x575f, 0xf1d, 0x1, 0x1);
        gbc.writeMem(0xbf63, { 0xd9 });
        gbc.writeMem(0xd76d, { 0xdd, 0xf8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd76f, gbc.sp());
        EXPECT(0xf8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbf63));
        EXPECT(0xdd, gbc.readMem(0xd76d));
        EXPECT(0xf8, gbc.readMem(0xd76e));
        // D9 0033
        gbc.setState(0x2c7a, 0x35a9, 0x76d0, 0x165d, 0x999d, 0xcbc3, 0x0, 0x0);
        gbc.writeMem(0x2c7a, { 0xd9 });
        gbc.writeMem(0x35a9, { 0x64, 0x65 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x35ab, gbc.sp());
        EXPECT(0x6564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0034
        gbc.setState(0x3125, 0xeac1, 0x16a0, 0x37d, 0xe9c3, 0x4699, 0x1, 0x1);
        gbc.writeMem(0x3125, { 0xd9 });
        gbc.writeMem(0xeac1, { 0x9f, 0xf5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xeac3, gbc.sp());
        EXPECT(0xf59f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xeac1));
        EXPECT(0xf5, gbc.readMem(0xeac2));
        // D9 0035
        gbc.setState(0xbda7, 0x1ff, 0xb580, 0xa925, 0x2212, 0xfb9a, 0x0, 0x0);
        gbc.writeMem(0x1ff, { 0x13, 0x74 });
        gbc.writeMem(0xbda7, { 0xd9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x201, gbc.sp());
        EXPECT(0x7413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbda7));
        // D9 0036
        gbc.setState(0x122c, 0x37d6, 0x92e0, 0xb98a, 0x2dc6, 0x6460, 0x1, 0x1);
        gbc.writeMem(0x122c, { 0xd9 });
        gbc.writeMem(0x37d6, { 0x7c, 0x43 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x37d8, gbc.sp());
        EXPECT(0x437c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0037
        gbc.setState(0x21ce, 0xb99e, 0x59e0, 0xb4c3, 0x4c91, 0xe568, 0x1, 0x1);
        gbc.writeMem(0x21ce, { 0xd9 });
        gbc.writeMem(0xb99e, { 0xe1, 0x38 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb9a0, gbc.sp());
        EXPECT(0x38e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb99e));
        EXPECT(0x38, gbc.readMem(0xb99f));
        // D9 0038
        gbc.setState(0x89ab, 0x620c, 0xc70, 0x9e7c, 0x4419, 0x56b9, 0x0, 0x1);
        gbc.writeMem(0x620c, { 0x6, 0x85 });
        gbc.writeMem(0x89ab, { 0xd9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x620e, gbc.sp());
        EXPECT(0x8506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x89ab));
        // D9 0039
        gbc.setState(0xdf0e, 0xcb46, 0x9d60, 0x6171, 0xe554, 0x480d, 0x1, 0x1);
        gbc.writeMem(0xcb46, { 0x1, 0x15 });
        gbc.writeMem(0xdf0e, { 0xd9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcb48, gbc.sp());
        EXPECT(0x1501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xcb46));
        EXPECT(0x15, gbc.readMem(0xcb47));
        EXPECT(0xd9, gbc.readMem(0xdf0e));
        // D9 003A
        gbc.setState(0x8ca9, 0xb155, 0xcc00, 0xccf6, 0x3ebc, 0x6d47, 0x1, 0x1);
        gbc.writeMem(0x8ca9, { 0xd9 });
        gbc.writeMem(0xb155, { 0x8a, 0xdd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb157, gbc.sp());
        EXPECT(0xdd8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8ca9));
        EXPECT(0x8a, gbc.readMem(0xb155));
        EXPECT(0xdd, gbc.readMem(0xb156));
        // D9 003C
        gbc.setState(0x167a, 0x9aa9, 0x3a50, 0xa85c, 0x1dbb, 0x684d, 0x0, 0x0);
        gbc.writeMem(0x167a, { 0xd9 });
        gbc.writeMem(0x9aa9, { 0x11, 0x9a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9aab, gbc.sp());
        EXPECT(0x9a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9aa9));
        EXPECT(0x9a, gbc.readMem(0x9aaa));
        // D9 003D
        gbc.setState(0x25ab, 0x2679, 0x3640, 0xc568, 0x7348, 0x477e, 0x1, 0x0);
        gbc.writeMem(0x25ab, { 0xd9 });
        gbc.writeMem(0x2679, { 0xd9, 0x69 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x267b, gbc.sp());
        EXPECT(0x69d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 003E
        gbc.setState(0x2cd6, 0xeeaf, 0x7d30, 0xad56, 0xb33f, 0x2dd6, 0x0, 0x0);
        gbc.writeMem(0x2cd6, { 0xd9 });
        gbc.writeMem(0xeeaf, { 0x46, 0xfe });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xeeb1, gbc.sp());
        EXPECT(0xfe46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xeeaf));
        EXPECT(0xfe, gbc.readMem(0xeeb0));
        // D9 003F
        gbc.setState(0xe326, 0xf9bf, 0xf1f0, 0xcd61, 0xc045, 0x86bb, 0x0, 0x1);
        gbc.writeMem(0xe326, { 0xd9 });
        gbc.writeMem(0xf9bf, { 0x7b, 0x71 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf9c1, gbc.sp());
        EXPECT(0x717b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe326));
        EXPECT(0x7b, gbc.readMem(0xf9bf));
        EXPECT(0x71, gbc.readMem(0xf9c0));
        // D9 0040
        gbc.setState(0x8f4b, 0x5f3f, 0x9ae0, 0xfaf1, 0x7ca4, 0x3b5d, 0x0, 0x0);
        gbc.writeMem(0x5f3f, { 0x69, 0x39 });
        gbc.writeMem(0x8f4b, { 0xd9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5f41, gbc.sp());
        EXPECT(0x3969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8f4b));
        // D9 0041
        gbc.setState(0x4916, 0x504e, 0x750, 0x4ea9, 0xe2a7, 0xdc, 0x0, 0x1);
        gbc.writeMem(0x4916, { 0xd9 });
        gbc.writeMem(0x504e, { 0x56, 0xe9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5050, gbc.sp());
        EXPECT(0xe956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0042
        gbc.setState(0x7682, 0x35d, 0xa0b0, 0xd34a, 0xf7d6, 0x2d90, 0x0, 0x1);
        gbc.writeMem(0x35d, { 0x1f, 0xda });
        gbc.writeMem(0x7682, { 0xd9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x35f, gbc.sp());
        EXPECT(0xda1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0043
        gbc.setState(0xb390, 0x206b, 0xe400, 0x1e82, 0xb4b1, 0x2687, 0x0, 0x0);
        gbc.writeMem(0x206b, { 0x30, 0xdb });
        gbc.writeMem(0xb390, { 0xd9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x206d, gbc.sp());
        EXPECT(0xdb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb390));
        // D9 0044
        gbc.setState(0x2857, 0x48b5, 0xbca0, 0x108f, 0x6d55, 0xa073, 0x0, 0x0);
        gbc.writeMem(0x2857, { 0xd9 });
        gbc.writeMem(0x48b5, { 0xe3, 0x1b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x48b7, gbc.sp());
        EXPECT(0x1be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0045
        gbc.setState(0x771a, 0x2207, 0x1f70, 0x9a45, 0x3fbc, 0x3c00, 0x0, 0x0);
        gbc.writeMem(0x2207, { 0x3a, 0x23 });
        gbc.writeMem(0x771a, { 0xd9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2209, gbc.sp());
        EXPECT(0x233a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0046
        gbc.setState(0x3a2, 0xe1c1, 0xb5c0, 0x9ed, 0x54ad, 0x5352, 0x0, 0x1);
        gbc.writeMem(0x3a2, { 0xd9 });
        gbc.writeMem(0xe1c1, { 0xc2, 0xb2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe1c3, gbc.sp());
        EXPECT(0xb2c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe1c1));
        EXPECT(0xb2, gbc.readMem(0xe1c2));
        // D9 0047
        gbc.setState(0xd252, 0x4234, 0x92f0, 0x5d72, 0x7cc3, 0xa2b5, 0x0, 0x1);
        gbc.writeMem(0x4234, { 0x6c, 0x11 });
        gbc.writeMem(0xd252, { 0xd9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4236, gbc.sp());
        EXPECT(0x116c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd252));
        // D9 0048
        gbc.setState(0xc5ab, 0xedea, 0x2340, 0x3142, 0xbdd8, 0x105f, 0x0, 0x1);
        gbc.writeMem(0xc5ab, { 0xd9 });
        gbc.writeMem(0xedea, { 0xb2, 0xde });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xedec, gbc.sp());
        EXPECT(0xdeb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc5ab));
        EXPECT(0xb2, gbc.readMem(0xedea));
        EXPECT(0xde, gbc.readMem(0xedeb));
        // D9 0049
        gbc.setState(0xa835, 0x2317, 0xa730, 0x1343, 0xc171, 0x50b2, 0x0, 0x0);
        gbc.writeMem(0x2317, { 0x54, 0xb9 });
        gbc.writeMem(0xa835, { 0xd9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2319, gbc.sp());
        EXPECT(0xb954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa835));
        // D9 004A
        gbc.setState(0x527e, 0xb708, 0x78b0, 0xdb21, 0x35a0, 0x16df, 0x0, 0x0);
        gbc.writeMem(0x527e, { 0xd9 });
        gbc.writeMem(0xb708, { 0x2d, 0xf7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb70a, gbc.sp());
        EXPECT(0xf72d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb708));
        EXPECT(0xf7, gbc.readMem(0xb709));
        // D9 004B
        gbc.setState(0x62ab, 0x7366, 0x39b0, 0xd21, 0x2827, 0x5221, 0x1, 0x1);
        gbc.writeMem(0x62ab, { 0xd9 });
        gbc.writeMem(0x7366, { 0x5d, 0x55 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7368, gbc.sp());
        EXPECT(0x555d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 004C
        gbc.setState(0x40fe, 0x4c28, 0xc0c0, 0x87b, 0x2126, 0x80e6, 0x1, 0x1);
        gbc.writeMem(0x40fe, { 0xd9 });
        gbc.writeMem(0x4c28, { 0x42, 0xc9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4c2a, gbc.sp());
        EXPECT(0xc942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 004D
        gbc.setState(0x5afe, 0xb59, 0x54d0, 0xa80d, 0x71a1, 0xf008, 0x1, 0x0);
        gbc.writeMem(0xb59, { 0x3, 0xe7 });
        gbc.writeMem(0x5afe, { 0xd9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb5b, gbc.sp());
        EXPECT(0xe703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 004E
        gbc.setState(0xbd2e, 0xfdea, 0xa6b0, 0xa87b, 0xc2c7, 0x3594, 0x1, 0x1);
        gbc.writeMem(0xbd2e, { 0xd9 });
        gbc.writeMem(0xfdea, { 0xc1, 0xe8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfdec, gbc.sp());
        EXPECT(0xe8c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbd2e));
        EXPECT(0xc1, gbc.readMem(0xfdea));
        EXPECT(0xe8, gbc.readMem(0xfdeb));
        // D9 004F
        gbc.setState(0x57f9, 0xa87, 0x5000, 0x2e1a, 0x776d, 0x27c9, 0x0, 0x1);
        gbc.writeMem(0xa87, { 0x23, 0x18 });
        gbc.writeMem(0x57f9, { 0xd9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa89, gbc.sp());
        EXPECT(0x1823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0050
        gbc.setState(0x6809, 0x33b0, 0x3160, 0xd4eb, 0xe3f4, 0x814b, 0x1, 0x1);
        gbc.writeMem(0x33b0, { 0xa0, 0x8b });
        gbc.writeMem(0x6809, { 0xd9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x33b2, gbc.sp());
        EXPECT(0x8ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0051
        gbc.setState(0x2dc4, 0x2bfb, 0x4160, 0xb4aa, 0x3e35, 0x9da7, 0x1, 0x1);
        gbc.writeMem(0x2bfb, { 0x9d, 0x6 });
        gbc.writeMem(0x2dc4, { 0xd9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2bfd, gbc.sp());
        EXPECT(0x69d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0053
        gbc.setState(0x3fb3, 0x2f41, 0x1b20, 0x3bc4, 0xdb81, 0x76e7, 0x1, 0x1);
        gbc.writeMem(0x2f41, { 0x9a, 0x49 });
        gbc.writeMem(0x3fb3, { 0xd9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2f43, gbc.sp());
        EXPECT(0x499a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0054
        gbc.setState(0xa2b1, 0xf036, 0x9070, 0xf274, 0x3a6e, 0x98a4, 0x1, 0x1);
        gbc.writeMem(0xa2b1, { 0xd9 });
        gbc.writeMem(0xf036, { 0xb, 0x1f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf038, gbc.sp());
        EXPECT(0x1f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa2b1));
        EXPECT(0xb, gbc.readMem(0xf036));
        EXPECT(0x1f, gbc.readMem(0xf037));
        // D9 0055
        gbc.setState(0xb5bc, 0xcbd7, 0xf090, 0x2feb, 0x60ea, 0x198d, 0x1, 0x1);
        gbc.writeMem(0xb5bc, { 0xd9 });
        gbc.writeMem(0xcbd7, { 0xb2, 0xb2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcbd9, gbc.sp());
        EXPECT(0xb2b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb5bc));
        EXPECT(0xb2, gbc.readMem(0xcbd7));
        EXPECT(0xb2, gbc.readMem(0xcbd8));
        // D9 0057
        gbc.setState(0x361, 0xa848, 0x85b0, 0x53ce, 0xc6d9, 0x1766, 0x1, 0x1);
        gbc.writeMem(0x361, { 0xd9 });
        gbc.writeMem(0xa848, { 0x2a, 0xe5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa84a, gbc.sp());
        EXPECT(0xe52a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xa848));
        EXPECT(0xe5, gbc.readMem(0xa849));
        // D9 0058
        gbc.setState(0x2265, 0xc60a, 0x46c0, 0x306a, 0x6bac, 0x410a, 0x0, 0x1);
        gbc.writeMem(0x2265, { 0xd9 });
        gbc.writeMem(0xc60a, { 0xa1, 0xe5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc60c, gbc.sp());
        EXPECT(0xe5a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc60a));
        EXPECT(0xe5, gbc.readMem(0xc60b));
        // D9 0059
        gbc.setState(0xb114, 0x7674, 0x2ad0, 0x5abc, 0x30a, 0x88b5, 0x1, 0x1);
        gbc.writeMem(0x7674, { 0xac, 0x72 });
        gbc.writeMem(0xb114, { 0xd9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7676, gbc.sp());
        EXPECT(0x72ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb114));
        // D9 005A
        gbc.setState(0x5071, 0x4495, 0x43e0, 0x50d3, 0x9622, 0x308c, 0x0, 0x1);
        gbc.writeMem(0x4495, { 0x9b, 0x9 });
        gbc.writeMem(0x5071, { 0xd9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4497, gbc.sp());
        EXPECT(0x99b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 005B
        gbc.setState(0xb1b4, 0xb3d, 0xf340, 0xfda2, 0xef68, 0x41c8, 0x1, 0x0);
        gbc.writeMem(0xb3d, { 0xc2, 0x64 });
        gbc.writeMem(0xb1b4, { 0xd9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb3f, gbc.sp());
        EXPECT(0x64c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb1b4));
        // D9 005C
        gbc.setState(0xa7ab, 0x730c, 0x5c40, 0x4de1, 0x9f6, 0x7c1f, 0x1, 0x0);
        gbc.writeMem(0x730c, { 0x62, 0x8d });
        gbc.writeMem(0xa7ab, { 0xd9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x730e, gbc.sp());
        EXPECT(0x8d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa7ab));
        // D9 005D
        gbc.setState(0x9c42, 0x2f31, 0xc4b0, 0x84d2, 0x1ad, 0x8d1b, 0x0, 0x0);
        gbc.writeMem(0x2f31, { 0xe9, 0x7b });
        gbc.writeMem(0x9c42, { 0xd9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2f33, gbc.sp());
        EXPECT(0x7be9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9c42));
        // D9 005E
        gbc.setState(0xce24, 0xda26, 0x3570, 0xc04a, 0x5d0c, 0x40b7, 0x1, 0x1);
        gbc.writeMem(0xce24, { 0xd9 });
        gbc.writeMem(0xda26, { 0x9f, 0x40 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xda28, gbc.sp());
        EXPECT(0x409f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xce24));
        EXPECT(0x9f, gbc.readMem(0xda26));
        EXPECT(0x40, gbc.readMem(0xda27));
        // D9 005F
        gbc.setState(0x7a6d, 0xec4f, 0x3c60, 0xa370, 0x7c4f, 0xf54d, 0x1, 0x1);
        gbc.writeMem(0x7a6d, { 0xd9 });
        gbc.writeMem(0xec4f, { 0x4a, 0xd6 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xec51, gbc.sp());
        EXPECT(0xd64a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xec4f));
        EXPECT(0xd6, gbc.readMem(0xec50));
        // D9 0060
        gbc.setState(0x81f2, 0x75b7, 0xa7e0, 0x871f, 0x40be, 0x8652, 0x0, 0x0);
        gbc.writeMem(0x75b7, { 0xf, 0x4e });
        gbc.writeMem(0x81f2, { 0xd9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x75b9, gbc.sp());
        EXPECT(0x4e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x81f2));
        // D9 0061
        gbc.setState(0x92ef, 0x2d8d, 0x21d0, 0xcf0f, 0xd293, 0x62ed, 0x0, 0x1);
        gbc.writeMem(0x2d8d, { 0x5a, 0xed });
        gbc.writeMem(0x92ef, { 0xd9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2d8f, gbc.sp());
        EXPECT(0xed5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x92ef));
        // D9 0062
        gbc.setState(0x9706, 0x5dd6, 0xbce0, 0xd389, 0xd84f, 0x4a59, 0x1, 0x0);
        gbc.writeMem(0x5dd6, { 0x2d, 0x52 });
        gbc.writeMem(0x9706, { 0xd9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5dd8, gbc.sp());
        EXPECT(0x522d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9706));
        // D9 0063
        gbc.setState(0x3468, 0x8c9c, 0x8c00, 0xc797, 0x89de, 0xa18a, 0x1, 0x0);
        gbc.writeMem(0x3468, { 0xd9 });
        gbc.writeMem(0x8c9c, { 0xfc, 0xc9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8c9e, gbc.sp());
        EXPECT(0xc9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x8c9c));
        EXPECT(0xc9, gbc.readMem(0x8c9d));
        // D9 0064
        gbc.setState(0x53a7, 0xdd16, 0xb430, 0xbb06, 0xb23a, 0x69d2, 0x0, 0x0);
        gbc.writeMem(0x53a7, { 0xd9 });
        gbc.writeMem(0xdd16, { 0x63, 0xcf });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdd18, gbc.sp());
        EXPECT(0xcf63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xdd16));
        EXPECT(0xcf, gbc.readMem(0xdd17));
        // D9 0065
        gbc.setState(0xe115, 0xf325, 0x3ce0, 0xa095, 0xf6ff, 0xf810, 0x0, 0x1);
        gbc.writeMem(0xe115, { 0xd9 });
        gbc.writeMem(0xf325, { 0xd3, 0x9d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf327, gbc.sp());
        EXPECT(0x9dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe115));
        EXPECT(0xd3, gbc.readMem(0xf325));
        EXPECT(0x9d, gbc.readMem(0xf326));
        // D9 0066
        gbc.setState(0x9ab4, 0x2ffa, 0x2e70, 0xee76, 0xf0fd, 0x40e0, 0x1, 0x0);
        gbc.writeMem(0x2ffa, { 0xf4, 0x94 });
        gbc.writeMem(0x9ab4, { 0xd9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2ffc, gbc.sp());
        EXPECT(0x94f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9ab4));
        // D9 0067
        gbc.setState(0xedfa, 0x14dc, 0x9460, 0xe9ac, 0xe64a, 0xc53, 0x1, 0x1);
        gbc.writeMem(0x14dc, { 0x2a, 0xcd });
        gbc.writeMem(0xedfa, { 0xd9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x14de, gbc.sp());
        EXPECT(0xcd2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xedfa));
        // D9 0068
        gbc.setState(0x8131, 0x39da, 0x6eb0, 0x6bc, 0x22ef, 0x3efa, 0x0, 0x0);
        gbc.writeMem(0x39da, { 0xea, 0x44 });
        gbc.writeMem(0x8131, { 0xd9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x39dc, gbc.sp());
        EXPECT(0x44ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8131));
        // D9 0069
        gbc.setState(0xeb3c, 0x1c55, 0xa7b0, 0x34ad, 0xb696, 0x9ce5, 0x1, 0x0);
        gbc.writeMem(0x1c55, { 0x9f, 0x43 });
        gbc.writeMem(0xeb3c, { 0xd9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1c57, gbc.sp());
        EXPECT(0x439f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xeb3c));
        // D9 006A
        gbc.setState(0x624a, 0xda39, 0x9020, 0xa137, 0xba25, 0x6201, 0x0, 0x0);
        gbc.writeMem(0x624a, { 0xd9 });
        gbc.writeMem(0xda39, { 0xa2, 0x68 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xda3b, gbc.sp());
        EXPECT(0x68a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xda39));
        EXPECT(0x68, gbc.readMem(0xda3a));
        // D9 006B
        gbc.setState(0x6be2, 0x104a, 0x1620, 0x901b, 0xf671, 0x6c4d, 0x1, 0x0);
        gbc.writeMem(0x104a, { 0x5a, 0xeb });
        gbc.writeMem(0x6be2, { 0xd9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x104c, gbc.sp());
        EXPECT(0xeb5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 006C
        gbc.setState(0xe168, 0xb8e7, 0x6c10, 0x41a7, 0x3e6d, 0x8297, 0x1, 0x1);
        gbc.writeMem(0xb8e7, { 0x82, 0x17 });
        gbc.writeMem(0xe168, { 0xd9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb8e9, gbc.sp());
        EXPECT(0x1782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb8e7));
        EXPECT(0x17, gbc.readMem(0xb8e8));
        EXPECT(0xd9, gbc.readMem(0xe168));
        // D9 006D
        gbc.setState(0xc1f, 0xa3f7, 0x8b10, 0xbc11, 0xadec, 0xa4ff, 0x0, 0x1);
        gbc.writeMem(0xc1f, { 0xd9 });
        gbc.writeMem(0xa3f7, { 0xea, 0x3b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa3f9, gbc.sp());
        EXPECT(0x3bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xa3f7));
        EXPECT(0x3b, gbc.readMem(0xa3f8));
        // D9 006E
        gbc.setState(0x2111, 0x57c7, 0x6710, 0x78b1, 0xde50, 0x293, 0x0, 0x1);
        gbc.writeMem(0x2111, { 0xd9 });
        gbc.writeMem(0x57c7, { 0x7b, 0xa1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x57c9, gbc.sp());
        EXPECT(0xa17b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 006F
        gbc.setState(0x2e81, 0xb79d, 0xd580, 0x9c54, 0x41d9, 0xb53b, 0x0, 0x0);
        gbc.writeMem(0x2e81, { 0xd9 });
        gbc.writeMem(0xb79d, { 0xcf, 0xd1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb79f, gbc.sp());
        EXPECT(0xd1cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xb79d));
        EXPECT(0xd1, gbc.readMem(0xb79e));
        // D9 0070
        gbc.setState(0x5629, 0x880d, 0x9890, 0x4a67, 0x937a, 0x3cae, 0x0, 0x1);
        gbc.writeMem(0x5629, { 0xd9 });
        gbc.writeMem(0x880d, { 0x8d, 0x6b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x880f, gbc.sp());
        EXPECT(0x6b8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x880d));
        EXPECT(0x6b, gbc.readMem(0x880e));
        // D9 0071
        gbc.setState(0x32a9, 0xd922, 0x5a00, 0x7530, 0x2995, 0x9318, 0x1, 0x0);
        gbc.writeMem(0x32a9, { 0xd9 });
        gbc.writeMem(0xd922, { 0x7a, 0x38 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd924, gbc.sp());
        EXPECT(0x387a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd922));
        EXPECT(0x38, gbc.readMem(0xd923));
        // D9 0072
        gbc.setState(0xe4e8, 0x1679, 0xe0e0, 0x690, 0x4a60, 0x580a, 0x1, 0x0);
        gbc.writeMem(0x1679, { 0x6, 0xc1 });
        gbc.writeMem(0xe4e8, { 0xd9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x167b, gbc.sp());
        EXPECT(0xc106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe4e8));
        // D9 0073
        gbc.setState(0x1c13, 0xfcca, 0x37d0, 0xfea4, 0x68f4, 0x5fb4, 0x0, 0x1);
        gbc.writeMem(0x1c13, { 0xd9 });
        gbc.writeMem(0xfcca, { 0xa9, 0xf2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfccc, gbc.sp());
        EXPECT(0xf2a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xfcca));
        EXPECT(0xf2, gbc.readMem(0xfccb));
        // D9 0074
        gbc.setState(0x4bd5, 0x9dba, 0xf820, 0xd44f, 0x6b30, 0xeb68, 0x0, 0x0);
        gbc.writeMem(0x4bd5, { 0xd9 });
        gbc.writeMem(0x9dba, { 0xb9, 0x46 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9dbc, gbc.sp());
        EXPECT(0x46b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9dba));
        EXPECT(0x46, gbc.readMem(0x9dbb));
        // D9 0076
        gbc.setState(0x2e3a, 0x7b75, 0x80c0, 0x1c00, 0x8bb4, 0x69cf, 0x1, 0x0);
        gbc.writeMem(0x2e3a, { 0xd9 });
        gbc.writeMem(0x7b75, { 0xd8, 0x97 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7b77, gbc.sp());
        EXPECT(0x97d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0077
        gbc.setState(0x8da2, 0x8b1a, 0x4540, 0x4eae, 0x285d, 0xe861, 0x1, 0x1);
        gbc.writeMem(0x8b1a, { 0xe2, 0x88 });
        gbc.writeMem(0x8da2, { 0xd9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8b1c, gbc.sp());
        EXPECT(0x88e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8b1a));
        EXPECT(0x88, gbc.readMem(0x8b1b));
        EXPECT(0xd9, gbc.readMem(0x8da2));
        // D9 0078
        gbc.setState(0x4470, 0x892f, 0x6a10, 0x62a3, 0xce09, 0x5694, 0x0, 0x0);
        gbc.writeMem(0x4470, { 0xd9 });
        gbc.writeMem(0x892f, { 0xaa, 0x94 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8931, gbc.sp());
        EXPECT(0x94aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x892f));
        EXPECT(0x94, gbc.readMem(0x8930));
        // D9 007A
        gbc.setState(0x27df, 0xc464, 0xd070, 0xb024, 0xc424, 0x3e10, 0x0, 0x0);
        gbc.writeMem(0x27df, { 0xd9 });
        gbc.writeMem(0xc464, { 0xba, 0x28 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc466, gbc.sp());
        EXPECT(0x28ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xc464));
        EXPECT(0x28, gbc.readMem(0xc465));
        // D9 007B
        gbc.setState(0xae05, 0xb218, 0xe460, 0x368f, 0x2cda, 0xc4d2, 0x1, 0x1);
        gbc.writeMem(0xae05, { 0xd9 });
        gbc.writeMem(0xb218, { 0xd0, 0x5c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb21a, gbc.sp());
        EXPECT(0x5cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xae05));
        EXPECT(0xd0, gbc.readMem(0xb218));
        EXPECT(0x5c, gbc.readMem(0xb219));
        // D9 007C
        gbc.setState(0x6c07, 0x6814, 0x1700, 0xc3e5, 0x3884, 0x3f92, 0x1, 0x1);
        gbc.writeMem(0x6814, { 0x2f, 0x32 });
        gbc.writeMem(0x6c07, { 0xd9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6816, gbc.sp());
        EXPECT(0x322f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 007D
        gbc.setState(0xbf67, 0x3048, 0x27f0, 0xee8a, 0x9b99, 0x1036, 0x0, 0x0);
        gbc.writeMem(0x3048, { 0x71, 0xf6 });
        gbc.writeMem(0xbf67, { 0xd9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x304a, gbc.sp());
        EXPECT(0xf671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbf67));
        // D9 007E
        gbc.setState(0x2c, 0x5a80, 0x12e0, 0xe5bc, 0x6874, 0x2f6f, 0x0, 0x0);
        gbc.writeMem(0x2c, { 0xd9 });
        gbc.writeMem(0x5a80, { 0xae, 0xd6 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5a82, gbc.sp());
        EXPECT(0xd6ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 007F
        gbc.setState(0x11fc, 0x3a2e, 0x2aa0, 0x2b3f, 0xae88, 0xec11, 0x0, 0x0);
        gbc.writeMem(0x11fc, { 0xd9 });
        gbc.writeMem(0x3a2e, { 0xe, 0xb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3a30, gbc.sp());
        EXPECT(0xb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0080
        gbc.setState(0x6610, 0x11ac, 0x2960, 0xf6a0, 0x9db2, 0xf745, 0x0, 0x0);
        gbc.writeMem(0x11ac, { 0xb, 0xc7 });
        gbc.writeMem(0x6610, { 0xd9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x11ae, gbc.sp());
        EXPECT(0xc70b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0081
        gbc.setState(0xca89, 0x5c20, 0xc780, 0xe65c, 0x750b, 0xa8ed, 0x0, 0x1);
        gbc.writeMem(0x5c20, { 0x66, 0xc });
        gbc.writeMem(0xca89, { 0xd9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5c22, gbc.sp());
        EXPECT(0xc66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xca89));
        // D9 0082
        gbc.setState(0xbdef, 0x57a5, 0x1c30, 0xc5a8, 0x25e9, 0x3d5c, 0x0, 0x0);
        gbc.writeMem(0x57a5, { 0x8c, 0x29 });
        gbc.writeMem(0xbdef, { 0xd9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x57a7, gbc.sp());
        EXPECT(0x298c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbdef));
        // D9 0083
        gbc.setState(0x3295, 0x1e93, 0x2ea0, 0xc499, 0x9e85, 0xc1d6, 0x1, 0x0);
        gbc.writeMem(0x1e93, { 0x7d, 0x34 });
        gbc.writeMem(0x3295, { 0xd9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1e95, gbc.sp());
        EXPECT(0x347d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0084
        gbc.setState(0xf3d, 0x9292, 0xd0d0, 0xa7c6, 0xfb4c, 0xcfcd, 0x1, 0x1);
        gbc.writeMem(0xf3d, { 0xd9 });
        gbc.writeMem(0x9292, { 0xa4, 0x3f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9294, gbc.sp());
        EXPECT(0x3fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9292));
        EXPECT(0x3f, gbc.readMem(0x9293));
        // D9 0085
        gbc.setState(0x1c6d, 0xd2ab, 0xa3c0, 0xd7f9, 0x789f, 0x5c44, 0x0, 0x1);
        gbc.writeMem(0x1c6d, { 0xd9 });
        gbc.writeMem(0xd2ab, { 0x74, 0x30 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd2ad, gbc.sp());
        EXPECT(0x3074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xd2ab));
        EXPECT(0x30, gbc.readMem(0xd2ac));
        // D9 0086
        gbc.setState(0x871c, 0x827, 0xf7c0, 0xadbb, 0x84d5, 0xfa8a, 0x0, 0x0);
        gbc.writeMem(0x827, { 0xbc, 0x83 });
        gbc.writeMem(0x871c, { 0xd9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x829, gbc.sp());
        EXPECT(0x83bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x871c));
        // D9 0087
        gbc.setState(0xee8a, 0x80e8, 0xe6b0, 0x823e, 0x1557, 0x6e53, 0x1, 0x1);
        gbc.writeMem(0x80e8, { 0x47, 0x36 });
        gbc.writeMem(0xee8a, { 0xd9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x80ea, gbc.sp());
        EXPECT(0x3647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x80e8));
        EXPECT(0x36, gbc.readMem(0x80e9));
        EXPECT(0xd9, gbc.readMem(0xee8a));
        // D9 0088
        gbc.setState(0x92e, 0x30c, 0x6210, 0x4e0f, 0xb26a, 0x7758, 0x0, 0x0);
        gbc.writeMem(0x30c, { 0x2c, 0x32 });
        gbc.writeMem(0x92e, { 0xd9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x30e, gbc.sp());
        EXPECT(0x322c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0089
        gbc.setState(0x4238, 0x8460, 0x6730, 0x4b10, 0x43c0, 0x7558, 0x0, 0x0);
        gbc.writeMem(0x4238, { 0xd9 });
        gbc.writeMem(0x8460, { 0x4e, 0xb1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8462, gbc.sp());
        EXPECT(0xb14e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8460));
        EXPECT(0xb1, gbc.readMem(0x8461));
        // D9 008A
        gbc.setState(0x1c6d, 0xb72f, 0x3f50, 0xd365, 0xf41c, 0xa552, 0x0, 0x0);
        gbc.writeMem(0x1c6d, { 0xd9 });
        gbc.writeMem(0xb72f, { 0xba, 0xf8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb731, gbc.sp());
        EXPECT(0xf8ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xb72f));
        EXPECT(0xf8, gbc.readMem(0xb730));
        // D9 008B
        gbc.setState(0x269a, 0x8901, 0xa100, 0xb2c3, 0xdb75, 0xe384, 0x1, 0x0);
        gbc.writeMem(0x269a, { 0xd9 });
        gbc.writeMem(0x8901, { 0xd, 0x7b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8903, gbc.sp());
        EXPECT(0x7b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x8901));
        EXPECT(0x7b, gbc.readMem(0x8902));
        // D9 008C
        gbc.setState(0x5cb6, 0xf8aa, 0x58c0, 0xf729, 0x74b9, 0xf243, 0x0, 0x0);
        gbc.writeMem(0x5cb6, { 0xd9 });
        gbc.writeMem(0xf8aa, { 0x82, 0x4f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf8ac, gbc.sp());
        EXPECT(0x4f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xf8aa));
        EXPECT(0x4f, gbc.readMem(0xf8ab));
        // D9 008D
        gbc.setState(0x8e81, 0x3e19, 0x9720, 0xa5d8, 0x733d, 0x9449, 0x1, 0x0);
        gbc.writeMem(0x3e19, { 0xfd, 0xf0 });
        gbc.writeMem(0x8e81, { 0xd9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3e1b, gbc.sp());
        EXPECT(0xf0fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8e81));
        // D9 008E
        gbc.setState(0x1f94, 0x601, 0x7d70, 0x73bc, 0xb0ea, 0x97ed, 0x0, 0x1);
        gbc.writeMem(0x601, { 0x1c, 0x0 });
        gbc.writeMem(0x1f94, { 0xd9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x603, gbc.sp());
        EXPECT(0x1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 008F
        gbc.setState(0x6a9, 0x3d52, 0x7c70, 0x3a5d, 0x9786, 0x93ed, 0x1, 0x1);
        gbc.writeMem(0x6a9, { 0xd9 });
        gbc.writeMem(0x3d52, { 0xf2, 0x63 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3d54, gbc.sp());
        EXPECT(0x63f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0090
        gbc.setState(0xa432, 0x10da, 0xff80, 0x313d, 0x1491, 0x12c0, 0x0, 0x0);
        gbc.writeMem(0x10da, { 0x61, 0x86 });
        gbc.writeMem(0xa432, { 0xd9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x10dc, gbc.sp());
        EXPECT(0x8661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa432));
        // D9 0091
        gbc.setState(0xb774, 0xe247, 0x9d60, 0x6d8b, 0x6faa, 0x642c, 0x0, 0x0);
        gbc.writeMem(0xb774, { 0xd9 });
        gbc.writeMem(0xe247, { 0x56, 0x7b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe249, gbc.sp());
        EXPECT(0x7b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb774));
        EXPECT(0x56, gbc.readMem(0xe247));
        EXPECT(0x7b, gbc.readMem(0xe248));
        // D9 0092
        gbc.setState(0x8e11, 0xcb6, 0xa9d0, 0xec4b, 0x247a, 0x75c5, 0x0, 0x1);
        gbc.writeMem(0xcb6, { 0xcf, 0x70 });
        gbc.writeMem(0x8e11, { 0xd9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xcb8, gbc.sp());
        EXPECT(0x70cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8e11));
        // D9 0093
        gbc.setState(0xd9ee, 0xeca9, 0xa4e0, 0x80af, 0x57, 0xf6f7, 0x1, 0x1);
        gbc.writeMem(0xd9ee, { 0xd9 });
        gbc.writeMem(0xeca9, { 0x68, 0xed });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xecab, gbc.sp());
        EXPECT(0xed68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd9ee));
        EXPECT(0x68, gbc.readMem(0xeca9));
        EXPECT(0xed, gbc.readMem(0xecaa));
        // D9 0094
        gbc.setState(0xd821, 0x4327, 0x5ef0, 0x757f, 0xd020, 0x3d60, 0x1, 0x0);
        gbc.writeMem(0x4327, { 0xf7, 0x76 });
        gbc.writeMem(0xd821, { 0xd9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4329, gbc.sp());
        EXPECT(0x76f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd821));
        // D9 0095
        gbc.setState(0xab01, 0x8734, 0x4fa0, 0x69bd, 0xa21f, 0x5673, 0x0, 0x0);
        gbc.writeMem(0x8734, { 0x4b, 0xec });
        gbc.writeMem(0xab01, { 0xd9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8736, gbc.sp());
        EXPECT(0xec4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8734));
        EXPECT(0xec, gbc.readMem(0x8735));
        EXPECT(0xd9, gbc.readMem(0xab01));
        // D9 0096
        gbc.setState(0x1603, 0x52c4, 0x7250, 0xcd53, 0xf64d, 0xa847, 0x0, 0x0);
        gbc.writeMem(0x1603, { 0xd9 });
        gbc.writeMem(0x52c4, { 0xc6, 0x6a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x52c6, gbc.sp());
        EXPECT(0x6ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0097
        gbc.setState(0x8001, 0x6826, 0xfac0, 0xf465, 0x19ac, 0xbe9a, 0x0, 0x0);
        gbc.writeMem(0x6826, { 0x6d, 0x97 });
        gbc.writeMem(0x8001, { 0xd9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6828, gbc.sp());
        EXPECT(0x976d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8001));
        // D9 0099
        gbc.setState(0xa86, 0x5437, 0x4570, 0xfdf8, 0x53a6, 0x75cb, 0x1, 0x0);
        gbc.writeMem(0xa86, { 0xd9 });
        gbc.writeMem(0x5437, { 0xa6, 0x98 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5439, gbc.sp());
        EXPECT(0x98a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 009A
        gbc.setState(0x6834, 0x6a27, 0x3ac0, 0x6e46, 0x7eb8, 0x17b8, 0x1, 0x1);
        gbc.writeMem(0x6834, { 0xd9 });
        gbc.writeMem(0x6a27, { 0xf7, 0xc5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6a29, gbc.sp());
        EXPECT(0xc5f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 009B
        gbc.setState(0x75c, 0xdf01, 0x62b0, 0x3a5f, 0x4fa5, 0xc6ce, 0x1, 0x1);
        gbc.writeMem(0x75c, { 0xd9 });
        gbc.writeMem(0xdf01, { 0xb0, 0x48 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdf03, gbc.sp());
        EXPECT(0x48b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdf01));
        EXPECT(0x48, gbc.readMem(0xdf02));
        // D9 009C
        gbc.setState(0xd7b8, 0x450b, 0xba40, 0x5b67, 0xb866, 0xd8bc, 0x1, 0x0);
        gbc.writeMem(0x450b, { 0x29, 0x17 });
        gbc.writeMem(0xd7b8, { 0xd9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x450d, gbc.sp());
        EXPECT(0x1729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd7b8));
        // D9 009D
        gbc.setState(0xebbb, 0x306d, 0x3310, 0x6707, 0x1cd7, 0x4653, 0x0, 0x1);
        gbc.writeMem(0x306d, { 0x2c, 0x91 });
        gbc.writeMem(0xebbb, { 0xd9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x306f, gbc.sp());
        EXPECT(0x912c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xebbb));
        // D9 009E
        gbc.setState(0x489e, 0xd912, 0x530, 0x546d, 0x75c7, 0xb9c5, 0x0, 0x0);
        gbc.writeMem(0x489e, { 0xd9 });
        gbc.writeMem(0xd912, { 0x91, 0xb0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd914, gbc.sp());
        EXPECT(0xb091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd912));
        EXPECT(0xb0, gbc.readMem(0xd913));
        // D9 009F
        gbc.setState(0x245e, 0xa39c, 0xbef0, 0x5169, 0xe99e, 0x1420, 0x0, 0x0);
        gbc.writeMem(0x245e, { 0xd9 });
        gbc.writeMem(0xa39c, { 0x73, 0x97 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa39e, gbc.sp());
        EXPECT(0x9773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa39c));
        EXPECT(0x97, gbc.readMem(0xa39d));
        // D9 00A0
        gbc.setState(0xbee8, 0x2550, 0xba10, 0xd96c, 0xfefb, 0x33c5, 0x0, 0x0);
        gbc.writeMem(0x2550, { 0x6a, 0x44 });
        gbc.writeMem(0xbee8, { 0xd9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2552, gbc.sp());
        EXPECT(0x446a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbee8));
        // D9 00A1
        gbc.setState(0xa88f, 0x6018, 0x41a0, 0x3a3b, 0xf286, 0x7a12, 0x0, 0x0);
        gbc.writeMem(0x6018, { 0x75, 0x5a });
        gbc.writeMem(0xa88f, { 0xd9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x601a, gbc.sp());
        EXPECT(0x5a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa88f));
        // D9 00A2
        gbc.setState(0x61c5, 0x661f, 0x7a90, 0xa77e, 0x6c30, 0xc944, 0x1, 0x0);
        gbc.writeMem(0x61c5, { 0xd9 });
        gbc.writeMem(0x661f, { 0x38, 0x6d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6621, gbc.sp());
        EXPECT(0x6d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 00A3
        gbc.setState(0xa8d6, 0x2086, 0xef00, 0xfad2, 0xe4b1, 0xd69e, 0x1, 0x0);
        gbc.writeMem(0x2086, { 0x14, 0x85 });
        gbc.writeMem(0xa8d6, { 0xd9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2088, gbc.sp());
        EXPECT(0x8514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa8d6));
        // D9 00A4
        gbc.setState(0x44df, 0x9254, 0x91d0, 0x47be, 0xd56e, 0xf157, 0x1, 0x0);
        gbc.writeMem(0x44df, { 0xd9 });
        gbc.writeMem(0x9254, { 0xb8, 0x45 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9256, gbc.sp());
        EXPECT(0x45b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x9254));
        EXPECT(0x45, gbc.readMem(0x9255));
        // D9 00A6
        gbc.setState(0x3195, 0x3dd9, 0x79f0, 0x30ad, 0xa4e5, 0xfa44, 0x1, 0x0);
        gbc.writeMem(0x3195, { 0xd9 });
        gbc.writeMem(0x3dd9, { 0x94, 0x47 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3ddb, gbc.sp());
        EXPECT(0x4794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 00A7
        gbc.setState(0xb981, 0xdda4, 0x9650, 0x928d, 0xad14, 0xa558, 0x1, 0x0);
        gbc.writeMem(0xb981, { 0xd9 });
        gbc.writeMem(0xdda4, { 0xa5, 0xd3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xdda6, gbc.sp());
        EXPECT(0xd3a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb981));
        EXPECT(0xa5, gbc.readMem(0xdda4));
        EXPECT(0xd3, gbc.readMem(0xdda5));
        // D9 00A8
        gbc.setState(0xeaaa, 0xd11f, 0x7490, 0xb291, 0xf333, 0x5763, 0x1, 0x0);
        gbc.writeMem(0xd11f, { 0x91, 0x41 });
        gbc.writeMem(0xeaaa, { 0xd9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd121, gbc.sp());
        EXPECT(0x4191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd11f));
        EXPECT(0x41, gbc.readMem(0xd120));
        EXPECT(0xd9, gbc.readMem(0xeaaa));
        // D9 00A9
        gbc.setState(0x4d88, 0x64ea, 0x3250, 0xb5f3, 0xab32, 0x1272, 0x0, 0x0);
        gbc.writeMem(0x4d88, { 0xd9 });
        gbc.writeMem(0x64ea, { 0x9c, 0x62 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x64ec, gbc.sp());
        EXPECT(0x629c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 00AA
        gbc.setState(0x5b3, 0x1dd7, 0x7980, 0x7357, 0x70ab, 0x4481, 0x0, 0x1);
        gbc.writeMem(0x5b3, { 0xd9 });
        gbc.writeMem(0x1dd7, { 0x27, 0x8c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1dd9, gbc.sp());
        EXPECT(0x8c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 00AB
        gbc.setState(0x9370, 0x286a, 0x5d60, 0xc065, 0xca65, 0x40ff, 0x1, 0x0);
        gbc.writeMem(0x286a, { 0x7b, 0x5c });
        gbc.writeMem(0x9370, { 0xd9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x286c, gbc.sp());
        EXPECT(0x5c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9370));
        // D9 00AD
        gbc.setState(0x1e5c, 0x7d0d, 0xe730, 0x5fdb, 0x8585, 0x51f6, 0x1, 0x0);
        gbc.writeMem(0x1e5c, { 0xd9 });
        gbc.writeMem(0x7d0d, { 0x41, 0x69 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7d0f, gbc.sp());
        EXPECT(0x6941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 00AE
        gbc.setState(0x322b, 0x5537, 0xc000, 0x35b7, 0xe675, 0xf926, 0x0, 0x0);
        gbc.writeMem(0x322b, { 0xd9 });
        gbc.writeMem(0x5537, { 0x62, 0x3b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5539, gbc.sp());
        EXPECT(0x3b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 00AF
        gbc.setState(0x6936, 0xf7ba, 0x4cc0, 0xcc1c, 0x8afb, 0xb62e, 0x1, 0x1);
        gbc.writeMem(0x6936, { 0xd9 });
        gbc.writeMem(0xf7ba, { 0xb7, 0x8a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf7bc, gbc.sp());
        EXPECT(0x8ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xf7ba));
        EXPECT(0x8a, gbc.readMem(0xf7bb));
        // D9 00B0
        gbc.setState(0x5673, 0xf8fb, 0x3de0, 0x123b, 0xd760, 0xcc31, 0x1, 0x1);
        gbc.writeMem(0x5673, { 0xd9 });
        gbc.writeMem(0xf8fb, { 0x3f, 0x1b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf8fd, gbc.sp());
        EXPECT(0x1b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xf8fb));
        EXPECT(0x1b, gbc.readMem(0xf8fc));
        // D9 00B1
        gbc.setState(0xd324, 0xdcfe, 0x8e50, 0x14af, 0x7d78, 0x8993, 0x1, 0x1);
        gbc.writeMem(0xd324, { 0xd9 });
        gbc.writeMem(0xdcfe, { 0xe2, 0xf });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdd00, gbc.sp());
        EXPECT(0xfe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd324));
        EXPECT(0xe2, gbc.readMem(0xdcfe));
        EXPECT(0xf, gbc.readMem(0xdcff));
        // D9 00B2
        gbc.setState(0x53d9, 0xc62, 0xcb00, 0x6d07, 0xd3c5, 0x374d, 0x1, 0x0);
        gbc.writeMem(0xc62, { 0x82, 0x3b });
        gbc.writeMem(0x53d9, { 0xd9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc64, gbc.sp());
        EXPECT(0x3b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 00B3
        gbc.setState(0xc01, 0xd835, 0x1340, 0xb9cc, 0x38a3, 0x83fb, 0x1, 0x1);
        gbc.writeMem(0xc01, { 0xd9 });
        gbc.writeMem(0xd835, { 0xea, 0x4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd837, gbc.sp());
        EXPECT(0x4ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xd835));
        EXPECT(0x4, gbc.readMem(0xd836));
        // D9 00B5
        gbc.setState(0xbc65, 0x1b4e, 0xae70, 0xb6ef, 0xc7a6, 0xbee3, 0x0, 0x0);
        gbc.writeMem(0x1b4e, { 0xb7, 0x35 });
        gbc.writeMem(0xbc65, { 0xd9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1b50, gbc.sp());
        EXPECT(0x35b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbc65));
        // D9 00B6
        gbc.setState(0x7196, 0x2f32, 0xb060, 0x4ba2, 0xd539, 0x87ab, 0x0, 0x1);
        gbc.writeMem(0x2f32, { 0x7b, 0xbd });
        gbc.writeMem(0x7196, { 0xd9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2f34, gbc.sp());
        EXPECT(0xbd7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 00B7
        gbc.setState(0x205f, 0xebe, 0xbaa0, 0x795b, 0x4be9, 0x4f24, 0x0, 0x1);
        gbc.writeMem(0xebe, { 0xdd, 0xcd });
        gbc.writeMem(0x205f, { 0xd9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xec0, gbc.sp());
        EXPECT(0xcddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 00B8
        gbc.setState(0x40f4, 0x6fda, 0xa5d0, 0xa4e6, 0x7f54, 0x866a, 0x1, 0x0);
        gbc.writeMem(0x40f4, { 0xd9 });
        gbc.writeMem(0x6fda, { 0x5, 0xbd });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6fdc, gbc.sp());
        EXPECT(0xbd05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 00B9
        gbc.setState(0x19c7, 0x93d3, 0xb750, 0xb1b, 0xeee7, 0xf89a, 0x1, 0x1);
        gbc.writeMem(0x19c7, { 0xd9 });
        gbc.writeMem(0x93d3, { 0x4e, 0x54 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x93d5, gbc.sp());
        EXPECT(0x544e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x93d3));
        EXPECT(0x54, gbc.readMem(0x93d4));
        // D9 00BA
        gbc.setState(0x8adb, 0x68ff, 0x7250, 0xd783, 0xc1e, 0x370b, 0x1, 0x0);
        gbc.writeMem(0x68ff, { 0x29, 0x67 });
        gbc.writeMem(0x8adb, { 0xd9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6901, gbc.sp());
        EXPECT(0x6729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8adb));
        // D9 00BB
        gbc.setState(0x2594, 0x9d96, 0x6670, 0xa28c, 0x853d, 0xfe1c, 0x0, 0x1);
        gbc.writeMem(0x2594, { 0xd9 });
        gbc.writeMem(0x9d96, { 0xa3, 0x41 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9d98, gbc.sp());
        EXPECT(0x41a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9d96));
        EXPECT(0x41, gbc.readMem(0x9d97));
        // D9 00BC
        gbc.setState(0x5ebb, 0xb37a, 0x9f0, 0xfaa0, 0x711e, 0xdf1f, 0x1, 0x1);
        gbc.writeMem(0x5ebb, { 0xd9 });
        gbc.writeMem(0xb37a, { 0xd1, 0xd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb37c, gbc.sp());
        EXPECT(0xdd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xb37a));
        EXPECT(0xd, gbc.readMem(0xb37b));
        // D9 00BD
        gbc.setState(0x1958, 0xcb31, 0xe060, 0xe8ec, 0x53cc, 0xcb0, 0x0, 0x0);
        gbc.writeMem(0x1958, { 0xd9 });
        gbc.writeMem(0xcb31, { 0x37, 0xc3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcb33, gbc.sp());
        EXPECT(0xc337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcb31));
        EXPECT(0xc3, gbc.readMem(0xcb32));
        // D9 00BE
        gbc.setState(0x6134, 0x1827, 0xeb40, 0x437b, 0x1dc7, 0xf34b, 0x1, 0x0);
        gbc.writeMem(0x1827, { 0x4c, 0x5e });
        gbc.writeMem(0x6134, { 0xd9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1829, gbc.sp());
        EXPECT(0x5e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 00BF
        gbc.setState(0x84f1, 0xacb0, 0xbe60, 0x9764, 0xc4fb, 0xc403, 0x0, 0x1);
        gbc.writeMem(0x84f1, { 0xd9 });
        gbc.writeMem(0xacb0, { 0xe1, 0xe });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xacb2, gbc.sp());
        EXPECT(0xee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x84f1));
        EXPECT(0xe1, gbc.readMem(0xacb0));
        EXPECT(0xe, gbc.readMem(0xacb1));
        // D9 00C0
        gbc.setState(0x4728, 0x7c0d, 0xe8d0, 0xdce8, 0xbf0, 0xdf11, 0x1, 0x1);
        gbc.writeMem(0x4728, { 0xd9 });
        gbc.writeMem(0x7c0d, { 0xdd, 0x7f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7c0f, gbc.sp());
        EXPECT(0x7fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 00C1
        gbc.setState(0xb779, 0xa67f, 0xa190, 0x55e9, 0x2680, 0x2c3c, 0x1, 0x0);
        gbc.writeMem(0xa67f, { 0x8, 0x61 });
        gbc.writeMem(0xb779, { 0xd9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa681, gbc.sp());
        EXPECT(0x6108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xa67f));
        EXPECT(0x61, gbc.readMem(0xa680));
        EXPECT(0xd9, gbc.readMem(0xb779));
        // D9 00C2
        gbc.setState(0x7114, 0xcc60, 0x9940, 0xb1ad, 0x8df5, 0x38fb, 0x0, 0x1);
        gbc.writeMem(0x7114, { 0xd9 });
        gbc.writeMem(0xcc60, { 0xf9, 0xb5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcc62, gbc.sp());
        EXPECT(0xb5f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xcc60));
        EXPECT(0xb5, gbc.readMem(0xcc61));
        // D9 00C3
        gbc.setState(0x3fab, 0xee80, 0x4550, 0xfb5c, 0x4abd, 0x9e65, 0x1, 0x0);
        gbc.writeMem(0x3fab, { 0xd9 });
        gbc.writeMem(0xee80, { 0x30, 0xd0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xee82, gbc.sp());
        EXPECT(0xd030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xee80));
        EXPECT(0xd0, gbc.readMem(0xee81));
        // D9 00C5
        gbc.setState(0xa042, 0xd01, 0xd6b0, 0x87ee, 0x2479, 0x6923, 0x0, 0x0);
        gbc.writeMem(0xd01, { 0x65, 0x43 });
        gbc.writeMem(0xa042, { 0xd9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd03, gbc.sp());
        EXPECT(0x4365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa042));
        // D9 00C6
        gbc.setState(0xe0b4, 0x2d2f, 0x85f0, 0x8e02, 0x2647, 0x2e16, 0x1, 0x0);
        gbc.writeMem(0x2d2f, { 0x56, 0x6b });
        gbc.writeMem(0xe0b4, { 0xd9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2d31, gbc.sp());
        EXPECT(0x6b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe0b4));
        // D9 00C7
        gbc.setState(0xcd8a, 0x18a8, 0x9150, 0x9896, 0x3c2b, 0x262e, 0x0, 0x1);
        gbc.writeMem(0x18a8, { 0x1e, 0x74 });
        gbc.writeMem(0xcd8a, { 0xd9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x18aa, gbc.sp());
        EXPECT(0x741e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcd8a));
        // D9 00C8
        gbc.setState(0xbbae, 0x65d0, 0x9870, 0x89b, 0xec69, 0x2e9c, 0x0, 0x0);
        gbc.writeMem(0x65d0, { 0x22, 0x9c });
        gbc.writeMem(0xbbae, { 0xd9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x65d2, gbc.sp());
        EXPECT(0x9c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbbae));
        // D9 00C9
        gbc.setState(0x8908, 0x5724, 0xe870, 0xe415, 0x2a54, 0x4c89, 0x1, 0x0);
        gbc.writeMem(0x5724, { 0x7d, 0x19 });
        gbc.writeMem(0x8908, { 0xd9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5726, gbc.sp());
        EXPECT(0x197d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8908));
        // D9 00CB
        gbc.setState(0x9ff8, 0x2bcb, 0xb170, 0xcdae, 0x573d, 0x1acf, 0x1, 0x1);
        gbc.writeMem(0x2bcb, { 0xad, 0x90 });
        gbc.writeMem(0x9ff8, { 0xd9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2bcd, gbc.sp());
        EXPECT(0x90ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9ff8));
        // D9 00CC
        gbc.setState(0x287e, 0xd4cb, 0x1fb0, 0x13e7, 0x802b, 0x8b7, 0x1, 0x0);
        gbc.writeMem(0x287e, { 0xd9 });
        gbc.writeMem(0xd4cb, { 0x1, 0x8f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd4cd, gbc.sp());
        EXPECT(0x8f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xd4cb));
        EXPECT(0x8f, gbc.readMem(0xd4cc));
        // D9 00CD
        gbc.setState(0x2096, 0x56e0, 0x7630, 0xaf0, 0x9937, 0x9c8, 0x0, 0x1);
        gbc.writeMem(0x2096, { 0xd9 });
        gbc.writeMem(0x56e0, { 0xc1, 0x7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x56e2, gbc.sp());
        EXPECT(0x7c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 00CE
        gbc.setState(0x4b85, 0x71c8, 0x1720, 0xefef, 0x7afa, 0x5932, 0x1, 0x1);
        gbc.writeMem(0x4b85, { 0xd9 });
        gbc.writeMem(0x71c8, { 0x98, 0x50 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x71ca, gbc.sp());
        EXPECT(0x5098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 00CF
        gbc.setState(0x18b, 0xc23d, 0x93c0, 0xa9c5, 0xdede, 0x64d8, 0x1, 0x0);
        gbc.writeMem(0x18b, { 0xd9 });
        gbc.writeMem(0xc23d, { 0x5a, 0xf4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc23f, gbc.sp());
        EXPECT(0xf45a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xc23d));
        EXPECT(0xf4, gbc.readMem(0xc23e));
        // D9 00D0
        gbc.setState(0x89b6, 0x7f4f, 0x2910, 0x8041, 0x2ea9, 0xfbe1, 0x1, 0x0);
        gbc.writeMem(0x7f4f, { 0xd2, 0x30 });
        gbc.writeMem(0x89b6, { 0xd9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7f51, gbc.sp());
        EXPECT(0x30d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x89b6));
        // D9 00D2
        gbc.setState(0x256, 0xebbd, 0x6b00, 0x32b6, 0xaf75, 0xfff4, 0x0, 0x0);
        gbc.writeMem(0x256, { 0xd9 });
        gbc.writeMem(0xebbd, { 0xd3, 0x16 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xebbf, gbc.sp());
        EXPECT(0x16d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xebbd));
        EXPECT(0x16, gbc.readMem(0xebbe));
        // D9 00D3
        gbc.setState(0x3ba3, 0xb8d1, 0x4be0, 0x5ce0, 0x607f, 0xfe6f, 0x1, 0x0);
        gbc.writeMem(0x3ba3, { 0xd9 });
        gbc.writeMem(0xb8d1, { 0x1c, 0x9e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb8d3, gbc.sp());
        EXPECT(0x9e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xb8d1));
        EXPECT(0x9e, gbc.readMem(0xb8d2));
        // D9 00D4
        gbc.setState(0x57a, 0x525d, 0x2350, 0x412a, 0x933, 0xaa0a, 0x1, 0x0);
        gbc.writeMem(0x57a, { 0xd9 });
        gbc.writeMem(0x525d, { 0x43, 0x7c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x525f, gbc.sp());
        EXPECT(0x7c43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 00D5
        gbc.setState(0xb0c7, 0x8d1b, 0x5770, 0x8851, 0xb7b8, 0x20d0, 0x0, 0x1);
        gbc.writeMem(0x8d1b, { 0x5d, 0x3e });
        gbc.writeMem(0xb0c7, { 0xd9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8d1d, gbc.sp());
        EXPECT(0x3e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8d1b));
        EXPECT(0x3e, gbc.readMem(0x8d1c));
        EXPECT(0xd9, gbc.readMem(0xb0c7));
        // D9 00D6
        gbc.setState(0x6a7b, 0xd43f, 0xb190, 0xef5a, 0x6e9, 0x9145, 0x1, 0x1);
        gbc.writeMem(0x6a7b, { 0xd9 });
        gbc.writeMem(0xd43f, { 0x84, 0x27 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd441, gbc.sp());
        EXPECT(0x2784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xd43f));
        EXPECT(0x27, gbc.readMem(0xd440));
        // D9 00D7
        gbc.setState(0x4e40, 0x7e86, 0xfbd0, 0x8b89, 0x4f76, 0xdc23, 0x1, 0x1);
        gbc.writeMem(0x4e40, { 0xd9 });
        gbc.writeMem(0x7e86, { 0x52, 0x2b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7e88, gbc.sp());
        EXPECT(0x2b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 00D8
        gbc.setState(0xb7bc, 0xa1f9, 0x1c90, 0x6bc, 0x76d4, 0x6e8f, 0x1, 0x1);
        gbc.writeMem(0xa1f9, { 0x9e, 0x2 });
        gbc.writeMem(0xb7bc, { 0xd9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa1fb, gbc.sp());
        EXPECT(0x29e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa1f9));
        EXPECT(0x2, gbc.readMem(0xa1fa));
        EXPECT(0xd9, gbc.readMem(0xb7bc));
        // D9 00D9
        gbc.setState(0x3bba, 0xa8b8, 0x7140, 0xf4ec, 0x1f42, 0x9d47, 0x0, 0x1);
        gbc.writeMem(0x3bba, { 0xd9 });
        gbc.writeMem(0xa8b8, { 0xa6, 0x73 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa8ba, gbc.sp());
        EXPECT(0x73a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa8b8));
        EXPECT(0x73, gbc.readMem(0xa8b9));
        // D9 00DA
        gbc.setState(0x62a6, 0x1a34, 0xc350, 0x91f6, 0x4302, 0x9e57, 0x0, 0x0);
        gbc.writeMem(0x1a34, { 0xd9, 0x14 });
        gbc.writeMem(0x62a6, { 0xd9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1a36, gbc.sp());
        EXPECT(0x14d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 00DB
        gbc.setState(0xa722, 0x1b25, 0x470, 0xf691, 0x96a, 0xbded, 0x1, 0x1);
        gbc.writeMem(0x1b25, { 0x87, 0xd4 });
        gbc.writeMem(0xa722, { 0xd9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1b27, gbc.sp());
        EXPECT(0xd487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa722));
        // D9 00DC
        gbc.setState(0x4fcf, 0x24de, 0xf650, 0x2964, 0x42e1, 0x7012, 0x1, 0x1);
        gbc.writeMem(0x24de, { 0x7d, 0x38 });
        gbc.writeMem(0x4fcf, { 0xd9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x24e0, gbc.sp());
        EXPECT(0x387d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 00DD
        gbc.setState(0xb1f8, 0xa8e9, 0xf850, 0x4079, 0xc571, 0x3a5a, 0x0, 0x0);
        gbc.writeMem(0xa8e9, { 0x75, 0x78 });
        gbc.writeMem(0xb1f8, { 0xd9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa8eb, gbc.sp());
        EXPECT(0x7875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa8e9));
        EXPECT(0x78, gbc.readMem(0xa8ea));
        EXPECT(0xd9, gbc.readMem(0xb1f8));
        // D9 00DE
        gbc.setState(0xb0e5, 0x98eb, 0xf40, 0xac9c, 0xc2c2, 0xbd1c, 0x1, 0x0);
        gbc.writeMem(0x98eb, { 0xd1, 0x29 });
        gbc.writeMem(0xb0e5, { 0xd9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x98ed, gbc.sp());
        EXPECT(0x29d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x98eb));
        EXPECT(0x29, gbc.readMem(0x98ec));
        EXPECT(0xd9, gbc.readMem(0xb0e5));
        // D9 00DF
        gbc.setState(0x3236, 0xb2e3, 0xb2a0, 0xd50a, 0xcd23, 0x8302, 0x1, 0x1);
        gbc.writeMem(0x3236, { 0xd9 });
        gbc.writeMem(0xb2e3, { 0x75, 0x4a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb2e5, gbc.sp());
        EXPECT(0x4a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xb2e3));
        EXPECT(0x4a, gbc.readMem(0xb2e4));
        // D9 00E0
        gbc.setState(0x36e9, 0x6426, 0xf0f0, 0x887d, 0xe6ee, 0x9419, 0x0, 0x0);
        gbc.writeMem(0x36e9, { 0xd9 });
        gbc.writeMem(0x6426, { 0xf6, 0x19 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6428, gbc.sp());
        EXPECT(0x19f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 00E1
        gbc.setState(0x5653, 0xe013, 0x3a50, 0x8e1e, 0xd328, 0x4c9b, 0x0, 0x0);
        gbc.writeMem(0x5653, { 0xd9 });
        gbc.writeMem(0xe013, { 0xb8, 0x6d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe015, gbc.sp());
        EXPECT(0x6db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xe013));
        EXPECT(0x6d, gbc.readMem(0xe014));
        // D9 00E2
        gbc.setState(0x512e, 0xf836, 0x4da0, 0xe7e4, 0x2bb3, 0xa2f7, 0x0, 0x1);
        gbc.writeMem(0x512e, { 0xd9 });
        gbc.writeMem(0xf836, { 0x75, 0x1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf838, gbc.sp());
        EXPECT(0x175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xf836));
        EXPECT(0x1, gbc.readMem(0xf837));
        // D9 00E3
        gbc.setState(0x7356, 0xf884, 0xc1d0, 0x6f24, 0x82ee, 0x1f7e, 0x0, 0x0);
        gbc.writeMem(0x7356, { 0xd9 });
        gbc.writeMem(0xf884, { 0x94, 0xb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf886, gbc.sp());
        EXPECT(0xb94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xf884));
        EXPECT(0xb, gbc.readMem(0xf885));
        // D9 00E4
        gbc.setState(0xcf26, 0x6a7a, 0x5d60, 0x85f3, 0xf4b6, 0x465c, 0x0, 0x1);
        gbc.writeMem(0x6a7a, { 0x2c, 0xf5 });
        gbc.writeMem(0xcf26, { 0xd9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6a7c, gbc.sp());
        EXPECT(0xf52c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcf26));
        // D9 00E5
        gbc.setState(0xe326, 0x25cf, 0xb70, 0x4735, 0xd19a, 0xf7a0, 0x1, 0x0);
        gbc.writeMem(0x25cf, { 0x9a, 0x23 });
        gbc.writeMem(0xe326, { 0xd9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x25d1, gbc.sp());
        EXPECT(0x239a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe326));
        // D9 00E6
        gbc.setState(0xed92, 0x7108, 0x7950, 0xce7, 0x75ce, 0x392c, 0x0, 0x0);
        gbc.writeMem(0x7108, { 0x45, 0xb });
        gbc.writeMem(0xed92, { 0xd9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x710a, gbc.sp());
        EXPECT(0xb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xed92));
        // D9 00E7
        gbc.setState(0xd645, 0x915e, 0xd2a0, 0x21e5, 0x395e, 0x1a5f, 0x1, 0x1);
        gbc.writeMem(0x915e, { 0xc5, 0x85 });
        gbc.writeMem(0xd645, { 0xd9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9160, gbc.sp());
        EXPECT(0x85c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x915e));
        EXPECT(0x85, gbc.readMem(0x915f));
        EXPECT(0xd9, gbc.readMem(0xd645));
        // D9 00E8
        gbc.setState(0x50f2, 0xca4d, 0xe180, 0x528b, 0x34c, 0x36fa, 0x0, 0x1);
        gbc.writeMem(0x50f2, { 0xd9 });
        gbc.writeMem(0xca4d, { 0x17, 0x60 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xca4f, gbc.sp());
        EXPECT(0x6017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xca4d));
        EXPECT(0x60, gbc.readMem(0xca4e));
        // D9 00E9
        gbc.setState(0x451c, 0x529, 0x8910, 0x8424, 0x6e77, 0x4c0, 0x0, 0x0);
        gbc.writeMem(0x529, { 0x7d, 0x21 });
        gbc.writeMem(0x451c, { 0xd9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x52b, gbc.sp());
        EXPECT(0x217d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 00EB
        gbc.setState(0xe568, 0xb19f, 0xa830, 0x9f06, 0x27e3, 0xc082, 0x0, 0x1);
        gbc.writeMem(0xb19f, { 0xb1, 0x77 });
        gbc.writeMem(0xe568, { 0xd9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb1a1, gbc.sp());
        EXPECT(0x77b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xb19f));
        EXPECT(0x77, gbc.readMem(0xb1a0));
        EXPECT(0xd9, gbc.readMem(0xe568));
        // D9 00EC
        gbc.setState(0x9a2c, 0x6306, 0xd400, 0x2e70, 0x6a45, 0x8c07, 0x0, 0x0);
        gbc.writeMem(0x6306, { 0x8f, 0xfa });
        gbc.writeMem(0x9a2c, { 0xd9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6308, gbc.sp());
        EXPECT(0xfa8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9a2c));
        // D9 00ED
        gbc.setState(0x4a1, 0xea2f, 0x2b40, 0xf4d2, 0x21dd, 0x778, 0x0, 0x0);
        gbc.writeMem(0x4a1, { 0xd9 });
        gbc.writeMem(0xea2f, { 0x98, 0x9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xea31, gbc.sp());
        EXPECT(0x998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xea2f));
        EXPECT(0x9, gbc.readMem(0xea30));
        // D9 00EE
        gbc.setState(0x14e7, 0x6b0f, 0xa940, 0x64c0, 0x8a0, 0x64c7, 0x0, 0x0);
        gbc.writeMem(0x14e7, { 0xd9 });
        gbc.writeMem(0x6b0f, { 0x6b, 0xea });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6b11, gbc.sp());
        EXPECT(0xea6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 00EF
        gbc.setState(0xb80a, 0x8d3a, 0xf900, 0x149c, 0xd02b, 0xbfb6, 0x0, 0x0);
        gbc.writeMem(0x8d3a, { 0xe3, 0x3f });
        gbc.writeMem(0xb80a, { 0xd9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8d3c, gbc.sp());
        EXPECT(0x3fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x8d3a));
        EXPECT(0x3f, gbc.readMem(0x8d3b));
        EXPECT(0xd9, gbc.readMem(0xb80a));
        // D9 00F0
        gbc.setState(0x68b2, 0x569, 0x8470, 0x70e5, 0x82a7, 0xc47f, 0x1, 0x1);
        gbc.writeMem(0x569, { 0x37, 0x1e });
        gbc.writeMem(0x68b2, { 0xd9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x56b, gbc.sp());
        EXPECT(0x1e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 00F1
        gbc.setState(0x8adb, 0xdc00, 0xac60, 0x8ec4, 0xb52a, 0x8d62, 0x1, 0x0);
        gbc.writeMem(0x8adb, { 0xd9 });
        gbc.writeMem(0xdc00, { 0xc6, 0xf0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdc02, gbc.sp());
        EXPECT(0xf0c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8adb));
        EXPECT(0xc6, gbc.readMem(0xdc00));
        EXPECT(0xf0, gbc.readMem(0xdc01));
        // D9 00F2
        gbc.setState(0x259b, 0xc7d0, 0x76c0, 0x3ebc, 0xf581, 0x8f2f, 0x0, 0x1);
        gbc.writeMem(0x259b, { 0xd9 });
        gbc.writeMem(0xc7d0, { 0xc6, 0xe1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc7d2, gbc.sp());
        EXPECT(0xe1c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc7d0));
        EXPECT(0xe1, gbc.readMem(0xc7d1));
        // D9 00F3
        gbc.setState(0xc8ec, 0xdb4d, 0xbce0, 0x7cd2, 0x4b92, 0xa0cc, 0x0, 0x1);
        gbc.writeMem(0xc8ec, { 0xd9 });
        gbc.writeMem(0xdb4d, { 0xa3, 0x47 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdb4f, gbc.sp());
        EXPECT(0x47a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc8ec));
        EXPECT(0xa3, gbc.readMem(0xdb4d));
        EXPECT(0x47, gbc.readMem(0xdb4e));
        // D9 00F4
        gbc.setState(0x119e, 0x16af, 0x9f10, 0xc72c, 0xc28a, 0xbf82, 0x1, 0x0);
        gbc.writeMem(0x119e, { 0xd9 });
        gbc.writeMem(0x16af, { 0xc5, 0x5d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x16b1, gbc.sp());
        EXPECT(0x5dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 00F5
        gbc.setState(0x9b91, 0x611a, 0xbf50, 0xee5, 0x49ce, 0xa28f, 0x0, 0x0);
        gbc.writeMem(0x611a, { 0x67, 0x21 });
        gbc.writeMem(0x9b91, { 0xd9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x611c, gbc.sp());
        EXPECT(0x2167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9b91));
        // D9 00F6
        gbc.setState(0xb010, 0xbf5f, 0x2440, 0x74c6, 0x1629, 0x1595, 0x1, 0x0);
        gbc.writeMem(0xb010, { 0xd9 });
        gbc.writeMem(0xbf5f, { 0x7a, 0x8c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbf61, gbc.sp());
        EXPECT(0x8c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb010));
        EXPECT(0x7a, gbc.readMem(0xbf5f));
        EXPECT(0x8c, gbc.readMem(0xbf60));
        // D9 00F7
        gbc.setState(0x159c, 0x5855, 0xb2e0, 0xdc48, 0xc5cb, 0xc1c8, 0x1, 0x1);
        gbc.writeMem(0x159c, { 0xd9 });
        gbc.writeMem(0x5855, { 0xc, 0xbe });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5857, gbc.sp());
        EXPECT(0xbe0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 00F8
        gbc.setState(0xd356, 0x8bf7, 0x8210, 0x206f, 0x38d6, 0xd927, 0x0, 0x0);
        gbc.writeMem(0x8bf7, { 0x12, 0x8b });
        gbc.writeMem(0xd356, { 0xd9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8bf9, gbc.sp());
        EXPECT(0x8b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8bf7));
        EXPECT(0x8b, gbc.readMem(0x8bf8));
        EXPECT(0xd9, gbc.readMem(0xd356));
        // D9 00F9
        gbc.setState(0x955b, 0x9cf3, 0x2f60, 0xbd2e, 0x27cb, 0x167e, 0x0, 0x1);
        gbc.writeMem(0x955b, { 0xd9 });
        gbc.writeMem(0x9cf3, { 0xf0, 0x51 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9cf5, gbc.sp());
        EXPECT(0x51f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x955b));
        EXPECT(0xf0, gbc.readMem(0x9cf3));
        EXPECT(0x51, gbc.readMem(0x9cf4));
        // D9 00FA
        gbc.setState(0xb2cb, 0xd2bb, 0xecf0, 0xa7, 0xf559, 0x82da, 0x1, 0x0);
        gbc.writeMem(0xb2cb, { 0xd9 });
        gbc.writeMem(0xd2bb, { 0xa1, 0x60 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd2bd, gbc.sp());
        EXPECT(0x60a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb2cb));
        EXPECT(0xa1, gbc.readMem(0xd2bb));
        EXPECT(0x60, gbc.readMem(0xd2bc));
        // D9 00FB
        gbc.setState(0xaf47, 0xa6c9, 0x1490, 0x88a8, 0x1c7d, 0x2541, 0x1, 0x1);
        gbc.writeMem(0xa6c9, { 0x29, 0x1d });
        gbc.writeMem(0xaf47, { 0xd9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa6cb, gbc.sp());
        EXPECT(0x1d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa6c9));
        EXPECT(0x1d, gbc.readMem(0xa6ca));
        EXPECT(0xd9, gbc.readMem(0xaf47));
        // D9 00FC
        gbc.setState(0xcae9, 0x86ae, 0x5c60, 0x1aaa, 0xc2e, 0x8392, 0x1, 0x0);
        gbc.writeMem(0x86ae, { 0x76, 0xe3 });
        gbc.writeMem(0xcae9, { 0xd9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x86b0, gbc.sp());
        EXPECT(0xe376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x86ae));
        EXPECT(0xe3, gbc.readMem(0x86af));
        EXPECT(0xd9, gbc.readMem(0xcae9));
        // D9 00FD
        gbc.setState(0x7d57, 0xd3e0, 0x5600, 0x9f63, 0xd980, 0x46fc, 0x1, 0x0);
        gbc.writeMem(0x7d57, { 0xd9 });
        gbc.writeMem(0xd3e0, { 0x1, 0xac });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd3e2, gbc.sp());
        EXPECT(0xac01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xd3e0));
        EXPECT(0xac, gbc.readMem(0xd3e1));
        // D9 00FE
        gbc.setState(0x414d, 0x9b7e, 0x2f90, 0xff0f, 0x875e, 0x6af, 0x0, 0x0);
        gbc.writeMem(0x414d, { 0xd9 });
        gbc.writeMem(0x9b7e, { 0x9f, 0xec });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9b80, gbc.sp());
        EXPECT(0xec9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9b7e));
        EXPECT(0xec, gbc.readMem(0x9b7f));
        // D9 00FF
        gbc.setState(0x8209, 0xcff6, 0x4580, 0xb0e2, 0xbe8b, 0xc53f, 0x1, 0x1);
        gbc.writeMem(0x8209, { 0xd9 });
        gbc.writeMem(0xcff6, { 0x6c, 0x6 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xcff8, gbc.sp());
        EXPECT(0x66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8209));
        EXPECT(0x6c, gbc.readMem(0xcff6));
        EXPECT(0x6, gbc.readMem(0xcff7));
        // D9 0100
        gbc.setState(0x8b29, 0xfb05, 0x2a90, 0xe1d, 0xf0fe, 0x1ad4, 0x0, 0x1);
        gbc.writeMem(0x8b29, { 0xd9 });
        gbc.writeMem(0xfb05, { 0xe3, 0x99 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfb07, gbc.sp());
        EXPECT(0x99e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8b29));
        EXPECT(0xe3, gbc.readMem(0xfb05));
        EXPECT(0x99, gbc.readMem(0xfb06));
        // D9 0101
        gbc.setState(0xb05f, 0x2787, 0x1920, 0x81f0, 0x30eb, 0x240e, 0x0, 0x1);
        gbc.writeMem(0x2787, { 0xa4, 0x7 });
        gbc.writeMem(0xb05f, { 0xd9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2789, gbc.sp());
        EXPECT(0x7a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb05f));
        // D9 0102
        gbc.setState(0xb7d6, 0xa634, 0x5680, 0xf63c, 0x4f82, 0xa70a, 0x1, 0x0);
        gbc.writeMem(0xa634, { 0xe3, 0x7f });
        gbc.writeMem(0xb7d6, { 0xd9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa636, gbc.sp());
        EXPECT(0x7fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xa634));
        EXPECT(0x7f, gbc.readMem(0xa635));
        EXPECT(0xd9, gbc.readMem(0xb7d6));
        // D9 0103
        gbc.setState(0xb8dc, 0x9afb, 0x4c90, 0x9b58, 0x5a51, 0x8e3b, 0x1, 0x1);
        gbc.writeMem(0x9afb, { 0xe5, 0x31 });
        gbc.writeMem(0xb8dc, { 0xd9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9afd, gbc.sp());
        EXPECT(0x31e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9afb));
        EXPECT(0x31, gbc.readMem(0x9afc));
        EXPECT(0xd9, gbc.readMem(0xb8dc));
        // D9 0105
        gbc.setState(0x9baf, 0x57c7, 0xdb40, 0x1ae3, 0xfeef, 0xd05d, 0x1, 0x1);
        gbc.writeMem(0x57c7, { 0x7b, 0xa1 });
        gbc.writeMem(0x9baf, { 0xd9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x57c9, gbc.sp());
        EXPECT(0xa17b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9baf));
        // D9 0106
        gbc.setState(0x8ae1, 0xfee8, 0x1be0, 0x5a55, 0x2fa, 0x8573, 0x0, 0x0);
        gbc.writeMem(0x8ae1, { 0xd9 });
        gbc.writeMem(0xfee8, { 0xe1, 0x41 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfeea, gbc.sp());
        EXPECT(0x41e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8ae1));
        EXPECT(0xe1, gbc.readMem(0xfee8));
        EXPECT(0x41, gbc.readMem(0xfee9));
        // D9 0107
        gbc.setState(0x82cb, 0x4635, 0xe60, 0x1fbd, 0x30f9, 0x5324, 0x1, 0x0);
        gbc.writeMem(0x4635, { 0x6a, 0x7e });
        gbc.writeMem(0x82cb, { 0xd9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4637, gbc.sp());
        EXPECT(0x7e6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x82cb));
        // D9 0108
        gbc.setState(0xd40b, 0xdc46, 0x76a0, 0x479d, 0x4347, 0xcc0c, 0x1, 0x0);
        gbc.writeMem(0xd40b, { 0xd9 });
        gbc.writeMem(0xdc46, { 0x73, 0xe4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xdc48, gbc.sp());
        EXPECT(0xe473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd40b));
        EXPECT(0x73, gbc.readMem(0xdc46));
        EXPECT(0xe4, gbc.readMem(0xdc47));
        // D9 0109
        gbc.setState(0x3bbc, 0xd5be, 0x1920, 0xfe91, 0xd51e, 0x2dc9, 0x1, 0x0);
        gbc.writeMem(0x3bbc, { 0xd9 });
        gbc.writeMem(0xd5be, { 0xa5, 0x54 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd5c0, gbc.sp());
        EXPECT(0x54a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xd5be));
        EXPECT(0x54, gbc.readMem(0xd5bf));
        // D9 010A
        gbc.setState(0xcf49, 0x6c6, 0xd6c0, 0xbf5b, 0xff10, 0xa7af, 0x0, 0x1);
        gbc.writeMem(0x6c6, { 0x52, 0x73 });
        gbc.writeMem(0xcf49, { 0xd9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6c8, gbc.sp());
        EXPECT(0x7352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcf49));
        // D9 010B
        gbc.setState(0x89a1, 0x2d94, 0xcc20, 0xd1cb, 0x8b4e, 0x3763, 0x1, 0x1);
        gbc.writeMem(0x2d94, { 0xbd, 0x6f });
        gbc.writeMem(0x89a1, { 0xd9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2d96, gbc.sp());
        EXPECT(0x6fbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x89a1));
        // D9 010C
        gbc.setState(0xdb5e, 0xe947, 0x8850, 0x362c, 0x2b0a, 0x94f4, 0x0, 0x1);
        gbc.writeMem(0xdb5e, { 0xd9 });
        gbc.writeMem(0xe947, { 0x43, 0xa0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe949, gbc.sp());
        EXPECT(0xa043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xdb5e));
        EXPECT(0x43, gbc.readMem(0xe947));
        EXPECT(0xa0, gbc.readMem(0xe948));
        // D9 010D
        gbc.setState(0xc940, 0x2ac, 0x8530, 0xfa73, 0xfe95, 0x8194, 0x1, 0x1);
        gbc.writeMem(0x2ac, { 0xde, 0x62 });
        gbc.writeMem(0xc940, { 0xd9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2ae, gbc.sp());
        EXPECT(0x62de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc940));
        // D9 010E
        gbc.setState(0x2418, 0xfabe, 0xb880, 0x7d80, 0xedb, 0x444c, 0x1, 0x1);
        gbc.writeMem(0x2418, { 0xd9 });
        gbc.writeMem(0xfabe, { 0x8d, 0xdc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfac0, gbc.sp());
        EXPECT(0xdc8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xfabe));
        EXPECT(0xdc, gbc.readMem(0xfabf));
        // D9 0110
        gbc.setState(0x128d, 0xc249, 0x3b30, 0x4254, 0x5c48, 0x99f9, 0x1, 0x0);
        gbc.writeMem(0x128d, { 0xd9 });
        gbc.writeMem(0xc249, { 0xac, 0x7b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc24b, gbc.sp());
        EXPECT(0x7bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc249));
        EXPECT(0x7b, gbc.readMem(0xc24a));
        // D9 0111
        gbc.setState(0x3b82, 0x7431, 0x9490, 0x792c, 0xd6d4, 0xd89d, 0x1, 0x0);
        gbc.writeMem(0x3b82, { 0xd9 });
        gbc.writeMem(0x7431, { 0xec, 0xd4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7433, gbc.sp());
        EXPECT(0xd4ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0112
        gbc.setState(0xd5f2, 0xe4b9, 0xec70, 0xcc35, 0xea68, 0x651, 0x1, 0x1);
        gbc.writeMem(0xd5f2, { 0xd9 });
        gbc.writeMem(0xe4b9, { 0x63, 0x7f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe4bb, gbc.sp());
        EXPECT(0x7f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd5f2));
        EXPECT(0x63, gbc.readMem(0xe4b9));
        EXPECT(0x7f, gbc.readMem(0xe4ba));
        // D9 0113
        gbc.setState(0xccdb, 0x297, 0x3100, 0x26d7, 0x44a6, 0x10d8, 0x0, 0x1);
        gbc.writeMem(0x297, { 0x57, 0x44 });
        gbc.writeMem(0xccdb, { 0xd9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x299, gbc.sp());
        EXPECT(0x4457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xccdb));
        // D9 0114
        gbc.setState(0x9eff, 0xdc34, 0x40, 0x177c, 0x633b, 0x1ba, 0x0, 0x0);
        gbc.writeMem(0x9eff, { 0xd9 });
        gbc.writeMem(0xdc34, { 0xf3, 0xf7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdc36, gbc.sp());
        EXPECT(0xf7f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9eff));
        EXPECT(0xf3, gbc.readMem(0xdc34));
        EXPECT(0xf7, gbc.readMem(0xdc35));
        // D9 0115
        gbc.setState(0xd550, 0xbe1d, 0x38a0, 0x7242, 0x6a6, 0xd30f, 0x1, 0x0);
        gbc.writeMem(0xbe1d, { 0xd1, 0x5f });
        gbc.writeMem(0xd550, { 0xd9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbe1f, gbc.sp());
        EXPECT(0x5fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xbe1d));
        EXPECT(0x5f, gbc.readMem(0xbe1e));
        EXPECT(0xd9, gbc.readMem(0xd550));
        // D9 0116
        gbc.setState(0x331b, 0x5c4b, 0x6100, 0x6229, 0x3c8, 0x5e79, 0x1, 0x1);
        gbc.writeMem(0x331b, { 0xd9 });
        gbc.writeMem(0x5c4b, { 0x57, 0xc1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5c4d, gbc.sp());
        EXPECT(0xc157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0117
        gbc.setState(0x9dc5, 0x8587, 0xed60, 0xccbc, 0xf5ab, 0xf50c, 0x0, 0x0);
        gbc.writeMem(0x8587, { 0x82, 0x2e });
        gbc.writeMem(0x9dc5, { 0xd9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8589, gbc.sp());
        EXPECT(0x2e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8587));
        EXPECT(0x2e, gbc.readMem(0x8588));
        EXPECT(0xd9, gbc.readMem(0x9dc5));
        // D9 0119
        gbc.setState(0x8b7f, 0xcd17, 0x9cf0, 0xbdc6, 0x3bf6, 0xa55f, 0x1, 0x0);
        gbc.writeMem(0x8b7f, { 0xd9 });
        gbc.writeMem(0xcd17, { 0x96, 0xe3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcd19, gbc.sp());
        EXPECT(0xe396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8b7f));
        EXPECT(0x96, gbc.readMem(0xcd17));
        EXPECT(0xe3, gbc.readMem(0xcd18));
        // D9 011A
        gbc.setState(0x6dca, 0x8429, 0x3410, 0xb299, 0xe1a0, 0x7a09, 0x1, 0x1);
        gbc.writeMem(0x6dca, { 0xd9 });
        gbc.writeMem(0x8429, { 0x3, 0x54 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x842b, gbc.sp());
        EXPECT(0x5403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8429));
        EXPECT(0x54, gbc.readMem(0x842a));
        // D9 011B
        gbc.setState(0xb3de, 0x94b3, 0x3fd0, 0xb7de, 0xec1e, 0x40fa, 0x0, 0x0);
        gbc.writeMem(0x94b3, { 0xf3, 0x6d });
        gbc.writeMem(0xb3de, { 0xd9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x94b5, gbc.sp());
        EXPECT(0x6df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x94b3));
        EXPECT(0x6d, gbc.readMem(0x94b4));
        EXPECT(0xd9, gbc.readMem(0xb3de));
        // D9 011C
        gbc.setState(0x7a82, 0xe2f, 0xab0, 0x9e7c, 0xa892, 0xbce0, 0x0, 0x1);
        gbc.writeMem(0xe2f, { 0xfd, 0xbc });
        gbc.writeMem(0x7a82, { 0xd9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe31, gbc.sp());
        EXPECT(0xbcfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 011D
        gbc.setState(0x140a, 0x4066, 0xcd70, 0x5d7d, 0x1a8a, 0xde80, 0x1, 0x1);
        gbc.writeMem(0x140a, { 0xd9 });
        gbc.writeMem(0x4066, { 0x1f, 0x31 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4068, gbc.sp());
        EXPECT(0x311f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 011E
        gbc.setState(0x510e, 0xf4d2, 0xf880, 0x7e2a, 0x82a8, 0xbb27, 0x1, 0x1);
        gbc.writeMem(0x510e, { 0xd9 });
        gbc.writeMem(0xf4d2, { 0xe7, 0xea });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf4d4, gbc.sp());
        EXPECT(0xeae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xf4d2));
        EXPECT(0xea, gbc.readMem(0xf4d3));
        // D9 011F
        gbc.setState(0xdc1e, 0xdfc5, 0xa2c0, 0x264e, 0x2e52, 0x55f7, 0x1, 0x0);
        gbc.writeMem(0xdc1e, { 0xd9 });
        gbc.writeMem(0xdfc5, { 0x12, 0x9f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdfc7, gbc.sp());
        EXPECT(0x9f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xdc1e));
        EXPECT(0x12, gbc.readMem(0xdfc5));
        EXPECT(0x9f, gbc.readMem(0xdfc6));
        // D9 0120
        gbc.setState(0x76f1, 0x15c6, 0xfb90, 0xe651, 0xbe6e, 0x6b4b, 0x1, 0x0);
        gbc.writeMem(0x15c6, { 0x50, 0xae });
        gbc.writeMem(0x76f1, { 0xd9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x15c8, gbc.sp());
        EXPECT(0xae50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0122
        gbc.setState(0xd34d, 0x49a5, 0xb980, 0x3b28, 0x592d, 0xaeb7, 0x0, 0x0);
        gbc.writeMem(0x49a5, { 0x9, 0xdf });
        gbc.writeMem(0xd34d, { 0xd9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x49a7, gbc.sp());
        EXPECT(0xdf09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd34d));
        // D9 0123
        gbc.setState(0xe34c, 0x2c2b, 0x8de0, 0x877c, 0x5aa2, 0xf2e6, 0x1, 0x0);
        gbc.writeMem(0x2c2b, { 0xa1, 0x5a });
        gbc.writeMem(0xe34c, { 0xd9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2c2d, gbc.sp());
        EXPECT(0x5aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe34c));
        // D9 0124
        gbc.setState(0x9d1b, 0xbf18, 0xb260, 0x5399, 0x8883, 0xc678, 0x1, 0x1);
        gbc.writeMem(0x9d1b, { 0xd9 });
        gbc.writeMem(0xbf18, { 0x56, 0x5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbf1a, gbc.sp());
        EXPECT(0x556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9d1b));
        EXPECT(0x56, gbc.readMem(0xbf18));
        EXPECT(0x5, gbc.readMem(0xbf19));
        // D9 0125
        gbc.setState(0xb20e, 0x8103, 0x6110, 0x154a, 0x4409, 0xf920, 0x1, 0x0);
        gbc.writeMem(0x8103, { 0x62, 0x1e });
        gbc.writeMem(0xb20e, { 0xd9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8105, gbc.sp());
        EXPECT(0x1e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x8103));
        EXPECT(0x1e, gbc.readMem(0x8104));
        EXPECT(0xd9, gbc.readMem(0xb20e));
        // D9 0126
        gbc.setState(0x6e64, 0x7cdf, 0xf880, 0x422a, 0xfa39, 0xb596, 0x0, 0x0);
        gbc.writeMem(0x6e64, { 0xd9 });
        gbc.writeMem(0x7cdf, { 0xbd, 0x1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7ce1, gbc.sp());
        EXPECT(0x1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0127
        gbc.setState(0xb075, 0x93f2, 0xb880, 0x455c, 0x21c9, 0xd14, 0x1, 0x1);
        gbc.writeMem(0x93f2, { 0x0, 0x46 });
        gbc.writeMem(0xb075, { 0xd9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x93f4, gbc.sp());
        EXPECT(0x4600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x93f2));
        EXPECT(0x46, gbc.readMem(0x93f3));
        EXPECT(0xd9, gbc.readMem(0xb075));
        // D9 0128
        gbc.setState(0xbea6, 0x18dd, 0x73f0, 0xb5e0, 0xe430, 0xe162, 0x0, 0x0);
        gbc.writeMem(0x18dd, { 0x10, 0xd0 });
        gbc.writeMem(0xbea6, { 0xd9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x18df, gbc.sp());
        EXPECT(0xd010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbea6));
        // D9 0129
        gbc.setState(0x1613, 0x4698, 0xf4d0, 0x9147, 0x58a3, 0x56f3, 0x0, 0x0);
        gbc.writeMem(0x1613, { 0xd9 });
        gbc.writeMem(0x4698, { 0x96, 0x16 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x469a, gbc.sp());
        EXPECT(0x1696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 012A
        gbc.setState(0xcff9, 0xde00, 0x21b0, 0x64dc, 0x3bad, 0x96a0, 0x0, 0x1);
        gbc.writeMem(0xcff9, { 0xd9 });
        gbc.writeMem(0xde00, { 0xb, 0xbe });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xde02, gbc.sp());
        EXPECT(0xbe0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcff9));
        EXPECT(0xb, gbc.readMem(0xde00));
        EXPECT(0xbe, gbc.readMem(0xde01));
        // D9 012B
        gbc.setState(0x837e, 0x76f, 0xcfb0, 0x8e9c, 0x8e3e, 0x837, 0x1, 0x1);
        gbc.writeMem(0x76f, { 0x73, 0x1c });
        gbc.writeMem(0x837e, { 0xd9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x771, gbc.sp());
        EXPECT(0x1c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x837e));
        // D9 012C
        gbc.setState(0x2786, 0x4e86, 0xae50, 0x4540, 0x11f7, 0x16a1, 0x0, 0x0);
        gbc.writeMem(0x2786, { 0xd9 });
        gbc.writeMem(0x4e86, { 0x75, 0xf8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4e88, gbc.sp());
        EXPECT(0xf875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 012D
        gbc.setState(0xc426, 0x552d, 0x6e80, 0xcc80, 0xe64, 0x4d9c, 0x0, 0x1);
        gbc.writeMem(0x552d, { 0xe9, 0xdd });
        gbc.writeMem(0xc426, { 0xd9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x552f, gbc.sp());
        EXPECT(0xdde9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc426));
        // D9 012E
        gbc.setState(0xee0d, 0xae5a, 0x6390, 0x607c, 0xeaaa, 0x813b, 0x1, 0x0);
        gbc.writeMem(0xae5a, { 0xe6, 0x61 });
        gbc.writeMem(0xee0d, { 0xd9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xae5c, gbc.sp());
        EXPECT(0x61e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xae5a));
        EXPECT(0x61, gbc.readMem(0xae5b));
        EXPECT(0xd9, gbc.readMem(0xee0d));
        // D9 012F
        gbc.setState(0xbea3, 0xe007, 0xfc40, 0x79f0, 0x6c6e, 0x14f3, 0x1, 0x0);
        gbc.writeMem(0xbea3, { 0xd9 });
        gbc.writeMem(0xe007, { 0xeb, 0xeb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe009, gbc.sp());
        EXPECT(0xebeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbea3));
        EXPECT(0xeb, gbc.readMem(0xe007));
        EXPECT(0xeb, gbc.readMem(0xe008));
        // D9 0130
        gbc.setState(0x3645, 0x2186, 0x3bb0, 0x67bb, 0x509d, 0xbef7, 0x0, 0x1);
        gbc.writeMem(0x2186, { 0x2c, 0x9d });
        gbc.writeMem(0x3645, { 0xd9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2188, gbc.sp());
        EXPECT(0x9d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0131
        gbc.setState(0xafb4, 0xfc6f, 0xe6b0, 0x8ddf, 0xa612, 0xe315, 0x1, 0x0);
        gbc.writeMem(0xafb4, { 0xd9 });
        gbc.writeMem(0xfc6f, { 0xce, 0x4d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfc71, gbc.sp());
        EXPECT(0x4dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xafb4));
        EXPECT(0xce, gbc.readMem(0xfc6f));
        EXPECT(0x4d, gbc.readMem(0xfc70));
        // D9 0132
        gbc.setState(0x270f, 0xaa1e, 0xf90, 0xa29f, 0xa0fb, 0x93b6, 0x1, 0x1);
        gbc.writeMem(0x270f, { 0xd9 });
        gbc.writeMem(0xaa1e, { 0xc6, 0xe2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xaa20, gbc.sp());
        EXPECT(0xe2c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xaa1e));
        EXPECT(0xe2, gbc.readMem(0xaa1f));
        // D9 0134
        gbc.setState(0xd307, 0x590d, 0xee70, 0x7909, 0x76b8, 0xcff9, 0x1, 0x1);
        gbc.writeMem(0x590d, { 0x8a, 0x66 });
        gbc.writeMem(0xd307, { 0xd9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x590f, gbc.sp());
        EXPECT(0x668a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd307));
        // D9 0135
        gbc.setState(0x215f, 0x127b, 0xb530, 0x7dbd, 0x1260, 0xcf22, 0x0, 0x0);
        gbc.writeMem(0x127b, { 0x6a, 0xa1 });
        gbc.writeMem(0x215f, { 0xd9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x127d, gbc.sp());
        EXPECT(0xa16a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0136
        gbc.setState(0x2e67, 0x2b8e, 0xbc00, 0x2d0e, 0xe83f, 0x68fb, 0x1, 0x1);
        gbc.writeMem(0x2b8e, { 0x40, 0x18 });
        gbc.writeMem(0x2e67, { 0xd9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2b90, gbc.sp());
        EXPECT(0x1840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0137
        gbc.setState(0x12a7, 0xa96a, 0x3d00, 0xc0ce, 0xf322, 0xa11b, 0x1, 0x0);
        gbc.writeMem(0x12a7, { 0xd9 });
        gbc.writeMem(0xa96a, { 0xc0, 0x61 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa96c, gbc.sp());
        EXPECT(0x61c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xa96a));
        EXPECT(0x61, gbc.readMem(0xa96b));
        // D9 0138
        gbc.setState(0x9330, 0x828, 0xa710, 0x2de5, 0x4350, 0xc088, 0x1, 0x0);
        gbc.writeMem(0x828, { 0x83, 0xff });
        gbc.writeMem(0x9330, { 0xd9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x82a, gbc.sp());
        EXPECT(0xff83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9330));
        // D9 0139
        gbc.setState(0x8281, 0x756, 0x450, 0x2b89, 0xff4, 0xa93a, 0x1, 0x1);
        gbc.writeMem(0x756, { 0x5, 0x71 });
        gbc.writeMem(0x8281, { 0xd9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x758, gbc.sp());
        EXPECT(0x7105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8281));
        // D9 013A
        gbc.setState(0x355d, 0xc8f0, 0xd3d0, 0x29b0, 0x4c4b, 0x3651, 0x1, 0x0);
        gbc.writeMem(0x355d, { 0xd9 });
        gbc.writeMem(0xc8f0, { 0xa1, 0xa0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc8f2, gbc.sp());
        EXPECT(0xa0a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc8f0));
        EXPECT(0xa0, gbc.readMem(0xc8f1));
        // D9 013B
        gbc.setState(0x6dbc, 0x514b, 0xab50, 0x8750, 0x8258, 0x10ba, 0x1, 0x1);
        gbc.writeMem(0x514b, { 0xa2, 0x2c });
        gbc.writeMem(0x6dbc, { 0xd9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x514d, gbc.sp());
        EXPECT(0x2ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 013C
        gbc.setState(0x6d6a, 0x958, 0xb980, 0xe0fe, 0xe488, 0x84f8, 0x1, 0x1);
        gbc.writeMem(0x958, { 0x30, 0x69 });
        gbc.writeMem(0x6d6a, { 0xd9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x95a, gbc.sp());
        EXPECT(0x6930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 013D
        gbc.setState(0x1b18, 0x4767, 0x300, 0xddd4, 0x96f3, 0xce7c, 0x1, 0x0);
        gbc.writeMem(0x1b18, { 0xd9 });
        gbc.writeMem(0x4767, { 0x67, 0x42 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4769, gbc.sp());
        EXPECT(0x4267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 013E
        gbc.setState(0x6a80, 0x6da6, 0x8c60, 0x1cf2, 0xd0e5, 0xbb66, 0x1, 0x0);
        gbc.writeMem(0x6a80, { 0xd9 });
        gbc.writeMem(0x6da6, { 0xe2, 0x19 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6da8, gbc.sp());
        EXPECT(0x19e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 013F
        gbc.setState(0xc6be, 0xb528, 0x77d0, 0x317b, 0x5137, 0x74e9, 0x1, 0x1);
        gbc.writeMem(0xb528, { 0xdd, 0xf4 });
        gbc.writeMem(0xc6be, { 0xd9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb52a, gbc.sp());
        EXPECT(0xf4dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xb528));
        EXPECT(0xf4, gbc.readMem(0xb529));
        EXPECT(0xd9, gbc.readMem(0xc6be));
        // D9 0140
        gbc.setState(0x266b, 0x2e45, 0x42e0, 0x3326, 0xa74f, 0xfe33, 0x1, 0x0);
        gbc.writeMem(0x266b, { 0xd9 });
        gbc.writeMem(0x2e45, { 0xb1, 0x4a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2e47, gbc.sp());
        EXPECT(0x4ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0141
        gbc.setState(0x8110, 0x4d46, 0x9270, 0x392e, 0x9e5a, 0xdfca, 0x0, 0x1);
        gbc.writeMem(0x4d46, { 0x36, 0x45 });
        gbc.writeMem(0x8110, { 0xd9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4d48, gbc.sp());
        EXPECT(0x4536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8110));
        // D9 0142
        gbc.setState(0xb371, 0xa6c0, 0x3be0, 0x4582, 0xd51b, 0x7b56, 0x1, 0x0);
        gbc.writeMem(0xa6c0, { 0xfb, 0x89 });
        gbc.writeMem(0xb371, { 0xd9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa6c2, gbc.sp());
        EXPECT(0x89fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xa6c0));
        EXPECT(0x89, gbc.readMem(0xa6c1));
        EXPECT(0xd9, gbc.readMem(0xb371));
        // D9 0143
        gbc.setState(0x4764, 0xf146, 0xa060, 0x9813, 0x6805, 0x2d90, 0x1, 0x1);
        gbc.writeMem(0x4764, { 0xd9 });
        gbc.writeMem(0xf146, { 0x38, 0x27 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf148, gbc.sp());
        EXPECT(0x2738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xf146));
        EXPECT(0x27, gbc.readMem(0xf147));
        // D9 0144
        gbc.setState(0x73a3, 0x89d0, 0x7570, 0x763f, 0x46d6, 0xbdbb, 0x0, 0x0);
        gbc.writeMem(0x73a3, { 0xd9 });
        gbc.writeMem(0x89d0, { 0xec, 0x19 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x89d2, gbc.sp());
        EXPECT(0x19ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x89d0));
        EXPECT(0x19, gbc.readMem(0x89d1));
        // D9 0145
        gbc.setState(0xe6bc, 0xae98, 0x21f0, 0x1a1e, 0xe605, 0xebf7, 0x1, 0x0);
        gbc.writeMem(0xae98, { 0x76, 0x2 });
        gbc.writeMem(0xe6bc, { 0xd9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xae9a, gbc.sp());
        EXPECT(0x276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xae98));
        EXPECT(0x2, gbc.readMem(0xae99));
        EXPECT(0xd9, gbc.readMem(0xe6bc));
        // D9 0146
        gbc.setState(0xdea0, 0xc39a, 0x1980, 0xf247, 0x3ba9, 0xec6b, 0x1, 0x1);
        gbc.writeMem(0xc39a, { 0x68, 0x75 });
        gbc.writeMem(0xdea0, { 0xd9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc39c, gbc.sp());
        EXPECT(0x7568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc39a));
        EXPECT(0x75, gbc.readMem(0xc39b));
        EXPECT(0xd9, gbc.readMem(0xdea0));
        // D9 0147
        gbc.setState(0x1f2, 0x8502, 0x76f0, 0xab93, 0x7d47, 0x869a, 0x1, 0x0);
        gbc.writeMem(0x1f2, { 0xd9 });
        gbc.writeMem(0x8502, { 0xa8, 0xcd });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8504, gbc.sp());
        EXPECT(0xcda8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x8502));
        EXPECT(0xcd, gbc.readMem(0x8503));
        // D9 0148
        gbc.setState(0xa4b7, 0x9f29, 0x4690, 0x56cc, 0x123, 0x669e, 0x1, 0x0);
        gbc.writeMem(0x9f29, { 0xa6, 0xa8 });
        gbc.writeMem(0xa4b7, { 0xd9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9f2b, gbc.sp());
        EXPECT(0xa8a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9f29));
        EXPECT(0xa8, gbc.readMem(0x9f2a));
        EXPECT(0xd9, gbc.readMem(0xa4b7));
        // D9 0149
        gbc.setState(0xffe, 0x3e, 0x48a0, 0x8fd2, 0x24c7, 0x96a5, 0x0, 0x1);
        gbc.writeMem(0x3e, { 0x30, 0x46 });
        gbc.writeMem(0xffe, { 0xd9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x40, gbc.sp());
        EXPECT(0x4630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 014A
        gbc.setState(0x617f, 0x3dd2, 0x8870, 0xf280, 0x206e, 0x32b8, 0x0, 0x1);
        gbc.writeMem(0x3dd2, { 0x46, 0x6 });
        gbc.writeMem(0x617f, { 0xd9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3dd4, gbc.sp());
        EXPECT(0x646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 014B
        gbc.setState(0x37f2, 0xc462, 0xaf20, 0xbadd, 0xf8f0, 0x803b, 0x1, 0x1);
        gbc.writeMem(0x37f2, { 0xd9 });
        gbc.writeMem(0xc462, { 0xe0, 0xe9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc464, gbc.sp());
        EXPECT(0xe9e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc462));
        EXPECT(0xe9, gbc.readMem(0xc463));
        // D9 014C
        gbc.setState(0x8f58, 0xda15, 0xb030, 0x3b83, 0x995e, 0x35c3, 0x0, 0x1);
        gbc.writeMem(0x8f58, { 0xd9 });
        gbc.writeMem(0xda15, { 0xd2, 0x4a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xda17, gbc.sp());
        EXPECT(0x4ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8f58));
        EXPECT(0xd2, gbc.readMem(0xda15));
        EXPECT(0x4a, gbc.readMem(0xda16));
        // D9 014D
        gbc.setState(0x203c, 0x2886, 0xc850, 0xdf40, 0xf49d, 0x21a6, 0x0, 0x1);
        gbc.writeMem(0x203c, { 0xd9 });
        gbc.writeMem(0x2886, { 0x4c, 0x92 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2888, gbc.sp());
        EXPECT(0x924c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 014E
        gbc.setState(0x5d00, 0xd0fa, 0x90e0, 0x1076, 0x876b, 0x4250, 0x1, 0x0);
        gbc.writeMem(0x5d00, { 0xd9 });
        gbc.writeMem(0xd0fa, { 0xf3, 0x45 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd0fc, gbc.sp());
        EXPECT(0x45f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xd0fa));
        EXPECT(0x45, gbc.readMem(0xd0fb));
        // D9 014F
        gbc.setState(0x4be8, 0xa1f4, 0xb110, 0x9162, 0xff76, 0x825b, 0x1, 0x1);
        gbc.writeMem(0x4be8, { 0xd9 });
        gbc.writeMem(0xa1f4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa1f6, gbc.sp());
        EXPECT(0x28cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f4));
        EXPECT(0x28, gbc.readMem(0xa1f5));
        // D9 0150
        gbc.setState(0x635d, 0x9042, 0x1a50, 0x6184, 0xf7d4, 0xbd26, 0x1, 0x0);
        gbc.writeMem(0x635d, { 0xd9 });
        gbc.writeMem(0x9042, { 0xa3, 0xd3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9044, gbc.sp());
        EXPECT(0xd3a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9042));
        EXPECT(0xd3, gbc.readMem(0x9043));
        // D9 0151
        gbc.setState(0x1d28, 0xb3a, 0x10c0, 0xcd36, 0x268e, 0x792d, 0x1, 0x1);
        gbc.writeMem(0xb3a, { 0x12, 0x1c });
        gbc.writeMem(0x1d28, { 0xd9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb3c, gbc.sp());
        EXPECT(0x1c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0152
        gbc.setState(0xd3b8, 0xe4ea, 0x7710, 0x7783, 0xaab9, 0x4aff, 0x1, 0x0);
        gbc.writeMem(0xd3b8, { 0xd9 });
        gbc.writeMem(0xe4ea, { 0xbf, 0x1b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe4ec, gbc.sp());
        EXPECT(0x1bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd3b8));
        EXPECT(0xbf, gbc.readMem(0xe4ea));
        EXPECT(0x1b, gbc.readMem(0xe4eb));
        // D9 0153
        gbc.setState(0xd785, 0x309e, 0x9d30, 0xe42e, 0x9732, 0x72f4, 0x0, 0x1);
        gbc.writeMem(0x309e, { 0x59, 0xbc });
        gbc.writeMem(0xd785, { 0xd9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x30a0, gbc.sp());
        EXPECT(0xbc59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd785));
        // D9 0154
        gbc.setState(0xb6f1, 0x2f60, 0x5560, 0xfc4f, 0xf9b5, 0x1d87, 0x0, 0x1);
        gbc.writeMem(0x2f60, { 0xe7, 0xe3 });
        gbc.writeMem(0xb6f1, { 0xd9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2f62, gbc.sp());
        EXPECT(0xe3e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb6f1));
        // D9 0155
        gbc.setState(0xab9c, 0x4ec1, 0xcee0, 0x9a67, 0xfe7d, 0xf8d7, 0x0, 0x1);
        gbc.writeMem(0x4ec1, { 0x6d, 0x90 });
        gbc.writeMem(0xab9c, { 0xd9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4ec3, gbc.sp());
        EXPECT(0x906d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xab9c));
        // D9 0156
        gbc.setState(0x1029, 0x548a, 0x8bb0, 0xeecb, 0xa5f4, 0xfe2e, 0x0, 0x0);
        gbc.writeMem(0x1029, { 0xd9 });
        gbc.writeMem(0x548a, { 0x8f, 0xf1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x548c, gbc.sp());
        EXPECT(0xf18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0157
        gbc.setState(0xaa8d, 0xe352, 0x6b40, 0xa4a2, 0xbe1e, 0xa5f, 0x1, 0x1);
        gbc.writeMem(0xaa8d, { 0xd9 });
        gbc.writeMem(0xe352, { 0x7d, 0x42 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe354, gbc.sp());
        EXPECT(0x427d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xaa8d));
        EXPECT(0x7d, gbc.readMem(0xe352));
        EXPECT(0x42, gbc.readMem(0xe353));
        // D9 0158
        gbc.setState(0xa2ff, 0xd2f9, 0xbc70, 0x1bfe, 0xc54d, 0x1e4d, 0x1, 0x0);
        gbc.writeMem(0xa2ff, { 0xd9 });
        gbc.writeMem(0xd2f9, { 0x82, 0x29 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd2fb, gbc.sp());
        EXPECT(0x2982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa2ff));
        EXPECT(0x82, gbc.readMem(0xd2f9));
        EXPECT(0x29, gbc.readMem(0xd2fa));
        // D9 0159
        gbc.setState(0x4606, 0xe5ac, 0x88e0, 0x53d0, 0x95e4, 0x894a, 0x1, 0x1);
        gbc.writeMem(0x4606, { 0xd9 });
        gbc.writeMem(0xe5ac, { 0x47, 0x35 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe5ae, gbc.sp());
        EXPECT(0x3547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe5ac));
        EXPECT(0x35, gbc.readMem(0xe5ad));
        // D9 015A
        gbc.setState(0x1b36, 0x280c, 0x75f0, 0xbe5c, 0x3f76, 0xdc92, 0x0, 0x0);
        gbc.writeMem(0x1b36, { 0xd9 });
        gbc.writeMem(0x280c, { 0x59, 0x38 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x280e, gbc.sp());
        EXPECT(0x3859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 015B
        gbc.setState(0x5220, 0x9639, 0xbb80, 0x42dc, 0x1905, 0xddb3, 0x0, 0x0);
        gbc.writeMem(0x5220, { 0xd9 });
        gbc.writeMem(0x9639, { 0xcf, 0xe5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x963b, gbc.sp());
        EXPECT(0xe5cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x9639));
        EXPECT(0xe5, gbc.readMem(0x963a));
        // D9 015C
        gbc.setState(0x4832, 0xf37e, 0x7730, 0x8a27, 0xf252, 0x1f92, 0x0, 0x1);
        gbc.writeMem(0x4832, { 0xd9 });
        gbc.writeMem(0xf37e, { 0x41, 0xf6 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf380, gbc.sp());
        EXPECT(0xf641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xf37e));
        EXPECT(0xf6, gbc.readMem(0xf37f));
        // D9 015D
        gbc.setState(0x84d, 0x98dc, 0x6f90, 0x44b5, 0x3596, 0xe615, 0x0, 0x0);
        gbc.writeMem(0x84d, { 0xd9 });
        gbc.writeMem(0x98dc, { 0x4a, 0x92 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x98de, gbc.sp());
        EXPECT(0x924a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x98dc));
        EXPECT(0x92, gbc.readMem(0x98dd));
        // D9 015E
        gbc.setState(0x562d, 0x630, 0xa6f0, 0xb766, 0x8191, 0x6a92, 0x0, 0x0);
        gbc.writeMem(0x630, { 0x47, 0x38 });
        gbc.writeMem(0x562d, { 0xd9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x632, gbc.sp());
        EXPECT(0x3847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 015F
        gbc.setState(0x301e, 0xf9a6, 0xb670, 0x13d9, 0xe9ec, 0x3b0b, 0x0, 0x0);
        gbc.writeMem(0x301e, { 0xd9 });
        gbc.writeMem(0xf9a6, { 0xa2, 0xc9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf9a8, gbc.sp());
        EXPECT(0xc9a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xf9a6));
        EXPECT(0xc9, gbc.readMem(0xf9a7));
        // D9 0160
        gbc.setState(0x6038, 0x9fb0, 0xfbd0, 0xf7d9, 0x13d0, 0x715f, 0x1, 0x1);
        gbc.writeMem(0x6038, { 0xd9 });
        gbc.writeMem(0x9fb0, { 0x15, 0xea });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9fb2, gbc.sp());
        EXPECT(0xea15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9fb0));
        EXPECT(0xea, gbc.readMem(0x9fb1));
        // D9 0161
        gbc.setState(0xa168, 0x3fd, 0x2100, 0xae9d, 0xb53f, 0x5bea, 0x0, 0x1);
        gbc.writeMem(0x3fd, { 0x6, 0x98 });
        gbc.writeMem(0xa168, { 0xd9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3ff, gbc.sp());
        EXPECT(0x9806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa168));
        // D9 0162
        gbc.setState(0x759a, 0xf22a, 0xb300, 0x845d, 0xd29d, 0xf79, 0x1, 0x0);
        gbc.writeMem(0x759a, { 0xd9 });
        gbc.writeMem(0xf22a, { 0x16, 0x67 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf22c, gbc.sp());
        EXPECT(0x6716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xf22a));
        EXPECT(0x67, gbc.readMem(0xf22b));
        // D9 0163
        gbc.setState(0xcf32, 0xbab8, 0x2c70, 0x24e5, 0xdda9, 0x426a, 0x1, 0x1);
        gbc.writeMem(0xbab8, { 0x77, 0x54 });
        gbc.writeMem(0xcf32, { 0xd9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbaba, gbc.sp());
        EXPECT(0x5477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xbab8));
        EXPECT(0x54, gbc.readMem(0xbab9));
        EXPECT(0xd9, gbc.readMem(0xcf32));
        // D9 0164
        gbc.setState(0x191a, 0x8f55, 0x2570, 0xa4cd, 0xeb64, 0x9a98, 0x1, 0x1);
        gbc.writeMem(0x191a, { 0xd9 });
        gbc.writeMem(0x8f55, { 0xcb, 0xda });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8f57, gbc.sp());
        EXPECT(0xdacb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f55));
        EXPECT(0xda, gbc.readMem(0x8f56));
        // D9 0165
        gbc.setState(0x3ede, 0x5036, 0xeb80, 0x447, 0x7615, 0x562d, 0x0, 0x0);
        gbc.writeMem(0x3ede, { 0xd9 });
        gbc.writeMem(0x5036, { 0xa6, 0xa4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5038, gbc.sp());
        EXPECT(0xa4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0166
        gbc.setState(0x53b, 0xa17f, 0x8830, 0x68cd, 0x66d1, 0xcb6c, 0x1, 0x1);
        gbc.writeMem(0x53b, { 0xd9 });
        gbc.writeMem(0xa17f, { 0x6, 0xf1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa181, gbc.sp());
        EXPECT(0xf106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa17f));
        EXPECT(0xf1, gbc.readMem(0xa180));
        // D9 0167
        gbc.setState(0x34fb, 0xa087, 0xe680, 0x53e1, 0x8867, 0x6e41, 0x0, 0x1);
        gbc.writeMem(0x34fb, { 0xd9 });
        gbc.writeMem(0xa087, { 0x12, 0xd9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa089, gbc.sp());
        EXPECT(0xd912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa087));
        EXPECT(0xd9, gbc.readMem(0xa088));
        // D9 0168
        gbc.setState(0x6eb, 0xc96c, 0x8c20, 0x48cb, 0x4b36, 0xfaf5, 0x1, 0x1);
        gbc.writeMem(0x6eb, { 0xd9 });
        gbc.writeMem(0xc96c, { 0x99, 0x2e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc96e, gbc.sp());
        EXPECT(0x2e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc96c));
        EXPECT(0x2e, gbc.readMem(0xc96d));
        // D9 0169
        gbc.setState(0x2195, 0x928a, 0xe8c0, 0x898c, 0xe52, 0x9146, 0x1, 0x0);
        gbc.writeMem(0x2195, { 0xd9 });
        gbc.writeMem(0x928a, { 0x14, 0xeb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x928c, gbc.sp());
        EXPECT(0xeb14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x928a));
        EXPECT(0xeb, gbc.readMem(0x928b));
        // D9 016A
        gbc.setState(0x3114, 0x5b63, 0x8f80, 0xffe2, 0xf072, 0xf8f, 0x0, 0x0);
        gbc.writeMem(0x3114, { 0xd9 });
        gbc.writeMem(0x5b63, { 0xc1, 0x93 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5b65, gbc.sp());
        EXPECT(0x93c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 016B
        gbc.setState(0xcbff, 0x2248, 0xac90, 0xecc6, 0xd39b, 0xd97c, 0x1, 0x1);
        gbc.writeMem(0x2248, { 0xc0, 0x3a });
        gbc.writeMem(0xcbff, { 0xd9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x224a, gbc.sp());
        EXPECT(0x3ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcbff));
        // D9 016C
        gbc.setState(0x9d40, 0x814b, 0x8830, 0x2274, 0x9c8b, 0xe39e, 0x0, 0x0);
        gbc.writeMem(0x814b, { 0xf2, 0x8f });
        gbc.writeMem(0x9d40, { 0xd9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x814d, gbc.sp());
        EXPECT(0x8ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x814b));
        EXPECT(0x8f, gbc.readMem(0x814c));
        EXPECT(0xd9, gbc.readMem(0x9d40));
        // D9 016D
        gbc.setState(0x5889, 0x83cb, 0x58a0, 0x38ed, 0xc6bd, 0x3a6, 0x0, 0x0);
        gbc.writeMem(0x5889, { 0xd9 });
        gbc.writeMem(0x83cb, { 0x97, 0x82 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x83cd, gbc.sp());
        EXPECT(0x8297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x83cb));
        EXPECT(0x82, gbc.readMem(0x83cc));
        // D9 016E
        gbc.setState(0x9798, 0x5a6a, 0x6920, 0x8739, 0x2066, 0x763, 0x0, 0x1);
        gbc.writeMem(0x5a6a, { 0xae, 0x80 });
        gbc.writeMem(0x9798, { 0xd9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5a6c, gbc.sp());
        EXPECT(0x80ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9798));
        // D9 016F
        gbc.setState(0xb176, 0xc8ee, 0x450, 0xcf2f, 0xc241, 0xcd47, 0x1, 0x1);
        gbc.writeMem(0xb176, { 0xd9 });
        gbc.writeMem(0xc8ee, { 0x26, 0xee });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc8f0, gbc.sp());
        EXPECT(0xee26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb176));
        EXPECT(0x26, gbc.readMem(0xc8ee));
        EXPECT(0xee, gbc.readMem(0xc8ef));
        // D9 0170
        gbc.setState(0x37e5, 0x8048, 0x6cd0, 0x9591, 0x1fd8, 0x8ee5, 0x1, 0x0);
        gbc.writeMem(0x37e5, { 0xd9 });
        gbc.writeMem(0x8048, { 0x1c, 0xc0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x804a, gbc.sp());
        EXPECT(0xc01c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x8048));
        EXPECT(0xc0, gbc.readMem(0x8049));
        // D9 0171
        gbc.setState(0xe3d0, 0xedae, 0x52a0, 0xab0c, 0x7c33, 0x832, 0x0, 0x1);
        gbc.writeMem(0xe3d0, { 0xd9 });
        gbc.writeMem(0xedae, { 0x5b, 0x4f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xedb0, gbc.sp());
        EXPECT(0x4f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe3d0));
        EXPECT(0x5b, gbc.readMem(0xedae));
        EXPECT(0x4f, gbc.readMem(0xedaf));
        // D9 0172
        gbc.setState(0x6b07, 0x650e, 0xb10, 0x7f95, 0xdff9, 0xe49d, 0x0, 0x0);
        gbc.writeMem(0x650e, { 0xed, 0x7 });
        gbc.writeMem(0x6b07, { 0xd9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6510, gbc.sp());
        EXPECT(0x7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0173
        gbc.setState(0x3cba, 0x704f, 0x5400, 0x2870, 0x7f06, 0xc068, 0x1, 0x1);
        gbc.writeMem(0x3cba, { 0xd9 });
        gbc.writeMem(0x704f, { 0xa3, 0x7e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7051, gbc.sp());
        EXPECT(0x7ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0174
        gbc.setState(0x6d48, 0xfa64, 0xcbc0, 0x66f5, 0xeb2b, 0x245b, 0x1, 0x0);
        gbc.writeMem(0x6d48, { 0xd9 });
        gbc.writeMem(0xfa64, { 0xbd, 0xeb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xfa66, gbc.sp());
        EXPECT(0xebbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xfa64));
        EXPECT(0xeb, gbc.readMem(0xfa65));
        // D9 0175
        gbc.setState(0x5d7, 0x6bc6, 0xdf60, 0x24c5, 0xa2d4, 0x152c, 0x0, 0x1);
        gbc.writeMem(0x5d7, { 0xd9 });
        gbc.writeMem(0x6bc6, { 0x7d, 0xd7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6bc8, gbc.sp());
        EXPECT(0xd77d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0176
        gbc.setState(0x3102, 0xcdc5, 0xdf60, 0xbfb5, 0x3e20, 0xced0, 0x1, 0x1);
        gbc.writeMem(0x3102, { 0xd9 });
        gbc.writeMem(0xcdc5, { 0x64, 0x4c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcdc7, gbc.sp());
        EXPECT(0x4c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcdc5));
        EXPECT(0x4c, gbc.readMem(0xcdc6));
        // D9 0177
        gbc.setState(0x313a, 0x21c, 0x9300, 0x2510, 0x12d3, 0x70b1, 0x1, 0x0);
        gbc.writeMem(0x21c, { 0xbd, 0xac });
        gbc.writeMem(0x313a, { 0xd9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x21e, gbc.sp());
        EXPECT(0xacbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0178
        gbc.setState(0x448b, 0xef4c, 0x9070, 0xed24, 0x4d75, 0xe4ae, 0x0, 0x1);
        gbc.writeMem(0x448b, { 0xd9 });
        gbc.writeMem(0xef4c, { 0xc3, 0xce });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xef4e, gbc.sp());
        EXPECT(0xcec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xef4c));
        EXPECT(0xce, gbc.readMem(0xef4d));
        // D9 0179
        gbc.setState(0xad8f, 0x26b3, 0x7210, 0x91f1, 0xb6e2, 0x50a0, 0x1, 0x1);
        gbc.writeMem(0x26b3, { 0x94, 0xca });
        gbc.writeMem(0xad8f, { 0xd9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x26b5, gbc.sp());
        EXPECT(0xca94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xad8f));
        // D9 017A
        gbc.setState(0xcd64, 0xfb3d, 0x76f0, 0x119c, 0x55c3, 0x2f88, 0x0, 0x1);
        gbc.writeMem(0xcd64, { 0xd9 });
        gbc.writeMem(0xfb3d, { 0x2f, 0x48 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfb3f, gbc.sp());
        EXPECT(0x482f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcd64));
        EXPECT(0x2f, gbc.readMem(0xfb3d));
        EXPECT(0x48, gbc.readMem(0xfb3e));
        // D9 017B
        gbc.setState(0x5dfe, 0x5862, 0x47d0, 0xd0d4, 0x6727, 0x8703, 0x1, 0x1);
        gbc.writeMem(0x5862, { 0x51, 0xbf });
        gbc.writeMem(0x5dfe, { 0xd9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5864, gbc.sp());
        EXPECT(0xbf51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 017D
        gbc.setState(0xb403, 0x3ef7, 0x9f60, 0xf564, 0xb867, 0x925f, 0x1, 0x1);
        gbc.writeMem(0x3ef7, { 0x62, 0x14 });
        gbc.writeMem(0xb403, { 0xd9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3ef9, gbc.sp());
        EXPECT(0x1462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb403));
        // D9 017E
        gbc.setState(0x934c, 0x3e6d, 0xf110, 0xe5bd, 0x3441, 0xde9d, 0x1, 0x0);
        gbc.writeMem(0x3e6d, { 0x4, 0xad });
        gbc.writeMem(0x934c, { 0xd9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3e6f, gbc.sp());
        EXPECT(0xad04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x934c));
        // D9 017F
        gbc.setState(0xcdb7, 0x2bd4, 0xa320, 0x9331, 0x7c7c, 0xf47e, 0x0, 0x1);
        gbc.writeMem(0x2bd4, { 0x14, 0x21 });
        gbc.writeMem(0xcdb7, { 0xd9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2bd6, gbc.sp());
        EXPECT(0x2114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcdb7));
        // D9 0181
        gbc.setState(0x33db, 0xd22b, 0x230, 0x4d35, 0x6f5f, 0x782f, 0x1, 0x0);
        gbc.writeMem(0x33db, { 0xd9 });
        gbc.writeMem(0xd22b, { 0x78, 0x8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd22d, gbc.sp());
        EXPECT(0x878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd22b));
        EXPECT(0x8, gbc.readMem(0xd22c));
        // D9 0182
        gbc.setState(0x7965, 0xa9dc, 0x3810, 0xd54d, 0x6a43, 0x56d4, 0x1, 0x0);
        gbc.writeMem(0x7965, { 0xd9 });
        gbc.writeMem(0xa9dc, { 0x4, 0xf0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa9de, gbc.sp());
        EXPECT(0xf004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa9dc));
        EXPECT(0xf0, gbc.readMem(0xa9dd));
        // D9 0183
        gbc.setState(0x3d1e, 0x72b7, 0x5070, 0xd69b, 0x6db0, 0x81cf, 0x0, 0x1);
        gbc.writeMem(0x3d1e, { 0xd9 });
        gbc.writeMem(0x72b7, { 0x17, 0xe5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x72b9, gbc.sp());
        EXPECT(0xe517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0184
        gbc.setState(0xc5c2, 0xf13f, 0xd140, 0xd23d, 0x74ba, 0x9d60, 0x0, 0x0);
        gbc.writeMem(0xc5c2, { 0xd9 });
        gbc.writeMem(0xf13f, { 0xda, 0x96 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf141, gbc.sp());
        EXPECT(0x96da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc5c2));
        EXPECT(0xda, gbc.readMem(0xf13f));
        EXPECT(0x96, gbc.readMem(0xf140));
        // D9 0186
        gbc.setState(0x48da, 0xce64, 0x7360, 0x69e6, 0x53c7, 0x1d56, 0x1, 0x0);
        gbc.writeMem(0x48da, { 0xd9 });
        gbc.writeMem(0xce64, { 0x10, 0x5c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xce66, gbc.sp());
        EXPECT(0x5c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xce64));
        EXPECT(0x5c, gbc.readMem(0xce65));
        // D9 0188
        gbc.setState(0x2bb9, 0x4921, 0xb190, 0xc485, 0x91b2, 0x4749, 0x1, 0x0);
        gbc.writeMem(0x2bb9, { 0xd9 });
        gbc.writeMem(0x4921, { 0x22, 0xfd });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4923, gbc.sp());
        EXPECT(0xfd22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0189
        gbc.setState(0x9e95, 0xc800, 0x7dc0, 0xd050, 0xf851, 0x47a6, 0x1, 0x1);
        gbc.writeMem(0x9e95, { 0xd9 });
        gbc.writeMem(0xc800, { 0x8e, 0xe9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc802, gbc.sp());
        EXPECT(0xe98e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9e95));
        EXPECT(0x8e, gbc.readMem(0xc800));
        EXPECT(0xe9, gbc.readMem(0xc801));
        // D9 018A
        gbc.setState(0xe4ff, 0xdc7c, 0xc9f0, 0x11ae, 0x966a, 0x8982, 0x0, 0x0);
        gbc.writeMem(0xdc7c, { 0x21, 0xa1 });
        gbc.writeMem(0xe4ff, { 0xd9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xdc7e, gbc.sp());
        EXPECT(0xa121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdc7c));
        EXPECT(0xa1, gbc.readMem(0xdc7d));
        EXPECT(0xd9, gbc.readMem(0xe4ff));
        // D9 018B
        gbc.setState(0xd252, 0x5105, 0x5a40, 0x835e, 0x7aff, 0xbafa, 0x1, 0x0);
        gbc.writeMem(0x5105, { 0x11, 0xb5 });
        gbc.writeMem(0xd252, { 0xd9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5107, gbc.sp());
        EXPECT(0xb511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd252));
        // D9 018C
        gbc.setState(0x9942, 0x34f, 0xa6f0, 0x7acb, 0x30a4, 0xe1b5, 0x0, 0x0);
        gbc.writeMem(0x34f, { 0x44, 0x71 });
        gbc.writeMem(0x9942, { 0xd9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x351, gbc.sp());
        EXPECT(0x7144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9942));
        // D9 018D
        gbc.setState(0x5dad, 0xdd1b, 0xc290, 0x56f8, 0x1258, 0xf94d, 0x1, 0x1);
        gbc.writeMem(0x5dad, { 0xd9 });
        gbc.writeMem(0xdd1b, { 0xd9, 0xa2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xdd1d, gbc.sp());
        EXPECT(0xa2d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xdd1b));
        EXPECT(0xa2, gbc.readMem(0xdd1c));
        // D9 018E
        gbc.setState(0x9a4b, 0xee54, 0x5b60, 0x262, 0x3fc, 0xcf79, 0x0, 0x0);
        gbc.writeMem(0x9a4b, { 0xd9 });
        gbc.writeMem(0xee54, { 0xd4, 0xf9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xee56, gbc.sp());
        EXPECT(0xf9d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9a4b));
        EXPECT(0xd4, gbc.readMem(0xee54));
        EXPECT(0xf9, gbc.readMem(0xee55));
        // D9 018F
        gbc.setState(0x3aa, 0xdec1, 0xad00, 0x2ead, 0xd6cf, 0x396c, 0x0, 0x0);
        gbc.writeMem(0x3aa, { 0xd9 });
        gbc.writeMem(0xdec1, { 0xa6, 0x59 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdec3, gbc.sp());
        EXPECT(0x59a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdec1));
        EXPECT(0x59, gbc.readMem(0xdec2));
        // D9 0190
        gbc.setState(0x2cc4, 0xdb7e, 0x4120, 0x8c29, 0xafa5, 0xa8c8, 0x1, 0x1);
        gbc.writeMem(0x2cc4, { 0xd9 });
        gbc.writeMem(0xdb7e, { 0x37, 0x7f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdb80, gbc.sp());
        EXPECT(0x7f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdb7e));
        EXPECT(0x7f, gbc.readMem(0xdb7f));
        // D9 0191
        gbc.setState(0x6284, 0xc577, 0x2890, 0x205, 0xf797, 0x46e3, 0x1, 0x0);
        gbc.writeMem(0x6284, { 0xd9 });
        gbc.writeMem(0xc577, { 0x9a, 0x62 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc579, gbc.sp());
        EXPECT(0x629a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc577));
        EXPECT(0x62, gbc.readMem(0xc578));
        // D9 0192
        gbc.setState(0xaa19, 0x3e9d, 0xbaf0, 0x8d87, 0xb407, 0x8f5e, 0x0, 0x0);
        gbc.writeMem(0x3e9d, { 0xc5, 0x32 });
        gbc.writeMem(0xaa19, { 0xd9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3e9f, gbc.sp());
        EXPECT(0x32c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xaa19));
        // D9 0193
        gbc.setState(0x68c6, 0x6953, 0x51a0, 0xe4e8, 0x667, 0x8651, 0x0, 0x0);
        gbc.writeMem(0x68c6, { 0xd9 });
        gbc.writeMem(0x6953, { 0xfc, 0x6c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6955, gbc.sp());
        EXPECT(0x6cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0194
        gbc.setState(0xa543, 0x1445, 0xcc70, 0xcc5c, 0x9636, 0x9fb5, 0x0, 0x0);
        gbc.writeMem(0x1445, { 0xb, 0x7 });
        gbc.writeMem(0xa543, { 0xd9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1447, gbc.sp());
        EXPECT(0x70b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa543));
        // D9 0195
        gbc.setState(0x6a7e, 0xbef8, 0x8160, 0x7795, 0xf005, 0x2932, 0x1, 0x0);
        gbc.writeMem(0x6a7e, { 0xd9 });
        gbc.writeMem(0xbef8, { 0x58, 0xfe });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbefa, gbc.sp());
        EXPECT(0xfe58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbef8));
        EXPECT(0xfe, gbc.readMem(0xbef9));
        // D9 0196
        gbc.setState(0x735f, 0x7f35, 0x4220, 0x9206, 0xa4de, 0x5b21, 0x1, 0x0);
        gbc.writeMem(0x735f, { 0xd9 });
        gbc.writeMem(0x7f35, { 0x9a, 0x1f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7f37, gbc.sp());
        EXPECT(0x1f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0197
        gbc.setState(0x95e0, 0x5df3, 0x7810, 0xf443, 0x8166, 0x5512, 0x0, 0x0);
        gbc.writeMem(0x5df3, { 0x64, 0xe0 });
        gbc.writeMem(0x95e0, { 0xd9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5df5, gbc.sp());
        EXPECT(0xe064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x95e0));
        // D9 0199
        gbc.setState(0x4c5f, 0x42b0, 0xbf70, 0x9d12, 0xd752, 0xf86c, 0x0, 0x0);
        gbc.writeMem(0x42b0, { 0x3c, 0xec });
        gbc.writeMem(0x4c5f, { 0xd9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x42b2, gbc.sp());
        EXPECT(0xec3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 019A
        gbc.setState(0x1e5e, 0xba48, 0xeba0, 0x5fa9, 0xfd5e, 0x53c4, 0x0, 0x1);
        gbc.writeMem(0x1e5e, { 0xd9 });
        gbc.writeMem(0xba48, { 0x61, 0x33 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xba4a, gbc.sp());
        EXPECT(0x3361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xba48));
        EXPECT(0x33, gbc.readMem(0xba49));
        // D9 019B
        gbc.setState(0x4584, 0x2caf, 0xb220, 0x7a46, 0xe229, 0x4edd, 0x1, 0x1);
        gbc.writeMem(0x2caf, { 0xaa, 0x79 });
        gbc.writeMem(0x4584, { 0xd9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2cb1, gbc.sp());
        EXPECT(0x79aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 019C
        gbc.setState(0xbe5, 0xa120, 0xa4f0, 0x3f1d, 0x71f4, 0xa33b, 0x1, 0x1);
        gbc.writeMem(0xbe5, { 0xd9 });
        gbc.writeMem(0xa120, { 0xa, 0xde });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa122, gbc.sp());
        EXPECT(0xde0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa120));
        EXPECT(0xde, gbc.readMem(0xa121));
        // D9 019D
        gbc.setState(0xb436, 0xa4f1, 0xf800, 0x8db9, 0x8d83, 0x30fa, 0x0, 0x1);
        gbc.writeMem(0xa4f1, { 0xc2, 0x23 });
        gbc.writeMem(0xb436, { 0xd9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa4f3, gbc.sp());
        EXPECT(0x23c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa4f1));
        EXPECT(0x23, gbc.readMem(0xa4f2));
        EXPECT(0xd9, gbc.readMem(0xb436));
        // D9 019E
        gbc.setState(0x94f7, 0xd022, 0x7790, 0xf7c9, 0x4b9a, 0xf2c, 0x0, 0x0);
        gbc.writeMem(0x94f7, { 0xd9 });
        gbc.writeMem(0xd022, { 0x32, 0x1b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd024, gbc.sp());
        EXPECT(0x1b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x94f7));
        EXPECT(0x32, gbc.readMem(0xd022));
        EXPECT(0x1b, gbc.readMem(0xd023));
        // D9 019F
        gbc.setState(0x1aa9, 0xb43b, 0x9d40, 0xcb5f, 0x6494, 0xe5e0, 0x1, 0x0);
        gbc.writeMem(0x1aa9, { 0xd9 });
        gbc.writeMem(0xb43b, { 0x39, 0x75 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb43d, gbc.sp());
        EXPECT(0x7539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xb43b));
        EXPECT(0x75, gbc.readMem(0xb43c));
        // D9 01A0
        gbc.setState(0x8431, 0xcc2d, 0x5420, 0x1b8a, 0xf808, 0xb499, 0x1, 0x0);
        gbc.writeMem(0x8431, { 0xd9 });
        gbc.writeMem(0xcc2d, { 0xbc, 0x84 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcc2f, gbc.sp());
        EXPECT(0x84bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8431));
        EXPECT(0xbc, gbc.readMem(0xcc2d));
        EXPECT(0x84, gbc.readMem(0xcc2e));
        // D9 01A1
        gbc.setState(0x2c1b, 0x340a, 0xbec0, 0xab36, 0xca36, 0xd4ac, 0x1, 0x1);
        gbc.writeMem(0x2c1b, { 0xd9 });
        gbc.writeMem(0x340a, { 0x5b, 0x92 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x340c, gbc.sp());
        EXPECT(0x925b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 01A2
        gbc.setState(0x3ac6, 0x75a7, 0xb660, 0xaf7f, 0x5a9e, 0x152f, 0x0, 0x0);
        gbc.writeMem(0x3ac6, { 0xd9 });
        gbc.writeMem(0x75a7, { 0xd9, 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x75a9, gbc.sp());
        EXPECT(0xb6d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 01A3
        gbc.setState(0x7e71, 0xcf96, 0x8940, 0xe75, 0x636b, 0xabba, 0x0, 0x0);
        gbc.writeMem(0x7e71, { 0xd9 });
        gbc.writeMem(0xcf96, { 0xab, 0x4b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcf98, gbc.sp());
        EXPECT(0x4bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xcf96));
        EXPECT(0x4b, gbc.readMem(0xcf97));
        // D9 01A4
        gbc.setState(0x83b2, 0x1bf1, 0x21f0, 0x2e0b, 0x9c5b, 0x2be6, 0x1, 0x1);
        gbc.writeMem(0x1bf1, { 0xb8, 0xdd });
        gbc.writeMem(0x83b2, { 0xd9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1bf3, gbc.sp());
        EXPECT(0xddb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x83b2));
        // D9 01A5
        gbc.setState(0xa31a, 0x7a42, 0x4290, 0x87c5, 0x104a, 0x3376, 0x1, 0x0);
        gbc.writeMem(0x7a42, { 0xa8, 0x76 });
        gbc.writeMem(0xa31a, { 0xd9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7a44, gbc.sp());
        EXPECT(0x76a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa31a));
        // D9 01A6
        gbc.setState(0xb0e, 0xeef5, 0xbb70, 0x73c3, 0x304a, 0xdf1d, 0x0, 0x1);
        gbc.writeMem(0xb0e, { 0xd9 });
        gbc.writeMem(0xeef5, { 0xd9, 0x39 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xeef7, gbc.sp());
        EXPECT(0x39d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xeef5));
        EXPECT(0x39, gbc.readMem(0xeef6));
        // D9 01A7
        gbc.setState(0x79ae, 0x6c59, 0x5400, 0xe5dd, 0x318b, 0x5231, 0x1, 0x0);
        gbc.writeMem(0x6c59, { 0xd1, 0xfe });
        gbc.writeMem(0x79ae, { 0xd9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6c5b, gbc.sp());
        EXPECT(0xfed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 01A8
        gbc.setState(0xa663, 0x6d85, 0x6ce0, 0x83cb, 0xa3f4, 0xff05, 0x0, 0x0);
        gbc.writeMem(0x6d85, { 0xc, 0xef });
        gbc.writeMem(0xa663, { 0xd9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6d87, gbc.sp());
        EXPECT(0xef0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa663));
        // D9 01A9
        gbc.setState(0x5dcc, 0xaec9, 0x18d0, 0xc2a8, 0x44c6, 0xbf69, 0x0, 0x0);
        gbc.writeMem(0x5dcc, { 0xd9 });
        gbc.writeMem(0xaec9, { 0x6e, 0x31 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xaecb, gbc.sp());
        EXPECT(0x316e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xaec9));
        EXPECT(0x31, gbc.readMem(0xaeca));
        // D9 01AA
        gbc.setState(0x522e, 0x51fc, 0x9db0, 0xb31c, 0xe8aa, 0x3686, 0x0, 0x1);
        gbc.writeMem(0x51fc, { 0x3d, 0x9b });
        gbc.writeMem(0x522e, { 0xd9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x51fe, gbc.sp());
        EXPECT(0x9b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 01AB
        gbc.setState(0x88ee, 0x90ff, 0xe420, 0x9405, 0xba36, 0x7c0, 0x1, 0x1);
        gbc.writeMem(0x88ee, { 0xd9 });
        gbc.writeMem(0x90ff, { 0x66, 0x21 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9101, gbc.sp());
        EXPECT(0x2166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x88ee));
        EXPECT(0x66, gbc.readMem(0x90ff));
        EXPECT(0x21, gbc.readMem(0x9100));
        // D9 01AC
        gbc.setState(0x4249, 0x58fa, 0xaa0, 0xccb5, 0xf9bc, 0x8884, 0x0, 0x1);
        gbc.writeMem(0x4249, { 0xd9 });
        gbc.writeMem(0x58fa, { 0x68, 0xb9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x58fc, gbc.sp());
        EXPECT(0xb968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 01AD
        gbc.setState(0x5aba, 0x73e8, 0xf1c0, 0x9450, 0x1193, 0x98c9, 0x0, 0x1);
        gbc.writeMem(0x5aba, { 0xd9 });
        gbc.writeMem(0x73e8, { 0xf6, 0xb9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x73ea, gbc.sp());
        EXPECT(0xb9f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 01AE
        gbc.setState(0x8e22, 0xa36d, 0x2e0, 0x531a, 0x1b73, 0x588d, 0x0, 0x0);
        gbc.writeMem(0x8e22, { 0xd9 });
        gbc.writeMem(0xa36d, { 0xf8, 0x6a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa36f, gbc.sp());
        EXPECT(0x6af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8e22));
        EXPECT(0xf8, gbc.readMem(0xa36d));
        EXPECT(0x6a, gbc.readMem(0xa36e));
        // D9 01AF
        gbc.setState(0x4cc7, 0xe59f, 0x2e80, 0xd652, 0x985, 0xd41c, 0x1, 0x1);
        gbc.writeMem(0x4cc7, { 0xd9 });
        gbc.writeMem(0xe59f, { 0x1a, 0x84 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe5a1, gbc.sp());
        EXPECT(0x841a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe59f));
        EXPECT(0x84, gbc.readMem(0xe5a0));
        // D9 01B0
        gbc.setState(0xe9dc, 0xeba5, 0xa9c0, 0x1516, 0xfd6f, 0xfa37, 0x1, 0x1);
        gbc.writeMem(0xe9dc, { 0xd9 });
        gbc.writeMem(0xeba5, { 0x2d, 0x8f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xeba7, gbc.sp());
        EXPECT(0x8f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe9dc));
        EXPECT(0x2d, gbc.readMem(0xeba5));
        EXPECT(0x8f, gbc.readMem(0xeba6));
        // D9 01B2
        gbc.setState(0x3dde, 0x14e9, 0x7c10, 0xb7ec, 0x2274, 0xe028, 0x0, 0x0);
        gbc.writeMem(0x14e9, { 0xf7, 0xd5 });
        gbc.writeMem(0x3dde, { 0xd9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x14eb, gbc.sp());
        EXPECT(0xd5f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 01B3
        gbc.setState(0xce02, 0xcc67, 0xe5e0, 0xcce4, 0xa1cc, 0x2726, 0x0, 0x0);
        gbc.writeMem(0xcc67, { 0x48, 0x59 });
        gbc.writeMem(0xce02, { 0xd9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcc69, gbc.sp());
        EXPECT(0x5948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcc67));
        EXPECT(0x59, gbc.readMem(0xcc68));
        EXPECT(0xd9, gbc.readMem(0xce02));
        // D9 01B4
        gbc.setState(0xebc0, 0x995d, 0xe50, 0x2d71, 0x34ab, 0xca96, 0x0, 0x0);
        gbc.writeMem(0x995d, { 0xa1, 0xd9 });
        gbc.writeMem(0xebc0, { 0xd9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x995f, gbc.sp());
        EXPECT(0xd9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x995d));
        EXPECT(0xd9, gbc.readMem(0x995e));
        EXPECT(0xd9, gbc.readMem(0xebc0));
        // D9 01B5
        gbc.setState(0x2441, 0xfc5b, 0xdb50, 0x1cd0, 0x74c8, 0xdd0e, 0x1, 0x1);
        gbc.writeMem(0x2441, { 0xd9 });
        gbc.writeMem(0xfc5b, { 0x21, 0x17 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfc5d, gbc.sp());
        EXPECT(0x1721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xfc5b));
        EXPECT(0x17, gbc.readMem(0xfc5c));
        // D9 01B6
        gbc.setState(0xe621, 0x6878, 0x610, 0x93c2, 0xddc5, 0xec6d, 0x0, 0x0);
        gbc.writeMem(0x6878, { 0xd8, 0xd1 });
        gbc.writeMem(0xe621, { 0xd9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x687a, gbc.sp());
        EXPECT(0xd1d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe621));
        // D9 01B7
        gbc.setState(0xce2b, 0x37ae, 0x8f20, 0x255f, 0x8abe, 0x7965, 0x1, 0x0);
        gbc.writeMem(0x37ae, { 0xa3, 0xab });
        gbc.writeMem(0xce2b, { 0xd9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x37b0, gbc.sp());
        EXPECT(0xaba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xce2b));
        // D9 01B8
        gbc.setState(0xaa61, 0x3efa, 0xe880, 0xaaaf, 0xff76, 0xc378, 0x1, 0x0);
        gbc.writeMem(0x3efa, { 0x9e, 0xf9 });
        gbc.writeMem(0xaa61, { 0xd9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3efc, gbc.sp());
        EXPECT(0xf99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xaa61));
        // D9 01B9
        gbc.setState(0xc1ef, 0xa49e, 0x7f10, 0x1a48, 0xc666, 0x920f, 0x1, 0x1);
        gbc.writeMem(0xa49e, { 0xc0, 0xad });
        gbc.writeMem(0xc1ef, { 0xd9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa4a0, gbc.sp());
        EXPECT(0xadc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xa49e));
        EXPECT(0xad, gbc.readMem(0xa49f));
        EXPECT(0xd9, gbc.readMem(0xc1ef));
        // D9 01BA
        gbc.setState(0xe894, 0x264d, 0xc3b0, 0xd8c2, 0x27e5, 0x1e44, 0x1, 0x0);
        gbc.writeMem(0x264d, { 0xc0, 0xab });
        gbc.writeMem(0xe894, { 0xd9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x264f, gbc.sp());
        EXPECT(0xabc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe894));
        // D9 01BB
        gbc.setState(0x74aa, 0x711e, 0xc6f0, 0x37a6, 0x3849, 0xa32d, 0x1, 0x1);
        gbc.writeMem(0x711e, { 0xe2, 0xd2 });
        gbc.writeMem(0x74aa, { 0xd9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7120, gbc.sp());
        EXPECT(0xd2e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 01BC
        gbc.setState(0x30b, 0x9019, 0xd5d0, 0xd687, 0xd195, 0xeeb7, 0x0, 0x0);
        gbc.writeMem(0x30b, { 0xd9 });
        gbc.writeMem(0x9019, { 0xad, 0x51 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x901b, gbc.sp());
        EXPECT(0x51ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x9019));
        EXPECT(0x51, gbc.readMem(0x901a));
        // D9 01BD
        gbc.setState(0x1929, 0x63f4, 0xe50, 0xaddc, 0x10d7, 0x7509, 0x0, 0x0);
        gbc.writeMem(0x1929, { 0xd9 });
        gbc.writeMem(0x63f4, { 0xb0, 0x14 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x63f6, gbc.sp());
        EXPECT(0x14b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 01BE
        gbc.setState(0xd521, 0x1248, 0x2550, 0x878f, 0x1fa0, 0x1b25, 0x1, 0x0);
        gbc.writeMem(0x1248, { 0xfc, 0x90 });
        gbc.writeMem(0xd521, { 0xd9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x124a, gbc.sp());
        EXPECT(0x90fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd521));
        // D9 01BF
        gbc.setState(0xfa8, 0x4bf5, 0x72c0, 0x334f, 0xc62f, 0xa0fa, 0x0, 0x0);
        gbc.writeMem(0xfa8, { 0xd9 });
        gbc.writeMem(0x4bf5, { 0xdf, 0xc0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4bf7, gbc.sp());
        EXPECT(0xc0df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 01C0
        gbc.setState(0xd91d, 0x755d, 0x8cb0, 0xf479, 0xef37, 0x5de2, 0x0, 0x0);
        gbc.writeMem(0x755d, { 0x4c, 0x2 });
        gbc.writeMem(0xd91d, { 0xd9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x755f, gbc.sp());
        EXPECT(0x24c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd91d));
        // D9 01C1
        gbc.setState(0xeb2, 0x6058, 0x54b0, 0xaa5f, 0x6bff, 0xa165, 0x0, 0x0);
        gbc.writeMem(0xeb2, { 0xd9 });
        gbc.writeMem(0x6058, { 0x4c, 0xcb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x605a, gbc.sp());
        EXPECT(0xcb4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 01C2
        gbc.setState(0x5d4b, 0x6d17, 0x7350, 0x72af, 0x28c5, 0xaf1a, 0x1, 0x0);
        gbc.writeMem(0x5d4b, { 0xd9 });
        gbc.writeMem(0x6d17, { 0x99, 0x98 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6d19, gbc.sp());
        EXPECT(0x9899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 01C3
        gbc.setState(0xee6b, 0x55e2, 0x6200, 0x1ed7, 0xe5ee, 0xf776, 0x0, 0x1);
        gbc.writeMem(0x55e2, { 0x58, 0x55 });
        gbc.writeMem(0xee6b, { 0xd9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x55e4, gbc.sp());
        EXPECT(0x5558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xee6b));
        // D9 01C4
        gbc.setState(0x6c50, 0x23e9, 0x75a0, 0xb6bf, 0xaa04, 0x53d3, 0x0, 0x1);
        gbc.writeMem(0x23e9, { 0xae, 0xa9 });
        gbc.writeMem(0x6c50, { 0xd9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x23eb, gbc.sp());
        EXPECT(0xa9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 01C5
        gbc.setState(0x945f, 0x3317, 0xf4f0, 0xa1e6, 0x5820, 0xb82, 0x1, 0x1);
        gbc.writeMem(0x3317, { 0x59, 0xf6 });
        gbc.writeMem(0x945f, { 0xd9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3319, gbc.sp());
        EXPECT(0xf659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x945f));
        // D9 01C6
        gbc.setState(0x7ba9, 0xc903, 0xf6e0, 0x9887, 0x11b1, 0x773e, 0x0, 0x1);
        gbc.writeMem(0x7ba9, { 0xd9 });
        gbc.writeMem(0xc903, { 0x5f, 0xbd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc905, gbc.sp());
        EXPECT(0xbd5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xc903));
        EXPECT(0xbd, gbc.readMem(0xc904));
        // D9 01C7
        gbc.setState(0x11e9, 0x47f6, 0xf7a0, 0x53e9, 0xec4f, 0xa114, 0x0, 0x1);
        gbc.writeMem(0x11e9, { 0xd9 });
        gbc.writeMem(0x47f6, { 0xb7, 0xb7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x47f8, gbc.sp());
        EXPECT(0xb7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 01C8
        gbc.setState(0x44b7, 0x7fe4, 0xd0a0, 0x9e3d, 0x2005, 0x3d0d, 0x0, 0x0);
        gbc.writeMem(0x44b7, { 0xd9 });
        gbc.writeMem(0x7fe4, { 0xb7, 0xef });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7fe6, gbc.sp());
        EXPECT(0xefb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 01C9
        gbc.setState(0x64f9, 0x25d, 0xca40, 0x2d31, 0xa725, 0x2785, 0x0, 0x1);
        gbc.writeMem(0x25d, { 0x68, 0x58 });
        gbc.writeMem(0x64f9, { 0xd9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x25f, gbc.sp());
        EXPECT(0x5868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 01CA
        gbc.setState(0x6852, 0x415d, 0xa290, 0x709f, 0x1f14, 0x328b, 0x1, 0x1);
        gbc.writeMem(0x415d, { 0x99, 0xaf });
        gbc.writeMem(0x6852, { 0xd9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x415f, gbc.sp());
        EXPECT(0xaf99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 01CB
        gbc.setState(0x1854, 0xa706, 0xac90, 0x3ff8, 0xf6, 0x46fc, 0x0, 0x1);
        gbc.writeMem(0x1854, { 0xd9 });
        gbc.writeMem(0xa706, { 0x8a, 0x8e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa708, gbc.sp());
        EXPECT(0x8e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa706));
        EXPECT(0x8e, gbc.readMem(0xa707));
        // D9 01CC
        gbc.setState(0x912, 0xc1d4, 0x1480, 0x9f74, 0x9816, 0x9d64, 0x0, 0x0);
        gbc.writeMem(0x912, { 0xd9 });
        gbc.writeMem(0xc1d4, { 0x6c, 0x6b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc1d6, gbc.sp());
        EXPECT(0x6b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc1d4));
        EXPECT(0x6b, gbc.readMem(0xc1d5));
        // D9 01CD
        gbc.setState(0xd7a8, 0x79cc, 0xb9c0, 0x90bb, 0x7d0f, 0x35e1, 0x1, 0x0);
        gbc.writeMem(0x79cc, { 0xaa, 0x42 });
        gbc.writeMem(0xd7a8, { 0xd9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x79ce, gbc.sp());
        EXPECT(0x42aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd7a8));
        // D9 01CE
        gbc.setState(0x2bdc, 0x7d84, 0x4850, 0x2c6, 0xa980, 0x420c, 0x1, 0x1);
        gbc.writeMem(0x2bdc, { 0xd9 });
        gbc.writeMem(0x7d84, { 0x93, 0x20 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7d86, gbc.sp());
        EXPECT(0x2093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 01CF
        gbc.setState(0x6e3a, 0xcf19, 0x33a0, 0x170e, 0xd6e8, 0xe86e, 0x0, 0x1);
        gbc.writeMem(0x6e3a, { 0xd9 });
        gbc.writeMem(0xcf19, { 0x10, 0x49 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcf1b, gbc.sp());
        EXPECT(0x4910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcf19));
        EXPECT(0x49, gbc.readMem(0xcf1a));
        // D9 01D0
        gbc.setState(0x382c, 0xc73, 0x6f80, 0x950e, 0xc551, 0x3f93, 0x1, 0x0);
        gbc.writeMem(0xc73, { 0xf3, 0x32 });
        gbc.writeMem(0x382c, { 0xd9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc75, gbc.sp());
        EXPECT(0x32f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 01D1
        gbc.setState(0x912d, 0xc8d7, 0x5d20, 0x90ec, 0x5009, 0x8ed0, 0x1, 0x1);
        gbc.writeMem(0x912d, { 0xd9 });
        gbc.writeMem(0xc8d7, { 0x24, 0xcb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc8d9, gbc.sp());
        EXPECT(0xcb24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x912d));
        EXPECT(0x24, gbc.readMem(0xc8d7));
        EXPECT(0xcb, gbc.readMem(0xc8d8));
        // D9 01D2
        gbc.setState(0x9fd8, 0x4f5f, 0xd0e0, 0x7a20, 0xb550, 0x34a9, 0x1, 0x0);
        gbc.writeMem(0x4f5f, { 0xc9, 0x7d });
        gbc.writeMem(0x9fd8, { 0xd9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4f61, gbc.sp());
        EXPECT(0x7dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9fd8));
        // D9 01D3
        gbc.setState(0x74f7, 0x10ee, 0xd2a0, 0xe279, 0x415f, 0xd0c1, 0x0, 0x0);
        gbc.writeMem(0x10ee, { 0xbe, 0x4f });
        gbc.writeMem(0x74f7, { 0xd9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x10f0, gbc.sp());
        EXPECT(0x4fbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 01D4
        gbc.setState(0xe470, 0x53d3, 0xb3f0, 0xc689, 0xd7a0, 0x6645, 0x1, 0x0);
        gbc.writeMem(0x53d3, { 0xe6, 0x14 });
        gbc.writeMem(0xe470, { 0xd9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x53d5, gbc.sp());
        EXPECT(0x14e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe470));
        // D9 01D5
        gbc.setState(0x8592, 0x4c1c, 0x8b00, 0xaa91, 0xa0f5, 0x822b, 0x0, 0x1);
        gbc.writeMem(0x4c1c, { 0xa7, 0xce });
        gbc.writeMem(0x8592, { 0xd9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4c1e, gbc.sp());
        EXPECT(0xcea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8592));
        // D9 01D6
        gbc.setState(0x317f, 0xf5d9, 0xe9b0, 0xc4f0, 0x6f0f, 0xd295, 0x0, 0x0);
        gbc.writeMem(0x317f, { 0xd9 });
        gbc.writeMem(0xf5d9, { 0xf4, 0xa6 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf5db, gbc.sp());
        EXPECT(0xa6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xf5d9));
        EXPECT(0xa6, gbc.readMem(0xf5da));
        // D9 01D7
        gbc.setState(0x9a92, 0x1fb5, 0xac40, 0xef56, 0x9693, 0x32d6, 0x0, 0x1);
        gbc.writeMem(0x1fb5, { 0x57, 0xe1 });
        gbc.writeMem(0x9a92, { 0xd9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1fb7, gbc.sp());
        EXPECT(0xe157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9a92));
        // D9 01D8
        gbc.setState(0x9213, 0x2ccf, 0x52a0, 0xcc2f, 0x65c6, 0x9688, 0x0, 0x1);
        gbc.writeMem(0x2ccf, { 0x80, 0xbd });
        gbc.writeMem(0x9213, { 0xd9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2cd1, gbc.sp());
        EXPECT(0xbd80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9213));
        // D9 01D9
        gbc.setState(0xc365, 0xd109, 0x4a90, 0xb475, 0xdd26, 0x3c07, 0x0, 0x0);
        gbc.writeMem(0xc365, { 0xd9 });
        gbc.writeMem(0xd109, { 0x66, 0xd7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd10b, gbc.sp());
        EXPECT(0xd766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc365));
        EXPECT(0x66, gbc.readMem(0xd109));
        EXPECT(0xd7, gbc.readMem(0xd10a));
        // D9 01DB
        gbc.setState(0xc0ea, 0xbbe5, 0x5cf0, 0xc56c, 0xf929, 0xcbef, 0x0, 0x1);
        gbc.writeMem(0xbbe5, { 0x37, 0x1b });
        gbc.writeMem(0xc0ea, { 0xd9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbbe7, gbc.sp());
        EXPECT(0x1b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbbe5));
        EXPECT(0x1b, gbc.readMem(0xbbe6));
        EXPECT(0xd9, gbc.readMem(0xc0ea));
        // D9 01DC
        gbc.setState(0x9b63, 0x92e4, 0x2c40, 0x69b5, 0xcc9f, 0xa9b3, 0x0, 0x1);
        gbc.writeMem(0x92e4, { 0xd, 0x72 });
        gbc.writeMem(0x9b63, { 0xd9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x92e6, gbc.sp());
        EXPECT(0x720d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x92e4));
        EXPECT(0x72, gbc.readMem(0x92e5));
        EXPECT(0xd9, gbc.readMem(0x9b63));
        // D9 01DD
        gbc.setState(0x802d, 0xf2ba, 0x8760, 0x9ad6, 0x41d1, 0x5c33, 0x0, 0x1);
        gbc.writeMem(0x802d, { 0xd9 });
        gbc.writeMem(0xf2ba, { 0xd9, 0xf2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf2bc, gbc.sp());
        EXPECT(0xf2d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x802d));
        EXPECT(0xd9, gbc.readMem(0xf2ba));
        EXPECT(0xf2, gbc.readMem(0xf2bb));
        // D9 01DE
        gbc.setState(0x239e, 0x64b5, 0xde90, 0xaec8, 0x8e3a, 0x8582, 0x1, 0x0);
        gbc.writeMem(0x239e, { 0xd9 });
        gbc.writeMem(0x64b5, { 0xaf, 0xed });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x64b7, gbc.sp());
        EXPECT(0xedaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 01DF
        gbc.setState(0x5f, 0x5409, 0x230, 0xbbd3, 0xad80, 0xeb8f, 0x0, 0x0);
        gbc.writeMem(0x5f, { 0xd9 });
        gbc.writeMem(0x5409, { 0x27, 0x6c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x540b, gbc.sp());
        EXPECT(0x6c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 01E0
        gbc.setState(0x441d, 0xbb47, 0xc010, 0x84e9, 0x4e63, 0xd87a, 0x0, 0x0);
        gbc.writeMem(0x441d, { 0xd9 });
        gbc.writeMem(0xbb47, { 0x8b, 0x64 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbb49, gbc.sp());
        EXPECT(0x648b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xbb47));
        EXPECT(0x64, gbc.readMem(0xbb48));
        // D9 01E1
        gbc.setState(0xca9e, 0x987f, 0x7fa0, 0x9e3f, 0xcaa7, 0x9e7c, 0x0, 0x0);
        gbc.writeMem(0x987f, { 0xd4, 0x17 });
        gbc.writeMem(0xca9e, { 0xd9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9881, gbc.sp());
        EXPECT(0x17d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x987f));
        EXPECT(0x17, gbc.readMem(0x9880));
        EXPECT(0xd9, gbc.readMem(0xca9e));
        // D9 01E2
        gbc.setState(0xa8bf, 0x2d9b, 0xec70, 0xfb9f, 0x64bf, 0xd16e, 0x0, 0x0);
        gbc.writeMem(0x2d9b, { 0x5c, 0xeb });
        gbc.writeMem(0xa8bf, { 0xd9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2d9d, gbc.sp());
        EXPECT(0xeb5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa8bf));
        // D9 01E3
        gbc.setState(0x65b4, 0x8e3d, 0x8120, 0xb5c5, 0x9c0d, 0x8956, 0x1, 0x0);
        gbc.writeMem(0x65b4, { 0xd9 });
        gbc.writeMem(0x8e3d, { 0x54, 0xa0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8e3f, gbc.sp());
        EXPECT(0xa054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x8e3d));
        EXPECT(0xa0, gbc.readMem(0x8e3e));
        // D9 01E4
        gbc.setState(0x4891, 0x1402, 0x3130, 0xf8da, 0xfd12, 0xea44, 0x0, 0x0);
        gbc.writeMem(0x1402, { 0x20, 0xcd });
        gbc.writeMem(0x4891, { 0xd9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1404, gbc.sp());
        EXPECT(0xcd20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 01E6
        gbc.setState(0x7ab2, 0x1ef5, 0x9030, 0xace0, 0xda83, 0x944a, 0x1, 0x1);
        gbc.writeMem(0x1ef5, { 0x1c, 0xe8 });
        gbc.writeMem(0x7ab2, { 0xd9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1ef7, gbc.sp());
        EXPECT(0xe81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 01E7
        gbc.setState(0xeba9, 0x6926, 0xb100, 0xb873, 0x3d58, 0xd466, 0x0, 0x0);
        gbc.writeMem(0x6926, { 0x94, 0x5c });
        gbc.writeMem(0xeba9, { 0xd9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6928, gbc.sp());
        EXPECT(0x5c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xeba9));
        // D9 01E8
        gbc.setState(0x8ebc, 0x70e3, 0x8740, 0x2ffd, 0x15e7, 0x2201, 0x0, 0x1);
        gbc.writeMem(0x70e3, { 0xfa, 0xad });
        gbc.writeMem(0x8ebc, { 0xd9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x70e5, gbc.sp());
        EXPECT(0xadfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8ebc));
        // D9 01E9
        gbc.setState(0x7073, 0x4889, 0xf5a0, 0xf4ed, 0x83c, 0x3885, 0x1, 0x1);
        gbc.writeMem(0x4889, { 0x1f, 0x1c });
        gbc.writeMem(0x7073, { 0xd9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x488b, gbc.sp());
        EXPECT(0x1c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 01EA
        gbc.setState(0x1f7b, 0xb5cd, 0x2ae0, 0xa258, 0x4ff7, 0xd35e, 0x0, 0x0);
        gbc.writeMem(0x1f7b, { 0xd9 });
        gbc.writeMem(0xb5cd, { 0xbb, 0xf6 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb5cf, gbc.sp());
        EXPECT(0xf6bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb5cd));
        EXPECT(0xf6, gbc.readMem(0xb5ce));
        // D9 01EB
        gbc.setState(0xf66, 0xfbe7, 0xac90, 0x2d35, 0x9d76, 0xbc3d, 0x1, 0x0);
        gbc.writeMem(0xf66, { 0xd9 });
        gbc.writeMem(0xfbe7, { 0xa5, 0x37 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfbe9, gbc.sp());
        EXPECT(0x37a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xfbe7));
        EXPECT(0x37, gbc.readMem(0xfbe8));
        // D9 01EC
        gbc.setState(0x2181, 0x9e75, 0x77a0, 0xc884, 0x5d34, 0xb110, 0x0, 0x0);
        gbc.writeMem(0x2181, { 0xd9 });
        gbc.writeMem(0x9e75, { 0xee, 0x6f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9e77, gbc.sp());
        EXPECT(0x6fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x9e75));
        EXPECT(0x6f, gbc.readMem(0x9e76));
        // D9 01ED
        gbc.setState(0x17f6, 0x1631, 0x9910, 0xa646, 0x67e0, 0xe350, 0x0, 0x1);
        gbc.writeMem(0x1631, { 0x4d, 0x27 });
        gbc.writeMem(0x17f6, { 0xd9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1633, gbc.sp());
        EXPECT(0x274d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 01EE
        gbc.setState(0xd04c, 0xcede, 0x5b20, 0x4097, 0xbda, 0x16fb, 0x0, 0x0);
        gbc.writeMem(0xcede, { 0xbf, 0xd9 });
        gbc.writeMem(0xd04c, { 0xd9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcee0, gbc.sp());
        EXPECT(0xd9bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcede));
        EXPECT(0xd9, gbc.readMem(0xcedf));
        EXPECT(0xd9, gbc.readMem(0xd04c));
        // D9 01EF
        gbc.setState(0xb850, 0xd4ff, 0x640, 0xca1f, 0x52e7, 0x55ad, 0x0, 0x1);
        gbc.writeMem(0xb850, { 0xd9 });
        gbc.writeMem(0xd4ff, { 0x53, 0xdd });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd501, gbc.sp());
        EXPECT(0xdd53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb850));
        EXPECT(0x53, gbc.readMem(0xd4ff));
        EXPECT(0xdd, gbc.readMem(0xd500));
        // D9 01F0
        gbc.setState(0x8bec, 0x2f36, 0x2e90, 0x47c6, 0x74d4, 0xbea, 0x1, 0x0);
        gbc.writeMem(0x2f36, { 0xce, 0xb9 });
        gbc.writeMem(0x8bec, { 0xd9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2f38, gbc.sp());
        EXPECT(0xb9ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8bec));
        // D9 01F1
        gbc.setState(0x943d, 0x8d6e, 0x6bc0, 0x578c, 0x12f6, 0x5ba2, 0x0, 0x0);
        gbc.writeMem(0x8d6e, { 0x57, 0x3a });
        gbc.writeMem(0x943d, { 0xd9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8d70, gbc.sp());
        EXPECT(0x3a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8d6e));
        EXPECT(0x3a, gbc.readMem(0x8d6f));
        EXPECT(0xd9, gbc.readMem(0x943d));
        // D9 01F2
        gbc.setState(0xeab0, 0xd3fe, 0x3e0, 0xb5ef, 0xf882, 0xe015, 0x0, 0x1);
        gbc.writeMem(0xd3fe, { 0xd3, 0x48 });
        gbc.writeMem(0xeab0, { 0xd9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd400, gbc.sp());
        EXPECT(0x48d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xd3fe));
        EXPECT(0x48, gbc.readMem(0xd3ff));
        EXPECT(0xd9, gbc.readMem(0xeab0));
        // D9 01F3
        gbc.setState(0x3768, 0x21d7, 0x2a60, 0x38ff, 0xe71e, 0xab86, 0x0, 0x0);
        gbc.writeMem(0x21d7, { 0xf1, 0x2a });
        gbc.writeMem(0x3768, { 0xd9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x21d9, gbc.sp());
        EXPECT(0x2af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 01F4
        gbc.setState(0xaff2, 0x90be, 0xdfe0, 0xa31d, 0x239b, 0xeeea, 0x1, 0x0);
        gbc.writeMem(0x90be, { 0xa8, 0x65 });
        gbc.writeMem(0xaff2, { 0xd9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x90c0, gbc.sp());
        EXPECT(0x65a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x90be));
        EXPECT(0x65, gbc.readMem(0x90bf));
        EXPECT(0xd9, gbc.readMem(0xaff2));
        // D9 01F5
        gbc.setState(0x1dce, 0x1833, 0x7be0, 0x8f49, 0x89cb, 0x3250, 0x0, 0x1);
        gbc.writeMem(0x1833, { 0xd8, 0xb9 });
        gbc.writeMem(0x1dce, { 0xd9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1835, gbc.sp());
        EXPECT(0xb9d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 01F6
        gbc.setState(0xe252, 0x5d8d, 0x910, 0x493, 0x6c0b, 0xfcc9, 0x1, 0x1);
        gbc.writeMem(0x5d8d, { 0x4, 0x8 });
        gbc.writeMem(0xe252, { 0xd9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5d8f, gbc.sp());
        EXPECT(0x804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe252));
        // D9 01F7
        gbc.setState(0xbced, 0x30d, 0x7420, 0xf572, 0x52cf, 0xec65, 0x1, 0x0);
        gbc.writeMem(0x30d, { 0x32, 0xb1 });
        gbc.writeMem(0xbced, { 0xd9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x30f, gbc.sp());
        EXPECT(0xb132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbced));
        // D9 01F8
        gbc.setState(0xbad, 0xe5da, 0xf190, 0xef, 0x3767, 0xb28d, 0x0, 0x0);
        gbc.writeMem(0xbad, { 0xd9 });
        gbc.writeMem(0xe5da, { 0xf, 0xd8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe5dc, gbc.sp());
        EXPECT(0xd80f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xe5da));
        EXPECT(0xd8, gbc.readMem(0xe5db));
        // D9 01F9
        gbc.setState(0x1aee, 0x9236, 0x24b0, 0xb5c6, 0x82ad, 0xc4c, 0x1, 0x0);
        gbc.writeMem(0x1aee, { 0xd9 });
        gbc.writeMem(0x9236, { 0x4, 0x52 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9238, gbc.sp());
        EXPECT(0x5204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9236));
        EXPECT(0x52, gbc.readMem(0x9237));
        // D9 01FA
        gbc.setState(0xe35b, 0xffce, 0xe5f0, 0x3ab6, 0xd83, 0xad6b, 0x1, 0x1);
        gbc.writeMem(0xe35b, { 0xd9 });
        gbc.writeMem(0xffce, { 0x8d, 0x8a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xffd0, gbc.sp());
        EXPECT(0x8a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe35b));
        EXPECT(0x8d, gbc.readMem(0xffce));
        EXPECT(0x8a, gbc.readMem(0xffcf));
        // D9 01FB
        gbc.setState(0x7643, 0x6150, 0x52c0, 0xb686, 0x4ddb, 0x2032, 0x1, 0x0);
        gbc.writeMem(0x6150, { 0x58, 0x63 });
        gbc.writeMem(0x7643, { 0xd9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6152, gbc.sp());
        EXPECT(0x6358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 01FC
        gbc.setState(0x4c8e, 0xbc9f, 0xe330, 0x40eb, 0x2c67, 0x68c8, 0x1, 0x0);
        gbc.writeMem(0x4c8e, { 0xd9 });
        gbc.writeMem(0xbc9f, { 0x9e, 0x4c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbca1, gbc.sp());
        EXPECT(0x4c9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbc9f));
        EXPECT(0x4c, gbc.readMem(0xbca0));
        // D9 01FD
        gbc.setState(0x1ba6, 0x1fc3, 0x5040, 0x996c, 0x1cfa, 0xd408, 0x0, 0x0);
        gbc.writeMem(0x1ba6, { 0xd9 });
        gbc.writeMem(0x1fc3, { 0x8, 0x35 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1fc5, gbc.sp());
        EXPECT(0x3508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 01FE
        gbc.setState(0x9271, 0xf54f, 0x4b10, 0x9b0c, 0xd8b0, 0x754, 0x0, 0x1);
        gbc.writeMem(0x9271, { 0xd9 });
        gbc.writeMem(0xf54f, { 0x71, 0x19 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf551, gbc.sp());
        EXPECT(0x1971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9271));
        EXPECT(0x71, gbc.readMem(0xf54f));
        EXPECT(0x19, gbc.readMem(0xf550));
        // D9 01FF
        gbc.setState(0x5900, 0x90f8, 0x6960, 0x775, 0xd967, 0x72a5, 0x0, 0x1);
        gbc.writeMem(0x5900, { 0xd9 });
        gbc.writeMem(0x90f8, { 0xfd, 0x92 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x90fa, gbc.sp());
        EXPECT(0x92fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x90f8));
        EXPECT(0x92, gbc.readMem(0x90f9));
        // D9 0200
        gbc.setState(0xf88, 0x6b01, 0xabc0, 0x145c, 0xa282, 0x7630, 0x1, 0x1);
        gbc.writeMem(0xf88, { 0xd9 });
        gbc.writeMem(0x6b01, { 0x53, 0x97 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6b03, gbc.sp());
        EXPECT(0x9753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0201
        gbc.setState(0x77dd, 0xa452, 0x7080, 0xa176, 0x8e77, 0x4ba7, 0x1, 0x1);
        gbc.writeMem(0x77dd, { 0xd9 });
        gbc.writeMem(0xa452, { 0x58, 0x44 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa454, gbc.sp());
        EXPECT(0x4458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa452));
        EXPECT(0x44, gbc.readMem(0xa453));
        // D9 0202
        gbc.setState(0xaf1f, 0x81bc, 0x2590, 0x4ec2, 0x6c77, 0xf739, 0x1, 0x1);
        gbc.writeMem(0x81bc, { 0x91, 0x5f });
        gbc.writeMem(0xaf1f, { 0xd9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x81be, gbc.sp());
        EXPECT(0x5f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x81bc));
        EXPECT(0x5f, gbc.readMem(0x81bd));
        EXPECT(0xd9, gbc.readMem(0xaf1f));
        // D9 0203
        gbc.setState(0xe630, 0x8597, 0xaa30, 0x7cd2, 0x35bb, 0xcf97, 0x1, 0x1);
        gbc.writeMem(0x8597, { 0x7b, 0x3f });
        gbc.writeMem(0xe630, { 0xd9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8599, gbc.sp());
        EXPECT(0x3f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8597));
        EXPECT(0x3f, gbc.readMem(0x8598));
        EXPECT(0xd9, gbc.readMem(0xe630));
        // D9 0204
        gbc.setState(0x6448, 0x7d49, 0xcd10, 0x8157, 0x7de3, 0x5668, 0x0, 0x0);
        gbc.writeMem(0x6448, { 0xd9 });
        gbc.writeMem(0x7d49, { 0x3c, 0x8e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7d4b, gbc.sp());
        EXPECT(0x8e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0205
        gbc.setState(0xb05b, 0x1bb9, 0xe090, 0xec0e, 0xc40b, 0xe19b, 0x0, 0x1);
        gbc.writeMem(0x1bb9, { 0xb7, 0xe7 });
        gbc.writeMem(0xb05b, { 0xd9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1bbb, gbc.sp());
        EXPECT(0xe7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb05b));
        // D9 0206
        gbc.setState(0x8527, 0x4377, 0x2a10, 0xd340, 0xc620, 0x936, 0x1, 0x0);
        gbc.writeMem(0x4377, { 0x75, 0x6 });
        gbc.writeMem(0x8527, { 0xd9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4379, gbc.sp());
        EXPECT(0x675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8527));
        // D9 0207
        gbc.setState(0xab36, 0xfb12, 0xa90, 0xc5ae, 0x1196, 0xecdf, 0x0, 0x1);
        gbc.writeMem(0xab36, { 0xd9 });
        gbc.writeMem(0xfb12, { 0x97, 0x4e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfb14, gbc.sp());
        EXPECT(0x4e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xab36));
        EXPECT(0x97, gbc.readMem(0xfb12));
        EXPECT(0x4e, gbc.readMem(0xfb13));
        // D9 0208
        gbc.setState(0x8479, 0x195, 0xf890, 0x6d3d, 0x356f, 0x7a0, 0x0, 0x0);
        gbc.writeMem(0x195, { 0x4d, 0xc1 });
        gbc.writeMem(0x8479, { 0xd9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x197, gbc.sp());
        EXPECT(0xc14d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8479));
        // D9 0209
        gbc.setState(0x5bee, 0x90a0, 0x2150, 0xc8c, 0xec49, 0x30e0, 0x1, 0x1);
        gbc.writeMem(0x5bee, { 0xd9 });
        gbc.writeMem(0x90a0, { 0x28, 0x61 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x90a2, gbc.sp());
        EXPECT(0x6128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x90a0));
        EXPECT(0x61, gbc.readMem(0x90a1));
        // D9 020A
        gbc.setState(0xbbb1, 0x15ed, 0xba80, 0x56a5, 0x5fb0, 0xb4f5, 0x1, 0x0);
        gbc.writeMem(0x15ed, { 0x1f, 0xfa });
        gbc.writeMem(0xbbb1, { 0xd9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x15ef, gbc.sp());
        EXPECT(0xfa1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbbb1));
        // D9 020B
        gbc.setState(0x6cee, 0xd982, 0x9eb0, 0x5d4f, 0xf6a0, 0x39cc, 0x1, 0x0);
        gbc.writeMem(0x6cee, { 0xd9 });
        gbc.writeMem(0xd982, { 0xef, 0xd0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd984, gbc.sp());
        EXPECT(0xd0ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xd982));
        EXPECT(0xd0, gbc.readMem(0xd983));
        // D9 020C
        gbc.setState(0x3721, 0x726e, 0x4c30, 0x84b4, 0xb629, 0xac9c, 0x0, 0x0);
        gbc.writeMem(0x3721, { 0xd9 });
        gbc.writeMem(0x726e, { 0xa7, 0xf4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7270, gbc.sp());
        EXPECT(0xf4a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 020D
        gbc.setState(0x673c, 0x45a0, 0x5000, 0x36bf, 0xe2d2, 0xdfab, 0x1, 0x1);
        gbc.writeMem(0x45a0, { 0x7d, 0xd7 });
        gbc.writeMem(0x673c, { 0xd9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x45a2, gbc.sp());
        EXPECT(0xd77d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 020F
        gbc.setState(0x84a5, 0x7c14, 0x10c0, 0x5d5b, 0x723b, 0xc292, 0x0, 0x1);
        gbc.writeMem(0x7c14, { 0x4c, 0x8f });
        gbc.writeMem(0x84a5, { 0xd9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7c16, gbc.sp());
        EXPECT(0x8f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x84a5));
        // D9 0210
        gbc.setState(0x388e, 0xd510, 0x7090, 0xbe84, 0x2c2c, 0xf4e1, 0x1, 0x1);
        gbc.writeMem(0x388e, { 0xd9 });
        gbc.writeMem(0xd510, { 0xeb, 0x81 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd512, gbc.sp());
        EXPECT(0x81eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xd510));
        EXPECT(0x81, gbc.readMem(0xd511));
        // D9 0212
        gbc.setState(0x91df, 0xacf4, 0xc250, 0xc1c6, 0xe3bd, 0xae26, 0x0, 0x0);
        gbc.writeMem(0x91df, { 0xd9 });
        gbc.writeMem(0xacf4, { 0x82, 0x95 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xacf6, gbc.sp());
        EXPECT(0x9582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x91df));
        EXPECT(0x82, gbc.readMem(0xacf4));
        EXPECT(0x95, gbc.readMem(0xacf5));
        // D9 0213
        gbc.setState(0xade2, 0x846a, 0x280, 0x34bb, 0x429f, 0x444a, 0x1, 0x1);
        gbc.writeMem(0x846a, { 0x12, 0x97 });
        gbc.writeMem(0xade2, { 0xd9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x846c, gbc.sp());
        EXPECT(0x9712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x846a));
        EXPECT(0x97, gbc.readMem(0x846b));
        EXPECT(0xd9, gbc.readMem(0xade2));
        // D9 0214
        gbc.setState(0x4594, 0xc48a, 0x4350, 0x89fa, 0xabcd, 0x4e9a, 0x1, 0x1);
        gbc.writeMem(0x4594, { 0xd9 });
        gbc.writeMem(0xc48a, { 0xc5, 0x25 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc48c, gbc.sp());
        EXPECT(0x25c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xc48a));
        EXPECT(0x25, gbc.readMem(0xc48b));
        // D9 0215
        gbc.setState(0x37a8, 0x52af, 0x50e0, 0xff2c, 0xa2d2, 0xae40, 0x0, 0x1);
        gbc.writeMem(0x37a8, { 0xd9 });
        gbc.writeMem(0x52af, { 0x38, 0x88 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x52b1, gbc.sp());
        EXPECT(0x8838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0216
        gbc.setState(0x84f7, 0xfdaa, 0x2370, 0x9fcf, 0x768a, 0x9b3e, 0x0, 0x1);
        gbc.writeMem(0x84f7, { 0xd9 });
        gbc.writeMem(0xfdaa, { 0xcf, 0x9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfdac, gbc.sp());
        EXPECT(0x9cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x84f7));
        EXPECT(0xcf, gbc.readMem(0xfdaa));
        EXPECT(0x9, gbc.readMem(0xfdab));
        // D9 0217
        gbc.setState(0xcb12, 0x799f, 0x95a0, 0xf333, 0xd215, 0x4035, 0x0, 0x0);
        gbc.writeMem(0x799f, { 0xab, 0xf0 });
        gbc.writeMem(0xcb12, { 0xd9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x79a1, gbc.sp());
        EXPECT(0xf0ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcb12));
        // D9 0218
        gbc.setState(0x51fc, 0xf1b6, 0xf950, 0x8da0, 0x3f12, 0xd104, 0x1, 0x0);
        gbc.writeMem(0x51fc, { 0xd9 });
        gbc.writeMem(0xf1b6, { 0x41, 0xdf });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf1b8, gbc.sp());
        EXPECT(0xdf41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xf1b6));
        EXPECT(0xdf, gbc.readMem(0xf1b7));
        // D9 0219
        gbc.setState(0x6082, 0x599d, 0x5230, 0xb781, 0x8d8e, 0x791e, 0x0, 0x0);
        gbc.writeMem(0x599d, { 0x24, 0xc0 });
        gbc.writeMem(0x6082, { 0xd9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x599f, gbc.sp());
        EXPECT(0xc024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 021A
        gbc.setState(0xae0b, 0x80af, 0xe210, 0x1a1f, 0x25fa, 0xef55, 0x0, 0x0);
        gbc.writeMem(0x80af, { 0x1e, 0x1 });
        gbc.writeMem(0xae0b, { 0xd9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x80b1, gbc.sp());
        EXPECT(0x11e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x80af));
        EXPECT(0x1, gbc.readMem(0x80b0));
        EXPECT(0xd9, gbc.readMem(0xae0b));
        // D9 021B
        gbc.setState(0x3b89, 0x5d4f, 0x18f0, 0xb13d, 0xe1f5, 0xdc0b, 0x1, 0x1);
        gbc.writeMem(0x3b89, { 0xd9 });
        gbc.writeMem(0x5d4f, { 0x8d, 0xd7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5d51, gbc.sp());
        EXPECT(0xd78d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 021C
        gbc.setState(0xbed5, 0xf58e, 0xdab0, 0x2301, 0xc93e, 0x1931, 0x0, 0x1);
        gbc.writeMem(0xbed5, { 0xd9 });
        gbc.writeMem(0xf58e, { 0x97, 0x61 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf590, gbc.sp());
        EXPECT(0x6197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbed5));
        EXPECT(0x97, gbc.readMem(0xf58e));
        EXPECT(0x61, gbc.readMem(0xf58f));
        // D9 021D
        gbc.setState(0xade0, 0x41a9, 0x63e0, 0xb7ca, 0xa1fb, 0x2a1e, 0x0, 0x1);
        gbc.writeMem(0x41a9, { 0x4, 0x79 });
        gbc.writeMem(0xade0, { 0xd9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x41ab, gbc.sp());
        EXPECT(0x7904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xade0));
        // D9 021E
        gbc.setState(0x43ff, 0xfa37, 0x8e30, 0x1b, 0x37ab, 0x6018, 0x1, 0x0);
        gbc.writeMem(0x43ff, { 0xd9 });
        gbc.writeMem(0xfa37, { 0x8b, 0xc6 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfa39, gbc.sp());
        EXPECT(0xc68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xfa37));
        EXPECT(0xc6, gbc.readMem(0xfa38));
        // D9 021F
        gbc.setState(0xb30, 0x89dd, 0xbe90, 0xf47e, 0x753, 0xade5, 0x0, 0x0);
        gbc.writeMem(0xb30, { 0xd9 });
        gbc.writeMem(0x89dd, { 0x6e, 0xb3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x89df, gbc.sp());
        EXPECT(0xb36e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x89dd));
        EXPECT(0xb3, gbc.readMem(0x89de));
        // D9 0220
        gbc.setState(0x9bb9, 0x3418, 0x9320, 0x79cc, 0x5e14, 0xcfe7, 0x0, 0x1);
        gbc.writeMem(0x3418, { 0xcd, 0x4e });
        gbc.writeMem(0x9bb9, { 0xd9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x341a, gbc.sp());
        EXPECT(0x4ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9bb9));
        // D9 0221
        gbc.setState(0x1b60, 0xdceb, 0xe6f0, 0xbb9c, 0x59d0, 0xec39, 0x1, 0x1);
        gbc.writeMem(0x1b60, { 0xd9 });
        gbc.writeMem(0xdceb, { 0x87, 0x87 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xdced, gbc.sp());
        EXPECT(0x8787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xdceb));
        EXPECT(0x87, gbc.readMem(0xdcec));
        // D9 0222
        gbc.setState(0xb179, 0x41d2, 0x4820, 0x767e, 0xc57f, 0x2928, 0x0, 0x1);
        gbc.writeMem(0x41d2, { 0x8, 0x69 });
        gbc.writeMem(0xb179, { 0xd9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x41d4, gbc.sp());
        EXPECT(0x6908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb179));
        // D9 0223
        gbc.setState(0x4b08, 0x6f71, 0x7410, 0x56be, 0xea54, 0xb3f3, 0x0, 0x1);
        gbc.writeMem(0x4b08, { 0xd9 });
        gbc.writeMem(0x6f71, { 0x40, 0x94 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6f73, gbc.sp());
        EXPECT(0x9440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0224
        gbc.setState(0x5c4d, 0x4a69, 0xb7b0, 0x68e6, 0xe33e, 0xc523, 0x1, 0x1);
        gbc.writeMem(0x4a69, { 0x76, 0xb1 });
        gbc.writeMem(0x5c4d, { 0xd9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4a6b, gbc.sp());
        EXPECT(0xb176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0225
        gbc.setState(0x3356, 0x764c, 0x7f60, 0x8930, 0x441, 0x1c18, 0x0, 0x0);
        gbc.writeMem(0x3356, { 0xd9 });
        gbc.writeMem(0x764c, { 0x12, 0x79 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x764e, gbc.sp());
        EXPECT(0x7912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0226
        gbc.setState(0x75d1, 0x9dfe, 0x8230, 0xf950, 0x2436, 0x4f6, 0x1, 0x0);
        gbc.writeMem(0x75d1, { 0xd9 });
        gbc.writeMem(0x9dfe, { 0x95, 0x46 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9e00, gbc.sp());
        EXPECT(0x4695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9dfe));
        EXPECT(0x46, gbc.readMem(0x9dff));
        // D9 0227
        gbc.setState(0xd282, 0x57c3, 0x7f90, 0x1642, 0x92ab, 0xaf38, 0x0, 0x1);
        gbc.writeMem(0x57c3, { 0xc0, 0x19 });
        gbc.writeMem(0xd282, { 0xd9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x57c5, gbc.sp());
        EXPECT(0x19c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd282));
        // D9 0228
        gbc.setState(0x1e80, 0x7311, 0x36f0, 0x9bea, 0x6eec, 0x5344, 0x0, 0x1);
        gbc.writeMem(0x1e80, { 0xd9 });
        gbc.writeMem(0x7311, { 0xcf, 0x48 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7313, gbc.sp());
        EXPECT(0x48cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0229
        gbc.setState(0xd566, 0x40cf, 0xe4b0, 0x63f9, 0x5bb1, 0xf904, 0x0, 0x0);
        gbc.writeMem(0x40cf, { 0xe5, 0x2b });
        gbc.writeMem(0xd566, { 0xd9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x40d1, gbc.sp());
        EXPECT(0x2be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd566));
        // D9 022A
        gbc.setState(0xdf6c, 0x645a, 0xea20, 0x95c5, 0x66d6, 0x79f6, 0x0, 0x1);
        gbc.writeMem(0x645a, { 0xef, 0xae });
        gbc.writeMem(0xdf6c, { 0xd9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x645c, gbc.sp());
        EXPECT(0xaeef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xdf6c));
        // D9 022B
        gbc.setState(0x2066, 0xdc5d, 0xd320, 0xb135, 0xfd1e, 0xc25e, 0x1, 0x1);
        gbc.writeMem(0x2066, { 0xd9 });
        gbc.writeMem(0xdc5d, { 0xe8, 0x3d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xdc5f, gbc.sp());
        EXPECT(0x3de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xdc5d));
        EXPECT(0x3d, gbc.readMem(0xdc5e));
        // D9 022C
        gbc.setState(0x8882, 0x5b9a, 0x27c0, 0x3f71, 0xa96a, 0x10ab, 0x1, 0x1);
        gbc.writeMem(0x5b9a, { 0xe, 0xa1 });
        gbc.writeMem(0x8882, { 0xd9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5b9c, gbc.sp());
        EXPECT(0xa10e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8882));
        // D9 022D
        gbc.setState(0xd03, 0x7a5e, 0x1d20, 0xbdb9, 0xb265, 0x40b6, 0x1, 0x1);
        gbc.writeMem(0xd03, { 0xd9 });
        gbc.writeMem(0x7a5e, { 0x94, 0xa });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7a60, gbc.sp());
        EXPECT(0xa94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 022E
        gbc.setState(0xe425, 0x1a0d, 0x7640, 0x323f, 0x9692, 0x2fbe, 0x1, 0x1);
        gbc.writeMem(0x1a0d, { 0x4b, 0x27 });
        gbc.writeMem(0xe425, { 0xd9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1a0f, gbc.sp());
        EXPECT(0x274b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe425));
        // D9 022F
        gbc.setState(0xa20a, 0x6d27, 0xb4e0, 0xfb53, 0x133, 0xfe5e, 0x0, 0x1);
        gbc.writeMem(0x6d27, { 0x95, 0x8d });
        gbc.writeMem(0xa20a, { 0xd9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6d29, gbc.sp());
        EXPECT(0x8d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa20a));
        // D9 0230
        gbc.setState(0x78ef, 0x4e1b, 0xbd20, 0xcbcc, 0x81a4, 0x793c, 0x1, 0x1);
        gbc.writeMem(0x4e1b, { 0xe4, 0x1a });
        gbc.writeMem(0x78ef, { 0xd9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4e1d, gbc.sp());
        EXPECT(0x1ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0231
        gbc.setState(0x93f0, 0xe2d8, 0x76d0, 0x2e9, 0xf6ab, 0x2b65, 0x0, 0x0);
        gbc.writeMem(0x93f0, { 0xd9 });
        gbc.writeMem(0xe2d8, { 0xf0, 0x9c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe2da, gbc.sp());
        EXPECT(0x9cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x93f0));
        EXPECT(0xf0, gbc.readMem(0xe2d8));
        EXPECT(0x9c, gbc.readMem(0xe2d9));
        // D9 0232
        gbc.setState(0x8860, 0x2427, 0x4d90, 0x2286, 0x6c31, 0x4c15, 0x0, 0x0);
        gbc.writeMem(0x2427, { 0xf1, 0x14 });
        gbc.writeMem(0x8860, { 0xd9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2429, gbc.sp());
        EXPECT(0x14f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8860));
        // D9 0234
        gbc.setState(0xd2b0, 0xd670, 0x6510, 0x6689, 0x771b, 0x1f6, 0x1, 0x0);
        gbc.writeMem(0xd2b0, { 0xd9 });
        gbc.writeMem(0xd670, { 0xa2, 0xcd });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd672, gbc.sp());
        EXPECT(0xcda2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd2b0));
        EXPECT(0xa2, gbc.readMem(0xd670));
        EXPECT(0xcd, gbc.readMem(0xd671));
        // D9 0235
        gbc.setState(0x991b, 0x7bcb, 0x3b0, 0x8ec7, 0xfc0f, 0x9646, 0x1, 0x1);
        gbc.writeMem(0x7bcb, { 0xa5, 0x18 });
        gbc.writeMem(0x991b, { 0xd9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7bcd, gbc.sp());
        EXPECT(0x18a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x991b));
        // D9 0236
        gbc.setState(0x3065, 0xc852, 0xf4b0, 0x82eb, 0xc3f, 0x9eec, 0x0, 0x0);
        gbc.writeMem(0x3065, { 0xd9 });
        gbc.writeMem(0xc852, { 0x62, 0x83 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc854, gbc.sp());
        EXPECT(0x8362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xc852));
        EXPECT(0x83, gbc.readMem(0xc853));
        // D9 0237
        gbc.setState(0x115c, 0xd7a7, 0xa490, 0xeceb, 0x29c3, 0x3fc6, 0x1, 0x0);
        gbc.writeMem(0x115c, { 0xd9 });
        gbc.writeMem(0xd7a7, { 0xfb, 0xad });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd7a9, gbc.sp());
        EXPECT(0xadfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xd7a7));
        EXPECT(0xad, gbc.readMem(0xd7a8));
        // D9 0238
        gbc.setState(0x3e90, 0xf46d, 0x8cd0, 0x3c95, 0x841e, 0x37ab, 0x1, 0x0);
        gbc.writeMem(0x3e90, { 0xd9 });
        gbc.writeMem(0xf46d, { 0x4d, 0x6d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf46f, gbc.sp());
        EXPECT(0x6d4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xf46d));
        EXPECT(0x6d, gbc.readMem(0xf46e));
        // D9 0239
        gbc.setState(0xa3b4, 0x7ce, 0x6870, 0x3ef8, 0xaee5, 0xf13d, 0x0, 0x0);
        gbc.writeMem(0x7ce, { 0xd9, 0x2c });
        gbc.writeMem(0xa3b4, { 0xd9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7d0, gbc.sp());
        EXPECT(0x2cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa3b4));
        // D9 023B
        gbc.setState(0x502e, 0xe72f, 0xef30, 0xc301, 0xec2a, 0x323b, 0x1, 0x1);
        gbc.writeMem(0x502e, { 0xd9 });
        gbc.writeMem(0xe72f, { 0xd2, 0x2e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe731, gbc.sp());
        EXPECT(0x2ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xe72f));
        EXPECT(0x2e, gbc.readMem(0xe730));
        // D9 023C
        gbc.setState(0x7c64, 0xcb48, 0x7590, 0x6c3, 0x8a62, 0x627a, 0x0, 0x0);
        gbc.writeMem(0x7c64, { 0xd9 });
        gbc.writeMem(0xcb48, { 0xff, 0x53 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xcb4a, gbc.sp());
        EXPECT(0x53ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xcb48));
        EXPECT(0x53, gbc.readMem(0xcb49));
        // D9 023D
        gbc.setState(0x4993, 0xd051, 0xe690, 0xb35b, 0xcdab, 0xc537, 0x1, 0x0);
        gbc.writeMem(0x4993, { 0xd9 });
        gbc.writeMem(0xd051, { 0xc7, 0x1d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd053, gbc.sp());
        EXPECT(0x1dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xd051));
        EXPECT(0x1d, gbc.readMem(0xd052));
        // D9 023E
        gbc.setState(0xa2cc, 0x1042, 0xf720, 0x8f09, 0xc0fe, 0x11b, 0x1, 0x0);
        gbc.writeMem(0x1042, { 0x21, 0xe6 });
        gbc.writeMem(0xa2cc, { 0xd9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1044, gbc.sp());
        EXPECT(0xe621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa2cc));
        // D9 023F
        gbc.setState(0x64f3, 0x375a, 0x58b0, 0xdca0, 0xea30, 0xedd9, 0x0, 0x1);
        gbc.writeMem(0x375a, { 0x4c, 0x35 });
        gbc.writeMem(0x64f3, { 0xd9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x375c, gbc.sp());
        EXPECT(0x354c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0240
        gbc.setState(0x83db, 0x8fec, 0xeaa0, 0x2d12, 0x4792, 0x6e3c, 0x1, 0x0);
        gbc.writeMem(0x83db, { 0xd9 });
        gbc.writeMem(0x8fec, { 0x50, 0xc1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8fee, gbc.sp());
        EXPECT(0xc150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x83db));
        EXPECT(0x50, gbc.readMem(0x8fec));
        EXPECT(0xc1, gbc.readMem(0x8fed));
        // D9 0241
        gbc.setState(0xd123, 0xd212, 0x1d40, 0x500c, 0x9357, 0x6e13, 0x0, 0x0);
        gbc.writeMem(0xd123, { 0xd9 });
        gbc.writeMem(0xd212, { 0x52, 0x2f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd214, gbc.sp());
        EXPECT(0x2f52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd123));
        EXPECT(0x52, gbc.readMem(0xd212));
        EXPECT(0x2f, gbc.readMem(0xd213));
        // D9 0242
        gbc.setState(0x826a, 0x65ae, 0x7fa0, 0xbed6, 0xfa5, 0xb695, 0x1, 0x1);
        gbc.writeMem(0x65ae, { 0xa4, 0x20 });
        gbc.writeMem(0x826a, { 0xd9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x65b0, gbc.sp());
        EXPECT(0x20a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x826a));
        // D9 0243
        gbc.setState(0x53e2, 0xfa1c, 0xe440, 0x6d39, 0x381c, 0x9197, 0x1, 0x0);
        gbc.writeMem(0x53e2, { 0xd9 });
        gbc.writeMem(0xfa1c, { 0x5b, 0xd7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfa1e, gbc.sp());
        EXPECT(0xd75b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xfa1c));
        EXPECT(0xd7, gbc.readMem(0xfa1d));
        // D9 0244
        gbc.setState(0x2f39, 0x895e, 0x2750, 0xfae5, 0x4597, 0xdcd4, 0x0, 0x1);
        gbc.writeMem(0x2f39, { 0xd9 });
        gbc.writeMem(0x895e, { 0xd2, 0x78 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8960, gbc.sp());
        EXPECT(0x78d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x895e));
        EXPECT(0x78, gbc.readMem(0x895f));
        // D9 0245
        gbc.setState(0xa5ad, 0xec20, 0xa4e0, 0x3dfc, 0xf589, 0xf734, 0x1, 0x0);
        gbc.writeMem(0xa5ad, { 0xd9 });
        gbc.writeMem(0xec20, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xec22, gbc.sp());
        EXPECT(0x99cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa5ad));
        EXPECT(0xcb, gbc.readMem(0xec20));
        EXPECT(0x99, gbc.readMem(0xec21));
        // D9 0246
        gbc.setState(0x4f5e, 0xd150, 0x69b0, 0x52f0, 0x19f0, 0xf49a, 0x0, 0x0);
        gbc.writeMem(0x4f5e, { 0xd9 });
        gbc.writeMem(0xd150, { 0xee, 0x6b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd152, gbc.sp());
        EXPECT(0x6bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xd150));
        EXPECT(0x6b, gbc.readMem(0xd151));
        // D9 0248
        gbc.setState(0x7efa, 0x7adc, 0xda60, 0x3e12, 0x4ba4, 0x67b5, 0x1, 0x1);
        gbc.writeMem(0x7adc, { 0x5d, 0xab });
        gbc.writeMem(0x7efa, { 0xd9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7ade, gbc.sp());
        EXPECT(0xab5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0249
        gbc.setState(0x9b37, 0xafa5, 0x86d0, 0xd297, 0x9475, 0xaebd, 0x0, 0x1);
        gbc.writeMem(0x9b37, { 0xd9 });
        gbc.writeMem(0xafa5, { 0xca, 0x1c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xafa7, gbc.sp());
        EXPECT(0x1cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9b37));
        EXPECT(0xca, gbc.readMem(0xafa5));
        EXPECT(0x1c, gbc.readMem(0xafa6));
        // D9 024A
        gbc.setState(0x618b, 0x7665, 0x7c0, 0x5400, 0xb8ec, 0xa839, 0x1, 0x1);
        gbc.writeMem(0x618b, { 0xd9 });
        gbc.writeMem(0x7665, { 0x65, 0x46 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7667, gbc.sp());
        EXPECT(0x4665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 024B
        gbc.setState(0x32ce, 0x41b6, 0x6070, 0x6793, 0xbbf5, 0xd5af, 0x1, 0x0);
        gbc.writeMem(0x32ce, { 0xd9 });
        gbc.writeMem(0x41b6, { 0x9b, 0x1a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x41b8, gbc.sp());
        EXPECT(0x1a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 024C
        gbc.setState(0x2f91, 0x688a, 0xb530, 0x1065, 0xb660, 0x84ba, 0x1, 0x1);
        gbc.writeMem(0x2f91, { 0xd9 });
        gbc.writeMem(0x688a, { 0x32, 0x7c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x688c, gbc.sp());
        EXPECT(0x7c32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 024D
        gbc.setState(0xce43, 0x49af, 0x98b0, 0x40e7, 0xafb9, 0x3a5e, 0x1, 0x1);
        gbc.writeMem(0x49af, { 0xa6, 0xf1 });
        gbc.writeMem(0xce43, { 0xd9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x49b1, gbc.sp());
        EXPECT(0xf1a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xce43));
        // D9 024E
        gbc.setState(0x4166, 0xc3bf, 0xde60, 0xb16e, 0xf462, 0xc929, 0x1, 0x0);
        gbc.writeMem(0x4166, { 0xd9 });
        gbc.writeMem(0xc3bf, { 0x3, 0x75 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc3c1, gbc.sp());
        EXPECT(0x7503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc3bf));
        EXPECT(0x75, gbc.readMem(0xc3c0));
        // D9 024F
        gbc.setState(0x94d1, 0x45f4, 0xeec0, 0x841d, 0x191d, 0xcc3, 0x0, 0x0);
        gbc.writeMem(0x45f4, { 0x3c, 0x5b });
        gbc.writeMem(0x94d1, { 0xd9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x45f6, gbc.sp());
        EXPECT(0x5b3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x94d1));
        // D9 0250
        gbc.setState(0xb94b, 0xe074, 0xdd50, 0x777b, 0xe8cd, 0xf37b, 0x0, 0x1);
        gbc.writeMem(0xb94b, { 0xd9 });
        gbc.writeMem(0xe074, { 0xdb, 0x2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe076, gbc.sp());
        EXPECT(0x2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb94b));
        EXPECT(0xdb, gbc.readMem(0xe074));
        EXPECT(0x2, gbc.readMem(0xe075));
        // D9 0251
        gbc.setState(0x343, 0xceff, 0x32a0, 0x8350, 0xd241, 0x3cfe, 0x0, 0x0);
        gbc.writeMem(0x343, { 0xd9 });
        gbc.writeMem(0xceff, { 0xe7, 0xa3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xcf01, gbc.sp());
        EXPECT(0xa3e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xceff));
        EXPECT(0xa3, gbc.readMem(0xcf00));
        // D9 0252
        gbc.setState(0x2c1c, 0xdb64, 0x9d80, 0xfc57, 0xd16a, 0xd96c, 0x1, 0x0);
        gbc.writeMem(0x2c1c, { 0xd9 });
        gbc.writeMem(0xdb64, { 0xf, 0xa1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdb66, gbc.sp());
        EXPECT(0xa10f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xdb64));
        EXPECT(0xa1, gbc.readMem(0xdb65));
        // D9 0253
        gbc.setState(0x6c6a, 0xc616, 0xfb40, 0x24c0, 0xe621, 0x5964, 0x1, 0x0);
        gbc.writeMem(0x6c6a, { 0xd9 });
        gbc.writeMem(0xc616, { 0x6, 0xdb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc618, gbc.sp());
        EXPECT(0xdb06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc616));
        EXPECT(0xdb, gbc.readMem(0xc617));
        // D9 0255
        gbc.setState(0x4785, 0x7ea2, 0xe400, 0x23d6, 0x1ef6, 0x1906, 0x1, 0x0);
        gbc.writeMem(0x4785, { 0xd9 });
        gbc.writeMem(0x7ea2, { 0x44, 0x55 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7ea4, gbc.sp());
        EXPECT(0x5544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0256
        gbc.setState(0x1988, 0x1f6e, 0x1dc0, 0xefd5, 0xa3bd, 0x3267, 0x1, 0x0);
        gbc.writeMem(0x1988, { 0xd9 });
        gbc.writeMem(0x1f6e, { 0x2a, 0x25 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1f70, gbc.sp());
        EXPECT(0x252a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0257
        gbc.setState(0x3ffb, 0xf8ce, 0x3ab0, 0x2078, 0x2701, 0x2d8e, 0x1, 0x1);
        gbc.writeMem(0x3ffb, { 0xd9 });
        gbc.writeMem(0xf8ce, { 0xe4, 0x60 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf8d0, gbc.sp());
        EXPECT(0x60e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xf8ce));
        EXPECT(0x60, gbc.readMem(0xf8cf));
        // D9 0258
        gbc.setState(0xac4d, 0x3c85, 0xba80, 0xb0a8, 0x538, 0xd6b1, 0x0, 0x1);
        gbc.writeMem(0x3c85, { 0xfd, 0x3a });
        gbc.writeMem(0xac4d, { 0xd9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3c87, gbc.sp());
        EXPECT(0x3afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xac4d));
        // D9 0259
        gbc.setState(0xaad4, 0x16c1, 0x8ad0, 0xe0fe, 0xa1d, 0xf947, 0x0, 0x1);
        gbc.writeMem(0x16c1, { 0x1d, 0xa4 });
        gbc.writeMem(0xaad4, { 0xd9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x16c3, gbc.sp());
        EXPECT(0xa41d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xaad4));
        // D9 025A
        gbc.setState(0x7b13, 0x673, 0x2e80, 0x713, 0xdefa, 0xb074, 0x1, 0x1);
        gbc.writeMem(0x673, { 0x5a, 0x26 });
        gbc.writeMem(0x7b13, { 0xd9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x675, gbc.sp());
        EXPECT(0x265a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 025B
        gbc.setState(0x40a7, 0xa6fc, 0xde50, 0x41fb, 0xb7be, 0x9a7f, 0x1, 0x1);
        gbc.writeMem(0x40a7, { 0xd9 });
        gbc.writeMem(0xa6fc, { 0x8a, 0x75 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa6fe, gbc.sp());
        EXPECT(0x758a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa6fc));
        EXPECT(0x75, gbc.readMem(0xa6fd));
        // D9 025C
        gbc.setState(0x5816, 0x4592, 0x4520, 0xcee0, 0xc01, 0x436c, 0x0, 0x1);
        gbc.writeMem(0x4592, { 0x67, 0xf9 });
        gbc.writeMem(0x5816, { 0xd9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4594, gbc.sp());
        EXPECT(0xf967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 025D
        gbc.setState(0x78b7, 0xc62d, 0x2b20, 0xbbb, 0xc05b, 0xe927, 0x1, 0x0);
        gbc.writeMem(0x78b7, { 0xd9 });
        gbc.writeMem(0xc62d, { 0xb7, 0xce });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc62f, gbc.sp());
        EXPECT(0xceb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc62d));
        EXPECT(0xce, gbc.readMem(0xc62e));
        // D9 025E
        gbc.setState(0x5af1, 0x3c6, 0x960, 0xcbd8, 0xe80e, 0xe5a9, 0x1, 0x1);
        gbc.writeMem(0x3c6, { 0x9f, 0xf4 });
        gbc.writeMem(0x5af1, { 0xd9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3c8, gbc.sp());
        EXPECT(0xf49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 025F
        gbc.setState(0x5556, 0xe088, 0x9160, 0x206b, 0x37c7, 0xa577, 0x0, 0x1);
        gbc.writeMem(0x5556, { 0xd9 });
        gbc.writeMem(0xe088, { 0xe2, 0xe2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe08a, gbc.sp());
        EXPECT(0xe2e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe088));
        EXPECT(0xe2, gbc.readMem(0xe089));
        // D9 0260
        gbc.setState(0x2dfd, 0xd813, 0xa3c0, 0xfeea, 0x94e, 0xb1db, 0x0, 0x0);
        gbc.writeMem(0x2dfd, { 0xd9 });
        gbc.writeMem(0xd813, { 0xe, 0x72 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd815, gbc.sp());
        EXPECT(0x720e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd813));
        EXPECT(0x72, gbc.readMem(0xd814));
        // D9 0261
        gbc.setState(0x83bf, 0x5e46, 0xcd40, 0x160e, 0x2e91, 0xdc70, 0x0, 0x1);
        gbc.writeMem(0x5e46, { 0xfe, 0x9 });
        gbc.writeMem(0x83bf, { 0xd9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5e48, gbc.sp());
        EXPECT(0x9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x83bf));
        // D9 0262
        gbc.setState(0xbd34, 0x6d68, 0x5ff0, 0x63a3, 0xe32a, 0x1e23, 0x1, 0x0);
        gbc.writeMem(0x6d68, { 0xa8, 0xf8 });
        gbc.writeMem(0xbd34, { 0xd9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6d6a, gbc.sp());
        EXPECT(0xf8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbd34));
        // D9 0263
        gbc.setState(0x181c, 0xf925, 0xb7b0, 0xa8c6, 0x8891, 0xe44e, 0x0, 0x1);
        gbc.writeMem(0x181c, { 0xd9 });
        gbc.writeMem(0xf925, { 0xe, 0xd1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf927, gbc.sp());
        EXPECT(0xd10e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xf925));
        EXPECT(0xd1, gbc.readMem(0xf926));
        // D9 0264
        gbc.setState(0x3b8, 0xf0c7, 0x7ff0, 0x1128, 0x6209, 0x54ab, 0x0, 0x1);
        gbc.writeMem(0x3b8, { 0xd9 });
        gbc.writeMem(0xf0c7, { 0x3, 0x15 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf0c9, gbc.sp());
        EXPECT(0x1503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xf0c7));
        EXPECT(0x15, gbc.readMem(0xf0c8));
        // D9 0265
        gbc.setState(0x291e, 0xd657, 0xb730, 0xaae3, 0x2ebc, 0xdcdb, 0x0, 0x1);
        gbc.writeMem(0x291e, { 0xd9 });
        gbc.writeMem(0xd657, { 0x96, 0xfd });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd659, gbc.sp());
        EXPECT(0xfd96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xd657));
        EXPECT(0xfd, gbc.readMem(0xd658));
        // D9 0266
        gbc.setState(0xbd0c, 0x796f, 0xd410, 0x71f9, 0xf121, 0x8cad, 0x0, 0x0);
        gbc.writeMem(0x796f, { 0x79, 0x35 });
        gbc.writeMem(0xbd0c, { 0xd9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7971, gbc.sp());
        EXPECT(0x3579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbd0c));
        // D9 0267
        gbc.setState(0x4da8, 0xb75c, 0xfd40, 0x709, 0xa8f4, 0x4be2, 0x0, 0x0);
        gbc.writeMem(0x4da8, { 0xd9 });
        gbc.writeMem(0xb75c, { 0xa0, 0xed });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb75e, gbc.sp());
        EXPECT(0xeda0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb75c));
        EXPECT(0xed, gbc.readMem(0xb75d));
        // D9 0268
        gbc.setState(0x7810, 0x97b0, 0xcad0, 0x247f, 0x3c8, 0x7941, 0x1, 0x0);
        gbc.writeMem(0x7810, { 0xd9 });
        gbc.writeMem(0x97b0, { 0xc, 0xeb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x97b2, gbc.sp());
        EXPECT(0xeb0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x97b0));
        EXPECT(0xeb, gbc.readMem(0x97b1));
        // D9 0269
        gbc.setState(0xae47, 0x6993, 0xf8f0, 0xdf38, 0xe1d2, 0x5858, 0x0, 0x1);
        gbc.writeMem(0x6993, { 0xa5, 0x1f });
        gbc.writeMem(0xae47, { 0xd9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6995, gbc.sp());
        EXPECT(0x1fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xae47));
        // D9 026A
        gbc.setState(0x84ef, 0xc312, 0x58c0, 0xe5b2, 0x5b91, 0x26b0, 0x0, 0x0);
        gbc.writeMem(0x84ef, { 0xd9 });
        gbc.writeMem(0xc312, { 0x35, 0xea });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc314, gbc.sp());
        EXPECT(0xea35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x84ef));
        EXPECT(0x35, gbc.readMem(0xc312));
        EXPECT(0xea, gbc.readMem(0xc313));
        // D9 026B
        gbc.setState(0x8c02, 0x50dd, 0x9900, 0xeb3, 0xec7a, 0xd5d7, 0x1, 0x0);
        gbc.writeMem(0x50dd, { 0xb, 0x35 });
        gbc.writeMem(0x8c02, { 0xd9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x50df, gbc.sp());
        EXPECT(0x350b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8c02));
        // D9 026C
        gbc.setState(0x3001, 0x9f73, 0x74f0, 0x371e, 0xe754, 0xec4a, 0x0, 0x1);
        gbc.writeMem(0x3001, { 0xd9 });
        gbc.writeMem(0x9f73, { 0xc9, 0x24 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9f75, gbc.sp());
        EXPECT(0x24c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9f73));
        EXPECT(0x24, gbc.readMem(0x9f74));
        // D9 026D
        gbc.setState(0x93f8, 0xdf79, 0xd770, 0xc253, 0xd694, 0x54, 0x0, 0x0);
        gbc.writeMem(0x93f8, { 0xd9 });
        gbc.writeMem(0xdf79, { 0x7a, 0x82 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdf7b, gbc.sp());
        EXPECT(0x827a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x93f8));
        EXPECT(0x7a, gbc.readMem(0xdf79));
        EXPECT(0x82, gbc.readMem(0xdf7a));
        // D9 026E
        gbc.setState(0x8689, 0x87b5, 0x1df0, 0xeb4f, 0x4aed, 0xcf0b, 0x0, 0x1);
        gbc.writeMem(0x8689, { 0xd9 });
        gbc.writeMem(0x87b5, { 0x20, 0x82 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x87b7, gbc.sp());
        EXPECT(0x8220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8689));
        EXPECT(0x20, gbc.readMem(0x87b5));
        EXPECT(0x82, gbc.readMem(0x87b6));
        // D9 026F
        gbc.setState(0x924f, 0x24a9, 0x4110, 0xdbb5, 0x5e1d, 0x376c, 0x1, 0x0);
        gbc.writeMem(0x24a9, { 0x4d, 0x21 });
        gbc.writeMem(0x924f, { 0xd9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x24ab, gbc.sp());
        EXPECT(0x214d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x924f));
        // D9 0270
        gbc.setState(0x2e5e, 0x571d, 0x69f0, 0xd7c7, 0x3edc, 0x9e7a, 0x0, 0x0);
        gbc.writeMem(0x2e5e, { 0xd9 });
        gbc.writeMem(0x571d, { 0xff, 0xf1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x571f, gbc.sp());
        EXPECT(0xf1ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0271
        gbc.setState(0x86fb, 0xc61a, 0xa290, 0x4ae, 0x3ab5, 0x779, 0x0, 0x0);
        gbc.writeMem(0x86fb, { 0xd9 });
        gbc.writeMem(0xc61a, { 0xd0, 0x1e });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc61c, gbc.sp());
        EXPECT(0x1ed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x86fb));
        EXPECT(0xd0, gbc.readMem(0xc61a));
        EXPECT(0x1e, gbc.readMem(0xc61b));
        // D9 0272
        gbc.setState(0x4c53, 0x9b55, 0xf10, 0xd72b, 0xdc5, 0xfbe5, 0x1, 0x0);
        gbc.writeMem(0x4c53, { 0xd9 });
        gbc.writeMem(0x9b55, { 0xf9, 0x2c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9b57, gbc.sp());
        EXPECT(0x2cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x9b55));
        EXPECT(0x2c, gbc.readMem(0x9b56));
        // D9 0273
        gbc.setState(0x3101, 0xaad0, 0xfeb0, 0xd1d9, 0x6274, 0xc18a, 0x0, 0x0);
        gbc.writeMem(0x3101, { 0xd9 });
        gbc.writeMem(0xaad0, { 0x55, 0xbe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xaad2, gbc.sp());
        EXPECT(0xbe55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xaad0));
        EXPECT(0xbe, gbc.readMem(0xaad1));
        // D9 0274
        gbc.setState(0x932d, 0xda58, 0x3260, 0x72eb, 0x3824, 0xbdda, 0x0, 0x0);
        gbc.writeMem(0x932d, { 0xd9 });
        gbc.writeMem(0xda58, { 0x9f, 0xf6 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xda5a, gbc.sp());
        EXPECT(0xf69f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x932d));
        EXPECT(0x9f, gbc.readMem(0xda58));
        EXPECT(0xf6, gbc.readMem(0xda59));
        // D9 0275
        gbc.setState(0xa570, 0x310a, 0x7a10, 0xd6b, 0xee41, 0x62f0, 0x1, 0x1);
        gbc.writeMem(0x310a, { 0xe9, 0x2c });
        gbc.writeMem(0xa570, { 0xd9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x310c, gbc.sp());
        EXPECT(0x2ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa570));
        // D9 0276
        gbc.setState(0x6b5d, 0x22f7, 0x7670, 0xaffb, 0xec2b, 0x6658, 0x0, 0x0);
        gbc.writeMem(0x22f7, { 0xad, 0xf0 });
        gbc.writeMem(0x6b5d, { 0xd9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x22f9, gbc.sp());
        EXPECT(0xf0ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0277
        gbc.setState(0xcfd6, 0xefa5, 0xb660, 0x7909, 0x5a12, 0xb64f, 0x0, 0x1);
        gbc.writeMem(0xcfd6, { 0xd9 });
        gbc.writeMem(0xefa5, { 0x81, 0xff });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xefa7, gbc.sp());
        EXPECT(0xff81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcfd6));
        EXPECT(0x81, gbc.readMem(0xefa5));
        EXPECT(0xff, gbc.readMem(0xefa6));
        // D9 0278
        gbc.setState(0x9b40, 0xdb8f, 0x2d70, 0x7b64, 0xa01f, 0x3734, 0x0, 0x0);
        gbc.writeMem(0x9b40, { 0xd9 });
        gbc.writeMem(0xdb8f, { 0xca, 0x57 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdb91, gbc.sp());
        EXPECT(0x57ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9b40));
        EXPECT(0xca, gbc.readMem(0xdb8f));
        EXPECT(0x57, gbc.readMem(0xdb90));
        // D9 0279
        gbc.setState(0xa259, 0x5e7, 0x93f0, 0xaeea, 0x6573, 0x761d, 0x0, 0x1);
        gbc.writeMem(0x5e7, { 0xbb, 0x16 });
        gbc.writeMem(0xa259, { 0xd9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5e9, gbc.sp());
        EXPECT(0x16bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa259));
        // D9 027A
        gbc.setState(0x2ca0, 0x9a8b, 0x1ef0, 0x77a6, 0xddb5, 0xf092, 0x1, 0x0);
        gbc.writeMem(0x2ca0, { 0xd9 });
        gbc.writeMem(0x9a8b, { 0xa2, 0xa });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9a8d, gbc.sp());
        EXPECT(0xaa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9a8b));
        EXPECT(0xa, gbc.readMem(0x9a8c));
        // D9 027B
        gbc.setState(0xafe3, 0x6208, 0xb310, 0xa19d, 0x3dac, 0x1f01, 0x0, 0x1);
        gbc.writeMem(0x6208, { 0xb0, 0xb });
        gbc.writeMem(0xafe3, { 0xd9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x620a, gbc.sp());
        EXPECT(0xbb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xafe3));
        // D9 027C
        gbc.setState(0x17a7, 0x1608, 0xdc00, 0xddc2, 0x6f22, 0x7443, 0x0, 0x0);
        gbc.writeMem(0x1608, { 0xc1, 0xb2 });
        gbc.writeMem(0x17a7, { 0xd9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x160a, gbc.sp());
        EXPECT(0xb2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 027D
        gbc.setState(0x651f, 0xcc57, 0x33e0, 0x2ab4, 0x2fe0, 0xa7f2, 0x0, 0x1);
        gbc.writeMem(0x651f, { 0xd9 });
        gbc.writeMem(0xcc57, { 0x5d, 0xac });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcc59, gbc.sp());
        EXPECT(0xac5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcc57));
        EXPECT(0xac, gbc.readMem(0xcc58));
        // D9 027E
        gbc.setState(0x89e6, 0xffd2, 0x4e80, 0x8a79, 0xdad0, 0xcc74, 0x0, 0x0);
        gbc.writeMem(0x89e6, { 0xd9 });
        gbc.writeMem(0xffd2, { 0x31, 0xbb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xffd4, gbc.sp());
        EXPECT(0xbb31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x89e6));
        EXPECT(0x31, gbc.readMem(0xffd2));
        EXPECT(0xbb, gbc.readMem(0xffd3));
        // D9 027F
        gbc.setState(0x251, 0xb216, 0x1fd0, 0x562f, 0xb492, 0xfc1f, 0x0, 0x1);
        gbc.writeMem(0x251, { 0xd9 });
        gbc.writeMem(0xb216, { 0xc3, 0xb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb218, gbc.sp());
        EXPECT(0xbc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb216));
        EXPECT(0xb, gbc.readMem(0xb217));
        // D9 0280
        gbc.setState(0xcc09, 0x64f5, 0xca0, 0xaad3, 0x2d32, 0xccbd, 0x0, 0x0);
        gbc.writeMem(0x64f5, { 0x95, 0x9 });
        gbc.writeMem(0xcc09, { 0xd9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x64f7, gbc.sp());
        EXPECT(0x995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcc09));
        // D9 0281
        gbc.setState(0x1b9b, 0xbf0b, 0x4f10, 0x5ca2, 0x2fe, 0x7511, 0x1, 0x0);
        gbc.writeMem(0x1b9b, { 0xd9 });
        gbc.writeMem(0xbf0b, { 0x82, 0xaa });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbf0d, gbc.sp());
        EXPECT(0xaa82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbf0b));
        EXPECT(0xaa, gbc.readMem(0xbf0c));
        // D9 0282
        gbc.setState(0x30d5, 0xea55, 0xc1c0, 0xb8d4, 0x9714, 0x64b, 0x0, 0x0);
        gbc.writeMem(0x30d5, { 0xd9 });
        gbc.writeMem(0xea55, { 0x1a, 0x2b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xea57, gbc.sp());
        EXPECT(0x2b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xea55));
        EXPECT(0x2b, gbc.readMem(0xea56));
        // D9 0283
        gbc.setState(0x2d8b, 0xf653, 0xe3c0, 0xa691, 0x3e8b, 0x965c, 0x1, 0x1);
        gbc.writeMem(0x2d8b, { 0xd9 });
        gbc.writeMem(0xf653, { 0xb0, 0x65 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf655, gbc.sp());
        EXPECT(0x65b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xf653));
        EXPECT(0x65, gbc.readMem(0xf654));
        // D9 0284
        gbc.setState(0x90e0, 0xe4b4, 0xe580, 0x197d, 0x44a7, 0x732a, 0x0, 0x1);
        gbc.writeMem(0x90e0, { 0xd9 });
        gbc.writeMem(0xe4b4, { 0xe7, 0x25 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe4b6, gbc.sp());
        EXPECT(0x25e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x90e0));
        EXPECT(0xe7, gbc.readMem(0xe4b4));
        EXPECT(0x25, gbc.readMem(0xe4b5));
        // D9 0285
        gbc.setState(0x4453, 0xc948, 0xd910, 0xd370, 0x9705, 0x7a77, 0x0, 0x1);
        gbc.writeMem(0x4453, { 0xd9 });
        gbc.writeMem(0xc948, { 0x8a, 0x30 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc94a, gbc.sp());
        EXPECT(0x308a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc948));
        EXPECT(0x30, gbc.readMem(0xc949));
        // D9 0286
        gbc.setState(0x7aa3, 0x7aed, 0x3260, 0x7b77, 0xfe21, 0x3d59, 0x0, 0x0);
        gbc.writeMem(0x7aa3, { 0xd9 });
        gbc.writeMem(0x7aed, { 0xba, 0x7b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7aef, gbc.sp());
        EXPECT(0x7bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0287
        gbc.setState(0x4d3b, 0x1962, 0x9fa0, 0x62bc, 0x5354, 0x5f, 0x0, 0x0);
        gbc.writeMem(0x1962, { 0x19, 0x8 });
        gbc.writeMem(0x4d3b, { 0xd9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1964, gbc.sp());
        EXPECT(0x819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0288
        gbc.setState(0xa58f, 0x54b8, 0x4110, 0x266a, 0x70d1, 0x6006, 0x1, 0x1);
        gbc.writeMem(0x54b8, { 0xa9, 0xac });
        gbc.writeMem(0xa58f, { 0xd9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x54ba, gbc.sp());
        EXPECT(0xaca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa58f));
        // D9 0289
        gbc.setState(0xb08d, 0x87e3, 0x10e0, 0x13df, 0x6072, 0x9458, 0x1, 0x1);
        gbc.writeMem(0x87e3, { 0x20, 0x6f });
        gbc.writeMem(0xb08d, { 0xd9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x87e5, gbc.sp());
        EXPECT(0x6f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x87e3));
        EXPECT(0x6f, gbc.readMem(0x87e4));
        EXPECT(0xd9, gbc.readMem(0xb08d));
        // D9 028A
        gbc.setState(0x7e65, 0x21a6, 0x73b0, 0x1e9, 0xfcf, 0x4aa9, 0x1, 0x0);
        gbc.writeMem(0x21a6, { 0x6d, 0xb3 });
        gbc.writeMem(0x7e65, { 0xd9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x21a8, gbc.sp());
        EXPECT(0xb36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 028B
        gbc.setState(0x7fe4, 0x7c09, 0xff60, 0x3bc1, 0xa191, 0xe2b9, 0x1, 0x0);
        gbc.writeMem(0x7c09, { 0x54, 0x93 });
        gbc.writeMem(0x7fe4, { 0xd9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7c0b, gbc.sp());
        EXPECT(0x9354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 028C
        gbc.setState(0x3a65, 0xad99, 0xba90, 0xcaf6, 0x45a5, 0xbc0c, 0x0, 0x0);
        gbc.writeMem(0x3a65, { 0xd9 });
        gbc.writeMem(0xad99, { 0x4c, 0x70 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xad9b, gbc.sp());
        EXPECT(0x704c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xad99));
        EXPECT(0x70, gbc.readMem(0xad9a));
        // D9 028D
        gbc.setState(0xc587, 0xa14f, 0x54a0, 0xdd47, 0x4870, 0xaa5b, 0x0, 0x1);
        gbc.writeMem(0xa14f, { 0x37, 0x5d });
        gbc.writeMem(0xc587, { 0xd9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa151, gbc.sp());
        EXPECT(0x5d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa14f));
        EXPECT(0x5d, gbc.readMem(0xa150));
        EXPECT(0xd9, gbc.readMem(0xc587));
        // D9 028E
        gbc.setState(0x1e6e, 0x118d, 0xa790, 0x4d2f, 0x465c, 0xb7d3, 0x1, 0x0);
        gbc.writeMem(0x118d, { 0x3a, 0x7 });
        gbc.writeMem(0x1e6e, { 0xd9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x118f, gbc.sp());
        EXPECT(0x73a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 028F
        gbc.setState(0x59ad, 0x4efb, 0x1c0, 0xac47, 0xf791, 0xa4a7, 0x0, 0x1);
        gbc.writeMem(0x4efb, { 0x5, 0x3c });
        gbc.writeMem(0x59ad, { 0xd9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4efd, gbc.sp());
        EXPECT(0x3c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0290
        gbc.setState(0x49af, 0x71f1, 0x89a0, 0x6b7d, 0x428d, 0xabb0, 0x1, 0x0);
        gbc.writeMem(0x49af, { 0xd9 });
        gbc.writeMem(0x71f1, { 0xd6, 0xae });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x71f3, gbc.sp());
        EXPECT(0xaed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0291
        gbc.setState(0x4b1d, 0x8dc3, 0x2270, 0xff26, 0xbd57, 0x160f, 0x1, 0x0);
        gbc.writeMem(0x4b1d, { 0xd9 });
        gbc.writeMem(0x8dc3, { 0xfe, 0x35 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8dc5, gbc.sp());
        EXPECT(0x35fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8dc3));
        EXPECT(0x35, gbc.readMem(0x8dc4));
        // D9 0292
        gbc.setState(0xb514, 0x6ca, 0xd9d0, 0xc22, 0x9fe5, 0x2c94, 0x0, 0x1);
        gbc.writeMem(0x6ca, { 0x14, 0x2 });
        gbc.writeMem(0xb514, { 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6cc, gbc.sp());
        EXPECT(0x214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb514));
        // D9 0293
        gbc.setState(0x5ca4, 0xd83c, 0xab20, 0x2dce, 0xeb69, 0xb10f, 0x1, 0x0);
        gbc.writeMem(0x5ca4, { 0xd9 });
        gbc.writeMem(0xd83c, { 0xaa, 0x74 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd83e, gbc.sp());
        EXPECT(0x74aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd83c));
        EXPECT(0x74, gbc.readMem(0xd83d));
        // D9 0294
        gbc.setState(0xac4e, 0x6436, 0xc8b0, 0xf480, 0xfe6a, 0x41e1, 0x0, 0x1);
        gbc.writeMem(0x6436, { 0x9d, 0x96 });
        gbc.writeMem(0xac4e, { 0xd9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6438, gbc.sp());
        EXPECT(0x969d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xac4e));
        // D9 0295
        gbc.setState(0x8f67, 0x565a, 0x2be0, 0xe576, 0xc2c3, 0x69f6, 0x0, 0x1);
        gbc.writeMem(0x565a, { 0x15, 0xf0 });
        gbc.writeMem(0x8f67, { 0xd9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x565c, gbc.sp());
        EXPECT(0xf015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8f67));
        // D9 0296
        gbc.setState(0x71e8, 0x18e, 0xf4e0, 0x1e15, 0xc6f, 0xc2b5, 0x1, 0x1);
        gbc.writeMem(0x18e, { 0xa7, 0xc1 });
        gbc.writeMem(0x71e8, { 0xd9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x190, gbc.sp());
        EXPECT(0xc1a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0297
        gbc.setState(0x3241, 0xfae2, 0xca20, 0x7a73, 0x179, 0x9faa, 0x1, 0x0);
        gbc.writeMem(0x3241, { 0xd9 });
        gbc.writeMem(0xfae2, { 0xd1, 0x3d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfae4, gbc.sp());
        EXPECT(0x3dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xfae2));
        EXPECT(0x3d, gbc.readMem(0xfae3));
        // D9 0298
        gbc.setState(0x7b5, 0x762d, 0x5360, 0xec49, 0x3861, 0xcce5, 0x1, 0x1);
        gbc.writeMem(0x7b5, { 0xd9 });
        gbc.writeMem(0x762d, { 0x58, 0x67 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x762f, gbc.sp());
        EXPECT(0x6758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0299
        gbc.setState(0xe778, 0x7b01, 0x6610, 0x3bcc, 0xb682, 0x2ef5, 0x1, 0x0);
        gbc.writeMem(0x7b01, { 0x8, 0x96 });
        gbc.writeMem(0xe778, { 0xd9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7b03, gbc.sp());
        EXPECT(0x9608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe778));
        // D9 029A
        gbc.setState(0x6be, 0x1bfb, 0x7800, 0x71, 0x599a, 0xba93, 0x1, 0x0);
        gbc.writeMem(0x6be, { 0xd9 });
        gbc.writeMem(0x1bfb, { 0xf0, 0x3a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1bfd, gbc.sp());
        EXPECT(0x3af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 029B
        gbc.setState(0x124f, 0x8012, 0xcdd0, 0x6359, 0x1e5b, 0x8d6c, 0x0, 0x0);
        gbc.writeMem(0x124f, { 0xd9 });
        gbc.writeMem(0x8012, { 0x38, 0x3b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8014, gbc.sp());
        EXPECT(0x3b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8012));
        EXPECT(0x3b, gbc.readMem(0x8013));
        // D9 029C
        gbc.setState(0xb7f2, 0xe50a, 0xa380, 0xfa9a, 0xba75, 0x7819, 0x0, 0x0);
        gbc.writeMem(0xb7f2, { 0xd9 });
        gbc.writeMem(0xe50a, { 0xae, 0x34 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe50c, gbc.sp());
        EXPECT(0x34ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb7f2));
        EXPECT(0xae, gbc.readMem(0xe50a));
        EXPECT(0x34, gbc.readMem(0xe50b));
        // D9 029D
        gbc.setState(0x76e1, 0x3eeb, 0xcf20, 0x4775, 0xfc90, 0x7d85, 0x0, 0x1);
        gbc.writeMem(0x3eeb, { 0xfe, 0xa9 });
        gbc.writeMem(0x76e1, { 0xd9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3eed, gbc.sp());
        EXPECT(0xa9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 029E
        gbc.setState(0x510d, 0xda9a, 0xe860, 0x2378, 0xa979, 0xf841, 0x1, 0x0);
        gbc.writeMem(0x510d, { 0xd9 });
        gbc.writeMem(0xda9a, { 0x29, 0x43 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xda9c, gbc.sp());
        EXPECT(0x4329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xda9a));
        EXPECT(0x43, gbc.readMem(0xda9b));
        // D9 029F
        gbc.setState(0x2312, 0x27e4, 0xfbb0, 0x8b59, 0x15d2, 0x846, 0x0, 0x1);
        gbc.writeMem(0x2312, { 0xd9 });
        gbc.writeMem(0x27e4, { 0xe4, 0x27 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x27e6, gbc.sp());
        EXPECT(0x27e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 02A0
        gbc.setState(0xdc17, 0x8f33, 0xb7e0, 0xf5fe, 0x5222, 0x643e, 0x0, 0x1);
        gbc.writeMem(0x8f33, { 0xcd, 0x88 });
        gbc.writeMem(0xdc17, { 0xd9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8f35, gbc.sp());
        EXPECT(0x88cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x8f33));
        EXPECT(0x88, gbc.readMem(0x8f34));
        EXPECT(0xd9, gbc.readMem(0xdc17));
        // D9 02A1
        gbc.setState(0x912, 0x4c8f, 0x9080, 0x2342, 0x5fe9, 0x3101, 0x0, 0x0);
        gbc.writeMem(0x912, { 0xd9 });
        gbc.writeMem(0x4c8f, { 0xf0, 0x8c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4c91, gbc.sp());
        EXPECT(0x8cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02A2
        gbc.setState(0x4580, 0x7ea7, 0x5870, 0xd6e0, 0x2393, 0x540, 0x1, 0x0);
        gbc.writeMem(0x4580, { 0xd9 });
        gbc.writeMem(0x7ea7, { 0x65, 0x96 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7ea9, gbc.sp());
        EXPECT(0x9665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 02A3
        gbc.setState(0xb94a, 0x7dd4, 0x5190, 0xbaf0, 0xdfaa, 0xa508, 0x0, 0x1);
        gbc.writeMem(0x7dd4, { 0x9f, 0x4e });
        gbc.writeMem(0xb94a, { 0xd9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7dd6, gbc.sp());
        EXPECT(0x4e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb94a));
        // D9 02A4
        gbc.setState(0x486c, 0x3884, 0xdd40, 0x9cc3, 0x3407, 0x6ce2, 0x1, 0x0);
        gbc.writeMem(0x3884, { 0xe5, 0x10 });
        gbc.writeMem(0x486c, { 0xd9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3886, gbc.sp());
        EXPECT(0x10e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02A5
        gbc.setState(0xc5e6, 0xefcc, 0x2610, 0x287c, 0xbeb8, 0x744e, 0x1, 0x0);
        gbc.writeMem(0xc5e6, { 0xd9 });
        gbc.writeMem(0xefcc, { 0x57, 0xfc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xefce, gbc.sp());
        EXPECT(0xfc57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc5e6));
        EXPECT(0x57, gbc.readMem(0xefcc));
        EXPECT(0xfc, gbc.readMem(0xefcd));
        // D9 02A6
        gbc.setState(0x2393, 0x35cc, 0x2040, 0xf206, 0x852a, 0x588, 0x0, 0x1);
        gbc.writeMem(0x2393, { 0xd9 });
        gbc.writeMem(0x35cc, { 0xd4, 0xf7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x35ce, gbc.sp());
        EXPECT(0xf7d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02A7
        gbc.setState(0x3f78, 0x9d13, 0x72a0, 0xe8d2, 0x3785, 0x269, 0x1, 0x0);
        gbc.writeMem(0x3f78, { 0xd9 });
        gbc.writeMem(0x9d13, { 0x18, 0xe0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9d15, gbc.sp());
        EXPECT(0xe018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x9d13));
        EXPECT(0xe0, gbc.readMem(0x9d14));
        // D9 02A8
        gbc.setState(0xdc81, 0x5996, 0x1090, 0x40f8, 0xfc44, 0xd0b3, 0x0, 0x1);
        gbc.writeMem(0x5996, { 0x77, 0xe2 });
        gbc.writeMem(0xdc81, { 0xd9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5998, gbc.sp());
        EXPECT(0xe277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xdc81));
        // D9 02AA
        gbc.setState(0xe5fe, 0xf98c, 0x3a10, 0xaacf, 0x329b, 0x36b4, 0x1, 0x0);
        gbc.writeMem(0xe5fe, { 0xd9 });
        gbc.writeMem(0xf98c, { 0x7, 0xd6 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf98e, gbc.sp());
        EXPECT(0xd607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe5fe));
        EXPECT(0x7, gbc.readMem(0xf98c));
        EXPECT(0xd6, gbc.readMem(0xf98d));
        // D9 02AB
        gbc.setState(0xfc4, 0x8869, 0x11b0, 0x5807, 0xb202, 0xed22, 0x0, 0x1);
        gbc.writeMem(0xfc4, { 0xd9 });
        gbc.writeMem(0x8869, { 0x79, 0xe9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x886b, gbc.sp());
        EXPECT(0xe979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8869));
        EXPECT(0xe9, gbc.readMem(0x886a));
        // D9 02AC
        gbc.setState(0x5f8, 0xfc3d, 0x93d0, 0xb7b, 0xee79, 0x9ed9, 0x1, 0x0);
        gbc.writeMem(0x5f8, { 0xd9 });
        gbc.writeMem(0xfc3d, { 0x13, 0x81 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfc3f, gbc.sp());
        EXPECT(0x8113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xfc3d));
        EXPECT(0x81, gbc.readMem(0xfc3e));
        // D9 02AD
        gbc.setState(0xbbe6, 0xd765, 0xad10, 0x6c3e, 0xdabf, 0x9823, 0x1, 0x1);
        gbc.writeMem(0xbbe6, { 0xd9 });
        gbc.writeMem(0xd765, { 0x8b, 0x1e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd767, gbc.sp());
        EXPECT(0x1e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbbe6));
        EXPECT(0x8b, gbc.readMem(0xd765));
        EXPECT(0x1e, gbc.readMem(0xd766));
        // D9 02AE
        gbc.setState(0xed24, 0x51e7, 0x9960, 0xfba, 0xfd1, 0xbf0, 0x1, 0x1);
        gbc.writeMem(0x51e7, { 0x29, 0x51 });
        gbc.writeMem(0xed24, { 0xd9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x51e9, gbc.sp());
        EXPECT(0x5129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xed24));
        // D9 02AF
        gbc.setState(0x8d4d, 0x817b, 0x5260, 0x7daf, 0x191, 0xf9e7, 0x0, 0x1);
        gbc.writeMem(0x817b, { 0x87, 0x50 });
        gbc.writeMem(0x8d4d, { 0xd9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x817d, gbc.sp());
        EXPECT(0x5087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x817b));
        EXPECT(0x50, gbc.readMem(0x817c));
        EXPECT(0xd9, gbc.readMem(0x8d4d));
        // D9 02B0
        gbc.setState(0xabb4, 0xbcd0, 0xe1e0, 0x3612, 0xc041, 0x9736, 0x1, 0x1);
        gbc.writeMem(0xabb4, { 0xd9 });
        gbc.writeMem(0xbcd0, { 0x15, 0x19 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbcd2, gbc.sp());
        EXPECT(0x1915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xabb4));
        EXPECT(0x15, gbc.readMem(0xbcd0));
        EXPECT(0x19, gbc.readMem(0xbcd1));
        // D9 02B1
        gbc.setState(0x508d, 0xe013, 0x7da0, 0x6aa1, 0x7172, 0xa189, 0x1, 0x1);
        gbc.writeMem(0x508d, { 0xd9 });
        gbc.writeMem(0xe013, { 0xb8, 0x6d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe015, gbc.sp());
        EXPECT(0x6db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xe013));
        EXPECT(0x6d, gbc.readMem(0xe014));
        // D9 02B2
        gbc.setState(0x7618, 0x2fcb, 0x8a10, 0xea99, 0xeefb, 0x9ca6, 0x0, 0x1);
        gbc.writeMem(0x2fcb, { 0xdc, 0xc0 });
        gbc.writeMem(0x7618, { 0xd9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2fcd, gbc.sp());
        EXPECT(0xc0dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 02B3
        gbc.setState(0x12f4, 0xc802, 0x6720, 0x5427, 0x1283, 0x329b, 0x0, 0x1);
        gbc.writeMem(0x12f4, { 0xd9 });
        gbc.writeMem(0xc802, { 0xa2, 0x59 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc804, gbc.sp());
        EXPECT(0x59a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc802));
        EXPECT(0x59, gbc.readMem(0xc803));
        // D9 02B4
        gbc.setState(0x1298, 0x4734, 0x3720, 0x6f3b, 0x4f5f, 0x821b, 0x0, 0x0);
        gbc.writeMem(0x1298, { 0xd9 });
        gbc.writeMem(0x4734, { 0x60, 0xab });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4736, gbc.sp());
        EXPECT(0xab60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02B5
        gbc.setState(0x5feb, 0x4d75, 0x13e0, 0xa77e, 0xf36b, 0x643d, 0x0, 0x1);
        gbc.writeMem(0x4d75, { 0x89, 0x42 });
        gbc.writeMem(0x5feb, { 0xd9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4d77, gbc.sp());
        EXPECT(0x4289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02B6
        gbc.setState(0xb27, 0xdf32, 0xfce0, 0x6b4, 0xbd2f, 0x26ae, 0x0, 0x1);
        gbc.writeMem(0xb27, { 0xd9 });
        gbc.writeMem(0xdf32, { 0x1c, 0x86 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdf34, gbc.sp());
        EXPECT(0x861c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xdf32));
        EXPECT(0x86, gbc.readMem(0xdf33));
        // D9 02B7
        gbc.setState(0x51aa, 0xa872, 0x28d0, 0x29a5, 0xfce2, 0xfb4d, 0x1, 0x0);
        gbc.writeMem(0x51aa, { 0xd9 });
        gbc.writeMem(0xa872, { 0x9b, 0x44 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa874, gbc.sp());
        EXPECT(0x449b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa872));
        EXPECT(0x44, gbc.readMem(0xa873));
        // D9 02B8
        gbc.setState(0x2b58, 0xa18, 0xb420, 0x882d, 0x52f3, 0xbe89, 0x0, 0x1);
        gbc.writeMem(0xa18, { 0xa0, 0x9 });
        gbc.writeMem(0x2b58, { 0xd9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa1a, gbc.sp());
        EXPECT(0x9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02B9
        gbc.setState(0x7e4a, 0xef06, 0xf270, 0xd373, 0xe953, 0x1266, 0x0, 0x1);
        gbc.writeMem(0x7e4a, { 0xd9 });
        gbc.writeMem(0xef06, { 0x73, 0xeb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xef08, gbc.sp());
        EXPECT(0xeb73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xef06));
        EXPECT(0xeb, gbc.readMem(0xef07));
        // D9 02BA
        gbc.setState(0x4b7b, 0xd661, 0xd9a0, 0x5c6c, 0xac60, 0xe8bd, 0x1, 0x0);
        gbc.writeMem(0x4b7b, { 0xd9 });
        gbc.writeMem(0xd661, { 0xb7, 0xe });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd663, gbc.sp());
        EXPECT(0xeb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd661));
        EXPECT(0xe, gbc.readMem(0xd662));
        // D9 02BB
        gbc.setState(0x8b62, 0xee9, 0x8740, 0xb866, 0xe952, 0xc307, 0x0, 0x1);
        gbc.writeMem(0xee9, { 0xef, 0x2f });
        gbc.writeMem(0x8b62, { 0xd9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xeeb, gbc.sp());
        EXPECT(0x2fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8b62));
        // D9 02BC
        gbc.setState(0x208a, 0x6f13, 0x8250, 0x7894, 0x4161, 0xee9c, 0x1, 0x1);
        gbc.writeMem(0x208a, { 0xd9 });
        gbc.writeMem(0x6f13, { 0xb6, 0xa5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6f15, gbc.sp());
        EXPECT(0xa5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 02BD
        gbc.setState(0xdd28, 0x1c35, 0x3e40, 0x6c3d, 0xeab, 0x2a21, 0x0, 0x0);
        gbc.writeMem(0x1c35, { 0x75, 0xc8 });
        gbc.writeMem(0xdd28, { 0xd9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1c37, gbc.sp());
        EXPECT(0xc875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xdd28));
        // D9 02BE
        gbc.setState(0xb0ee, 0x77c8, 0xada0, 0x2218, 0xf8e5, 0x7661, 0x1, 0x1);
        gbc.writeMem(0x77c8, { 0xa2, 0xad });
        gbc.writeMem(0xb0ee, { 0xd9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x77ca, gbc.sp());
        EXPECT(0xada2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb0ee));
        // D9 02BF
        gbc.setState(0x8442, 0x7d57, 0xabc0, 0xc2ee, 0x159, 0x8e99, 0x1, 0x1);
        gbc.writeMem(0x7d57, { 0xc3, 0x24 });
        gbc.writeMem(0x8442, { 0xd9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7d59, gbc.sp());
        EXPECT(0x24c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8442));
        // D9 02C0
        gbc.setState(0xb38c, 0x1f52, 0xd860, 0x512e, 0x177d, 0x9b8c, 0x1, 0x1);
        gbc.writeMem(0x1f52, { 0x77, 0x66 });
        gbc.writeMem(0xb38c, { 0xd9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1f54, gbc.sp());
        EXPECT(0x6677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb38c));
        // D9 02C1
        gbc.setState(0x3f0f, 0x7cd1, 0x5030, 0x7cac, 0x6781, 0x5373, 0x0, 0x0);
        gbc.writeMem(0x3f0f, { 0xd9 });
        gbc.writeMem(0x7cd1, { 0x14, 0x30 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7cd3, gbc.sp());
        EXPECT(0x3014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 02C2
        gbc.setState(0x5176, 0x46a8, 0x1000, 0xce5b, 0x5205, 0xc28d, 0x0, 0x0);
        gbc.writeMem(0x46a8, { 0x28, 0x6f });
        gbc.writeMem(0x5176, { 0xd9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x46aa, gbc.sp());
        EXPECT(0x6f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02C3
        gbc.setState(0x43c6, 0x7f4e, 0xf8e0, 0x5839, 0xfbb8, 0xcda3, 0x0, 0x0);
        gbc.writeMem(0x43c6, { 0xd9 });
        gbc.writeMem(0x7f4e, { 0x97, 0xd2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7f50, gbc.sp());
        EXPECT(0xd297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02C4
        gbc.setState(0xaaf4, 0x8e22, 0xd220, 0x2fe0, 0xcd7d, 0xa3bf, 0x0, 0x0);
        gbc.writeMem(0x8e22, { 0x2a, 0xe6 });
        gbc.writeMem(0xaaf4, { 0xd9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8e24, gbc.sp());
        EXPECT(0xe62a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x8e22));
        EXPECT(0xe6, gbc.readMem(0x8e23));
        EXPECT(0xd9, gbc.readMem(0xaaf4));
        // D9 02C5
        gbc.setState(0x8420, 0x3ed6, 0x8e30, 0x5d06, 0x923a, 0x5287, 0x0, 0x0);
        gbc.writeMem(0x3ed6, { 0x59, 0x5e });
        gbc.writeMem(0x8420, { 0xd9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3ed8, gbc.sp());
        EXPECT(0x5e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8420));
        // D9 02C6
        gbc.setState(0xcd2b, 0xf4fe, 0x6090, 0xec90, 0x9092, 0x6171, 0x0, 0x1);
        gbc.writeMem(0xcd2b, { 0xd9 });
        gbc.writeMem(0xf4fe, { 0x30, 0xfd });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf500, gbc.sp());
        EXPECT(0xfd30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcd2b));
        EXPECT(0x30, gbc.readMem(0xf4fe));
        EXPECT(0xfd, gbc.readMem(0xf4ff));
        // D9 02C7
        gbc.setState(0x9699, 0xacdc, 0xf3a0, 0x7b4, 0x2224, 0xed88, 0x1, 0x1);
        gbc.writeMem(0x9699, { 0xd9 });
        gbc.writeMem(0xacdc, { 0x88, 0x23 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xacde, gbc.sp());
        EXPECT(0x2388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9699));
        EXPECT(0x88, gbc.readMem(0xacdc));
        EXPECT(0x23, gbc.readMem(0xacdd));
        // D9 02C8
        gbc.setState(0x304, 0x51fa, 0x34a0, 0xca40, 0xb93b, 0xd492, 0x1, 0x1);
        gbc.writeMem(0x304, { 0xd9 });
        gbc.writeMem(0x51fa, { 0x71, 0x7f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x51fc, gbc.sp());
        EXPECT(0x7f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02C9
        gbc.setState(0x429a, 0x58c7, 0x5270, 0xd23d, 0xb9b3, 0xb442, 0x1, 0x0);
        gbc.writeMem(0x429a, { 0xd9 });
        gbc.writeMem(0x58c7, { 0x4a, 0x91 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x58c9, gbc.sp());
        EXPECT(0x914a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 02CA
        gbc.setState(0xbff7, 0x892b, 0xd0b0, 0x2b94, 0x4844, 0x279c, 0x1, 0x0);
        gbc.writeMem(0x892b, { 0xb7, 0xf4 });
        gbc.writeMem(0xbff7, { 0xd9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x892d, gbc.sp());
        EXPECT(0xf4b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x892b));
        EXPECT(0xf4, gbc.readMem(0x892c));
        EXPECT(0xd9, gbc.readMem(0xbff7));
        // D9 02CB
        gbc.setState(0x4c9c, 0xe5f9, 0xd680, 0xbc28, 0x2ec6, 0x4102, 0x1, 0x0);
        gbc.writeMem(0x4c9c, { 0xd9 });
        gbc.writeMem(0xe5f9, { 0xbc, 0x8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe5fb, gbc.sp());
        EXPECT(0x8bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe5f9));
        EXPECT(0x8, gbc.readMem(0xe5fa));
        // D9 02CC
        gbc.setState(0xb273, 0xed62, 0x5330, 0xaece, 0xa60f, 0xae10, 0x1, 0x1);
        gbc.writeMem(0xb273, { 0xd9 });
        gbc.writeMem(0xed62, { 0x58, 0x19 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xed64, gbc.sp());
        EXPECT(0x1958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb273));
        EXPECT(0x58, gbc.readMem(0xed62));
        EXPECT(0x19, gbc.readMem(0xed63));
        // D9 02CF
        gbc.setState(0x6393, 0x15c2, 0x1430, 0x27cc, 0xe8bd, 0x840, 0x1, 0x1);
        gbc.writeMem(0x15c2, { 0x85, 0xb2 });
        gbc.writeMem(0x6393, { 0xd9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x15c4, gbc.sp());
        EXPECT(0xb285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 02D0
        gbc.setState(0xce4c, 0x99df, 0x8dc0, 0x1016, 0x3130, 0xc638, 0x1, 0x0);
        gbc.writeMem(0x99df, { 0x4e, 0x3a });
        gbc.writeMem(0xce4c, { 0xd9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x99e1, gbc.sp());
        EXPECT(0x3a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x99df));
        EXPECT(0x3a, gbc.readMem(0x99e0));
        EXPECT(0xd9, gbc.readMem(0xce4c));
        // D9 02D1
        gbc.setState(0x5d13, 0x47e2, 0xa0b0, 0x1a73, 0x5a03, 0x114, 0x1, 0x1);
        gbc.writeMem(0x47e2, { 0xc0, 0x45 });
        gbc.writeMem(0x5d13, { 0xd9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x47e4, gbc.sp());
        EXPECT(0x45c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 02D2
        gbc.setState(0x6bfd, 0x58c0, 0xf3b0, 0x5e3f, 0xb438, 0x455c, 0x0, 0x1);
        gbc.writeMem(0x58c0, { 0x83, 0x3b });
        gbc.writeMem(0x6bfd, { 0xd9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x58c2, gbc.sp());
        EXPECT(0x3b83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 02D3
        gbc.setState(0x2b3a, 0x96c4, 0x6e90, 0xcbd2, 0xf282, 0xf283, 0x1, 0x1);
        gbc.writeMem(0x2b3a, { 0xd9 });
        gbc.writeMem(0x96c4, { 0xe3, 0x14 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x96c6, gbc.sp());
        EXPECT(0x14e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x96c4));
        EXPECT(0x14, gbc.readMem(0x96c5));
        // D9 02D4
        gbc.setState(0x5112, 0x47f4, 0x6c30, 0xc81c, 0x164a, 0xa463, 0x0, 0x1);
        gbc.writeMem(0x47f4, { 0x62, 0xab });
        gbc.writeMem(0x5112, { 0xd9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x47f6, gbc.sp());
        EXPECT(0xab62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 02D5
        gbc.setState(0xecdf, 0x252e, 0x56e0, 0x4d62, 0x72f4, 0x23e2, 0x0, 0x0);
        gbc.writeMem(0x252e, { 0x89, 0x89 });
        gbc.writeMem(0xecdf, { 0xd9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2530, gbc.sp());
        EXPECT(0x8989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xecdf));
        // D9 02D6
        gbc.setState(0x7dba, 0x325f, 0x25e0, 0x47cd, 0x8467, 0x3ca6, 0x1, 0x0);
        gbc.writeMem(0x325f, { 0xc, 0xbd });
        gbc.writeMem(0x7dba, { 0xd9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3261, gbc.sp());
        EXPECT(0xbd0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02D8
        gbc.setState(0x7213, 0x639f, 0x9ec0, 0xa641, 0xc627, 0xb68a, 0x0, 0x0);
        gbc.writeMem(0x639f, { 0x71, 0x0 });
        gbc.writeMem(0x7213, { 0xd9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x63a1, gbc.sp());
        EXPECT(0x71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02D9
        gbc.setState(0x5274, 0x4819, 0x3cd0, 0xcb88, 0x1206, 0x250c, 0x1, 0x1);
        gbc.writeMem(0x4819, { 0x4e, 0xac });
        gbc.writeMem(0x5274, { 0xd9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x481b, gbc.sp());
        EXPECT(0xac4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 02DA
        gbc.setState(0xc84d, 0x443e, 0x4c20, 0x9a18, 0x8d65, 0xccc2, 0x1, 0x1);
        gbc.writeMem(0x443e, { 0x5f, 0xec });
        gbc.writeMem(0xc84d, { 0xd9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4440, gbc.sp());
        EXPECT(0xec5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc84d));
        // D9 02DB
        gbc.setState(0xc63a, 0xfd28, 0xa880, 0x675c, 0xa348, 0x9b73, 0x0, 0x1);
        gbc.writeMem(0xc63a, { 0xd9 });
        gbc.writeMem(0xfd28, { 0xe2, 0x93 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfd2a, gbc.sp());
        EXPECT(0x93e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc63a));
        EXPECT(0xe2, gbc.readMem(0xfd28));
        EXPECT(0x93, gbc.readMem(0xfd29));
        // D9 02DC
        gbc.setState(0x3dc7, 0x3b8b, 0x3120, 0x3628, 0x9713, 0xae0a, 0x0, 0x0);
        gbc.writeMem(0x3b8b, { 0x7b, 0xac });
        gbc.writeMem(0x3dc7, { 0xd9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3b8d, gbc.sp());
        EXPECT(0xac7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02DD
        gbc.setState(0x76ca, 0x17ce, 0xe980, 0x6a27, 0xd198, 0x5749, 0x1, 0x1);
        gbc.writeMem(0x17ce, { 0x7, 0xfb });
        gbc.writeMem(0x76ca, { 0xd9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x17d0, gbc.sp());
        EXPECT(0xfb07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02DE
        gbc.setState(0xe951, 0x2ae5, 0xab60, 0x6695, 0x6b33, 0xfcb1, 0x1, 0x1);
        gbc.writeMem(0x2ae5, { 0x6d, 0xf0 });
        gbc.writeMem(0xe951, { 0xd9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2ae7, gbc.sp());
        EXPECT(0xf06d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe951));
        // D9 02DF
        gbc.setState(0xddae, 0xf6ec, 0xf060, 0xfe85, 0x1a37, 0xbfe3, 0x0, 0x1);
        gbc.writeMem(0xddae, { 0xd9 });
        gbc.writeMem(0xf6ec, { 0xf, 0x98 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf6ee, gbc.sp());
        EXPECT(0x980f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xddae));
        EXPECT(0xf, gbc.readMem(0xf6ec));
        EXPECT(0x98, gbc.readMem(0xf6ed));
        // D9 02E0
        gbc.setState(0x8f67, 0xd6ad, 0xde20, 0xc4ce, 0x9a27, 0x3be0, 0x0, 0x0);
        gbc.writeMem(0x8f67, { 0xd9 });
        gbc.writeMem(0xd6ad, { 0x97, 0xd3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd6af, gbc.sp());
        EXPECT(0xd397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8f67));
        EXPECT(0x97, gbc.readMem(0xd6ad));
        EXPECT(0xd3, gbc.readMem(0xd6ae));
        // D9 02E1
        gbc.setState(0xe55e, 0x2c33, 0xcb70, 0x7f57, 0x142e, 0xb6b4, 0x0, 0x1);
        gbc.writeMem(0x2c33, { 0x59, 0x27 });
        gbc.writeMem(0xe55e, { 0xd9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2c35, gbc.sp());
        EXPECT(0x2759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe55e));
        // D9 02E2
        gbc.setState(0xe5bd, 0xe0af, 0xec20, 0xda2, 0xc9a5, 0xe88d, 0x1, 0x0);
        gbc.writeMem(0xe0af, { 0x78, 0xbb });
        gbc.writeMem(0xe5bd, { 0xd9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe0b1, gbc.sp());
        EXPECT(0xbb78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe0af));
        EXPECT(0xbb, gbc.readMem(0xe0b0));
        EXPECT(0xd9, gbc.readMem(0xe5bd));
        // D9 02E3
        gbc.setState(0x7b01, 0x99d5, 0xe070, 0x23e7, 0xdaf3, 0x1edc, 0x1, 0x0);
        gbc.writeMem(0x7b01, { 0xd9 });
        gbc.writeMem(0x99d5, { 0x54, 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x99d7, gbc.sp());
        EXPECT(0x2f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x99d5));
        EXPECT(0x2f, gbc.readMem(0x99d6));
        // D9 02E4
        gbc.setState(0xb005, 0xc634, 0x8580, 0x2e0e, 0xa33b, 0x4db9, 0x1, 0x1);
        gbc.writeMem(0xb005, { 0xd9 });
        gbc.writeMem(0xc634, { 0x9c, 0xe6 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc636, gbc.sp());
        EXPECT(0xe69c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb005));
        EXPECT(0x9c, gbc.readMem(0xc634));
        EXPECT(0xe6, gbc.readMem(0xc635));
        // D9 02E5
        gbc.setState(0x19f, 0xc9d2, 0xa280, 0xaaa0, 0x9167, 0xad77, 0x1, 0x0);
        gbc.writeMem(0x19f, { 0xd9 });
        gbc.writeMem(0xc9d2, { 0xd5, 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc9d4, gbc.sp());
        EXPECT(0xa2d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xc9d2));
        EXPECT(0xa2, gbc.readMem(0xc9d3));
        // D9 02E6
        gbc.setState(0xd923, 0xd367, 0x49a0, 0x2b87, 0xe1e0, 0xab16, 0x0, 0x0);
        gbc.writeMem(0xd367, { 0x6, 0xf4 });
        gbc.writeMem(0xd923, { 0xd9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd369, gbc.sp());
        EXPECT(0xf406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd367));
        EXPECT(0xf4, gbc.readMem(0xd368));
        EXPECT(0xd9, gbc.readMem(0xd923));
        // D9 02E7
        gbc.setState(0x6cd4, 0x3f95, 0x8120, 0xe966, 0x800d, 0xa344, 0x1, 0x0);
        gbc.writeMem(0x3f95, { 0x84, 0x0 });
        gbc.writeMem(0x6cd4, { 0xd9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3f97, gbc.sp());
        EXPECT(0x84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02E8
        gbc.setState(0xb6b9, 0xf2c5, 0x9b30, 0xbc1d, 0xdc0c, 0xc58a, 0x0, 0x1);
        gbc.writeMem(0xb6b9, { 0xd9 });
        gbc.writeMem(0xf2c5, { 0x73, 0x68 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf2c7, gbc.sp());
        EXPECT(0x6873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb6b9));
        EXPECT(0x73, gbc.readMem(0xf2c5));
        EXPECT(0x68, gbc.readMem(0xf2c6));
        // D9 02E9
        gbc.setState(0x4ccb, 0xf5f5, 0xa8b0, 0x56d6, 0xda61, 0xe8de, 0x1, 0x1);
        gbc.writeMem(0x4ccb, { 0xd9 });
        gbc.writeMem(0xf5f5, { 0xac, 0x59 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf5f7, gbc.sp());
        EXPECT(0x59ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xf5f5));
        EXPECT(0x59, gbc.readMem(0xf5f6));
        // D9 02EA
        gbc.setState(0x880b, 0xffd2, 0x920, 0x5eb0, 0x48e, 0xfdcb, 0x0, 0x0);
        gbc.writeMem(0x880b, { 0xd9 });
        gbc.writeMem(0xffd2, { 0x31, 0xbb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xffd4, gbc.sp());
        EXPECT(0xbb31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x880b));
        EXPECT(0x31, gbc.readMem(0xffd2));
        EXPECT(0xbb, gbc.readMem(0xffd3));
        // D9 02EB
        gbc.setState(0xc790, 0x433a, 0x61f0, 0x7bf, 0x6716, 0x1e02, 0x0, 0x1);
        gbc.writeMem(0x433a, { 0xa2, 0x57 });
        gbc.writeMem(0xc790, { 0xd9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x433c, gbc.sp());
        EXPECT(0x57a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc790));
        // D9 02EC
        gbc.setState(0x38bb, 0x3a8a, 0xdf00, 0x98bc, 0x9f73, 0xa16, 0x1, 0x1);
        gbc.writeMem(0x38bb, { 0xd9 });
        gbc.writeMem(0x3a8a, { 0x7, 0x3b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3a8c, gbc.sp());
        EXPECT(0x3b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02ED
        gbc.setState(0xd6c6, 0x85e9, 0x3f90, 0xde60, 0x2458, 0xfc55, 0x0, 0x0);
        gbc.writeMem(0x85e9, { 0x6e, 0xe0 });
        gbc.writeMem(0xd6c6, { 0xd9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x85eb, gbc.sp());
        EXPECT(0xe06e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x85e9));
        EXPECT(0xe0, gbc.readMem(0x85ea));
        EXPECT(0xd9, gbc.readMem(0xd6c6));
        // D9 02EE
        gbc.setState(0x7327, 0x7bf9, 0x46e0, 0xa15b, 0x4b3d, 0x8f90, 0x1, 0x1);
        gbc.writeMem(0x7327, { 0xd9 });
        gbc.writeMem(0x7bf9, { 0x36, 0x8a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7bfb, gbc.sp());
        EXPECT(0x8a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02EF
        gbc.setState(0x115d, 0xf92c, 0x2130, 0xf2bf, 0x9e76, 0xc00d, 0x0, 0x1);
        gbc.writeMem(0x115d, { 0xd9 });
        gbc.writeMem(0xf92c, { 0x11, 0x56 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf92e, gbc.sp());
        EXPECT(0x5611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xf92c));
        EXPECT(0x56, gbc.readMem(0xf92d));
        // D9 02F0
        gbc.setState(0x18d9, 0xa46c, 0x7990, 0x7f5e, 0xbc56, 0x280b, 0x0, 0x0);
        gbc.writeMem(0x18d9, { 0xd9 });
        gbc.writeMem(0xa46c, { 0x8e, 0xd5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa46e, gbc.sp());
        EXPECT(0xd58e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xa46c));
        EXPECT(0xd5, gbc.readMem(0xa46d));
        // D9 02F1
        gbc.setState(0x7053, 0x346d, 0x3420, 0x54c1, 0x6cdf, 0xffcf, 0x1, 0x0);
        gbc.writeMem(0x346d, { 0xfc, 0xc6 });
        gbc.writeMem(0x7053, { 0xd9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x346f, gbc.sp());
        EXPECT(0xc6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02F3
        gbc.setState(0x4f, 0x637, 0xa780, 0x2adb, 0x119a, 0x4c42, 0x1, 0x0);
        gbc.writeMem(0x4f, { 0xd9 });
        gbc.writeMem(0x637, { 0x5c, 0xc5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x639, gbc.sp());
        EXPECT(0xc55c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02F4
        gbc.setState(0xe8e8, 0x9ec6, 0xf580, 0x9a4d, 0x7ac5, 0xc39, 0x1, 0x0);
        gbc.writeMem(0x9ec6, { 0xcf, 0x6a });
        gbc.writeMem(0xe8e8, { 0xd9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9ec8, gbc.sp());
        EXPECT(0x6acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x9ec6));
        EXPECT(0x6a, gbc.readMem(0x9ec7));
        EXPECT(0xd9, gbc.readMem(0xe8e8));
        // D9 02F5
        gbc.setState(0x6977, 0xb2fa, 0xe350, 0x22f1, 0xa1a4, 0xd00, 0x0, 0x0);
        gbc.writeMem(0x6977, { 0xd9 });
        gbc.writeMem(0xb2fa, { 0x6f, 0x7b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb2fc, gbc.sp());
        EXPECT(0x7b6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xb2fa));
        EXPECT(0x7b, gbc.readMem(0xb2fb));
        // D9 02F6
        gbc.setState(0x7747, 0x1384, 0x4620, 0x4641, 0x59a8, 0x49a8, 0x1, 0x0);
        gbc.writeMem(0x1384, { 0x65, 0x98 });
        gbc.writeMem(0x7747, { 0xd9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1386, gbc.sp());
        EXPECT(0x9865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 02F7
        gbc.setState(0x57df, 0x24ef, 0xa570, 0x8b68, 0x4afc, 0xcd40, 0x0, 0x0);
        gbc.writeMem(0x24ef, { 0x79, 0xf2 });
        gbc.writeMem(0x57df, { 0xd9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x24f1, gbc.sp());
        EXPECT(0xf279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 02F8
        gbc.setState(0x3c89, 0x67a6, 0xaaf0, 0x74ff, 0x8423, 0xebfd, 0x0, 0x1);
        gbc.writeMem(0x3c89, { 0xd9 });
        gbc.writeMem(0x67a6, { 0x67, 0x24 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x67a8, gbc.sp());
        EXPECT(0x2467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 02FA
        gbc.setState(0xb55f, 0x8814, 0x7a80, 0x8f53, 0x42cb, 0x8bc5, 0x1, 0x0);
        gbc.writeMem(0x8814, { 0x4b, 0xfc });
        gbc.writeMem(0xb55f, { 0xd9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8816, gbc.sp());
        EXPECT(0xfc4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8814));
        EXPECT(0xfc, gbc.readMem(0x8815));
        EXPECT(0xd9, gbc.readMem(0xb55f));
        // D9 02FB
        gbc.setState(0x6ea5, 0xfe8b, 0x4090, 0xbbe2, 0x8588, 0x9549, 0x0, 0x0);
        gbc.writeMem(0x6ea5, { 0xd9 });
        gbc.writeMem(0xfe8b, { 0x39, 0x8f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfe8d, gbc.sp());
        EXPECT(0x8f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xfe8b));
        EXPECT(0x8f, gbc.readMem(0xfe8c));
        // D9 02FC
        gbc.setState(0x1fd3, 0x122c, 0xbfd0, 0x8634, 0x50f2, 0x88d6, 0x0, 0x1);
        gbc.writeMem(0x122c, { 0x7a, 0x5c });
        gbc.writeMem(0x1fd3, { 0xd9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x122e, gbc.sp());
        EXPECT(0x5c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 02FD
        gbc.setState(0x5872, 0x155a, 0xdef0, 0xb3f6, 0x4c68, 0x1fe2, 0x0, 0x0);
        gbc.writeMem(0x155a, { 0x41, 0x43 });
        gbc.writeMem(0x5872, { 0xd9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x155c, gbc.sp());
        EXPECT(0x4341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 02FE
        gbc.setState(0x34ca, 0x527b, 0x60d0, 0xea93, 0xd908, 0xadf4, 0x1, 0x1);
        gbc.writeMem(0x34ca, { 0xd9 });
        gbc.writeMem(0x527b, { 0xec, 0x44 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x527d, gbc.sp());
        EXPECT(0x44ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 02FF
        gbc.setState(0x7120, 0xe09e, 0xdf20, 0x8707, 0xfba, 0x14ee, 0x1, 0x1);
        gbc.writeMem(0x7120, { 0xd9 });
        gbc.writeMem(0xe09e, { 0x3c, 0x13 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe0a0, gbc.sp());
        EXPECT(0x133c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe09e));
        EXPECT(0x13, gbc.readMem(0xe09f));
        // D9 0300
        gbc.setState(0x51aa, 0xd312, 0xb30, 0x6211, 0xb305, 0x809b, 0x0, 0x1);
        gbc.writeMem(0x51aa, { 0xd9 });
        gbc.writeMem(0xd312, { 0x54, 0x2a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd314, gbc.sp());
        EXPECT(0x2a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xd312));
        EXPECT(0x2a, gbc.readMem(0xd313));
        // D9 0301
        gbc.setState(0xb5ab, 0x8623, 0x8f90, 0x6944, 0xe511, 0xd8b4, 0x1, 0x0);
        gbc.writeMem(0x8623, { 0xa6, 0x5f });
        gbc.writeMem(0xb5ab, { 0xd9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8625, gbc.sp());
        EXPECT(0x5fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8623));
        EXPECT(0x5f, gbc.readMem(0x8624));
        EXPECT(0xd9, gbc.readMem(0xb5ab));
        // D9 0302
        gbc.setState(0x42e1, 0xf20c, 0xd590, 0x1a49, 0x8643, 0xfcbd, 0x0, 0x0);
        gbc.writeMem(0x42e1, { 0xd9 });
        gbc.writeMem(0xf20c, { 0x28, 0x87 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf20e, gbc.sp());
        EXPECT(0x8728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xf20c));
        EXPECT(0x87, gbc.readMem(0xf20d));
        // D9 0303
        gbc.setState(0x586b, 0x5831, 0xf1b0, 0xb1e3, 0xef47, 0x4adc, 0x0, 0x0);
        gbc.writeMem(0x5831, { 0x8f, 0x27 });
        gbc.writeMem(0x586b, { 0xd9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5833, gbc.sp());
        EXPECT(0x278f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0304
        gbc.setState(0x442a, 0x169d, 0x21f0, 0xdf24, 0x9b2c, 0xe283, 0x0, 0x1);
        gbc.writeMem(0x169d, { 0xb0, 0x3c });
        gbc.writeMem(0x442a, { 0xd9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x169f, gbc.sp());
        EXPECT(0x3cb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0305
        gbc.setState(0x483a, 0x65e, 0x5ab0, 0x962c, 0xdfde, 0xc161, 0x0, 0x1);
        gbc.writeMem(0x65e, { 0x5c, 0x1f });
        gbc.writeMem(0x483a, { 0xd9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x660, gbc.sp());
        EXPECT(0x1f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0306
        gbc.setState(0xc218, 0x153, 0xff0, 0xcba4, 0x286f, 0x2a07, 0x1, 0x0);
        gbc.writeMem(0x153, { 0xe5, 0xbb });
        gbc.writeMem(0xc218, { 0xd9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x155, gbc.sp());
        EXPECT(0xbbe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc218));
        // D9 0307
        gbc.setState(0xbbab, 0x28ac, 0xbc30, 0xc85f, 0x8c11, 0xc84a, 0x0, 0x0);
        gbc.writeMem(0x28ac, { 0x4, 0xa7 });
        gbc.writeMem(0xbbab, { 0xd9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x28ae, gbc.sp());
        EXPECT(0xa704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbbab));
        // D9 0308
        gbc.setState(0x6082, 0xcf9c, 0x9ac0, 0xe0dc, 0xb62c, 0x8f94, 0x0, 0x0);
        gbc.writeMem(0x6082, { 0xd9 });
        gbc.writeMem(0xcf9c, { 0xa, 0x79 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcf9e, gbc.sp());
        EXPECT(0x790a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcf9c));
        EXPECT(0x79, gbc.readMem(0xcf9d));
        // D9 0309
        gbc.setState(0x20ec, 0xf015, 0x2890, 0xcdfc, 0xddf3, 0xc1bf, 0x1, 0x1);
        gbc.writeMem(0x20ec, { 0xd9 });
        gbc.writeMem(0xf015, { 0x1d, 0xe7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf017, gbc.sp());
        EXPECT(0xe71d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xf015));
        EXPECT(0xe7, gbc.readMem(0xf016));
        // D9 030A
        gbc.setState(0x8e87, 0x9568, 0x5050, 0xe5cb, 0x1bef, 0x20ff, 0x0, 0x0);
        gbc.writeMem(0x8e87, { 0xd9 });
        gbc.writeMem(0x9568, { 0x99, 0x3d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x956a, gbc.sp());
        EXPECT(0x3d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8e87));
        EXPECT(0x99, gbc.readMem(0x9568));
        EXPECT(0x3d, gbc.readMem(0x9569));
        // D9 030C
        gbc.setState(0xcd4d, 0xf889, 0x12b0, 0x3d02, 0xddd, 0x2ce4, 0x1, 0x1);
        gbc.writeMem(0xcd4d, { 0xd9 });
        gbc.writeMem(0xf889, { 0x7e, 0xff });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf88b, gbc.sp());
        EXPECT(0xff7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcd4d));
        EXPECT(0x7e, gbc.readMem(0xf889));
        EXPECT(0xff, gbc.readMem(0xf88a));
        // D9 030D
        gbc.setState(0x5b2f, 0xdd44, 0xbe0, 0x9504, 0x9b52, 0xf5a7, 0x0, 0x1);
        gbc.writeMem(0x5b2f, { 0xd9 });
        gbc.writeMem(0xdd44, { 0x8e, 0x6e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdd46, gbc.sp());
        EXPECT(0x6e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xdd44));
        EXPECT(0x6e, gbc.readMem(0xdd45));
        // D9 030E
        gbc.setState(0x3f63, 0x815c, 0xfa10, 0xd4c, 0xe3ff, 0xaabe, 0x1, 0x1);
        gbc.writeMem(0x3f63, { 0xd9 });
        gbc.writeMem(0x815c, { 0x65, 0x5a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x815e, gbc.sp());
        EXPECT(0x5a65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x815c));
        EXPECT(0x5a, gbc.readMem(0x815d));
        // D9 030F
        gbc.setState(0xa375, 0x7ad2, 0xfad0, 0xd571, 0x8030, 0xbbf3, 0x1, 0x1);
        gbc.writeMem(0x7ad2, { 0x7e, 0xb1 });
        gbc.writeMem(0xa375, { 0xd9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7ad4, gbc.sp());
        EXPECT(0xb17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa375));
        // D9 0310
        gbc.setState(0x9990, 0xe6ca, 0x82c0, 0xa5dd, 0x317a, 0x5c16, 0x1, 0x1);
        gbc.writeMem(0x9990, { 0xd9 });
        gbc.writeMem(0xe6ca, { 0x32, 0x96 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe6cc, gbc.sp());
        EXPECT(0x9632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9990));
        EXPECT(0x32, gbc.readMem(0xe6ca));
        EXPECT(0x96, gbc.readMem(0xe6cb));
        // D9 0311
        gbc.setState(0x213c, 0xcac5, 0xaf30, 0x2181, 0xf6b1, 0x7810, 0x1, 0x0);
        gbc.writeMem(0x213c, { 0xd9 });
        gbc.writeMem(0xcac5, { 0x9b, 0xd6 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcac7, gbc.sp());
        EXPECT(0xd69b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xcac5));
        EXPECT(0xd6, gbc.readMem(0xcac6));
        // D9 0312
        gbc.setState(0x69c6, 0xda0e, 0x5dd0, 0xc64f, 0xc93c, 0xc0a8, 0x1, 0x0);
        gbc.writeMem(0x69c6, { 0xd9 });
        gbc.writeMem(0xda0e, { 0x58, 0xb1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xda10, gbc.sp());
        EXPECT(0xb158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xda0e));
        EXPECT(0xb1, gbc.readMem(0xda0f));
        // D9 0313
        gbc.setState(0x8385, 0xdaba, 0x73b0, 0x2370, 0xae40, 0xf65f, 0x0, 0x1);
        gbc.writeMem(0x8385, { 0xd9 });
        gbc.writeMem(0xdaba, { 0x60, 0x24 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdabc, gbc.sp());
        EXPECT(0x2460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8385));
        EXPECT(0x60, gbc.readMem(0xdaba));
        EXPECT(0x24, gbc.readMem(0xdabb));
        // D9 0315
        gbc.setState(0xca70, 0xb673, 0x2a60, 0xe807, 0xcd8c, 0xd900, 0x1, 0x0);
        gbc.writeMem(0xb673, { 0xf3, 0xed });
        gbc.writeMem(0xca70, { 0xd9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb675, gbc.sp());
        EXPECT(0xedf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xb673));
        EXPECT(0xed, gbc.readMem(0xb674));
        EXPECT(0xd9, gbc.readMem(0xca70));
        // D9 0317
        gbc.setState(0xbbbd, 0x5d13, 0x7cd0, 0x73e2, 0x87c9, 0x4770, 0x1, 0x1);
        gbc.writeMem(0x5d13, { 0x83, 0xa });
        gbc.writeMem(0xbbbd, { 0xd9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5d15, gbc.sp());
        EXPECT(0xa83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbbbd));
        // D9 0318
        gbc.setState(0xe50, 0x3d09, 0x36d0, 0xc991, 0x50d2, 0xfbd0, 0x0, 0x0);
        gbc.writeMem(0xe50, { 0xd9 });
        gbc.writeMem(0x3d09, { 0xfa, 0x95 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3d0b, gbc.sp());
        EXPECT(0x95fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0319
        gbc.setState(0x57f, 0x5b34, 0x5470, 0x6f55, 0x226, 0xa035, 0x0, 0x0);
        gbc.writeMem(0x57f, { 0xd9 });
        gbc.writeMem(0x5b34, { 0x76, 0xf6 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5b36, gbc.sp());
        EXPECT(0xf676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 031A
        gbc.setState(0x6cce, 0x85ac, 0x1b20, 0x7a32, 0x27db, 0x9673, 0x1, 0x1);
        gbc.writeMem(0x6cce, { 0xd9 });
        gbc.writeMem(0x85ac, { 0xca, 0x25 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x85ae, gbc.sp());
        EXPECT(0x25ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x85ac));
        EXPECT(0x25, gbc.readMem(0x85ad));
        // D9 031B
        gbc.setState(0x2255, 0xfc89, 0xbcc0, 0xd4cc, 0xac6, 0x75ac, 0x0, 0x0);
        gbc.writeMem(0x2255, { 0xd9 });
        gbc.writeMem(0xfc89, { 0x14, 0x9b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfc8b, gbc.sp());
        EXPECT(0x9b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xfc89));
        EXPECT(0x9b, gbc.readMem(0xfc8a));
        // D9 031C
        gbc.setState(0x9ff6, 0x1fa6, 0xdca0, 0xdb12, 0x7f34, 0xfaec, 0x0, 0x0);
        gbc.writeMem(0x1fa6, { 0xef, 0xbf });
        gbc.writeMem(0x9ff6, { 0xd9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1fa8, gbc.sp());
        EXPECT(0xbfef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9ff6));
        // D9 031D
        gbc.setState(0x6f5e, 0xcdbf, 0x6a10, 0x3224, 0xab9b, 0x323b, 0x0, 0x0);
        gbc.writeMem(0x6f5e, { 0xd9 });
        gbc.writeMem(0xcdbf, { 0x6c, 0x7c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcdc1, gbc.sp());
        EXPECT(0x7c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xcdbf));
        EXPECT(0x7c, gbc.readMem(0xcdc0));
        // D9 031E
        gbc.setState(0xe5fc, 0xfb11, 0x150, 0x5d92, 0x1275, 0xedb5, 0x0, 0x1);
        gbc.writeMem(0xe5fc, { 0xd9 });
        gbc.writeMem(0xfb11, { 0xb1, 0x97 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xfb13, gbc.sp());
        EXPECT(0x97b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe5fc));
        EXPECT(0xb1, gbc.readMem(0xfb11));
        EXPECT(0x97, gbc.readMem(0xfb12));
        // D9 031F
        gbc.setState(0xdcb7, 0x3308, 0xe190, 0x8eac, 0x1250, 0x7e3c, 0x1, 0x0);
        gbc.writeMem(0x3308, { 0x7f, 0x1b });
        gbc.writeMem(0xdcb7, { 0xd9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x330a, gbc.sp());
        EXPECT(0x1b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xdcb7));
        // D9 0320
        gbc.setState(0x3be2, 0xb632, 0x4be0, 0xe83d, 0xf312, 0xd031, 0x1, 0x1);
        gbc.writeMem(0x3be2, { 0xd9 });
        gbc.writeMem(0xb632, { 0xfb, 0x2c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb634, gbc.sp());
        EXPECT(0x2cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xb632));
        EXPECT(0x2c, gbc.readMem(0xb633));
        // D9 0321
        gbc.setState(0x6431, 0xfa2f, 0xccd0, 0xa2dc, 0x82b6, 0x5db6, 0x0, 0x0);
        gbc.writeMem(0x6431, { 0xd9 });
        gbc.writeMem(0xfa2f, { 0xe2, 0xaf });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfa31, gbc.sp());
        EXPECT(0xafe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xfa2f));
        EXPECT(0xaf, gbc.readMem(0xfa30));
        // D9 0322
        gbc.setState(0x4c3b, 0xc501, 0xc630, 0xb312, 0xaf81, 0xaabd, 0x0, 0x0);
        gbc.writeMem(0x4c3b, { 0xd9 });
        gbc.writeMem(0xc501, { 0x65, 0x6b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc503, gbc.sp());
        EXPECT(0x6b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc501));
        EXPECT(0x6b, gbc.readMem(0xc502));
        // D9 0323
        gbc.setState(0x2594, 0xd1aa, 0xb7b0, 0xdc14, 0x7ea2, 0xc28d, 0x1, 0x0);
        gbc.writeMem(0x2594, { 0xd9 });
        gbc.writeMem(0xd1aa, { 0x84, 0xf5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd1ac, gbc.sp());
        EXPECT(0xf584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xd1aa));
        EXPECT(0xf5, gbc.readMem(0xd1ab));
        // D9 0324
        gbc.setState(0x41e2, 0x86d5, 0x30f0, 0xee5, 0x80f8, 0xbc7b, 0x1, 0x1);
        gbc.writeMem(0x41e2, { 0xd9 });
        gbc.writeMem(0x86d5, { 0x85, 0x1f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x86d7, gbc.sp());
        EXPECT(0x1f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x86d5));
        EXPECT(0x1f, gbc.readMem(0x86d6));
        // D9 0325
        gbc.setState(0xa02e, 0xea42, 0x68c0, 0xb222, 0xcf14, 0xb519, 0x0, 0x0);
        gbc.writeMem(0xa02e, { 0xd9 });
        gbc.writeMem(0xea42, { 0xe3, 0x57 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xea44, gbc.sp());
        EXPECT(0x57e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa02e));
        EXPECT(0xe3, gbc.readMem(0xea42));
        EXPECT(0x57, gbc.readMem(0xea43));
        // D9 0326
        gbc.setState(0xa463, 0xd2f4, 0xda80, 0xc52, 0x7e04, 0x6d1f, 0x0, 0x1);
        gbc.writeMem(0xa463, { 0xd9 });
        gbc.writeMem(0xd2f4, { 0x5c, 0x2f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd2f6, gbc.sp());
        EXPECT(0x2f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa463));
        EXPECT(0x5c, gbc.readMem(0xd2f4));
        EXPECT(0x2f, gbc.readMem(0xd2f5));
        // D9 0327
        gbc.setState(0x78ff, 0xe7fa, 0x1570, 0xabc, 0xc6fa, 0x1a20, 0x0, 0x1);
        gbc.writeMem(0x78ff, { 0xd9 });
        gbc.writeMem(0xe7fa, { 0x20, 0x5b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe7fc, gbc.sp());
        EXPECT(0x5b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe7fa));
        EXPECT(0x5b, gbc.readMem(0xe7fb));
        // D9 0328
        gbc.setState(0xdcdf, 0xdbd1, 0x8f20, 0x7c98, 0xd1e1, 0x501e, 0x1, 0x0);
        gbc.writeMem(0xdbd1, { 0x4e, 0x42 });
        gbc.writeMem(0xdcdf, { 0xd9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdbd3, gbc.sp());
        EXPECT(0x424e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xdbd1));
        EXPECT(0x42, gbc.readMem(0xdbd2));
        EXPECT(0xd9, gbc.readMem(0xdcdf));
        // D9 0329
        gbc.setState(0xa90b, 0x304a, 0x9000, 0x761f, 0xc356, 0x4801, 0x0, 0x0);
        gbc.writeMem(0x304a, { 0xf4, 0xa2 });
        gbc.writeMem(0xa90b, { 0xd9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x304c, gbc.sp());
        EXPECT(0xa2f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa90b));
        // D9 032A
        gbc.setState(0x703f, 0x953a, 0x36b0, 0xaea5, 0xab15, 0xdd84, 0x1, 0x1);
        gbc.writeMem(0x703f, { 0xd9 });
        gbc.writeMem(0x953a, { 0x53, 0x43 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x953c, gbc.sp());
        EXPECT(0x4353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x953a));
        EXPECT(0x43, gbc.readMem(0x953b));
        // D9 032B
        gbc.setState(0x1ed5, 0x88b5, 0x7bb0, 0xf050, 0x6319, 0x970d, 0x1, 0x1);
        gbc.writeMem(0x1ed5, { 0xd9 });
        gbc.writeMem(0x88b5, { 0x24, 0xbe });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x88b7, gbc.sp());
        EXPECT(0xbe24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x88b5));
        EXPECT(0xbe, gbc.readMem(0x88b6));
        // D9 032C
        gbc.setState(0x1a72, 0x9dac, 0xc3d0, 0x6b7c, 0x1fab, 0xfd87, 0x0, 0x1);
        gbc.writeMem(0x1a72, { 0xd9 });
        gbc.writeMem(0x9dac, { 0xdd, 0x97 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9dae, gbc.sp());
        EXPECT(0x97dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x9dac));
        EXPECT(0x97, gbc.readMem(0x9dad));
        // D9 032D
        gbc.setState(0x1f42, 0x7883, 0xfc70, 0x5ae6, 0xbbc2, 0x6f3b, 0x0, 0x0);
        gbc.writeMem(0x1f42, { 0xd9 });
        gbc.writeMem(0x7883, { 0x57, 0x8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7885, gbc.sp());
        EXPECT(0x857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 032E
        gbc.setState(0xa5a5, 0xf0d, 0x6320, 0xf513, 0x4806, 0xf059, 0x1, 0x0);
        gbc.writeMem(0xf0d, { 0x18, 0x2a });
        gbc.writeMem(0xa5a5, { 0xd9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf0f, gbc.sp());
        EXPECT(0x2a18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa5a5));
        // D9 032F
        gbc.setState(0x9acf, 0x5081, 0xff00, 0x7ed6, 0x52c5, 0x472f, 0x1, 0x0);
        gbc.writeMem(0x5081, { 0xb9, 0xc6 });
        gbc.writeMem(0x9acf, { 0xd9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5083, gbc.sp());
        EXPECT(0xc6b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9acf));
        // D9 0330
        gbc.setState(0x6d9b, 0xa5f5, 0xb780, 0x6475, 0x33f0, 0x8aff, 0x1, 0x0);
        gbc.writeMem(0x6d9b, { 0xd9 });
        gbc.writeMem(0xa5f5, { 0xbe, 0x9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa5f7, gbc.sp());
        EXPECT(0x9be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xa5f5));
        EXPECT(0x9, gbc.readMem(0xa5f6));
        // D9 0331
        gbc.setState(0x2d7d, 0x4422, 0x5c50, 0x77ca, 0x198e, 0xd624, 0x1, 0x0);
        gbc.writeMem(0x2d7d, { 0xd9 });
        gbc.writeMem(0x4422, { 0x82, 0x71 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4424, gbc.sp());
        EXPECT(0x7182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0332
        gbc.setState(0x4934, 0x29, 0x3ba0, 0xf6fa, 0xa6f4, 0xe965, 0x0, 0x1);
        gbc.writeMem(0x29, { 0xf0, 0xf9 });
        gbc.writeMem(0x4934, { 0xd9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2b, gbc.sp());
        EXPECT(0xf9f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0333
        gbc.setState(0xb2e3, 0x3db8, 0xebb0, 0xf688, 0x399c, 0x85d8, 0x0, 0x1);
        gbc.writeMem(0x3db8, { 0x4b, 0xb5 });
        gbc.writeMem(0xb2e3, { 0xd9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3dba, gbc.sp());
        EXPECT(0xb54b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb2e3));
        // D9 0334
        gbc.setState(0xb09, 0xde7b, 0xa1a0, 0x3407, 0xff04, 0x6592, 0x0, 0x0);
        gbc.writeMem(0xb09, { 0xd9 });
        gbc.writeMem(0xde7b, { 0xe8, 0xbe });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xde7d, gbc.sp());
        EXPECT(0xbee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xde7b));
        EXPECT(0xbe, gbc.readMem(0xde7c));
        // D9 0335
        gbc.setState(0x13b0, 0x5677, 0xd90, 0x9291, 0x25a4, 0x12f3, 0x0, 0x1);
        gbc.writeMem(0x13b0, { 0xd9 });
        gbc.writeMem(0x5677, { 0xfa, 0x78 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5679, gbc.sp());
        EXPECT(0x78fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0336
        gbc.setState(0x16b5, 0x20f6, 0xa720, 0x1765, 0xd202, 0xf2d2, 0x0, 0x0);
        gbc.writeMem(0x16b5, { 0xd9 });
        gbc.writeMem(0x20f6, { 0x3d, 0x9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x20f8, gbc.sp());
        EXPECT(0x93d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0337
        gbc.setState(0xd617, 0x9be, 0x6fa0, 0x9b6d, 0x7251, 0x5a90, 0x0, 0x0);
        gbc.writeMem(0x9be, { 0x2d, 0xe5 });
        gbc.writeMem(0xd617, { 0xd9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9c0, gbc.sp());
        EXPECT(0xe52d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd617));
        // D9 0338
        gbc.setState(0xc7f6, 0x4b0, 0xae60, 0xa43d, 0xc678, 0xbc44, 0x1, 0x0);
        gbc.writeMem(0x4b0, { 0xb5, 0x1a });
        gbc.writeMem(0xc7f6, { 0xd9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4b2, gbc.sp());
        EXPECT(0x1ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc7f6));
        // D9 033A
        gbc.setState(0x967a, 0x77b8, 0xee0, 0xa228, 0xa766, 0x158a, 0x0, 0x0);
        gbc.writeMem(0x77b8, { 0x75, 0x2a });
        gbc.writeMem(0x967a, { 0xd9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x77ba, gbc.sp());
        EXPECT(0x2a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x967a));
        // D9 033C
        gbc.setState(0x1316, 0xb538, 0x67b0, 0x6a89, 0xc468, 0x3fef, 0x0, 0x0);
        gbc.writeMem(0x1316, { 0xd9 });
        gbc.writeMem(0xb538, { 0xe5, 0x14 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb53a, gbc.sp());
        EXPECT(0x14e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xb538));
        EXPECT(0x14, gbc.readMem(0xb539));
        // D9 033E
        gbc.setState(0x9dab, 0x5dc2, 0x700, 0x5122, 0x3878, 0x596e, 0x1, 0x0);
        gbc.writeMem(0x5dc2, { 0x5a, 0x63 });
        gbc.writeMem(0x9dab, { 0xd9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5dc4, gbc.sp());
        EXPECT(0x635a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9dab));
        // D9 033F
        gbc.setState(0x43ab, 0xcf96, 0x75f0, 0x6904, 0xf204, 0xe1e7, 0x1, 0x0);
        gbc.writeMem(0x43ab, { 0xd9 });
        gbc.writeMem(0xcf96, { 0xab, 0x4b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcf98, gbc.sp());
        EXPECT(0x4bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xcf96));
        EXPECT(0x4b, gbc.readMem(0xcf97));
        // D9 0340
        gbc.setState(0xcb26, 0x747e, 0x1f90, 0x5086, 0xe5f2, 0xc7e6, 0x0, 0x0);
        gbc.writeMem(0x747e, { 0x55, 0x14 });
        gbc.writeMem(0xcb26, { 0xd9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7480, gbc.sp());
        EXPECT(0x1455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcb26));
        // D9 0341
        gbc.setState(0x1050, 0x6c50, 0xa90, 0x6e49, 0x2df5, 0x38, 0x1, 0x0);
        gbc.writeMem(0x1050, { 0xd9 });
        gbc.writeMem(0x6c50, { 0x28, 0x78 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6c52, gbc.sp());
        EXPECT(0x7828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0343
        gbc.setState(0x9d29, 0xd59, 0x7800, 0xd5ad, 0x4ddd, 0x4e92, 0x1, 0x0);
        gbc.writeMem(0xd59, { 0xc5, 0xec });
        gbc.writeMem(0x9d29, { 0xd9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd5b, gbc.sp());
        EXPECT(0xecc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9d29));
        // D9 0344
        gbc.setState(0x1135, 0xda3b, 0xd470, 0xca9e, 0x1d23, 0x49df, 0x1, 0x1);
        gbc.writeMem(0x1135, { 0xd9 });
        gbc.writeMem(0xda3b, { 0x10, 0x45 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xda3d, gbc.sp());
        EXPECT(0x4510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xda3b));
        EXPECT(0x45, gbc.readMem(0xda3c));
        // D9 0345
        gbc.setState(0x7b9d, 0xcef4, 0x2c50, 0x22e0, 0x4eab, 0x2e98, 0x1, 0x1);
        gbc.writeMem(0x7b9d, { 0xd9 });
        gbc.writeMem(0xcef4, { 0x88, 0xb7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcef6, gbc.sp());
        EXPECT(0xb788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcef4));
        EXPECT(0xb7, gbc.readMem(0xcef5));
        // D9 0346
        gbc.setState(0xdbc4, 0x3021, 0x95a0, 0xbf2f, 0xfc8d, 0xa499, 0x1, 0x1);
        gbc.writeMem(0x3021, { 0xd7, 0x2b });
        gbc.writeMem(0xdbc4, { 0xd9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3023, gbc.sp());
        EXPECT(0x2bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xdbc4));
        // D9 0347
        gbc.setState(0x4f84, 0x4113, 0xcbf0, 0xa896, 0xd034, 0xbef5, 0x1, 0x1);
        gbc.writeMem(0x4113, { 0xbd, 0xf1 });
        gbc.writeMem(0x4f84, { 0xd9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4115, gbc.sp());
        EXPECT(0xf1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0349
        gbc.setState(0x6df7, 0x4c64, 0x9230, 0x4e9b, 0x2b07, 0x5719, 0x1, 0x0);
        gbc.writeMem(0x4c64, { 0xde, 0xab });
        gbc.writeMem(0x6df7, { 0xd9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4c66, gbc.sp());
        EXPECT(0xabde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 034A
        gbc.setState(0xec83, 0x84aa, 0x3ca0, 0x53e3, 0xccf1, 0xe8f3, 0x0, 0x1);
        gbc.writeMem(0x84aa, { 0xe7, 0x46 });
        gbc.writeMem(0xec83, { 0xd9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x84ac, gbc.sp());
        EXPECT(0x46e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x84aa));
        EXPECT(0x46, gbc.readMem(0x84ab));
        EXPECT(0xd9, gbc.readMem(0xec83));
        // D9 034B
        gbc.setState(0x6a9c, 0xf84d, 0x4810, 0x2b16, 0x112e, 0x8a99, 0x1, 0x0);
        gbc.writeMem(0x6a9c, { 0xd9 });
        gbc.writeMem(0xf84d, { 0x47, 0x34 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf84f, gbc.sp());
        EXPECT(0x3447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xf84d));
        EXPECT(0x34, gbc.readMem(0xf84e));
        // D9 034C
        gbc.setState(0xecd4, 0x6ce9, 0x39b0, 0xe85e, 0xe16, 0xea25, 0x0, 0x0);
        gbc.writeMem(0x6ce9, { 0x40, 0xbd });
        gbc.writeMem(0xecd4, { 0xd9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6ceb, gbc.sp());
        EXPECT(0xbd40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xecd4));
        // D9 034D
        gbc.setState(0x17a1, 0xde05, 0xa050, 0xcf95, 0x4cec, 0x434c, 0x1, 0x1);
        gbc.writeMem(0x17a1, { 0xd9 });
        gbc.writeMem(0xde05, { 0x2f, 0x8f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xde07, gbc.sp());
        EXPECT(0x8f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xde05));
        EXPECT(0x8f, gbc.readMem(0xde06));
        // D9 034E
        gbc.setState(0x8d14, 0xae77, 0xe360, 0x4ccf, 0x3381, 0x2be3, 0x1, 0x1);
        gbc.writeMem(0x8d14, { 0xd9 });
        gbc.writeMem(0xae77, { 0x30, 0xf9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xae79, gbc.sp());
        EXPECT(0xf930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8d14));
        EXPECT(0x30, gbc.readMem(0xae77));
        EXPECT(0xf9, gbc.readMem(0xae78));
        // D9 034F
        gbc.setState(0x1853, 0xabb2, 0xd810, 0x195, 0x3cd4, 0x78c1, 0x1, 0x0);
        gbc.writeMem(0x1853, { 0xd9 });
        gbc.writeMem(0xabb2, { 0x17, 0xab });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xabb4, gbc.sp());
        EXPECT(0xab17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xabb2));
        EXPECT(0xab, gbc.readMem(0xabb3));
        // D9 0351
        gbc.setState(0x7043, 0xc1ce, 0xf760, 0xd542, 0xfe34, 0x99b1, 0x1, 0x1);
        gbc.writeMem(0x7043, { 0xd9 });
        gbc.writeMem(0xc1ce, { 0x57, 0x58 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc1d0, gbc.sp());
        EXPECT(0x5857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc1ce));
        EXPECT(0x58, gbc.readMem(0xc1cf));
        // D9 0352
        gbc.setState(0x7568, 0xd399, 0xa4c0, 0xd16c, 0x51f7, 0xa87e, 0x1, 0x1);
        gbc.writeMem(0x7568, { 0xd9 });
        gbc.writeMem(0xd399, { 0xa3, 0xa7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd39b, gbc.sp());
        EXPECT(0xa7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd399));
        EXPECT(0xa7, gbc.readMem(0xd39a));
        // D9 0353
        gbc.setState(0xad99, 0x1a20, 0xc750, 0x8ed, 0x5493, 0xefa1, 0x0, 0x0);
        gbc.writeMem(0x1a20, { 0x22, 0xfc });
        gbc.writeMem(0xad99, { 0xd9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1a22, gbc.sp());
        EXPECT(0xfc22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xad99));
        // D9 0354
        gbc.setState(0x18b9, 0xa52b, 0x4a20, 0xabe6, 0x756c, 0xda0d, 0x0, 0x1);
        gbc.writeMem(0x18b9, { 0xd9 });
        gbc.writeMem(0xa52b, { 0xd3, 0x13 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa52d, gbc.sp());
        EXPECT(0x13d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xa52b));
        EXPECT(0x13, gbc.readMem(0xa52c));
        // D9 0355
        gbc.setState(0x7b69, 0x954d, 0x2fe0, 0x5e2e, 0xd780, 0xe6cf, 0x1, 0x1);
        gbc.writeMem(0x7b69, { 0xd9 });
        gbc.writeMem(0x954d, { 0xe5, 0x4a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x954f, gbc.sp());
        EXPECT(0x4ae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x954d));
        EXPECT(0x4a, gbc.readMem(0x954e));
        // D9 0356
        gbc.setState(0x53d8, 0x5549, 0xe330, 0xcd07, 0x59c0, 0x1263, 0x1, 0x0);
        gbc.writeMem(0x53d8, { 0xd9 });
        gbc.writeMem(0x5549, { 0x18, 0xa1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x554b, gbc.sp());
        EXPECT(0xa118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0357
        gbc.setState(0xe54a, 0x5425, 0x21f0, 0xda56, 0xb2d4, 0x9d5e, 0x0, 0x0);
        gbc.writeMem(0x5425, { 0x78, 0xea });
        gbc.writeMem(0xe54a, { 0xd9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5427, gbc.sp());
        EXPECT(0xea78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe54a));
        // D9 0358
        gbc.setState(0x76d6, 0xb25, 0xca50, 0x36f7, 0x6656, 0x9d30, 0x1, 0x1);
        gbc.writeMem(0xb25, { 0x95, 0x3a });
        gbc.writeMem(0x76d6, { 0xd9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb27, gbc.sp());
        EXPECT(0x3a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0359
        gbc.setState(0x50c9, 0x372b, 0x8b0, 0xe2a4, 0x5ed, 0xb5aa, 0x0, 0x1);
        gbc.writeMem(0x372b, { 0xe6, 0x5c });
        gbc.writeMem(0x50c9, { 0xd9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x372d, gbc.sp());
        EXPECT(0x5ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 035A
        gbc.setState(0xd2fe, 0x3b97, 0x6c0, 0xc97e, 0x7d40, 0xa59d, 0x1, 0x1);
        gbc.writeMem(0x3b97, { 0x8, 0x11 });
        gbc.writeMem(0xd2fe, { 0xd9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3b99, gbc.sp());
        EXPECT(0x1108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd2fe));
        // D9 035B
        gbc.setState(0x4321, 0x329e, 0xd740, 0xa660, 0xe588, 0x81db, 0x0, 0x0);
        gbc.writeMem(0x329e, { 0xcd, 0xdc });
        gbc.writeMem(0x4321, { 0xd9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x32a0, gbc.sp());
        EXPECT(0xdccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 035C
        gbc.setState(0xe96, 0x7dff, 0x90f0, 0xdc56, 0x1f7e, 0x5d44, 0x0, 0x1);
        gbc.writeMem(0xe96, { 0xd9 });
        gbc.writeMem(0x7dff, { 0xd3, 0x8b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7e01, gbc.sp());
        EXPECT(0x8bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 035D
        gbc.setState(0x6b6e, 0x1269, 0xaa10, 0x1cc5, 0xe417, 0xb349, 0x0, 0x0);
        gbc.writeMem(0x1269, { 0xca, 0x33 });
        gbc.writeMem(0x6b6e, { 0xd9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x126b, gbc.sp());
        EXPECT(0x33ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 035E
        gbc.setState(0xd574, 0x5d3a, 0x39a0, 0x21ba, 0x4aa3, 0x3019, 0x1, 0x1);
        gbc.writeMem(0x5d3a, { 0x5c, 0x7 });
        gbc.writeMem(0xd574, { 0xd9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5d3c, gbc.sp());
        EXPECT(0x75c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd574));
        // D9 035F
        gbc.setState(0xcbd6, 0xfa15, 0xbc0, 0x6858, 0x3e9c, 0x8bfa, 0x1, 0x1);
        gbc.writeMem(0xcbd6, { 0xd9 });
        gbc.writeMem(0xfa15, { 0xa6, 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfa17, gbc.sp());
        EXPECT(0xa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcbd6));
        EXPECT(0xa6, gbc.readMem(0xfa15));
        EXPECT(0x0, gbc.readMem(0xfa16));
        // D9 0360
        gbc.setState(0x437f, 0x1c82, 0x4c60, 0x53d2, 0x2547, 0x55ed, 0x0, 0x1);
        gbc.writeMem(0x1c82, { 0x3b, 0xac });
        gbc.writeMem(0x437f, { 0xd9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1c84, gbc.sp());
        EXPECT(0xac3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0362
        gbc.setState(0x44d4, 0xce7f, 0x4c00, 0x214a, 0x15a2, 0x9f74, 0x0, 0x0);
        gbc.writeMem(0x44d4, { 0xd9 });
        gbc.writeMem(0xce7f, { 0x37, 0x92 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xce81, gbc.sp());
        EXPECT(0x9237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xce7f));
        EXPECT(0x92, gbc.readMem(0xce80));
        // D9 0363
        gbc.setState(0xa559, 0xa39c, 0xee0, 0xef6, 0xa6f3, 0xd356, 0x0, 0x0);
        gbc.writeMem(0xa39c, { 0x73, 0x97 });
        gbc.writeMem(0xa559, { 0xd9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa39e, gbc.sp());
        EXPECT(0x9773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa39c));
        EXPECT(0x97, gbc.readMem(0xa39d));
        EXPECT(0xd9, gbc.readMem(0xa559));
        // D9 0364
        gbc.setState(0xb7b3, 0x65f6, 0xc1e0, 0x574e, 0x5645, 0x9989, 0x0, 0x1);
        gbc.writeMem(0x65f6, { 0x27, 0x9f });
        gbc.writeMem(0xb7b3, { 0xd9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x65f8, gbc.sp());
        EXPECT(0x9f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb7b3));
        // D9 0365
        gbc.setState(0x54eb, 0x9867, 0x6eb0, 0x401b, 0x93df, 0x1e92, 0x1, 0x1);
        gbc.writeMem(0x54eb, { 0xd9 });
        gbc.writeMem(0x9867, { 0x69, 0xee });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9869, gbc.sp());
        EXPECT(0xee69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9867));
        EXPECT(0xee, gbc.readMem(0x9868));
        // D9 0366
        gbc.setState(0xa946, 0xdbc6, 0x4c90, 0x2d2f, 0x6e21, 0xe531, 0x0, 0x1);
        gbc.writeMem(0xa946, { 0xd9 });
        gbc.writeMem(0xdbc6, { 0x5a, 0x37 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdbc8, gbc.sp());
        EXPECT(0x375a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa946));
        EXPECT(0x5a, gbc.readMem(0xdbc6));
        EXPECT(0x37, gbc.readMem(0xdbc7));
        // D9 0367
        gbc.setState(0x34b5, 0x3b80, 0x2ce0, 0x8769, 0xbb5b, 0xe406, 0x1, 0x0);
        gbc.writeMem(0x34b5, { 0xd9 });
        gbc.writeMem(0x3b80, { 0x48, 0x42 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3b82, gbc.sp());
        EXPECT(0x4248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0368
        gbc.setState(0xbe41, 0x2636, 0xe330, 0x7dcb, 0xec05, 0xe212, 0x1, 0x1);
        gbc.writeMem(0x2636, { 0x9, 0x2f });
        gbc.writeMem(0xbe41, { 0xd9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2638, gbc.sp());
        EXPECT(0x2f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbe41));
        // D9 0369
        gbc.setState(0x6f72, 0x1ea5, 0x2d20, 0xa63a, 0x2f7b, 0x6788, 0x0, 0x0);
        gbc.writeMem(0x1ea5, { 0x90, 0xbc });
        gbc.writeMem(0x6f72, { 0xd9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1ea7, gbc.sp());
        EXPECT(0xbc90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 036A
        gbc.setState(0x8d29, 0x20c9, 0x99c0, 0x493, 0xdc3, 0x27d3, 0x0, 0x0);
        gbc.writeMem(0x20c9, { 0x3e, 0x6 });
        gbc.writeMem(0x8d29, { 0xd9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x20cb, gbc.sp());
        EXPECT(0x63e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8d29));
        // D9 036B
        gbc.setState(0x969e, 0x68e6, 0xd10, 0xd87a, 0x33ed, 0xf8e9, 0x1, 0x0);
        gbc.writeMem(0x68e6, { 0x11, 0xd5 });
        gbc.writeMem(0x969e, { 0xd9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x68e8, gbc.sp());
        EXPECT(0xd511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x969e));
        // D9 036C
        gbc.setState(0x9b94, 0xc91, 0x23e0, 0x341e, 0x8030, 0xfe42, 0x1, 0x0);
        gbc.writeMem(0xc91, { 0x19, 0x1a });
        gbc.writeMem(0x9b94, { 0xd9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc93, gbc.sp());
        EXPECT(0x1a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9b94));
        // D9 036D
        gbc.setState(0xb19b, 0x72b3, 0xf830, 0x3cd6, 0x6d0d, 0x7bf7, 0x1, 0x1);
        gbc.writeMem(0x72b3, { 0x96, 0x54 });
        gbc.writeMem(0xb19b, { 0xd9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x72b5, gbc.sp());
        EXPECT(0x5496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb19b));
        // D9 036E
        gbc.setState(0xc7d9, 0x9728, 0x5040, 0xc294, 0x2455, 0x8c6d, 0x1, 0x0);
        gbc.writeMem(0x9728, { 0x98, 0xc1 });
        gbc.writeMem(0xc7d9, { 0xd9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x972a, gbc.sp());
        EXPECT(0xc198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9728));
        EXPECT(0xc1, gbc.readMem(0x9729));
        EXPECT(0xd9, gbc.readMem(0xc7d9));
        // D9 036F
        gbc.setState(0xdce5, 0xb5a, 0xcca0, 0xb800, 0xfd6f, 0x3006, 0x0, 0x0);
        gbc.writeMem(0xb5a, { 0xe7, 0x8c });
        gbc.writeMem(0xdce5, { 0xd9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb5c, gbc.sp());
        EXPECT(0x8ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xdce5));
        // D9 0370
        gbc.setState(0x5aae, 0xe86a, 0x2f80, 0xa305, 0x43f1, 0x2e93, 0x1, 0x1);
        gbc.writeMem(0x5aae, { 0xd9 });
        gbc.writeMem(0xe86a, { 0x8d, 0x80 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe86c, gbc.sp());
        EXPECT(0x808d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe86a));
        EXPECT(0x80, gbc.readMem(0xe86b));
        // D9 0371
        gbc.setState(0x89c5, 0x829e, 0xc3a0, 0x4663, 0x28b7, 0xa88f, 0x0, 0x0);
        gbc.writeMem(0x829e, { 0xea, 0x87 });
        gbc.writeMem(0x89c5, { 0xd9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x82a0, gbc.sp());
        EXPECT(0x87ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x829e));
        EXPECT(0x87, gbc.readMem(0x829f));
        EXPECT(0xd9, gbc.readMem(0x89c5));
        // D9 0372
        gbc.setState(0x7073, 0x3e14, 0x3130, 0xc7d7, 0x6092, 0xd8a5, 0x0, 0x1);
        gbc.writeMem(0x3e14, { 0xd0, 0xfa });
        gbc.writeMem(0x7073, { 0xd9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3e16, gbc.sp());
        EXPECT(0xfad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0373
        gbc.setState(0xa5b1, 0xefb2, 0xe1b0, 0x69d, 0xf49b, 0xe3b7, 0x0, 0x0);
        gbc.writeMem(0xa5b1, { 0xd9 });
        gbc.writeMem(0xefb2, { 0x33, 0x83 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xefb4, gbc.sp());
        EXPECT(0x8333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa5b1));
        EXPECT(0x33, gbc.readMem(0xefb2));
        EXPECT(0x83, gbc.readMem(0xefb3));
        // D9 0374
        gbc.setState(0x1dbd, 0xa564, 0x6080, 0xb088, 0x97a3, 0x5644, 0x0, 0x0);
        gbc.writeMem(0x1dbd, { 0xd9 });
        gbc.writeMem(0xa564, { 0x79, 0xde });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa566, gbc.sp());
        EXPECT(0xde79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa564));
        EXPECT(0xde, gbc.readMem(0xa565));
        // D9 0375
        gbc.setState(0x3dbd, 0x5ca6, 0x9570, 0x3224, 0xa4b5, 0xb1c, 0x1, 0x1);
        gbc.writeMem(0x3dbd, { 0xd9 });
        gbc.writeMem(0x5ca6, { 0x89, 0x46 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5ca8, gbc.sp());
        EXPECT(0x4689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0376
        gbc.setState(0xccd7, 0x941a, 0xd750, 0x6735, 0xa3c2, 0xe9d1, 0x0, 0x0);
        gbc.writeMem(0x941a, { 0x92, 0xb8 });
        gbc.writeMem(0xccd7, { 0xd9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x941c, gbc.sp());
        EXPECT(0xb892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x941a));
        EXPECT(0xb8, gbc.readMem(0x941b));
        EXPECT(0xd9, gbc.readMem(0xccd7));
        // D9 0377
        gbc.setState(0x16ff, 0xff58, 0x9ad0, 0x31ef, 0x3899, 0x9300, 0x0, 0x1);
        gbc.writeMem(0x16ff, { 0xd9 });
        gbc.writeMem(0xff58, { 0x10, 0xda });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xff5a, gbc.sp());
        EXPECT(0xda10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xff58));
        EXPECT(0xda, gbc.readMem(0xff59));
        // D9 0379
        gbc.setState(0xa1d7, 0xd43, 0xbf50, 0x6047, 0x6ab6, 0x5176, 0x0, 0x0);
        gbc.writeMem(0xd43, { 0x4f, 0x32 });
        gbc.writeMem(0xa1d7, { 0xd9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd45, gbc.sp());
        EXPECT(0x324f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa1d7));
        // D9 037A
        gbc.setState(0xc9d7, 0xef4d, 0x2830, 0x308a, 0x3673, 0xd746, 0x1, 0x0);
        gbc.writeMem(0xc9d7, { 0xd9 });
        gbc.writeMem(0xef4d, { 0xce, 0x47 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xef4f, gbc.sp());
        EXPECT(0x47ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc9d7));
        EXPECT(0xce, gbc.readMem(0xef4d));
        EXPECT(0x47, gbc.readMem(0xef4e));
        // D9 037B
        gbc.setState(0x8002, 0xb0e0, 0x38c0, 0x994b, 0x3284, 0xb8ce, 0x0, 0x1);
        gbc.writeMem(0x8002, { 0xd9 });
        gbc.writeMem(0xb0e0, { 0x74, 0x30 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb0e2, gbc.sp());
        EXPECT(0x3074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8002));
        EXPECT(0x74, gbc.readMem(0xb0e0));
        EXPECT(0x30, gbc.readMem(0xb0e1));
        // D9 037C
        gbc.setState(0x48a2, 0xa5c4, 0xfd90, 0xb347, 0xb705, 0x4298, 0x0, 0x0);
        gbc.writeMem(0x48a2, { 0xd9 });
        gbc.writeMem(0xa5c4, { 0xb2, 0xf7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa5c6, gbc.sp());
        EXPECT(0xf7b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa5c4));
        EXPECT(0xf7, gbc.readMem(0xa5c5));
        // D9 037D
        gbc.setState(0x740d, 0x55d3, 0x3630, 0x5e27, 0x32d2, 0xeccb, 0x0, 0x1);
        gbc.writeMem(0x55d3, { 0x8d, 0xe0 });
        gbc.writeMem(0x740d, { 0xd9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x55d5, gbc.sp());
        EXPECT(0xe08d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 037E
        gbc.setState(0x282c, 0x1555, 0x6ee0, 0x4a07, 0xb8, 0x631c, 0x1, 0x0);
        gbc.writeMem(0x1555, { 0xf0, 0xdb });
        gbc.writeMem(0x282c, { 0xd9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1557, gbc.sp());
        EXPECT(0xdbf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0380
        gbc.setState(0x102b, 0x9d8, 0xb580, 0x2bdd, 0xff2e, 0x1d88, 0x1, 0x1);
        gbc.writeMem(0x9d8, { 0x1e, 0xad });
        gbc.writeMem(0x102b, { 0xd9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9da, gbc.sp());
        EXPECT(0xad1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0381
        gbc.setState(0xe49f, 0x84eb, 0xd8b0, 0x136d, 0x3be9, 0x2407, 0x1, 0x1);
        gbc.writeMem(0x84eb, { 0x6d, 0x26 });
        gbc.writeMem(0xe49f, { 0xd9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x84ed, gbc.sp());
        EXPECT(0x266d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x84eb));
        EXPECT(0x26, gbc.readMem(0x84ec));
        EXPECT(0xd9, gbc.readMem(0xe49f));
        // D9 0382
        gbc.setState(0x7a26, 0x73d, 0x3240, 0xc5d8, 0xc921, 0x4e96, 0x0, 0x0);
        gbc.writeMem(0x73d, { 0x7d, 0x49 });
        gbc.writeMem(0x7a26, { 0xd9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x73f, gbc.sp());
        EXPECT(0x497d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0383
        gbc.setState(0x9826, 0x7e8c, 0x9d20, 0x7e49, 0xcb6, 0x25e8, 0x1, 0x0);
        gbc.writeMem(0x7e8c, { 0xf, 0xf2 });
        gbc.writeMem(0x9826, { 0xd9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7e8e, gbc.sp());
        EXPECT(0xf20f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9826));
        // D9 0384
        gbc.setState(0x66b1, 0x422e, 0x5970, 0x8af4, 0xc611, 0x4219, 0x0, 0x1);
        gbc.writeMem(0x422e, { 0x50, 0xef });
        gbc.writeMem(0x66b1, { 0xd9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4230, gbc.sp());
        EXPECT(0xef50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 0385
        gbc.setState(0x422a, 0xe3f6, 0x12b0, 0x53eb, 0xb847, 0xd93d, 0x1, 0x0);
        gbc.writeMem(0x422a, { 0xd9 });
        gbc.writeMem(0xe3f6, { 0x7e, 0x20 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe3f8, gbc.sp());
        EXPECT(0x207e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe3f6));
        EXPECT(0x20, gbc.readMem(0xe3f7));
        // D9 0386
        gbc.setState(0x2d23, 0xa591, 0x1b0, 0xb84f, 0x3c56, 0x9ab8, 0x1, 0x1);
        gbc.writeMem(0x2d23, { 0xd9 });
        gbc.writeMem(0xa591, { 0x82, 0xe8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa593, gbc.sp());
        EXPECT(0xe882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa591));
        EXPECT(0xe8, gbc.readMem(0xa592));
        // D9 0387
        gbc.setState(0x9cb4, 0xa724, 0x8640, 0xe876, 0xf0c1, 0x2053, 0x1, 0x0);
        gbc.writeMem(0x9cb4, { 0xd9 });
        gbc.writeMem(0xa724, { 0xb6, 0xc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa726, gbc.sp());
        EXPECT(0xcb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9cb4));
        EXPECT(0xb6, gbc.readMem(0xa724));
        EXPECT(0xc, gbc.readMem(0xa725));
        // D9 0388
        gbc.setState(0xd0c0, 0x828b, 0x2920, 0xb5dc, 0x1e66, 0x6806, 0x1, 0x0);
        gbc.writeMem(0x828b, { 0xac, 0x4 });
        gbc.writeMem(0xd0c0, { 0xd9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x828d, gbc.sp());
        EXPECT(0x4ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x828b));
        EXPECT(0x4, gbc.readMem(0x828c));
        EXPECT(0xd9, gbc.readMem(0xd0c0));
        // D9 0389
        gbc.setState(0x731, 0xc485, 0xbb90, 0x6c99, 0x868e, 0x8ab6, 0x1, 0x1);
        gbc.writeMem(0x731, { 0xd9 });
        gbc.writeMem(0xc485, { 0x76, 0x9e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc487, gbc.sp());
        EXPECT(0x9e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc485));
        EXPECT(0x9e, gbc.readMem(0xc486));
        // D9 038A
        gbc.setState(0x3064, 0x30f0, 0x560, 0xe9ee, 0xa8b6, 0xa8fd, 0x1, 0x0);
        gbc.writeMem(0x3064, { 0xd9 });
        gbc.writeMem(0x30f0, { 0x99, 0x14 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x30f2, gbc.sp());
        EXPECT(0x1499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 038B
        gbc.setState(0xc532, 0x7922, 0xec10, 0xeae8, 0xcc, 0x4f51, 0x1, 0x0);
        gbc.writeMem(0x7922, { 0xe, 0xb2 });
        gbc.writeMem(0xc532, { 0xd9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7924, gbc.sp());
        EXPECT(0xb20e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc532));
        // D9 038C
        gbc.setState(0x92f9, 0xaac0, 0x1f10, 0x5faa, 0x830d, 0x531c, 0x0, 0x0);
        gbc.writeMem(0x92f9, { 0xd9 });
        gbc.writeMem(0xaac0, { 0xd9, 0x6c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xaac2, gbc.sp());
        EXPECT(0x6cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x92f9));
        EXPECT(0xd9, gbc.readMem(0xaac0));
        EXPECT(0x6c, gbc.readMem(0xaac1));
        // D9 038D
        gbc.setState(0x5b34, 0x2ce6, 0x5c00, 0x2595, 0x7a5f, 0xe229, 0x0, 0x1);
        gbc.writeMem(0x2ce6, { 0xf6, 0xe1 });
        gbc.writeMem(0x5b34, { 0xd9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2ce8, gbc.sp());
        EXPECT(0xe1f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 038E
        gbc.setState(0xc2d2, 0x1fcc, 0x9af0, 0x62f6, 0x3efa, 0x84b3, 0x0, 0x0);
        gbc.writeMem(0x1fcc, { 0x6e, 0xb0 });
        gbc.writeMem(0xc2d2, { 0xd9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1fce, gbc.sp());
        EXPECT(0xb06e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc2d2));
        // D9 038F
        gbc.setState(0x8b4, 0x1af6, 0x4ac0, 0x5c7f, 0xa79a, 0x5587, 0x0, 0x0);
        gbc.writeMem(0x8b4, { 0xd9 });
        gbc.writeMem(0x1af6, { 0x6b, 0xfc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1af8, gbc.sp());
        EXPECT(0xfc6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0390
        gbc.setState(0xdf59, 0x329a, 0x95a0, 0x2f46, 0x4dcf, 0x9557, 0x1, 0x1);
        gbc.writeMem(0x329a, { 0xd3, 0x43 });
        gbc.writeMem(0xdf59, { 0xd9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x329c, gbc.sp());
        EXPECT(0x43d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xdf59));
        // D9 0391
        gbc.setState(0x6e8f, 0x881b, 0x3f90, 0xa094, 0x158b, 0x87e0, 0x0, 0x0);
        gbc.writeMem(0x6e8f, { 0xd9 });
        gbc.writeMem(0x881b, { 0x36, 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x881d, gbc.sp());
        EXPECT(0xb236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x881b));
        EXPECT(0xb2, gbc.readMem(0x881c));
        // D9 0392
        gbc.setState(0xea3e, 0xd0a5, 0x7f00, 0x8292, 0x9f3d, 0x88e5, 0x0, 0x1);
        gbc.writeMem(0xd0a5, { 0x4e, 0x6a });
        gbc.writeMem(0xea3e, { 0xd9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd0a7, gbc.sp());
        EXPECT(0x6a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd0a5));
        EXPECT(0x6a, gbc.readMem(0xd0a6));
        EXPECT(0xd9, gbc.readMem(0xea3e));
        // D9 0393
        gbc.setState(0xe2ff, 0x555e, 0xdc90, 0xba8e, 0x6bfd, 0xed02, 0x1, 0x0);
        gbc.writeMem(0x555e, { 0xe, 0xed });
        gbc.writeMem(0xe2ff, { 0xd9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5560, gbc.sp());
        EXPECT(0xed0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe2ff));
        // D9 0394
        gbc.setState(0x9f92, 0x86f9, 0x54c0, 0xefdf, 0x8e2c, 0xfdb9, 0x0, 0x0);
        gbc.writeMem(0x86f9, { 0x0, 0x39 });
        gbc.writeMem(0x9f92, { 0xd9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x86fb, gbc.sp());
        EXPECT(0x3900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x86f9));
        EXPECT(0x39, gbc.readMem(0x86fa));
        EXPECT(0xd9, gbc.readMem(0x9f92));
        // D9 0395
        gbc.setState(0x4af4, 0xd4f5, 0x1010, 0x6c7c, 0xb053, 0x8529, 0x0, 0x1);
        gbc.writeMem(0x4af4, { 0xd9 });
        gbc.writeMem(0xd4f5, { 0xe8, 0x91 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd4f7, gbc.sp());
        EXPECT(0x91e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xd4f5));
        EXPECT(0x91, gbc.readMem(0xd4f6));
        // D9 0396
        gbc.setState(0x24b3, 0x7687, 0xb320, 0x712d, 0x7251, 0xe1d8, 0x1, 0x1);
        gbc.writeMem(0x24b3, { 0xd9 });
        gbc.writeMem(0x7687, { 0x65, 0xa1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7689, gbc.sp());
        EXPECT(0xa165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 0397
        gbc.setState(0xe935, 0x336e, 0x59d0, 0xd500, 0x91d, 0x7d9f, 0x0, 0x1);
        gbc.writeMem(0x336e, { 0x68, 0x20 });
        gbc.writeMem(0xe935, { 0xd9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3370, gbc.sp());
        EXPECT(0x2068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe935));
        // D9 0398
        gbc.setState(0x377, 0xd3b0, 0x7ce0, 0xd944, 0x87ca, 0x8e51, 0x1, 0x0);
        gbc.writeMem(0x377, { 0xd9 });
        gbc.writeMem(0xd3b0, { 0x26, 0x90 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd3b2, gbc.sp());
        EXPECT(0x9026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd3b0));
        EXPECT(0x90, gbc.readMem(0xd3b1));
        // D9 0399
        gbc.setState(0xbeed, 0xfefb, 0x1770, 0x728d, 0x29a0, 0x13d5, 0x0, 0x0);
        gbc.writeMem(0xbeed, { 0xd9 });
        gbc.writeMem(0xfefb, { 0xe8, 0x73 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfefd, gbc.sp());
        EXPECT(0x73e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbeed));
        EXPECT(0xe8, gbc.readMem(0xfefb));
        EXPECT(0x73, gbc.readMem(0xfefc));
        // D9 039A
        gbc.setState(0x6081, 0x793f, 0x61c0, 0x9141, 0xa8f1, 0xef7f, 0x1, 0x1);
        gbc.writeMem(0x6081, { 0xd9 });
        gbc.writeMem(0x793f, { 0xae, 0xe6 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7941, gbc.sp());
        EXPECT(0xe6ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 039B
        gbc.setState(0x41cb, 0x2d91, 0x9c00, 0xe5c0, 0x28b0, 0x2868, 0x0, 0x0);
        gbc.writeMem(0x2d91, { 0x53, 0xf4 });
        gbc.writeMem(0x41cb, { 0xd9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2d93, gbc.sp());
        EXPECT(0xf453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 039C
        gbc.setState(0x80d6, 0xb0a, 0xc1a0, 0x2282, 0xd4bb, 0xda60, 0x1, 0x0);
        gbc.writeMem(0xb0a, { 0xf, 0xc5 });
        gbc.writeMem(0x80d6, { 0xd9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb0c, gbc.sp());
        EXPECT(0xc50f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x80d6));
        // D9 039E
        gbc.setState(0x83c9, 0x4c6e, 0x29c0, 0xe9e, 0xd5a2, 0x13f9, 0x0, 0x0);
        gbc.writeMem(0x4c6e, { 0x6e, 0x34 });
        gbc.writeMem(0x83c9, { 0xd9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4c70, gbc.sp());
        EXPECT(0x346e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x83c9));
        // D9 039F
        gbc.setState(0xb286, 0x9fac, 0xe830, 0xc4c4, 0xefec, 0xdc94, 0x1, 0x0);
        gbc.writeMem(0x9fac, { 0x48, 0xd2 });
        gbc.writeMem(0xb286, { 0xd9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9fae, gbc.sp());
        EXPECT(0xd248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9fac));
        EXPECT(0xd2, gbc.readMem(0x9fad));
        EXPECT(0xd9, gbc.readMem(0xb286));
        // D9 03A0
        gbc.setState(0xe415, 0x95fa, 0xb590, 0x95b3, 0xaf0, 0x9538, 0x1, 0x1);
        gbc.writeMem(0x95fa, { 0xf5, 0xf });
        gbc.writeMem(0xe415, { 0xd9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x95fc, gbc.sp());
        EXPECT(0xff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x95fa));
        EXPECT(0xf, gbc.readMem(0x95fb));
        EXPECT(0xd9, gbc.readMem(0xe415));
        // D9 03A1
        gbc.setState(0xc4e6, 0xc71d, 0xb5f0, 0x2c81, 0x6fc4, 0x9393, 0x0, 0x0);
        gbc.writeMem(0xc4e6, { 0xd9 });
        gbc.writeMem(0xc71d, { 0x54, 0x5c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc71f, gbc.sp());
        EXPECT(0x5c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc4e6));
        EXPECT(0x54, gbc.readMem(0xc71d));
        EXPECT(0x5c, gbc.readMem(0xc71e));
        // D9 03A2
        gbc.setState(0x3042, 0x6afb, 0x4410, 0x16c3, 0xc17e, 0x6fd7, 0x1, 0x0);
        gbc.writeMem(0x3042, { 0xd9 });
        gbc.writeMem(0x6afb, { 0xfd, 0x27 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6afd, gbc.sp());
        EXPECT(0x27fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 03A3
        gbc.setState(0xd84b, 0x71de, 0x59d0, 0x753e, 0x7122, 0x49cb, 0x0, 0x1);
        gbc.writeMem(0x71de, { 0x92, 0x7d });
        gbc.writeMem(0xd84b, { 0xd9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x71e0, gbc.sp());
        EXPECT(0x7d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd84b));
        // D9 03A4
        gbc.setState(0xaf3b, 0xd72, 0x2110, 0x5ed6, 0xc601, 0x35e7, 0x1, 0x0);
        gbc.writeMem(0xd72, { 0xde, 0xa8 });
        gbc.writeMem(0xaf3b, { 0xd9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd74, gbc.sp());
        EXPECT(0xa8de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xaf3b));
        // D9 03A5
        gbc.setState(0x1312, 0x2d94, 0x9ed0, 0x9156, 0xd660, 0xb44a, 0x0, 0x0);
        gbc.writeMem(0x1312, { 0xd9 });
        gbc.writeMem(0x2d94, { 0xbd, 0x6f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2d96, gbc.sp());
        EXPECT(0x6fbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 03A6
        gbc.setState(0x8267, 0x67d5, 0x7290, 0xe190, 0x7732, 0xad78, 0x0, 0x1);
        gbc.writeMem(0x67d5, { 0xf6, 0x65 });
        gbc.writeMem(0x8267, { 0xd9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x67d7, gbc.sp());
        EXPECT(0x65f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8267));
        // D9 03A8
        gbc.setState(0x6c88, 0xfc87, 0xdf40, 0x19b2, 0xb170, 0xff7f, 0x0, 0x1);
        gbc.writeMem(0x6c88, { 0xd9 });
        gbc.writeMem(0xfc87, { 0x2c, 0x7d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfc89, gbc.sp());
        EXPECT(0x7d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xfc87));
        EXPECT(0x7d, gbc.readMem(0xfc88));
        // D9 03A9
        gbc.setState(0xbdf8, 0x756c, 0xbed0, 0x5916, 0x13ed, 0xae32, 0x1, 0x1);
        gbc.writeMem(0x756c, { 0xac, 0xfe });
        gbc.writeMem(0xbdf8, { 0xd9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x756e, gbc.sp());
        EXPECT(0xfeac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbdf8));
        // D9 03AA
        gbc.setState(0x7a1c, 0x499a, 0x6e60, 0x3f4c, 0x693b, 0x4ec1, 0x1, 0x0);
        gbc.writeMem(0x499a, { 0xa0, 0xf4 });
        gbc.writeMem(0x7a1c, { 0xd9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x499c, gbc.sp());
        EXPECT(0xf4a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 03AB
        gbc.setState(0xdc9f, 0x33ca, 0x8b00, 0x425e, 0xf264, 0x3dfb, 0x0, 0x1);
        gbc.writeMem(0x33ca, { 0xa4, 0xe });
        gbc.writeMem(0xdc9f, { 0xd9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x33cc, gbc.sp());
        EXPECT(0xea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xdc9f));
        // D9 03AC
        gbc.setState(0xc7de, 0x7a78, 0x22a0, 0xad0c, 0x649c, 0x7159, 0x0, 0x1);
        gbc.writeMem(0x7a78, { 0xee, 0xe0 });
        gbc.writeMem(0xc7de, { 0xd9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7a7a, gbc.sp());
        EXPECT(0xe0ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc7de));
        // D9 03AD
        gbc.setState(0xda34, 0x336a, 0xd60, 0x8cc, 0x33b3, 0xe807, 0x1, 0x0);
        gbc.writeMem(0x336a, { 0xc8, 0x45 });
        gbc.writeMem(0xda34, { 0xd9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x336c, gbc.sp());
        EXPECT(0x45c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xda34));
        // D9 03AE
        gbc.setState(0x14d1, 0x809c, 0x7100, 0xc41f, 0xbb78, 0x234d, 0x1, 0x0);
        gbc.writeMem(0x14d1, { 0xd9 });
        gbc.writeMem(0x809c, { 0x61, 0x5f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x809e, gbc.sp());
        EXPECT(0x5f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x809c));
        EXPECT(0x5f, gbc.readMem(0x809d));
        // D9 03AF
        gbc.setState(0x7778, 0xeeb, 0x36b0, 0x4ce7, 0xfca8, 0x1f9b, 0x0, 0x1);
        gbc.writeMem(0xeeb, { 0x7a, 0x94 });
        gbc.writeMem(0x7778, { 0xd9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xeed, gbc.sp());
        EXPECT(0x947a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 03B0
        gbc.setState(0x6eff, 0x7f65, 0xe7a0, 0x5ecf, 0x7cfa, 0xb7ac, 0x1, 0x1);
        gbc.writeMem(0x6eff, { 0xd9 });
        gbc.writeMem(0x7f65, { 0xb8, 0xe4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7f67, gbc.sp());
        EXPECT(0xe4b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 03B2
        gbc.setState(0x9ed8, 0xbd15, 0x28b0, 0x5f89, 0x8e5d, 0xbb6c, 0x0, 0x1);
        gbc.writeMem(0x9ed8, { 0xd9 });
        gbc.writeMem(0xbd15, { 0x37, 0x16 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbd17, gbc.sp());
        EXPECT(0x1637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9ed8));
        EXPECT(0x37, gbc.readMem(0xbd15));
        EXPECT(0x16, gbc.readMem(0xbd16));
        // D9 03B3
        gbc.setState(0x553e, 0xc30c, 0x9800, 0x9d56, 0xfdc6, 0x7886, 0x0, 0x1);
        gbc.writeMem(0x553e, { 0xd9 });
        gbc.writeMem(0xc30c, { 0x48, 0x6b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc30e, gbc.sp());
        EXPECT(0x6b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc30c));
        EXPECT(0x6b, gbc.readMem(0xc30d));
        // D9 03B4
        gbc.setState(0xd0e8, 0x3b11, 0xc3e0, 0x3083, 0x76a9, 0x392f, 0x1, 0x1);
        gbc.writeMem(0x3b11, { 0xed, 0x94 });
        gbc.writeMem(0xd0e8, { 0xd9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3b13, gbc.sp());
        EXPECT(0x94ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd0e8));
        // D9 03B5
        gbc.setState(0xabf6, 0x5de6, 0xcfb0, 0x95eb, 0x87e2, 0xc02d, 0x1, 0x0);
        gbc.writeMem(0x5de6, { 0x53, 0x4f });
        gbc.writeMem(0xabf6, { 0xd9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5de8, gbc.sp());
        EXPECT(0x4f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xabf6));
        // D9 03B6
        gbc.setState(0x5dba, 0xdd8a, 0x2f20, 0xb25d, 0xd02c, 0x321, 0x1, 0x1);
        gbc.writeMem(0x5dba, { 0xd9 });
        gbc.writeMem(0xdd8a, { 0xb3, 0x7a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdd8c, gbc.sp());
        EXPECT(0x7ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdd8a));
        EXPECT(0x7a, gbc.readMem(0xdd8b));
        // D9 03B7
        gbc.setState(0x88bd, 0x31f1, 0x1d20, 0x2f95, 0xda01, 0x2dc8, 0x1, 0x0);
        gbc.writeMem(0x31f1, { 0x37, 0x73 });
        gbc.writeMem(0x88bd, { 0xd9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x31f3, gbc.sp());
        EXPECT(0x7337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x88bd));
        // D9 03B8
        gbc.setState(0xab76, 0xe698, 0x7340, 0x9c51, 0xfe96, 0x50d1, 0x1, 0x1);
        gbc.writeMem(0xab76, { 0xd9 });
        gbc.writeMem(0xe698, { 0xf6, 0xab });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe69a, gbc.sp());
        EXPECT(0xabf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xab76));
        EXPECT(0xf6, gbc.readMem(0xe698));
        EXPECT(0xab, gbc.readMem(0xe699));
        // D9 03B9
        gbc.setState(0xba97, 0x7a62, 0x36b0, 0x9f18, 0x973f, 0xbcd3, 0x0, 0x1);
        gbc.writeMem(0x7a62, { 0x8e, 0x68 });
        gbc.writeMem(0xba97, { 0xd9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7a64, gbc.sp());
        EXPECT(0x688e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xba97));
        // D9 03BA
        gbc.setState(0xd59f, 0xf13d, 0x2aa0, 0x8e5b, 0x1cd0, 0xc581, 0x0, 0x1);
        gbc.writeMem(0xd59f, { 0xd9 });
        gbc.writeMem(0xf13d, { 0x94, 0x53 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf13f, gbc.sp());
        EXPECT(0x5394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd59f));
        EXPECT(0x94, gbc.readMem(0xf13d));
        EXPECT(0x53, gbc.readMem(0xf13e));
        // D9 03BB
        gbc.setState(0x1e11, 0x3c99, 0x34a0, 0xab36, 0xc7e1, 0x1955, 0x0, 0x1);
        gbc.writeMem(0x1e11, { 0xd9 });
        gbc.writeMem(0x3c99, { 0x81, 0x78 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3c9b, gbc.sp());
        EXPECT(0x7881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 03BC
        gbc.setState(0xdc5c, 0xc9d7, 0xafb0, 0xe56a, 0xfb2, 0x6def, 0x1, 0x0);
        gbc.writeMem(0xc9d7, { 0x1d, 0x4b });
        gbc.writeMem(0xdc5c, { 0xd9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc9d9, gbc.sp());
        EXPECT(0x4b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc9d7));
        EXPECT(0x4b, gbc.readMem(0xc9d8));
        EXPECT(0xd9, gbc.readMem(0xdc5c));
        // D9 03BD
        gbc.setState(0xbcc7, 0xe0ca, 0xf370, 0xc17a, 0xddac, 0xbb8a, 0x1, 0x1);
        gbc.writeMem(0xbcc7, { 0xd9 });
        gbc.writeMem(0xe0ca, { 0x35, 0x20 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe0cc, gbc.sp());
        EXPECT(0x2035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbcc7));
        EXPECT(0x35, gbc.readMem(0xe0ca));
        EXPECT(0x20, gbc.readMem(0xe0cb));
        // D9 03BE
        gbc.setState(0xe3d4, 0x3d07, 0xe530, 0x2dd9, 0x3fc6, 0xa67, 0x0, 0x0);
        gbc.writeMem(0x3d07, { 0x18, 0xfa });
        gbc.writeMem(0xe3d4, { 0xd9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3d09, gbc.sp());
        EXPECT(0xfa18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe3d4));
        // D9 03BF
        gbc.setState(0x8f55, 0xac43, 0x5b50, 0x437a, 0x7e04, 0x1f18, 0x0, 0x1);
        gbc.writeMem(0x8f55, { 0xd9 });
        gbc.writeMem(0xac43, { 0xaa, 0x62 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xac45, gbc.sp());
        EXPECT(0x62aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8f55));
        EXPECT(0xaa, gbc.readMem(0xac43));
        EXPECT(0x62, gbc.readMem(0xac44));
        // D9 03C0
        gbc.setState(0x5995, 0xf007, 0x61a0, 0xa324, 0x4761, 0xe3bd, 0x0, 0x1);
        gbc.writeMem(0x5995, { 0xd9 });
        gbc.writeMem(0xf007, { 0x6b, 0x2d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf009, gbc.sp());
        EXPECT(0x2d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xf007));
        EXPECT(0x2d, gbc.readMem(0xf008));
        // D9 03C1
        gbc.setState(0xb2b3, 0x40fa, 0xd1c0, 0x9161, 0x5924, 0x4ae2, 0x0, 0x0);
        gbc.writeMem(0x40fa, { 0xb9, 0xd4 });
        gbc.writeMem(0xb2b3, { 0xd9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x40fc, gbc.sp());
        EXPECT(0xd4b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb2b3));
        // D9 03C2
        gbc.setState(0xd7e7, 0xb4a6, 0xf630, 0x12a7, 0x6d40, 0x414d, 0x1, 0x1);
        gbc.writeMem(0xb4a6, { 0xe0, 0x79 });
        gbc.writeMem(0xd7e7, { 0xd9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb4a8, gbc.sp());
        EXPECT(0x79e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb4a6));
        EXPECT(0x79, gbc.readMem(0xb4a7));
        EXPECT(0xd9, gbc.readMem(0xd7e7));
        // D9 03C3
        gbc.setState(0x98f4, 0x96e9, 0x1fd0, 0x122f, 0xf34b, 0xfbc7, 0x1, 0x1);
        gbc.writeMem(0x96e9, { 0x4d, 0x27 });
        gbc.writeMem(0x98f4, { 0xd9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x96eb, gbc.sp());
        EXPECT(0x274d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x96e9));
        EXPECT(0x27, gbc.readMem(0x96ea));
        EXPECT(0xd9, gbc.readMem(0x98f4));
        // D9 03C4
        gbc.setState(0x215f, 0x4507, 0x2b20, 0xfd8f, 0x74df, 0xe9f6, 0x0, 0x0);
        gbc.writeMem(0x215f, { 0xd9 });
        gbc.writeMem(0x4507, { 0xd8, 0x9c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4509, gbc.sp());
        EXPECT(0x9cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 03C6
        gbc.setState(0x87e5, 0xd621, 0xed30, 0xa1d8, 0x6d4d, 0x5876, 0x0, 0x0);
        gbc.writeMem(0x87e5, { 0xd9 });
        gbc.writeMem(0xd621, { 0x99, 0xe8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd623, gbc.sp());
        EXPECT(0xe899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x87e5));
        EXPECT(0x99, gbc.readMem(0xd621));
        EXPECT(0xe8, gbc.readMem(0xd622));
        // D9 03C7
        gbc.setState(0x364, 0x45f4, 0x81e0, 0xa496, 0xaba5, 0xd5a, 0x0, 0x0);
        gbc.writeMem(0x364, { 0xd9 });
        gbc.writeMem(0x45f4, { 0x3c, 0x5b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x45f6, gbc.sp());
        EXPECT(0x5b3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 03C8
        gbc.setState(0xe879, 0xa5c2, 0xe590, 0x273e, 0xefed, 0x919f, 0x1, 0x0);
        gbc.writeMem(0xa5c2, { 0x79, 0x3d });
        gbc.writeMem(0xe879, { 0xd9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa5c4, gbc.sp());
        EXPECT(0x3d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa5c2));
        EXPECT(0x3d, gbc.readMem(0xa5c3));
        EXPECT(0xd9, gbc.readMem(0xe879));
        // D9 03C9
        gbc.setState(0x153f, 0x8697, 0x39d0, 0xa520, 0x5c3e, 0xe6ae, 0x1, 0x0);
        gbc.writeMem(0x153f, { 0xd9 });
        gbc.writeMem(0x8697, { 0x41, 0xf0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8699, gbc.sp());
        EXPECT(0xf041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0x8697));
        EXPECT(0xf0, gbc.readMem(0x8698));
        // D9 03CA
        gbc.setState(0x576, 0xdff7, 0x3400, 0x289f, 0xb361, 0x2ae2, 0x0, 0x1);
        gbc.writeMem(0x576, { 0xd9 });
        gbc.writeMem(0xdff7, { 0x21, 0x9a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdff9, gbc.sp());
        EXPECT(0x9a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdff7));
        EXPECT(0x9a, gbc.readMem(0xdff8));
        // D9 03CB
        gbc.setState(0xc894, 0xf93f, 0xbdb0, 0xc2fd, 0xb0b7, 0xa9b8, 0x0, 0x0);
        gbc.writeMem(0xc894, { 0xd9 });
        gbc.writeMem(0xf93f, { 0x25, 0x6a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf941, gbc.sp());
        EXPECT(0x6a25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc894));
        EXPECT(0x25, gbc.readMem(0xf93f));
        EXPECT(0x6a, gbc.readMem(0xf940));
        // D9 03CC
        gbc.setState(0x1ce7, 0x339d, 0x5a40, 0x1e32, 0xc0c6, 0x1015, 0x1, 0x0);
        gbc.writeMem(0x1ce7, { 0xd9 });
        gbc.writeMem(0x339d, { 0xa4, 0x2a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x339f, gbc.sp());
        EXPECT(0x2aa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 03CD
        gbc.setState(0x5cfa, 0x9da6, 0xfab0, 0x1f44, 0x49e5, 0x1d5a, 0x1, 0x0);
        gbc.writeMem(0x5cfa, { 0xd9 });
        gbc.writeMem(0x9da6, { 0x3a, 0x43 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9da8, gbc.sp());
        EXPECT(0x433a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x9da6));
        EXPECT(0x43, gbc.readMem(0x9da7));
        // D9 03CE
        gbc.setState(0xbe13, 0x8b77, 0x7900, 0x5715, 0x9a5a, 0xc1f6, 0x1, 0x0);
        gbc.writeMem(0x8b77, { 0xd9, 0x57 });
        gbc.writeMem(0xbe13, { 0xd9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8b79, gbc.sp());
        EXPECT(0x57d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8b77));
        EXPECT(0x57, gbc.readMem(0x8b78));
        EXPECT(0xd9, gbc.readMem(0xbe13));
        // D9 03CF
        gbc.setState(0x2748, 0xc805, 0xc660, 0x4872, 0xf7e4, 0x483e, 0x0, 0x0);
        gbc.writeMem(0x2748, { 0xd9 });
        gbc.writeMem(0xc805, { 0x40, 0xa4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc807, gbc.sp());
        EXPECT(0xa440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc805));
        EXPECT(0xa4, gbc.readMem(0xc806));
        // D9 03D0
        gbc.setState(0x6acd, 0xf560, 0x2490, 0xe3cc, 0xab2b, 0xb293, 0x1, 0x0);
        gbc.writeMem(0x6acd, { 0xd9 });
        gbc.writeMem(0xf560, { 0x22, 0x1c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf562, gbc.sp());
        EXPECT(0x1c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xf560));
        EXPECT(0x1c, gbc.readMem(0xf561));
        // D9 03D2
        gbc.setState(0x33e, 0xa03, 0xf5e0, 0xa7c2, 0xf9b6, 0x270e, 0x0, 0x1);
        gbc.writeMem(0x33e, { 0xd9 });
        gbc.writeMem(0xa03, { 0x6c, 0x75 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa05, gbc.sp());
        EXPECT(0x756c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 03D3
        gbc.setState(0x8a28, 0x5cce, 0x2ef0, 0xdfdb, 0x3416, 0xf65d, 0x0, 0x0);
        gbc.writeMem(0x5cce, { 0xdc, 0x6e });
        gbc.writeMem(0x8a28, { 0xd9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5cd0, gbc.sp());
        EXPECT(0x6edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8a28));
        // D9 03D4
        gbc.setState(0x5bb2, 0x4044, 0xff40, 0x9e73, 0x2d6a, 0xbb3f, 0x1, 0x1);
        gbc.writeMem(0x4044, { 0xc7, 0xde });
        gbc.writeMem(0x5bb2, { 0xd9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4046, gbc.sp());
        EXPECT(0xdec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D9 03D5
        gbc.setState(0x128, 0x9d9b, 0x4570, 0x71ec, 0xebe6, 0x63d, 0x0, 0x0);
        gbc.writeMem(0x128, { 0xd9 });
        gbc.writeMem(0x9d9b, { 0xa7, 0xaf });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9d9d, gbc.sp());
        EXPECT(0xafa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9d9b));
        EXPECT(0xaf, gbc.readMem(0x9d9c));
        // D9 03D6
        gbc.setState(0x8259, 0xeb88, 0xdb40, 0xac79, 0x6b2f, 0xbeeb, 0x1, 0x1);
        gbc.writeMem(0x8259, { 0xd9 });
        gbc.writeMem(0xeb88, { 0xdd, 0xf2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xeb8a, gbc.sp());
        EXPECT(0xf2dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8259));
        EXPECT(0xdd, gbc.readMem(0xeb88));
        EXPECT(0xf2, gbc.readMem(0xeb89));
        // D9 03D7
        gbc.setState(0x860a, 0xe406, 0xc820, 0x69e4, 0xcae7, 0x3cc0, 0x0, 0x0);
        gbc.writeMem(0x860a, { 0xd9 });
        gbc.writeMem(0xe406, { 0xf8, 0x9a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe408, gbc.sp());
        EXPECT(0x9af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x860a));
        EXPECT(0xf8, gbc.readMem(0xe406));
        EXPECT(0x9a, gbc.readMem(0xe407));
        // D9 03D8
        gbc.setState(0x5018, 0xa815, 0x6980, 0x85e4, 0xc4c2, 0x2032, 0x0, 0x0);
        gbc.writeMem(0x5018, { 0xd9 });
        gbc.writeMem(0xa815, { 0xf2, 0x5e });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa817, gbc.sp());
        EXPECT(0x5ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xa815));
        EXPECT(0x5e, gbc.readMem(0xa816));
        // D9 03D9
        gbc.setState(0xcc93, 0x1ac, 0xcff0, 0x4359, 0x7eac, 0x2710, 0x1, 0x1);
        gbc.writeMem(0x1ac, { 0xea, 0x2e });
        gbc.writeMem(0xcc93, { 0xd9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1ae, gbc.sp());
        EXPECT(0x2eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcc93));
        // D9 03DA
        gbc.setState(0x8dda, 0xa19e, 0xb790, 0xc4ae, 0xf0dd, 0x733c, 0x1, 0x0);
        gbc.writeMem(0x8dda, { 0xd9 });
        gbc.writeMem(0xa19e, { 0xea, 0xa3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa1a0, gbc.sp());
        EXPECT(0xa3ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8dda));
        EXPECT(0xea, gbc.readMem(0xa19e));
        EXPECT(0xa3, gbc.readMem(0xa19f));
        // D9 03DB
        gbc.setState(0x875a, 0x310e, 0xb220, 0x130d, 0xe57e, 0xa1ca, 0x1, 0x0);
        gbc.writeMem(0x310e, { 0x31, 0x52 });
        gbc.writeMem(0x875a, { 0xd9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3110, gbc.sp());
        EXPECT(0x5231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x875a));
        // D9 03DC
        gbc.setState(0x5827, 0x3797, 0x5610, 0x285b, 0x21ff, 0xfa4, 0x1, 0x1);
        gbc.writeMem(0x3797, { 0x1c, 0xea });
        gbc.writeMem(0x5827, { 0xd9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3799, gbc.sp());
        EXPECT(0xea1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 03DD
        gbc.setState(0x53f7, 0x52e8, 0xb70, 0x3e7a, 0x3031, 0xbada, 0x1, 0x0);
        gbc.writeMem(0x52e8, { 0xf3, 0x28 });
        gbc.writeMem(0x53f7, { 0xd9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x52ea, gbc.sp());
        EXPECT(0x28f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D9 03DF
        gbc.setState(0xa024, 0xdfe9, 0x3300, 0xa128, 0x8308, 0xe6db, 0x1, 0x1);
        gbc.writeMem(0xa024, { 0xd9 });
        gbc.writeMem(0xdfe9, { 0x1f, 0x37 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xdfeb, gbc.sp());
        EXPECT(0x371f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa024));
        EXPECT(0x1f, gbc.readMem(0xdfe9));
        EXPECT(0x37, gbc.readMem(0xdfea));
        // D9 03E0
        gbc.setState(0xd7f1, 0x9578, 0xce10, 0xa23a, 0xf157, 0xdfaa, 0x1, 0x0);
        gbc.writeMem(0x9578, { 0xc4, 0xa });
        gbc.writeMem(0xd7f1, { 0xd9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x957a, gbc.sp());
        EXPECT(0xac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x9578));
        EXPECT(0xa, gbc.readMem(0x9579));
        EXPECT(0xd9, gbc.readMem(0xd7f1));
        // D9 03E1
        gbc.setState(0xc2db, 0x7c3d, 0xf4b0, 0xf8b9, 0xc14f, 0x1867, 0x0, 0x0);
        gbc.writeMem(0x7c3d, { 0xa7, 0xa6 });
        gbc.writeMem(0xc2db, { 0xd9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7c3f, gbc.sp());
        EXPECT(0xa6a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc2db));
        // D9 03E2
        gbc.setState(0x4ecd, 0xc875, 0x7df0, 0xee05, 0x29c6, 0x3440, 0x1, 0x0);
        gbc.writeMem(0x4ecd, { 0xd9 });
        gbc.writeMem(0xc875, { 0x73, 0x92 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc877, gbc.sp());
        EXPECT(0x9273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xc875));
        EXPECT(0x92, gbc.readMem(0xc876));
        // D9 03E3
        gbc.setState(0x4376, 0x9aaf, 0xcd90, 0x690, 0x32ed, 0xc8f4, 0x1, 0x0);
        gbc.writeMem(0x4376, { 0xd9 });
        gbc.writeMem(0x9aaf, { 0x5f, 0x2d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9ab1, gbc.sp());
        EXPECT(0x2d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x9aaf));
        EXPECT(0x2d, gbc.readMem(0x9ab0));
        // D9 03E4
        gbc.setState(0x1bb3, 0xb3ed, 0x5310, 0xafd2, 0x840, 0xbacc, 0x1, 0x1);
        gbc.writeMem(0x1bb3, { 0xd9 });
        gbc.writeMem(0xb3ed, { 0x44, 0x2d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb3ef, gbc.sp());
        EXPECT(0x2d44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb3ed));
        EXPECT(0x2d, gbc.readMem(0xb3ee));
        // D9 03E5
        gbc.setState(0xb5e6, 0x7c4, 0xfdc0, 0xf3f2, 0xe4d5, 0xaae2, 0x0, 0x0);
        gbc.writeMem(0x7c4, { 0x91, 0xd9 });
        gbc.writeMem(0xb5e6, { 0xd9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7c6, gbc.sp());
        EXPECT(0xd991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb5e6));
        // D9 03E6
        gbc.setState(0x90be, 0xe1d, 0x9d40, 0xc0ba, 0xd9e2, 0xcb34, 0x1, 0x0);
        gbc.writeMem(0xe1d, { 0xa5, 0x9d });
        gbc.writeMem(0x90be, { 0xd9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe1f, gbc.sp());
        EXPECT(0x9da5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x90be));
        // D9 03E7
        gbc.setState(0xd03d, 0xd931, 0x64f0, 0xb475, 0x4045, 0xa317, 0x0, 0x0);
        gbc.writeMem(0xd03d, { 0xd9 });
        gbc.writeMem(0xd931, { 0xc9, 0x4b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd933, gbc.sp());
        EXPECT(0x4bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd03d));
        EXPECT(0xc9, gbc.readMem(0xd931));
        EXPECT(0x4b, gbc.readMem(0xd932));
    }
