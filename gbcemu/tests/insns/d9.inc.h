    TEST(gbcemu, opcode_d9) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // D9 0000
        gbc.setState(0x22ec, 0x92f0, 0x1fe0, 0x5a9e, 0x882b, 0x5e8a, 0x1, 0x1);
        gbc.writeMem(0x22ec, { 0xd9 });
        gbc.writeMem(0x92f0, { 0x7f, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x92f2);
        EXPECT(gbc.pc(), 0x247f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92f0), 0x7f);
        EXPECT(gbc.readMem(0x92f1), 0x24);
        // D9 0001
        gbc.setState(0x8e49, 0xacdb, 0x22f0, 0x6680, 0xb1dd, 0xaa96, 0x1, 0x1);
        gbc.writeMem(0x8e49, { 0xd9 });
        gbc.writeMem(0xacdb, { 0x8b, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xacdd);
        EXPECT(gbc.pc(), 0x888b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e49), 0xd9);
        EXPECT(gbc.readMem(0xacdb), 0x8b);
        EXPECT(gbc.readMem(0xacdc), 0x88);
        // D9 0002
        gbc.setState(0x1b78, 0xee80, 0xf310, 0x3b45, 0xa21d, 0x6ce3, 0x1, 0x1);
        gbc.writeMem(0x1b78, { 0xd9 });
        gbc.writeMem(0xee80, { 0x30, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xee82);
        EXPECT(gbc.pc(), 0xd030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee80), 0x30);
        EXPECT(gbc.readMem(0xee81), 0xd0);
        // D9 0003
        gbc.setState(0xe21a, 0x6ddd, 0xcc40, 0x73a9, 0x627a, 0x2c3b, 0x1, 0x1);
        gbc.writeMem(0x6ddd, { 0xda, 0xbb });
        gbc.writeMem(0xe21a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6ddf);
        EXPECT(gbc.pc(), 0xbbda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe21a), 0xd9);
        // D9 0004
        gbc.setState(0xd442, 0x8b1b, 0xc0c0, 0x82e3, 0x87de, 0x25f6, 0x0, 0x0);
        gbc.writeMem(0x8b1b, { 0x88, 0x43 });
        gbc.writeMem(0xd442, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8b1d);
        EXPECT(gbc.pc(), 0x4388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b1b), 0x88);
        EXPECT(gbc.readMem(0x8b1c), 0x43);
        EXPECT(gbc.readMem(0xd442), 0xd9);
        // D9 0005
        gbc.setState(0x8f2d, 0xe09e, 0xc760, 0xf28b, 0x2f49, 0xa191, 0x1, 0x1);
        gbc.writeMem(0x8f2d, { 0xd9 });
        gbc.writeMem(0xe09e, { 0x3c, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe0a0);
        EXPECT(gbc.pc(), 0x133c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f2d), 0xd9);
        EXPECT(gbc.readMem(0xe09e), 0x3c);
        EXPECT(gbc.readMem(0xe09f), 0x13);
        // D9 0006
        gbc.setState(0xca1, 0xed72, 0x6200, 0x2ec4, 0xcdce, 0xe691, 0x1, 0x0);
        gbc.writeMem(0xca1, { 0xd9 });
        gbc.writeMem(0xed72, { 0x15, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xed74);
        EXPECT(gbc.pc(), 0x615);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed72), 0x15);
        EXPECT(gbc.readMem(0xed73), 0x6);
        // D9 0007
        gbc.setState(0xb3da, 0x10c4, 0x9160, 0xb0d7, 0x4b25, 0x5a69, 0x0, 0x0);
        gbc.writeMem(0x10c4, { 0xb7, 0x14 });
        gbc.writeMem(0xb3da, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x10c6);
        EXPECT(gbc.pc(), 0x14b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3da), 0xd9);
        // D9 0008
        gbc.setState(0x3716, 0x1215, 0x6720, 0xc1c0, 0xc15d, 0xa4de, 0x1, 0x0);
        gbc.writeMem(0x1215, { 0x1a, 0xe6 });
        gbc.writeMem(0x3716, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1217);
        EXPECT(gbc.pc(), 0xe61a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0009
        gbc.setState(0xe7af, 0x2d02, 0xfa0, 0xa973, 0x3648, 0x85f8, 0x1, 0x1);
        gbc.writeMem(0x2d02, { 0xb2, 0x36 });
        gbc.writeMem(0xe7af, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2d04);
        EXPECT(gbc.pc(), 0x36b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7af), 0xd9);
        // D9 000A
        gbc.setState(0xd178, 0xdae1, 0x6dd0, 0x330b, 0xec07, 0x19c2, 0x1, 0x0);
        gbc.writeMem(0xd178, { 0xd9 });
        gbc.writeMem(0xdae1, { 0x51, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xdae3);
        EXPECT(gbc.pc(), 0x6051);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd178), 0xd9);
        EXPECT(gbc.readMem(0xdae1), 0x51);
        EXPECT(gbc.readMem(0xdae2), 0x60);
        // D9 000B
        gbc.setState(0x8c6c, 0x1dd3, 0xf540, 0xb752, 0x5ffb, 0xbe04, 0x0, 0x1);
        gbc.writeMem(0x1dd3, { 0xaa, 0x68 });
        gbc.writeMem(0x8c6c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1dd5);
        EXPECT(gbc.pc(), 0x68aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c6c), 0xd9);
        // D9 000C
        gbc.setState(0xd3f2, 0xe29e, 0x3ff0, 0x14a8, 0x72e6, 0x455e, 0x0, 0x0);
        gbc.writeMem(0xd3f2, { 0xd9 });
        gbc.writeMem(0xe29e, { 0x82, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe2a0);
        EXPECT(gbc.pc(), 0xac82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f2), 0xd9);
        EXPECT(gbc.readMem(0xe29e), 0x82);
        EXPECT(gbc.readMem(0xe29f), 0xac);
        // D9 000D
        gbc.setState(0xa589, 0xf88e, 0x3500, 0x28e8, 0xaf46, 0x3d25, 0x0, 0x1);
        gbc.writeMem(0xa589, { 0xd9 });
        gbc.writeMem(0xf88e, { 0x1d, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf890);
        EXPECT(gbc.pc(), 0x7d1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa589), 0xd9);
        EXPECT(gbc.readMem(0xf88e), 0x1d);
        EXPECT(gbc.readMem(0xf88f), 0x7d);
        // D9 000E
        gbc.setState(0x2202, 0xb059, 0x5990, 0x38ee, 0xf2cc, 0x2294, 0x0, 0x1);
        gbc.writeMem(0x2202, { 0xd9 });
        gbc.writeMem(0xb059, { 0x5d, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb05b);
        EXPECT(gbc.pc(), 0x695d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb059), 0x5d);
        EXPECT(gbc.readMem(0xb05a), 0x69);
        // D9 000F
        gbc.setState(0x3d86, 0x4cf5, 0x42c0, 0xa3bb, 0xf947, 0x8955, 0x0, 0x0);
        gbc.writeMem(0x3d86, { 0xd9 });
        gbc.writeMem(0x4cf5, { 0xd4, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4cf7);
        EXPECT(gbc.pc(), 0xad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0010
        gbc.setState(0x9596, 0x99d, 0xa9b0, 0x29c7, 0x6581, 0x462e, 0x1, 0x1);
        gbc.writeMem(0x99d, { 0xf1, 0x63 });
        gbc.writeMem(0x9596, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x99f);
        EXPECT(gbc.pc(), 0x63f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9596), 0xd9);
        // D9 0011
        gbc.setState(0x2dd9, 0x2de9, 0x7b00, 0xf8bd, 0xfff, 0xebcc, 0x1, 0x1);
        gbc.writeMem(0x2dd9, { 0xd9 });
        gbc.writeMem(0x2de9, { 0xec, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2deb);
        EXPECT(gbc.pc(), 0x20ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0012
        gbc.setState(0x3746, 0xa84a, 0x7f90, 0x8c6, 0xddb7, 0xc932, 0x0, 0x0);
        gbc.writeMem(0x3746, { 0xd9 });
        gbc.writeMem(0xa84a, { 0xb2, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa84c);
        EXPECT(gbc.pc(), 0x96b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa84a), 0xb2);
        EXPECT(gbc.readMem(0xa84b), 0x96);
        // D9 0013
        gbc.setState(0x84a6, 0xeaf4, 0x3680, 0xe4c7, 0xcbb, 0x8015, 0x1, 0x1);
        gbc.writeMem(0x84a6, { 0xd9 });
        gbc.writeMem(0xeaf4, { 0x81, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xeaf6);
        EXPECT(gbc.pc(), 0xb881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a6), 0xd9);
        EXPECT(gbc.readMem(0xeaf4), 0x81);
        EXPECT(gbc.readMem(0xeaf5), 0xb8);
        // D9 0014
        gbc.setState(0x80ca, 0xf470, 0xbf70, 0x67d, 0x5c15, 0xdb68, 0x0, 0x0);
        gbc.writeMem(0x80ca, { 0xd9 });
        gbc.writeMem(0xf470, { 0xa5, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf472);
        EXPECT(gbc.pc(), 0x31a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80ca), 0xd9);
        EXPECT(gbc.readMem(0xf470), 0xa5);
        EXPECT(gbc.readMem(0xf471), 0x31);
        // D9 0015
        gbc.setState(0xee6d, 0xe271, 0x6090, 0x8d1e, 0x2513, 0x9860, 0x0, 0x1);
        gbc.writeMem(0xe271, { 0x79, 0x99 });
        gbc.writeMem(0xee6d, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe273);
        EXPECT(gbc.pc(), 0x9979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe271), 0x79);
        EXPECT(gbc.readMem(0xe272), 0x99);
        EXPECT(gbc.readMem(0xee6d), 0xd9);
        // D9 0016
        gbc.setState(0xc0ba, 0x23ba, 0x5d00, 0xb722, 0x6f99, 0xef51, 0x1, 0x0);
        gbc.writeMem(0x23ba, { 0xea, 0xd5 });
        gbc.writeMem(0xc0ba, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x23bc);
        EXPECT(gbc.pc(), 0xd5ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ba), 0xd9);
        // D9 0017
        gbc.setState(0x78ef, 0x4dbe, 0x3500, 0xd248, 0x3a48, 0x47a0, 0x1, 0x1);
        gbc.writeMem(0x4dbe, { 0x9f, 0x12 });
        gbc.writeMem(0x78ef, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4dc0);
        EXPECT(gbc.pc(), 0x129f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0018
        gbc.setState(0xb831, 0x730a, 0x5500, 0x4392, 0x779a, 0x4606, 0x0, 0x1);
        gbc.writeMem(0x730a, { 0x9c, 0xf1 });
        gbc.writeMem(0xb831, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x730c);
        EXPECT(gbc.pc(), 0xf19c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb831), 0xd9);
        // D9 0019
        gbc.setState(0xe3f4, 0xcf98, 0xe970, 0xe093, 0xab46, 0x33cc, 0x0, 0x1);
        gbc.writeMem(0xcf98, { 0x2c, 0x71 });
        gbc.writeMem(0xe3f4, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xcf9a);
        EXPECT(gbc.pc(), 0x712c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf98), 0x2c);
        EXPECT(gbc.readMem(0xcf99), 0x71);
        EXPECT(gbc.readMem(0xe3f4), 0xd9);
        // D9 001A
        gbc.setState(0xa80c, 0x682e, 0x7cc0, 0x2524, 0x134c, 0x5cda, 0x0, 0x0);
        gbc.writeMem(0x682e, { 0x77, 0x4c });
        gbc.writeMem(0xa80c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6830);
        EXPECT(gbc.pc(), 0x4c77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa80c), 0xd9);
        // D9 001B
        gbc.setState(0xef74, 0x7c2f, 0xaa00, 0x584d, 0xe098, 0x5b06, 0x1, 0x0);
        gbc.writeMem(0x7c2f, { 0xf6, 0xaa });
        gbc.writeMem(0xef74, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7c31);
        EXPECT(gbc.pc(), 0xaaf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef74), 0xd9);
        // D9 001C
        gbc.setState(0xbf9a, 0xb5bb, 0x68c0, 0xda75, 0xe11d, 0xf050, 0x1, 0x0);
        gbc.writeMem(0xb5bb, { 0x2e, 0x79 });
        gbc.writeMem(0xbf9a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb5bd);
        EXPECT(gbc.pc(), 0x792e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5bb), 0x2e);
        EXPECT(gbc.readMem(0xb5bc), 0x79);
        EXPECT(gbc.readMem(0xbf9a), 0xd9);
        // D9 001D
        gbc.setState(0xb6da, 0x188f, 0x6bb0, 0x8530, 0x70df, 0x2a0f, 0x0, 0x0);
        gbc.writeMem(0x188f, { 0xd3, 0xdb });
        gbc.writeMem(0xb6da, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1891);
        EXPECT(gbc.pc(), 0xdbd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6da), 0xd9);
        // D9 001E
        gbc.setState(0xe03a, 0x1551, 0xf7b0, 0x5b16, 0x96eb, 0x4397, 0x0, 0x0);
        gbc.writeMem(0x1551, { 0x12, 0x70 });
        gbc.writeMem(0xe03a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1553);
        EXPECT(gbc.pc(), 0x7012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe03a), 0xd9);
        // D9 001F
        gbc.setState(0xaa9a, 0x94fc, 0x8b90, 0xbce8, 0xdb71, 0x24d6, 0x0, 0x1);
        gbc.writeMem(0x94fc, { 0x18, 0x45 });
        gbc.writeMem(0xaa9a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x94fe);
        EXPECT(gbc.pc(), 0x4518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94fc), 0x18);
        EXPECT(gbc.readMem(0x94fd), 0x45);
        EXPECT(gbc.readMem(0xaa9a), 0xd9);
        // D9 0020
        gbc.setState(0x478a, 0xceb2, 0xc1c0, 0x12ff, 0x3bc2, 0x8cd2, 0x0, 0x0);
        gbc.writeMem(0x478a, { 0xd9 });
        gbc.writeMem(0xceb2, { 0x11, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xceb4);
        EXPECT(gbc.pc(), 0xee11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceb2), 0x11);
        EXPECT(gbc.readMem(0xceb3), 0xee);
        // D9 0021
        gbc.setState(0xee82, 0x7af3, 0x11a0, 0x99a4, 0x2f54, 0x50ed, 0x0, 0x1);
        gbc.writeMem(0x7af3, { 0xb8, 0x5f });
        gbc.writeMem(0xee82, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7af5);
        EXPECT(gbc.pc(), 0x5fb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee82), 0xd9);
        // D9 0022
        gbc.setState(0xe3d2, 0x37d6, 0xeca0, 0xf548, 0x8557, 0x8a20, 0x0, 0x1);
        gbc.writeMem(0x37d6, { 0x7c, 0x43 });
        gbc.writeMem(0xe3d2, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x37d8);
        EXPECT(gbc.pc(), 0x437c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3d2), 0xd9);
        // D9 0023
        gbc.setState(0xabf3, 0x8906, 0x3da0, 0x4587, 0x308f, 0x384c, 0x0, 0x1);
        gbc.writeMem(0x8906, { 0x53, 0x54 });
        gbc.writeMem(0xabf3, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8908);
        EXPECT(gbc.pc(), 0x5453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8906), 0x53);
        EXPECT(gbc.readMem(0x8907), 0x54);
        EXPECT(gbc.readMem(0xabf3), 0xd9);
        // D9 0024
        gbc.setState(0x136f, 0x95b7, 0x8530, 0xbffc, 0x7c3e, 0x8e5f, 0x0, 0x0);
        gbc.writeMem(0x136f, { 0xd9 });
        gbc.writeMem(0x95b7, { 0x10, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x95b9);
        EXPECT(gbc.pc(), 0x410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95b7), 0x10);
        EXPECT(gbc.readMem(0x95b8), 0x4);
        // D9 0025
        gbc.setState(0xb391, 0x6b58, 0x310, 0x66f6, 0xa6a2, 0xfc69, 0x1, 0x0);
        gbc.writeMem(0x6b58, { 0x25, 0xb2 });
        gbc.writeMem(0xb391, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x6b5a);
        EXPECT(gbc.pc(), 0xb225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb391), 0xd9);
        // D9 0026
        gbc.setState(0x76, 0xccfd, 0xec50, 0xe7e3, 0x3275, 0xfceb, 0x1, 0x0);
        gbc.writeMem(0x76, { 0xd9 });
        gbc.writeMem(0xccfd, { 0xc6, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xccff);
        EXPECT(gbc.pc(), 0x39c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccfd), 0xc6);
        EXPECT(gbc.readMem(0xccfe), 0x39);
        // D9 0027
        gbc.setState(0xa0a2, 0xfb3b, 0x60, 0x7776, 0xcde6, 0x6693, 0x1, 0x0);
        gbc.writeMem(0xa0a2, { 0xd9 });
        gbc.writeMem(0xfb3b, { 0x3a, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xfb3d);
        EXPECT(gbc.pc(), 0x153a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0a2), 0xd9);
        EXPECT(gbc.readMem(0xfb3b), 0x3a);
        EXPECT(gbc.readMem(0xfb3c), 0x15);
        // D9 0028
        gbc.setState(0x3456, 0xc897, 0x6590, 0x6780, 0x4cf, 0xb3e0, 0x1, 0x1);
        gbc.writeMem(0x3456, { 0xd9 });
        gbc.writeMem(0xc897, { 0xbe, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc899);
        EXPECT(gbc.pc(), 0x43be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc897), 0xbe);
        EXPECT(gbc.readMem(0xc898), 0x43);
        // D9 0029
        gbc.setState(0x8c7a, 0xd0fb, 0x7200, 0xfa1a, 0x6852, 0x4435, 0x1, 0x1);
        gbc.writeMem(0x8c7a, { 0xd9 });
        gbc.writeMem(0xd0fb, { 0x45, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd0fd);
        EXPECT(gbc.pc(), 0x3045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c7a), 0xd9);
        EXPECT(gbc.readMem(0xd0fb), 0x45);
        EXPECT(gbc.readMem(0xd0fc), 0x30);
        // D9 002A
        gbc.setState(0xbab8, 0xdaca, 0x2200, 0xab48, 0xf21c, 0x2b9a, 0x1, 0x0);
        gbc.writeMem(0xbab8, { 0xd9 });
        gbc.writeMem(0xdaca, { 0x1, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xdacc);
        EXPECT(gbc.pc(), 0x4701);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab8), 0xd9);
        EXPECT(gbc.readMem(0xdaca), 0x1);
        EXPECT(gbc.readMem(0xdacb), 0x47);
        // D9 002B
        gbc.setState(0xac6d, 0x15a7, 0xf030, 0xc428, 0xe539, 0x677a, 0x0, 0x1);
        gbc.writeMem(0x15a7, { 0x78, 0x60 });
        gbc.writeMem(0xac6d, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x15a9);
        EXPECT(gbc.pc(), 0x6078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac6d), 0xd9);
        // D9 002C
        gbc.setState(0x6d91, 0x9fa7, 0xeb0, 0xd83e, 0xac04, 0x66aa, 0x1, 0x0);
        gbc.writeMem(0x6d91, { 0xd9 });
        gbc.writeMem(0x9fa7, { 0x7a, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x9fa9);
        EXPECT(gbc.pc(), 0xc37a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fa7), 0x7a);
        EXPECT(gbc.readMem(0x9fa8), 0xc3);
        // D9 002D
        gbc.setState(0x28c, 0x3e4, 0xfce0, 0x8aac, 0x9210, 0x7939, 0x0, 0x0);
        gbc.writeMem(0x28c, { 0xd9 });
        gbc.writeMem(0x3e4, { 0xd1, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3e6);
        EXPECT(gbc.pc(), 0x7dd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 002E
        gbc.setState(0x941d, 0x3c84, 0x520, 0xbada, 0x1d36, 0x980e, 0x0, 0x0);
        gbc.writeMem(0x3c84, { 0x36, 0xfd });
        gbc.writeMem(0x941d, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3c86);
        EXPECT(gbc.pc(), 0xfd36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x941d), 0xd9);
        // D9 002F
        gbc.setState(0x73bb, 0xe166, 0xe910, 0x5886, 0xa558, 0x89c6, 0x1, 0x1);
        gbc.writeMem(0x73bb, { 0xd9 });
        gbc.writeMem(0xe166, { 0x29, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe168);
        EXPECT(gbc.pc(), 0x7629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe166), 0x29);
        EXPECT(gbc.readMem(0xe167), 0x76);
        // D9 0030
        gbc.setState(0x8a3, 0xc798, 0xa290, 0x5c29, 0x4bd1, 0x5b7, 0x0, 0x1);
        gbc.writeMem(0x8a3, { 0xd9 });
        gbc.writeMem(0xc798, { 0xc9, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc79a);
        EXPECT(gbc.pc(), 0xc3c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc798), 0xc9);
        EXPECT(gbc.readMem(0xc799), 0xc3);
        // D9 0031
        gbc.setState(0xd418, 0x5b07, 0xa530, 0xb78e, 0xc57c, 0x5064, 0x1, 0x1);
        gbc.writeMem(0x5b07, { 0x6a, 0x9d });
        gbc.writeMem(0xd418, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5b09);
        EXPECT(gbc.pc(), 0x9d6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd418), 0xd9);
        // D9 0032
        gbc.setState(0xbf63, 0xd76d, 0x8c80, 0x8fb5, 0x575f, 0xf1d, 0x1, 0x1);
        gbc.writeMem(0xbf63, { 0xd9 });
        gbc.writeMem(0xd76d, { 0xdd, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd76f);
        EXPECT(gbc.pc(), 0xf8dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf63), 0xd9);
        EXPECT(gbc.readMem(0xd76d), 0xdd);
        EXPECT(gbc.readMem(0xd76e), 0xf8);
        // D9 0033
        gbc.setState(0x2c7a, 0x35a9, 0x76d0, 0x165d, 0x999d, 0xcbc3, 0x0, 0x0);
        gbc.writeMem(0x2c7a, { 0xd9 });
        gbc.writeMem(0x35a9, { 0x64, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x35ab);
        EXPECT(gbc.pc(), 0x6564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 0034
        gbc.setState(0x3125, 0xeac1, 0x16a0, 0x37d, 0xe9c3, 0x4699, 0x1, 0x1);
        gbc.writeMem(0x3125, { 0xd9 });
        gbc.writeMem(0xeac1, { 0x9f, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xeac3);
        EXPECT(gbc.pc(), 0xf59f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeac1), 0x9f);
        EXPECT(gbc.readMem(0xeac2), 0xf5);
        // D9 0035
        gbc.setState(0xbda7, 0x1ff, 0xb580, 0xa925, 0x2212, 0xfb9a, 0x0, 0x0);
        gbc.writeMem(0x1ff, { 0x13, 0x74 });
        gbc.writeMem(0xbda7, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x201);
        EXPECT(gbc.pc(), 0x7413);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbda7), 0xd9);
        // D9 0036
        gbc.setState(0x122c, 0x37d6, 0x92e0, 0xb98a, 0x2dc6, 0x6460, 0x1, 0x1);
        gbc.writeMem(0x122c, { 0xd9 });
        gbc.writeMem(0x37d6, { 0x7c, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x37d8);
        EXPECT(gbc.pc(), 0x437c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0037
        gbc.setState(0x21ce, 0xb99e, 0x59e0, 0xb4c3, 0x4c91, 0xe568, 0x1, 0x1);
        gbc.writeMem(0x21ce, { 0xd9 });
        gbc.writeMem(0xb99e, { 0xe1, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb9a0);
        EXPECT(gbc.pc(), 0x38e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb99e), 0xe1);
        EXPECT(gbc.readMem(0xb99f), 0x38);
        // D9 0038
        gbc.setState(0x89ab, 0x620c, 0xc70, 0x9e7c, 0x4419, 0x56b9, 0x0, 0x1);
        gbc.writeMem(0x620c, { 0x6, 0x85 });
        gbc.writeMem(0x89ab, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x620e);
        EXPECT(gbc.pc(), 0x8506);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ab), 0xd9);
        // D9 0039
        gbc.setState(0xdf0e, 0xcb46, 0x9d60, 0x6171, 0xe554, 0x480d, 0x1, 0x1);
        gbc.writeMem(0xcb46, { 0x1, 0x15 });
        gbc.writeMem(0xdf0e, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xcb48);
        EXPECT(gbc.pc(), 0x1501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb46), 0x1);
        EXPECT(gbc.readMem(0xcb47), 0x15);
        EXPECT(gbc.readMem(0xdf0e), 0xd9);
        // D9 003A
        gbc.setState(0x8ca9, 0xb155, 0xcc00, 0xccf6, 0x3ebc, 0x6d47, 0x1, 0x1);
        gbc.writeMem(0x8ca9, { 0xd9 });
        gbc.writeMem(0xb155, { 0x8a, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb157);
        EXPECT(gbc.pc(), 0xdd8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca9), 0xd9);
        EXPECT(gbc.readMem(0xb155), 0x8a);
        EXPECT(gbc.readMem(0xb156), 0xdd);
        // D9 003C
        gbc.setState(0x167a, 0x9aa9, 0x3a50, 0xa85c, 0x1dbb, 0x684d, 0x0, 0x0);
        gbc.writeMem(0x167a, { 0xd9 });
        gbc.writeMem(0x9aa9, { 0x11, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9aab);
        EXPECT(gbc.pc(), 0x9a11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aa9), 0x11);
        EXPECT(gbc.readMem(0x9aaa), 0x9a);
        // D9 003D
        gbc.setState(0x25ab, 0x2679, 0x3640, 0xc568, 0x7348, 0x477e, 0x1, 0x0);
        gbc.writeMem(0x25ab, { 0xd9 });
        gbc.writeMem(0x2679, { 0xd9, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x267b);
        EXPECT(gbc.pc(), 0x69d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 003E
        gbc.setState(0x2cd6, 0xeeaf, 0x7d30, 0xad56, 0xb33f, 0x2dd6, 0x0, 0x0);
        gbc.writeMem(0x2cd6, { 0xd9 });
        gbc.writeMem(0xeeaf, { 0x46, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xeeb1);
        EXPECT(gbc.pc(), 0xfe46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeaf), 0x46);
        EXPECT(gbc.readMem(0xeeb0), 0xfe);
        // D9 003F
        gbc.setState(0xe326, 0xf9bf, 0xf1f0, 0xcd61, 0xc045, 0x86bb, 0x0, 0x1);
        gbc.writeMem(0xe326, { 0xd9 });
        gbc.writeMem(0xf9bf, { 0x7b, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf9c1);
        EXPECT(gbc.pc(), 0x717b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe326), 0xd9);
        EXPECT(gbc.readMem(0xf9bf), 0x7b);
        EXPECT(gbc.readMem(0xf9c0), 0x71);
        // D9 0040
        gbc.setState(0x8f4b, 0x5f3f, 0x9ae0, 0xfaf1, 0x7ca4, 0x3b5d, 0x0, 0x0);
        gbc.writeMem(0x5f3f, { 0x69, 0x39 });
        gbc.writeMem(0x8f4b, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5f41);
        EXPECT(gbc.pc(), 0x3969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f4b), 0xd9);
        // D9 0041
        gbc.setState(0x4916, 0x504e, 0x750, 0x4ea9, 0xe2a7, 0xdc, 0x0, 0x1);
        gbc.writeMem(0x4916, { 0xd9 });
        gbc.writeMem(0x504e, { 0x56, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5050);
        EXPECT(gbc.pc(), 0xe956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 0042
        gbc.setState(0x7682, 0x35d, 0xa0b0, 0xd34a, 0xf7d6, 0x2d90, 0x0, 0x1);
        gbc.writeMem(0x35d, { 0x1f, 0xda });
        gbc.writeMem(0x7682, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x35f);
        EXPECT(gbc.pc(), 0xda1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0043
        gbc.setState(0xb390, 0x206b, 0xe400, 0x1e82, 0xb4b1, 0x2687, 0x0, 0x0);
        gbc.writeMem(0x206b, { 0x30, 0xdb });
        gbc.writeMem(0xb390, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x206d);
        EXPECT(gbc.pc(), 0xdb30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb390), 0xd9);
        // D9 0044
        gbc.setState(0x2857, 0x48b5, 0xbca0, 0x108f, 0x6d55, 0xa073, 0x0, 0x0);
        gbc.writeMem(0x2857, { 0xd9 });
        gbc.writeMem(0x48b5, { 0xe3, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x48b7);
        EXPECT(gbc.pc(), 0x1be3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0045
        gbc.setState(0x771a, 0x2207, 0x1f70, 0x9a45, 0x3fbc, 0x3c00, 0x0, 0x0);
        gbc.writeMem(0x2207, { 0x3a, 0x23 });
        gbc.writeMem(0x771a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2209);
        EXPECT(gbc.pc(), 0x233a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0046
        gbc.setState(0x3a2, 0xe1c1, 0xb5c0, 0x9ed, 0x54ad, 0x5352, 0x0, 0x1);
        gbc.writeMem(0x3a2, { 0xd9 });
        gbc.writeMem(0xe1c1, { 0xc2, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe1c3);
        EXPECT(gbc.pc(), 0xb2c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1c1), 0xc2);
        EXPECT(gbc.readMem(0xe1c2), 0xb2);
        // D9 0047
        gbc.setState(0xd252, 0x4234, 0x92f0, 0x5d72, 0x7cc3, 0xa2b5, 0x0, 0x1);
        gbc.writeMem(0x4234, { 0x6c, 0x11 });
        gbc.writeMem(0xd252, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4236);
        EXPECT(gbc.pc(), 0x116c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd252), 0xd9);
        // D9 0048
        gbc.setState(0xc5ab, 0xedea, 0x2340, 0x3142, 0xbdd8, 0x105f, 0x0, 0x1);
        gbc.writeMem(0xc5ab, { 0xd9 });
        gbc.writeMem(0xedea, { 0xb2, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xedec);
        EXPECT(gbc.pc(), 0xdeb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ab), 0xd9);
        EXPECT(gbc.readMem(0xedea), 0xb2);
        EXPECT(gbc.readMem(0xedeb), 0xde);
        // D9 0049
        gbc.setState(0xa835, 0x2317, 0xa730, 0x1343, 0xc171, 0x50b2, 0x0, 0x0);
        gbc.writeMem(0x2317, { 0x54, 0xb9 });
        gbc.writeMem(0xa835, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x2319);
        EXPECT(gbc.pc(), 0xb954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa835), 0xd9);
        // D9 004A
        gbc.setState(0x527e, 0xb708, 0x78b0, 0xdb21, 0x35a0, 0x16df, 0x0, 0x0);
        gbc.writeMem(0x527e, { 0xd9 });
        gbc.writeMem(0xb708, { 0x2d, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb70a);
        EXPECT(gbc.pc(), 0xf72d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb708), 0x2d);
        EXPECT(gbc.readMem(0xb709), 0xf7);
        // D9 004B
        gbc.setState(0x62ab, 0x7366, 0x39b0, 0xd21, 0x2827, 0x5221, 0x1, 0x1);
        gbc.writeMem(0x62ab, { 0xd9 });
        gbc.writeMem(0x7366, { 0x5d, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7368);
        EXPECT(gbc.pc(), 0x555d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 004C
        gbc.setState(0x40fe, 0x4c28, 0xc0c0, 0x87b, 0x2126, 0x80e6, 0x1, 0x1);
        gbc.writeMem(0x40fe, { 0xd9 });
        gbc.writeMem(0x4c28, { 0x42, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4c2a);
        EXPECT(gbc.pc(), 0xc942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 004D
        gbc.setState(0x5afe, 0xb59, 0x54d0, 0xa80d, 0x71a1, 0xf008, 0x1, 0x0);
        gbc.writeMem(0xb59, { 0x3, 0xe7 });
        gbc.writeMem(0x5afe, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb5b);
        EXPECT(gbc.pc(), 0xe703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 004E
        gbc.setState(0xbd2e, 0xfdea, 0xa6b0, 0xa87b, 0xc2c7, 0x3594, 0x1, 0x1);
        gbc.writeMem(0xbd2e, { 0xd9 });
        gbc.writeMem(0xfdea, { 0xc1, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xfdec);
        EXPECT(gbc.pc(), 0xe8c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd2e), 0xd9);
        EXPECT(gbc.readMem(0xfdea), 0xc1);
        EXPECT(gbc.readMem(0xfdeb), 0xe8);
        // D9 004F
        gbc.setState(0x57f9, 0xa87, 0x5000, 0x2e1a, 0x776d, 0x27c9, 0x0, 0x1);
        gbc.writeMem(0xa87, { 0x23, 0x18 });
        gbc.writeMem(0x57f9, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa89);
        EXPECT(gbc.pc(), 0x1823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0050
        gbc.setState(0x6809, 0x33b0, 0x3160, 0xd4eb, 0xe3f4, 0x814b, 0x1, 0x1);
        gbc.writeMem(0x33b0, { 0xa0, 0x8b });
        gbc.writeMem(0x6809, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x33b2);
        EXPECT(gbc.pc(), 0x8ba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0051
        gbc.setState(0x2dc4, 0x2bfb, 0x4160, 0xb4aa, 0x3e35, 0x9da7, 0x1, 0x1);
        gbc.writeMem(0x2bfb, { 0x9d, 0x6 });
        gbc.writeMem(0x2dc4, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2bfd);
        EXPECT(gbc.pc(), 0x69d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0053
        gbc.setState(0x3fb3, 0x2f41, 0x1b20, 0x3bc4, 0xdb81, 0x76e7, 0x1, 0x1);
        gbc.writeMem(0x2f41, { 0x9a, 0x49 });
        gbc.writeMem(0x3fb3, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2f43);
        EXPECT(gbc.pc(), 0x499a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0054
        gbc.setState(0xa2b1, 0xf036, 0x9070, 0xf274, 0x3a6e, 0x98a4, 0x1, 0x1);
        gbc.writeMem(0xa2b1, { 0xd9 });
        gbc.writeMem(0xf036, { 0xb, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf038);
        EXPECT(gbc.pc(), 0x1f0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2b1), 0xd9);
        EXPECT(gbc.readMem(0xf036), 0xb);
        EXPECT(gbc.readMem(0xf037), 0x1f);
        // D9 0055
        gbc.setState(0xb5bc, 0xcbd7, 0xf090, 0x2feb, 0x60ea, 0x198d, 0x1, 0x1);
        gbc.writeMem(0xb5bc, { 0xd9 });
        gbc.writeMem(0xcbd7, { 0xb2, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xcbd9);
        EXPECT(gbc.pc(), 0xb2b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5bc), 0xd9);
        EXPECT(gbc.readMem(0xcbd7), 0xb2);
        EXPECT(gbc.readMem(0xcbd8), 0xb2);
        // D9 0057
        gbc.setState(0x361, 0xa848, 0x85b0, 0x53ce, 0xc6d9, 0x1766, 0x1, 0x1);
        gbc.writeMem(0x361, { 0xd9 });
        gbc.writeMem(0xa848, { 0x2a, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa84a);
        EXPECT(gbc.pc(), 0xe52a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa848), 0x2a);
        EXPECT(gbc.readMem(0xa849), 0xe5);
        // D9 0058
        gbc.setState(0x2265, 0xc60a, 0x46c0, 0x306a, 0x6bac, 0x410a, 0x0, 0x1);
        gbc.writeMem(0x2265, { 0xd9 });
        gbc.writeMem(0xc60a, { 0xa1, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc60c);
        EXPECT(gbc.pc(), 0xe5a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc60a), 0xa1);
        EXPECT(gbc.readMem(0xc60b), 0xe5);
        // D9 0059
        gbc.setState(0xb114, 0x7674, 0x2ad0, 0x5abc, 0x30a, 0x88b5, 0x1, 0x1);
        gbc.writeMem(0x7674, { 0xac, 0x72 });
        gbc.writeMem(0xb114, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7676);
        EXPECT(gbc.pc(), 0x72ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb114), 0xd9);
        // D9 005A
        gbc.setState(0x5071, 0x4495, 0x43e0, 0x50d3, 0x9622, 0x308c, 0x0, 0x1);
        gbc.writeMem(0x4495, { 0x9b, 0x9 });
        gbc.writeMem(0x5071, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4497);
        EXPECT(gbc.pc(), 0x99b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 005B
        gbc.setState(0xb1b4, 0xb3d, 0xf340, 0xfda2, 0xef68, 0x41c8, 0x1, 0x0);
        gbc.writeMem(0xb3d, { 0xc2, 0x64 });
        gbc.writeMem(0xb1b4, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb3f);
        EXPECT(gbc.pc(), 0x64c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b4), 0xd9);
        // D9 005C
        gbc.setState(0xa7ab, 0x730c, 0x5c40, 0x4de1, 0x9f6, 0x7c1f, 0x1, 0x0);
        gbc.writeMem(0x730c, { 0x62, 0x8d });
        gbc.writeMem(0xa7ab, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x730e);
        EXPECT(gbc.pc(), 0x8d62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ab), 0xd9);
        // D9 005D
        gbc.setState(0x9c42, 0x2f31, 0xc4b0, 0x84d2, 0x1ad, 0x8d1b, 0x0, 0x0);
        gbc.writeMem(0x2f31, { 0xe9, 0x7b });
        gbc.writeMem(0x9c42, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x2f33);
        EXPECT(gbc.pc(), 0x7be9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c42), 0xd9);
        // D9 005E
        gbc.setState(0xce24, 0xda26, 0x3570, 0xc04a, 0x5d0c, 0x40b7, 0x1, 0x1);
        gbc.writeMem(0xce24, { 0xd9 });
        gbc.writeMem(0xda26, { 0x9f, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xda28);
        EXPECT(gbc.pc(), 0x409f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce24), 0xd9);
        EXPECT(gbc.readMem(0xda26), 0x9f);
        EXPECT(gbc.readMem(0xda27), 0x40);
        // D9 005F
        gbc.setState(0x7a6d, 0xec4f, 0x3c60, 0xa370, 0x7c4f, 0xf54d, 0x1, 0x1);
        gbc.writeMem(0x7a6d, { 0xd9 });
        gbc.writeMem(0xec4f, { 0x4a, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xec51);
        EXPECT(gbc.pc(), 0xd64a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec4f), 0x4a);
        EXPECT(gbc.readMem(0xec50), 0xd6);
        // D9 0060
        gbc.setState(0x81f2, 0x75b7, 0xa7e0, 0x871f, 0x40be, 0x8652, 0x0, 0x0);
        gbc.writeMem(0x75b7, { 0xf, 0x4e });
        gbc.writeMem(0x81f2, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x75b9);
        EXPECT(gbc.pc(), 0x4e0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f2), 0xd9);
        // D9 0061
        gbc.setState(0x92ef, 0x2d8d, 0x21d0, 0xcf0f, 0xd293, 0x62ed, 0x0, 0x1);
        gbc.writeMem(0x2d8d, { 0x5a, 0xed });
        gbc.writeMem(0x92ef, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2d8f);
        EXPECT(gbc.pc(), 0xed5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ef), 0xd9);
        // D9 0062
        gbc.setState(0x9706, 0x5dd6, 0xbce0, 0xd389, 0xd84f, 0x4a59, 0x1, 0x0);
        gbc.writeMem(0x5dd6, { 0x2d, 0x52 });
        gbc.writeMem(0x9706, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5dd8);
        EXPECT(gbc.pc(), 0x522d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9706), 0xd9);
        // D9 0063
        gbc.setState(0x3468, 0x8c9c, 0x8c00, 0xc797, 0x89de, 0xa18a, 0x1, 0x0);
        gbc.writeMem(0x3468, { 0xd9 });
        gbc.writeMem(0x8c9c, { 0xfc, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8c9e);
        EXPECT(gbc.pc(), 0xc9fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c9c), 0xfc);
        EXPECT(gbc.readMem(0x8c9d), 0xc9);
        // D9 0064
        gbc.setState(0x53a7, 0xdd16, 0xb430, 0xbb06, 0xb23a, 0x69d2, 0x0, 0x0);
        gbc.writeMem(0x53a7, { 0xd9 });
        gbc.writeMem(0xdd16, { 0x63, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xdd18);
        EXPECT(gbc.pc(), 0xcf63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd16), 0x63);
        EXPECT(gbc.readMem(0xdd17), 0xcf);
        // D9 0065
        gbc.setState(0xe115, 0xf325, 0x3ce0, 0xa095, 0xf6ff, 0xf810, 0x0, 0x1);
        gbc.writeMem(0xe115, { 0xd9 });
        gbc.writeMem(0xf325, { 0xd3, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf327);
        EXPECT(gbc.pc(), 0x9dd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe115), 0xd9);
        EXPECT(gbc.readMem(0xf325), 0xd3);
        EXPECT(gbc.readMem(0xf326), 0x9d);
        // D9 0066
        gbc.setState(0x9ab4, 0x2ffa, 0x2e70, 0xee76, 0xf0fd, 0x40e0, 0x1, 0x0);
        gbc.writeMem(0x2ffa, { 0xf4, 0x94 });
        gbc.writeMem(0x9ab4, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2ffc);
        EXPECT(gbc.pc(), 0x94f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ab4), 0xd9);
        // D9 0067
        gbc.setState(0xedfa, 0x14dc, 0x9460, 0xe9ac, 0xe64a, 0xc53, 0x1, 0x1);
        gbc.writeMem(0x14dc, { 0x2a, 0xcd });
        gbc.writeMem(0xedfa, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x14de);
        EXPECT(gbc.pc(), 0xcd2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedfa), 0xd9);
        // D9 0068
        gbc.setState(0x8131, 0x39da, 0x6eb0, 0x6bc, 0x22ef, 0x3efa, 0x0, 0x0);
        gbc.writeMem(0x39da, { 0xea, 0x44 });
        gbc.writeMem(0x8131, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x39dc);
        EXPECT(gbc.pc(), 0x44ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8131), 0xd9);
        // D9 0069
        gbc.setState(0xeb3c, 0x1c55, 0xa7b0, 0x34ad, 0xb696, 0x9ce5, 0x1, 0x0);
        gbc.writeMem(0x1c55, { 0x9f, 0x43 });
        gbc.writeMem(0xeb3c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1c57);
        EXPECT(gbc.pc(), 0x439f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb3c), 0xd9);
        // D9 006A
        gbc.setState(0x624a, 0xda39, 0x9020, 0xa137, 0xba25, 0x6201, 0x0, 0x0);
        gbc.writeMem(0x624a, { 0xd9 });
        gbc.writeMem(0xda39, { 0xa2, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xda3b);
        EXPECT(gbc.pc(), 0x68a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda39), 0xa2);
        EXPECT(gbc.readMem(0xda3a), 0x68);
        // D9 006B
        gbc.setState(0x6be2, 0x104a, 0x1620, 0x901b, 0xf671, 0x6c4d, 0x1, 0x0);
        gbc.writeMem(0x104a, { 0x5a, 0xeb });
        gbc.writeMem(0x6be2, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x104c);
        EXPECT(gbc.pc(), 0xeb5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 006C
        gbc.setState(0xe168, 0xb8e7, 0x6c10, 0x41a7, 0x3e6d, 0x8297, 0x1, 0x1);
        gbc.writeMem(0xb8e7, { 0x82, 0x17 });
        gbc.writeMem(0xe168, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb8e9);
        EXPECT(gbc.pc(), 0x1782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8e7), 0x82);
        EXPECT(gbc.readMem(0xb8e8), 0x17);
        EXPECT(gbc.readMem(0xe168), 0xd9);
        // D9 006D
        gbc.setState(0xc1f, 0xa3f7, 0x8b10, 0xbc11, 0xadec, 0xa4ff, 0x0, 0x1);
        gbc.writeMem(0xc1f, { 0xd9 });
        gbc.writeMem(0xa3f7, { 0xea, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa3f9);
        EXPECT(gbc.pc(), 0x3bea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3f7), 0xea);
        EXPECT(gbc.readMem(0xa3f8), 0x3b);
        // D9 006E
        gbc.setState(0x2111, 0x57c7, 0x6710, 0x78b1, 0xde50, 0x293, 0x0, 0x1);
        gbc.writeMem(0x2111, { 0xd9 });
        gbc.writeMem(0x57c7, { 0x7b, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x57c9);
        EXPECT(gbc.pc(), 0xa17b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 006F
        gbc.setState(0x2e81, 0xb79d, 0xd580, 0x9c54, 0x41d9, 0xb53b, 0x0, 0x0);
        gbc.writeMem(0x2e81, { 0xd9 });
        gbc.writeMem(0xb79d, { 0xcf, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb79f);
        EXPECT(gbc.pc(), 0xd1cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb79d), 0xcf);
        EXPECT(gbc.readMem(0xb79e), 0xd1);
        // D9 0070
        gbc.setState(0x5629, 0x880d, 0x9890, 0x4a67, 0x937a, 0x3cae, 0x0, 0x1);
        gbc.writeMem(0x5629, { 0xd9 });
        gbc.writeMem(0x880d, { 0x8d, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x880f);
        EXPECT(gbc.pc(), 0x6b8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x880d), 0x8d);
        EXPECT(gbc.readMem(0x880e), 0x6b);
        // D9 0071
        gbc.setState(0x32a9, 0xd922, 0x5a00, 0x7530, 0x2995, 0x9318, 0x1, 0x0);
        gbc.writeMem(0x32a9, { 0xd9 });
        gbc.writeMem(0xd922, { 0x7a, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd924);
        EXPECT(gbc.pc(), 0x387a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd922), 0x7a);
        EXPECT(gbc.readMem(0xd923), 0x38);
        // D9 0072
        gbc.setState(0xe4e8, 0x1679, 0xe0e0, 0x690, 0x4a60, 0x580a, 0x1, 0x0);
        gbc.writeMem(0x1679, { 0x6, 0xc1 });
        gbc.writeMem(0xe4e8, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x167b);
        EXPECT(gbc.pc(), 0xc106);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4e8), 0xd9);
        // D9 0073
        gbc.setState(0x1c13, 0xfcca, 0x37d0, 0xfea4, 0x68f4, 0x5fb4, 0x0, 0x1);
        gbc.writeMem(0x1c13, { 0xd9 });
        gbc.writeMem(0xfcca, { 0xa9, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xfccc);
        EXPECT(gbc.pc(), 0xf2a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfcca), 0xa9);
        EXPECT(gbc.readMem(0xfccb), 0xf2);
        // D9 0074
        gbc.setState(0x4bd5, 0x9dba, 0xf820, 0xd44f, 0x6b30, 0xeb68, 0x0, 0x0);
        gbc.writeMem(0x4bd5, { 0xd9 });
        gbc.writeMem(0x9dba, { 0xb9, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9dbc);
        EXPECT(gbc.pc(), 0x46b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dba), 0xb9);
        EXPECT(gbc.readMem(0x9dbb), 0x46);
        // D9 0076
        gbc.setState(0x2e3a, 0x7b75, 0x80c0, 0x1c00, 0x8bb4, 0x69cf, 0x1, 0x0);
        gbc.writeMem(0x2e3a, { 0xd9 });
        gbc.writeMem(0x7b75, { 0xd8, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7b77);
        EXPECT(gbc.pc(), 0x97d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0077
        gbc.setState(0x8da2, 0x8b1a, 0x4540, 0x4eae, 0x285d, 0xe861, 0x1, 0x1);
        gbc.writeMem(0x8b1a, { 0xe2, 0x88 });
        gbc.writeMem(0x8da2, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8b1c);
        EXPECT(gbc.pc(), 0x88e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b1a), 0xe2);
        EXPECT(gbc.readMem(0x8b1b), 0x88);
        EXPECT(gbc.readMem(0x8da2), 0xd9);
        // D9 0078
        gbc.setState(0x4470, 0x892f, 0x6a10, 0x62a3, 0xce09, 0x5694, 0x0, 0x0);
        gbc.writeMem(0x4470, { 0xd9 });
        gbc.writeMem(0x892f, { 0xaa, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8931);
        EXPECT(gbc.pc(), 0x94aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x892f), 0xaa);
        EXPECT(gbc.readMem(0x8930), 0x94);
        // D9 007A
        gbc.setState(0x27df, 0xc464, 0xd070, 0xb024, 0xc424, 0x3e10, 0x0, 0x0);
        gbc.writeMem(0x27df, { 0xd9 });
        gbc.writeMem(0xc464, { 0xba, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc466);
        EXPECT(gbc.pc(), 0x28ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc464), 0xba);
        EXPECT(gbc.readMem(0xc465), 0x28);
        // D9 007B
        gbc.setState(0xae05, 0xb218, 0xe460, 0x368f, 0x2cda, 0xc4d2, 0x1, 0x1);
        gbc.writeMem(0xae05, { 0xd9 });
        gbc.writeMem(0xb218, { 0xd0, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb21a);
        EXPECT(gbc.pc(), 0x5cd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae05), 0xd9);
        EXPECT(gbc.readMem(0xb218), 0xd0);
        EXPECT(gbc.readMem(0xb219), 0x5c);
        // D9 007C
        gbc.setState(0x6c07, 0x6814, 0x1700, 0xc3e5, 0x3884, 0x3f92, 0x1, 0x1);
        gbc.writeMem(0x6814, { 0x2f, 0x32 });
        gbc.writeMem(0x6c07, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6816);
        EXPECT(gbc.pc(), 0x322f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 007D
        gbc.setState(0xbf67, 0x3048, 0x27f0, 0xee8a, 0x9b99, 0x1036, 0x0, 0x0);
        gbc.writeMem(0x3048, { 0x71, 0xf6 });
        gbc.writeMem(0xbf67, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x304a);
        EXPECT(gbc.pc(), 0xf671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf67), 0xd9);
        // D9 007E
        gbc.setState(0x2c, 0x5a80, 0x12e0, 0xe5bc, 0x6874, 0x2f6f, 0x0, 0x0);
        gbc.writeMem(0x2c, { 0xd9 });
        gbc.writeMem(0x5a80, { 0xae, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5a82);
        EXPECT(gbc.pc(), 0xd6ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 007F
        gbc.setState(0x11fc, 0x3a2e, 0x2aa0, 0x2b3f, 0xae88, 0xec11, 0x0, 0x0);
        gbc.writeMem(0x11fc, { 0xd9 });
        gbc.writeMem(0x3a2e, { 0xe, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x3a30);
        EXPECT(gbc.pc(), 0xb0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0080
        gbc.setState(0x6610, 0x11ac, 0x2960, 0xf6a0, 0x9db2, 0xf745, 0x0, 0x0);
        gbc.writeMem(0x11ac, { 0xb, 0xc7 });
        gbc.writeMem(0x6610, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x11ae);
        EXPECT(gbc.pc(), 0xc70b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0081
        gbc.setState(0xca89, 0x5c20, 0xc780, 0xe65c, 0x750b, 0xa8ed, 0x0, 0x1);
        gbc.writeMem(0x5c20, { 0x66, 0xc });
        gbc.writeMem(0xca89, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5c22);
        EXPECT(gbc.pc(), 0xc66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca89), 0xd9);
        // D9 0082
        gbc.setState(0xbdef, 0x57a5, 0x1c30, 0xc5a8, 0x25e9, 0x3d5c, 0x0, 0x0);
        gbc.writeMem(0x57a5, { 0x8c, 0x29 });
        gbc.writeMem(0xbdef, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x57a7);
        EXPECT(gbc.pc(), 0x298c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdef), 0xd9);
        // D9 0083
        gbc.setState(0x3295, 0x1e93, 0x2ea0, 0xc499, 0x9e85, 0xc1d6, 0x1, 0x0);
        gbc.writeMem(0x1e93, { 0x7d, 0x34 });
        gbc.writeMem(0x3295, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1e95);
        EXPECT(gbc.pc(), 0x347d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0084
        gbc.setState(0xf3d, 0x9292, 0xd0d0, 0xa7c6, 0xfb4c, 0xcfcd, 0x1, 0x1);
        gbc.writeMem(0xf3d, { 0xd9 });
        gbc.writeMem(0x9292, { 0xa4, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9294);
        EXPECT(gbc.pc(), 0x3fa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9292), 0xa4);
        EXPECT(gbc.readMem(0x9293), 0x3f);
        // D9 0085
        gbc.setState(0x1c6d, 0xd2ab, 0xa3c0, 0xd7f9, 0x789f, 0x5c44, 0x0, 0x1);
        gbc.writeMem(0x1c6d, { 0xd9 });
        gbc.writeMem(0xd2ab, { 0x74, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd2ad);
        EXPECT(gbc.pc(), 0x3074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ab), 0x74);
        EXPECT(gbc.readMem(0xd2ac), 0x30);
        // D9 0086
        gbc.setState(0x871c, 0x827, 0xf7c0, 0xadbb, 0x84d5, 0xfa8a, 0x0, 0x0);
        gbc.writeMem(0x827, { 0xbc, 0x83 });
        gbc.writeMem(0x871c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x829);
        EXPECT(gbc.pc(), 0x83bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x871c), 0xd9);
        // D9 0087
        gbc.setState(0xee8a, 0x80e8, 0xe6b0, 0x823e, 0x1557, 0x6e53, 0x1, 0x1);
        gbc.writeMem(0x80e8, { 0x47, 0x36 });
        gbc.writeMem(0xee8a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x80ea);
        EXPECT(gbc.pc(), 0x3647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e8), 0x47);
        EXPECT(gbc.readMem(0x80e9), 0x36);
        EXPECT(gbc.readMem(0xee8a), 0xd9);
        // D9 0088
        gbc.setState(0x92e, 0x30c, 0x6210, 0x4e0f, 0xb26a, 0x7758, 0x0, 0x0);
        gbc.writeMem(0x30c, { 0x2c, 0x32 });
        gbc.writeMem(0x92e, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x30e);
        EXPECT(gbc.pc(), 0x322c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 0089
        gbc.setState(0x4238, 0x8460, 0x6730, 0x4b10, 0x43c0, 0x7558, 0x0, 0x0);
        gbc.writeMem(0x4238, { 0xd9 });
        gbc.writeMem(0x8460, { 0x4e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8462);
        EXPECT(gbc.pc(), 0xb14e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8460), 0x4e);
        EXPECT(gbc.readMem(0x8461), 0xb1);
        // D9 008A
        gbc.setState(0x1c6d, 0xb72f, 0x3f50, 0xd365, 0xf41c, 0xa552, 0x0, 0x0);
        gbc.writeMem(0x1c6d, { 0xd9 });
        gbc.writeMem(0xb72f, { 0xba, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb731);
        EXPECT(gbc.pc(), 0xf8ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb72f), 0xba);
        EXPECT(gbc.readMem(0xb730), 0xf8);
        // D9 008B
        gbc.setState(0x269a, 0x8901, 0xa100, 0xb2c3, 0xdb75, 0xe384, 0x1, 0x0);
        gbc.writeMem(0x269a, { 0xd9 });
        gbc.writeMem(0x8901, { 0xd, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x8903);
        EXPECT(gbc.pc(), 0x7b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8901), 0xd);
        EXPECT(gbc.readMem(0x8902), 0x7b);
        // D9 008C
        gbc.setState(0x5cb6, 0xf8aa, 0x58c0, 0xf729, 0x74b9, 0xf243, 0x0, 0x0);
        gbc.writeMem(0x5cb6, { 0xd9 });
        gbc.writeMem(0xf8aa, { 0x82, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf8ac);
        EXPECT(gbc.pc(), 0x4f82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf8aa), 0x82);
        EXPECT(gbc.readMem(0xf8ab), 0x4f);
        // D9 008D
        gbc.setState(0x8e81, 0x3e19, 0x9720, 0xa5d8, 0x733d, 0x9449, 0x1, 0x0);
        gbc.writeMem(0x3e19, { 0xfd, 0xf0 });
        gbc.writeMem(0x8e81, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3e1b);
        EXPECT(gbc.pc(), 0xf0fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e81), 0xd9);
        // D9 008E
        gbc.setState(0x1f94, 0x601, 0x7d70, 0x73bc, 0xb0ea, 0x97ed, 0x0, 0x1);
        gbc.writeMem(0x601, { 0x1c, 0x0 });
        gbc.writeMem(0x1f94, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x603);
        EXPECT(gbc.pc(), 0x1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 008F
        gbc.setState(0x6a9, 0x3d52, 0x7c70, 0x3a5d, 0x9786, 0x93ed, 0x1, 0x1);
        gbc.writeMem(0x6a9, { 0xd9 });
        gbc.writeMem(0x3d52, { 0xf2, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3d54);
        EXPECT(gbc.pc(), 0x63f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0090
        gbc.setState(0xa432, 0x10da, 0xff80, 0x313d, 0x1491, 0x12c0, 0x0, 0x0);
        gbc.writeMem(0x10da, { 0x61, 0x86 });
        gbc.writeMem(0xa432, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x10dc);
        EXPECT(gbc.pc(), 0x8661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa432), 0xd9);
        // D9 0091
        gbc.setState(0xb774, 0xe247, 0x9d60, 0x6d8b, 0x6faa, 0x642c, 0x0, 0x0);
        gbc.writeMem(0xb774, { 0xd9 });
        gbc.writeMem(0xe247, { 0x56, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe249);
        EXPECT(gbc.pc(), 0x7b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb774), 0xd9);
        EXPECT(gbc.readMem(0xe247), 0x56);
        EXPECT(gbc.readMem(0xe248), 0x7b);
        // D9 0092
        gbc.setState(0x8e11, 0xcb6, 0xa9d0, 0xec4b, 0x247a, 0x75c5, 0x0, 0x1);
        gbc.writeMem(0xcb6, { 0xcf, 0x70 });
        gbc.writeMem(0x8e11, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xcb8);
        EXPECT(gbc.pc(), 0x70cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e11), 0xd9);
        // D9 0093
        gbc.setState(0xd9ee, 0xeca9, 0xa4e0, 0x80af, 0x57, 0xf6f7, 0x1, 0x1);
        gbc.writeMem(0xd9ee, { 0xd9 });
        gbc.writeMem(0xeca9, { 0x68, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xecab);
        EXPECT(gbc.pc(), 0xed68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ee), 0xd9);
        EXPECT(gbc.readMem(0xeca9), 0x68);
        EXPECT(gbc.readMem(0xecaa), 0xed);
        // D9 0094
        gbc.setState(0xd821, 0x4327, 0x5ef0, 0x757f, 0xd020, 0x3d60, 0x1, 0x0);
        gbc.writeMem(0x4327, { 0xf7, 0x76 });
        gbc.writeMem(0xd821, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4329);
        EXPECT(gbc.pc(), 0x76f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd821), 0xd9);
        // D9 0095
        gbc.setState(0xab01, 0x8734, 0x4fa0, 0x69bd, 0xa21f, 0x5673, 0x0, 0x0);
        gbc.writeMem(0x8734, { 0x4b, 0xec });
        gbc.writeMem(0xab01, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8736);
        EXPECT(gbc.pc(), 0xec4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8734), 0x4b);
        EXPECT(gbc.readMem(0x8735), 0xec);
        EXPECT(gbc.readMem(0xab01), 0xd9);
        // D9 0096
        gbc.setState(0x1603, 0x52c4, 0x7250, 0xcd53, 0xf64d, 0xa847, 0x0, 0x0);
        gbc.writeMem(0x1603, { 0xd9 });
        gbc.writeMem(0x52c4, { 0xc6, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x52c6);
        EXPECT(gbc.pc(), 0x6ac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 0097
        gbc.setState(0x8001, 0x6826, 0xfac0, 0xf465, 0x19ac, 0xbe9a, 0x0, 0x0);
        gbc.writeMem(0x6826, { 0x6d, 0x97 });
        gbc.writeMem(0x8001, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6828);
        EXPECT(gbc.pc(), 0x976d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8001), 0xd9);
        // D9 0099
        gbc.setState(0xa86, 0x5437, 0x4570, 0xfdf8, 0x53a6, 0x75cb, 0x1, 0x0);
        gbc.writeMem(0xa86, { 0xd9 });
        gbc.writeMem(0x5437, { 0xa6, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5439);
        EXPECT(gbc.pc(), 0x98a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 009A
        gbc.setState(0x6834, 0x6a27, 0x3ac0, 0x6e46, 0x7eb8, 0x17b8, 0x1, 0x1);
        gbc.writeMem(0x6834, { 0xd9 });
        gbc.writeMem(0x6a27, { 0xf7, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6a29);
        EXPECT(gbc.pc(), 0xc5f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 009B
        gbc.setState(0x75c, 0xdf01, 0x62b0, 0x3a5f, 0x4fa5, 0xc6ce, 0x1, 0x1);
        gbc.writeMem(0x75c, { 0xd9 });
        gbc.writeMem(0xdf01, { 0xb0, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xdf03);
        EXPECT(gbc.pc(), 0x48b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf01), 0xb0);
        EXPECT(gbc.readMem(0xdf02), 0x48);
        // D9 009C
        gbc.setState(0xd7b8, 0x450b, 0xba40, 0x5b67, 0xb866, 0xd8bc, 0x1, 0x0);
        gbc.writeMem(0x450b, { 0x29, 0x17 });
        gbc.writeMem(0xd7b8, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x450d);
        EXPECT(gbc.pc(), 0x1729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7b8), 0xd9);
        // D9 009D
        gbc.setState(0xebbb, 0x306d, 0x3310, 0x6707, 0x1cd7, 0x4653, 0x0, 0x1);
        gbc.writeMem(0x306d, { 0x2c, 0x91 });
        gbc.writeMem(0xebbb, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x306f);
        EXPECT(gbc.pc(), 0x912c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebbb), 0xd9);
        // D9 009E
        gbc.setState(0x489e, 0xd912, 0x530, 0x546d, 0x75c7, 0xb9c5, 0x0, 0x0);
        gbc.writeMem(0x489e, { 0xd9 });
        gbc.writeMem(0xd912, { 0x91, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd914);
        EXPECT(gbc.pc(), 0xb091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd912), 0x91);
        EXPECT(gbc.readMem(0xd913), 0xb0);
        // D9 009F
        gbc.setState(0x245e, 0xa39c, 0xbef0, 0x5169, 0xe99e, 0x1420, 0x0, 0x0);
        gbc.writeMem(0x245e, { 0xd9 });
        gbc.writeMem(0xa39c, { 0x73, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa39e);
        EXPECT(gbc.pc(), 0x9773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa39c), 0x73);
        EXPECT(gbc.readMem(0xa39d), 0x97);
        // D9 00A0
        gbc.setState(0xbee8, 0x2550, 0xba10, 0xd96c, 0xfefb, 0x33c5, 0x0, 0x0);
        gbc.writeMem(0x2550, { 0x6a, 0x44 });
        gbc.writeMem(0xbee8, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2552);
        EXPECT(gbc.pc(), 0x446a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbee8), 0xd9);
        // D9 00A1
        gbc.setState(0xa88f, 0x6018, 0x41a0, 0x3a3b, 0xf286, 0x7a12, 0x0, 0x0);
        gbc.writeMem(0x6018, { 0x75, 0x5a });
        gbc.writeMem(0xa88f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x601a);
        EXPECT(gbc.pc(), 0x5a75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa88f), 0xd9);
        // D9 00A2
        gbc.setState(0x61c5, 0x661f, 0x7a90, 0xa77e, 0x6c30, 0xc944, 0x1, 0x0);
        gbc.writeMem(0x61c5, { 0xd9 });
        gbc.writeMem(0x661f, { 0x38, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6621);
        EXPECT(gbc.pc(), 0x6d38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 00A3
        gbc.setState(0xa8d6, 0x2086, 0xef00, 0xfad2, 0xe4b1, 0xd69e, 0x1, 0x0);
        gbc.writeMem(0x2086, { 0x14, 0x85 });
        gbc.writeMem(0xa8d6, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2088);
        EXPECT(gbc.pc(), 0x8514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8d6), 0xd9);
        // D9 00A4
        gbc.setState(0x44df, 0x9254, 0x91d0, 0x47be, 0xd56e, 0xf157, 0x1, 0x0);
        gbc.writeMem(0x44df, { 0xd9 });
        gbc.writeMem(0x9254, { 0xb8, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9256);
        EXPECT(gbc.pc(), 0x45b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9254), 0xb8);
        EXPECT(gbc.readMem(0x9255), 0x45);
        // D9 00A6
        gbc.setState(0x3195, 0x3dd9, 0x79f0, 0x30ad, 0xa4e5, 0xfa44, 0x1, 0x0);
        gbc.writeMem(0x3195, { 0xd9 });
        gbc.writeMem(0x3dd9, { 0x94, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3ddb);
        EXPECT(gbc.pc(), 0x4794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 00A7
        gbc.setState(0xb981, 0xdda4, 0x9650, 0x928d, 0xad14, 0xa558, 0x1, 0x0);
        gbc.writeMem(0xb981, { 0xd9 });
        gbc.writeMem(0xdda4, { 0xa5, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xdda6);
        EXPECT(gbc.pc(), 0xd3a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb981), 0xd9);
        EXPECT(gbc.readMem(0xdda4), 0xa5);
        EXPECT(gbc.readMem(0xdda5), 0xd3);
        // D9 00A8
        gbc.setState(0xeaaa, 0xd11f, 0x7490, 0xb291, 0xf333, 0x5763, 0x1, 0x0);
        gbc.writeMem(0xd11f, { 0x91, 0x41 });
        gbc.writeMem(0xeaaa, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd121);
        EXPECT(gbc.pc(), 0x4191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd11f), 0x91);
        EXPECT(gbc.readMem(0xd120), 0x41);
        EXPECT(gbc.readMem(0xeaaa), 0xd9);
        // D9 00A9
        gbc.setState(0x4d88, 0x64ea, 0x3250, 0xb5f3, 0xab32, 0x1272, 0x0, 0x0);
        gbc.writeMem(0x4d88, { 0xd9 });
        gbc.writeMem(0x64ea, { 0x9c, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x64ec);
        EXPECT(gbc.pc(), 0x629c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 00AA
        gbc.setState(0x5b3, 0x1dd7, 0x7980, 0x7357, 0x70ab, 0x4481, 0x0, 0x1);
        gbc.writeMem(0x5b3, { 0xd9 });
        gbc.writeMem(0x1dd7, { 0x27, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1dd9);
        EXPECT(gbc.pc(), 0x8c27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 00AB
        gbc.setState(0x9370, 0x286a, 0x5d60, 0xc065, 0xca65, 0x40ff, 0x1, 0x0);
        gbc.writeMem(0x286a, { 0x7b, 0x5c });
        gbc.writeMem(0x9370, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x286c);
        EXPECT(gbc.pc(), 0x5c7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9370), 0xd9);
        // D9 00AD
        gbc.setState(0x1e5c, 0x7d0d, 0xe730, 0x5fdb, 0x8585, 0x51f6, 0x1, 0x0);
        gbc.writeMem(0x1e5c, { 0xd9 });
        gbc.writeMem(0x7d0d, { 0x41, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7d0f);
        EXPECT(gbc.pc(), 0x6941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 00AE
        gbc.setState(0x322b, 0x5537, 0xc000, 0x35b7, 0xe675, 0xf926, 0x0, 0x0);
        gbc.writeMem(0x322b, { 0xd9 });
        gbc.writeMem(0x5537, { 0x62, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5539);
        EXPECT(gbc.pc(), 0x3b62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 00AF
        gbc.setState(0x6936, 0xf7ba, 0x4cc0, 0xcc1c, 0x8afb, 0xb62e, 0x1, 0x1);
        gbc.writeMem(0x6936, { 0xd9 });
        gbc.writeMem(0xf7ba, { 0xb7, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf7bc);
        EXPECT(gbc.pc(), 0x8ab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf7ba), 0xb7);
        EXPECT(gbc.readMem(0xf7bb), 0x8a);
        // D9 00B0
        gbc.setState(0x5673, 0xf8fb, 0x3de0, 0x123b, 0xd760, 0xcc31, 0x1, 0x1);
        gbc.writeMem(0x5673, { 0xd9 });
        gbc.writeMem(0xf8fb, { 0x3f, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf8fd);
        EXPECT(gbc.pc(), 0x1b3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf8fb), 0x3f);
        EXPECT(gbc.readMem(0xf8fc), 0x1b);
        // D9 00B1
        gbc.setState(0xd324, 0xdcfe, 0x8e50, 0x14af, 0x7d78, 0x8993, 0x1, 0x1);
        gbc.writeMem(0xd324, { 0xd9 });
        gbc.writeMem(0xdcfe, { 0xe2, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xdd00);
        EXPECT(gbc.pc(), 0xfe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd324), 0xd9);
        EXPECT(gbc.readMem(0xdcfe), 0xe2);
        EXPECT(gbc.readMem(0xdcff), 0xf);
        // D9 00B2
        gbc.setState(0x53d9, 0xc62, 0xcb00, 0x6d07, 0xd3c5, 0x374d, 0x1, 0x0);
        gbc.writeMem(0xc62, { 0x82, 0x3b });
        gbc.writeMem(0x53d9, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc64);
        EXPECT(gbc.pc(), 0x3b82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 00B3
        gbc.setState(0xc01, 0xd835, 0x1340, 0xb9cc, 0x38a3, 0x83fb, 0x1, 0x1);
        gbc.writeMem(0xc01, { 0xd9 });
        gbc.writeMem(0xd835, { 0xea, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd837);
        EXPECT(gbc.pc(), 0x4ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd835), 0xea);
        EXPECT(gbc.readMem(0xd836), 0x4);
        // D9 00B5
        gbc.setState(0xbc65, 0x1b4e, 0xae70, 0xb6ef, 0xc7a6, 0xbee3, 0x0, 0x0);
        gbc.writeMem(0x1b4e, { 0xb7, 0x35 });
        gbc.writeMem(0xbc65, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1b50);
        EXPECT(gbc.pc(), 0x35b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc65), 0xd9);
        // D9 00B6
        gbc.setState(0x7196, 0x2f32, 0xb060, 0x4ba2, 0xd539, 0x87ab, 0x0, 0x1);
        gbc.writeMem(0x2f32, { 0x7b, 0xbd });
        gbc.writeMem(0x7196, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2f34);
        EXPECT(gbc.pc(), 0xbd7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 00B7
        gbc.setState(0x205f, 0xebe, 0xbaa0, 0x795b, 0x4be9, 0x4f24, 0x0, 0x1);
        gbc.writeMem(0xebe, { 0xdd, 0xcd });
        gbc.writeMem(0x205f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xec0);
        EXPECT(gbc.pc(), 0xcddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 00B8
        gbc.setState(0x40f4, 0x6fda, 0xa5d0, 0xa4e6, 0x7f54, 0x866a, 0x1, 0x0);
        gbc.writeMem(0x40f4, { 0xd9 });
        gbc.writeMem(0x6fda, { 0x5, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6fdc);
        EXPECT(gbc.pc(), 0xbd05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 00B9
        gbc.setState(0x19c7, 0x93d3, 0xb750, 0xb1b, 0xeee7, 0xf89a, 0x1, 0x1);
        gbc.writeMem(0x19c7, { 0xd9 });
        gbc.writeMem(0x93d3, { 0x4e, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x93d5);
        EXPECT(gbc.pc(), 0x544e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93d3), 0x4e);
        EXPECT(gbc.readMem(0x93d4), 0x54);
        // D9 00BA
        gbc.setState(0x8adb, 0x68ff, 0x7250, 0xd783, 0xc1e, 0x370b, 0x1, 0x0);
        gbc.writeMem(0x68ff, { 0x29, 0x67 });
        gbc.writeMem(0x8adb, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6901);
        EXPECT(gbc.pc(), 0x6729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8adb), 0xd9);
        // D9 00BB
        gbc.setState(0x2594, 0x9d96, 0x6670, 0xa28c, 0x853d, 0xfe1c, 0x0, 0x1);
        gbc.writeMem(0x2594, { 0xd9 });
        gbc.writeMem(0x9d96, { 0xa3, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9d98);
        EXPECT(gbc.pc(), 0x41a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d96), 0xa3);
        EXPECT(gbc.readMem(0x9d97), 0x41);
        // D9 00BC
        gbc.setState(0x5ebb, 0xb37a, 0x9f0, 0xfaa0, 0x711e, 0xdf1f, 0x1, 0x1);
        gbc.writeMem(0x5ebb, { 0xd9 });
        gbc.writeMem(0xb37a, { 0xd1, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb37c);
        EXPECT(gbc.pc(), 0xdd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb37a), 0xd1);
        EXPECT(gbc.readMem(0xb37b), 0xd);
        // D9 00BD
        gbc.setState(0x1958, 0xcb31, 0xe060, 0xe8ec, 0x53cc, 0xcb0, 0x0, 0x0);
        gbc.writeMem(0x1958, { 0xd9 });
        gbc.writeMem(0xcb31, { 0x37, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xcb33);
        EXPECT(gbc.pc(), 0xc337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb31), 0x37);
        EXPECT(gbc.readMem(0xcb32), 0xc3);
        // D9 00BE
        gbc.setState(0x6134, 0x1827, 0xeb40, 0x437b, 0x1dc7, 0xf34b, 0x1, 0x0);
        gbc.writeMem(0x1827, { 0x4c, 0x5e });
        gbc.writeMem(0x6134, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1829);
        EXPECT(gbc.pc(), 0x5e4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 00BF
        gbc.setState(0x84f1, 0xacb0, 0xbe60, 0x9764, 0xc4fb, 0xc403, 0x0, 0x1);
        gbc.writeMem(0x84f1, { 0xd9 });
        gbc.writeMem(0xacb0, { 0xe1, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xacb2);
        EXPECT(gbc.pc(), 0xee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84f1), 0xd9);
        EXPECT(gbc.readMem(0xacb0), 0xe1);
        EXPECT(gbc.readMem(0xacb1), 0xe);
        // D9 00C0
        gbc.setState(0x4728, 0x7c0d, 0xe8d0, 0xdce8, 0xbf0, 0xdf11, 0x1, 0x1);
        gbc.writeMem(0x4728, { 0xd9 });
        gbc.writeMem(0x7c0d, { 0xdd, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7c0f);
        EXPECT(gbc.pc(), 0x7fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 00C1
        gbc.setState(0xb779, 0xa67f, 0xa190, 0x55e9, 0x2680, 0x2c3c, 0x1, 0x0);
        gbc.writeMem(0xa67f, { 0x8, 0x61 });
        gbc.writeMem(0xb779, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa681);
        EXPECT(gbc.pc(), 0x6108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa67f), 0x8);
        EXPECT(gbc.readMem(0xa680), 0x61);
        EXPECT(gbc.readMem(0xb779), 0xd9);
        // D9 00C2
        gbc.setState(0x7114, 0xcc60, 0x9940, 0xb1ad, 0x8df5, 0x38fb, 0x0, 0x1);
        gbc.writeMem(0x7114, { 0xd9 });
        gbc.writeMem(0xcc60, { 0xf9, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xcc62);
        EXPECT(gbc.pc(), 0xb5f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc60), 0xf9);
        EXPECT(gbc.readMem(0xcc61), 0xb5);
        // D9 00C3
        gbc.setState(0x3fab, 0xee80, 0x4550, 0xfb5c, 0x4abd, 0x9e65, 0x1, 0x0);
        gbc.writeMem(0x3fab, { 0xd9 });
        gbc.writeMem(0xee80, { 0x30, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xee82);
        EXPECT(gbc.pc(), 0xd030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee80), 0x30);
        EXPECT(gbc.readMem(0xee81), 0xd0);
        // D9 00C5
        gbc.setState(0xa042, 0xd01, 0xd6b0, 0x87ee, 0x2479, 0x6923, 0x0, 0x0);
        gbc.writeMem(0xd01, { 0x65, 0x43 });
        gbc.writeMem(0xa042, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd03);
        EXPECT(gbc.pc(), 0x4365);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa042), 0xd9);
        // D9 00C6
        gbc.setState(0xe0b4, 0x2d2f, 0x85f0, 0x8e02, 0x2647, 0x2e16, 0x1, 0x0);
        gbc.writeMem(0x2d2f, { 0x56, 0x6b });
        gbc.writeMem(0xe0b4, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2d31);
        EXPECT(gbc.pc(), 0x6b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0b4), 0xd9);
        // D9 00C7
        gbc.setState(0xcd8a, 0x18a8, 0x9150, 0x9896, 0x3c2b, 0x262e, 0x0, 0x1);
        gbc.writeMem(0x18a8, { 0x1e, 0x74 });
        gbc.writeMem(0xcd8a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x18aa);
        EXPECT(gbc.pc(), 0x741e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd8a), 0xd9);
        // D9 00C8
        gbc.setState(0xbbae, 0x65d0, 0x9870, 0x89b, 0xec69, 0x2e9c, 0x0, 0x0);
        gbc.writeMem(0x65d0, { 0x22, 0x9c });
        gbc.writeMem(0xbbae, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x65d2);
        EXPECT(gbc.pc(), 0x9c22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbae), 0xd9);
        // D9 00C9
        gbc.setState(0x8908, 0x5724, 0xe870, 0xe415, 0x2a54, 0x4c89, 0x1, 0x0);
        gbc.writeMem(0x5724, { 0x7d, 0x19 });
        gbc.writeMem(0x8908, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5726);
        EXPECT(gbc.pc(), 0x197d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8908), 0xd9);
        // D9 00CB
        gbc.setState(0x9ff8, 0x2bcb, 0xb170, 0xcdae, 0x573d, 0x1acf, 0x1, 0x1);
        gbc.writeMem(0x2bcb, { 0xad, 0x90 });
        gbc.writeMem(0x9ff8, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2bcd);
        EXPECT(gbc.pc(), 0x90ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ff8), 0xd9);
        // D9 00CC
        gbc.setState(0x287e, 0xd4cb, 0x1fb0, 0x13e7, 0x802b, 0x8b7, 0x1, 0x0);
        gbc.writeMem(0x287e, { 0xd9 });
        gbc.writeMem(0xd4cb, { 0x1, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd4cd);
        EXPECT(gbc.pc(), 0x8f01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4cb), 0x1);
        EXPECT(gbc.readMem(0xd4cc), 0x8f);
        // D9 00CD
        gbc.setState(0x2096, 0x56e0, 0x7630, 0xaf0, 0x9937, 0x9c8, 0x0, 0x1);
        gbc.writeMem(0x2096, { 0xd9 });
        gbc.writeMem(0x56e0, { 0xc1, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x56e2);
        EXPECT(gbc.pc(), 0x7c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 00CE
        gbc.setState(0x4b85, 0x71c8, 0x1720, 0xefef, 0x7afa, 0x5932, 0x1, 0x1);
        gbc.writeMem(0x4b85, { 0xd9 });
        gbc.writeMem(0x71c8, { 0x98, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x71ca);
        EXPECT(gbc.pc(), 0x5098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 00CF
        gbc.setState(0x18b, 0xc23d, 0x93c0, 0xa9c5, 0xdede, 0x64d8, 0x1, 0x0);
        gbc.writeMem(0x18b, { 0xd9 });
        gbc.writeMem(0xc23d, { 0x5a, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc23f);
        EXPECT(gbc.pc(), 0xf45a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc23d), 0x5a);
        EXPECT(gbc.readMem(0xc23e), 0xf4);
        // D9 00D0
        gbc.setState(0x89b6, 0x7f4f, 0x2910, 0x8041, 0x2ea9, 0xfbe1, 0x1, 0x0);
        gbc.writeMem(0x7f4f, { 0xd2, 0x30 });
        gbc.writeMem(0x89b6, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7f51);
        EXPECT(gbc.pc(), 0x30d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89b6), 0xd9);
        // D9 00D2
        gbc.setState(0x256, 0xebbd, 0x6b00, 0x32b6, 0xaf75, 0xfff4, 0x0, 0x0);
        gbc.writeMem(0x256, { 0xd9 });
        gbc.writeMem(0xebbd, { 0xd3, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xebbf);
        EXPECT(gbc.pc(), 0x16d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebbd), 0xd3);
        EXPECT(gbc.readMem(0xebbe), 0x16);
        // D9 00D3
        gbc.setState(0x3ba3, 0xb8d1, 0x4be0, 0x5ce0, 0x607f, 0xfe6f, 0x1, 0x0);
        gbc.writeMem(0x3ba3, { 0xd9 });
        gbc.writeMem(0xb8d1, { 0x1c, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb8d3);
        EXPECT(gbc.pc(), 0x9e1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8d1), 0x1c);
        EXPECT(gbc.readMem(0xb8d2), 0x9e);
        // D9 00D4
        gbc.setState(0x57a, 0x525d, 0x2350, 0x412a, 0x933, 0xaa0a, 0x1, 0x0);
        gbc.writeMem(0x57a, { 0xd9 });
        gbc.writeMem(0x525d, { 0x43, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x525f);
        EXPECT(gbc.pc(), 0x7c43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 00D5
        gbc.setState(0xb0c7, 0x8d1b, 0x5770, 0x8851, 0xb7b8, 0x20d0, 0x0, 0x1);
        gbc.writeMem(0x8d1b, { 0x5d, 0x3e });
        gbc.writeMem(0xb0c7, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8d1d);
        EXPECT(gbc.pc(), 0x3e5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d1b), 0x5d);
        EXPECT(gbc.readMem(0x8d1c), 0x3e);
        EXPECT(gbc.readMem(0xb0c7), 0xd9);
        // D9 00D6
        gbc.setState(0x6a7b, 0xd43f, 0xb190, 0xef5a, 0x6e9, 0x9145, 0x1, 0x1);
        gbc.writeMem(0x6a7b, { 0xd9 });
        gbc.writeMem(0xd43f, { 0x84, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd441);
        EXPECT(gbc.pc(), 0x2784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd43f), 0x84);
        EXPECT(gbc.readMem(0xd440), 0x27);
        // D9 00D7
        gbc.setState(0x4e40, 0x7e86, 0xfbd0, 0x8b89, 0x4f76, 0xdc23, 0x1, 0x1);
        gbc.writeMem(0x4e40, { 0xd9 });
        gbc.writeMem(0x7e86, { 0x52, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7e88);
        EXPECT(gbc.pc(), 0x2b52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 00D8
        gbc.setState(0xb7bc, 0xa1f9, 0x1c90, 0x6bc, 0x76d4, 0x6e8f, 0x1, 0x1);
        gbc.writeMem(0xa1f9, { 0x9e, 0x2 });
        gbc.writeMem(0xb7bc, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa1fb);
        EXPECT(gbc.pc(), 0x29e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f9), 0x9e);
        EXPECT(gbc.readMem(0xa1fa), 0x2);
        EXPECT(gbc.readMem(0xb7bc), 0xd9);
        // D9 00D9
        gbc.setState(0x3bba, 0xa8b8, 0x7140, 0xf4ec, 0x1f42, 0x9d47, 0x0, 0x1);
        gbc.writeMem(0x3bba, { 0xd9 });
        gbc.writeMem(0xa8b8, { 0xa6, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa8ba);
        EXPECT(gbc.pc(), 0x73a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8b8), 0xa6);
        EXPECT(gbc.readMem(0xa8b9), 0x73);
        // D9 00DA
        gbc.setState(0x62a6, 0x1a34, 0xc350, 0x91f6, 0x4302, 0x9e57, 0x0, 0x0);
        gbc.writeMem(0x1a34, { 0xd9, 0x14 });
        gbc.writeMem(0x62a6, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x1a36);
        EXPECT(gbc.pc(), 0x14d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 00DB
        gbc.setState(0xa722, 0x1b25, 0x470, 0xf691, 0x96a, 0xbded, 0x1, 0x1);
        gbc.writeMem(0x1b25, { 0x87, 0xd4 });
        gbc.writeMem(0xa722, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1b27);
        EXPECT(gbc.pc(), 0xd487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa722), 0xd9);
        // D9 00DC
        gbc.setState(0x4fcf, 0x24de, 0xf650, 0x2964, 0x42e1, 0x7012, 0x1, 0x1);
        gbc.writeMem(0x24de, { 0x7d, 0x38 });
        gbc.writeMem(0x4fcf, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x24e0);
        EXPECT(gbc.pc(), 0x387d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 00DD
        gbc.setState(0xb1f8, 0xa8e9, 0xf850, 0x4079, 0xc571, 0x3a5a, 0x0, 0x0);
        gbc.writeMem(0xa8e9, { 0x75, 0x78 });
        gbc.writeMem(0xb1f8, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa8eb);
        EXPECT(gbc.pc(), 0x7875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8e9), 0x75);
        EXPECT(gbc.readMem(0xa8ea), 0x78);
        EXPECT(gbc.readMem(0xb1f8), 0xd9);
        // D9 00DE
        gbc.setState(0xb0e5, 0x98eb, 0xf40, 0xac9c, 0xc2c2, 0xbd1c, 0x1, 0x0);
        gbc.writeMem(0x98eb, { 0xd1, 0x29 });
        gbc.writeMem(0xb0e5, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x98ed);
        EXPECT(gbc.pc(), 0x29d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98eb), 0xd1);
        EXPECT(gbc.readMem(0x98ec), 0x29);
        EXPECT(gbc.readMem(0xb0e5), 0xd9);
        // D9 00DF
        gbc.setState(0x3236, 0xb2e3, 0xb2a0, 0xd50a, 0xcd23, 0x8302, 0x1, 0x1);
        gbc.writeMem(0x3236, { 0xd9 });
        gbc.writeMem(0xb2e3, { 0x75, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb2e5);
        EXPECT(gbc.pc(), 0x4a75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e3), 0x75);
        EXPECT(gbc.readMem(0xb2e4), 0x4a);
        // D9 00E0
        gbc.setState(0x36e9, 0x6426, 0xf0f0, 0x887d, 0xe6ee, 0x9419, 0x0, 0x0);
        gbc.writeMem(0x36e9, { 0xd9 });
        gbc.writeMem(0x6426, { 0xf6, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6428);
        EXPECT(gbc.pc(), 0x19f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 00E1
        gbc.setState(0x5653, 0xe013, 0x3a50, 0x8e1e, 0xd328, 0x4c9b, 0x0, 0x0);
        gbc.writeMem(0x5653, { 0xd9 });
        gbc.writeMem(0xe013, { 0xb8, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe015);
        EXPECT(gbc.pc(), 0x6db8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe013), 0xb8);
        EXPECT(gbc.readMem(0xe014), 0x6d);
        // D9 00E2
        gbc.setState(0x512e, 0xf836, 0x4da0, 0xe7e4, 0x2bb3, 0xa2f7, 0x0, 0x1);
        gbc.writeMem(0x512e, { 0xd9 });
        gbc.writeMem(0xf836, { 0x75, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf838);
        EXPECT(gbc.pc(), 0x175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf836), 0x75);
        EXPECT(gbc.readMem(0xf837), 0x1);
        // D9 00E3
        gbc.setState(0x7356, 0xf884, 0xc1d0, 0x6f24, 0x82ee, 0x1f7e, 0x0, 0x0);
        gbc.writeMem(0x7356, { 0xd9 });
        gbc.writeMem(0xf884, { 0x94, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf886);
        EXPECT(gbc.pc(), 0xb94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf884), 0x94);
        EXPECT(gbc.readMem(0xf885), 0xb);
        // D9 00E4
        gbc.setState(0xcf26, 0x6a7a, 0x5d60, 0x85f3, 0xf4b6, 0x465c, 0x0, 0x1);
        gbc.writeMem(0x6a7a, { 0x2c, 0xf5 });
        gbc.writeMem(0xcf26, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6a7c);
        EXPECT(gbc.pc(), 0xf52c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf26), 0xd9);
        // D9 00E5
        gbc.setState(0xe326, 0x25cf, 0xb70, 0x4735, 0xd19a, 0xf7a0, 0x1, 0x0);
        gbc.writeMem(0x25cf, { 0x9a, 0x23 });
        gbc.writeMem(0xe326, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x25d1);
        EXPECT(gbc.pc(), 0x239a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe326), 0xd9);
        // D9 00E6
        gbc.setState(0xed92, 0x7108, 0x7950, 0xce7, 0x75ce, 0x392c, 0x0, 0x0);
        gbc.writeMem(0x7108, { 0x45, 0xb });
        gbc.writeMem(0xed92, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x710a);
        EXPECT(gbc.pc(), 0xb45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed92), 0xd9);
        // D9 00E7
        gbc.setState(0xd645, 0x915e, 0xd2a0, 0x21e5, 0x395e, 0x1a5f, 0x1, 0x1);
        gbc.writeMem(0x915e, { 0xc5, 0x85 });
        gbc.writeMem(0xd645, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9160);
        EXPECT(gbc.pc(), 0x85c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x915e), 0xc5);
        EXPECT(gbc.readMem(0x915f), 0x85);
        EXPECT(gbc.readMem(0xd645), 0xd9);
        // D9 00E8
        gbc.setState(0x50f2, 0xca4d, 0xe180, 0x528b, 0x34c, 0x36fa, 0x0, 0x1);
        gbc.writeMem(0x50f2, { 0xd9 });
        gbc.writeMem(0xca4d, { 0x17, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xca4f);
        EXPECT(gbc.pc(), 0x6017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca4d), 0x17);
        EXPECT(gbc.readMem(0xca4e), 0x60);
        // D9 00E9
        gbc.setState(0x451c, 0x529, 0x8910, 0x8424, 0x6e77, 0x4c0, 0x0, 0x0);
        gbc.writeMem(0x529, { 0x7d, 0x21 });
        gbc.writeMem(0x451c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x52b);
        EXPECT(gbc.pc(), 0x217d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 00EB
        gbc.setState(0xe568, 0xb19f, 0xa830, 0x9f06, 0x27e3, 0xc082, 0x0, 0x1);
        gbc.writeMem(0xb19f, { 0xb1, 0x77 });
        gbc.writeMem(0xe568, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb1a1);
        EXPECT(gbc.pc(), 0x77b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb19f), 0xb1);
        EXPECT(gbc.readMem(0xb1a0), 0x77);
        EXPECT(gbc.readMem(0xe568), 0xd9);
        // D9 00EC
        gbc.setState(0x9a2c, 0x6306, 0xd400, 0x2e70, 0x6a45, 0x8c07, 0x0, 0x0);
        gbc.writeMem(0x6306, { 0x8f, 0xfa });
        gbc.writeMem(0x9a2c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6308);
        EXPECT(gbc.pc(), 0xfa8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a2c), 0xd9);
        // D9 00ED
        gbc.setState(0x4a1, 0xea2f, 0x2b40, 0xf4d2, 0x21dd, 0x778, 0x0, 0x0);
        gbc.writeMem(0x4a1, { 0xd9 });
        gbc.writeMem(0xea2f, { 0x98, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xea31);
        EXPECT(gbc.pc(), 0x998);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea2f), 0x98);
        EXPECT(gbc.readMem(0xea30), 0x9);
        // D9 00EE
        gbc.setState(0x14e7, 0x6b0f, 0xa940, 0x64c0, 0x8a0, 0x64c7, 0x0, 0x0);
        gbc.writeMem(0x14e7, { 0xd9 });
        gbc.writeMem(0x6b0f, { 0x6b, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6b11);
        EXPECT(gbc.pc(), 0xea6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 00EF
        gbc.setState(0xb80a, 0x8d3a, 0xf900, 0x149c, 0xd02b, 0xbfb6, 0x0, 0x0);
        gbc.writeMem(0x8d3a, { 0xe3, 0x3f });
        gbc.writeMem(0xb80a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8d3c);
        EXPECT(gbc.pc(), 0x3fe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d3a), 0xe3);
        EXPECT(gbc.readMem(0x8d3b), 0x3f);
        EXPECT(gbc.readMem(0xb80a), 0xd9);
        // D9 00F0
        gbc.setState(0x68b2, 0x569, 0x8470, 0x70e5, 0x82a7, 0xc47f, 0x1, 0x1);
        gbc.writeMem(0x569, { 0x37, 0x1e });
        gbc.writeMem(0x68b2, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x56b);
        EXPECT(gbc.pc(), 0x1e37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 00F1
        gbc.setState(0x8adb, 0xdc00, 0xac60, 0x8ec4, 0xb52a, 0x8d62, 0x1, 0x0);
        gbc.writeMem(0x8adb, { 0xd9 });
        gbc.writeMem(0xdc00, { 0xc6, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xdc02);
        EXPECT(gbc.pc(), 0xf0c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8adb), 0xd9);
        EXPECT(gbc.readMem(0xdc00), 0xc6);
        EXPECT(gbc.readMem(0xdc01), 0xf0);
        // D9 00F2
        gbc.setState(0x259b, 0xc7d0, 0x76c0, 0x3ebc, 0xf581, 0x8f2f, 0x0, 0x1);
        gbc.writeMem(0x259b, { 0xd9 });
        gbc.writeMem(0xc7d0, { 0xc6, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc7d2);
        EXPECT(gbc.pc(), 0xe1c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7d0), 0xc6);
        EXPECT(gbc.readMem(0xc7d1), 0xe1);
        // D9 00F3
        gbc.setState(0xc8ec, 0xdb4d, 0xbce0, 0x7cd2, 0x4b92, 0xa0cc, 0x0, 0x1);
        gbc.writeMem(0xc8ec, { 0xd9 });
        gbc.writeMem(0xdb4d, { 0xa3, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xdb4f);
        EXPECT(gbc.pc(), 0x47a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ec), 0xd9);
        EXPECT(gbc.readMem(0xdb4d), 0xa3);
        EXPECT(gbc.readMem(0xdb4e), 0x47);
        // D9 00F4
        gbc.setState(0x119e, 0x16af, 0x9f10, 0xc72c, 0xc28a, 0xbf82, 0x1, 0x0);
        gbc.writeMem(0x119e, { 0xd9 });
        gbc.writeMem(0x16af, { 0xc5, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x16b1);
        EXPECT(gbc.pc(), 0x5dc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 00F5
        gbc.setState(0x9b91, 0x611a, 0xbf50, 0xee5, 0x49ce, 0xa28f, 0x0, 0x0);
        gbc.writeMem(0x611a, { 0x67, 0x21 });
        gbc.writeMem(0x9b91, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x611c);
        EXPECT(gbc.pc(), 0x2167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b91), 0xd9);
        // D9 00F6
        gbc.setState(0xb010, 0xbf5f, 0x2440, 0x74c6, 0x1629, 0x1595, 0x1, 0x0);
        gbc.writeMem(0xb010, { 0xd9 });
        gbc.writeMem(0xbf5f, { 0x7a, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xbf61);
        EXPECT(gbc.pc(), 0x8c7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb010), 0xd9);
        EXPECT(gbc.readMem(0xbf5f), 0x7a);
        EXPECT(gbc.readMem(0xbf60), 0x8c);
        // D9 00F7
        gbc.setState(0x159c, 0x5855, 0xb2e0, 0xdc48, 0xc5cb, 0xc1c8, 0x1, 0x1);
        gbc.writeMem(0x159c, { 0xd9 });
        gbc.writeMem(0x5855, { 0xc, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5857);
        EXPECT(gbc.pc(), 0xbe0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 00F8
        gbc.setState(0xd356, 0x8bf7, 0x8210, 0x206f, 0x38d6, 0xd927, 0x0, 0x0);
        gbc.writeMem(0x8bf7, { 0x12, 0x8b });
        gbc.writeMem(0xd356, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8bf9);
        EXPECT(gbc.pc(), 0x8b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bf7), 0x12);
        EXPECT(gbc.readMem(0x8bf8), 0x8b);
        EXPECT(gbc.readMem(0xd356), 0xd9);
        // D9 00F9
        gbc.setState(0x955b, 0x9cf3, 0x2f60, 0xbd2e, 0x27cb, 0x167e, 0x0, 0x1);
        gbc.writeMem(0x955b, { 0xd9 });
        gbc.writeMem(0x9cf3, { 0xf0, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9cf5);
        EXPECT(gbc.pc(), 0x51f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x955b), 0xd9);
        EXPECT(gbc.readMem(0x9cf3), 0xf0);
        EXPECT(gbc.readMem(0x9cf4), 0x51);
        // D9 00FA
        gbc.setState(0xb2cb, 0xd2bb, 0xecf0, 0xa7, 0xf559, 0x82da, 0x1, 0x0);
        gbc.writeMem(0xb2cb, { 0xd9 });
        gbc.writeMem(0xd2bb, { 0xa1, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd2bd);
        EXPECT(gbc.pc(), 0x60a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2cb), 0xd9);
        EXPECT(gbc.readMem(0xd2bb), 0xa1);
        EXPECT(gbc.readMem(0xd2bc), 0x60);
        // D9 00FB
        gbc.setState(0xaf47, 0xa6c9, 0x1490, 0x88a8, 0x1c7d, 0x2541, 0x1, 0x1);
        gbc.writeMem(0xa6c9, { 0x29, 0x1d });
        gbc.writeMem(0xaf47, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa6cb);
        EXPECT(gbc.pc(), 0x1d29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6c9), 0x29);
        EXPECT(gbc.readMem(0xa6ca), 0x1d);
        EXPECT(gbc.readMem(0xaf47), 0xd9);
        // D9 00FC
        gbc.setState(0xcae9, 0x86ae, 0x5c60, 0x1aaa, 0xc2e, 0x8392, 0x1, 0x0);
        gbc.writeMem(0x86ae, { 0x76, 0xe3 });
        gbc.writeMem(0xcae9, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x86b0);
        EXPECT(gbc.pc(), 0xe376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ae), 0x76);
        EXPECT(gbc.readMem(0x86af), 0xe3);
        EXPECT(gbc.readMem(0xcae9), 0xd9);
        // D9 00FD
        gbc.setState(0x7d57, 0xd3e0, 0x5600, 0x9f63, 0xd980, 0x46fc, 0x1, 0x0);
        gbc.writeMem(0x7d57, { 0xd9 });
        gbc.writeMem(0xd3e0, { 0x1, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd3e2);
        EXPECT(gbc.pc(), 0xac01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3e0), 0x1);
        EXPECT(gbc.readMem(0xd3e1), 0xac);
        // D9 00FE
        gbc.setState(0x414d, 0x9b7e, 0x2f90, 0xff0f, 0x875e, 0x6af, 0x0, 0x0);
        gbc.writeMem(0x414d, { 0xd9 });
        gbc.writeMem(0x9b7e, { 0x9f, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9b80);
        EXPECT(gbc.pc(), 0xec9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b7e), 0x9f);
        EXPECT(gbc.readMem(0x9b7f), 0xec);
        // D9 00FF
        gbc.setState(0x8209, 0xcff6, 0x4580, 0xb0e2, 0xbe8b, 0xc53f, 0x1, 0x1);
        gbc.writeMem(0x8209, { 0xd9 });
        gbc.writeMem(0xcff6, { 0x6c, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xcff8);
        EXPECT(gbc.pc(), 0x66c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8209), 0xd9);
        EXPECT(gbc.readMem(0xcff6), 0x6c);
        EXPECT(gbc.readMem(0xcff7), 0x6);
        // D9 0100
        gbc.setState(0x8b29, 0xfb05, 0x2a90, 0xe1d, 0xf0fe, 0x1ad4, 0x0, 0x1);
        gbc.writeMem(0x8b29, { 0xd9 });
        gbc.writeMem(0xfb05, { 0xe3, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfb07);
        EXPECT(gbc.pc(), 0x99e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b29), 0xd9);
        EXPECT(gbc.readMem(0xfb05), 0xe3);
        EXPECT(gbc.readMem(0xfb06), 0x99);
        // D9 0101
        gbc.setState(0xb05f, 0x2787, 0x1920, 0x81f0, 0x30eb, 0x240e, 0x0, 0x1);
        gbc.writeMem(0x2787, { 0xa4, 0x7 });
        gbc.writeMem(0xb05f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2789);
        EXPECT(gbc.pc(), 0x7a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb05f), 0xd9);
        // D9 0102
        gbc.setState(0xb7d6, 0xa634, 0x5680, 0xf63c, 0x4f82, 0xa70a, 0x1, 0x0);
        gbc.writeMem(0xa634, { 0xe3, 0x7f });
        gbc.writeMem(0xb7d6, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa636);
        EXPECT(gbc.pc(), 0x7fe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa634), 0xe3);
        EXPECT(gbc.readMem(0xa635), 0x7f);
        EXPECT(gbc.readMem(0xb7d6), 0xd9);
        // D9 0103
        gbc.setState(0xb8dc, 0x9afb, 0x4c90, 0x9b58, 0x5a51, 0x8e3b, 0x1, 0x1);
        gbc.writeMem(0x9afb, { 0xe5, 0x31 });
        gbc.writeMem(0xb8dc, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9afd);
        EXPECT(gbc.pc(), 0x31e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9afb), 0xe5);
        EXPECT(gbc.readMem(0x9afc), 0x31);
        EXPECT(gbc.readMem(0xb8dc), 0xd9);
        // D9 0105
        gbc.setState(0x9baf, 0x57c7, 0xdb40, 0x1ae3, 0xfeef, 0xd05d, 0x1, 0x1);
        gbc.writeMem(0x57c7, { 0x7b, 0xa1 });
        gbc.writeMem(0x9baf, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x57c9);
        EXPECT(gbc.pc(), 0xa17b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9baf), 0xd9);
        // D9 0106
        gbc.setState(0x8ae1, 0xfee8, 0x1be0, 0x5a55, 0x2fa, 0x8573, 0x0, 0x0);
        gbc.writeMem(0x8ae1, { 0xd9 });
        gbc.writeMem(0xfee8, { 0xe1, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xfeea);
        EXPECT(gbc.pc(), 0x41e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ae1), 0xd9);
        EXPECT(gbc.readMem(0xfee8), 0xe1);
        EXPECT(gbc.readMem(0xfee9), 0x41);
        // D9 0107
        gbc.setState(0x82cb, 0x4635, 0xe60, 0x1fbd, 0x30f9, 0x5324, 0x1, 0x0);
        gbc.writeMem(0x4635, { 0x6a, 0x7e });
        gbc.writeMem(0x82cb, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4637);
        EXPECT(gbc.pc(), 0x7e6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82cb), 0xd9);
        // D9 0108
        gbc.setState(0xd40b, 0xdc46, 0x76a0, 0x479d, 0x4347, 0xcc0c, 0x1, 0x0);
        gbc.writeMem(0xd40b, { 0xd9 });
        gbc.writeMem(0xdc46, { 0x73, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xdc48);
        EXPECT(gbc.pc(), 0xe473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd40b), 0xd9);
        EXPECT(gbc.readMem(0xdc46), 0x73);
        EXPECT(gbc.readMem(0xdc47), 0xe4);
        // D9 0109
        gbc.setState(0x3bbc, 0xd5be, 0x1920, 0xfe91, 0xd51e, 0x2dc9, 0x1, 0x0);
        gbc.writeMem(0x3bbc, { 0xd9 });
        gbc.writeMem(0xd5be, { 0xa5, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd5c0);
        EXPECT(gbc.pc(), 0x54a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5be), 0xa5);
        EXPECT(gbc.readMem(0xd5bf), 0x54);
        // D9 010A
        gbc.setState(0xcf49, 0x6c6, 0xd6c0, 0xbf5b, 0xff10, 0xa7af, 0x0, 0x1);
        gbc.writeMem(0x6c6, { 0x52, 0x73 });
        gbc.writeMem(0xcf49, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6c8);
        EXPECT(gbc.pc(), 0x7352);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf49), 0xd9);
        // D9 010B
        gbc.setState(0x89a1, 0x2d94, 0xcc20, 0xd1cb, 0x8b4e, 0x3763, 0x1, 0x1);
        gbc.writeMem(0x2d94, { 0xbd, 0x6f });
        gbc.writeMem(0x89a1, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2d96);
        EXPECT(gbc.pc(), 0x6fbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89a1), 0xd9);
        // D9 010C
        gbc.setState(0xdb5e, 0xe947, 0x8850, 0x362c, 0x2b0a, 0x94f4, 0x0, 0x1);
        gbc.writeMem(0xdb5e, { 0xd9 });
        gbc.writeMem(0xe947, { 0x43, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe949);
        EXPECT(gbc.pc(), 0xa043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb5e), 0xd9);
        EXPECT(gbc.readMem(0xe947), 0x43);
        EXPECT(gbc.readMem(0xe948), 0xa0);
        // D9 010D
        gbc.setState(0xc940, 0x2ac, 0x8530, 0xfa73, 0xfe95, 0x8194, 0x1, 0x1);
        gbc.writeMem(0x2ac, { 0xde, 0x62 });
        gbc.writeMem(0xc940, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2ae);
        EXPECT(gbc.pc(), 0x62de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc940), 0xd9);
        // D9 010E
        gbc.setState(0x2418, 0xfabe, 0xb880, 0x7d80, 0xedb, 0x444c, 0x1, 0x1);
        gbc.writeMem(0x2418, { 0xd9 });
        gbc.writeMem(0xfabe, { 0x8d, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfac0);
        EXPECT(gbc.pc(), 0xdc8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfabe), 0x8d);
        EXPECT(gbc.readMem(0xfabf), 0xdc);
        // D9 0110
        gbc.setState(0x128d, 0xc249, 0x3b30, 0x4254, 0x5c48, 0x99f9, 0x1, 0x0);
        gbc.writeMem(0x128d, { 0xd9 });
        gbc.writeMem(0xc249, { 0xac, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc24b);
        EXPECT(gbc.pc(), 0x7bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc249), 0xac);
        EXPECT(gbc.readMem(0xc24a), 0x7b);
        // D9 0111
        gbc.setState(0x3b82, 0x7431, 0x9490, 0x792c, 0xd6d4, 0xd89d, 0x1, 0x0);
        gbc.writeMem(0x3b82, { 0xd9 });
        gbc.writeMem(0x7431, { 0xec, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7433);
        EXPECT(gbc.pc(), 0xd4ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 0112
        gbc.setState(0xd5f2, 0xe4b9, 0xec70, 0xcc35, 0xea68, 0x651, 0x1, 0x1);
        gbc.writeMem(0xd5f2, { 0xd9 });
        gbc.writeMem(0xe4b9, { 0x63, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe4bb);
        EXPECT(gbc.pc(), 0x7f63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5f2), 0xd9);
        EXPECT(gbc.readMem(0xe4b9), 0x63);
        EXPECT(gbc.readMem(0xe4ba), 0x7f);
        // D9 0113
        gbc.setState(0xccdb, 0x297, 0x3100, 0x26d7, 0x44a6, 0x10d8, 0x0, 0x1);
        gbc.writeMem(0x297, { 0x57, 0x44 });
        gbc.writeMem(0xccdb, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x299);
        EXPECT(gbc.pc(), 0x4457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccdb), 0xd9);
        // D9 0114
        gbc.setState(0x9eff, 0xdc34, 0x40, 0x177c, 0x633b, 0x1ba, 0x0, 0x0);
        gbc.writeMem(0x9eff, { 0xd9 });
        gbc.writeMem(0xdc34, { 0xf3, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xdc36);
        EXPECT(gbc.pc(), 0xf7f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eff), 0xd9);
        EXPECT(gbc.readMem(0xdc34), 0xf3);
        EXPECT(gbc.readMem(0xdc35), 0xf7);
        // D9 0115
        gbc.setState(0xd550, 0xbe1d, 0x38a0, 0x7242, 0x6a6, 0xd30f, 0x1, 0x0);
        gbc.writeMem(0xbe1d, { 0xd1, 0x5f });
        gbc.writeMem(0xd550, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xbe1f);
        EXPECT(gbc.pc(), 0x5fd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe1d), 0xd1);
        EXPECT(gbc.readMem(0xbe1e), 0x5f);
        EXPECT(gbc.readMem(0xd550), 0xd9);
        // D9 0116
        gbc.setState(0x331b, 0x5c4b, 0x6100, 0x6229, 0x3c8, 0x5e79, 0x1, 0x1);
        gbc.writeMem(0x331b, { 0xd9 });
        gbc.writeMem(0x5c4b, { 0x57, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5c4d);
        EXPECT(gbc.pc(), 0xc157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0117
        gbc.setState(0x9dc5, 0x8587, 0xed60, 0xccbc, 0xf5ab, 0xf50c, 0x0, 0x0);
        gbc.writeMem(0x8587, { 0x82, 0x2e });
        gbc.writeMem(0x9dc5, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8589);
        EXPECT(gbc.pc(), 0x2e82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8587), 0x82);
        EXPECT(gbc.readMem(0x8588), 0x2e);
        EXPECT(gbc.readMem(0x9dc5), 0xd9);
        // D9 0119
        gbc.setState(0x8b7f, 0xcd17, 0x9cf0, 0xbdc6, 0x3bf6, 0xa55f, 0x1, 0x0);
        gbc.writeMem(0x8b7f, { 0xd9 });
        gbc.writeMem(0xcd17, { 0x96, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xcd19);
        EXPECT(gbc.pc(), 0xe396);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b7f), 0xd9);
        EXPECT(gbc.readMem(0xcd17), 0x96);
        EXPECT(gbc.readMem(0xcd18), 0xe3);
        // D9 011A
        gbc.setState(0x6dca, 0x8429, 0x3410, 0xb299, 0xe1a0, 0x7a09, 0x1, 0x1);
        gbc.writeMem(0x6dca, { 0xd9 });
        gbc.writeMem(0x8429, { 0x3, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x842b);
        EXPECT(gbc.pc(), 0x5403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8429), 0x3);
        EXPECT(gbc.readMem(0x842a), 0x54);
        // D9 011B
        gbc.setState(0xb3de, 0x94b3, 0x3fd0, 0xb7de, 0xec1e, 0x40fa, 0x0, 0x0);
        gbc.writeMem(0x94b3, { 0xf3, 0x6d });
        gbc.writeMem(0xb3de, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x94b5);
        EXPECT(gbc.pc(), 0x6df3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94b3), 0xf3);
        EXPECT(gbc.readMem(0x94b4), 0x6d);
        EXPECT(gbc.readMem(0xb3de), 0xd9);
        // D9 011C
        gbc.setState(0x7a82, 0xe2f, 0xab0, 0x9e7c, 0xa892, 0xbce0, 0x0, 0x1);
        gbc.writeMem(0xe2f, { 0xfd, 0xbc });
        gbc.writeMem(0x7a82, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe31);
        EXPECT(gbc.pc(), 0xbcfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 011D
        gbc.setState(0x140a, 0x4066, 0xcd70, 0x5d7d, 0x1a8a, 0xde80, 0x1, 0x1);
        gbc.writeMem(0x140a, { 0xd9 });
        gbc.writeMem(0x4066, { 0x1f, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4068);
        EXPECT(gbc.pc(), 0x311f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 011E
        gbc.setState(0x510e, 0xf4d2, 0xf880, 0x7e2a, 0x82a8, 0xbb27, 0x1, 0x1);
        gbc.writeMem(0x510e, { 0xd9 });
        gbc.writeMem(0xf4d2, { 0xe7, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf4d4);
        EXPECT(gbc.pc(), 0xeae7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf4d2), 0xe7);
        EXPECT(gbc.readMem(0xf4d3), 0xea);
        // D9 011F
        gbc.setState(0xdc1e, 0xdfc5, 0xa2c0, 0x264e, 0x2e52, 0x55f7, 0x1, 0x0);
        gbc.writeMem(0xdc1e, { 0xd9 });
        gbc.writeMem(0xdfc5, { 0x12, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xdfc7);
        EXPECT(gbc.pc(), 0x9f12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc1e), 0xd9);
        EXPECT(gbc.readMem(0xdfc5), 0x12);
        EXPECT(gbc.readMem(0xdfc6), 0x9f);
        // D9 0120
        gbc.setState(0x76f1, 0x15c6, 0xfb90, 0xe651, 0xbe6e, 0x6b4b, 0x1, 0x0);
        gbc.writeMem(0x15c6, { 0x50, 0xae });
        gbc.writeMem(0x76f1, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x15c8);
        EXPECT(gbc.pc(), 0xae50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 0122
        gbc.setState(0xd34d, 0x49a5, 0xb980, 0x3b28, 0x592d, 0xaeb7, 0x0, 0x0);
        gbc.writeMem(0x49a5, { 0x9, 0xdf });
        gbc.writeMem(0xd34d, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x49a7);
        EXPECT(gbc.pc(), 0xdf09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd34d), 0xd9);
        // D9 0123
        gbc.setState(0xe34c, 0x2c2b, 0x8de0, 0x877c, 0x5aa2, 0xf2e6, 0x1, 0x0);
        gbc.writeMem(0x2c2b, { 0xa1, 0x5a });
        gbc.writeMem(0xe34c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2c2d);
        EXPECT(gbc.pc(), 0x5aa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe34c), 0xd9);
        // D9 0124
        gbc.setState(0x9d1b, 0xbf18, 0xb260, 0x5399, 0x8883, 0xc678, 0x1, 0x1);
        gbc.writeMem(0x9d1b, { 0xd9 });
        gbc.writeMem(0xbf18, { 0x56, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xbf1a);
        EXPECT(gbc.pc(), 0x556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d1b), 0xd9);
        EXPECT(gbc.readMem(0xbf18), 0x56);
        EXPECT(gbc.readMem(0xbf19), 0x5);
        // D9 0125
        gbc.setState(0xb20e, 0x8103, 0x6110, 0x154a, 0x4409, 0xf920, 0x1, 0x0);
        gbc.writeMem(0x8103, { 0x62, 0x1e });
        gbc.writeMem(0xb20e, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8105);
        EXPECT(gbc.pc(), 0x1e62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8103), 0x62);
        EXPECT(gbc.readMem(0x8104), 0x1e);
        EXPECT(gbc.readMem(0xb20e), 0xd9);
        // D9 0126
        gbc.setState(0x6e64, 0x7cdf, 0xf880, 0x422a, 0xfa39, 0xb596, 0x0, 0x0);
        gbc.writeMem(0x6e64, { 0xd9 });
        gbc.writeMem(0x7cdf, { 0xbd, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7ce1);
        EXPECT(gbc.pc(), 0x1bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0127
        gbc.setState(0xb075, 0x93f2, 0xb880, 0x455c, 0x21c9, 0xd14, 0x1, 0x1);
        gbc.writeMem(0x93f2, { 0x0, 0x46 });
        gbc.writeMem(0xb075, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x93f4);
        EXPECT(gbc.pc(), 0x4600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f2), 0x0);
        EXPECT(gbc.readMem(0x93f3), 0x46);
        EXPECT(gbc.readMem(0xb075), 0xd9);
        // D9 0128
        gbc.setState(0xbea6, 0x18dd, 0x73f0, 0xb5e0, 0xe430, 0xe162, 0x0, 0x0);
        gbc.writeMem(0x18dd, { 0x10, 0xd0 });
        gbc.writeMem(0xbea6, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x18df);
        EXPECT(gbc.pc(), 0xd010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbea6), 0xd9);
        // D9 0129
        gbc.setState(0x1613, 0x4698, 0xf4d0, 0x9147, 0x58a3, 0x56f3, 0x0, 0x0);
        gbc.writeMem(0x1613, { 0xd9 });
        gbc.writeMem(0x4698, { 0x96, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x469a);
        EXPECT(gbc.pc(), 0x1696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 012A
        gbc.setState(0xcff9, 0xde00, 0x21b0, 0x64dc, 0x3bad, 0x96a0, 0x0, 0x1);
        gbc.writeMem(0xcff9, { 0xd9 });
        gbc.writeMem(0xde00, { 0xb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xde02);
        EXPECT(gbc.pc(), 0xbe0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcff9), 0xd9);
        EXPECT(gbc.readMem(0xde00), 0xb);
        EXPECT(gbc.readMem(0xde01), 0xbe);
        // D9 012B
        gbc.setState(0x837e, 0x76f, 0xcfb0, 0x8e9c, 0x8e3e, 0x837, 0x1, 0x1);
        gbc.writeMem(0x76f, { 0x73, 0x1c });
        gbc.writeMem(0x837e, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x771);
        EXPECT(gbc.pc(), 0x1c73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x837e), 0xd9);
        // D9 012C
        gbc.setState(0x2786, 0x4e86, 0xae50, 0x4540, 0x11f7, 0x16a1, 0x0, 0x0);
        gbc.writeMem(0x2786, { 0xd9 });
        gbc.writeMem(0x4e86, { 0x75, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4e88);
        EXPECT(gbc.pc(), 0xf875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 012D
        gbc.setState(0xc426, 0x552d, 0x6e80, 0xcc80, 0xe64, 0x4d9c, 0x0, 0x1);
        gbc.writeMem(0x552d, { 0xe9, 0xdd });
        gbc.writeMem(0xc426, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x552f);
        EXPECT(gbc.pc(), 0xdde9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc426), 0xd9);
        // D9 012E
        gbc.setState(0xee0d, 0xae5a, 0x6390, 0x607c, 0xeaaa, 0x813b, 0x1, 0x0);
        gbc.writeMem(0xae5a, { 0xe6, 0x61 });
        gbc.writeMem(0xee0d, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xae5c);
        EXPECT(gbc.pc(), 0x61e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae5a), 0xe6);
        EXPECT(gbc.readMem(0xae5b), 0x61);
        EXPECT(gbc.readMem(0xee0d), 0xd9);
        // D9 012F
        gbc.setState(0xbea3, 0xe007, 0xfc40, 0x79f0, 0x6c6e, 0x14f3, 0x1, 0x0);
        gbc.writeMem(0xbea3, { 0xd9 });
        gbc.writeMem(0xe007, { 0xeb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe009);
        EXPECT(gbc.pc(), 0xebeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbea3), 0xd9);
        EXPECT(gbc.readMem(0xe007), 0xeb);
        EXPECT(gbc.readMem(0xe008), 0xeb);
        // D9 0130
        gbc.setState(0x3645, 0x2186, 0x3bb0, 0x67bb, 0x509d, 0xbef7, 0x0, 0x1);
        gbc.writeMem(0x2186, { 0x2c, 0x9d });
        gbc.writeMem(0x3645, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2188);
        EXPECT(gbc.pc(), 0x9d2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0131
        gbc.setState(0xafb4, 0xfc6f, 0xe6b0, 0x8ddf, 0xa612, 0xe315, 0x1, 0x0);
        gbc.writeMem(0xafb4, { 0xd9 });
        gbc.writeMem(0xfc6f, { 0xce, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfc71);
        EXPECT(gbc.pc(), 0x4dce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafb4), 0xd9);
        EXPECT(gbc.readMem(0xfc6f), 0xce);
        EXPECT(gbc.readMem(0xfc70), 0x4d);
        // D9 0132
        gbc.setState(0x270f, 0xaa1e, 0xf90, 0xa29f, 0xa0fb, 0x93b6, 0x1, 0x1);
        gbc.writeMem(0x270f, { 0xd9 });
        gbc.writeMem(0xaa1e, { 0xc6, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xaa20);
        EXPECT(gbc.pc(), 0xe2c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa1e), 0xc6);
        EXPECT(gbc.readMem(0xaa1f), 0xe2);
        // D9 0134
        gbc.setState(0xd307, 0x590d, 0xee70, 0x7909, 0x76b8, 0xcff9, 0x1, 0x1);
        gbc.writeMem(0x590d, { 0x8a, 0x66 });
        gbc.writeMem(0xd307, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x590f);
        EXPECT(gbc.pc(), 0x668a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd307), 0xd9);
        // D9 0135
        gbc.setState(0x215f, 0x127b, 0xb530, 0x7dbd, 0x1260, 0xcf22, 0x0, 0x0);
        gbc.writeMem(0x127b, { 0x6a, 0xa1 });
        gbc.writeMem(0x215f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x127d);
        EXPECT(gbc.pc(), 0xa16a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0136
        gbc.setState(0x2e67, 0x2b8e, 0xbc00, 0x2d0e, 0xe83f, 0x68fb, 0x1, 0x1);
        gbc.writeMem(0x2b8e, { 0x40, 0x18 });
        gbc.writeMem(0x2e67, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2b90);
        EXPECT(gbc.pc(), 0x1840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0137
        gbc.setState(0x12a7, 0xa96a, 0x3d00, 0xc0ce, 0xf322, 0xa11b, 0x1, 0x0);
        gbc.writeMem(0x12a7, { 0xd9 });
        gbc.writeMem(0xa96a, { 0xc0, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa96c);
        EXPECT(gbc.pc(), 0x61c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa96a), 0xc0);
        EXPECT(gbc.readMem(0xa96b), 0x61);
        // D9 0138
        gbc.setState(0x9330, 0x828, 0xa710, 0x2de5, 0x4350, 0xc088, 0x1, 0x0);
        gbc.writeMem(0x828, { 0x83, 0xff });
        gbc.writeMem(0x9330, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x82a);
        EXPECT(gbc.pc(), 0xff83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9330), 0xd9);
        // D9 0139
        gbc.setState(0x8281, 0x756, 0x450, 0x2b89, 0xff4, 0xa93a, 0x1, 0x1);
        gbc.writeMem(0x756, { 0x5, 0x71 });
        gbc.writeMem(0x8281, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x758);
        EXPECT(gbc.pc(), 0x7105);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8281), 0xd9);
        // D9 013A
        gbc.setState(0x355d, 0xc8f0, 0xd3d0, 0x29b0, 0x4c4b, 0x3651, 0x1, 0x0);
        gbc.writeMem(0x355d, { 0xd9 });
        gbc.writeMem(0xc8f0, { 0xa1, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc8f2);
        EXPECT(gbc.pc(), 0xa0a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f0), 0xa1);
        EXPECT(gbc.readMem(0xc8f1), 0xa0);
        // D9 013B
        gbc.setState(0x6dbc, 0x514b, 0xab50, 0x8750, 0x8258, 0x10ba, 0x1, 0x1);
        gbc.writeMem(0x514b, { 0xa2, 0x2c });
        gbc.writeMem(0x6dbc, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x514d);
        EXPECT(gbc.pc(), 0x2ca2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 013C
        gbc.setState(0x6d6a, 0x958, 0xb980, 0xe0fe, 0xe488, 0x84f8, 0x1, 0x1);
        gbc.writeMem(0x958, { 0x30, 0x69 });
        gbc.writeMem(0x6d6a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x95a);
        EXPECT(gbc.pc(), 0x6930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 013D
        gbc.setState(0x1b18, 0x4767, 0x300, 0xddd4, 0x96f3, 0xce7c, 0x1, 0x0);
        gbc.writeMem(0x1b18, { 0xd9 });
        gbc.writeMem(0x4767, { 0x67, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4769);
        EXPECT(gbc.pc(), 0x4267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 013E
        gbc.setState(0x6a80, 0x6da6, 0x8c60, 0x1cf2, 0xd0e5, 0xbb66, 0x1, 0x0);
        gbc.writeMem(0x6a80, { 0xd9 });
        gbc.writeMem(0x6da6, { 0xe2, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6da8);
        EXPECT(gbc.pc(), 0x19e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 013F
        gbc.setState(0xc6be, 0xb528, 0x77d0, 0x317b, 0x5137, 0x74e9, 0x1, 0x1);
        gbc.writeMem(0xb528, { 0xdd, 0xf4 });
        gbc.writeMem(0xc6be, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb52a);
        EXPECT(gbc.pc(), 0xf4dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb528), 0xdd);
        EXPECT(gbc.readMem(0xb529), 0xf4);
        EXPECT(gbc.readMem(0xc6be), 0xd9);
        // D9 0140
        gbc.setState(0x266b, 0x2e45, 0x42e0, 0x3326, 0xa74f, 0xfe33, 0x1, 0x0);
        gbc.writeMem(0x266b, { 0xd9 });
        gbc.writeMem(0x2e45, { 0xb1, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2e47);
        EXPECT(gbc.pc(), 0x4ab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0141
        gbc.setState(0x8110, 0x4d46, 0x9270, 0x392e, 0x9e5a, 0xdfca, 0x0, 0x1);
        gbc.writeMem(0x4d46, { 0x36, 0x45 });
        gbc.writeMem(0x8110, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4d48);
        EXPECT(gbc.pc(), 0x4536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8110), 0xd9);
        // D9 0142
        gbc.setState(0xb371, 0xa6c0, 0x3be0, 0x4582, 0xd51b, 0x7b56, 0x1, 0x0);
        gbc.writeMem(0xa6c0, { 0xfb, 0x89 });
        gbc.writeMem(0xb371, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa6c2);
        EXPECT(gbc.pc(), 0x89fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c0), 0xfb);
        EXPECT(gbc.readMem(0xa6c1), 0x89);
        EXPECT(gbc.readMem(0xb371), 0xd9);
        // D9 0143
        gbc.setState(0x4764, 0xf146, 0xa060, 0x9813, 0x6805, 0x2d90, 0x1, 0x1);
        gbc.writeMem(0x4764, { 0xd9 });
        gbc.writeMem(0xf146, { 0x38, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf148);
        EXPECT(gbc.pc(), 0x2738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf146), 0x38);
        EXPECT(gbc.readMem(0xf147), 0x27);
        // D9 0144
        gbc.setState(0x73a3, 0x89d0, 0x7570, 0x763f, 0x46d6, 0xbdbb, 0x0, 0x0);
        gbc.writeMem(0x73a3, { 0xd9 });
        gbc.writeMem(0x89d0, { 0xec, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x89d2);
        EXPECT(gbc.pc(), 0x19ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89d0), 0xec);
        EXPECT(gbc.readMem(0x89d1), 0x19);
        // D9 0145
        gbc.setState(0xe6bc, 0xae98, 0x21f0, 0x1a1e, 0xe605, 0xebf7, 0x1, 0x0);
        gbc.writeMem(0xae98, { 0x76, 0x2 });
        gbc.writeMem(0xe6bc, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xae9a);
        EXPECT(gbc.pc(), 0x276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae98), 0x76);
        EXPECT(gbc.readMem(0xae99), 0x2);
        EXPECT(gbc.readMem(0xe6bc), 0xd9);
        // D9 0146
        gbc.setState(0xdea0, 0xc39a, 0x1980, 0xf247, 0x3ba9, 0xec6b, 0x1, 0x1);
        gbc.writeMem(0xc39a, { 0x68, 0x75 });
        gbc.writeMem(0xdea0, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc39c);
        EXPECT(gbc.pc(), 0x7568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc39a), 0x68);
        EXPECT(gbc.readMem(0xc39b), 0x75);
        EXPECT(gbc.readMem(0xdea0), 0xd9);
        // D9 0147
        gbc.setState(0x1f2, 0x8502, 0x76f0, 0xab93, 0x7d47, 0x869a, 0x1, 0x0);
        gbc.writeMem(0x1f2, { 0xd9 });
        gbc.writeMem(0x8502, { 0xa8, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8504);
        EXPECT(gbc.pc(), 0xcda8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8502), 0xa8);
        EXPECT(gbc.readMem(0x8503), 0xcd);
        // D9 0148
        gbc.setState(0xa4b7, 0x9f29, 0x4690, 0x56cc, 0x123, 0x669e, 0x1, 0x0);
        gbc.writeMem(0x9f29, { 0xa6, 0xa8 });
        gbc.writeMem(0xa4b7, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9f2b);
        EXPECT(gbc.pc(), 0xa8a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f29), 0xa6);
        EXPECT(gbc.readMem(0x9f2a), 0xa8);
        EXPECT(gbc.readMem(0xa4b7), 0xd9);
        // D9 0149
        gbc.setState(0xffe, 0x3e, 0x48a0, 0x8fd2, 0x24c7, 0x96a5, 0x0, 0x1);
        gbc.writeMem(0x3e, { 0x30, 0x46 });
        gbc.writeMem(0xffe, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x40);
        EXPECT(gbc.pc(), 0x4630);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 014A
        gbc.setState(0x617f, 0x3dd2, 0x8870, 0xf280, 0x206e, 0x32b8, 0x0, 0x1);
        gbc.writeMem(0x3dd2, { 0x46, 0x6 });
        gbc.writeMem(0x617f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3dd4);
        EXPECT(gbc.pc(), 0x646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 014B
        gbc.setState(0x37f2, 0xc462, 0xaf20, 0xbadd, 0xf8f0, 0x803b, 0x1, 0x1);
        gbc.writeMem(0x37f2, { 0xd9 });
        gbc.writeMem(0xc462, { 0xe0, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc464);
        EXPECT(gbc.pc(), 0xe9e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc462), 0xe0);
        EXPECT(gbc.readMem(0xc463), 0xe9);
        // D9 014C
        gbc.setState(0x8f58, 0xda15, 0xb030, 0x3b83, 0x995e, 0x35c3, 0x0, 0x1);
        gbc.writeMem(0x8f58, { 0xd9 });
        gbc.writeMem(0xda15, { 0xd2, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xda17);
        EXPECT(gbc.pc(), 0x4ad2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f58), 0xd9);
        EXPECT(gbc.readMem(0xda15), 0xd2);
        EXPECT(gbc.readMem(0xda16), 0x4a);
        // D9 014D
        gbc.setState(0x203c, 0x2886, 0xc850, 0xdf40, 0xf49d, 0x21a6, 0x0, 0x1);
        gbc.writeMem(0x203c, { 0xd9 });
        gbc.writeMem(0x2886, { 0x4c, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2888);
        EXPECT(gbc.pc(), 0x924c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 014E
        gbc.setState(0x5d00, 0xd0fa, 0x90e0, 0x1076, 0x876b, 0x4250, 0x1, 0x0);
        gbc.writeMem(0x5d00, { 0xd9 });
        gbc.writeMem(0xd0fa, { 0xf3, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd0fc);
        EXPECT(gbc.pc(), 0x45f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0fa), 0xf3);
        EXPECT(gbc.readMem(0xd0fb), 0x45);
        // D9 014F
        gbc.setState(0x4be8, 0xa1f4, 0xb110, 0x9162, 0xff76, 0x825b, 0x1, 0x1);
        gbc.writeMem(0x4be8, { 0xd9 });
        gbc.writeMem(0xa1f4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa1f6);
        EXPECT(gbc.pc(), 0x28cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f4), 0xcb);
        EXPECT(gbc.readMem(0xa1f5), 0x28);
        // D9 0150
        gbc.setState(0x635d, 0x9042, 0x1a50, 0x6184, 0xf7d4, 0xbd26, 0x1, 0x0);
        gbc.writeMem(0x635d, { 0xd9 });
        gbc.writeMem(0x9042, { 0xa3, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9044);
        EXPECT(gbc.pc(), 0xd3a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9042), 0xa3);
        EXPECT(gbc.readMem(0x9043), 0xd3);
        // D9 0151
        gbc.setState(0x1d28, 0xb3a, 0x10c0, 0xcd36, 0x268e, 0x792d, 0x1, 0x1);
        gbc.writeMem(0xb3a, { 0x12, 0x1c });
        gbc.writeMem(0x1d28, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb3c);
        EXPECT(gbc.pc(), 0x1c12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0152
        gbc.setState(0xd3b8, 0xe4ea, 0x7710, 0x7783, 0xaab9, 0x4aff, 0x1, 0x0);
        gbc.writeMem(0xd3b8, { 0xd9 });
        gbc.writeMem(0xe4ea, { 0xbf, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe4ec);
        EXPECT(gbc.pc(), 0x1bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b8), 0xd9);
        EXPECT(gbc.readMem(0xe4ea), 0xbf);
        EXPECT(gbc.readMem(0xe4eb), 0x1b);
        // D9 0153
        gbc.setState(0xd785, 0x309e, 0x9d30, 0xe42e, 0x9732, 0x72f4, 0x0, 0x1);
        gbc.writeMem(0x309e, { 0x59, 0xbc });
        gbc.writeMem(0xd785, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x30a0);
        EXPECT(gbc.pc(), 0xbc59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd785), 0xd9);
        // D9 0154
        gbc.setState(0xb6f1, 0x2f60, 0x5560, 0xfc4f, 0xf9b5, 0x1d87, 0x0, 0x1);
        gbc.writeMem(0x2f60, { 0xe7, 0xe3 });
        gbc.writeMem(0xb6f1, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2f62);
        EXPECT(gbc.pc(), 0xe3e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f1), 0xd9);
        // D9 0155
        gbc.setState(0xab9c, 0x4ec1, 0xcee0, 0x9a67, 0xfe7d, 0xf8d7, 0x0, 0x1);
        gbc.writeMem(0x4ec1, { 0x6d, 0x90 });
        gbc.writeMem(0xab9c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4ec3);
        EXPECT(gbc.pc(), 0x906d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab9c), 0xd9);
        // D9 0156
        gbc.setState(0x1029, 0x548a, 0x8bb0, 0xeecb, 0xa5f4, 0xfe2e, 0x0, 0x0);
        gbc.writeMem(0x1029, { 0xd9 });
        gbc.writeMem(0x548a, { 0x8f, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x548c);
        EXPECT(gbc.pc(), 0xf18f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0157
        gbc.setState(0xaa8d, 0xe352, 0x6b40, 0xa4a2, 0xbe1e, 0xa5f, 0x1, 0x1);
        gbc.writeMem(0xaa8d, { 0xd9 });
        gbc.writeMem(0xe352, { 0x7d, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe354);
        EXPECT(gbc.pc(), 0x427d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa8d), 0xd9);
        EXPECT(gbc.readMem(0xe352), 0x7d);
        EXPECT(gbc.readMem(0xe353), 0x42);
        // D9 0158
        gbc.setState(0xa2ff, 0xd2f9, 0xbc70, 0x1bfe, 0xc54d, 0x1e4d, 0x1, 0x0);
        gbc.writeMem(0xa2ff, { 0xd9 });
        gbc.writeMem(0xd2f9, { 0x82, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd2fb);
        EXPECT(gbc.pc(), 0x2982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ff), 0xd9);
        EXPECT(gbc.readMem(0xd2f9), 0x82);
        EXPECT(gbc.readMem(0xd2fa), 0x29);
        // D9 0159
        gbc.setState(0x4606, 0xe5ac, 0x88e0, 0x53d0, 0x95e4, 0x894a, 0x1, 0x1);
        gbc.writeMem(0x4606, { 0xd9 });
        gbc.writeMem(0xe5ac, { 0x47, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe5ae);
        EXPECT(gbc.pc(), 0x3547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5ac), 0x47);
        EXPECT(gbc.readMem(0xe5ad), 0x35);
        // D9 015A
        gbc.setState(0x1b36, 0x280c, 0x75f0, 0xbe5c, 0x3f76, 0xdc92, 0x0, 0x0);
        gbc.writeMem(0x1b36, { 0xd9 });
        gbc.writeMem(0x280c, { 0x59, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x280e);
        EXPECT(gbc.pc(), 0x3859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 015B
        gbc.setState(0x5220, 0x9639, 0xbb80, 0x42dc, 0x1905, 0xddb3, 0x0, 0x0);
        gbc.writeMem(0x5220, { 0xd9 });
        gbc.writeMem(0x9639, { 0xcf, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x963b);
        EXPECT(gbc.pc(), 0xe5cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9639), 0xcf);
        EXPECT(gbc.readMem(0x963a), 0xe5);
        // D9 015C
        gbc.setState(0x4832, 0xf37e, 0x7730, 0x8a27, 0xf252, 0x1f92, 0x0, 0x1);
        gbc.writeMem(0x4832, { 0xd9 });
        gbc.writeMem(0xf37e, { 0x41, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf380);
        EXPECT(gbc.pc(), 0xf641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf37e), 0x41);
        EXPECT(gbc.readMem(0xf37f), 0xf6);
        // D9 015D
        gbc.setState(0x84d, 0x98dc, 0x6f90, 0x44b5, 0x3596, 0xe615, 0x0, 0x0);
        gbc.writeMem(0x84d, { 0xd9 });
        gbc.writeMem(0x98dc, { 0x4a, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x98de);
        EXPECT(gbc.pc(), 0x924a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98dc), 0x4a);
        EXPECT(gbc.readMem(0x98dd), 0x92);
        // D9 015E
        gbc.setState(0x562d, 0x630, 0xa6f0, 0xb766, 0x8191, 0x6a92, 0x0, 0x0);
        gbc.writeMem(0x630, { 0x47, 0x38 });
        gbc.writeMem(0x562d, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x632);
        EXPECT(gbc.pc(), 0x3847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 015F
        gbc.setState(0x301e, 0xf9a6, 0xb670, 0x13d9, 0xe9ec, 0x3b0b, 0x0, 0x0);
        gbc.writeMem(0x301e, { 0xd9 });
        gbc.writeMem(0xf9a6, { 0xa2, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf9a8);
        EXPECT(gbc.pc(), 0xc9a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf9a6), 0xa2);
        EXPECT(gbc.readMem(0xf9a7), 0xc9);
        // D9 0160
        gbc.setState(0x6038, 0x9fb0, 0xfbd0, 0xf7d9, 0x13d0, 0x715f, 0x1, 0x1);
        gbc.writeMem(0x6038, { 0xd9 });
        gbc.writeMem(0x9fb0, { 0x15, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9fb2);
        EXPECT(gbc.pc(), 0xea15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fb0), 0x15);
        EXPECT(gbc.readMem(0x9fb1), 0xea);
        // D9 0161
        gbc.setState(0xa168, 0x3fd, 0x2100, 0xae9d, 0xb53f, 0x5bea, 0x0, 0x1);
        gbc.writeMem(0x3fd, { 0x6, 0x98 });
        gbc.writeMem(0xa168, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3ff);
        EXPECT(gbc.pc(), 0x9806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa168), 0xd9);
        // D9 0162
        gbc.setState(0x759a, 0xf22a, 0xb300, 0x845d, 0xd29d, 0xf79, 0x1, 0x0);
        gbc.writeMem(0x759a, { 0xd9 });
        gbc.writeMem(0xf22a, { 0x16, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf22c);
        EXPECT(gbc.pc(), 0x6716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf22a), 0x16);
        EXPECT(gbc.readMem(0xf22b), 0x67);
        // D9 0163
        gbc.setState(0xcf32, 0xbab8, 0x2c70, 0x24e5, 0xdda9, 0x426a, 0x1, 0x1);
        gbc.writeMem(0xbab8, { 0x77, 0x54 });
        gbc.writeMem(0xcf32, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xbaba);
        EXPECT(gbc.pc(), 0x5477);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbab8), 0x77);
        EXPECT(gbc.readMem(0xbab9), 0x54);
        EXPECT(gbc.readMem(0xcf32), 0xd9);
        // D9 0164
        gbc.setState(0x191a, 0x8f55, 0x2570, 0xa4cd, 0xeb64, 0x9a98, 0x1, 0x1);
        gbc.writeMem(0x191a, { 0xd9 });
        gbc.writeMem(0x8f55, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8f57);
        EXPECT(gbc.pc(), 0xdacb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f55), 0xcb);
        EXPECT(gbc.readMem(0x8f56), 0xda);
        // D9 0165
        gbc.setState(0x3ede, 0x5036, 0xeb80, 0x447, 0x7615, 0x562d, 0x0, 0x0);
        gbc.writeMem(0x3ede, { 0xd9 });
        gbc.writeMem(0x5036, { 0xa6, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5038);
        EXPECT(gbc.pc(), 0xa4a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0166
        gbc.setState(0x53b, 0xa17f, 0x8830, 0x68cd, 0x66d1, 0xcb6c, 0x1, 0x1);
        gbc.writeMem(0x53b, { 0xd9 });
        gbc.writeMem(0xa17f, { 0x6, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa181);
        EXPECT(gbc.pc(), 0xf106);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa17f), 0x6);
        EXPECT(gbc.readMem(0xa180), 0xf1);
        // D9 0167
        gbc.setState(0x34fb, 0xa087, 0xe680, 0x53e1, 0x8867, 0x6e41, 0x0, 0x1);
        gbc.writeMem(0x34fb, { 0xd9 });
        gbc.writeMem(0xa087, { 0x12, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa089);
        EXPECT(gbc.pc(), 0xd912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa087), 0x12);
        EXPECT(gbc.readMem(0xa088), 0xd9);
        // D9 0168
        gbc.setState(0x6eb, 0xc96c, 0x8c20, 0x48cb, 0x4b36, 0xfaf5, 0x1, 0x1);
        gbc.writeMem(0x6eb, { 0xd9 });
        gbc.writeMem(0xc96c, { 0x99, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc96e);
        EXPECT(gbc.pc(), 0x2e99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc96c), 0x99);
        EXPECT(gbc.readMem(0xc96d), 0x2e);
        // D9 0169
        gbc.setState(0x2195, 0x928a, 0xe8c0, 0x898c, 0xe52, 0x9146, 0x1, 0x0);
        gbc.writeMem(0x2195, { 0xd9 });
        gbc.writeMem(0x928a, { 0x14, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x928c);
        EXPECT(gbc.pc(), 0xeb14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x928a), 0x14);
        EXPECT(gbc.readMem(0x928b), 0xeb);
        // D9 016A
        gbc.setState(0x3114, 0x5b63, 0x8f80, 0xffe2, 0xf072, 0xf8f, 0x0, 0x0);
        gbc.writeMem(0x3114, { 0xd9 });
        gbc.writeMem(0x5b63, { 0xc1, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5b65);
        EXPECT(gbc.pc(), 0x93c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 016B
        gbc.setState(0xcbff, 0x2248, 0xac90, 0xecc6, 0xd39b, 0xd97c, 0x1, 0x1);
        gbc.writeMem(0x2248, { 0xc0, 0x3a });
        gbc.writeMem(0xcbff, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x224a);
        EXPECT(gbc.pc(), 0x3ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbff), 0xd9);
        // D9 016C
        gbc.setState(0x9d40, 0x814b, 0x8830, 0x2274, 0x9c8b, 0xe39e, 0x0, 0x0);
        gbc.writeMem(0x814b, { 0xf2, 0x8f });
        gbc.writeMem(0x9d40, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x814d);
        EXPECT(gbc.pc(), 0x8ff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x814b), 0xf2);
        EXPECT(gbc.readMem(0x814c), 0x8f);
        EXPECT(gbc.readMem(0x9d40), 0xd9);
        // D9 016D
        gbc.setState(0x5889, 0x83cb, 0x58a0, 0x38ed, 0xc6bd, 0x3a6, 0x0, 0x0);
        gbc.writeMem(0x5889, { 0xd9 });
        gbc.writeMem(0x83cb, { 0x97, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x83cd);
        EXPECT(gbc.pc(), 0x8297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83cb), 0x97);
        EXPECT(gbc.readMem(0x83cc), 0x82);
        // D9 016E
        gbc.setState(0x9798, 0x5a6a, 0x6920, 0x8739, 0x2066, 0x763, 0x0, 0x1);
        gbc.writeMem(0x5a6a, { 0xae, 0x80 });
        gbc.writeMem(0x9798, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5a6c);
        EXPECT(gbc.pc(), 0x80ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9798), 0xd9);
        // D9 016F
        gbc.setState(0xb176, 0xc8ee, 0x450, 0xcf2f, 0xc241, 0xcd47, 0x1, 0x1);
        gbc.writeMem(0xb176, { 0xd9 });
        gbc.writeMem(0xc8ee, { 0x26, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc8f0);
        EXPECT(gbc.pc(), 0xee26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb176), 0xd9);
        EXPECT(gbc.readMem(0xc8ee), 0x26);
        EXPECT(gbc.readMem(0xc8ef), 0xee);
        // D9 0170
        gbc.setState(0x37e5, 0x8048, 0x6cd0, 0x9591, 0x1fd8, 0x8ee5, 0x1, 0x0);
        gbc.writeMem(0x37e5, { 0xd9 });
        gbc.writeMem(0x8048, { 0x1c, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x804a);
        EXPECT(gbc.pc(), 0xc01c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8048), 0x1c);
        EXPECT(gbc.readMem(0x8049), 0xc0);
        // D9 0171
        gbc.setState(0xe3d0, 0xedae, 0x52a0, 0xab0c, 0x7c33, 0x832, 0x0, 0x1);
        gbc.writeMem(0xe3d0, { 0xd9 });
        gbc.writeMem(0xedae, { 0x5b, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xedb0);
        EXPECT(gbc.pc(), 0x4f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3d0), 0xd9);
        EXPECT(gbc.readMem(0xedae), 0x5b);
        EXPECT(gbc.readMem(0xedaf), 0x4f);
        // D9 0172
        gbc.setState(0x6b07, 0x650e, 0xb10, 0x7f95, 0xdff9, 0xe49d, 0x0, 0x0);
        gbc.writeMem(0x650e, { 0xed, 0x7 });
        gbc.writeMem(0x6b07, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6510);
        EXPECT(gbc.pc(), 0x7ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 0173
        gbc.setState(0x3cba, 0x704f, 0x5400, 0x2870, 0x7f06, 0xc068, 0x1, 0x1);
        gbc.writeMem(0x3cba, { 0xd9 });
        gbc.writeMem(0x704f, { 0xa3, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7051);
        EXPECT(gbc.pc(), 0x7ea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0174
        gbc.setState(0x6d48, 0xfa64, 0xcbc0, 0x66f5, 0xeb2b, 0x245b, 0x1, 0x0);
        gbc.writeMem(0x6d48, { 0xd9 });
        gbc.writeMem(0xfa64, { 0xbd, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xfa66);
        EXPECT(gbc.pc(), 0xebbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa64), 0xbd);
        EXPECT(gbc.readMem(0xfa65), 0xeb);
        // D9 0175
        gbc.setState(0x5d7, 0x6bc6, 0xdf60, 0x24c5, 0xa2d4, 0x152c, 0x0, 0x1);
        gbc.writeMem(0x5d7, { 0xd9 });
        gbc.writeMem(0x6bc6, { 0x7d, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6bc8);
        EXPECT(gbc.pc(), 0xd77d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0176
        gbc.setState(0x3102, 0xcdc5, 0xdf60, 0xbfb5, 0x3e20, 0xced0, 0x1, 0x1);
        gbc.writeMem(0x3102, { 0xd9 });
        gbc.writeMem(0xcdc5, { 0x64, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xcdc7);
        EXPECT(gbc.pc(), 0x4c64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdc5), 0x64);
        EXPECT(gbc.readMem(0xcdc6), 0x4c);
        // D9 0177
        gbc.setState(0x313a, 0x21c, 0x9300, 0x2510, 0x12d3, 0x70b1, 0x1, 0x0);
        gbc.writeMem(0x21c, { 0xbd, 0xac });
        gbc.writeMem(0x313a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x21e);
        EXPECT(gbc.pc(), 0xacbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0178
        gbc.setState(0x448b, 0xef4c, 0x9070, 0xed24, 0x4d75, 0xe4ae, 0x0, 0x1);
        gbc.writeMem(0x448b, { 0xd9 });
        gbc.writeMem(0xef4c, { 0xc3, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xef4e);
        EXPECT(gbc.pc(), 0xcec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef4c), 0xc3);
        EXPECT(gbc.readMem(0xef4d), 0xce);
        // D9 0179
        gbc.setState(0xad8f, 0x26b3, 0x7210, 0x91f1, 0xb6e2, 0x50a0, 0x1, 0x1);
        gbc.writeMem(0x26b3, { 0x94, 0xca });
        gbc.writeMem(0xad8f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x26b5);
        EXPECT(gbc.pc(), 0xca94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad8f), 0xd9);
        // D9 017A
        gbc.setState(0xcd64, 0xfb3d, 0x76f0, 0x119c, 0x55c3, 0x2f88, 0x0, 0x1);
        gbc.writeMem(0xcd64, { 0xd9 });
        gbc.writeMem(0xfb3d, { 0x2f, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xfb3f);
        EXPECT(gbc.pc(), 0x482f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd64), 0xd9);
        EXPECT(gbc.readMem(0xfb3d), 0x2f);
        EXPECT(gbc.readMem(0xfb3e), 0x48);
        // D9 017B
        gbc.setState(0x5dfe, 0x5862, 0x47d0, 0xd0d4, 0x6727, 0x8703, 0x1, 0x1);
        gbc.writeMem(0x5862, { 0x51, 0xbf });
        gbc.writeMem(0x5dfe, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5864);
        EXPECT(gbc.pc(), 0xbf51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 017D
        gbc.setState(0xb403, 0x3ef7, 0x9f60, 0xf564, 0xb867, 0x925f, 0x1, 0x1);
        gbc.writeMem(0x3ef7, { 0x62, 0x14 });
        gbc.writeMem(0xb403, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3ef9);
        EXPECT(gbc.pc(), 0x1462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb403), 0xd9);
        // D9 017E
        gbc.setState(0x934c, 0x3e6d, 0xf110, 0xe5bd, 0x3441, 0xde9d, 0x1, 0x0);
        gbc.writeMem(0x3e6d, { 0x4, 0xad });
        gbc.writeMem(0x934c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3e6f);
        EXPECT(gbc.pc(), 0xad04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x934c), 0xd9);
        // D9 017F
        gbc.setState(0xcdb7, 0x2bd4, 0xa320, 0x9331, 0x7c7c, 0xf47e, 0x0, 0x1);
        gbc.writeMem(0x2bd4, { 0x14, 0x21 });
        gbc.writeMem(0xcdb7, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2bd6);
        EXPECT(gbc.pc(), 0x2114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb7), 0xd9);
        // D9 0181
        gbc.setState(0x33db, 0xd22b, 0x230, 0x4d35, 0x6f5f, 0x782f, 0x1, 0x0);
        gbc.writeMem(0x33db, { 0xd9 });
        gbc.writeMem(0xd22b, { 0x78, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd22d);
        EXPECT(gbc.pc(), 0x878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd22b), 0x78);
        EXPECT(gbc.readMem(0xd22c), 0x8);
        // D9 0182
        gbc.setState(0x7965, 0xa9dc, 0x3810, 0xd54d, 0x6a43, 0x56d4, 0x1, 0x0);
        gbc.writeMem(0x7965, { 0xd9 });
        gbc.writeMem(0xa9dc, { 0x4, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa9de);
        EXPECT(gbc.pc(), 0xf004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9dc), 0x4);
        EXPECT(gbc.readMem(0xa9dd), 0xf0);
        // D9 0183
        gbc.setState(0x3d1e, 0x72b7, 0x5070, 0xd69b, 0x6db0, 0x81cf, 0x0, 0x1);
        gbc.writeMem(0x3d1e, { 0xd9 });
        gbc.writeMem(0x72b7, { 0x17, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x72b9);
        EXPECT(gbc.pc(), 0xe517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0184
        gbc.setState(0xc5c2, 0xf13f, 0xd140, 0xd23d, 0x74ba, 0x9d60, 0x0, 0x0);
        gbc.writeMem(0xc5c2, { 0xd9 });
        gbc.writeMem(0xf13f, { 0xda, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf141);
        EXPECT(gbc.pc(), 0x96da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5c2), 0xd9);
        EXPECT(gbc.readMem(0xf13f), 0xda);
        EXPECT(gbc.readMem(0xf140), 0x96);
        // D9 0186
        gbc.setState(0x48da, 0xce64, 0x7360, 0x69e6, 0x53c7, 0x1d56, 0x1, 0x0);
        gbc.writeMem(0x48da, { 0xd9 });
        gbc.writeMem(0xce64, { 0x10, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xce66);
        EXPECT(gbc.pc(), 0x5c10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce64), 0x10);
        EXPECT(gbc.readMem(0xce65), 0x5c);
        // D9 0188
        gbc.setState(0x2bb9, 0x4921, 0xb190, 0xc485, 0x91b2, 0x4749, 0x1, 0x0);
        gbc.writeMem(0x2bb9, { 0xd9 });
        gbc.writeMem(0x4921, { 0x22, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4923);
        EXPECT(gbc.pc(), 0xfd22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 0189
        gbc.setState(0x9e95, 0xc800, 0x7dc0, 0xd050, 0xf851, 0x47a6, 0x1, 0x1);
        gbc.writeMem(0x9e95, { 0xd9 });
        gbc.writeMem(0xc800, { 0x8e, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc802);
        EXPECT(gbc.pc(), 0xe98e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e95), 0xd9);
        EXPECT(gbc.readMem(0xc800), 0x8e);
        EXPECT(gbc.readMem(0xc801), 0xe9);
        // D9 018A
        gbc.setState(0xe4ff, 0xdc7c, 0xc9f0, 0x11ae, 0x966a, 0x8982, 0x0, 0x0);
        gbc.writeMem(0xdc7c, { 0x21, 0xa1 });
        gbc.writeMem(0xe4ff, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xdc7e);
        EXPECT(gbc.pc(), 0xa121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc7c), 0x21);
        EXPECT(gbc.readMem(0xdc7d), 0xa1);
        EXPECT(gbc.readMem(0xe4ff), 0xd9);
        // D9 018B
        gbc.setState(0xd252, 0x5105, 0x5a40, 0x835e, 0x7aff, 0xbafa, 0x1, 0x0);
        gbc.writeMem(0x5105, { 0x11, 0xb5 });
        gbc.writeMem(0xd252, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5107);
        EXPECT(gbc.pc(), 0xb511);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd252), 0xd9);
        // D9 018C
        gbc.setState(0x9942, 0x34f, 0xa6f0, 0x7acb, 0x30a4, 0xe1b5, 0x0, 0x0);
        gbc.writeMem(0x34f, { 0x44, 0x71 });
        gbc.writeMem(0x9942, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x351);
        EXPECT(gbc.pc(), 0x7144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9942), 0xd9);
        // D9 018D
        gbc.setState(0x5dad, 0xdd1b, 0xc290, 0x56f8, 0x1258, 0xf94d, 0x1, 0x1);
        gbc.writeMem(0x5dad, { 0xd9 });
        gbc.writeMem(0xdd1b, { 0xd9, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xdd1d);
        EXPECT(gbc.pc(), 0xa2d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd1b), 0xd9);
        EXPECT(gbc.readMem(0xdd1c), 0xa2);
        // D9 018E
        gbc.setState(0x9a4b, 0xee54, 0x5b60, 0x262, 0x3fc, 0xcf79, 0x0, 0x0);
        gbc.writeMem(0x9a4b, { 0xd9 });
        gbc.writeMem(0xee54, { 0xd4, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xee56);
        EXPECT(gbc.pc(), 0xf9d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a4b), 0xd9);
        EXPECT(gbc.readMem(0xee54), 0xd4);
        EXPECT(gbc.readMem(0xee55), 0xf9);
        // D9 018F
        gbc.setState(0x3aa, 0xdec1, 0xad00, 0x2ead, 0xd6cf, 0x396c, 0x0, 0x0);
        gbc.writeMem(0x3aa, { 0xd9 });
        gbc.writeMem(0xdec1, { 0xa6, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xdec3);
        EXPECT(gbc.pc(), 0x59a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdec1), 0xa6);
        EXPECT(gbc.readMem(0xdec2), 0x59);
        // D9 0190
        gbc.setState(0x2cc4, 0xdb7e, 0x4120, 0x8c29, 0xafa5, 0xa8c8, 0x1, 0x1);
        gbc.writeMem(0x2cc4, { 0xd9 });
        gbc.writeMem(0xdb7e, { 0x37, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xdb80);
        EXPECT(gbc.pc(), 0x7f37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb7e), 0x37);
        EXPECT(gbc.readMem(0xdb7f), 0x7f);
        // D9 0191
        gbc.setState(0x6284, 0xc577, 0x2890, 0x205, 0xf797, 0x46e3, 0x1, 0x0);
        gbc.writeMem(0x6284, { 0xd9 });
        gbc.writeMem(0xc577, { 0x9a, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc579);
        EXPECT(gbc.pc(), 0x629a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc577), 0x9a);
        EXPECT(gbc.readMem(0xc578), 0x62);
        // D9 0192
        gbc.setState(0xaa19, 0x3e9d, 0xbaf0, 0x8d87, 0xb407, 0x8f5e, 0x0, 0x0);
        gbc.writeMem(0x3e9d, { 0xc5, 0x32 });
        gbc.writeMem(0xaa19, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3e9f);
        EXPECT(gbc.pc(), 0x32c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa19), 0xd9);
        // D9 0193
        gbc.setState(0x68c6, 0x6953, 0x51a0, 0xe4e8, 0x667, 0x8651, 0x0, 0x0);
        gbc.writeMem(0x68c6, { 0xd9 });
        gbc.writeMem(0x6953, { 0xfc, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x6955);
        EXPECT(gbc.pc(), 0x6cfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0194
        gbc.setState(0xa543, 0x1445, 0xcc70, 0xcc5c, 0x9636, 0x9fb5, 0x0, 0x0);
        gbc.writeMem(0x1445, { 0xb, 0x7 });
        gbc.writeMem(0xa543, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1447);
        EXPECT(gbc.pc(), 0x70b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa543), 0xd9);
        // D9 0195
        gbc.setState(0x6a7e, 0xbef8, 0x8160, 0x7795, 0xf005, 0x2932, 0x1, 0x0);
        gbc.writeMem(0x6a7e, { 0xd9 });
        gbc.writeMem(0xbef8, { 0x58, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbefa);
        EXPECT(gbc.pc(), 0xfe58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbef8), 0x58);
        EXPECT(gbc.readMem(0xbef9), 0xfe);
        // D9 0196
        gbc.setState(0x735f, 0x7f35, 0x4220, 0x9206, 0xa4de, 0x5b21, 0x1, 0x0);
        gbc.writeMem(0x735f, { 0xd9 });
        gbc.writeMem(0x7f35, { 0x9a, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7f37);
        EXPECT(gbc.pc(), 0x1f9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0197
        gbc.setState(0x95e0, 0x5df3, 0x7810, 0xf443, 0x8166, 0x5512, 0x0, 0x0);
        gbc.writeMem(0x5df3, { 0x64, 0xe0 });
        gbc.writeMem(0x95e0, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5df5);
        EXPECT(gbc.pc(), 0xe064);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95e0), 0xd9);
        // D9 0199
        gbc.setState(0x4c5f, 0x42b0, 0xbf70, 0x9d12, 0xd752, 0xf86c, 0x0, 0x0);
        gbc.writeMem(0x42b0, { 0x3c, 0xec });
        gbc.writeMem(0x4c5f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x42b2);
        EXPECT(gbc.pc(), 0xec3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 019A
        gbc.setState(0x1e5e, 0xba48, 0xeba0, 0x5fa9, 0xfd5e, 0x53c4, 0x0, 0x1);
        gbc.writeMem(0x1e5e, { 0xd9 });
        gbc.writeMem(0xba48, { 0x61, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xba4a);
        EXPECT(gbc.pc(), 0x3361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba48), 0x61);
        EXPECT(gbc.readMem(0xba49), 0x33);
        // D9 019B
        gbc.setState(0x4584, 0x2caf, 0xb220, 0x7a46, 0xe229, 0x4edd, 0x1, 0x1);
        gbc.writeMem(0x2caf, { 0xaa, 0x79 });
        gbc.writeMem(0x4584, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2cb1);
        EXPECT(gbc.pc(), 0x79aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 019C
        gbc.setState(0xbe5, 0xa120, 0xa4f0, 0x3f1d, 0x71f4, 0xa33b, 0x1, 0x1);
        gbc.writeMem(0xbe5, { 0xd9 });
        gbc.writeMem(0xa120, { 0xa, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa122);
        EXPECT(gbc.pc(), 0xde0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa120), 0xa);
        EXPECT(gbc.readMem(0xa121), 0xde);
        // D9 019D
        gbc.setState(0xb436, 0xa4f1, 0xf800, 0x8db9, 0x8d83, 0x30fa, 0x0, 0x1);
        gbc.writeMem(0xa4f1, { 0xc2, 0x23 });
        gbc.writeMem(0xb436, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa4f3);
        EXPECT(gbc.pc(), 0x23c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4f1), 0xc2);
        EXPECT(gbc.readMem(0xa4f2), 0x23);
        EXPECT(gbc.readMem(0xb436), 0xd9);
        // D9 019E
        gbc.setState(0x94f7, 0xd022, 0x7790, 0xf7c9, 0x4b9a, 0xf2c, 0x0, 0x0);
        gbc.writeMem(0x94f7, { 0xd9 });
        gbc.writeMem(0xd022, { 0x32, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd024);
        EXPECT(gbc.pc(), 0x1b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94f7), 0xd9);
        EXPECT(gbc.readMem(0xd022), 0x32);
        EXPECT(gbc.readMem(0xd023), 0x1b);
        // D9 019F
        gbc.setState(0x1aa9, 0xb43b, 0x9d40, 0xcb5f, 0x6494, 0xe5e0, 0x1, 0x0);
        gbc.writeMem(0x1aa9, { 0xd9 });
        gbc.writeMem(0xb43b, { 0x39, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb43d);
        EXPECT(gbc.pc(), 0x7539);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb43b), 0x39);
        EXPECT(gbc.readMem(0xb43c), 0x75);
        // D9 01A0
        gbc.setState(0x8431, 0xcc2d, 0x5420, 0x1b8a, 0xf808, 0xb499, 0x1, 0x0);
        gbc.writeMem(0x8431, { 0xd9 });
        gbc.writeMem(0xcc2d, { 0xbc, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xcc2f);
        EXPECT(gbc.pc(), 0x84bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8431), 0xd9);
        EXPECT(gbc.readMem(0xcc2d), 0xbc);
        EXPECT(gbc.readMem(0xcc2e), 0x84);
        // D9 01A1
        gbc.setState(0x2c1b, 0x340a, 0xbec0, 0xab36, 0xca36, 0xd4ac, 0x1, 0x1);
        gbc.writeMem(0x2c1b, { 0xd9 });
        gbc.writeMem(0x340a, { 0x5b, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x340c);
        EXPECT(gbc.pc(), 0x925b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 01A2
        gbc.setState(0x3ac6, 0x75a7, 0xb660, 0xaf7f, 0x5a9e, 0x152f, 0x0, 0x0);
        gbc.writeMem(0x3ac6, { 0xd9 });
        gbc.writeMem(0x75a7, { 0xd9, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x75a9);
        EXPECT(gbc.pc(), 0xb6d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 01A3
        gbc.setState(0x7e71, 0xcf96, 0x8940, 0xe75, 0x636b, 0xabba, 0x0, 0x0);
        gbc.writeMem(0x7e71, { 0xd9 });
        gbc.writeMem(0xcf96, { 0xab, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xcf98);
        EXPECT(gbc.pc(), 0x4bab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf96), 0xab);
        EXPECT(gbc.readMem(0xcf97), 0x4b);
        // D9 01A4
        gbc.setState(0x83b2, 0x1bf1, 0x21f0, 0x2e0b, 0x9c5b, 0x2be6, 0x1, 0x1);
        gbc.writeMem(0x1bf1, { 0xb8, 0xdd });
        gbc.writeMem(0x83b2, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1bf3);
        EXPECT(gbc.pc(), 0xddb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83b2), 0xd9);
        // D9 01A5
        gbc.setState(0xa31a, 0x7a42, 0x4290, 0x87c5, 0x104a, 0x3376, 0x1, 0x0);
        gbc.writeMem(0x7a42, { 0xa8, 0x76 });
        gbc.writeMem(0xa31a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7a44);
        EXPECT(gbc.pc(), 0x76a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa31a), 0xd9);
        // D9 01A6
        gbc.setState(0xb0e, 0xeef5, 0xbb70, 0x73c3, 0x304a, 0xdf1d, 0x0, 0x1);
        gbc.writeMem(0xb0e, { 0xd9 });
        gbc.writeMem(0xeef5, { 0xd9, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xeef7);
        EXPECT(gbc.pc(), 0x39d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeef5), 0xd9);
        EXPECT(gbc.readMem(0xeef6), 0x39);
        // D9 01A7
        gbc.setState(0x79ae, 0x6c59, 0x5400, 0xe5dd, 0x318b, 0x5231, 0x1, 0x0);
        gbc.writeMem(0x6c59, { 0xd1, 0xfe });
        gbc.writeMem(0x79ae, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6c5b);
        EXPECT(gbc.pc(), 0xfed1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 01A8
        gbc.setState(0xa663, 0x6d85, 0x6ce0, 0x83cb, 0xa3f4, 0xff05, 0x0, 0x0);
        gbc.writeMem(0x6d85, { 0xc, 0xef });
        gbc.writeMem(0xa663, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6d87);
        EXPECT(gbc.pc(), 0xef0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa663), 0xd9);
        // D9 01A9
        gbc.setState(0x5dcc, 0xaec9, 0x18d0, 0xc2a8, 0x44c6, 0xbf69, 0x0, 0x0);
        gbc.writeMem(0x5dcc, { 0xd9 });
        gbc.writeMem(0xaec9, { 0x6e, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xaecb);
        EXPECT(gbc.pc(), 0x316e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaec9), 0x6e);
        EXPECT(gbc.readMem(0xaeca), 0x31);
        // D9 01AA
        gbc.setState(0x522e, 0x51fc, 0x9db0, 0xb31c, 0xe8aa, 0x3686, 0x0, 0x1);
        gbc.writeMem(0x51fc, { 0x3d, 0x9b });
        gbc.writeMem(0x522e, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x51fe);
        EXPECT(gbc.pc(), 0x9b3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 01AB
        gbc.setState(0x88ee, 0x90ff, 0xe420, 0x9405, 0xba36, 0x7c0, 0x1, 0x1);
        gbc.writeMem(0x88ee, { 0xd9 });
        gbc.writeMem(0x90ff, { 0x66, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9101);
        EXPECT(gbc.pc(), 0x2166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ee), 0xd9);
        EXPECT(gbc.readMem(0x90ff), 0x66);
        EXPECT(gbc.readMem(0x9100), 0x21);
        // D9 01AC
        gbc.setState(0x4249, 0x58fa, 0xaa0, 0xccb5, 0xf9bc, 0x8884, 0x0, 0x1);
        gbc.writeMem(0x4249, { 0xd9 });
        gbc.writeMem(0x58fa, { 0x68, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x58fc);
        EXPECT(gbc.pc(), 0xb968);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 01AD
        gbc.setState(0x5aba, 0x73e8, 0xf1c0, 0x9450, 0x1193, 0x98c9, 0x0, 0x1);
        gbc.writeMem(0x5aba, { 0xd9 });
        gbc.writeMem(0x73e8, { 0xf6, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x73ea);
        EXPECT(gbc.pc(), 0xb9f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 01AE
        gbc.setState(0x8e22, 0xa36d, 0x2e0, 0x531a, 0x1b73, 0x588d, 0x0, 0x0);
        gbc.writeMem(0x8e22, { 0xd9 });
        gbc.writeMem(0xa36d, { 0xf8, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa36f);
        EXPECT(gbc.pc(), 0x6af8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e22), 0xd9);
        EXPECT(gbc.readMem(0xa36d), 0xf8);
        EXPECT(gbc.readMem(0xa36e), 0x6a);
        // D9 01AF
        gbc.setState(0x4cc7, 0xe59f, 0x2e80, 0xd652, 0x985, 0xd41c, 0x1, 0x1);
        gbc.writeMem(0x4cc7, { 0xd9 });
        gbc.writeMem(0xe59f, { 0x1a, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe5a1);
        EXPECT(gbc.pc(), 0x841a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe59f), 0x1a);
        EXPECT(gbc.readMem(0xe5a0), 0x84);
        // D9 01B0
        gbc.setState(0xe9dc, 0xeba5, 0xa9c0, 0x1516, 0xfd6f, 0xfa37, 0x1, 0x1);
        gbc.writeMem(0xe9dc, { 0xd9 });
        gbc.writeMem(0xeba5, { 0x2d, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xeba7);
        EXPECT(gbc.pc(), 0x8f2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9dc), 0xd9);
        EXPECT(gbc.readMem(0xeba5), 0x2d);
        EXPECT(gbc.readMem(0xeba6), 0x8f);
        // D9 01B2
        gbc.setState(0x3dde, 0x14e9, 0x7c10, 0xb7ec, 0x2274, 0xe028, 0x0, 0x0);
        gbc.writeMem(0x14e9, { 0xf7, 0xd5 });
        gbc.writeMem(0x3dde, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x14eb);
        EXPECT(gbc.pc(), 0xd5f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 01B3
        gbc.setState(0xce02, 0xcc67, 0xe5e0, 0xcce4, 0xa1cc, 0x2726, 0x0, 0x0);
        gbc.writeMem(0xcc67, { 0x48, 0x59 });
        gbc.writeMem(0xce02, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xcc69);
        EXPECT(gbc.pc(), 0x5948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc67), 0x48);
        EXPECT(gbc.readMem(0xcc68), 0x59);
        EXPECT(gbc.readMem(0xce02), 0xd9);
        // D9 01B4
        gbc.setState(0xebc0, 0x995d, 0xe50, 0x2d71, 0x34ab, 0xca96, 0x0, 0x0);
        gbc.writeMem(0x995d, { 0xa1, 0xd9 });
        gbc.writeMem(0xebc0, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x995f);
        EXPECT(gbc.pc(), 0xd9a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x995d), 0xa1);
        EXPECT(gbc.readMem(0x995e), 0xd9);
        EXPECT(gbc.readMem(0xebc0), 0xd9);
        // D9 01B5
        gbc.setState(0x2441, 0xfc5b, 0xdb50, 0x1cd0, 0x74c8, 0xdd0e, 0x1, 0x1);
        gbc.writeMem(0x2441, { 0xd9 });
        gbc.writeMem(0xfc5b, { 0x21, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xfc5d);
        EXPECT(gbc.pc(), 0x1721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc5b), 0x21);
        EXPECT(gbc.readMem(0xfc5c), 0x17);
        // D9 01B6
        gbc.setState(0xe621, 0x6878, 0x610, 0x93c2, 0xddc5, 0xec6d, 0x0, 0x0);
        gbc.writeMem(0x6878, { 0xd8, 0xd1 });
        gbc.writeMem(0xe621, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x687a);
        EXPECT(gbc.pc(), 0xd1d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe621), 0xd9);
        // D9 01B7
        gbc.setState(0xce2b, 0x37ae, 0x8f20, 0x255f, 0x8abe, 0x7965, 0x1, 0x0);
        gbc.writeMem(0x37ae, { 0xa3, 0xab });
        gbc.writeMem(0xce2b, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x37b0);
        EXPECT(gbc.pc(), 0xaba3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce2b), 0xd9);
        // D9 01B8
        gbc.setState(0xaa61, 0x3efa, 0xe880, 0xaaaf, 0xff76, 0xc378, 0x1, 0x0);
        gbc.writeMem(0x3efa, { 0x9e, 0xf9 });
        gbc.writeMem(0xaa61, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x3efc);
        EXPECT(gbc.pc(), 0xf99e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa61), 0xd9);
        // D9 01B9
        gbc.setState(0xc1ef, 0xa49e, 0x7f10, 0x1a48, 0xc666, 0x920f, 0x1, 0x1);
        gbc.writeMem(0xa49e, { 0xc0, 0xad });
        gbc.writeMem(0xc1ef, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa4a0);
        EXPECT(gbc.pc(), 0xadc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa49e), 0xc0);
        EXPECT(gbc.readMem(0xa49f), 0xad);
        EXPECT(gbc.readMem(0xc1ef), 0xd9);
        // D9 01BA
        gbc.setState(0xe894, 0x264d, 0xc3b0, 0xd8c2, 0x27e5, 0x1e44, 0x1, 0x0);
        gbc.writeMem(0x264d, { 0xc0, 0xab });
        gbc.writeMem(0xe894, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x264f);
        EXPECT(gbc.pc(), 0xabc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe894), 0xd9);
        // D9 01BB
        gbc.setState(0x74aa, 0x711e, 0xc6f0, 0x37a6, 0x3849, 0xa32d, 0x1, 0x1);
        gbc.writeMem(0x711e, { 0xe2, 0xd2 });
        gbc.writeMem(0x74aa, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7120);
        EXPECT(gbc.pc(), 0xd2e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 01BC
        gbc.setState(0x30b, 0x9019, 0xd5d0, 0xd687, 0xd195, 0xeeb7, 0x0, 0x0);
        gbc.writeMem(0x30b, { 0xd9 });
        gbc.writeMem(0x9019, { 0xad, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x901b);
        EXPECT(gbc.pc(), 0x51ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9019), 0xad);
        EXPECT(gbc.readMem(0x901a), 0x51);
        // D9 01BD
        gbc.setState(0x1929, 0x63f4, 0xe50, 0xaddc, 0x10d7, 0x7509, 0x0, 0x0);
        gbc.writeMem(0x1929, { 0xd9 });
        gbc.writeMem(0x63f4, { 0xb0, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x63f6);
        EXPECT(gbc.pc(), 0x14b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 01BE
        gbc.setState(0xd521, 0x1248, 0x2550, 0x878f, 0x1fa0, 0x1b25, 0x1, 0x0);
        gbc.writeMem(0x1248, { 0xfc, 0x90 });
        gbc.writeMem(0xd521, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x124a);
        EXPECT(gbc.pc(), 0x90fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd521), 0xd9);
        // D9 01BF
        gbc.setState(0xfa8, 0x4bf5, 0x72c0, 0x334f, 0xc62f, 0xa0fa, 0x0, 0x0);
        gbc.writeMem(0xfa8, { 0xd9 });
        gbc.writeMem(0x4bf5, { 0xdf, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4bf7);
        EXPECT(gbc.pc(), 0xc0df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 01C0
        gbc.setState(0xd91d, 0x755d, 0x8cb0, 0xf479, 0xef37, 0x5de2, 0x0, 0x0);
        gbc.writeMem(0x755d, { 0x4c, 0x2 });
        gbc.writeMem(0xd91d, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x755f);
        EXPECT(gbc.pc(), 0x24c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd91d), 0xd9);
        // D9 01C1
        gbc.setState(0xeb2, 0x6058, 0x54b0, 0xaa5f, 0x6bff, 0xa165, 0x0, 0x0);
        gbc.writeMem(0xeb2, { 0xd9 });
        gbc.writeMem(0x6058, { 0x4c, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x605a);
        EXPECT(gbc.pc(), 0xcb4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 01C2
        gbc.setState(0x5d4b, 0x6d17, 0x7350, 0x72af, 0x28c5, 0xaf1a, 0x1, 0x0);
        gbc.writeMem(0x5d4b, { 0xd9 });
        gbc.writeMem(0x6d17, { 0x99, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6d19);
        EXPECT(gbc.pc(), 0x9899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 01C3
        gbc.setState(0xee6b, 0x55e2, 0x6200, 0x1ed7, 0xe5ee, 0xf776, 0x0, 0x1);
        gbc.writeMem(0x55e2, { 0x58, 0x55 });
        gbc.writeMem(0xee6b, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x55e4);
        EXPECT(gbc.pc(), 0x5558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee6b), 0xd9);
        // D9 01C4
        gbc.setState(0x6c50, 0x23e9, 0x75a0, 0xb6bf, 0xaa04, 0x53d3, 0x0, 0x1);
        gbc.writeMem(0x23e9, { 0xae, 0xa9 });
        gbc.writeMem(0x6c50, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x23eb);
        EXPECT(gbc.pc(), 0xa9ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 01C5
        gbc.setState(0x945f, 0x3317, 0xf4f0, 0xa1e6, 0x5820, 0xb82, 0x1, 0x1);
        gbc.writeMem(0x3317, { 0x59, 0xf6 });
        gbc.writeMem(0x945f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3319);
        EXPECT(gbc.pc(), 0xf659);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x945f), 0xd9);
        // D9 01C6
        gbc.setState(0x7ba9, 0xc903, 0xf6e0, 0x9887, 0x11b1, 0x773e, 0x0, 0x1);
        gbc.writeMem(0x7ba9, { 0xd9 });
        gbc.writeMem(0xc903, { 0x5f, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc905);
        EXPECT(gbc.pc(), 0xbd5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc903), 0x5f);
        EXPECT(gbc.readMem(0xc904), 0xbd);
        // D9 01C7
        gbc.setState(0x11e9, 0x47f6, 0xf7a0, 0x53e9, 0xec4f, 0xa114, 0x0, 0x1);
        gbc.writeMem(0x11e9, { 0xd9 });
        gbc.writeMem(0x47f6, { 0xb7, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x47f8);
        EXPECT(gbc.pc(), 0xb7b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 01C8
        gbc.setState(0x44b7, 0x7fe4, 0xd0a0, 0x9e3d, 0x2005, 0x3d0d, 0x0, 0x0);
        gbc.writeMem(0x44b7, { 0xd9 });
        gbc.writeMem(0x7fe4, { 0xb7, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7fe6);
        EXPECT(gbc.pc(), 0xefb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 01C9
        gbc.setState(0x64f9, 0x25d, 0xca40, 0x2d31, 0xa725, 0x2785, 0x0, 0x1);
        gbc.writeMem(0x25d, { 0x68, 0x58 });
        gbc.writeMem(0x64f9, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x25f);
        EXPECT(gbc.pc(), 0x5868);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 01CA
        gbc.setState(0x6852, 0x415d, 0xa290, 0x709f, 0x1f14, 0x328b, 0x1, 0x1);
        gbc.writeMem(0x415d, { 0x99, 0xaf });
        gbc.writeMem(0x6852, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x415f);
        EXPECT(gbc.pc(), 0xaf99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 01CB
        gbc.setState(0x1854, 0xa706, 0xac90, 0x3ff8, 0xf6, 0x46fc, 0x0, 0x1);
        gbc.writeMem(0x1854, { 0xd9 });
        gbc.writeMem(0xa706, { 0x8a, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa708);
        EXPECT(gbc.pc(), 0x8e8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa706), 0x8a);
        EXPECT(gbc.readMem(0xa707), 0x8e);
        // D9 01CC
        gbc.setState(0x912, 0xc1d4, 0x1480, 0x9f74, 0x9816, 0x9d64, 0x0, 0x0);
        gbc.writeMem(0x912, { 0xd9 });
        gbc.writeMem(0xc1d4, { 0x6c, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc1d6);
        EXPECT(gbc.pc(), 0x6b6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1d4), 0x6c);
        EXPECT(gbc.readMem(0xc1d5), 0x6b);
        // D9 01CD
        gbc.setState(0xd7a8, 0x79cc, 0xb9c0, 0x90bb, 0x7d0f, 0x35e1, 0x1, 0x0);
        gbc.writeMem(0x79cc, { 0xaa, 0x42 });
        gbc.writeMem(0xd7a8, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x79ce);
        EXPECT(gbc.pc(), 0x42aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a8), 0xd9);
        // D9 01CE
        gbc.setState(0x2bdc, 0x7d84, 0x4850, 0x2c6, 0xa980, 0x420c, 0x1, 0x1);
        gbc.writeMem(0x2bdc, { 0xd9 });
        gbc.writeMem(0x7d84, { 0x93, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7d86);
        EXPECT(gbc.pc(), 0x2093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 01CF
        gbc.setState(0x6e3a, 0xcf19, 0x33a0, 0x170e, 0xd6e8, 0xe86e, 0x0, 0x1);
        gbc.writeMem(0x6e3a, { 0xd9 });
        gbc.writeMem(0xcf19, { 0x10, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xcf1b);
        EXPECT(gbc.pc(), 0x4910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf19), 0x10);
        EXPECT(gbc.readMem(0xcf1a), 0x49);
        // D9 01D0
        gbc.setState(0x382c, 0xc73, 0x6f80, 0x950e, 0xc551, 0x3f93, 0x1, 0x0);
        gbc.writeMem(0xc73, { 0xf3, 0x32 });
        gbc.writeMem(0x382c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc75);
        EXPECT(gbc.pc(), 0x32f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 01D1
        gbc.setState(0x912d, 0xc8d7, 0x5d20, 0x90ec, 0x5009, 0x8ed0, 0x1, 0x1);
        gbc.writeMem(0x912d, { 0xd9 });
        gbc.writeMem(0xc8d7, { 0x24, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xc8d9);
        EXPECT(gbc.pc(), 0xcb24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x912d), 0xd9);
        EXPECT(gbc.readMem(0xc8d7), 0x24);
        EXPECT(gbc.readMem(0xc8d8), 0xcb);
        // D9 01D2
        gbc.setState(0x9fd8, 0x4f5f, 0xd0e0, 0x7a20, 0xb550, 0x34a9, 0x1, 0x0);
        gbc.writeMem(0x4f5f, { 0xc9, 0x7d });
        gbc.writeMem(0x9fd8, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4f61);
        EXPECT(gbc.pc(), 0x7dc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd8), 0xd9);
        // D9 01D3
        gbc.setState(0x74f7, 0x10ee, 0xd2a0, 0xe279, 0x415f, 0xd0c1, 0x0, 0x0);
        gbc.writeMem(0x10ee, { 0xbe, 0x4f });
        gbc.writeMem(0x74f7, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x10f0);
        EXPECT(gbc.pc(), 0x4fbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 01D4
        gbc.setState(0xe470, 0x53d3, 0xb3f0, 0xc689, 0xd7a0, 0x6645, 0x1, 0x0);
        gbc.writeMem(0x53d3, { 0xe6, 0x14 });
        gbc.writeMem(0xe470, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x53d5);
        EXPECT(gbc.pc(), 0x14e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe470), 0xd9);
        // D9 01D5
        gbc.setState(0x8592, 0x4c1c, 0x8b00, 0xaa91, 0xa0f5, 0x822b, 0x0, 0x1);
        gbc.writeMem(0x4c1c, { 0xa7, 0xce });
        gbc.writeMem(0x8592, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4c1e);
        EXPECT(gbc.pc(), 0xcea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8592), 0xd9);
        // D9 01D6
        gbc.setState(0x317f, 0xf5d9, 0xe9b0, 0xc4f0, 0x6f0f, 0xd295, 0x0, 0x0);
        gbc.writeMem(0x317f, { 0xd9 });
        gbc.writeMem(0xf5d9, { 0xf4, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf5db);
        EXPECT(gbc.pc(), 0xa6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf5d9), 0xf4);
        EXPECT(gbc.readMem(0xf5da), 0xa6);
        // D9 01D7
        gbc.setState(0x9a92, 0x1fb5, 0xac40, 0xef56, 0x9693, 0x32d6, 0x0, 0x1);
        gbc.writeMem(0x1fb5, { 0x57, 0xe1 });
        gbc.writeMem(0x9a92, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1fb7);
        EXPECT(gbc.pc(), 0xe157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a92), 0xd9);
        // D9 01D8
        gbc.setState(0x9213, 0x2ccf, 0x52a0, 0xcc2f, 0x65c6, 0x9688, 0x0, 0x1);
        gbc.writeMem(0x2ccf, { 0x80, 0xbd });
        gbc.writeMem(0x9213, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2cd1);
        EXPECT(gbc.pc(), 0xbd80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9213), 0xd9);
        // D9 01D9
        gbc.setState(0xc365, 0xd109, 0x4a90, 0xb475, 0xdd26, 0x3c07, 0x0, 0x0);
        gbc.writeMem(0xc365, { 0xd9 });
        gbc.writeMem(0xd109, { 0x66, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd10b);
        EXPECT(gbc.pc(), 0xd766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc365), 0xd9);
        EXPECT(gbc.readMem(0xd109), 0x66);
        EXPECT(gbc.readMem(0xd10a), 0xd7);
        // D9 01DB
        gbc.setState(0xc0ea, 0xbbe5, 0x5cf0, 0xc56c, 0xf929, 0xcbef, 0x0, 0x1);
        gbc.writeMem(0xbbe5, { 0x37, 0x1b });
        gbc.writeMem(0xc0ea, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xbbe7);
        EXPECT(gbc.pc(), 0x1b37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe5), 0x37);
        EXPECT(gbc.readMem(0xbbe6), 0x1b);
        EXPECT(gbc.readMem(0xc0ea), 0xd9);
        // D9 01DC
        gbc.setState(0x9b63, 0x92e4, 0x2c40, 0x69b5, 0xcc9f, 0xa9b3, 0x0, 0x1);
        gbc.writeMem(0x92e4, { 0xd, 0x72 });
        gbc.writeMem(0x9b63, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x92e6);
        EXPECT(gbc.pc(), 0x720d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e4), 0xd);
        EXPECT(gbc.readMem(0x92e5), 0x72);
        EXPECT(gbc.readMem(0x9b63), 0xd9);
        // D9 01DD
        gbc.setState(0x802d, 0xf2ba, 0x8760, 0x9ad6, 0x41d1, 0x5c33, 0x0, 0x1);
        gbc.writeMem(0x802d, { 0xd9 });
        gbc.writeMem(0xf2ba, { 0xd9, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf2bc);
        EXPECT(gbc.pc(), 0xf2d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x802d), 0xd9);
        EXPECT(gbc.readMem(0xf2ba), 0xd9);
        EXPECT(gbc.readMem(0xf2bb), 0xf2);
        // D9 01DE
        gbc.setState(0x239e, 0x64b5, 0xde90, 0xaec8, 0x8e3a, 0x8582, 0x1, 0x0);
        gbc.writeMem(0x239e, { 0xd9 });
        gbc.writeMem(0x64b5, { 0xaf, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x64b7);
        EXPECT(gbc.pc(), 0xedaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 01DF
        gbc.setState(0x5f, 0x5409, 0x230, 0xbbd3, 0xad80, 0xeb8f, 0x0, 0x0);
        gbc.writeMem(0x5f, { 0xd9 });
        gbc.writeMem(0x5409, { 0x27, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x540b);
        EXPECT(gbc.pc(), 0x6c27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 01E0
        gbc.setState(0x441d, 0xbb47, 0xc010, 0x84e9, 0x4e63, 0xd87a, 0x0, 0x0);
        gbc.writeMem(0x441d, { 0xd9 });
        gbc.writeMem(0xbb47, { 0x8b, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xbb49);
        EXPECT(gbc.pc(), 0x648b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb47), 0x8b);
        EXPECT(gbc.readMem(0xbb48), 0x64);
        // D9 01E1
        gbc.setState(0xca9e, 0x987f, 0x7fa0, 0x9e3f, 0xcaa7, 0x9e7c, 0x0, 0x0);
        gbc.writeMem(0x987f, { 0xd4, 0x17 });
        gbc.writeMem(0xca9e, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9881);
        EXPECT(gbc.pc(), 0x17d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x987f), 0xd4);
        EXPECT(gbc.readMem(0x9880), 0x17);
        EXPECT(gbc.readMem(0xca9e), 0xd9);
        // D9 01E2
        gbc.setState(0xa8bf, 0x2d9b, 0xec70, 0xfb9f, 0x64bf, 0xd16e, 0x0, 0x0);
        gbc.writeMem(0x2d9b, { 0x5c, 0xeb });
        gbc.writeMem(0xa8bf, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2d9d);
        EXPECT(gbc.pc(), 0xeb5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8bf), 0xd9);
        // D9 01E3
        gbc.setState(0x65b4, 0x8e3d, 0x8120, 0xb5c5, 0x9c0d, 0x8956, 0x1, 0x0);
        gbc.writeMem(0x65b4, { 0xd9 });
        gbc.writeMem(0x8e3d, { 0x54, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8e3f);
        EXPECT(gbc.pc(), 0xa054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e3d), 0x54);
        EXPECT(gbc.readMem(0x8e3e), 0xa0);
        // D9 01E4
        gbc.setState(0x4891, 0x1402, 0x3130, 0xf8da, 0xfd12, 0xea44, 0x0, 0x0);
        gbc.writeMem(0x1402, { 0x20, 0xcd });
        gbc.writeMem(0x4891, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1404);
        EXPECT(gbc.pc(), 0xcd20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 01E6
        gbc.setState(0x7ab2, 0x1ef5, 0x9030, 0xace0, 0xda83, 0x944a, 0x1, 0x1);
        gbc.writeMem(0x1ef5, { 0x1c, 0xe8 });
        gbc.writeMem(0x7ab2, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1ef7);
        EXPECT(gbc.pc(), 0xe81c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 01E7
        gbc.setState(0xeba9, 0x6926, 0xb100, 0xb873, 0x3d58, 0xd466, 0x0, 0x0);
        gbc.writeMem(0x6926, { 0x94, 0x5c });
        gbc.writeMem(0xeba9, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6928);
        EXPECT(gbc.pc(), 0x5c94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeba9), 0xd9);
        // D9 01E8
        gbc.setState(0x8ebc, 0x70e3, 0x8740, 0x2ffd, 0x15e7, 0x2201, 0x0, 0x1);
        gbc.writeMem(0x70e3, { 0xfa, 0xad });
        gbc.writeMem(0x8ebc, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x70e5);
        EXPECT(gbc.pc(), 0xadfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ebc), 0xd9);
        // D9 01E9
        gbc.setState(0x7073, 0x4889, 0xf5a0, 0xf4ed, 0x83c, 0x3885, 0x1, 0x1);
        gbc.writeMem(0x4889, { 0x1f, 0x1c });
        gbc.writeMem(0x7073, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x488b);
        EXPECT(gbc.pc(), 0x1c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 01EA
        gbc.setState(0x1f7b, 0xb5cd, 0x2ae0, 0xa258, 0x4ff7, 0xd35e, 0x0, 0x0);
        gbc.writeMem(0x1f7b, { 0xd9 });
        gbc.writeMem(0xb5cd, { 0xbb, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb5cf);
        EXPECT(gbc.pc(), 0xf6bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5cd), 0xbb);
        EXPECT(gbc.readMem(0xb5ce), 0xf6);
        // D9 01EB
        gbc.setState(0xf66, 0xfbe7, 0xac90, 0x2d35, 0x9d76, 0xbc3d, 0x1, 0x0);
        gbc.writeMem(0xf66, { 0xd9 });
        gbc.writeMem(0xfbe7, { 0xa5, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xfbe9);
        EXPECT(gbc.pc(), 0x37a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfbe7), 0xa5);
        EXPECT(gbc.readMem(0xfbe8), 0x37);
        // D9 01EC
        gbc.setState(0x2181, 0x9e75, 0x77a0, 0xc884, 0x5d34, 0xb110, 0x0, 0x0);
        gbc.writeMem(0x2181, { 0xd9 });
        gbc.writeMem(0x9e75, { 0xee, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9e77);
        EXPECT(gbc.pc(), 0x6fee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e75), 0xee);
        EXPECT(gbc.readMem(0x9e76), 0x6f);
        // D9 01ED
        gbc.setState(0x17f6, 0x1631, 0x9910, 0xa646, 0x67e0, 0xe350, 0x0, 0x1);
        gbc.writeMem(0x1631, { 0x4d, 0x27 });
        gbc.writeMem(0x17f6, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1633);
        EXPECT(gbc.pc(), 0x274d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 01EE
        gbc.setState(0xd04c, 0xcede, 0x5b20, 0x4097, 0xbda, 0x16fb, 0x0, 0x0);
        gbc.writeMem(0xcede, { 0xbf, 0xd9 });
        gbc.writeMem(0xd04c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xcee0);
        EXPECT(gbc.pc(), 0xd9bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcede), 0xbf);
        EXPECT(gbc.readMem(0xcedf), 0xd9);
        EXPECT(gbc.readMem(0xd04c), 0xd9);
        // D9 01EF
        gbc.setState(0xb850, 0xd4ff, 0x640, 0xca1f, 0x52e7, 0x55ad, 0x0, 0x1);
        gbc.writeMem(0xb850, { 0xd9 });
        gbc.writeMem(0xd4ff, { 0x53, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd501);
        EXPECT(gbc.pc(), 0xdd53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb850), 0xd9);
        EXPECT(gbc.readMem(0xd4ff), 0x53);
        EXPECT(gbc.readMem(0xd500), 0xdd);
        // D9 01F0
        gbc.setState(0x8bec, 0x2f36, 0x2e90, 0x47c6, 0x74d4, 0xbea, 0x1, 0x0);
        gbc.writeMem(0x2f36, { 0xce, 0xb9 });
        gbc.writeMem(0x8bec, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2f38);
        EXPECT(gbc.pc(), 0xb9ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bec), 0xd9);
        // D9 01F1
        gbc.setState(0x943d, 0x8d6e, 0x6bc0, 0x578c, 0x12f6, 0x5ba2, 0x0, 0x0);
        gbc.writeMem(0x8d6e, { 0x57, 0x3a });
        gbc.writeMem(0x943d, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8d70);
        EXPECT(gbc.pc(), 0x3a57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d6e), 0x57);
        EXPECT(gbc.readMem(0x8d6f), 0x3a);
        EXPECT(gbc.readMem(0x943d), 0xd9);
        // D9 01F2
        gbc.setState(0xeab0, 0xd3fe, 0x3e0, 0xb5ef, 0xf882, 0xe015, 0x0, 0x1);
        gbc.writeMem(0xd3fe, { 0xd3, 0x48 });
        gbc.writeMem(0xeab0, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd400);
        EXPECT(gbc.pc(), 0x48d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3fe), 0xd3);
        EXPECT(gbc.readMem(0xd3ff), 0x48);
        EXPECT(gbc.readMem(0xeab0), 0xd9);
        // D9 01F3
        gbc.setState(0x3768, 0x21d7, 0x2a60, 0x38ff, 0xe71e, 0xab86, 0x0, 0x0);
        gbc.writeMem(0x21d7, { 0xf1, 0x2a });
        gbc.writeMem(0x3768, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x21d9);
        EXPECT(gbc.pc(), 0x2af1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 01F4
        gbc.setState(0xaff2, 0x90be, 0xdfe0, 0xa31d, 0x239b, 0xeeea, 0x1, 0x0);
        gbc.writeMem(0x90be, { 0xa8, 0x65 });
        gbc.writeMem(0xaff2, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x90c0);
        EXPECT(gbc.pc(), 0x65a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90be), 0xa8);
        EXPECT(gbc.readMem(0x90bf), 0x65);
        EXPECT(gbc.readMem(0xaff2), 0xd9);
        // D9 01F5
        gbc.setState(0x1dce, 0x1833, 0x7be0, 0x8f49, 0x89cb, 0x3250, 0x0, 0x1);
        gbc.writeMem(0x1833, { 0xd8, 0xb9 });
        gbc.writeMem(0x1dce, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1835);
        EXPECT(gbc.pc(), 0xb9d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 01F6
        gbc.setState(0xe252, 0x5d8d, 0x910, 0x493, 0x6c0b, 0xfcc9, 0x1, 0x1);
        gbc.writeMem(0x5d8d, { 0x4, 0x8 });
        gbc.writeMem(0xe252, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5d8f);
        EXPECT(gbc.pc(), 0x804);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe252), 0xd9);
        // D9 01F7
        gbc.setState(0xbced, 0x30d, 0x7420, 0xf572, 0x52cf, 0xec65, 0x1, 0x0);
        gbc.writeMem(0x30d, { 0x32, 0xb1 });
        gbc.writeMem(0xbced, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x30f);
        EXPECT(gbc.pc(), 0xb132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbced), 0xd9);
        // D9 01F8
        gbc.setState(0xbad, 0xe5da, 0xf190, 0xef, 0x3767, 0xb28d, 0x0, 0x0);
        gbc.writeMem(0xbad, { 0xd9 });
        gbc.writeMem(0xe5da, { 0xf, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe5dc);
        EXPECT(gbc.pc(), 0xd80f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5da), 0xf);
        EXPECT(gbc.readMem(0xe5db), 0xd8);
        // D9 01F9
        gbc.setState(0x1aee, 0x9236, 0x24b0, 0xb5c6, 0x82ad, 0xc4c, 0x1, 0x0);
        gbc.writeMem(0x1aee, { 0xd9 });
        gbc.writeMem(0x9236, { 0x4, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9238);
        EXPECT(gbc.pc(), 0x5204);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9236), 0x4);
        EXPECT(gbc.readMem(0x9237), 0x52);
        // D9 01FA
        gbc.setState(0xe35b, 0xffce, 0xe5f0, 0x3ab6, 0xd83, 0xad6b, 0x1, 0x1);
        gbc.writeMem(0xe35b, { 0xd9 });
        gbc.writeMem(0xffce, { 0x8d, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xffd0);
        EXPECT(gbc.pc(), 0x8a8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe35b), 0xd9);
        EXPECT(gbc.readMem(0xffce), 0x8d);
        EXPECT(gbc.readMem(0xffcf), 0x8a);
        // D9 01FB
        gbc.setState(0x7643, 0x6150, 0x52c0, 0xb686, 0x4ddb, 0x2032, 0x1, 0x0);
        gbc.writeMem(0x6150, { 0x58, 0x63 });
        gbc.writeMem(0x7643, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6152);
        EXPECT(gbc.pc(), 0x6358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 01FC
        gbc.setState(0x4c8e, 0xbc9f, 0xe330, 0x40eb, 0x2c67, 0x68c8, 0x1, 0x0);
        gbc.writeMem(0x4c8e, { 0xd9 });
        gbc.writeMem(0xbc9f, { 0x9e, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xbca1);
        EXPECT(gbc.pc(), 0x4c9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc9f), 0x9e);
        EXPECT(gbc.readMem(0xbca0), 0x4c);
        // D9 01FD
        gbc.setState(0x1ba6, 0x1fc3, 0x5040, 0x996c, 0x1cfa, 0xd408, 0x0, 0x0);
        gbc.writeMem(0x1ba6, { 0xd9 });
        gbc.writeMem(0x1fc3, { 0x8, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1fc5);
        EXPECT(gbc.pc(), 0x3508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 01FE
        gbc.setState(0x9271, 0xf54f, 0x4b10, 0x9b0c, 0xd8b0, 0x754, 0x0, 0x1);
        gbc.writeMem(0x9271, { 0xd9 });
        gbc.writeMem(0xf54f, { 0x71, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf551);
        EXPECT(gbc.pc(), 0x1971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9271), 0xd9);
        EXPECT(gbc.readMem(0xf54f), 0x71);
        EXPECT(gbc.readMem(0xf550), 0x19);
        // D9 01FF
        gbc.setState(0x5900, 0x90f8, 0x6960, 0x775, 0xd967, 0x72a5, 0x0, 0x1);
        gbc.writeMem(0x5900, { 0xd9 });
        gbc.writeMem(0x90f8, { 0xfd, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x90fa);
        EXPECT(gbc.pc(), 0x92fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90f8), 0xfd);
        EXPECT(gbc.readMem(0x90f9), 0x92);
        // D9 0200
        gbc.setState(0xf88, 0x6b01, 0xabc0, 0x145c, 0xa282, 0x7630, 0x1, 0x1);
        gbc.writeMem(0xf88, { 0xd9 });
        gbc.writeMem(0x6b01, { 0x53, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6b03);
        EXPECT(gbc.pc(), 0x9753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0201
        gbc.setState(0x77dd, 0xa452, 0x7080, 0xa176, 0x8e77, 0x4ba7, 0x1, 0x1);
        gbc.writeMem(0x77dd, { 0xd9 });
        gbc.writeMem(0xa452, { 0x58, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa454);
        EXPECT(gbc.pc(), 0x4458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa452), 0x58);
        EXPECT(gbc.readMem(0xa453), 0x44);
        // D9 0202
        gbc.setState(0xaf1f, 0x81bc, 0x2590, 0x4ec2, 0x6c77, 0xf739, 0x1, 0x1);
        gbc.writeMem(0x81bc, { 0x91, 0x5f });
        gbc.writeMem(0xaf1f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x81be);
        EXPECT(gbc.pc(), 0x5f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81bc), 0x91);
        EXPECT(gbc.readMem(0x81bd), 0x5f);
        EXPECT(gbc.readMem(0xaf1f), 0xd9);
        // D9 0203
        gbc.setState(0xe630, 0x8597, 0xaa30, 0x7cd2, 0x35bb, 0xcf97, 0x1, 0x1);
        gbc.writeMem(0x8597, { 0x7b, 0x3f });
        gbc.writeMem(0xe630, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8599);
        EXPECT(gbc.pc(), 0x3f7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8597), 0x7b);
        EXPECT(gbc.readMem(0x8598), 0x3f);
        EXPECT(gbc.readMem(0xe630), 0xd9);
        // D9 0204
        gbc.setState(0x6448, 0x7d49, 0xcd10, 0x8157, 0x7de3, 0x5668, 0x0, 0x0);
        gbc.writeMem(0x6448, { 0xd9 });
        gbc.writeMem(0x7d49, { 0x3c, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7d4b);
        EXPECT(gbc.pc(), 0x8e3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 0205
        gbc.setState(0xb05b, 0x1bb9, 0xe090, 0xec0e, 0xc40b, 0xe19b, 0x0, 0x1);
        gbc.writeMem(0x1bb9, { 0xb7, 0xe7 });
        gbc.writeMem(0xb05b, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1bbb);
        EXPECT(gbc.pc(), 0xe7b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb05b), 0xd9);
        // D9 0206
        gbc.setState(0x8527, 0x4377, 0x2a10, 0xd340, 0xc620, 0x936, 0x1, 0x0);
        gbc.writeMem(0x4377, { 0x75, 0x6 });
        gbc.writeMem(0x8527, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4379);
        EXPECT(gbc.pc(), 0x675);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8527), 0xd9);
        // D9 0207
        gbc.setState(0xab36, 0xfb12, 0xa90, 0xc5ae, 0x1196, 0xecdf, 0x0, 0x1);
        gbc.writeMem(0xab36, { 0xd9 });
        gbc.writeMem(0xfb12, { 0x97, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xfb14);
        EXPECT(gbc.pc(), 0x4e97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab36), 0xd9);
        EXPECT(gbc.readMem(0xfb12), 0x97);
        EXPECT(gbc.readMem(0xfb13), 0x4e);
        // D9 0208
        gbc.setState(0x8479, 0x195, 0xf890, 0x6d3d, 0x356f, 0x7a0, 0x0, 0x0);
        gbc.writeMem(0x195, { 0x4d, 0xc1 });
        gbc.writeMem(0x8479, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x197);
        EXPECT(gbc.pc(), 0xc14d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8479), 0xd9);
        // D9 0209
        gbc.setState(0x5bee, 0x90a0, 0x2150, 0xc8c, 0xec49, 0x30e0, 0x1, 0x1);
        gbc.writeMem(0x5bee, { 0xd9 });
        gbc.writeMem(0x90a0, { 0x28, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x90a2);
        EXPECT(gbc.pc(), 0x6128);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90a0), 0x28);
        EXPECT(gbc.readMem(0x90a1), 0x61);
        // D9 020A
        gbc.setState(0xbbb1, 0x15ed, 0xba80, 0x56a5, 0x5fb0, 0xb4f5, 0x1, 0x0);
        gbc.writeMem(0x15ed, { 0x1f, 0xfa });
        gbc.writeMem(0xbbb1, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x15ef);
        EXPECT(gbc.pc(), 0xfa1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbb1), 0xd9);
        // D9 020B
        gbc.setState(0x6cee, 0xd982, 0x9eb0, 0x5d4f, 0xf6a0, 0x39cc, 0x1, 0x0);
        gbc.writeMem(0x6cee, { 0xd9 });
        gbc.writeMem(0xd982, { 0xef, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd984);
        EXPECT(gbc.pc(), 0xd0ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd982), 0xef);
        EXPECT(gbc.readMem(0xd983), 0xd0);
        // D9 020C
        gbc.setState(0x3721, 0x726e, 0x4c30, 0x84b4, 0xb629, 0xac9c, 0x0, 0x0);
        gbc.writeMem(0x3721, { 0xd9 });
        gbc.writeMem(0x726e, { 0xa7, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7270);
        EXPECT(gbc.pc(), 0xf4a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 020D
        gbc.setState(0x673c, 0x45a0, 0x5000, 0x36bf, 0xe2d2, 0xdfab, 0x1, 0x1);
        gbc.writeMem(0x45a0, { 0x7d, 0xd7 });
        gbc.writeMem(0x673c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x45a2);
        EXPECT(gbc.pc(), 0xd77d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 020F
        gbc.setState(0x84a5, 0x7c14, 0x10c0, 0x5d5b, 0x723b, 0xc292, 0x0, 0x1);
        gbc.writeMem(0x7c14, { 0x4c, 0x8f });
        gbc.writeMem(0x84a5, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7c16);
        EXPECT(gbc.pc(), 0x8f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a5), 0xd9);
        // D9 0210
        gbc.setState(0x388e, 0xd510, 0x7090, 0xbe84, 0x2c2c, 0xf4e1, 0x1, 0x1);
        gbc.writeMem(0x388e, { 0xd9 });
        gbc.writeMem(0xd510, { 0xeb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd512);
        EXPECT(gbc.pc(), 0x81eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd510), 0xeb);
        EXPECT(gbc.readMem(0xd511), 0x81);
        // D9 0212
        gbc.setState(0x91df, 0xacf4, 0xc250, 0xc1c6, 0xe3bd, 0xae26, 0x0, 0x0);
        gbc.writeMem(0x91df, { 0xd9 });
        gbc.writeMem(0xacf4, { 0x82, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xacf6);
        EXPECT(gbc.pc(), 0x9582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91df), 0xd9);
        EXPECT(gbc.readMem(0xacf4), 0x82);
        EXPECT(gbc.readMem(0xacf5), 0x95);
        // D9 0213
        gbc.setState(0xade2, 0x846a, 0x280, 0x34bb, 0x429f, 0x444a, 0x1, 0x1);
        gbc.writeMem(0x846a, { 0x12, 0x97 });
        gbc.writeMem(0xade2, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x846c);
        EXPECT(gbc.pc(), 0x9712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x846a), 0x12);
        EXPECT(gbc.readMem(0x846b), 0x97);
        EXPECT(gbc.readMem(0xade2), 0xd9);
        // D9 0214
        gbc.setState(0x4594, 0xc48a, 0x4350, 0x89fa, 0xabcd, 0x4e9a, 0x1, 0x1);
        gbc.writeMem(0x4594, { 0xd9 });
        gbc.writeMem(0xc48a, { 0xc5, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc48c);
        EXPECT(gbc.pc(), 0x25c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc48a), 0xc5);
        EXPECT(gbc.readMem(0xc48b), 0x25);
        // D9 0215
        gbc.setState(0x37a8, 0x52af, 0x50e0, 0xff2c, 0xa2d2, 0xae40, 0x0, 0x1);
        gbc.writeMem(0x37a8, { 0xd9 });
        gbc.writeMem(0x52af, { 0x38, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x52b1);
        EXPECT(gbc.pc(), 0x8838);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0216
        gbc.setState(0x84f7, 0xfdaa, 0x2370, 0x9fcf, 0x768a, 0x9b3e, 0x0, 0x1);
        gbc.writeMem(0x84f7, { 0xd9 });
        gbc.writeMem(0xfdaa, { 0xcf, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xfdac);
        EXPECT(gbc.pc(), 0x9cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84f7), 0xd9);
        EXPECT(gbc.readMem(0xfdaa), 0xcf);
        EXPECT(gbc.readMem(0xfdab), 0x9);
        // D9 0217
        gbc.setState(0xcb12, 0x799f, 0x95a0, 0xf333, 0xd215, 0x4035, 0x0, 0x0);
        gbc.writeMem(0x799f, { 0xab, 0xf0 });
        gbc.writeMem(0xcb12, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x79a1);
        EXPECT(gbc.pc(), 0xf0ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb12), 0xd9);
        // D9 0218
        gbc.setState(0x51fc, 0xf1b6, 0xf950, 0x8da0, 0x3f12, 0xd104, 0x1, 0x0);
        gbc.writeMem(0x51fc, { 0xd9 });
        gbc.writeMem(0xf1b6, { 0x41, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf1b8);
        EXPECT(gbc.pc(), 0xdf41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf1b6), 0x41);
        EXPECT(gbc.readMem(0xf1b7), 0xdf);
        // D9 0219
        gbc.setState(0x6082, 0x599d, 0x5230, 0xb781, 0x8d8e, 0x791e, 0x0, 0x0);
        gbc.writeMem(0x599d, { 0x24, 0xc0 });
        gbc.writeMem(0x6082, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x599f);
        EXPECT(gbc.pc(), 0xc024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 021A
        gbc.setState(0xae0b, 0x80af, 0xe210, 0x1a1f, 0x25fa, 0xef55, 0x0, 0x0);
        gbc.writeMem(0x80af, { 0x1e, 0x1 });
        gbc.writeMem(0xae0b, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x80b1);
        EXPECT(gbc.pc(), 0x11e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80af), 0x1e);
        EXPECT(gbc.readMem(0x80b0), 0x1);
        EXPECT(gbc.readMem(0xae0b), 0xd9);
        // D9 021B
        gbc.setState(0x3b89, 0x5d4f, 0x18f0, 0xb13d, 0xe1f5, 0xdc0b, 0x1, 0x1);
        gbc.writeMem(0x3b89, { 0xd9 });
        gbc.writeMem(0x5d4f, { 0x8d, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5d51);
        EXPECT(gbc.pc(), 0xd78d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 021C
        gbc.setState(0xbed5, 0xf58e, 0xdab0, 0x2301, 0xc93e, 0x1931, 0x0, 0x1);
        gbc.writeMem(0xbed5, { 0xd9 });
        gbc.writeMem(0xf58e, { 0x97, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf590);
        EXPECT(gbc.pc(), 0x6197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbed5), 0xd9);
        EXPECT(gbc.readMem(0xf58e), 0x97);
        EXPECT(gbc.readMem(0xf58f), 0x61);
        // D9 021D
        gbc.setState(0xade0, 0x41a9, 0x63e0, 0xb7ca, 0xa1fb, 0x2a1e, 0x0, 0x1);
        gbc.writeMem(0x41a9, { 0x4, 0x79 });
        gbc.writeMem(0xade0, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x41ab);
        EXPECT(gbc.pc(), 0x7904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xade0), 0xd9);
        // D9 021E
        gbc.setState(0x43ff, 0xfa37, 0x8e30, 0x1b, 0x37ab, 0x6018, 0x1, 0x0);
        gbc.writeMem(0x43ff, { 0xd9 });
        gbc.writeMem(0xfa37, { 0x8b, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xfa39);
        EXPECT(gbc.pc(), 0xc68b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa37), 0x8b);
        EXPECT(gbc.readMem(0xfa38), 0xc6);
        // D9 021F
        gbc.setState(0xb30, 0x89dd, 0xbe90, 0xf47e, 0x753, 0xade5, 0x0, 0x0);
        gbc.writeMem(0xb30, { 0xd9 });
        gbc.writeMem(0x89dd, { 0x6e, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x89df);
        EXPECT(gbc.pc(), 0xb36e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89dd), 0x6e);
        EXPECT(gbc.readMem(0x89de), 0xb3);
        // D9 0220
        gbc.setState(0x9bb9, 0x3418, 0x9320, 0x79cc, 0x5e14, 0xcfe7, 0x0, 0x1);
        gbc.writeMem(0x3418, { 0xcd, 0x4e });
        gbc.writeMem(0x9bb9, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x341a);
        EXPECT(gbc.pc(), 0x4ecd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bb9), 0xd9);
        // D9 0221
        gbc.setState(0x1b60, 0xdceb, 0xe6f0, 0xbb9c, 0x59d0, 0xec39, 0x1, 0x1);
        gbc.writeMem(0x1b60, { 0xd9 });
        gbc.writeMem(0xdceb, { 0x87, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xdced);
        EXPECT(gbc.pc(), 0x8787);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdceb), 0x87);
        EXPECT(gbc.readMem(0xdcec), 0x87);
        // D9 0222
        gbc.setState(0xb179, 0x41d2, 0x4820, 0x767e, 0xc57f, 0x2928, 0x0, 0x1);
        gbc.writeMem(0x41d2, { 0x8, 0x69 });
        gbc.writeMem(0xb179, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x41d4);
        EXPECT(gbc.pc(), 0x6908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb179), 0xd9);
        // D9 0223
        gbc.setState(0x4b08, 0x6f71, 0x7410, 0x56be, 0xea54, 0xb3f3, 0x0, 0x1);
        gbc.writeMem(0x4b08, { 0xd9 });
        gbc.writeMem(0x6f71, { 0x40, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6f73);
        EXPECT(gbc.pc(), 0x9440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 0224
        gbc.setState(0x5c4d, 0x4a69, 0xb7b0, 0x68e6, 0xe33e, 0xc523, 0x1, 0x1);
        gbc.writeMem(0x4a69, { 0x76, 0xb1 });
        gbc.writeMem(0x5c4d, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4a6b);
        EXPECT(gbc.pc(), 0xb176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0225
        gbc.setState(0x3356, 0x764c, 0x7f60, 0x8930, 0x441, 0x1c18, 0x0, 0x0);
        gbc.writeMem(0x3356, { 0xd9 });
        gbc.writeMem(0x764c, { 0x12, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x764e);
        EXPECT(gbc.pc(), 0x7912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0226
        gbc.setState(0x75d1, 0x9dfe, 0x8230, 0xf950, 0x2436, 0x4f6, 0x1, 0x0);
        gbc.writeMem(0x75d1, { 0xd9 });
        gbc.writeMem(0x9dfe, { 0x95, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9e00);
        EXPECT(gbc.pc(), 0x4695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dfe), 0x95);
        EXPECT(gbc.readMem(0x9dff), 0x46);
        // D9 0227
        gbc.setState(0xd282, 0x57c3, 0x7f90, 0x1642, 0x92ab, 0xaf38, 0x0, 0x1);
        gbc.writeMem(0x57c3, { 0xc0, 0x19 });
        gbc.writeMem(0xd282, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x57c5);
        EXPECT(gbc.pc(), 0x19c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd282), 0xd9);
        // D9 0228
        gbc.setState(0x1e80, 0x7311, 0x36f0, 0x9bea, 0x6eec, 0x5344, 0x0, 0x1);
        gbc.writeMem(0x1e80, { 0xd9 });
        gbc.writeMem(0x7311, { 0xcf, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7313);
        EXPECT(gbc.pc(), 0x48cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0229
        gbc.setState(0xd566, 0x40cf, 0xe4b0, 0x63f9, 0x5bb1, 0xf904, 0x0, 0x0);
        gbc.writeMem(0x40cf, { 0xe5, 0x2b });
        gbc.writeMem(0xd566, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x40d1);
        EXPECT(gbc.pc(), 0x2be5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd566), 0xd9);
        // D9 022A
        gbc.setState(0xdf6c, 0x645a, 0xea20, 0x95c5, 0x66d6, 0x79f6, 0x0, 0x1);
        gbc.writeMem(0x645a, { 0xef, 0xae });
        gbc.writeMem(0xdf6c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x645c);
        EXPECT(gbc.pc(), 0xaeef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf6c), 0xd9);
        // D9 022B
        gbc.setState(0x2066, 0xdc5d, 0xd320, 0xb135, 0xfd1e, 0xc25e, 0x1, 0x1);
        gbc.writeMem(0x2066, { 0xd9 });
        gbc.writeMem(0xdc5d, { 0xe8, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xdc5f);
        EXPECT(gbc.pc(), 0x3de8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc5d), 0xe8);
        EXPECT(gbc.readMem(0xdc5e), 0x3d);
        // D9 022C
        gbc.setState(0x8882, 0x5b9a, 0x27c0, 0x3f71, 0xa96a, 0x10ab, 0x1, 0x1);
        gbc.writeMem(0x5b9a, { 0xe, 0xa1 });
        gbc.writeMem(0x8882, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5b9c);
        EXPECT(gbc.pc(), 0xa10e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8882), 0xd9);
        // D9 022D
        gbc.setState(0xd03, 0x7a5e, 0x1d20, 0xbdb9, 0xb265, 0x40b6, 0x1, 0x1);
        gbc.writeMem(0xd03, { 0xd9 });
        gbc.writeMem(0x7a5e, { 0x94, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7a60);
        EXPECT(gbc.pc(), 0xa94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 022E
        gbc.setState(0xe425, 0x1a0d, 0x7640, 0x323f, 0x9692, 0x2fbe, 0x1, 0x1);
        gbc.writeMem(0x1a0d, { 0x4b, 0x27 });
        gbc.writeMem(0xe425, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1a0f);
        EXPECT(gbc.pc(), 0x274b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe425), 0xd9);
        // D9 022F
        gbc.setState(0xa20a, 0x6d27, 0xb4e0, 0xfb53, 0x133, 0xfe5e, 0x0, 0x1);
        gbc.writeMem(0x6d27, { 0x95, 0x8d });
        gbc.writeMem(0xa20a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6d29);
        EXPECT(gbc.pc(), 0x8d95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa20a), 0xd9);
        // D9 0230
        gbc.setState(0x78ef, 0x4e1b, 0xbd20, 0xcbcc, 0x81a4, 0x793c, 0x1, 0x1);
        gbc.writeMem(0x4e1b, { 0xe4, 0x1a });
        gbc.writeMem(0x78ef, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4e1d);
        EXPECT(gbc.pc(), 0x1ae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0231
        gbc.setState(0x93f0, 0xe2d8, 0x76d0, 0x2e9, 0xf6ab, 0x2b65, 0x0, 0x0);
        gbc.writeMem(0x93f0, { 0xd9 });
        gbc.writeMem(0xe2d8, { 0xf0, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe2da);
        EXPECT(gbc.pc(), 0x9cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93f0), 0xd9);
        EXPECT(gbc.readMem(0xe2d8), 0xf0);
        EXPECT(gbc.readMem(0xe2d9), 0x9c);
        // D9 0232
        gbc.setState(0x8860, 0x2427, 0x4d90, 0x2286, 0x6c31, 0x4c15, 0x0, 0x0);
        gbc.writeMem(0x2427, { 0xf1, 0x14 });
        gbc.writeMem(0x8860, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2429);
        EXPECT(gbc.pc(), 0x14f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8860), 0xd9);
        // D9 0234
        gbc.setState(0xd2b0, 0xd670, 0x6510, 0x6689, 0x771b, 0x1f6, 0x1, 0x0);
        gbc.writeMem(0xd2b0, { 0xd9 });
        gbc.writeMem(0xd670, { 0xa2, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd672);
        EXPECT(gbc.pc(), 0xcda2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2b0), 0xd9);
        EXPECT(gbc.readMem(0xd670), 0xa2);
        EXPECT(gbc.readMem(0xd671), 0xcd);
        // D9 0235
        gbc.setState(0x991b, 0x7bcb, 0x3b0, 0x8ec7, 0xfc0f, 0x9646, 0x1, 0x1);
        gbc.writeMem(0x7bcb, { 0xa5, 0x18 });
        gbc.writeMem(0x991b, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7bcd);
        EXPECT(gbc.pc(), 0x18a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x991b), 0xd9);
        // D9 0236
        gbc.setState(0x3065, 0xc852, 0xf4b0, 0x82eb, 0xc3f, 0x9eec, 0x0, 0x0);
        gbc.writeMem(0x3065, { 0xd9 });
        gbc.writeMem(0xc852, { 0x62, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc854);
        EXPECT(gbc.pc(), 0x8362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc852), 0x62);
        EXPECT(gbc.readMem(0xc853), 0x83);
        // D9 0237
        gbc.setState(0x115c, 0xd7a7, 0xa490, 0xeceb, 0x29c3, 0x3fc6, 0x1, 0x0);
        gbc.writeMem(0x115c, { 0xd9 });
        gbc.writeMem(0xd7a7, { 0xfb, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd7a9);
        EXPECT(gbc.pc(), 0xadfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7a7), 0xfb);
        EXPECT(gbc.readMem(0xd7a8), 0xad);
        // D9 0238
        gbc.setState(0x3e90, 0xf46d, 0x8cd0, 0x3c95, 0x841e, 0x37ab, 0x1, 0x0);
        gbc.writeMem(0x3e90, { 0xd9 });
        gbc.writeMem(0xf46d, { 0x4d, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf46f);
        EXPECT(gbc.pc(), 0x6d4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf46d), 0x4d);
        EXPECT(gbc.readMem(0xf46e), 0x6d);
        // D9 0239
        gbc.setState(0xa3b4, 0x7ce, 0x6870, 0x3ef8, 0xaee5, 0xf13d, 0x0, 0x0);
        gbc.writeMem(0x7ce, { 0xd9, 0x2c });
        gbc.writeMem(0xa3b4, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7d0);
        EXPECT(gbc.pc(), 0x2cd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3b4), 0xd9);
        // D9 023B
        gbc.setState(0x502e, 0xe72f, 0xef30, 0xc301, 0xec2a, 0x323b, 0x1, 0x1);
        gbc.writeMem(0x502e, { 0xd9 });
        gbc.writeMem(0xe72f, { 0xd2, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe731);
        EXPECT(gbc.pc(), 0x2ed2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe72f), 0xd2);
        EXPECT(gbc.readMem(0xe730), 0x2e);
        // D9 023C
        gbc.setState(0x7c64, 0xcb48, 0x7590, 0x6c3, 0x8a62, 0x627a, 0x0, 0x0);
        gbc.writeMem(0x7c64, { 0xd9 });
        gbc.writeMem(0xcb48, { 0xff, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcb4a);
        EXPECT(gbc.pc(), 0x53ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb48), 0xff);
        EXPECT(gbc.readMem(0xcb49), 0x53);
        // D9 023D
        gbc.setState(0x4993, 0xd051, 0xe690, 0xb35b, 0xcdab, 0xc537, 0x1, 0x0);
        gbc.writeMem(0x4993, { 0xd9 });
        gbc.writeMem(0xd051, { 0xc7, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd053);
        EXPECT(gbc.pc(), 0x1dc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd051), 0xc7);
        EXPECT(gbc.readMem(0xd052), 0x1d);
        // D9 023E
        gbc.setState(0xa2cc, 0x1042, 0xf720, 0x8f09, 0xc0fe, 0x11b, 0x1, 0x0);
        gbc.writeMem(0x1042, { 0x21, 0xe6 });
        gbc.writeMem(0xa2cc, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1044);
        EXPECT(gbc.pc(), 0xe621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2cc), 0xd9);
        // D9 023F
        gbc.setState(0x64f3, 0x375a, 0x58b0, 0xdca0, 0xea30, 0xedd9, 0x0, 0x1);
        gbc.writeMem(0x375a, { 0x4c, 0x35 });
        gbc.writeMem(0x64f3, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x375c);
        EXPECT(gbc.pc(), 0x354c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0240
        gbc.setState(0x83db, 0x8fec, 0xeaa0, 0x2d12, 0x4792, 0x6e3c, 0x1, 0x0);
        gbc.writeMem(0x83db, { 0xd9 });
        gbc.writeMem(0x8fec, { 0x50, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8fee);
        EXPECT(gbc.pc(), 0xc150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83db), 0xd9);
        EXPECT(gbc.readMem(0x8fec), 0x50);
        EXPECT(gbc.readMem(0x8fed), 0xc1);
        // D9 0241
        gbc.setState(0xd123, 0xd212, 0x1d40, 0x500c, 0x9357, 0x6e13, 0x0, 0x0);
        gbc.writeMem(0xd123, { 0xd9 });
        gbc.writeMem(0xd212, { 0x52, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd214);
        EXPECT(gbc.pc(), 0x2f52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd123), 0xd9);
        EXPECT(gbc.readMem(0xd212), 0x52);
        EXPECT(gbc.readMem(0xd213), 0x2f);
        // D9 0242
        gbc.setState(0x826a, 0x65ae, 0x7fa0, 0xbed6, 0xfa5, 0xb695, 0x1, 0x1);
        gbc.writeMem(0x65ae, { 0xa4, 0x20 });
        gbc.writeMem(0x826a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x65b0);
        EXPECT(gbc.pc(), 0x20a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x826a), 0xd9);
        // D9 0243
        gbc.setState(0x53e2, 0xfa1c, 0xe440, 0x6d39, 0x381c, 0x9197, 0x1, 0x0);
        gbc.writeMem(0x53e2, { 0xd9 });
        gbc.writeMem(0xfa1c, { 0x5b, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xfa1e);
        EXPECT(gbc.pc(), 0xd75b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa1c), 0x5b);
        EXPECT(gbc.readMem(0xfa1d), 0xd7);
        // D9 0244
        gbc.setState(0x2f39, 0x895e, 0x2750, 0xfae5, 0x4597, 0xdcd4, 0x0, 0x1);
        gbc.writeMem(0x2f39, { 0xd9 });
        gbc.writeMem(0x895e, { 0xd2, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8960);
        EXPECT(gbc.pc(), 0x78d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x895e), 0xd2);
        EXPECT(gbc.readMem(0x895f), 0x78);
        // D9 0245
        gbc.setState(0xa5ad, 0xec20, 0xa4e0, 0x3dfc, 0xf589, 0xf734, 0x1, 0x0);
        gbc.writeMem(0xa5ad, { 0xd9 });
        gbc.writeMem(0xec20, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xec22);
        EXPECT(gbc.pc(), 0x99cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ad), 0xd9);
        EXPECT(gbc.readMem(0xec20), 0xcb);
        EXPECT(gbc.readMem(0xec21), 0x99);
        // D9 0246
        gbc.setState(0x4f5e, 0xd150, 0x69b0, 0x52f0, 0x19f0, 0xf49a, 0x0, 0x0);
        gbc.writeMem(0x4f5e, { 0xd9 });
        gbc.writeMem(0xd150, { 0xee, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd152);
        EXPECT(gbc.pc(), 0x6bee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd150), 0xee);
        EXPECT(gbc.readMem(0xd151), 0x6b);
        // D9 0248
        gbc.setState(0x7efa, 0x7adc, 0xda60, 0x3e12, 0x4ba4, 0x67b5, 0x1, 0x1);
        gbc.writeMem(0x7adc, { 0x5d, 0xab });
        gbc.writeMem(0x7efa, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7ade);
        EXPECT(gbc.pc(), 0xab5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0249
        gbc.setState(0x9b37, 0xafa5, 0x86d0, 0xd297, 0x9475, 0xaebd, 0x0, 0x1);
        gbc.writeMem(0x9b37, { 0xd9 });
        gbc.writeMem(0xafa5, { 0xca, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xafa7);
        EXPECT(gbc.pc(), 0x1cca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b37), 0xd9);
        EXPECT(gbc.readMem(0xafa5), 0xca);
        EXPECT(gbc.readMem(0xafa6), 0x1c);
        // D9 024A
        gbc.setState(0x618b, 0x7665, 0x7c0, 0x5400, 0xb8ec, 0xa839, 0x1, 0x1);
        gbc.writeMem(0x618b, { 0xd9 });
        gbc.writeMem(0x7665, { 0x65, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7667);
        EXPECT(gbc.pc(), 0x4665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 024B
        gbc.setState(0x32ce, 0x41b6, 0x6070, 0x6793, 0xbbf5, 0xd5af, 0x1, 0x0);
        gbc.writeMem(0x32ce, { 0xd9 });
        gbc.writeMem(0x41b6, { 0x9b, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x41b8);
        EXPECT(gbc.pc(), 0x1a9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 024C
        gbc.setState(0x2f91, 0x688a, 0xb530, 0x1065, 0xb660, 0x84ba, 0x1, 0x1);
        gbc.writeMem(0x2f91, { 0xd9 });
        gbc.writeMem(0x688a, { 0x32, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x688c);
        EXPECT(gbc.pc(), 0x7c32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 024D
        gbc.setState(0xce43, 0x49af, 0x98b0, 0x40e7, 0xafb9, 0x3a5e, 0x1, 0x1);
        gbc.writeMem(0x49af, { 0xa6, 0xf1 });
        gbc.writeMem(0xce43, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x49b1);
        EXPECT(gbc.pc(), 0xf1a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce43), 0xd9);
        // D9 024E
        gbc.setState(0x4166, 0xc3bf, 0xde60, 0xb16e, 0xf462, 0xc929, 0x1, 0x0);
        gbc.writeMem(0x4166, { 0xd9 });
        gbc.writeMem(0xc3bf, { 0x3, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc3c1);
        EXPECT(gbc.pc(), 0x7503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3bf), 0x3);
        EXPECT(gbc.readMem(0xc3c0), 0x75);
        // D9 024F
        gbc.setState(0x94d1, 0x45f4, 0xeec0, 0x841d, 0x191d, 0xcc3, 0x0, 0x0);
        gbc.writeMem(0x45f4, { 0x3c, 0x5b });
        gbc.writeMem(0x94d1, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x45f6);
        EXPECT(gbc.pc(), 0x5b3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d1), 0xd9);
        // D9 0250
        gbc.setState(0xb94b, 0xe074, 0xdd50, 0x777b, 0xe8cd, 0xf37b, 0x0, 0x1);
        gbc.writeMem(0xb94b, { 0xd9 });
        gbc.writeMem(0xe074, { 0xdb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe076);
        EXPECT(gbc.pc(), 0x2db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb94b), 0xd9);
        EXPECT(gbc.readMem(0xe074), 0xdb);
        EXPECT(gbc.readMem(0xe075), 0x2);
        // D9 0251
        gbc.setState(0x343, 0xceff, 0x32a0, 0x8350, 0xd241, 0x3cfe, 0x0, 0x0);
        gbc.writeMem(0x343, { 0xd9 });
        gbc.writeMem(0xceff, { 0xe7, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xcf01);
        EXPECT(gbc.pc(), 0xa3e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceff), 0xe7);
        EXPECT(gbc.readMem(0xcf00), 0xa3);
        // D9 0252
        gbc.setState(0x2c1c, 0xdb64, 0x9d80, 0xfc57, 0xd16a, 0xd96c, 0x1, 0x0);
        gbc.writeMem(0x2c1c, { 0xd9 });
        gbc.writeMem(0xdb64, { 0xf, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xdb66);
        EXPECT(gbc.pc(), 0xa10f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb64), 0xf);
        EXPECT(gbc.readMem(0xdb65), 0xa1);
        // D9 0253
        gbc.setState(0x6c6a, 0xc616, 0xfb40, 0x24c0, 0xe621, 0x5964, 0x1, 0x0);
        gbc.writeMem(0x6c6a, { 0xd9 });
        gbc.writeMem(0xc616, { 0x6, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc618);
        EXPECT(gbc.pc(), 0xdb06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc616), 0x6);
        EXPECT(gbc.readMem(0xc617), 0xdb);
        // D9 0255
        gbc.setState(0x4785, 0x7ea2, 0xe400, 0x23d6, 0x1ef6, 0x1906, 0x1, 0x0);
        gbc.writeMem(0x4785, { 0xd9 });
        gbc.writeMem(0x7ea2, { 0x44, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7ea4);
        EXPECT(gbc.pc(), 0x5544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0256
        gbc.setState(0x1988, 0x1f6e, 0x1dc0, 0xefd5, 0xa3bd, 0x3267, 0x1, 0x0);
        gbc.writeMem(0x1988, { 0xd9 });
        gbc.writeMem(0x1f6e, { 0x2a, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x1f70);
        EXPECT(gbc.pc(), 0x252a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0257
        gbc.setState(0x3ffb, 0xf8ce, 0x3ab0, 0x2078, 0x2701, 0x2d8e, 0x1, 0x1);
        gbc.writeMem(0x3ffb, { 0xd9 });
        gbc.writeMem(0xf8ce, { 0xe4, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf8d0);
        EXPECT(gbc.pc(), 0x60e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf8ce), 0xe4);
        EXPECT(gbc.readMem(0xf8cf), 0x60);
        // D9 0258
        gbc.setState(0xac4d, 0x3c85, 0xba80, 0xb0a8, 0x538, 0xd6b1, 0x0, 0x1);
        gbc.writeMem(0x3c85, { 0xfd, 0x3a });
        gbc.writeMem(0xac4d, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3c87);
        EXPECT(gbc.pc(), 0x3afd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac4d), 0xd9);
        // D9 0259
        gbc.setState(0xaad4, 0x16c1, 0x8ad0, 0xe0fe, 0xa1d, 0xf947, 0x0, 0x1);
        gbc.writeMem(0x16c1, { 0x1d, 0xa4 });
        gbc.writeMem(0xaad4, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x16c3);
        EXPECT(gbc.pc(), 0xa41d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaad4), 0xd9);
        // D9 025A
        gbc.setState(0x7b13, 0x673, 0x2e80, 0x713, 0xdefa, 0xb074, 0x1, 0x1);
        gbc.writeMem(0x673, { 0x5a, 0x26 });
        gbc.writeMem(0x7b13, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x675);
        EXPECT(gbc.pc(), 0x265a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 025B
        gbc.setState(0x40a7, 0xa6fc, 0xde50, 0x41fb, 0xb7be, 0x9a7f, 0x1, 0x1);
        gbc.writeMem(0x40a7, { 0xd9 });
        gbc.writeMem(0xa6fc, { 0x8a, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa6fe);
        EXPECT(gbc.pc(), 0x758a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6fc), 0x8a);
        EXPECT(gbc.readMem(0xa6fd), 0x75);
        // D9 025C
        gbc.setState(0x5816, 0x4592, 0x4520, 0xcee0, 0xc01, 0x436c, 0x0, 0x1);
        gbc.writeMem(0x4592, { 0x67, 0xf9 });
        gbc.writeMem(0x5816, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4594);
        EXPECT(gbc.pc(), 0xf967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 025D
        gbc.setState(0x78b7, 0xc62d, 0x2b20, 0xbbb, 0xc05b, 0xe927, 0x1, 0x0);
        gbc.writeMem(0x78b7, { 0xd9 });
        gbc.writeMem(0xc62d, { 0xb7, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xc62f);
        EXPECT(gbc.pc(), 0xceb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc62d), 0xb7);
        EXPECT(gbc.readMem(0xc62e), 0xce);
        // D9 025E
        gbc.setState(0x5af1, 0x3c6, 0x960, 0xcbd8, 0xe80e, 0xe5a9, 0x1, 0x1);
        gbc.writeMem(0x3c6, { 0x9f, 0xf4 });
        gbc.writeMem(0x5af1, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3c8);
        EXPECT(gbc.pc(), 0xf49f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 025F
        gbc.setState(0x5556, 0xe088, 0x9160, 0x206b, 0x37c7, 0xa577, 0x0, 0x1);
        gbc.writeMem(0x5556, { 0xd9 });
        gbc.writeMem(0xe088, { 0xe2, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe08a);
        EXPECT(gbc.pc(), 0xe2e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe088), 0xe2);
        EXPECT(gbc.readMem(0xe089), 0xe2);
        // D9 0260
        gbc.setState(0x2dfd, 0xd813, 0xa3c0, 0xfeea, 0x94e, 0xb1db, 0x0, 0x0);
        gbc.writeMem(0x2dfd, { 0xd9 });
        gbc.writeMem(0xd813, { 0xe, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd815);
        EXPECT(gbc.pc(), 0x720e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd813), 0xe);
        EXPECT(gbc.readMem(0xd814), 0x72);
        // D9 0261
        gbc.setState(0x83bf, 0x5e46, 0xcd40, 0x160e, 0x2e91, 0xdc70, 0x0, 0x1);
        gbc.writeMem(0x5e46, { 0xfe, 0x9 });
        gbc.writeMem(0x83bf, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5e48);
        EXPECT(gbc.pc(), 0x9fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83bf), 0xd9);
        // D9 0262
        gbc.setState(0xbd34, 0x6d68, 0x5ff0, 0x63a3, 0xe32a, 0x1e23, 0x1, 0x0);
        gbc.writeMem(0x6d68, { 0xa8, 0xf8 });
        gbc.writeMem(0xbd34, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6d6a);
        EXPECT(gbc.pc(), 0xf8a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd34), 0xd9);
        // D9 0263
        gbc.setState(0x181c, 0xf925, 0xb7b0, 0xa8c6, 0x8891, 0xe44e, 0x0, 0x1);
        gbc.writeMem(0x181c, { 0xd9 });
        gbc.writeMem(0xf925, { 0xe, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf927);
        EXPECT(gbc.pc(), 0xd10e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf925), 0xe);
        EXPECT(gbc.readMem(0xf926), 0xd1);
        // D9 0264
        gbc.setState(0x3b8, 0xf0c7, 0x7ff0, 0x1128, 0x6209, 0x54ab, 0x0, 0x1);
        gbc.writeMem(0x3b8, { 0xd9 });
        gbc.writeMem(0xf0c7, { 0x3, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf0c9);
        EXPECT(gbc.pc(), 0x1503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf0c7), 0x3);
        EXPECT(gbc.readMem(0xf0c8), 0x15);
        // D9 0265
        gbc.setState(0x291e, 0xd657, 0xb730, 0xaae3, 0x2ebc, 0xdcdb, 0x0, 0x1);
        gbc.writeMem(0x291e, { 0xd9 });
        gbc.writeMem(0xd657, { 0x96, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd659);
        EXPECT(gbc.pc(), 0xfd96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd657), 0x96);
        EXPECT(gbc.readMem(0xd658), 0xfd);
        // D9 0266
        gbc.setState(0xbd0c, 0x796f, 0xd410, 0x71f9, 0xf121, 0x8cad, 0x0, 0x0);
        gbc.writeMem(0x796f, { 0x79, 0x35 });
        gbc.writeMem(0xbd0c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7971);
        EXPECT(gbc.pc(), 0x3579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd0c), 0xd9);
        // D9 0267
        gbc.setState(0x4da8, 0xb75c, 0xfd40, 0x709, 0xa8f4, 0x4be2, 0x0, 0x0);
        gbc.writeMem(0x4da8, { 0xd9 });
        gbc.writeMem(0xb75c, { 0xa0, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb75e);
        EXPECT(gbc.pc(), 0xeda0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb75c), 0xa0);
        EXPECT(gbc.readMem(0xb75d), 0xed);
        // D9 0268
        gbc.setState(0x7810, 0x97b0, 0xcad0, 0x247f, 0x3c8, 0x7941, 0x1, 0x0);
        gbc.writeMem(0x7810, { 0xd9 });
        gbc.writeMem(0x97b0, { 0xc, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x97b2);
        EXPECT(gbc.pc(), 0xeb0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97b0), 0xc);
        EXPECT(gbc.readMem(0x97b1), 0xeb);
        // D9 0269
        gbc.setState(0xae47, 0x6993, 0xf8f0, 0xdf38, 0xe1d2, 0x5858, 0x0, 0x1);
        gbc.writeMem(0x6993, { 0xa5, 0x1f });
        gbc.writeMem(0xae47, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6995);
        EXPECT(gbc.pc(), 0x1fa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae47), 0xd9);
        // D9 026A
        gbc.setState(0x84ef, 0xc312, 0x58c0, 0xe5b2, 0x5b91, 0x26b0, 0x0, 0x0);
        gbc.writeMem(0x84ef, { 0xd9 });
        gbc.writeMem(0xc312, { 0x35, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc314);
        EXPECT(gbc.pc(), 0xea35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84ef), 0xd9);
        EXPECT(gbc.readMem(0xc312), 0x35);
        EXPECT(gbc.readMem(0xc313), 0xea);
        // D9 026B
        gbc.setState(0x8c02, 0x50dd, 0x9900, 0xeb3, 0xec7a, 0xd5d7, 0x1, 0x0);
        gbc.writeMem(0x50dd, { 0xb, 0x35 });
        gbc.writeMem(0x8c02, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x50df);
        EXPECT(gbc.pc(), 0x350b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c02), 0xd9);
        // D9 026C
        gbc.setState(0x3001, 0x9f73, 0x74f0, 0x371e, 0xe754, 0xec4a, 0x0, 0x1);
        gbc.writeMem(0x3001, { 0xd9 });
        gbc.writeMem(0x9f73, { 0xc9, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9f75);
        EXPECT(gbc.pc(), 0x24c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f73), 0xc9);
        EXPECT(gbc.readMem(0x9f74), 0x24);
        // D9 026D
        gbc.setState(0x93f8, 0xdf79, 0xd770, 0xc253, 0xd694, 0x54, 0x0, 0x0);
        gbc.writeMem(0x93f8, { 0xd9 });
        gbc.writeMem(0xdf79, { 0x7a, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xdf7b);
        EXPECT(gbc.pc(), 0x827a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93f8), 0xd9);
        EXPECT(gbc.readMem(0xdf79), 0x7a);
        EXPECT(gbc.readMem(0xdf7a), 0x82);
        // D9 026E
        gbc.setState(0x8689, 0x87b5, 0x1df0, 0xeb4f, 0x4aed, 0xcf0b, 0x0, 0x1);
        gbc.writeMem(0x8689, { 0xd9 });
        gbc.writeMem(0x87b5, { 0x20, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x87b7);
        EXPECT(gbc.pc(), 0x8220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8689), 0xd9);
        EXPECT(gbc.readMem(0x87b5), 0x20);
        EXPECT(gbc.readMem(0x87b6), 0x82);
        // D9 026F
        gbc.setState(0x924f, 0x24a9, 0x4110, 0xdbb5, 0x5e1d, 0x376c, 0x1, 0x0);
        gbc.writeMem(0x24a9, { 0x4d, 0x21 });
        gbc.writeMem(0x924f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x24ab);
        EXPECT(gbc.pc(), 0x214d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x924f), 0xd9);
        // D9 0270
        gbc.setState(0x2e5e, 0x571d, 0x69f0, 0xd7c7, 0x3edc, 0x9e7a, 0x0, 0x0);
        gbc.writeMem(0x2e5e, { 0xd9 });
        gbc.writeMem(0x571d, { 0xff, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x571f);
        EXPECT(gbc.pc(), 0xf1ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0271
        gbc.setState(0x86fb, 0xc61a, 0xa290, 0x4ae, 0x3ab5, 0x779, 0x0, 0x0);
        gbc.writeMem(0x86fb, { 0xd9 });
        gbc.writeMem(0xc61a, { 0xd0, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc61c);
        EXPECT(gbc.pc(), 0x1ed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86fb), 0xd9);
        EXPECT(gbc.readMem(0xc61a), 0xd0);
        EXPECT(gbc.readMem(0xc61b), 0x1e);
        // D9 0272
        gbc.setState(0x4c53, 0x9b55, 0xf10, 0xd72b, 0xdc5, 0xfbe5, 0x1, 0x0);
        gbc.writeMem(0x4c53, { 0xd9 });
        gbc.writeMem(0x9b55, { 0xf9, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9b57);
        EXPECT(gbc.pc(), 0x2cf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b55), 0xf9);
        EXPECT(gbc.readMem(0x9b56), 0x2c);
        // D9 0273
        gbc.setState(0x3101, 0xaad0, 0xfeb0, 0xd1d9, 0x6274, 0xc18a, 0x0, 0x0);
        gbc.writeMem(0x3101, { 0xd9 });
        gbc.writeMem(0xaad0, { 0x55, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xaad2);
        EXPECT(gbc.pc(), 0xbe55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaad0), 0x55);
        EXPECT(gbc.readMem(0xaad1), 0xbe);
        // D9 0274
        gbc.setState(0x932d, 0xda58, 0x3260, 0x72eb, 0x3824, 0xbdda, 0x0, 0x0);
        gbc.writeMem(0x932d, { 0xd9 });
        gbc.writeMem(0xda58, { 0x9f, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xda5a);
        EXPECT(gbc.pc(), 0xf69f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x932d), 0xd9);
        EXPECT(gbc.readMem(0xda58), 0x9f);
        EXPECT(gbc.readMem(0xda59), 0xf6);
        // D9 0275
        gbc.setState(0xa570, 0x310a, 0x7a10, 0xd6b, 0xee41, 0x62f0, 0x1, 0x1);
        gbc.writeMem(0x310a, { 0xe9, 0x2c });
        gbc.writeMem(0xa570, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x310c);
        EXPECT(gbc.pc(), 0x2ce9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa570), 0xd9);
        // D9 0276
        gbc.setState(0x6b5d, 0x22f7, 0x7670, 0xaffb, 0xec2b, 0x6658, 0x0, 0x0);
        gbc.writeMem(0x22f7, { 0xad, 0xf0 });
        gbc.writeMem(0x6b5d, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x22f9);
        EXPECT(gbc.pc(), 0xf0ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0277
        gbc.setState(0xcfd6, 0xefa5, 0xb660, 0x7909, 0x5a12, 0xb64f, 0x0, 0x1);
        gbc.writeMem(0xcfd6, { 0xd9 });
        gbc.writeMem(0xefa5, { 0x81, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xefa7);
        EXPECT(gbc.pc(), 0xff81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfd6), 0xd9);
        EXPECT(gbc.readMem(0xefa5), 0x81);
        EXPECT(gbc.readMem(0xefa6), 0xff);
        // D9 0278
        gbc.setState(0x9b40, 0xdb8f, 0x2d70, 0x7b64, 0xa01f, 0x3734, 0x0, 0x0);
        gbc.writeMem(0x9b40, { 0xd9 });
        gbc.writeMem(0xdb8f, { 0xca, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xdb91);
        EXPECT(gbc.pc(), 0x57ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b40), 0xd9);
        EXPECT(gbc.readMem(0xdb8f), 0xca);
        EXPECT(gbc.readMem(0xdb90), 0x57);
        // D9 0279
        gbc.setState(0xa259, 0x5e7, 0x93f0, 0xaeea, 0x6573, 0x761d, 0x0, 0x1);
        gbc.writeMem(0x5e7, { 0xbb, 0x16 });
        gbc.writeMem(0xa259, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5e9);
        EXPECT(gbc.pc(), 0x16bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa259), 0xd9);
        // D9 027A
        gbc.setState(0x2ca0, 0x9a8b, 0x1ef0, 0x77a6, 0xddb5, 0xf092, 0x1, 0x0);
        gbc.writeMem(0x2ca0, { 0xd9 });
        gbc.writeMem(0x9a8b, { 0xa2, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9a8d);
        EXPECT(gbc.pc(), 0xaa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a8b), 0xa2);
        EXPECT(gbc.readMem(0x9a8c), 0xa);
        // D9 027B
        gbc.setState(0xafe3, 0x6208, 0xb310, 0xa19d, 0x3dac, 0x1f01, 0x0, 0x1);
        gbc.writeMem(0x6208, { 0xb0, 0xb });
        gbc.writeMem(0xafe3, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x620a);
        EXPECT(gbc.pc(), 0xbb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe3), 0xd9);
        // D9 027C
        gbc.setState(0x17a7, 0x1608, 0xdc00, 0xddc2, 0x6f22, 0x7443, 0x0, 0x0);
        gbc.writeMem(0x1608, { 0xc1, 0xb2 });
        gbc.writeMem(0x17a7, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x160a);
        EXPECT(gbc.pc(), 0xb2c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 027D
        gbc.setState(0x651f, 0xcc57, 0x33e0, 0x2ab4, 0x2fe0, 0xa7f2, 0x0, 0x1);
        gbc.writeMem(0x651f, { 0xd9 });
        gbc.writeMem(0xcc57, { 0x5d, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xcc59);
        EXPECT(gbc.pc(), 0xac5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc57), 0x5d);
        EXPECT(gbc.readMem(0xcc58), 0xac);
        // D9 027E
        gbc.setState(0x89e6, 0xffd2, 0x4e80, 0x8a79, 0xdad0, 0xcc74, 0x0, 0x0);
        gbc.writeMem(0x89e6, { 0xd9 });
        gbc.writeMem(0xffd2, { 0x31, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xffd4);
        EXPECT(gbc.pc(), 0xbb31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89e6), 0xd9);
        EXPECT(gbc.readMem(0xffd2), 0x31);
        EXPECT(gbc.readMem(0xffd3), 0xbb);
        // D9 027F
        gbc.setState(0x251, 0xb216, 0x1fd0, 0x562f, 0xb492, 0xfc1f, 0x0, 0x1);
        gbc.writeMem(0x251, { 0xd9 });
        gbc.writeMem(0xb216, { 0xc3, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb218);
        EXPECT(gbc.pc(), 0xbc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb216), 0xc3);
        EXPECT(gbc.readMem(0xb217), 0xb);
        // D9 0280
        gbc.setState(0xcc09, 0x64f5, 0xca0, 0xaad3, 0x2d32, 0xccbd, 0x0, 0x0);
        gbc.writeMem(0x64f5, { 0x95, 0x9 });
        gbc.writeMem(0xcc09, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x64f7);
        EXPECT(gbc.pc(), 0x995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc09), 0xd9);
        // D9 0281
        gbc.setState(0x1b9b, 0xbf0b, 0x4f10, 0x5ca2, 0x2fe, 0x7511, 0x1, 0x0);
        gbc.writeMem(0x1b9b, { 0xd9 });
        gbc.writeMem(0xbf0b, { 0x82, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xbf0d);
        EXPECT(gbc.pc(), 0xaa82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf0b), 0x82);
        EXPECT(gbc.readMem(0xbf0c), 0xaa);
        // D9 0282
        gbc.setState(0x30d5, 0xea55, 0xc1c0, 0xb8d4, 0x9714, 0x64b, 0x0, 0x0);
        gbc.writeMem(0x30d5, { 0xd9 });
        gbc.writeMem(0xea55, { 0x1a, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xea57);
        EXPECT(gbc.pc(), 0x2b1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea55), 0x1a);
        EXPECT(gbc.readMem(0xea56), 0x2b);
        // D9 0283
        gbc.setState(0x2d8b, 0xf653, 0xe3c0, 0xa691, 0x3e8b, 0x965c, 0x1, 0x1);
        gbc.writeMem(0x2d8b, { 0xd9 });
        gbc.writeMem(0xf653, { 0xb0, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf655);
        EXPECT(gbc.pc(), 0x65b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf653), 0xb0);
        EXPECT(gbc.readMem(0xf654), 0x65);
        // D9 0284
        gbc.setState(0x90e0, 0xe4b4, 0xe580, 0x197d, 0x44a7, 0x732a, 0x0, 0x1);
        gbc.writeMem(0x90e0, { 0xd9 });
        gbc.writeMem(0xe4b4, { 0xe7, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe4b6);
        EXPECT(gbc.pc(), 0x25e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90e0), 0xd9);
        EXPECT(gbc.readMem(0xe4b4), 0xe7);
        EXPECT(gbc.readMem(0xe4b5), 0x25);
        // D9 0285
        gbc.setState(0x4453, 0xc948, 0xd910, 0xd370, 0x9705, 0x7a77, 0x0, 0x1);
        gbc.writeMem(0x4453, { 0xd9 });
        gbc.writeMem(0xc948, { 0x8a, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc94a);
        EXPECT(gbc.pc(), 0x308a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc948), 0x8a);
        EXPECT(gbc.readMem(0xc949), 0x30);
        // D9 0286
        gbc.setState(0x7aa3, 0x7aed, 0x3260, 0x7b77, 0xfe21, 0x3d59, 0x0, 0x0);
        gbc.writeMem(0x7aa3, { 0xd9 });
        gbc.writeMem(0x7aed, { 0xba, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7aef);
        EXPECT(gbc.pc(), 0x7bba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0287
        gbc.setState(0x4d3b, 0x1962, 0x9fa0, 0x62bc, 0x5354, 0x5f, 0x0, 0x0);
        gbc.writeMem(0x1962, { 0x19, 0x8 });
        gbc.writeMem(0x4d3b, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1964);
        EXPECT(gbc.pc(), 0x819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0288
        gbc.setState(0xa58f, 0x54b8, 0x4110, 0x266a, 0x70d1, 0x6006, 0x1, 0x1);
        gbc.writeMem(0x54b8, { 0xa9, 0xac });
        gbc.writeMem(0xa58f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x54ba);
        EXPECT(gbc.pc(), 0xaca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa58f), 0xd9);
        // D9 0289
        gbc.setState(0xb08d, 0x87e3, 0x10e0, 0x13df, 0x6072, 0x9458, 0x1, 0x1);
        gbc.writeMem(0x87e3, { 0x20, 0x6f });
        gbc.writeMem(0xb08d, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x87e5);
        EXPECT(gbc.pc(), 0x6f20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e3), 0x20);
        EXPECT(gbc.readMem(0x87e4), 0x6f);
        EXPECT(gbc.readMem(0xb08d), 0xd9);
        // D9 028A
        gbc.setState(0x7e65, 0x21a6, 0x73b0, 0x1e9, 0xfcf, 0x4aa9, 0x1, 0x0);
        gbc.writeMem(0x21a6, { 0x6d, 0xb3 });
        gbc.writeMem(0x7e65, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x21a8);
        EXPECT(gbc.pc(), 0xb36d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 028B
        gbc.setState(0x7fe4, 0x7c09, 0xff60, 0x3bc1, 0xa191, 0xe2b9, 0x1, 0x0);
        gbc.writeMem(0x7c09, { 0x54, 0x93 });
        gbc.writeMem(0x7fe4, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7c0b);
        EXPECT(gbc.pc(), 0x9354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 028C
        gbc.setState(0x3a65, 0xad99, 0xba90, 0xcaf6, 0x45a5, 0xbc0c, 0x0, 0x0);
        gbc.writeMem(0x3a65, { 0xd9 });
        gbc.writeMem(0xad99, { 0x4c, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xad9b);
        EXPECT(gbc.pc(), 0x704c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad99), 0x4c);
        EXPECT(gbc.readMem(0xad9a), 0x70);
        // D9 028D
        gbc.setState(0xc587, 0xa14f, 0x54a0, 0xdd47, 0x4870, 0xaa5b, 0x0, 0x1);
        gbc.writeMem(0xa14f, { 0x37, 0x5d });
        gbc.writeMem(0xc587, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa151);
        EXPECT(gbc.pc(), 0x5d37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa14f), 0x37);
        EXPECT(gbc.readMem(0xa150), 0x5d);
        EXPECT(gbc.readMem(0xc587), 0xd9);
        // D9 028E
        gbc.setState(0x1e6e, 0x118d, 0xa790, 0x4d2f, 0x465c, 0xb7d3, 0x1, 0x0);
        gbc.writeMem(0x118d, { 0x3a, 0x7 });
        gbc.writeMem(0x1e6e, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x118f);
        EXPECT(gbc.pc(), 0x73a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 028F
        gbc.setState(0x59ad, 0x4efb, 0x1c0, 0xac47, 0xf791, 0xa4a7, 0x0, 0x1);
        gbc.writeMem(0x4efb, { 0x5, 0x3c });
        gbc.writeMem(0x59ad, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4efd);
        EXPECT(gbc.pc(), 0x3c05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0290
        gbc.setState(0x49af, 0x71f1, 0x89a0, 0x6b7d, 0x428d, 0xabb0, 0x1, 0x0);
        gbc.writeMem(0x49af, { 0xd9 });
        gbc.writeMem(0x71f1, { 0xd6, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x71f3);
        EXPECT(gbc.pc(), 0xaed6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0291
        gbc.setState(0x4b1d, 0x8dc3, 0x2270, 0xff26, 0xbd57, 0x160f, 0x1, 0x0);
        gbc.writeMem(0x4b1d, { 0xd9 });
        gbc.writeMem(0x8dc3, { 0xfe, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8dc5);
        EXPECT(gbc.pc(), 0x35fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dc3), 0xfe);
        EXPECT(gbc.readMem(0x8dc4), 0x35);
        // D9 0292
        gbc.setState(0xb514, 0x6ca, 0xd9d0, 0xc22, 0x9fe5, 0x2c94, 0x0, 0x1);
        gbc.writeMem(0x6ca, { 0x14, 0x2 });
        gbc.writeMem(0xb514, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6cc);
        EXPECT(gbc.pc(), 0x214);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb514), 0xd9);
        // D9 0293
        gbc.setState(0x5ca4, 0xd83c, 0xab20, 0x2dce, 0xeb69, 0xb10f, 0x1, 0x0);
        gbc.writeMem(0x5ca4, { 0xd9 });
        gbc.writeMem(0xd83c, { 0xaa, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd83e);
        EXPECT(gbc.pc(), 0x74aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd83c), 0xaa);
        EXPECT(gbc.readMem(0xd83d), 0x74);
        // D9 0294
        gbc.setState(0xac4e, 0x6436, 0xc8b0, 0xf480, 0xfe6a, 0x41e1, 0x0, 0x1);
        gbc.writeMem(0x6436, { 0x9d, 0x96 });
        gbc.writeMem(0xac4e, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6438);
        EXPECT(gbc.pc(), 0x969d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac4e), 0xd9);
        // D9 0295
        gbc.setState(0x8f67, 0x565a, 0x2be0, 0xe576, 0xc2c3, 0x69f6, 0x0, 0x1);
        gbc.writeMem(0x565a, { 0x15, 0xf0 });
        gbc.writeMem(0x8f67, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x565c);
        EXPECT(gbc.pc(), 0xf015);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f67), 0xd9);
        // D9 0296
        gbc.setState(0x71e8, 0x18e, 0xf4e0, 0x1e15, 0xc6f, 0xc2b5, 0x1, 0x1);
        gbc.writeMem(0x18e, { 0xa7, 0xc1 });
        gbc.writeMem(0x71e8, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x190);
        EXPECT(gbc.pc(), 0xc1a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0297
        gbc.setState(0x3241, 0xfae2, 0xca20, 0x7a73, 0x179, 0x9faa, 0x1, 0x0);
        gbc.writeMem(0x3241, { 0xd9 });
        gbc.writeMem(0xfae2, { 0xd1, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xfae4);
        EXPECT(gbc.pc(), 0x3dd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfae2), 0xd1);
        EXPECT(gbc.readMem(0xfae3), 0x3d);
        // D9 0298
        gbc.setState(0x7b5, 0x762d, 0x5360, 0xec49, 0x3861, 0xcce5, 0x1, 0x1);
        gbc.writeMem(0x7b5, { 0xd9 });
        gbc.writeMem(0x762d, { 0x58, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x762f);
        EXPECT(gbc.pc(), 0x6758);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0299
        gbc.setState(0xe778, 0x7b01, 0x6610, 0x3bcc, 0xb682, 0x2ef5, 0x1, 0x0);
        gbc.writeMem(0x7b01, { 0x8, 0x96 });
        gbc.writeMem(0xe778, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7b03);
        EXPECT(gbc.pc(), 0x9608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe778), 0xd9);
        // D9 029A
        gbc.setState(0x6be, 0x1bfb, 0x7800, 0x71, 0x599a, 0xba93, 0x1, 0x0);
        gbc.writeMem(0x6be, { 0xd9 });
        gbc.writeMem(0x1bfb, { 0xf0, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1bfd);
        EXPECT(gbc.pc(), 0x3af0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 029B
        gbc.setState(0x124f, 0x8012, 0xcdd0, 0x6359, 0x1e5b, 0x8d6c, 0x0, 0x0);
        gbc.writeMem(0x124f, { 0xd9 });
        gbc.writeMem(0x8012, { 0x38, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8014);
        EXPECT(gbc.pc(), 0x3b38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8012), 0x38);
        EXPECT(gbc.readMem(0x8013), 0x3b);
        // D9 029C
        gbc.setState(0xb7f2, 0xe50a, 0xa380, 0xfa9a, 0xba75, 0x7819, 0x0, 0x0);
        gbc.writeMem(0xb7f2, { 0xd9 });
        gbc.writeMem(0xe50a, { 0xae, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe50c);
        EXPECT(gbc.pc(), 0x34ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7f2), 0xd9);
        EXPECT(gbc.readMem(0xe50a), 0xae);
        EXPECT(gbc.readMem(0xe50b), 0x34);
        // D9 029D
        gbc.setState(0x76e1, 0x3eeb, 0xcf20, 0x4775, 0xfc90, 0x7d85, 0x0, 0x1);
        gbc.writeMem(0x3eeb, { 0xfe, 0xa9 });
        gbc.writeMem(0x76e1, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3eed);
        EXPECT(gbc.pc(), 0xa9fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 029E
        gbc.setState(0x510d, 0xda9a, 0xe860, 0x2378, 0xa979, 0xf841, 0x1, 0x0);
        gbc.writeMem(0x510d, { 0xd9 });
        gbc.writeMem(0xda9a, { 0x29, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xda9c);
        EXPECT(gbc.pc(), 0x4329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda9a), 0x29);
        EXPECT(gbc.readMem(0xda9b), 0x43);
        // D9 029F
        gbc.setState(0x2312, 0x27e4, 0xfbb0, 0x8b59, 0x15d2, 0x846, 0x0, 0x1);
        gbc.writeMem(0x2312, { 0xd9 });
        gbc.writeMem(0x27e4, { 0xe4, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x27e6);
        EXPECT(gbc.pc(), 0x27e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 02A0
        gbc.setState(0xdc17, 0x8f33, 0xb7e0, 0xf5fe, 0x5222, 0x643e, 0x0, 0x1);
        gbc.writeMem(0x8f33, { 0xcd, 0x88 });
        gbc.writeMem(0xdc17, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8f35);
        EXPECT(gbc.pc(), 0x88cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f33), 0xcd);
        EXPECT(gbc.readMem(0x8f34), 0x88);
        EXPECT(gbc.readMem(0xdc17), 0xd9);
        // D9 02A1
        gbc.setState(0x912, 0x4c8f, 0x9080, 0x2342, 0x5fe9, 0x3101, 0x0, 0x0);
        gbc.writeMem(0x912, { 0xd9 });
        gbc.writeMem(0x4c8f, { 0xf0, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4c91);
        EXPECT(gbc.pc(), 0x8cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 02A2
        gbc.setState(0x4580, 0x7ea7, 0x5870, 0xd6e0, 0x2393, 0x540, 0x1, 0x0);
        gbc.writeMem(0x4580, { 0xd9 });
        gbc.writeMem(0x7ea7, { 0x65, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7ea9);
        EXPECT(gbc.pc(), 0x9665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 02A3
        gbc.setState(0xb94a, 0x7dd4, 0x5190, 0xbaf0, 0xdfaa, 0xa508, 0x0, 0x1);
        gbc.writeMem(0x7dd4, { 0x9f, 0x4e });
        gbc.writeMem(0xb94a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7dd6);
        EXPECT(gbc.pc(), 0x4e9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb94a), 0xd9);
        // D9 02A4
        gbc.setState(0x486c, 0x3884, 0xdd40, 0x9cc3, 0x3407, 0x6ce2, 0x1, 0x0);
        gbc.writeMem(0x3884, { 0xe5, 0x10 });
        gbc.writeMem(0x486c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3886);
        EXPECT(gbc.pc(), 0x10e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 02A5
        gbc.setState(0xc5e6, 0xefcc, 0x2610, 0x287c, 0xbeb8, 0x744e, 0x1, 0x0);
        gbc.writeMem(0xc5e6, { 0xd9 });
        gbc.writeMem(0xefcc, { 0x57, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xefce);
        EXPECT(gbc.pc(), 0xfc57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5e6), 0xd9);
        EXPECT(gbc.readMem(0xefcc), 0x57);
        EXPECT(gbc.readMem(0xefcd), 0xfc);
        // D9 02A6
        gbc.setState(0x2393, 0x35cc, 0x2040, 0xf206, 0x852a, 0x588, 0x0, 0x1);
        gbc.writeMem(0x2393, { 0xd9 });
        gbc.writeMem(0x35cc, { 0xd4, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x35ce);
        EXPECT(gbc.pc(), 0xf7d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 02A7
        gbc.setState(0x3f78, 0x9d13, 0x72a0, 0xe8d2, 0x3785, 0x269, 0x1, 0x0);
        gbc.writeMem(0x3f78, { 0xd9 });
        gbc.writeMem(0x9d13, { 0x18, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9d15);
        EXPECT(gbc.pc(), 0xe018);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d13), 0x18);
        EXPECT(gbc.readMem(0x9d14), 0xe0);
        // D9 02A8
        gbc.setState(0xdc81, 0x5996, 0x1090, 0x40f8, 0xfc44, 0xd0b3, 0x0, 0x1);
        gbc.writeMem(0x5996, { 0x77, 0xe2 });
        gbc.writeMem(0xdc81, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5998);
        EXPECT(gbc.pc(), 0xe277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc81), 0xd9);
        // D9 02AA
        gbc.setState(0xe5fe, 0xf98c, 0x3a10, 0xaacf, 0x329b, 0x36b4, 0x1, 0x0);
        gbc.writeMem(0xe5fe, { 0xd9 });
        gbc.writeMem(0xf98c, { 0x7, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf98e);
        EXPECT(gbc.pc(), 0xd607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5fe), 0xd9);
        EXPECT(gbc.readMem(0xf98c), 0x7);
        EXPECT(gbc.readMem(0xf98d), 0xd6);
        // D9 02AB
        gbc.setState(0xfc4, 0x8869, 0x11b0, 0x5807, 0xb202, 0xed22, 0x0, 0x1);
        gbc.writeMem(0xfc4, { 0xd9 });
        gbc.writeMem(0x8869, { 0x79, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x886b);
        EXPECT(gbc.pc(), 0xe979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8869), 0x79);
        EXPECT(gbc.readMem(0x886a), 0xe9);
        // D9 02AC
        gbc.setState(0x5f8, 0xfc3d, 0x93d0, 0xb7b, 0xee79, 0x9ed9, 0x1, 0x0);
        gbc.writeMem(0x5f8, { 0xd9 });
        gbc.writeMem(0xfc3d, { 0x13, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xfc3f);
        EXPECT(gbc.pc(), 0x8113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc3d), 0x13);
        EXPECT(gbc.readMem(0xfc3e), 0x81);
        // D9 02AD
        gbc.setState(0xbbe6, 0xd765, 0xad10, 0x6c3e, 0xdabf, 0x9823, 0x1, 0x1);
        gbc.writeMem(0xbbe6, { 0xd9 });
        gbc.writeMem(0xd765, { 0x8b, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd767);
        EXPECT(gbc.pc(), 0x1e8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe6), 0xd9);
        EXPECT(gbc.readMem(0xd765), 0x8b);
        EXPECT(gbc.readMem(0xd766), 0x1e);
        // D9 02AE
        gbc.setState(0xed24, 0x51e7, 0x9960, 0xfba, 0xfd1, 0xbf0, 0x1, 0x1);
        gbc.writeMem(0x51e7, { 0x29, 0x51 });
        gbc.writeMem(0xed24, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x51e9);
        EXPECT(gbc.pc(), 0x5129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed24), 0xd9);
        // D9 02AF
        gbc.setState(0x8d4d, 0x817b, 0x5260, 0x7daf, 0x191, 0xf9e7, 0x0, 0x1);
        gbc.writeMem(0x817b, { 0x87, 0x50 });
        gbc.writeMem(0x8d4d, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x817d);
        EXPECT(gbc.pc(), 0x5087);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x817b), 0x87);
        EXPECT(gbc.readMem(0x817c), 0x50);
        EXPECT(gbc.readMem(0x8d4d), 0xd9);
        // D9 02B0
        gbc.setState(0xabb4, 0xbcd0, 0xe1e0, 0x3612, 0xc041, 0x9736, 0x1, 0x1);
        gbc.writeMem(0xabb4, { 0xd9 });
        gbc.writeMem(0xbcd0, { 0x15, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xbcd2);
        EXPECT(gbc.pc(), 0x1915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb4), 0xd9);
        EXPECT(gbc.readMem(0xbcd0), 0x15);
        EXPECT(gbc.readMem(0xbcd1), 0x19);
        // D9 02B1
        gbc.setState(0x508d, 0xe013, 0x7da0, 0x6aa1, 0x7172, 0xa189, 0x1, 0x1);
        gbc.writeMem(0x508d, { 0xd9 });
        gbc.writeMem(0xe013, { 0xb8, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe015);
        EXPECT(gbc.pc(), 0x6db8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe013), 0xb8);
        EXPECT(gbc.readMem(0xe014), 0x6d);
        // D9 02B2
        gbc.setState(0x7618, 0x2fcb, 0x8a10, 0xea99, 0xeefb, 0x9ca6, 0x0, 0x1);
        gbc.writeMem(0x2fcb, { 0xdc, 0xc0 });
        gbc.writeMem(0x7618, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2fcd);
        EXPECT(gbc.pc(), 0xc0dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 02B3
        gbc.setState(0x12f4, 0xc802, 0x6720, 0x5427, 0x1283, 0x329b, 0x0, 0x1);
        gbc.writeMem(0x12f4, { 0xd9 });
        gbc.writeMem(0xc802, { 0xa2, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc804);
        EXPECT(gbc.pc(), 0x59a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc802), 0xa2);
        EXPECT(gbc.readMem(0xc803), 0x59);
        // D9 02B4
        gbc.setState(0x1298, 0x4734, 0x3720, 0x6f3b, 0x4f5f, 0x821b, 0x0, 0x0);
        gbc.writeMem(0x1298, { 0xd9 });
        gbc.writeMem(0x4734, { 0x60, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4736);
        EXPECT(gbc.pc(), 0xab60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 02B5
        gbc.setState(0x5feb, 0x4d75, 0x13e0, 0xa77e, 0xf36b, 0x643d, 0x0, 0x1);
        gbc.writeMem(0x4d75, { 0x89, 0x42 });
        gbc.writeMem(0x5feb, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4d77);
        EXPECT(gbc.pc(), 0x4289);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 02B6
        gbc.setState(0xb27, 0xdf32, 0xfce0, 0x6b4, 0xbd2f, 0x26ae, 0x0, 0x1);
        gbc.writeMem(0xb27, { 0xd9 });
        gbc.writeMem(0xdf32, { 0x1c, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xdf34);
        EXPECT(gbc.pc(), 0x861c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf32), 0x1c);
        EXPECT(gbc.readMem(0xdf33), 0x86);
        // D9 02B7
        gbc.setState(0x51aa, 0xa872, 0x28d0, 0x29a5, 0xfce2, 0xfb4d, 0x1, 0x0);
        gbc.writeMem(0x51aa, { 0xd9 });
        gbc.writeMem(0xa872, { 0x9b, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa874);
        EXPECT(gbc.pc(), 0x449b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa872), 0x9b);
        EXPECT(gbc.readMem(0xa873), 0x44);
        // D9 02B8
        gbc.setState(0x2b58, 0xa18, 0xb420, 0x882d, 0x52f3, 0xbe89, 0x0, 0x1);
        gbc.writeMem(0xa18, { 0xa0, 0x9 });
        gbc.writeMem(0x2b58, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa1a);
        EXPECT(gbc.pc(), 0x9a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 02B9
        gbc.setState(0x7e4a, 0xef06, 0xf270, 0xd373, 0xe953, 0x1266, 0x0, 0x1);
        gbc.writeMem(0x7e4a, { 0xd9 });
        gbc.writeMem(0xef06, { 0x73, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xef08);
        EXPECT(gbc.pc(), 0xeb73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef06), 0x73);
        EXPECT(gbc.readMem(0xef07), 0xeb);
        // D9 02BA
        gbc.setState(0x4b7b, 0xd661, 0xd9a0, 0x5c6c, 0xac60, 0xe8bd, 0x1, 0x0);
        gbc.writeMem(0x4b7b, { 0xd9 });
        gbc.writeMem(0xd661, { 0xb7, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd663);
        EXPECT(gbc.pc(), 0xeb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd661), 0xb7);
        EXPECT(gbc.readMem(0xd662), 0xe);
        // D9 02BB
        gbc.setState(0x8b62, 0xee9, 0x8740, 0xb866, 0xe952, 0xc307, 0x0, 0x1);
        gbc.writeMem(0xee9, { 0xef, 0x2f });
        gbc.writeMem(0x8b62, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xeeb);
        EXPECT(gbc.pc(), 0x2fef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b62), 0xd9);
        // D9 02BC
        gbc.setState(0x208a, 0x6f13, 0x8250, 0x7894, 0x4161, 0xee9c, 0x1, 0x1);
        gbc.writeMem(0x208a, { 0xd9 });
        gbc.writeMem(0x6f13, { 0xb6, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6f15);
        EXPECT(gbc.pc(), 0xa5b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 02BD
        gbc.setState(0xdd28, 0x1c35, 0x3e40, 0x6c3d, 0xeab, 0x2a21, 0x0, 0x0);
        gbc.writeMem(0x1c35, { 0x75, 0xc8 });
        gbc.writeMem(0xdd28, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1c37);
        EXPECT(gbc.pc(), 0xc875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd28), 0xd9);
        // D9 02BE
        gbc.setState(0xb0ee, 0x77c8, 0xada0, 0x2218, 0xf8e5, 0x7661, 0x1, 0x1);
        gbc.writeMem(0x77c8, { 0xa2, 0xad });
        gbc.writeMem(0xb0ee, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x77ca);
        EXPECT(gbc.pc(), 0xada2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ee), 0xd9);
        // D9 02BF
        gbc.setState(0x8442, 0x7d57, 0xabc0, 0xc2ee, 0x159, 0x8e99, 0x1, 0x1);
        gbc.writeMem(0x7d57, { 0xc3, 0x24 });
        gbc.writeMem(0x8442, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7d59);
        EXPECT(gbc.pc(), 0x24c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8442), 0xd9);
        // D9 02C0
        gbc.setState(0xb38c, 0x1f52, 0xd860, 0x512e, 0x177d, 0x9b8c, 0x1, 0x1);
        gbc.writeMem(0x1f52, { 0x77, 0x66 });
        gbc.writeMem(0xb38c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1f54);
        EXPECT(gbc.pc(), 0x6677);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb38c), 0xd9);
        // D9 02C1
        gbc.setState(0x3f0f, 0x7cd1, 0x5030, 0x7cac, 0x6781, 0x5373, 0x0, 0x0);
        gbc.writeMem(0x3f0f, { 0xd9 });
        gbc.writeMem(0x7cd1, { 0x14, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7cd3);
        EXPECT(gbc.pc(), 0x3014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 02C2
        gbc.setState(0x5176, 0x46a8, 0x1000, 0xce5b, 0x5205, 0xc28d, 0x0, 0x0);
        gbc.writeMem(0x46a8, { 0x28, 0x6f });
        gbc.writeMem(0x5176, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x46aa);
        EXPECT(gbc.pc(), 0x6f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 02C3
        gbc.setState(0x43c6, 0x7f4e, 0xf8e0, 0x5839, 0xfbb8, 0xcda3, 0x0, 0x0);
        gbc.writeMem(0x43c6, { 0xd9 });
        gbc.writeMem(0x7f4e, { 0x97, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7f50);
        EXPECT(gbc.pc(), 0xd297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 02C4
        gbc.setState(0xaaf4, 0x8e22, 0xd220, 0x2fe0, 0xcd7d, 0xa3bf, 0x0, 0x0);
        gbc.writeMem(0x8e22, { 0x2a, 0xe6 });
        gbc.writeMem(0xaaf4, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8e24);
        EXPECT(gbc.pc(), 0xe62a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e22), 0x2a);
        EXPECT(gbc.readMem(0x8e23), 0xe6);
        EXPECT(gbc.readMem(0xaaf4), 0xd9);
        // D9 02C5
        gbc.setState(0x8420, 0x3ed6, 0x8e30, 0x5d06, 0x923a, 0x5287, 0x0, 0x0);
        gbc.writeMem(0x3ed6, { 0x59, 0x5e });
        gbc.writeMem(0x8420, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3ed8);
        EXPECT(gbc.pc(), 0x5e59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8420), 0xd9);
        // D9 02C6
        gbc.setState(0xcd2b, 0xf4fe, 0x6090, 0xec90, 0x9092, 0x6171, 0x0, 0x1);
        gbc.writeMem(0xcd2b, { 0xd9 });
        gbc.writeMem(0xf4fe, { 0x30, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf500);
        EXPECT(gbc.pc(), 0xfd30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd2b), 0xd9);
        EXPECT(gbc.readMem(0xf4fe), 0x30);
        EXPECT(gbc.readMem(0xf4ff), 0xfd);
        // D9 02C7
        gbc.setState(0x9699, 0xacdc, 0xf3a0, 0x7b4, 0x2224, 0xed88, 0x1, 0x1);
        gbc.writeMem(0x9699, { 0xd9 });
        gbc.writeMem(0xacdc, { 0x88, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xacde);
        EXPECT(gbc.pc(), 0x2388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9699), 0xd9);
        EXPECT(gbc.readMem(0xacdc), 0x88);
        EXPECT(gbc.readMem(0xacdd), 0x23);
        // D9 02C8
        gbc.setState(0x304, 0x51fa, 0x34a0, 0xca40, 0xb93b, 0xd492, 0x1, 0x1);
        gbc.writeMem(0x304, { 0xd9 });
        gbc.writeMem(0x51fa, { 0x71, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x51fc);
        EXPECT(gbc.pc(), 0x7f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 02C9
        gbc.setState(0x429a, 0x58c7, 0x5270, 0xd23d, 0xb9b3, 0xb442, 0x1, 0x0);
        gbc.writeMem(0x429a, { 0xd9 });
        gbc.writeMem(0x58c7, { 0x4a, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x58c9);
        EXPECT(gbc.pc(), 0x914a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 02CA
        gbc.setState(0xbff7, 0x892b, 0xd0b0, 0x2b94, 0x4844, 0x279c, 0x1, 0x0);
        gbc.writeMem(0x892b, { 0xb7, 0xf4 });
        gbc.writeMem(0xbff7, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x892d);
        EXPECT(gbc.pc(), 0xf4b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x892b), 0xb7);
        EXPECT(gbc.readMem(0x892c), 0xf4);
        EXPECT(gbc.readMem(0xbff7), 0xd9);
        // D9 02CB
        gbc.setState(0x4c9c, 0xe5f9, 0xd680, 0xbc28, 0x2ec6, 0x4102, 0x1, 0x0);
        gbc.writeMem(0x4c9c, { 0xd9 });
        gbc.writeMem(0xe5f9, { 0xbc, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe5fb);
        EXPECT(gbc.pc(), 0x8bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5f9), 0xbc);
        EXPECT(gbc.readMem(0xe5fa), 0x8);
        // D9 02CC
        gbc.setState(0xb273, 0xed62, 0x5330, 0xaece, 0xa60f, 0xae10, 0x1, 0x1);
        gbc.writeMem(0xb273, { 0xd9 });
        gbc.writeMem(0xed62, { 0x58, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xed64);
        EXPECT(gbc.pc(), 0x1958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb273), 0xd9);
        EXPECT(gbc.readMem(0xed62), 0x58);
        EXPECT(gbc.readMem(0xed63), 0x19);
        // D9 02CF
        gbc.setState(0x6393, 0x15c2, 0x1430, 0x27cc, 0xe8bd, 0x840, 0x1, 0x1);
        gbc.writeMem(0x15c2, { 0x85, 0xb2 });
        gbc.writeMem(0x6393, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x15c4);
        EXPECT(gbc.pc(), 0xb285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 02D0
        gbc.setState(0xce4c, 0x99df, 0x8dc0, 0x1016, 0x3130, 0xc638, 0x1, 0x0);
        gbc.writeMem(0x99df, { 0x4e, 0x3a });
        gbc.writeMem(0xce4c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x99e1);
        EXPECT(gbc.pc(), 0x3a4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99df), 0x4e);
        EXPECT(gbc.readMem(0x99e0), 0x3a);
        EXPECT(gbc.readMem(0xce4c), 0xd9);
        // D9 02D1
        gbc.setState(0x5d13, 0x47e2, 0xa0b0, 0x1a73, 0x5a03, 0x114, 0x1, 0x1);
        gbc.writeMem(0x47e2, { 0xc0, 0x45 });
        gbc.writeMem(0x5d13, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x47e4);
        EXPECT(gbc.pc(), 0x45c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 02D2
        gbc.setState(0x6bfd, 0x58c0, 0xf3b0, 0x5e3f, 0xb438, 0x455c, 0x0, 0x1);
        gbc.writeMem(0x58c0, { 0x83, 0x3b });
        gbc.writeMem(0x6bfd, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x58c2);
        EXPECT(gbc.pc(), 0x3b83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 02D3
        gbc.setState(0x2b3a, 0x96c4, 0x6e90, 0xcbd2, 0xf282, 0xf283, 0x1, 0x1);
        gbc.writeMem(0x2b3a, { 0xd9 });
        gbc.writeMem(0x96c4, { 0xe3, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x96c6);
        EXPECT(gbc.pc(), 0x14e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c4), 0xe3);
        EXPECT(gbc.readMem(0x96c5), 0x14);
        // D9 02D4
        gbc.setState(0x5112, 0x47f4, 0x6c30, 0xc81c, 0x164a, 0xa463, 0x0, 0x1);
        gbc.writeMem(0x47f4, { 0x62, 0xab });
        gbc.writeMem(0x5112, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x47f6);
        EXPECT(gbc.pc(), 0xab62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 02D5
        gbc.setState(0xecdf, 0x252e, 0x56e0, 0x4d62, 0x72f4, 0x23e2, 0x0, 0x0);
        gbc.writeMem(0x252e, { 0x89, 0x89 });
        gbc.writeMem(0xecdf, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2530);
        EXPECT(gbc.pc(), 0x8989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecdf), 0xd9);
        // D9 02D6
        gbc.setState(0x7dba, 0x325f, 0x25e0, 0x47cd, 0x8467, 0x3ca6, 0x1, 0x0);
        gbc.writeMem(0x325f, { 0xc, 0xbd });
        gbc.writeMem(0x7dba, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3261);
        EXPECT(gbc.pc(), 0xbd0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 02D8
        gbc.setState(0x7213, 0x639f, 0x9ec0, 0xa641, 0xc627, 0xb68a, 0x0, 0x0);
        gbc.writeMem(0x639f, { 0x71, 0x0 });
        gbc.writeMem(0x7213, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x63a1);
        EXPECT(gbc.pc(), 0x71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 02D9
        gbc.setState(0x5274, 0x4819, 0x3cd0, 0xcb88, 0x1206, 0x250c, 0x1, 0x1);
        gbc.writeMem(0x4819, { 0x4e, 0xac });
        gbc.writeMem(0x5274, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x481b);
        EXPECT(gbc.pc(), 0xac4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 02DA
        gbc.setState(0xc84d, 0x443e, 0x4c20, 0x9a18, 0x8d65, 0xccc2, 0x1, 0x1);
        gbc.writeMem(0x443e, { 0x5f, 0xec });
        gbc.writeMem(0xc84d, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4440);
        EXPECT(gbc.pc(), 0xec5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc84d), 0xd9);
        // D9 02DB
        gbc.setState(0xc63a, 0xfd28, 0xa880, 0x675c, 0xa348, 0x9b73, 0x0, 0x1);
        gbc.writeMem(0xc63a, { 0xd9 });
        gbc.writeMem(0xfd28, { 0xe2, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xfd2a);
        EXPECT(gbc.pc(), 0x93e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc63a), 0xd9);
        EXPECT(gbc.readMem(0xfd28), 0xe2);
        EXPECT(gbc.readMem(0xfd29), 0x93);
        // D9 02DC
        gbc.setState(0x3dc7, 0x3b8b, 0x3120, 0x3628, 0x9713, 0xae0a, 0x0, 0x0);
        gbc.writeMem(0x3b8b, { 0x7b, 0xac });
        gbc.writeMem(0x3dc7, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3b8d);
        EXPECT(gbc.pc(), 0xac7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 02DD
        gbc.setState(0x76ca, 0x17ce, 0xe980, 0x6a27, 0xd198, 0x5749, 0x1, 0x1);
        gbc.writeMem(0x17ce, { 0x7, 0xfb });
        gbc.writeMem(0x76ca, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x17d0);
        EXPECT(gbc.pc(), 0xfb07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 02DE
        gbc.setState(0xe951, 0x2ae5, 0xab60, 0x6695, 0x6b33, 0xfcb1, 0x1, 0x1);
        gbc.writeMem(0x2ae5, { 0x6d, 0xf0 });
        gbc.writeMem(0xe951, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2ae7);
        EXPECT(gbc.pc(), 0xf06d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe951), 0xd9);
        // D9 02DF
        gbc.setState(0xddae, 0xf6ec, 0xf060, 0xfe85, 0x1a37, 0xbfe3, 0x0, 0x1);
        gbc.writeMem(0xddae, { 0xd9 });
        gbc.writeMem(0xf6ec, { 0xf, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf6ee);
        EXPECT(gbc.pc(), 0x980f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddae), 0xd9);
        EXPECT(gbc.readMem(0xf6ec), 0xf);
        EXPECT(gbc.readMem(0xf6ed), 0x98);
        // D9 02E0
        gbc.setState(0x8f67, 0xd6ad, 0xde20, 0xc4ce, 0x9a27, 0x3be0, 0x0, 0x0);
        gbc.writeMem(0x8f67, { 0xd9 });
        gbc.writeMem(0xd6ad, { 0x97, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd6af);
        EXPECT(gbc.pc(), 0xd397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f67), 0xd9);
        EXPECT(gbc.readMem(0xd6ad), 0x97);
        EXPECT(gbc.readMem(0xd6ae), 0xd3);
        // D9 02E1
        gbc.setState(0xe55e, 0x2c33, 0xcb70, 0x7f57, 0x142e, 0xb6b4, 0x0, 0x1);
        gbc.writeMem(0x2c33, { 0x59, 0x27 });
        gbc.writeMem(0xe55e, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2c35);
        EXPECT(gbc.pc(), 0x2759);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe55e), 0xd9);
        // D9 02E2
        gbc.setState(0xe5bd, 0xe0af, 0xec20, 0xda2, 0xc9a5, 0xe88d, 0x1, 0x0);
        gbc.writeMem(0xe0af, { 0x78, 0xbb });
        gbc.writeMem(0xe5bd, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe0b1);
        EXPECT(gbc.pc(), 0xbb78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0af), 0x78);
        EXPECT(gbc.readMem(0xe0b0), 0xbb);
        EXPECT(gbc.readMem(0xe5bd), 0xd9);
        // D9 02E3
        gbc.setState(0x7b01, 0x99d5, 0xe070, 0x23e7, 0xdaf3, 0x1edc, 0x1, 0x0);
        gbc.writeMem(0x7b01, { 0xd9 });
        gbc.writeMem(0x99d5, { 0x54, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x99d7);
        EXPECT(gbc.pc(), 0x2f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d5), 0x54);
        EXPECT(gbc.readMem(0x99d6), 0x2f);
        // D9 02E4
        gbc.setState(0xb005, 0xc634, 0x8580, 0x2e0e, 0xa33b, 0x4db9, 0x1, 0x1);
        gbc.writeMem(0xb005, { 0xd9 });
        gbc.writeMem(0xc634, { 0x9c, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc636);
        EXPECT(gbc.pc(), 0xe69c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb005), 0xd9);
        EXPECT(gbc.readMem(0xc634), 0x9c);
        EXPECT(gbc.readMem(0xc635), 0xe6);
        // D9 02E5
        gbc.setState(0x19f, 0xc9d2, 0xa280, 0xaaa0, 0x9167, 0xad77, 0x1, 0x0);
        gbc.writeMem(0x19f, { 0xd9 });
        gbc.writeMem(0xc9d2, { 0xd5, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc9d4);
        EXPECT(gbc.pc(), 0xa2d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9d2), 0xd5);
        EXPECT(gbc.readMem(0xc9d3), 0xa2);
        // D9 02E6
        gbc.setState(0xd923, 0xd367, 0x49a0, 0x2b87, 0xe1e0, 0xab16, 0x0, 0x0);
        gbc.writeMem(0xd367, { 0x6, 0xf4 });
        gbc.writeMem(0xd923, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd369);
        EXPECT(gbc.pc(), 0xf406);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd367), 0x6);
        EXPECT(gbc.readMem(0xd368), 0xf4);
        EXPECT(gbc.readMem(0xd923), 0xd9);
        // D9 02E7
        gbc.setState(0x6cd4, 0x3f95, 0x8120, 0xe966, 0x800d, 0xa344, 0x1, 0x0);
        gbc.writeMem(0x3f95, { 0x84, 0x0 });
        gbc.writeMem(0x6cd4, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3f97);
        EXPECT(gbc.pc(), 0x84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 02E8
        gbc.setState(0xb6b9, 0xf2c5, 0x9b30, 0xbc1d, 0xdc0c, 0xc58a, 0x0, 0x1);
        gbc.writeMem(0xb6b9, { 0xd9 });
        gbc.writeMem(0xf2c5, { 0x73, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf2c7);
        EXPECT(gbc.pc(), 0x6873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6b9), 0xd9);
        EXPECT(gbc.readMem(0xf2c5), 0x73);
        EXPECT(gbc.readMem(0xf2c6), 0x68);
        // D9 02E9
        gbc.setState(0x4ccb, 0xf5f5, 0xa8b0, 0x56d6, 0xda61, 0xe8de, 0x1, 0x1);
        gbc.writeMem(0x4ccb, { 0xd9 });
        gbc.writeMem(0xf5f5, { 0xac, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xf5f7);
        EXPECT(gbc.pc(), 0x59ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf5f5), 0xac);
        EXPECT(gbc.readMem(0xf5f6), 0x59);
        // D9 02EA
        gbc.setState(0x880b, 0xffd2, 0x920, 0x5eb0, 0x48e, 0xfdcb, 0x0, 0x0);
        gbc.writeMem(0x880b, { 0xd9 });
        gbc.writeMem(0xffd2, { 0x31, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xffd4);
        EXPECT(gbc.pc(), 0xbb31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x880b), 0xd9);
        EXPECT(gbc.readMem(0xffd2), 0x31);
        EXPECT(gbc.readMem(0xffd3), 0xbb);
        // D9 02EB
        gbc.setState(0xc790, 0x433a, 0x61f0, 0x7bf, 0x6716, 0x1e02, 0x0, 0x1);
        gbc.writeMem(0x433a, { 0xa2, 0x57 });
        gbc.writeMem(0xc790, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x433c);
        EXPECT(gbc.pc(), 0x57a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc790), 0xd9);
        // D9 02EC
        gbc.setState(0x38bb, 0x3a8a, 0xdf00, 0x98bc, 0x9f73, 0xa16, 0x1, 0x1);
        gbc.writeMem(0x38bb, { 0xd9 });
        gbc.writeMem(0x3a8a, { 0x7, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3a8c);
        EXPECT(gbc.pc(), 0x3b07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 02ED
        gbc.setState(0xd6c6, 0x85e9, 0x3f90, 0xde60, 0x2458, 0xfc55, 0x0, 0x0);
        gbc.writeMem(0x85e9, { 0x6e, 0xe0 });
        gbc.writeMem(0xd6c6, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x85eb);
        EXPECT(gbc.pc(), 0xe06e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85e9), 0x6e);
        EXPECT(gbc.readMem(0x85ea), 0xe0);
        EXPECT(gbc.readMem(0xd6c6), 0xd9);
        // D9 02EE
        gbc.setState(0x7327, 0x7bf9, 0x46e0, 0xa15b, 0x4b3d, 0x8f90, 0x1, 0x1);
        gbc.writeMem(0x7327, { 0xd9 });
        gbc.writeMem(0x7bf9, { 0x36, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7bfb);
        EXPECT(gbc.pc(), 0x8a36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 02EF
        gbc.setState(0x115d, 0xf92c, 0x2130, 0xf2bf, 0x9e76, 0xc00d, 0x0, 0x1);
        gbc.writeMem(0x115d, { 0xd9 });
        gbc.writeMem(0xf92c, { 0x11, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf92e);
        EXPECT(gbc.pc(), 0x5611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf92c), 0x11);
        EXPECT(gbc.readMem(0xf92d), 0x56);
        // D9 02F0
        gbc.setState(0x18d9, 0xa46c, 0x7990, 0x7f5e, 0xbc56, 0x280b, 0x0, 0x0);
        gbc.writeMem(0x18d9, { 0xd9 });
        gbc.writeMem(0xa46c, { 0x8e, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa46e);
        EXPECT(gbc.pc(), 0xd58e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa46c), 0x8e);
        EXPECT(gbc.readMem(0xa46d), 0xd5);
        // D9 02F1
        gbc.setState(0x7053, 0x346d, 0x3420, 0x54c1, 0x6cdf, 0xffcf, 0x1, 0x0);
        gbc.writeMem(0x346d, { 0xfc, 0xc6 });
        gbc.writeMem(0x7053, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x346f);
        EXPECT(gbc.pc(), 0xc6fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 02F3
        gbc.setState(0x4f, 0x637, 0xa780, 0x2adb, 0x119a, 0x4c42, 0x1, 0x0);
        gbc.writeMem(0x4f, { 0xd9 });
        gbc.writeMem(0x637, { 0x5c, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x639);
        EXPECT(gbc.pc(), 0xc55c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 02F4
        gbc.setState(0xe8e8, 0x9ec6, 0xf580, 0x9a4d, 0x7ac5, 0xc39, 0x1, 0x0);
        gbc.writeMem(0x9ec6, { 0xcf, 0x6a });
        gbc.writeMem(0xe8e8, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9ec8);
        EXPECT(gbc.pc(), 0x6acf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec6), 0xcf);
        EXPECT(gbc.readMem(0x9ec7), 0x6a);
        EXPECT(gbc.readMem(0xe8e8), 0xd9);
        // D9 02F5
        gbc.setState(0x6977, 0xb2fa, 0xe350, 0x22f1, 0xa1a4, 0xd00, 0x0, 0x0);
        gbc.writeMem(0x6977, { 0xd9 });
        gbc.writeMem(0xb2fa, { 0x6f, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb2fc);
        EXPECT(gbc.pc(), 0x7b6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2fa), 0x6f);
        EXPECT(gbc.readMem(0xb2fb), 0x7b);
        // D9 02F6
        gbc.setState(0x7747, 0x1384, 0x4620, 0x4641, 0x59a8, 0x49a8, 0x1, 0x0);
        gbc.writeMem(0x1384, { 0x65, 0x98 });
        gbc.writeMem(0x7747, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1386);
        EXPECT(gbc.pc(), 0x9865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 02F7
        gbc.setState(0x57df, 0x24ef, 0xa570, 0x8b68, 0x4afc, 0xcd40, 0x0, 0x0);
        gbc.writeMem(0x24ef, { 0x79, 0xf2 });
        gbc.writeMem(0x57df, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x24f1);
        EXPECT(gbc.pc(), 0xf279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 02F8
        gbc.setState(0x3c89, 0x67a6, 0xaaf0, 0x74ff, 0x8423, 0xebfd, 0x0, 0x1);
        gbc.writeMem(0x3c89, { 0xd9 });
        gbc.writeMem(0x67a6, { 0x67, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x67a8);
        EXPECT(gbc.pc(), 0x2467);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 02FA
        gbc.setState(0xb55f, 0x8814, 0x7a80, 0x8f53, 0x42cb, 0x8bc5, 0x1, 0x0);
        gbc.writeMem(0x8814, { 0x4b, 0xfc });
        gbc.writeMem(0xb55f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8816);
        EXPECT(gbc.pc(), 0xfc4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8814), 0x4b);
        EXPECT(gbc.readMem(0x8815), 0xfc);
        EXPECT(gbc.readMem(0xb55f), 0xd9);
        // D9 02FB
        gbc.setState(0x6ea5, 0xfe8b, 0x4090, 0xbbe2, 0x8588, 0x9549, 0x0, 0x0);
        gbc.writeMem(0x6ea5, { 0xd9 });
        gbc.writeMem(0xfe8b, { 0x39, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xfe8d);
        EXPECT(gbc.pc(), 0x8f39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe8b), 0x39);
        EXPECT(gbc.readMem(0xfe8c), 0x8f);
        // D9 02FC
        gbc.setState(0x1fd3, 0x122c, 0xbfd0, 0x8634, 0x50f2, 0x88d6, 0x0, 0x1);
        gbc.writeMem(0x122c, { 0x7a, 0x5c });
        gbc.writeMem(0x1fd3, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x122e);
        EXPECT(gbc.pc(), 0x5c7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 02FD
        gbc.setState(0x5872, 0x155a, 0xdef0, 0xb3f6, 0x4c68, 0x1fe2, 0x0, 0x0);
        gbc.writeMem(0x155a, { 0x41, 0x43 });
        gbc.writeMem(0x5872, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x155c);
        EXPECT(gbc.pc(), 0x4341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 02FE
        gbc.setState(0x34ca, 0x527b, 0x60d0, 0xea93, 0xd908, 0xadf4, 0x1, 0x1);
        gbc.writeMem(0x34ca, { 0xd9 });
        gbc.writeMem(0x527b, { 0xec, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x527d);
        EXPECT(gbc.pc(), 0x44ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 02FF
        gbc.setState(0x7120, 0xe09e, 0xdf20, 0x8707, 0xfba, 0x14ee, 0x1, 0x1);
        gbc.writeMem(0x7120, { 0xd9 });
        gbc.writeMem(0xe09e, { 0x3c, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe0a0);
        EXPECT(gbc.pc(), 0x133c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe09e), 0x3c);
        EXPECT(gbc.readMem(0xe09f), 0x13);
        // D9 0300
        gbc.setState(0x51aa, 0xd312, 0xb30, 0x6211, 0xb305, 0x809b, 0x0, 0x1);
        gbc.writeMem(0x51aa, { 0xd9 });
        gbc.writeMem(0xd312, { 0x54, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd314);
        EXPECT(gbc.pc(), 0x2a54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd312), 0x54);
        EXPECT(gbc.readMem(0xd313), 0x2a);
        // D9 0301
        gbc.setState(0xb5ab, 0x8623, 0x8f90, 0x6944, 0xe511, 0xd8b4, 0x1, 0x0);
        gbc.writeMem(0x8623, { 0xa6, 0x5f });
        gbc.writeMem(0xb5ab, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8625);
        EXPECT(gbc.pc(), 0x5fa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8623), 0xa6);
        EXPECT(gbc.readMem(0x8624), 0x5f);
        EXPECT(gbc.readMem(0xb5ab), 0xd9);
        // D9 0302
        gbc.setState(0x42e1, 0xf20c, 0xd590, 0x1a49, 0x8643, 0xfcbd, 0x0, 0x0);
        gbc.writeMem(0x42e1, { 0xd9 });
        gbc.writeMem(0xf20c, { 0x28, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf20e);
        EXPECT(gbc.pc(), 0x8728);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf20c), 0x28);
        EXPECT(gbc.readMem(0xf20d), 0x87);
        // D9 0303
        gbc.setState(0x586b, 0x5831, 0xf1b0, 0xb1e3, 0xef47, 0x4adc, 0x0, 0x0);
        gbc.writeMem(0x5831, { 0x8f, 0x27 });
        gbc.writeMem(0x586b, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5833);
        EXPECT(gbc.pc(), 0x278f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0304
        gbc.setState(0x442a, 0x169d, 0x21f0, 0xdf24, 0x9b2c, 0xe283, 0x0, 0x1);
        gbc.writeMem(0x169d, { 0xb0, 0x3c });
        gbc.writeMem(0x442a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x169f);
        EXPECT(gbc.pc(), 0x3cb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0305
        gbc.setState(0x483a, 0x65e, 0x5ab0, 0x962c, 0xdfde, 0xc161, 0x0, 0x1);
        gbc.writeMem(0x65e, { 0x5c, 0x1f });
        gbc.writeMem(0x483a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x660);
        EXPECT(gbc.pc(), 0x1f5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0306
        gbc.setState(0xc218, 0x153, 0xff0, 0xcba4, 0x286f, 0x2a07, 0x1, 0x0);
        gbc.writeMem(0x153, { 0xe5, 0xbb });
        gbc.writeMem(0xc218, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x155);
        EXPECT(gbc.pc(), 0xbbe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc218), 0xd9);
        // D9 0307
        gbc.setState(0xbbab, 0x28ac, 0xbc30, 0xc85f, 0x8c11, 0xc84a, 0x0, 0x0);
        gbc.writeMem(0x28ac, { 0x4, 0xa7 });
        gbc.writeMem(0xbbab, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x28ae);
        EXPECT(gbc.pc(), 0xa704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbab), 0xd9);
        // D9 0308
        gbc.setState(0x6082, 0xcf9c, 0x9ac0, 0xe0dc, 0xb62c, 0x8f94, 0x0, 0x0);
        gbc.writeMem(0x6082, { 0xd9 });
        gbc.writeMem(0xcf9c, { 0xa, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcf9e);
        EXPECT(gbc.pc(), 0x790a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf9c), 0xa);
        EXPECT(gbc.readMem(0xcf9d), 0x79);
        // D9 0309
        gbc.setState(0x20ec, 0xf015, 0x2890, 0xcdfc, 0xddf3, 0xc1bf, 0x1, 0x1);
        gbc.writeMem(0x20ec, { 0xd9 });
        gbc.writeMem(0xf015, { 0x1d, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf017);
        EXPECT(gbc.pc(), 0xe71d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf015), 0x1d);
        EXPECT(gbc.readMem(0xf016), 0xe7);
        // D9 030A
        gbc.setState(0x8e87, 0x9568, 0x5050, 0xe5cb, 0x1bef, 0x20ff, 0x0, 0x0);
        gbc.writeMem(0x8e87, { 0xd9 });
        gbc.writeMem(0x9568, { 0x99, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x956a);
        EXPECT(gbc.pc(), 0x3d99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e87), 0xd9);
        EXPECT(gbc.readMem(0x9568), 0x99);
        EXPECT(gbc.readMem(0x9569), 0x3d);
        // D9 030C
        gbc.setState(0xcd4d, 0xf889, 0x12b0, 0x3d02, 0xddd, 0x2ce4, 0x1, 0x1);
        gbc.writeMem(0xcd4d, { 0xd9 });
        gbc.writeMem(0xf889, { 0x7e, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf88b);
        EXPECT(gbc.pc(), 0xff7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd4d), 0xd9);
        EXPECT(gbc.readMem(0xf889), 0x7e);
        EXPECT(gbc.readMem(0xf88a), 0xff);
        // D9 030D
        gbc.setState(0x5b2f, 0xdd44, 0xbe0, 0x9504, 0x9b52, 0xf5a7, 0x0, 0x1);
        gbc.writeMem(0x5b2f, { 0xd9 });
        gbc.writeMem(0xdd44, { 0x8e, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xdd46);
        EXPECT(gbc.pc(), 0x6e8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd44), 0x8e);
        EXPECT(gbc.readMem(0xdd45), 0x6e);
        // D9 030E
        gbc.setState(0x3f63, 0x815c, 0xfa10, 0xd4c, 0xe3ff, 0xaabe, 0x1, 0x1);
        gbc.writeMem(0x3f63, { 0xd9 });
        gbc.writeMem(0x815c, { 0x65, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x815e);
        EXPECT(gbc.pc(), 0x5a65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x815c), 0x65);
        EXPECT(gbc.readMem(0x815d), 0x5a);
        // D9 030F
        gbc.setState(0xa375, 0x7ad2, 0xfad0, 0xd571, 0x8030, 0xbbf3, 0x1, 0x1);
        gbc.writeMem(0x7ad2, { 0x7e, 0xb1 });
        gbc.writeMem(0xa375, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7ad4);
        EXPECT(gbc.pc(), 0xb17e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa375), 0xd9);
        // D9 0310
        gbc.setState(0x9990, 0xe6ca, 0x82c0, 0xa5dd, 0x317a, 0x5c16, 0x1, 0x1);
        gbc.writeMem(0x9990, { 0xd9 });
        gbc.writeMem(0xe6ca, { 0x32, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe6cc);
        EXPECT(gbc.pc(), 0x9632);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9990), 0xd9);
        EXPECT(gbc.readMem(0xe6ca), 0x32);
        EXPECT(gbc.readMem(0xe6cb), 0x96);
        // D9 0311
        gbc.setState(0x213c, 0xcac5, 0xaf30, 0x2181, 0xf6b1, 0x7810, 0x1, 0x0);
        gbc.writeMem(0x213c, { 0xd9 });
        gbc.writeMem(0xcac5, { 0x9b, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xcac7);
        EXPECT(gbc.pc(), 0xd69b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac5), 0x9b);
        EXPECT(gbc.readMem(0xcac6), 0xd6);
        // D9 0312
        gbc.setState(0x69c6, 0xda0e, 0x5dd0, 0xc64f, 0xc93c, 0xc0a8, 0x1, 0x0);
        gbc.writeMem(0x69c6, { 0xd9 });
        gbc.writeMem(0xda0e, { 0x58, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xda10);
        EXPECT(gbc.pc(), 0xb158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda0e), 0x58);
        EXPECT(gbc.readMem(0xda0f), 0xb1);
        // D9 0313
        gbc.setState(0x8385, 0xdaba, 0x73b0, 0x2370, 0xae40, 0xf65f, 0x0, 0x1);
        gbc.writeMem(0x8385, { 0xd9 });
        gbc.writeMem(0xdaba, { 0x60, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xdabc);
        EXPECT(gbc.pc(), 0x2460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8385), 0xd9);
        EXPECT(gbc.readMem(0xdaba), 0x60);
        EXPECT(gbc.readMem(0xdabb), 0x24);
        // D9 0315
        gbc.setState(0xca70, 0xb673, 0x2a60, 0xe807, 0xcd8c, 0xd900, 0x1, 0x0);
        gbc.writeMem(0xb673, { 0xf3, 0xed });
        gbc.writeMem(0xca70, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb675);
        EXPECT(gbc.pc(), 0xedf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb673), 0xf3);
        EXPECT(gbc.readMem(0xb674), 0xed);
        EXPECT(gbc.readMem(0xca70), 0xd9);
        // D9 0317
        gbc.setState(0xbbbd, 0x5d13, 0x7cd0, 0x73e2, 0x87c9, 0x4770, 0x1, 0x1);
        gbc.writeMem(0x5d13, { 0x83, 0xa });
        gbc.writeMem(0xbbbd, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5d15);
        EXPECT(gbc.pc(), 0xa83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbbd), 0xd9);
        // D9 0318
        gbc.setState(0xe50, 0x3d09, 0x36d0, 0xc991, 0x50d2, 0xfbd0, 0x0, 0x0);
        gbc.writeMem(0xe50, { 0xd9 });
        gbc.writeMem(0x3d09, { 0xfa, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3d0b);
        EXPECT(gbc.pc(), 0x95fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 0319
        gbc.setState(0x57f, 0x5b34, 0x5470, 0x6f55, 0x226, 0xa035, 0x0, 0x0);
        gbc.writeMem(0x57f, { 0xd9 });
        gbc.writeMem(0x5b34, { 0x76, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5b36);
        EXPECT(gbc.pc(), 0xf676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 031A
        gbc.setState(0x6cce, 0x85ac, 0x1b20, 0x7a32, 0x27db, 0x9673, 0x1, 0x1);
        gbc.writeMem(0x6cce, { 0xd9 });
        gbc.writeMem(0x85ac, { 0xca, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x85ae);
        EXPECT(gbc.pc(), 0x25ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ac), 0xca);
        EXPECT(gbc.readMem(0x85ad), 0x25);
        // D9 031B
        gbc.setState(0x2255, 0xfc89, 0xbcc0, 0xd4cc, 0xac6, 0x75ac, 0x0, 0x0);
        gbc.writeMem(0x2255, { 0xd9 });
        gbc.writeMem(0xfc89, { 0x14, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xfc8b);
        EXPECT(gbc.pc(), 0x9b14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc89), 0x14);
        EXPECT(gbc.readMem(0xfc8a), 0x9b);
        // D9 031C
        gbc.setState(0x9ff6, 0x1fa6, 0xdca0, 0xdb12, 0x7f34, 0xfaec, 0x0, 0x0);
        gbc.writeMem(0x1fa6, { 0xef, 0xbf });
        gbc.writeMem(0x9ff6, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1fa8);
        EXPECT(gbc.pc(), 0xbfef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ff6), 0xd9);
        // D9 031D
        gbc.setState(0x6f5e, 0xcdbf, 0x6a10, 0x3224, 0xab9b, 0x323b, 0x0, 0x0);
        gbc.writeMem(0x6f5e, { 0xd9 });
        gbc.writeMem(0xcdbf, { 0x6c, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xcdc1);
        EXPECT(gbc.pc(), 0x7c6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdbf), 0x6c);
        EXPECT(gbc.readMem(0xcdc0), 0x7c);
        // D9 031E
        gbc.setState(0xe5fc, 0xfb11, 0x150, 0x5d92, 0x1275, 0xedb5, 0x0, 0x1);
        gbc.writeMem(0xe5fc, { 0xd9 });
        gbc.writeMem(0xfb11, { 0xb1, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xfb13);
        EXPECT(gbc.pc(), 0x97b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5fc), 0xd9);
        EXPECT(gbc.readMem(0xfb11), 0xb1);
        EXPECT(gbc.readMem(0xfb12), 0x97);
        // D9 031F
        gbc.setState(0xdcb7, 0x3308, 0xe190, 0x8eac, 0x1250, 0x7e3c, 0x1, 0x0);
        gbc.writeMem(0x3308, { 0x7f, 0x1b });
        gbc.writeMem(0xdcb7, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x330a);
        EXPECT(gbc.pc(), 0x1b7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcb7), 0xd9);
        // D9 0320
        gbc.setState(0x3be2, 0xb632, 0x4be0, 0xe83d, 0xf312, 0xd031, 0x1, 0x1);
        gbc.writeMem(0x3be2, { 0xd9 });
        gbc.writeMem(0xb632, { 0xfb, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb634);
        EXPECT(gbc.pc(), 0x2cfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb632), 0xfb);
        EXPECT(gbc.readMem(0xb633), 0x2c);
        // D9 0321
        gbc.setState(0x6431, 0xfa2f, 0xccd0, 0xa2dc, 0x82b6, 0x5db6, 0x0, 0x0);
        gbc.writeMem(0x6431, { 0xd9 });
        gbc.writeMem(0xfa2f, { 0xe2, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xfa31);
        EXPECT(gbc.pc(), 0xafe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa2f), 0xe2);
        EXPECT(gbc.readMem(0xfa30), 0xaf);
        // D9 0322
        gbc.setState(0x4c3b, 0xc501, 0xc630, 0xb312, 0xaf81, 0xaabd, 0x0, 0x0);
        gbc.writeMem(0x4c3b, { 0xd9 });
        gbc.writeMem(0xc501, { 0x65, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc503);
        EXPECT(gbc.pc(), 0x6b65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc501), 0x65);
        EXPECT(gbc.readMem(0xc502), 0x6b);
        // D9 0323
        gbc.setState(0x2594, 0xd1aa, 0xb7b0, 0xdc14, 0x7ea2, 0xc28d, 0x1, 0x0);
        gbc.writeMem(0x2594, { 0xd9 });
        gbc.writeMem(0xd1aa, { 0x84, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd1ac);
        EXPECT(gbc.pc(), 0xf584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1aa), 0x84);
        EXPECT(gbc.readMem(0xd1ab), 0xf5);
        // D9 0324
        gbc.setState(0x41e2, 0x86d5, 0x30f0, 0xee5, 0x80f8, 0xbc7b, 0x1, 0x1);
        gbc.writeMem(0x41e2, { 0xd9 });
        gbc.writeMem(0x86d5, { 0x85, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x86d7);
        EXPECT(gbc.pc(), 0x1f85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86d5), 0x85);
        EXPECT(gbc.readMem(0x86d6), 0x1f);
        // D9 0325
        gbc.setState(0xa02e, 0xea42, 0x68c0, 0xb222, 0xcf14, 0xb519, 0x0, 0x0);
        gbc.writeMem(0xa02e, { 0xd9 });
        gbc.writeMem(0xea42, { 0xe3, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xea44);
        EXPECT(gbc.pc(), 0x57e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa02e), 0xd9);
        EXPECT(gbc.readMem(0xea42), 0xe3);
        EXPECT(gbc.readMem(0xea43), 0x57);
        // D9 0326
        gbc.setState(0xa463, 0xd2f4, 0xda80, 0xc52, 0x7e04, 0x6d1f, 0x0, 0x1);
        gbc.writeMem(0xa463, { 0xd9 });
        gbc.writeMem(0xd2f4, { 0x5c, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd2f6);
        EXPECT(gbc.pc(), 0x2f5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa463), 0xd9);
        EXPECT(gbc.readMem(0xd2f4), 0x5c);
        EXPECT(gbc.readMem(0xd2f5), 0x2f);
        // D9 0327
        gbc.setState(0x78ff, 0xe7fa, 0x1570, 0xabc, 0xc6fa, 0x1a20, 0x0, 0x1);
        gbc.writeMem(0x78ff, { 0xd9 });
        gbc.writeMem(0xe7fa, { 0x20, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe7fc);
        EXPECT(gbc.pc(), 0x5b20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7fa), 0x20);
        EXPECT(gbc.readMem(0xe7fb), 0x5b);
        // D9 0328
        gbc.setState(0xdcdf, 0xdbd1, 0x8f20, 0x7c98, 0xd1e1, 0x501e, 0x1, 0x0);
        gbc.writeMem(0xdbd1, { 0x4e, 0x42 });
        gbc.writeMem(0xdcdf, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xdbd3);
        EXPECT(gbc.pc(), 0x424e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbd1), 0x4e);
        EXPECT(gbc.readMem(0xdbd2), 0x42);
        EXPECT(gbc.readMem(0xdcdf), 0xd9);
        // D9 0329
        gbc.setState(0xa90b, 0x304a, 0x9000, 0x761f, 0xc356, 0x4801, 0x0, 0x0);
        gbc.writeMem(0x304a, { 0xf4, 0xa2 });
        gbc.writeMem(0xa90b, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x304c);
        EXPECT(gbc.pc(), 0xa2f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa90b), 0xd9);
        // D9 032A
        gbc.setState(0x703f, 0x953a, 0x36b0, 0xaea5, 0xab15, 0xdd84, 0x1, 0x1);
        gbc.writeMem(0x703f, { 0xd9 });
        gbc.writeMem(0x953a, { 0x53, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x953c);
        EXPECT(gbc.pc(), 0x4353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x953a), 0x53);
        EXPECT(gbc.readMem(0x953b), 0x43);
        // D9 032B
        gbc.setState(0x1ed5, 0x88b5, 0x7bb0, 0xf050, 0x6319, 0x970d, 0x1, 0x1);
        gbc.writeMem(0x1ed5, { 0xd9 });
        gbc.writeMem(0x88b5, { 0x24, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x88b7);
        EXPECT(gbc.pc(), 0xbe24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b5), 0x24);
        EXPECT(gbc.readMem(0x88b6), 0xbe);
        // D9 032C
        gbc.setState(0x1a72, 0x9dac, 0xc3d0, 0x6b7c, 0x1fab, 0xfd87, 0x0, 0x1);
        gbc.writeMem(0x1a72, { 0xd9 });
        gbc.writeMem(0x9dac, { 0xdd, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9dae);
        EXPECT(gbc.pc(), 0x97dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dac), 0xdd);
        EXPECT(gbc.readMem(0x9dad), 0x97);
        // D9 032D
        gbc.setState(0x1f42, 0x7883, 0xfc70, 0x5ae6, 0xbbc2, 0x6f3b, 0x0, 0x0);
        gbc.writeMem(0x1f42, { 0xd9 });
        gbc.writeMem(0x7883, { 0x57, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7885);
        EXPECT(gbc.pc(), 0x857);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 032E
        gbc.setState(0xa5a5, 0xf0d, 0x6320, 0xf513, 0x4806, 0xf059, 0x1, 0x0);
        gbc.writeMem(0xf0d, { 0x18, 0x2a });
        gbc.writeMem(0xa5a5, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf0f);
        EXPECT(gbc.pc(), 0x2a18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5a5), 0xd9);
        // D9 032F
        gbc.setState(0x9acf, 0x5081, 0xff00, 0x7ed6, 0x52c5, 0x472f, 0x1, 0x0);
        gbc.writeMem(0x5081, { 0xb9, 0xc6 });
        gbc.writeMem(0x9acf, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5083);
        EXPECT(gbc.pc(), 0xc6b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9acf), 0xd9);
        // D9 0330
        gbc.setState(0x6d9b, 0xa5f5, 0xb780, 0x6475, 0x33f0, 0x8aff, 0x1, 0x0);
        gbc.writeMem(0x6d9b, { 0xd9 });
        gbc.writeMem(0xa5f5, { 0xbe, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa5f7);
        EXPECT(gbc.pc(), 0x9be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f5), 0xbe);
        EXPECT(gbc.readMem(0xa5f6), 0x9);
        // D9 0331
        gbc.setState(0x2d7d, 0x4422, 0x5c50, 0x77ca, 0x198e, 0xd624, 0x1, 0x0);
        gbc.writeMem(0x2d7d, { 0xd9 });
        gbc.writeMem(0x4422, { 0x82, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4424);
        EXPECT(gbc.pc(), 0x7182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 0332
        gbc.setState(0x4934, 0x29, 0x3ba0, 0xf6fa, 0xa6f4, 0xe965, 0x0, 0x1);
        gbc.writeMem(0x29, { 0xf0, 0xf9 });
        gbc.writeMem(0x4934, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2b);
        EXPECT(gbc.pc(), 0xf9f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0333
        gbc.setState(0xb2e3, 0x3db8, 0xebb0, 0xf688, 0x399c, 0x85d8, 0x0, 0x1);
        gbc.writeMem(0x3db8, { 0x4b, 0xb5 });
        gbc.writeMem(0xb2e3, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3dba);
        EXPECT(gbc.pc(), 0xb54b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2e3), 0xd9);
        // D9 0334
        gbc.setState(0xb09, 0xde7b, 0xa1a0, 0x3407, 0xff04, 0x6592, 0x0, 0x0);
        gbc.writeMem(0xb09, { 0xd9 });
        gbc.writeMem(0xde7b, { 0xe8, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xde7d);
        EXPECT(gbc.pc(), 0xbee8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde7b), 0xe8);
        EXPECT(gbc.readMem(0xde7c), 0xbe);
        // D9 0335
        gbc.setState(0x13b0, 0x5677, 0xd90, 0x9291, 0x25a4, 0x12f3, 0x0, 0x1);
        gbc.writeMem(0x13b0, { 0xd9 });
        gbc.writeMem(0x5677, { 0xfa, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5679);
        EXPECT(gbc.pc(), 0x78fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 0336
        gbc.setState(0x16b5, 0x20f6, 0xa720, 0x1765, 0xd202, 0xf2d2, 0x0, 0x0);
        gbc.writeMem(0x16b5, { 0xd9 });
        gbc.writeMem(0x20f6, { 0x3d, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x20f8);
        EXPECT(gbc.pc(), 0x93d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0337
        gbc.setState(0xd617, 0x9be, 0x6fa0, 0x9b6d, 0x7251, 0x5a90, 0x0, 0x0);
        gbc.writeMem(0x9be, { 0x2d, 0xe5 });
        gbc.writeMem(0xd617, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9c0);
        EXPECT(gbc.pc(), 0xe52d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd617), 0xd9);
        // D9 0338
        gbc.setState(0xc7f6, 0x4b0, 0xae60, 0xa43d, 0xc678, 0xbc44, 0x1, 0x0);
        gbc.writeMem(0x4b0, { 0xb5, 0x1a });
        gbc.writeMem(0xc7f6, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4b2);
        EXPECT(gbc.pc(), 0x1ab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7f6), 0xd9);
        // D9 033A
        gbc.setState(0x967a, 0x77b8, 0xee0, 0xa228, 0xa766, 0x158a, 0x0, 0x0);
        gbc.writeMem(0x77b8, { 0x75, 0x2a });
        gbc.writeMem(0x967a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x77ba);
        EXPECT(gbc.pc(), 0x2a75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x967a), 0xd9);
        // D9 033C
        gbc.setState(0x1316, 0xb538, 0x67b0, 0x6a89, 0xc468, 0x3fef, 0x0, 0x0);
        gbc.writeMem(0x1316, { 0xd9 });
        gbc.writeMem(0xb538, { 0xe5, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb53a);
        EXPECT(gbc.pc(), 0x14e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb538), 0xe5);
        EXPECT(gbc.readMem(0xb539), 0x14);
        // D9 033E
        gbc.setState(0x9dab, 0x5dc2, 0x700, 0x5122, 0x3878, 0x596e, 0x1, 0x0);
        gbc.writeMem(0x5dc2, { 0x5a, 0x63 });
        gbc.writeMem(0x9dab, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5dc4);
        EXPECT(gbc.pc(), 0x635a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dab), 0xd9);
        // D9 033F
        gbc.setState(0x43ab, 0xcf96, 0x75f0, 0x6904, 0xf204, 0xe1e7, 0x1, 0x0);
        gbc.writeMem(0x43ab, { 0xd9 });
        gbc.writeMem(0xcf96, { 0xab, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xcf98);
        EXPECT(gbc.pc(), 0x4bab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf96), 0xab);
        EXPECT(gbc.readMem(0xcf97), 0x4b);
        // D9 0340
        gbc.setState(0xcb26, 0x747e, 0x1f90, 0x5086, 0xe5f2, 0xc7e6, 0x0, 0x0);
        gbc.writeMem(0x747e, { 0x55, 0x14 });
        gbc.writeMem(0xcb26, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7480);
        EXPECT(gbc.pc(), 0x1455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb26), 0xd9);
        // D9 0341
        gbc.setState(0x1050, 0x6c50, 0xa90, 0x6e49, 0x2df5, 0x38, 0x1, 0x0);
        gbc.writeMem(0x1050, { 0xd9 });
        gbc.writeMem(0x6c50, { 0x28, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6c52);
        EXPECT(gbc.pc(), 0x7828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 0343
        gbc.setState(0x9d29, 0xd59, 0x7800, 0xd5ad, 0x4ddd, 0x4e92, 0x1, 0x0);
        gbc.writeMem(0xd59, { 0xc5, 0xec });
        gbc.writeMem(0x9d29, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd5b);
        EXPECT(gbc.pc(), 0xecc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d29), 0xd9);
        // D9 0344
        gbc.setState(0x1135, 0xda3b, 0xd470, 0xca9e, 0x1d23, 0x49df, 0x1, 0x1);
        gbc.writeMem(0x1135, { 0xd9 });
        gbc.writeMem(0xda3b, { 0x10, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xda3d);
        EXPECT(gbc.pc(), 0x4510);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda3b), 0x10);
        EXPECT(gbc.readMem(0xda3c), 0x45);
        // D9 0345
        gbc.setState(0x7b9d, 0xcef4, 0x2c50, 0x22e0, 0x4eab, 0x2e98, 0x1, 0x1);
        gbc.writeMem(0x7b9d, { 0xd9 });
        gbc.writeMem(0xcef4, { 0x88, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xcef6);
        EXPECT(gbc.pc(), 0xb788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcef4), 0x88);
        EXPECT(gbc.readMem(0xcef5), 0xb7);
        // D9 0346
        gbc.setState(0xdbc4, 0x3021, 0x95a0, 0xbf2f, 0xfc8d, 0xa499, 0x1, 0x1);
        gbc.writeMem(0x3021, { 0xd7, 0x2b });
        gbc.writeMem(0xdbc4, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3023);
        EXPECT(gbc.pc(), 0x2bd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbc4), 0xd9);
        // D9 0347
        gbc.setState(0x4f84, 0x4113, 0xcbf0, 0xa896, 0xd034, 0xbef5, 0x1, 0x1);
        gbc.writeMem(0x4113, { 0xbd, 0xf1 });
        gbc.writeMem(0x4f84, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4115);
        EXPECT(gbc.pc(), 0xf1bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0349
        gbc.setState(0x6df7, 0x4c64, 0x9230, 0x4e9b, 0x2b07, 0x5719, 0x1, 0x0);
        gbc.writeMem(0x4c64, { 0xde, 0xab });
        gbc.writeMem(0x6df7, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4c66);
        EXPECT(gbc.pc(), 0xabde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 034A
        gbc.setState(0xec83, 0x84aa, 0x3ca0, 0x53e3, 0xccf1, 0xe8f3, 0x0, 0x1);
        gbc.writeMem(0x84aa, { 0xe7, 0x46 });
        gbc.writeMem(0xec83, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x84ac);
        EXPECT(gbc.pc(), 0x46e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84aa), 0xe7);
        EXPECT(gbc.readMem(0x84ab), 0x46);
        EXPECT(gbc.readMem(0xec83), 0xd9);
        // D9 034B
        gbc.setState(0x6a9c, 0xf84d, 0x4810, 0x2b16, 0x112e, 0x8a99, 0x1, 0x0);
        gbc.writeMem(0x6a9c, { 0xd9 });
        gbc.writeMem(0xf84d, { 0x47, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf84f);
        EXPECT(gbc.pc(), 0x3447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf84d), 0x47);
        EXPECT(gbc.readMem(0xf84e), 0x34);
        // D9 034C
        gbc.setState(0xecd4, 0x6ce9, 0x39b0, 0xe85e, 0xe16, 0xea25, 0x0, 0x0);
        gbc.writeMem(0x6ce9, { 0x40, 0xbd });
        gbc.writeMem(0xecd4, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6ceb);
        EXPECT(gbc.pc(), 0xbd40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecd4), 0xd9);
        // D9 034D
        gbc.setState(0x17a1, 0xde05, 0xa050, 0xcf95, 0x4cec, 0x434c, 0x1, 0x1);
        gbc.writeMem(0x17a1, { 0xd9 });
        gbc.writeMem(0xde05, { 0x2f, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xde07);
        EXPECT(gbc.pc(), 0x8f2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde05), 0x2f);
        EXPECT(gbc.readMem(0xde06), 0x8f);
        // D9 034E
        gbc.setState(0x8d14, 0xae77, 0xe360, 0x4ccf, 0x3381, 0x2be3, 0x1, 0x1);
        gbc.writeMem(0x8d14, { 0xd9 });
        gbc.writeMem(0xae77, { 0x30, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xae79);
        EXPECT(gbc.pc(), 0xf930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d14), 0xd9);
        EXPECT(gbc.readMem(0xae77), 0x30);
        EXPECT(gbc.readMem(0xae78), 0xf9);
        // D9 034F
        gbc.setState(0x1853, 0xabb2, 0xd810, 0x195, 0x3cd4, 0x78c1, 0x1, 0x0);
        gbc.writeMem(0x1853, { 0xd9 });
        gbc.writeMem(0xabb2, { 0x17, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xabb4);
        EXPECT(gbc.pc(), 0xab17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabb2), 0x17);
        EXPECT(gbc.readMem(0xabb3), 0xab);
        // D9 0351
        gbc.setState(0x7043, 0xc1ce, 0xf760, 0xd542, 0xfe34, 0x99b1, 0x1, 0x1);
        gbc.writeMem(0x7043, { 0xd9 });
        gbc.writeMem(0xc1ce, { 0x57, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc1d0);
        EXPECT(gbc.pc(), 0x5857);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ce), 0x57);
        EXPECT(gbc.readMem(0xc1cf), 0x58);
        // D9 0352
        gbc.setState(0x7568, 0xd399, 0xa4c0, 0xd16c, 0x51f7, 0xa87e, 0x1, 0x1);
        gbc.writeMem(0x7568, { 0xd9 });
        gbc.writeMem(0xd399, { 0xa3, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd39b);
        EXPECT(gbc.pc(), 0xa7a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd399), 0xa3);
        EXPECT(gbc.readMem(0xd39a), 0xa7);
        // D9 0353
        gbc.setState(0xad99, 0x1a20, 0xc750, 0x8ed, 0x5493, 0xefa1, 0x0, 0x0);
        gbc.writeMem(0x1a20, { 0x22, 0xfc });
        gbc.writeMem(0xad99, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1a22);
        EXPECT(gbc.pc(), 0xfc22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad99), 0xd9);
        // D9 0354
        gbc.setState(0x18b9, 0xa52b, 0x4a20, 0xabe6, 0x756c, 0xda0d, 0x0, 0x1);
        gbc.writeMem(0x18b9, { 0xd9 });
        gbc.writeMem(0xa52b, { 0xd3, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa52d);
        EXPECT(gbc.pc(), 0x13d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa52b), 0xd3);
        EXPECT(gbc.readMem(0xa52c), 0x13);
        // D9 0355
        gbc.setState(0x7b69, 0x954d, 0x2fe0, 0x5e2e, 0xd780, 0xe6cf, 0x1, 0x1);
        gbc.writeMem(0x7b69, { 0xd9 });
        gbc.writeMem(0x954d, { 0xe5, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x954f);
        EXPECT(gbc.pc(), 0x4ae5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x954d), 0xe5);
        EXPECT(gbc.readMem(0x954e), 0x4a);
        // D9 0356
        gbc.setState(0x53d8, 0x5549, 0xe330, 0xcd07, 0x59c0, 0x1263, 0x1, 0x0);
        gbc.writeMem(0x53d8, { 0xd9 });
        gbc.writeMem(0x5549, { 0x18, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x554b);
        EXPECT(gbc.pc(), 0xa118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0357
        gbc.setState(0xe54a, 0x5425, 0x21f0, 0xda56, 0xb2d4, 0x9d5e, 0x0, 0x0);
        gbc.writeMem(0x5425, { 0x78, 0xea });
        gbc.writeMem(0xe54a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5427);
        EXPECT(gbc.pc(), 0xea78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe54a), 0xd9);
        // D9 0358
        gbc.setState(0x76d6, 0xb25, 0xca50, 0x36f7, 0x6656, 0x9d30, 0x1, 0x1);
        gbc.writeMem(0xb25, { 0x95, 0x3a });
        gbc.writeMem(0x76d6, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb27);
        EXPECT(gbc.pc(), 0x3a95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 0359
        gbc.setState(0x50c9, 0x372b, 0x8b0, 0xe2a4, 0x5ed, 0xb5aa, 0x0, 0x1);
        gbc.writeMem(0x372b, { 0xe6, 0x5c });
        gbc.writeMem(0x50c9, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x372d);
        EXPECT(gbc.pc(), 0x5ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 035A
        gbc.setState(0xd2fe, 0x3b97, 0x6c0, 0xc97e, 0x7d40, 0xa59d, 0x1, 0x1);
        gbc.writeMem(0x3b97, { 0x8, 0x11 });
        gbc.writeMem(0xd2fe, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3b99);
        EXPECT(gbc.pc(), 0x1108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2fe), 0xd9);
        // D9 035B
        gbc.setState(0x4321, 0x329e, 0xd740, 0xa660, 0xe588, 0x81db, 0x0, 0x0);
        gbc.writeMem(0x329e, { 0xcd, 0xdc });
        gbc.writeMem(0x4321, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x32a0);
        EXPECT(gbc.pc(), 0xdccd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 035C
        gbc.setState(0xe96, 0x7dff, 0x90f0, 0xdc56, 0x1f7e, 0x5d44, 0x0, 0x1);
        gbc.writeMem(0xe96, { 0xd9 });
        gbc.writeMem(0x7dff, { 0xd3, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7e01);
        EXPECT(gbc.pc(), 0x8bd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 035D
        gbc.setState(0x6b6e, 0x1269, 0xaa10, 0x1cc5, 0xe417, 0xb349, 0x0, 0x0);
        gbc.writeMem(0x1269, { 0xca, 0x33 });
        gbc.writeMem(0x6b6e, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x126b);
        EXPECT(gbc.pc(), 0x33ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 035E
        gbc.setState(0xd574, 0x5d3a, 0x39a0, 0x21ba, 0x4aa3, 0x3019, 0x1, 0x1);
        gbc.writeMem(0x5d3a, { 0x5c, 0x7 });
        gbc.writeMem(0xd574, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5d3c);
        EXPECT(gbc.pc(), 0x75c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd574), 0xd9);
        // D9 035F
        gbc.setState(0xcbd6, 0xfa15, 0xbc0, 0x6858, 0x3e9c, 0x8bfa, 0x1, 0x1);
        gbc.writeMem(0xcbd6, { 0xd9 });
        gbc.writeMem(0xfa15, { 0xa6, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfa17);
        EXPECT(gbc.pc(), 0xa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbd6), 0xd9);
        EXPECT(gbc.readMem(0xfa15), 0xa6);
        EXPECT(gbc.readMem(0xfa16), 0x0);
        // D9 0360
        gbc.setState(0x437f, 0x1c82, 0x4c60, 0x53d2, 0x2547, 0x55ed, 0x0, 0x1);
        gbc.writeMem(0x1c82, { 0x3b, 0xac });
        gbc.writeMem(0x437f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1c84);
        EXPECT(gbc.pc(), 0xac3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0362
        gbc.setState(0x44d4, 0xce7f, 0x4c00, 0x214a, 0x15a2, 0x9f74, 0x0, 0x0);
        gbc.writeMem(0x44d4, { 0xd9 });
        gbc.writeMem(0xce7f, { 0x37, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xce81);
        EXPECT(gbc.pc(), 0x9237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce7f), 0x37);
        EXPECT(gbc.readMem(0xce80), 0x92);
        // D9 0363
        gbc.setState(0xa559, 0xa39c, 0xee0, 0xef6, 0xa6f3, 0xd356, 0x0, 0x0);
        gbc.writeMem(0xa39c, { 0x73, 0x97 });
        gbc.writeMem(0xa559, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa39e);
        EXPECT(gbc.pc(), 0x9773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa39c), 0x73);
        EXPECT(gbc.readMem(0xa39d), 0x97);
        EXPECT(gbc.readMem(0xa559), 0xd9);
        // D9 0364
        gbc.setState(0xb7b3, 0x65f6, 0xc1e0, 0x574e, 0x5645, 0x9989, 0x0, 0x1);
        gbc.writeMem(0x65f6, { 0x27, 0x9f });
        gbc.writeMem(0xb7b3, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x65f8);
        EXPECT(gbc.pc(), 0x9f27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7b3), 0xd9);
        // D9 0365
        gbc.setState(0x54eb, 0x9867, 0x6eb0, 0x401b, 0x93df, 0x1e92, 0x1, 0x1);
        gbc.writeMem(0x54eb, { 0xd9 });
        gbc.writeMem(0x9867, { 0x69, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9869);
        EXPECT(gbc.pc(), 0xee69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9867), 0x69);
        EXPECT(gbc.readMem(0x9868), 0xee);
        // D9 0366
        gbc.setState(0xa946, 0xdbc6, 0x4c90, 0x2d2f, 0x6e21, 0xe531, 0x0, 0x1);
        gbc.writeMem(0xa946, { 0xd9 });
        gbc.writeMem(0xdbc6, { 0x5a, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdbc8);
        EXPECT(gbc.pc(), 0x375a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa946), 0xd9);
        EXPECT(gbc.readMem(0xdbc6), 0x5a);
        EXPECT(gbc.readMem(0xdbc7), 0x37);
        // D9 0367
        gbc.setState(0x34b5, 0x3b80, 0x2ce0, 0x8769, 0xbb5b, 0xe406, 0x1, 0x0);
        gbc.writeMem(0x34b5, { 0xd9 });
        gbc.writeMem(0x3b80, { 0x48, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3b82);
        EXPECT(gbc.pc(), 0x4248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0368
        gbc.setState(0xbe41, 0x2636, 0xe330, 0x7dcb, 0xec05, 0xe212, 0x1, 0x1);
        gbc.writeMem(0x2636, { 0x9, 0x2f });
        gbc.writeMem(0xbe41, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2638);
        EXPECT(gbc.pc(), 0x2f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe41), 0xd9);
        // D9 0369
        gbc.setState(0x6f72, 0x1ea5, 0x2d20, 0xa63a, 0x2f7b, 0x6788, 0x0, 0x0);
        gbc.writeMem(0x1ea5, { 0x90, 0xbc });
        gbc.writeMem(0x6f72, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1ea7);
        EXPECT(gbc.pc(), 0xbc90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 036A
        gbc.setState(0x8d29, 0x20c9, 0x99c0, 0x493, 0xdc3, 0x27d3, 0x0, 0x0);
        gbc.writeMem(0x20c9, { 0x3e, 0x6 });
        gbc.writeMem(0x8d29, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x20cb);
        EXPECT(gbc.pc(), 0x63e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d29), 0xd9);
        // D9 036B
        gbc.setState(0x969e, 0x68e6, 0xd10, 0xd87a, 0x33ed, 0xf8e9, 0x1, 0x0);
        gbc.writeMem(0x68e6, { 0x11, 0xd5 });
        gbc.writeMem(0x969e, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x68e8);
        EXPECT(gbc.pc(), 0xd511);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x969e), 0xd9);
        // D9 036C
        gbc.setState(0x9b94, 0xc91, 0x23e0, 0x341e, 0x8030, 0xfe42, 0x1, 0x0);
        gbc.writeMem(0xc91, { 0x19, 0x1a });
        gbc.writeMem(0x9b94, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc93);
        EXPECT(gbc.pc(), 0x1a19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b94), 0xd9);
        // D9 036D
        gbc.setState(0xb19b, 0x72b3, 0xf830, 0x3cd6, 0x6d0d, 0x7bf7, 0x1, 0x1);
        gbc.writeMem(0x72b3, { 0x96, 0x54 });
        gbc.writeMem(0xb19b, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x72b5);
        EXPECT(gbc.pc(), 0x5496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb19b), 0xd9);
        // D9 036E
        gbc.setState(0xc7d9, 0x9728, 0x5040, 0xc294, 0x2455, 0x8c6d, 0x1, 0x0);
        gbc.writeMem(0x9728, { 0x98, 0xc1 });
        gbc.writeMem(0xc7d9, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x972a);
        EXPECT(gbc.pc(), 0xc198);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9728), 0x98);
        EXPECT(gbc.readMem(0x9729), 0xc1);
        EXPECT(gbc.readMem(0xc7d9), 0xd9);
        // D9 036F
        gbc.setState(0xdce5, 0xb5a, 0xcca0, 0xb800, 0xfd6f, 0x3006, 0x0, 0x0);
        gbc.writeMem(0xb5a, { 0xe7, 0x8c });
        gbc.writeMem(0xdce5, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb5c);
        EXPECT(gbc.pc(), 0x8ce7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce5), 0xd9);
        // D9 0370
        gbc.setState(0x5aae, 0xe86a, 0x2f80, 0xa305, 0x43f1, 0x2e93, 0x1, 0x1);
        gbc.writeMem(0x5aae, { 0xd9 });
        gbc.writeMem(0xe86a, { 0x8d, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe86c);
        EXPECT(gbc.pc(), 0x808d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe86a), 0x8d);
        EXPECT(gbc.readMem(0xe86b), 0x80);
        // D9 0371
        gbc.setState(0x89c5, 0x829e, 0xc3a0, 0x4663, 0x28b7, 0xa88f, 0x0, 0x0);
        gbc.writeMem(0x829e, { 0xea, 0x87 });
        gbc.writeMem(0x89c5, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x82a0);
        EXPECT(gbc.pc(), 0x87ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x829e), 0xea);
        EXPECT(gbc.readMem(0x829f), 0x87);
        EXPECT(gbc.readMem(0x89c5), 0xd9);
        // D9 0372
        gbc.setState(0x7073, 0x3e14, 0x3130, 0xc7d7, 0x6092, 0xd8a5, 0x0, 0x1);
        gbc.writeMem(0x3e14, { 0xd0, 0xfa });
        gbc.writeMem(0x7073, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3e16);
        EXPECT(gbc.pc(), 0xfad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0373
        gbc.setState(0xa5b1, 0xefb2, 0xe1b0, 0x69d, 0xf49b, 0xe3b7, 0x0, 0x0);
        gbc.writeMem(0xa5b1, { 0xd9 });
        gbc.writeMem(0xefb2, { 0x33, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xefb4);
        EXPECT(gbc.pc(), 0x8333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5b1), 0xd9);
        EXPECT(gbc.readMem(0xefb2), 0x33);
        EXPECT(gbc.readMem(0xefb3), 0x83);
        // D9 0374
        gbc.setState(0x1dbd, 0xa564, 0x6080, 0xb088, 0x97a3, 0x5644, 0x0, 0x0);
        gbc.writeMem(0x1dbd, { 0xd9 });
        gbc.writeMem(0xa564, { 0x79, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa566);
        EXPECT(gbc.pc(), 0xde79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa564), 0x79);
        EXPECT(gbc.readMem(0xa565), 0xde);
        // D9 0375
        gbc.setState(0x3dbd, 0x5ca6, 0x9570, 0x3224, 0xa4b5, 0xb1c, 0x1, 0x1);
        gbc.writeMem(0x3dbd, { 0xd9 });
        gbc.writeMem(0x5ca6, { 0x89, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5ca8);
        EXPECT(gbc.pc(), 0x4689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0376
        gbc.setState(0xccd7, 0x941a, 0xd750, 0x6735, 0xa3c2, 0xe9d1, 0x0, 0x0);
        gbc.writeMem(0x941a, { 0x92, 0xb8 });
        gbc.writeMem(0xccd7, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x941c);
        EXPECT(gbc.pc(), 0xb892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x941a), 0x92);
        EXPECT(gbc.readMem(0x941b), 0xb8);
        EXPECT(gbc.readMem(0xccd7), 0xd9);
        // D9 0377
        gbc.setState(0x16ff, 0xff58, 0x9ad0, 0x31ef, 0x3899, 0x9300, 0x0, 0x1);
        gbc.writeMem(0x16ff, { 0xd9 });
        gbc.writeMem(0xff58, { 0x10, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xff5a);
        EXPECT(gbc.pc(), 0xda10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff58), 0x10);
        EXPECT(gbc.readMem(0xff59), 0xda);
        // D9 0379
        gbc.setState(0xa1d7, 0xd43, 0xbf50, 0x6047, 0x6ab6, 0x5176, 0x0, 0x0);
        gbc.writeMem(0xd43, { 0x4f, 0x32 });
        gbc.writeMem(0xa1d7, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd45);
        EXPECT(gbc.pc(), 0x324f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1d7), 0xd9);
        // D9 037A
        gbc.setState(0xc9d7, 0xef4d, 0x2830, 0x308a, 0x3673, 0xd746, 0x1, 0x0);
        gbc.writeMem(0xc9d7, { 0xd9 });
        gbc.writeMem(0xef4d, { 0xce, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xef4f);
        EXPECT(gbc.pc(), 0x47ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9d7), 0xd9);
        EXPECT(gbc.readMem(0xef4d), 0xce);
        EXPECT(gbc.readMem(0xef4e), 0x47);
        // D9 037B
        gbc.setState(0x8002, 0xb0e0, 0x38c0, 0x994b, 0x3284, 0xb8ce, 0x0, 0x1);
        gbc.writeMem(0x8002, { 0xd9 });
        gbc.writeMem(0xb0e0, { 0x74, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb0e2);
        EXPECT(gbc.pc(), 0x3074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8002), 0xd9);
        EXPECT(gbc.readMem(0xb0e0), 0x74);
        EXPECT(gbc.readMem(0xb0e1), 0x30);
        // D9 037C
        gbc.setState(0x48a2, 0xa5c4, 0xfd90, 0xb347, 0xb705, 0x4298, 0x0, 0x0);
        gbc.writeMem(0x48a2, { 0xd9 });
        gbc.writeMem(0xa5c4, { 0xb2, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa5c6);
        EXPECT(gbc.pc(), 0xf7b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5c4), 0xb2);
        EXPECT(gbc.readMem(0xa5c5), 0xf7);
        // D9 037D
        gbc.setState(0x740d, 0x55d3, 0x3630, 0x5e27, 0x32d2, 0xeccb, 0x0, 0x1);
        gbc.writeMem(0x55d3, { 0x8d, 0xe0 });
        gbc.writeMem(0x740d, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x55d5);
        EXPECT(gbc.pc(), 0xe08d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 037E
        gbc.setState(0x282c, 0x1555, 0x6ee0, 0x4a07, 0xb8, 0x631c, 0x1, 0x0);
        gbc.writeMem(0x1555, { 0xf0, 0xdb });
        gbc.writeMem(0x282c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1557);
        EXPECT(gbc.pc(), 0xdbf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0380
        gbc.setState(0x102b, 0x9d8, 0xb580, 0x2bdd, 0xff2e, 0x1d88, 0x1, 0x1);
        gbc.writeMem(0x9d8, { 0x1e, 0xad });
        gbc.writeMem(0x102b, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9da);
        EXPECT(gbc.pc(), 0xad1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0381
        gbc.setState(0xe49f, 0x84eb, 0xd8b0, 0x136d, 0x3be9, 0x2407, 0x1, 0x1);
        gbc.writeMem(0x84eb, { 0x6d, 0x26 });
        gbc.writeMem(0xe49f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x84ed);
        EXPECT(gbc.pc(), 0x266d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84eb), 0x6d);
        EXPECT(gbc.readMem(0x84ec), 0x26);
        EXPECT(gbc.readMem(0xe49f), 0xd9);
        // D9 0382
        gbc.setState(0x7a26, 0x73d, 0x3240, 0xc5d8, 0xc921, 0x4e96, 0x0, 0x0);
        gbc.writeMem(0x73d, { 0x7d, 0x49 });
        gbc.writeMem(0x7a26, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x73f);
        EXPECT(gbc.pc(), 0x497d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0383
        gbc.setState(0x9826, 0x7e8c, 0x9d20, 0x7e49, 0xcb6, 0x25e8, 0x1, 0x0);
        gbc.writeMem(0x7e8c, { 0xf, 0xf2 });
        gbc.writeMem(0x9826, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7e8e);
        EXPECT(gbc.pc(), 0xf20f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9826), 0xd9);
        // D9 0384
        gbc.setState(0x66b1, 0x422e, 0x5970, 0x8af4, 0xc611, 0x4219, 0x0, 0x1);
        gbc.writeMem(0x422e, { 0x50, 0xef });
        gbc.writeMem(0x66b1, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4230);
        EXPECT(gbc.pc(), 0xef50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 0385
        gbc.setState(0x422a, 0xe3f6, 0x12b0, 0x53eb, 0xb847, 0xd93d, 0x1, 0x0);
        gbc.writeMem(0x422a, { 0xd9 });
        gbc.writeMem(0xe3f6, { 0x7e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe3f8);
        EXPECT(gbc.pc(), 0x207e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3f6), 0x7e);
        EXPECT(gbc.readMem(0xe3f7), 0x20);
        // D9 0386
        gbc.setState(0x2d23, 0xa591, 0x1b0, 0xb84f, 0x3c56, 0x9ab8, 0x1, 0x1);
        gbc.writeMem(0x2d23, { 0xd9 });
        gbc.writeMem(0xa591, { 0x82, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa593);
        EXPECT(gbc.pc(), 0xe882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa591), 0x82);
        EXPECT(gbc.readMem(0xa592), 0xe8);
        // D9 0387
        gbc.setState(0x9cb4, 0xa724, 0x8640, 0xe876, 0xf0c1, 0x2053, 0x1, 0x0);
        gbc.writeMem(0x9cb4, { 0xd9 });
        gbc.writeMem(0xa724, { 0xb6, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa726);
        EXPECT(gbc.pc(), 0xcb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb4), 0xd9);
        EXPECT(gbc.readMem(0xa724), 0xb6);
        EXPECT(gbc.readMem(0xa725), 0xc);
        // D9 0388
        gbc.setState(0xd0c0, 0x828b, 0x2920, 0xb5dc, 0x1e66, 0x6806, 0x1, 0x0);
        gbc.writeMem(0x828b, { 0xac, 0x4 });
        gbc.writeMem(0xd0c0, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x828d);
        EXPECT(gbc.pc(), 0x4ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x828b), 0xac);
        EXPECT(gbc.readMem(0x828c), 0x4);
        EXPECT(gbc.readMem(0xd0c0), 0xd9);
        // D9 0389
        gbc.setState(0x731, 0xc485, 0xbb90, 0x6c99, 0x868e, 0x8ab6, 0x1, 0x1);
        gbc.writeMem(0x731, { 0xd9 });
        gbc.writeMem(0xc485, { 0x76, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc487);
        EXPECT(gbc.pc(), 0x9e76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc485), 0x76);
        EXPECT(gbc.readMem(0xc486), 0x9e);
        // D9 038A
        gbc.setState(0x3064, 0x30f0, 0x560, 0xe9ee, 0xa8b6, 0xa8fd, 0x1, 0x0);
        gbc.writeMem(0x3064, { 0xd9 });
        gbc.writeMem(0x30f0, { 0x99, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x30f2);
        EXPECT(gbc.pc(), 0x1499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 038B
        gbc.setState(0xc532, 0x7922, 0xec10, 0xeae8, 0xcc, 0x4f51, 0x1, 0x0);
        gbc.writeMem(0x7922, { 0xe, 0xb2 });
        gbc.writeMem(0xc532, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7924);
        EXPECT(gbc.pc(), 0xb20e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc532), 0xd9);
        // D9 038C
        gbc.setState(0x92f9, 0xaac0, 0x1f10, 0x5faa, 0x830d, 0x531c, 0x0, 0x0);
        gbc.writeMem(0x92f9, { 0xd9 });
        gbc.writeMem(0xaac0, { 0xd9, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xaac2);
        EXPECT(gbc.pc(), 0x6cd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92f9), 0xd9);
        EXPECT(gbc.readMem(0xaac0), 0xd9);
        EXPECT(gbc.readMem(0xaac1), 0x6c);
        // D9 038D
        gbc.setState(0x5b34, 0x2ce6, 0x5c00, 0x2595, 0x7a5f, 0xe229, 0x0, 0x1);
        gbc.writeMem(0x2ce6, { 0xf6, 0xe1 });
        gbc.writeMem(0x5b34, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2ce8);
        EXPECT(gbc.pc(), 0xe1f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 038E
        gbc.setState(0xc2d2, 0x1fcc, 0x9af0, 0x62f6, 0x3efa, 0x84b3, 0x0, 0x0);
        gbc.writeMem(0x1fcc, { 0x6e, 0xb0 });
        gbc.writeMem(0xc2d2, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1fce);
        EXPECT(gbc.pc(), 0xb06e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2d2), 0xd9);
        // D9 038F
        gbc.setState(0x8b4, 0x1af6, 0x4ac0, 0x5c7f, 0xa79a, 0x5587, 0x0, 0x0);
        gbc.writeMem(0x8b4, { 0xd9 });
        gbc.writeMem(0x1af6, { 0x6b, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1af8);
        EXPECT(gbc.pc(), 0xfc6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 0390
        gbc.setState(0xdf59, 0x329a, 0x95a0, 0x2f46, 0x4dcf, 0x9557, 0x1, 0x1);
        gbc.writeMem(0x329a, { 0xd3, 0x43 });
        gbc.writeMem(0xdf59, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x329c);
        EXPECT(gbc.pc(), 0x43d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf59), 0xd9);
        // D9 0391
        gbc.setState(0x6e8f, 0x881b, 0x3f90, 0xa094, 0x158b, 0x87e0, 0x0, 0x0);
        gbc.writeMem(0x6e8f, { 0xd9 });
        gbc.writeMem(0x881b, { 0x36, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x881d);
        EXPECT(gbc.pc(), 0xb236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x881b), 0x36);
        EXPECT(gbc.readMem(0x881c), 0xb2);
        // D9 0392
        gbc.setState(0xea3e, 0xd0a5, 0x7f00, 0x8292, 0x9f3d, 0x88e5, 0x0, 0x1);
        gbc.writeMem(0xd0a5, { 0x4e, 0x6a });
        gbc.writeMem(0xea3e, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd0a7);
        EXPECT(gbc.pc(), 0x6a4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0a5), 0x4e);
        EXPECT(gbc.readMem(0xd0a6), 0x6a);
        EXPECT(gbc.readMem(0xea3e), 0xd9);
        // D9 0393
        gbc.setState(0xe2ff, 0x555e, 0xdc90, 0xba8e, 0x6bfd, 0xed02, 0x1, 0x0);
        gbc.writeMem(0x555e, { 0xe, 0xed });
        gbc.writeMem(0xe2ff, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5560);
        EXPECT(gbc.pc(), 0xed0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ff), 0xd9);
        // D9 0394
        gbc.setState(0x9f92, 0x86f9, 0x54c0, 0xefdf, 0x8e2c, 0xfdb9, 0x0, 0x0);
        gbc.writeMem(0x86f9, { 0x0, 0x39 });
        gbc.writeMem(0x9f92, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x86fb);
        EXPECT(gbc.pc(), 0x3900);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f9), 0x0);
        EXPECT(gbc.readMem(0x86fa), 0x39);
        EXPECT(gbc.readMem(0x9f92), 0xd9);
        // D9 0395
        gbc.setState(0x4af4, 0xd4f5, 0x1010, 0x6c7c, 0xb053, 0x8529, 0x0, 0x1);
        gbc.writeMem(0x4af4, { 0xd9 });
        gbc.writeMem(0xd4f5, { 0xe8, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd4f7);
        EXPECT(gbc.pc(), 0x91e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f5), 0xe8);
        EXPECT(gbc.readMem(0xd4f6), 0x91);
        // D9 0396
        gbc.setState(0x24b3, 0x7687, 0xb320, 0x712d, 0x7251, 0xe1d8, 0x1, 0x1);
        gbc.writeMem(0x24b3, { 0xd9 });
        gbc.writeMem(0x7687, { 0x65, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7689);
        EXPECT(gbc.pc(), 0xa165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 0397
        gbc.setState(0xe935, 0x336e, 0x59d0, 0xd500, 0x91d, 0x7d9f, 0x0, 0x1);
        gbc.writeMem(0x336e, { 0x68, 0x20 });
        gbc.writeMem(0xe935, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3370);
        EXPECT(gbc.pc(), 0x2068);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe935), 0xd9);
        // D9 0398
        gbc.setState(0x377, 0xd3b0, 0x7ce0, 0xd944, 0x87ca, 0x8e51, 0x1, 0x0);
        gbc.writeMem(0x377, { 0xd9 });
        gbc.writeMem(0xd3b0, { 0x26, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd3b2);
        EXPECT(gbc.pc(), 0x9026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3b0), 0x26);
        EXPECT(gbc.readMem(0xd3b1), 0x90);
        // D9 0399
        gbc.setState(0xbeed, 0xfefb, 0x1770, 0x728d, 0x29a0, 0x13d5, 0x0, 0x0);
        gbc.writeMem(0xbeed, { 0xd9 });
        gbc.writeMem(0xfefb, { 0xe8, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfefd);
        EXPECT(gbc.pc(), 0x73e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeed), 0xd9);
        EXPECT(gbc.readMem(0xfefb), 0xe8);
        EXPECT(gbc.readMem(0xfefc), 0x73);
        // D9 039A
        gbc.setState(0x6081, 0x793f, 0x61c0, 0x9141, 0xa8f1, 0xef7f, 0x1, 0x1);
        gbc.writeMem(0x6081, { 0xd9 });
        gbc.writeMem(0x793f, { 0xae, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7941);
        EXPECT(gbc.pc(), 0xe6ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 039B
        gbc.setState(0x41cb, 0x2d91, 0x9c00, 0xe5c0, 0x28b0, 0x2868, 0x0, 0x0);
        gbc.writeMem(0x2d91, { 0x53, 0xf4 });
        gbc.writeMem(0x41cb, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2d93);
        EXPECT(gbc.pc(), 0xf453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 039C
        gbc.setState(0x80d6, 0xb0a, 0xc1a0, 0x2282, 0xd4bb, 0xda60, 0x1, 0x0);
        gbc.writeMem(0xb0a, { 0xf, 0xc5 });
        gbc.writeMem(0x80d6, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb0c);
        EXPECT(gbc.pc(), 0xc50f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d6), 0xd9);
        // D9 039E
        gbc.setState(0x83c9, 0x4c6e, 0x29c0, 0xe9e, 0xd5a2, 0x13f9, 0x0, 0x0);
        gbc.writeMem(0x4c6e, { 0x6e, 0x34 });
        gbc.writeMem(0x83c9, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4c70);
        EXPECT(gbc.pc(), 0x346e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83c9), 0xd9);
        // D9 039F
        gbc.setState(0xb286, 0x9fac, 0xe830, 0xc4c4, 0xefec, 0xdc94, 0x1, 0x0);
        gbc.writeMem(0x9fac, { 0x48, 0xd2 });
        gbc.writeMem(0xb286, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9fae);
        EXPECT(gbc.pc(), 0xd248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fac), 0x48);
        EXPECT(gbc.readMem(0x9fad), 0xd2);
        EXPECT(gbc.readMem(0xb286), 0xd9);
        // D9 03A0
        gbc.setState(0xe415, 0x95fa, 0xb590, 0x95b3, 0xaf0, 0x9538, 0x1, 0x1);
        gbc.writeMem(0x95fa, { 0xf5, 0xf });
        gbc.writeMem(0xe415, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x95fc);
        EXPECT(gbc.pc(), 0xff5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95fa), 0xf5);
        EXPECT(gbc.readMem(0x95fb), 0xf);
        EXPECT(gbc.readMem(0xe415), 0xd9);
        // D9 03A1
        gbc.setState(0xc4e6, 0xc71d, 0xb5f0, 0x2c81, 0x6fc4, 0x9393, 0x0, 0x0);
        gbc.writeMem(0xc4e6, { 0xd9 });
        gbc.writeMem(0xc71d, { 0x54, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc71f);
        EXPECT(gbc.pc(), 0x5c54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4e6), 0xd9);
        EXPECT(gbc.readMem(0xc71d), 0x54);
        EXPECT(gbc.readMem(0xc71e), 0x5c);
        // D9 03A2
        gbc.setState(0x3042, 0x6afb, 0x4410, 0x16c3, 0xc17e, 0x6fd7, 0x1, 0x0);
        gbc.writeMem(0x3042, { 0xd9 });
        gbc.writeMem(0x6afb, { 0xfd, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6afd);
        EXPECT(gbc.pc(), 0x27fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 03A3
        gbc.setState(0xd84b, 0x71de, 0x59d0, 0x753e, 0x7122, 0x49cb, 0x0, 0x1);
        gbc.writeMem(0x71de, { 0x92, 0x7d });
        gbc.writeMem(0xd84b, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x71e0);
        EXPECT(gbc.pc(), 0x7d92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd84b), 0xd9);
        // D9 03A4
        gbc.setState(0xaf3b, 0xd72, 0x2110, 0x5ed6, 0xc601, 0x35e7, 0x1, 0x0);
        gbc.writeMem(0xd72, { 0xde, 0xa8 });
        gbc.writeMem(0xaf3b, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd74);
        EXPECT(gbc.pc(), 0xa8de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf3b), 0xd9);
        // D9 03A5
        gbc.setState(0x1312, 0x2d94, 0x9ed0, 0x9156, 0xd660, 0xb44a, 0x0, 0x0);
        gbc.writeMem(0x1312, { 0xd9 });
        gbc.writeMem(0x2d94, { 0xbd, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2d96);
        EXPECT(gbc.pc(), 0x6fbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 03A6
        gbc.setState(0x8267, 0x67d5, 0x7290, 0xe190, 0x7732, 0xad78, 0x0, 0x1);
        gbc.writeMem(0x67d5, { 0xf6, 0x65 });
        gbc.writeMem(0x8267, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x67d7);
        EXPECT(gbc.pc(), 0x65f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8267), 0xd9);
        // D9 03A8
        gbc.setState(0x6c88, 0xfc87, 0xdf40, 0x19b2, 0xb170, 0xff7f, 0x0, 0x1);
        gbc.writeMem(0x6c88, { 0xd9 });
        gbc.writeMem(0xfc87, { 0x2c, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xfc89);
        EXPECT(gbc.pc(), 0x7d2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc87), 0x2c);
        EXPECT(gbc.readMem(0xfc88), 0x7d);
        // D9 03A9
        gbc.setState(0xbdf8, 0x756c, 0xbed0, 0x5916, 0x13ed, 0xae32, 0x1, 0x1);
        gbc.writeMem(0x756c, { 0xac, 0xfe });
        gbc.writeMem(0xbdf8, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x756e);
        EXPECT(gbc.pc(), 0xfeac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf8), 0xd9);
        // D9 03AA
        gbc.setState(0x7a1c, 0x499a, 0x6e60, 0x3f4c, 0x693b, 0x4ec1, 0x1, 0x0);
        gbc.writeMem(0x499a, { 0xa0, 0xf4 });
        gbc.writeMem(0x7a1c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x499c);
        EXPECT(gbc.pc(), 0xf4a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 03AB
        gbc.setState(0xdc9f, 0x33ca, 0x8b00, 0x425e, 0xf264, 0x3dfb, 0x0, 0x1);
        gbc.writeMem(0x33ca, { 0xa4, 0xe });
        gbc.writeMem(0xdc9f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x33cc);
        EXPECT(gbc.pc(), 0xea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc9f), 0xd9);
        // D9 03AC
        gbc.setState(0xc7de, 0x7a78, 0x22a0, 0xad0c, 0x649c, 0x7159, 0x0, 0x1);
        gbc.writeMem(0x7a78, { 0xee, 0xe0 });
        gbc.writeMem(0xc7de, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7a7a);
        EXPECT(gbc.pc(), 0xe0ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7de), 0xd9);
        // D9 03AD
        gbc.setState(0xda34, 0x336a, 0xd60, 0x8cc, 0x33b3, 0xe807, 0x1, 0x0);
        gbc.writeMem(0x336a, { 0xc8, 0x45 });
        gbc.writeMem(0xda34, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x336c);
        EXPECT(gbc.pc(), 0x45c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda34), 0xd9);
        // D9 03AE
        gbc.setState(0x14d1, 0x809c, 0x7100, 0xc41f, 0xbb78, 0x234d, 0x1, 0x0);
        gbc.writeMem(0x14d1, { 0xd9 });
        gbc.writeMem(0x809c, { 0x61, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x809e);
        EXPECT(gbc.pc(), 0x5f61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x809c), 0x61);
        EXPECT(gbc.readMem(0x809d), 0x5f);
        // D9 03AF
        gbc.setState(0x7778, 0xeeb, 0x36b0, 0x4ce7, 0xfca8, 0x1f9b, 0x0, 0x1);
        gbc.writeMem(0xeeb, { 0x7a, 0x94 });
        gbc.writeMem(0x7778, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xeed);
        EXPECT(gbc.pc(), 0x947a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 03B0
        gbc.setState(0x6eff, 0x7f65, 0xe7a0, 0x5ecf, 0x7cfa, 0xb7ac, 0x1, 0x1);
        gbc.writeMem(0x6eff, { 0xd9 });
        gbc.writeMem(0x7f65, { 0xb8, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7f67);
        EXPECT(gbc.pc(), 0xe4b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 03B2
        gbc.setState(0x9ed8, 0xbd15, 0x28b0, 0x5f89, 0x8e5d, 0xbb6c, 0x0, 0x1);
        gbc.writeMem(0x9ed8, { 0xd9 });
        gbc.writeMem(0xbd15, { 0x37, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xbd17);
        EXPECT(gbc.pc(), 0x1637);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ed8), 0xd9);
        EXPECT(gbc.readMem(0xbd15), 0x37);
        EXPECT(gbc.readMem(0xbd16), 0x16);
        // D9 03B3
        gbc.setState(0x553e, 0xc30c, 0x9800, 0x9d56, 0xfdc6, 0x7886, 0x0, 0x1);
        gbc.writeMem(0x553e, { 0xd9 });
        gbc.writeMem(0xc30c, { 0x48, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc30e);
        EXPECT(gbc.pc(), 0x6b48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc30c), 0x48);
        EXPECT(gbc.readMem(0xc30d), 0x6b);
        // D9 03B4
        gbc.setState(0xd0e8, 0x3b11, 0xc3e0, 0x3083, 0x76a9, 0x392f, 0x1, 0x1);
        gbc.writeMem(0x3b11, { 0xed, 0x94 });
        gbc.writeMem(0xd0e8, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3b13);
        EXPECT(gbc.pc(), 0x94ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0e8), 0xd9);
        // D9 03B5
        gbc.setState(0xabf6, 0x5de6, 0xcfb0, 0x95eb, 0x87e2, 0xc02d, 0x1, 0x0);
        gbc.writeMem(0x5de6, { 0x53, 0x4f });
        gbc.writeMem(0xabf6, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5de8);
        EXPECT(gbc.pc(), 0x4f53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabf6), 0xd9);
        // D9 03B6
        gbc.setState(0x5dba, 0xdd8a, 0x2f20, 0xb25d, 0xd02c, 0x321, 0x1, 0x1);
        gbc.writeMem(0x5dba, { 0xd9 });
        gbc.writeMem(0xdd8a, { 0xb3, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xdd8c);
        EXPECT(gbc.pc(), 0x7ab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd8a), 0xb3);
        EXPECT(gbc.readMem(0xdd8b), 0x7a);
        // D9 03B7
        gbc.setState(0x88bd, 0x31f1, 0x1d20, 0x2f95, 0xda01, 0x2dc8, 0x1, 0x0);
        gbc.writeMem(0x31f1, { 0x37, 0x73 });
        gbc.writeMem(0x88bd, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x31f3);
        EXPECT(gbc.pc(), 0x7337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88bd), 0xd9);
        // D9 03B8
        gbc.setState(0xab76, 0xe698, 0x7340, 0x9c51, 0xfe96, 0x50d1, 0x1, 0x1);
        gbc.writeMem(0xab76, { 0xd9 });
        gbc.writeMem(0xe698, { 0xf6, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe69a);
        EXPECT(gbc.pc(), 0xabf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab76), 0xd9);
        EXPECT(gbc.readMem(0xe698), 0xf6);
        EXPECT(gbc.readMem(0xe699), 0xab);
        // D9 03B9
        gbc.setState(0xba97, 0x7a62, 0x36b0, 0x9f18, 0x973f, 0xbcd3, 0x0, 0x1);
        gbc.writeMem(0x7a62, { 0x8e, 0x68 });
        gbc.writeMem(0xba97, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7a64);
        EXPECT(gbc.pc(), 0x688e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba97), 0xd9);
        // D9 03BA
        gbc.setState(0xd59f, 0xf13d, 0x2aa0, 0x8e5b, 0x1cd0, 0xc581, 0x0, 0x1);
        gbc.writeMem(0xd59f, { 0xd9 });
        gbc.writeMem(0xf13d, { 0x94, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf13f);
        EXPECT(gbc.pc(), 0x5394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd59f), 0xd9);
        EXPECT(gbc.readMem(0xf13d), 0x94);
        EXPECT(gbc.readMem(0xf13e), 0x53);
        // D9 03BB
        gbc.setState(0x1e11, 0x3c99, 0x34a0, 0xab36, 0xc7e1, 0x1955, 0x0, 0x1);
        gbc.writeMem(0x1e11, { 0xd9 });
        gbc.writeMem(0x3c99, { 0x81, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x3c9b);
        EXPECT(gbc.pc(), 0x7881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 03BC
        gbc.setState(0xdc5c, 0xc9d7, 0xafb0, 0xe56a, 0xfb2, 0x6def, 0x1, 0x0);
        gbc.writeMem(0xc9d7, { 0x1d, 0x4b });
        gbc.writeMem(0xdc5c, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc9d9);
        EXPECT(gbc.pc(), 0x4b1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9d7), 0x1d);
        EXPECT(gbc.readMem(0xc9d8), 0x4b);
        EXPECT(gbc.readMem(0xdc5c), 0xd9);
        // D9 03BD
        gbc.setState(0xbcc7, 0xe0ca, 0xf370, 0xc17a, 0xddac, 0xbb8a, 0x1, 0x1);
        gbc.writeMem(0xbcc7, { 0xd9 });
        gbc.writeMem(0xe0ca, { 0x35, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe0cc);
        EXPECT(gbc.pc(), 0x2035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcc7), 0xd9);
        EXPECT(gbc.readMem(0xe0ca), 0x35);
        EXPECT(gbc.readMem(0xe0cb), 0x20);
        // D9 03BE
        gbc.setState(0xe3d4, 0x3d07, 0xe530, 0x2dd9, 0x3fc6, 0xa67, 0x0, 0x0);
        gbc.writeMem(0x3d07, { 0x18, 0xfa });
        gbc.writeMem(0xe3d4, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3d09);
        EXPECT(gbc.pc(), 0xfa18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3d4), 0xd9);
        // D9 03BF
        gbc.setState(0x8f55, 0xac43, 0x5b50, 0x437a, 0x7e04, 0x1f18, 0x0, 0x1);
        gbc.writeMem(0x8f55, { 0xd9 });
        gbc.writeMem(0xac43, { 0xaa, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xac45);
        EXPECT(gbc.pc(), 0x62aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f55), 0xd9);
        EXPECT(gbc.readMem(0xac43), 0xaa);
        EXPECT(gbc.readMem(0xac44), 0x62);
        // D9 03C0
        gbc.setState(0x5995, 0xf007, 0x61a0, 0xa324, 0x4761, 0xe3bd, 0x0, 0x1);
        gbc.writeMem(0x5995, { 0xd9 });
        gbc.writeMem(0xf007, { 0x6b, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf009);
        EXPECT(gbc.pc(), 0x2d6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf007), 0x6b);
        EXPECT(gbc.readMem(0xf008), 0x2d);
        // D9 03C1
        gbc.setState(0xb2b3, 0x40fa, 0xd1c0, 0x9161, 0x5924, 0x4ae2, 0x0, 0x0);
        gbc.writeMem(0x40fa, { 0xb9, 0xd4 });
        gbc.writeMem(0xb2b3, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x40fc);
        EXPECT(gbc.pc(), 0xd4b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b3), 0xd9);
        // D9 03C2
        gbc.setState(0xd7e7, 0xb4a6, 0xf630, 0x12a7, 0x6d40, 0x414d, 0x1, 0x1);
        gbc.writeMem(0xb4a6, { 0xe0, 0x79 });
        gbc.writeMem(0xd7e7, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb4a8);
        EXPECT(gbc.pc(), 0x79e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4a6), 0xe0);
        EXPECT(gbc.readMem(0xb4a7), 0x79);
        EXPECT(gbc.readMem(0xd7e7), 0xd9);
        // D9 03C3
        gbc.setState(0x98f4, 0x96e9, 0x1fd0, 0x122f, 0xf34b, 0xfbc7, 0x1, 0x1);
        gbc.writeMem(0x96e9, { 0x4d, 0x27 });
        gbc.writeMem(0x98f4, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x96eb);
        EXPECT(gbc.pc(), 0x274d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96e9), 0x4d);
        EXPECT(gbc.readMem(0x96ea), 0x27);
        EXPECT(gbc.readMem(0x98f4), 0xd9);
        // D9 03C4
        gbc.setState(0x215f, 0x4507, 0x2b20, 0xfd8f, 0x74df, 0xe9f6, 0x0, 0x0);
        gbc.writeMem(0x215f, { 0xd9 });
        gbc.writeMem(0x4507, { 0xd8, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4509);
        EXPECT(gbc.pc(), 0x9cd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 03C6
        gbc.setState(0x87e5, 0xd621, 0xed30, 0xa1d8, 0x6d4d, 0x5876, 0x0, 0x0);
        gbc.writeMem(0x87e5, { 0xd9 });
        gbc.writeMem(0xd621, { 0x99, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd623);
        EXPECT(gbc.pc(), 0xe899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e5), 0xd9);
        EXPECT(gbc.readMem(0xd621), 0x99);
        EXPECT(gbc.readMem(0xd622), 0xe8);
        // D9 03C7
        gbc.setState(0x364, 0x45f4, 0x81e0, 0xa496, 0xaba5, 0xd5a, 0x0, 0x0);
        gbc.writeMem(0x364, { 0xd9 });
        gbc.writeMem(0x45f4, { 0x3c, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x45f6);
        EXPECT(gbc.pc(), 0x5b3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 03C8
        gbc.setState(0xe879, 0xa5c2, 0xe590, 0x273e, 0xefed, 0x919f, 0x1, 0x0);
        gbc.writeMem(0xa5c2, { 0x79, 0x3d });
        gbc.writeMem(0xe879, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa5c4);
        EXPECT(gbc.pc(), 0x3d79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5c2), 0x79);
        EXPECT(gbc.readMem(0xa5c3), 0x3d);
        EXPECT(gbc.readMem(0xe879), 0xd9);
        // D9 03C9
        gbc.setState(0x153f, 0x8697, 0x39d0, 0xa520, 0x5c3e, 0xe6ae, 0x1, 0x0);
        gbc.writeMem(0x153f, { 0xd9 });
        gbc.writeMem(0x8697, { 0x41, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8699);
        EXPECT(gbc.pc(), 0xf041);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8697), 0x41);
        EXPECT(gbc.readMem(0x8698), 0xf0);
        // D9 03CA
        gbc.setState(0x576, 0xdff7, 0x3400, 0x289f, 0xb361, 0x2ae2, 0x0, 0x1);
        gbc.writeMem(0x576, { 0xd9 });
        gbc.writeMem(0xdff7, { 0x21, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xdff9);
        EXPECT(gbc.pc(), 0x9a21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdff7), 0x21);
        EXPECT(gbc.readMem(0xdff8), 0x9a);
        // D9 03CB
        gbc.setState(0xc894, 0xf93f, 0xbdb0, 0xc2fd, 0xb0b7, 0xa9b8, 0x0, 0x0);
        gbc.writeMem(0xc894, { 0xd9 });
        gbc.writeMem(0xf93f, { 0x25, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf941);
        EXPECT(gbc.pc(), 0x6a25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc894), 0xd9);
        EXPECT(gbc.readMem(0xf93f), 0x25);
        EXPECT(gbc.readMem(0xf940), 0x6a);
        // D9 03CC
        gbc.setState(0x1ce7, 0x339d, 0x5a40, 0x1e32, 0xc0c6, 0x1015, 0x1, 0x0);
        gbc.writeMem(0x1ce7, { 0xd9 });
        gbc.writeMem(0x339d, { 0xa4, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x339f);
        EXPECT(gbc.pc(), 0x2aa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 03CD
        gbc.setState(0x5cfa, 0x9da6, 0xfab0, 0x1f44, 0x49e5, 0x1d5a, 0x1, 0x0);
        gbc.writeMem(0x5cfa, { 0xd9 });
        gbc.writeMem(0x9da6, { 0x3a, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9da8);
        EXPECT(gbc.pc(), 0x433a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9da6), 0x3a);
        EXPECT(gbc.readMem(0x9da7), 0x43);
        // D9 03CE
        gbc.setState(0xbe13, 0x8b77, 0x7900, 0x5715, 0x9a5a, 0xc1f6, 0x1, 0x0);
        gbc.writeMem(0x8b77, { 0xd9, 0x57 });
        gbc.writeMem(0xbe13, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8b79);
        EXPECT(gbc.pc(), 0x57d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b77), 0xd9);
        EXPECT(gbc.readMem(0x8b78), 0x57);
        EXPECT(gbc.readMem(0xbe13), 0xd9);
        // D9 03CF
        gbc.setState(0x2748, 0xc805, 0xc660, 0x4872, 0xf7e4, 0x483e, 0x0, 0x0);
        gbc.writeMem(0x2748, { 0xd9 });
        gbc.writeMem(0xc805, { 0x40, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc807);
        EXPECT(gbc.pc(), 0xa440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc805), 0x40);
        EXPECT(gbc.readMem(0xc806), 0xa4);
        // D9 03D0
        gbc.setState(0x6acd, 0xf560, 0x2490, 0xe3cc, 0xab2b, 0xb293, 0x1, 0x0);
        gbc.writeMem(0x6acd, { 0xd9 });
        gbc.writeMem(0xf560, { 0x22, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf562);
        EXPECT(gbc.pc(), 0x1c22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf560), 0x22);
        EXPECT(gbc.readMem(0xf561), 0x1c);
        // D9 03D2
        gbc.setState(0x33e, 0xa03, 0xf5e0, 0xa7c2, 0xf9b6, 0x270e, 0x0, 0x1);
        gbc.writeMem(0x33e, { 0xd9 });
        gbc.writeMem(0xa03, { 0x6c, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa05);
        EXPECT(gbc.pc(), 0x756c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D9 03D3
        gbc.setState(0x8a28, 0x5cce, 0x2ef0, 0xdfdb, 0x3416, 0xf65d, 0x0, 0x0);
        gbc.writeMem(0x5cce, { 0xdc, 0x6e });
        gbc.writeMem(0x8a28, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5cd0);
        EXPECT(gbc.pc(), 0x6edc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a28), 0xd9);
        // D9 03D4
        gbc.setState(0x5bb2, 0x4044, 0xff40, 0x9e73, 0x2d6a, 0xbb3f, 0x1, 0x1);
        gbc.writeMem(0x4044, { 0xc7, 0xde });
        gbc.writeMem(0x5bb2, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4046);
        EXPECT(gbc.pc(), 0xdec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D9 03D5
        gbc.setState(0x128, 0x9d9b, 0x4570, 0x71ec, 0xebe6, 0x63d, 0x0, 0x0);
        gbc.writeMem(0x128, { 0xd9 });
        gbc.writeMem(0x9d9b, { 0xa7, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9d9d);
        EXPECT(gbc.pc(), 0xafa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d9b), 0xa7);
        EXPECT(gbc.readMem(0x9d9c), 0xaf);
        // D9 03D6
        gbc.setState(0x8259, 0xeb88, 0xdb40, 0xac79, 0x6b2f, 0xbeeb, 0x1, 0x1);
        gbc.writeMem(0x8259, { 0xd9 });
        gbc.writeMem(0xeb88, { 0xdd, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xeb8a);
        EXPECT(gbc.pc(), 0xf2dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8259), 0xd9);
        EXPECT(gbc.readMem(0xeb88), 0xdd);
        EXPECT(gbc.readMem(0xeb89), 0xf2);
        // D9 03D7
        gbc.setState(0x860a, 0xe406, 0xc820, 0x69e4, 0xcae7, 0x3cc0, 0x0, 0x0);
        gbc.writeMem(0x860a, { 0xd9 });
        gbc.writeMem(0xe406, { 0xf8, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe408);
        EXPECT(gbc.pc(), 0x9af8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x860a), 0xd9);
        EXPECT(gbc.readMem(0xe406), 0xf8);
        EXPECT(gbc.readMem(0xe407), 0x9a);
        // D9 03D8
        gbc.setState(0x5018, 0xa815, 0x6980, 0x85e4, 0xc4c2, 0x2032, 0x0, 0x0);
        gbc.writeMem(0x5018, { 0xd9 });
        gbc.writeMem(0xa815, { 0xf2, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa817);
        EXPECT(gbc.pc(), 0x5ef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa815), 0xf2);
        EXPECT(gbc.readMem(0xa816), 0x5e);
        // D9 03D9
        gbc.setState(0xcc93, 0x1ac, 0xcff0, 0x4359, 0x7eac, 0x2710, 0x1, 0x1);
        gbc.writeMem(0x1ac, { 0xea, 0x2e });
        gbc.writeMem(0xcc93, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1ae);
        EXPECT(gbc.pc(), 0x2eea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc93), 0xd9);
        // D9 03DA
        gbc.setState(0x8dda, 0xa19e, 0xb790, 0xc4ae, 0xf0dd, 0x733c, 0x1, 0x0);
        gbc.writeMem(0x8dda, { 0xd9 });
        gbc.writeMem(0xa19e, { 0xea, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa1a0);
        EXPECT(gbc.pc(), 0xa3ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dda), 0xd9);
        EXPECT(gbc.readMem(0xa19e), 0xea);
        EXPECT(gbc.readMem(0xa19f), 0xa3);
        // D9 03DB
        gbc.setState(0x875a, 0x310e, 0xb220, 0x130d, 0xe57e, 0xa1ca, 0x1, 0x0);
        gbc.writeMem(0x310e, { 0x31, 0x52 });
        gbc.writeMem(0x875a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3110);
        EXPECT(gbc.pc(), 0x5231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x875a), 0xd9);
        // D9 03DC
        gbc.setState(0x5827, 0x3797, 0x5610, 0x285b, 0x21ff, 0xfa4, 0x1, 0x1);
        gbc.writeMem(0x3797, { 0x1c, 0xea });
        gbc.writeMem(0x5827, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3799);
        EXPECT(gbc.pc(), 0xea1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D9 03DD
        gbc.setState(0x53f7, 0x52e8, 0xb70, 0x3e7a, 0x3031, 0xbada, 0x1, 0x0);
        gbc.writeMem(0x52e8, { 0xf3, 0x28 });
        gbc.writeMem(0x53f7, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x52ea);
        EXPECT(gbc.pc(), 0x28f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D9 03DF
        gbc.setState(0xa024, 0xdfe9, 0x3300, 0xa128, 0x8308, 0xe6db, 0x1, 0x1);
        gbc.writeMem(0xa024, { 0xd9 });
        gbc.writeMem(0xdfe9, { 0x1f, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xdfeb);
        EXPECT(gbc.pc(), 0x371f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa024), 0xd9);
        EXPECT(gbc.readMem(0xdfe9), 0x1f);
        EXPECT(gbc.readMem(0xdfea), 0x37);
        // D9 03E0
        gbc.setState(0xd7f1, 0x9578, 0xce10, 0xa23a, 0xf157, 0xdfaa, 0x1, 0x0);
        gbc.writeMem(0x9578, { 0xc4, 0xa });
        gbc.writeMem(0xd7f1, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x957a);
        EXPECT(gbc.pc(), 0xac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9578), 0xc4);
        EXPECT(gbc.readMem(0x9579), 0xa);
        EXPECT(gbc.readMem(0xd7f1), 0xd9);
        // D9 03E1
        gbc.setState(0xc2db, 0x7c3d, 0xf4b0, 0xf8b9, 0xc14f, 0x1867, 0x0, 0x0);
        gbc.writeMem(0x7c3d, { 0xa7, 0xa6 });
        gbc.writeMem(0xc2db, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7c3f);
        EXPECT(gbc.pc(), 0xa6a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2db), 0xd9);
        // D9 03E2
        gbc.setState(0x4ecd, 0xc875, 0x7df0, 0xee05, 0x29c6, 0x3440, 0x1, 0x0);
        gbc.writeMem(0x4ecd, { 0xd9 });
        gbc.writeMem(0xc875, { 0x73, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc877);
        EXPECT(gbc.pc(), 0x9273);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc875), 0x73);
        EXPECT(gbc.readMem(0xc876), 0x92);
        // D9 03E3
        gbc.setState(0x4376, 0x9aaf, 0xcd90, 0x690, 0x32ed, 0xc8f4, 0x1, 0x0);
        gbc.writeMem(0x4376, { 0xd9 });
        gbc.writeMem(0x9aaf, { 0x5f, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9ab1);
        EXPECT(gbc.pc(), 0x2d5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aaf), 0x5f);
        EXPECT(gbc.readMem(0x9ab0), 0x2d);
        // D9 03E4
        gbc.setState(0x1bb3, 0xb3ed, 0x5310, 0xafd2, 0x840, 0xbacc, 0x1, 0x1);
        gbc.writeMem(0x1bb3, { 0xd9 });
        gbc.writeMem(0xb3ed, { 0x44, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb3ef);
        EXPECT(gbc.pc(), 0x2d44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3ed), 0x44);
        EXPECT(gbc.readMem(0xb3ee), 0x2d);
        // D9 03E5
        gbc.setState(0xb5e6, 0x7c4, 0xfdc0, 0xf3f2, 0xe4d5, 0xaae2, 0x0, 0x0);
        gbc.writeMem(0x7c4, { 0x91, 0xd9 });
        gbc.writeMem(0xb5e6, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7c6);
        EXPECT(gbc.pc(), 0xd991);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5e6), 0xd9);
        // D9 03E6
        gbc.setState(0x90be, 0xe1d, 0x9d40, 0xc0ba, 0xd9e2, 0xcb34, 0x1, 0x0);
        gbc.writeMem(0xe1d, { 0xa5, 0x9d });
        gbc.writeMem(0x90be, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe1f);
        EXPECT(gbc.pc(), 0x9da5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90be), 0xd9);
        // D9 03E7
        gbc.setState(0xd03d, 0xd931, 0x64f0, 0xb475, 0x4045, 0xa317, 0x0, 0x0);
        gbc.writeMem(0xd03d, { 0xd9 });
        gbc.writeMem(0xd931, { 0xc9, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd933);
        EXPECT(gbc.pc(), 0x4bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd03d), 0xd9);
        EXPECT(gbc.readMem(0xd931), 0xc9);
        EXPECT(gbc.readMem(0xd932), 0x4b);
    }
