#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_79)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_79) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 79 0000
        gbc.setState(0xafc3, 0x3cb, 0xb6b0, 0x6705, 0x8fc9, 0xd6bd, 0x0, 0x0);
        gbc.writeMem(0xafc3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3cb);
        EXPECT(gbc.pc(), 0xafc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc3), 0x79);
        // 79 0001
        gbc.setState(0x45bb, 0x15f, 0xf590, 0x4443, 0x4712, 0x724b, 0x0, 0x1);
        gbc.writeMem(0x45bb, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x15f);
        EXPECT(gbc.pc(), 0x45bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0002
        gbc.setState(0xa7c5, 0xcf69, 0xd380, 0xe44b, 0x8851, 0x24a7, 0x0, 0x0);
        gbc.writeMem(0xa7c5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xcf69);
        EXPECT(gbc.pc(), 0xa7c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7c5), 0x79);
        // 79 0003
        gbc.setState(0xd42f, 0xce7a, 0x1090, 0x4125, 0x29f8, 0xa161, 0x0, 0x1);
        gbc.writeMem(0xd42f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xce7a);
        EXPECT(gbc.pc(), 0xd430);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd42f), 0x79);
        // 79 0004
        gbc.setState(0x8acc, 0x3919, 0x1970, 0x1c28, 0x1877, 0x7c5b, 0x0, 0x0);
        gbc.writeMem(0x8acc, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3919);
        EXPECT(gbc.pc(), 0x8acd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8acc), 0x79);
        // 79 0005
        gbc.setState(0xa82d, 0xe4b6, 0xb0, 0xff29, 0xf143, 0xc113, 0x0, 0x1);
        gbc.writeMem(0xa82d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe4b6);
        EXPECT(gbc.pc(), 0xa82e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa82d), 0x79);
        // 79 0006
        gbc.setState(0x5293, 0xc3b1, 0xa560, 0xa0c, 0xa889, 0x358f, 0x1, 0x0);
        gbc.writeMem(0x5293, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc3b1);
        EXPECT(gbc.pc(), 0x5294);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0007
        gbc.setState(0x4a08, 0x42b4, 0xb7f0, 0xe357, 0xc9ce, 0x75f8, 0x1, 0x1);
        gbc.writeMem(0x4a08, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x42b4);
        EXPECT(gbc.pc(), 0x4a09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0008
        gbc.setState(0x14a6, 0xe0de, 0x6c90, 0x8915, 0xa277, 0xd3b2, 0x0, 0x1);
        gbc.writeMem(0x14a6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe0de);
        EXPECT(gbc.pc(), 0x14a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0009
        gbc.setState(0x9d88, 0xae07, 0x95a0, 0xbdbc, 0x9c1d, 0xd1cf, 0x1, 0x0);
        gbc.writeMem(0x9d88, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xae07);
        EXPECT(gbc.pc(), 0x9d89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d88), 0x79);
        // 79 000A
        gbc.setState(0x90cb, 0xa3c, 0xa30, 0x7c80, 0x41ba, 0x7f45, 0x0, 0x1);
        gbc.writeMem(0x90cb, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa3c);
        EXPECT(gbc.pc(), 0x90cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90cb), 0x79);
        // 79 000B
        gbc.setState(0xbed2, 0xd445, 0xa210, 0xb409, 0xc944, 0xc61f, 0x0, 0x0);
        gbc.writeMem(0xbed2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd445);
        EXPECT(gbc.pc(), 0xbed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbed2), 0x79);
        // 79 000C
        gbc.setState(0xbe1e, 0xf38a, 0xfa10, 0xc7e7, 0x8ec8, 0xd10e, 0x1, 0x0);
        gbc.writeMem(0xbe1e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf38a);
        EXPECT(gbc.pc(), 0xbe1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe1e), 0x79);
        // 79 000E
        gbc.setState(0xd738, 0x12c, 0x4590, 0xdff3, 0xadc2, 0xf61f, 0x0, 0x0);
        gbc.writeMem(0xd738, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x12c);
        EXPECT(gbc.pc(), 0xd739);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd738), 0x79);
        // 79 000F
        gbc.setState(0xde77, 0x4318, 0xa7c0, 0xcb94, 0x5120, 0x1a5a, 0x1, 0x1);
        gbc.writeMem(0xde77, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4318);
        EXPECT(gbc.pc(), 0xde78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde77), 0x79);
        // 79 0010
        gbc.setState(0xd7bf, 0x8394, 0x4260, 0xfbbc, 0x87eb, 0x2c37, 0x0, 0x0);
        gbc.writeMem(0xd7bf, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8394);
        EXPECT(gbc.pc(), 0xd7c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7bf), 0x79);
        // 79 0011
        gbc.setState(0x9706, 0xb265, 0x3f30, 0xe8ac, 0x3d2c, 0xe175, 0x0, 0x0);
        gbc.writeMem(0x9706, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb265);
        EXPECT(gbc.pc(), 0x9707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9706), 0x79);
        // 79 0012
        gbc.setState(0x1315, 0xf2f1, 0x2020, 0x99aa, 0xcde1, 0x878d, 0x1, 0x1);
        gbc.writeMem(0x1315, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf2f1);
        EXPECT(gbc.pc(), 0x1316);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0013
        gbc.setState(0xad7f, 0x526c, 0x76f0, 0x72c7, 0x6928, 0xf2d2, 0x0, 0x1);
        gbc.writeMem(0xad7f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x526c);
        EXPECT(gbc.pc(), 0xad80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad7f), 0x79);
        // 79 0014
        gbc.setState(0xa6dc, 0xb8d0, 0x89a0, 0x4b92, 0xa278, 0x2895, 0x0, 0x1);
        gbc.writeMem(0xa6dc, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb8d0);
        EXPECT(gbc.pc(), 0xa6dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6dc), 0x79);
        // 79 0015
        gbc.setState(0xac07, 0x269e, 0xde60, 0x7bab, 0x190d, 0x953d, 0x1, 0x0);
        gbc.writeMem(0xac07, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x269e);
        EXPECT(gbc.pc(), 0xac08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac07), 0x79);
        // 79 0016
        gbc.setState(0x86c7, 0x6140, 0xf6a0, 0x5dc5, 0x1927, 0xebcd, 0x1, 0x0);
        gbc.writeMem(0x86c7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6140);
        EXPECT(gbc.pc(), 0x86c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86c7), 0x79);
        // 79 0017
        gbc.setState(0x1323, 0x3126, 0x550, 0xdf47, 0xbaff, 0x1186, 0x1, 0x1);
        gbc.writeMem(0x1323, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3126);
        EXPECT(gbc.pc(), 0x1324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0018
        gbc.setState(0xe280, 0x7933, 0x7bb0, 0xa0e1, 0x60c6, 0x1ba6, 0x1, 0x0);
        gbc.writeMem(0xe280, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x7933);
        EXPECT(gbc.pc(), 0xe281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe280), 0x79);
        // 79 001A
        gbc.setState(0x3be0, 0xf454, 0xe5b0, 0x6132, 0xe7fa, 0xd9c, 0x1, 0x1);
        gbc.writeMem(0x3be0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf454);
        EXPECT(gbc.pc(), 0x3be1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 001B
        gbc.setState(0xb6e8, 0xc687, 0x980, 0x26c4, 0x26ef, 0xa1c8, 0x0, 0x0);
        gbc.writeMem(0xb6e8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc687);
        EXPECT(gbc.pc(), 0xb6e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6e8), 0x79);
        // 79 001C
        gbc.setState(0x3a40, 0x4bda, 0x1ec0, 0xd6cf, 0xd94a, 0xbfa7, 0x0, 0x0);
        gbc.writeMem(0x3a40, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4bda);
        EXPECT(gbc.pc(), 0x3a41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 001D
        gbc.setState(0xadd, 0xadbc, 0x9c60, 0x2136, 0x1846, 0xc658, 0x1, 0x1);
        gbc.writeMem(0xadd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xadbc);
        EXPECT(gbc.pc(), 0xade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 001E
        gbc.setState(0xbb4b, 0xdc73, 0x8800, 0x3256, 0x62f, 0xa6c7, 0x1, 0x0);
        gbc.writeMem(0xbb4b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdc73);
        EXPECT(gbc.pc(), 0xbb4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb4b), 0x79);
        // 79 001F
        gbc.setState(0x9964, 0x5747, 0x9070, 0x40bb, 0x29eb, 0x9fc3, 0x1, 0x0);
        gbc.writeMem(0x9964, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x5747);
        EXPECT(gbc.pc(), 0x9965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9964), 0x79);
        // 79 0020
        gbc.setState(0xb2db, 0x45e9, 0x9ee0, 0xb85e, 0x1474, 0x8ff8, 0x1, 0x1);
        gbc.writeMem(0xb2db, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x45e9);
        EXPECT(gbc.pc(), 0xb2dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2db), 0x79);
        // 79 0021
        gbc.setState(0xd13e, 0x3ff6, 0x3740, 0x6d61, 0x1a54, 0xa37c, 0x1, 0x1);
        gbc.writeMem(0xd13e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3ff6);
        EXPECT(gbc.pc(), 0xd13f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd13e), 0x79);
        // 79 0022
        gbc.setState(0x8c4b, 0x69b3, 0xdd60, 0xb50a, 0xb76c, 0xbbe3, 0x1, 0x1);
        gbc.writeMem(0x8c4b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x69b3);
        EXPECT(gbc.pc(), 0x8c4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c4b), 0x79);
        // 79 0024
        gbc.setState(0x3433, 0x8d0c, 0xc360, 0xa661, 0xf8fa, 0x8eee, 0x1, 0x1);
        gbc.writeMem(0x3433, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8d0c);
        EXPECT(gbc.pc(), 0x3434);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0025
        gbc.setState(0x6fc2, 0x1dc9, 0x3e20, 0x24ef, 0xa2e7, 0xf228, 0x0, 0x0);
        gbc.writeMem(0x6fc2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1dc9);
        EXPECT(gbc.pc(), 0x6fc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0026
        gbc.setState(0x4a5c, 0x4c2d, 0x1090, 0xf308, 0xd75c, 0x2b74, 0x0, 0x1);
        gbc.writeMem(0x4a5c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4c2d);
        EXPECT(gbc.pc(), 0x4a5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0027
        gbc.setState(0xaef6, 0x8c92, 0xc0d0, 0x1133, 0xdc2e, 0x62ea, 0x0, 0x0);
        gbc.writeMem(0xaef6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8c92);
        EXPECT(gbc.pc(), 0xaef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef6), 0x79);
        // 79 0028
        gbc.setState(0x3f26, 0x14ac, 0x6e60, 0x4693, 0x7242, 0x2e57, 0x0, 0x0);
        gbc.writeMem(0x3f26, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x14ac);
        EXPECT(gbc.pc(), 0x3f27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0029
        gbc.setState(0x18cc, 0x7e67, 0x8590, 0xb44c, 0xf42b, 0xa54e, 0x1, 0x0);
        gbc.writeMem(0x18cc, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7e67);
        EXPECT(gbc.pc(), 0x18cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 002A
        gbc.setState(0xcbb4, 0xe22c, 0xb880, 0xe0cc, 0xf6fc, 0xf589, 0x1, 0x1);
        gbc.writeMem(0xcbb4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe22c);
        EXPECT(gbc.pc(), 0xcbb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb4), 0x79);
        // 79 002B
        gbc.setState(0x752c, 0xf8ff, 0xe0, 0x7c31, 0x20fd, 0xf72e, 0x1, 0x1);
        gbc.writeMem(0x752c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf8ff);
        EXPECT(gbc.pc(), 0x752d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 002C
        gbc.setState(0xdaa8, 0x4a83, 0x6340, 0xa323, 0xc1b3, 0xbcb8, 0x0, 0x0);
        gbc.writeMem(0xdaa8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4a83);
        EXPECT(gbc.pc(), 0xdaa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaa8), 0x79);
        // 79 002E
        gbc.setState(0x6bd0, 0xbc02, 0x73f0, 0x9bb6, 0x1ab1, 0x2fef, 0x0, 0x0);
        gbc.writeMem(0x6bd0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xbc02);
        EXPECT(gbc.pc(), 0x6bd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 002F
        gbc.setState(0x9e5, 0x36b8, 0xc770, 0xcba6, 0x5049, 0x6174, 0x1, 0x0);
        gbc.writeMem(0x9e5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x36b8);
        EXPECT(gbc.pc(), 0x9e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0030
        gbc.setState(0x68e3, 0xdd4a, 0xcd0, 0x831c, 0xd42, 0xe00c, 0x0, 0x0);
        gbc.writeMem(0x68e3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xdd4a);
        EXPECT(gbc.pc(), 0x68e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0031
        gbc.setState(0x4470, 0xd840, 0x6450, 0x161f, 0x99ab, 0x564c, 0x1, 0x1);
        gbc.writeMem(0x4470, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd840);
        EXPECT(gbc.pc(), 0x4471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0032
        gbc.setState(0xe43a, 0x760c, 0xcd60, 0x2b2, 0x1f1b, 0xe9bd, 0x0, 0x1);
        gbc.writeMem(0xe43a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x760c);
        EXPECT(gbc.pc(), 0xe43b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe43a), 0x79);
        // 79 0033
        gbc.setState(0x847f, 0xe6ba, 0x22e0, 0xcad, 0x60fe, 0x8029, 0x1, 0x1);
        gbc.writeMem(0x847f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe6ba);
        EXPECT(gbc.pc(), 0x8480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x847f), 0x79);
        // 79 0034
        gbc.setState(0x279, 0x8eb6, 0xf6e0, 0x79f, 0x6ca5, 0x9300, 0x1, 0x0);
        gbc.writeMem(0x279, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8eb6);
        EXPECT(gbc.pc(), 0x27a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0035
        gbc.setState(0xd4d6, 0xfd3a, 0xed90, 0x3eac, 0x8b20, 0xb9a2, 0x0, 0x0);
        gbc.writeMem(0xd4d6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xfd3a);
        EXPECT(gbc.pc(), 0xd4d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4d6), 0x79);
        // 79 0036
        gbc.setState(0x855a, 0xd51, 0x1560, 0x490, 0xd4fa, 0x6c2, 0x1, 0x1);
        gbc.writeMem(0x855a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd51);
        EXPECT(gbc.pc(), 0x855b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x855a), 0x79);
        // 79 0037
        gbc.setState(0x49ac, 0xd3e9, 0x91d0, 0xd99d, 0x400, 0xabfa, 0x0, 0x1);
        gbc.writeMem(0x49ac, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd3e9);
        EXPECT(gbc.pc(), 0x49ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0038
        gbc.setState(0x5dbb, 0x672e, 0x26d0, 0x31e1, 0x50b0, 0x63f6, 0x0, 0x0);
        gbc.writeMem(0x5dbb, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x672e);
        EXPECT(gbc.pc(), 0x5dbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0039
        gbc.setState(0x6622, 0xcc3, 0x2960, 0x2a7d, 0x750, 0x5847, 0x0, 0x0);
        gbc.writeMem(0x6622, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xcc3);
        EXPECT(gbc.pc(), 0x6623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 003A
        gbc.setState(0x889d, 0x73, 0x9af0, 0xe4ca, 0xbec1, 0x67b9, 0x1, 0x1);
        gbc.writeMem(0x889d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x73);
        EXPECT(gbc.pc(), 0x889e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x889d), 0x79);
        // 79 003B
        gbc.setState(0x214b, 0x2a06, 0xc920, 0xc374, 0x36bb, 0x441c, 0x1, 0x1);
        gbc.writeMem(0x214b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2a06);
        EXPECT(gbc.pc(), 0x214c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 003C
        gbc.setState(0x7915, 0xa4f0, 0x32f0, 0x619a, 0x8b8, 0x1169, 0x1, 0x1);
        gbc.writeMem(0x7915, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa4f0);
        EXPECT(gbc.pc(), 0x7916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 003D
        gbc.setState(0xdfc8, 0x2c44, 0x960, 0x4109, 0xa7be, 0x7cd2, 0x1, 0x0);
        gbc.writeMem(0xdfc8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2c44);
        EXPECT(gbc.pc(), 0xdfc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc8), 0x79);
        // 79 003E
        gbc.setState(0x5ea5, 0xe10a, 0x6650, 0xfc06, 0x67e8, 0xa659, 0x1, 0x1);
        gbc.writeMem(0x5ea5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe10a);
        EXPECT(gbc.pc(), 0x5ea6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 003F
        gbc.setState(0xc7e5, 0xdca6, 0x850, 0x1465, 0x3c27, 0x2b46, 0x0, 0x0);
        gbc.writeMem(0xc7e5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xdca6);
        EXPECT(gbc.pc(), 0xc7e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7e5), 0x79);
        // 79 0040
        gbc.setState(0x6850, 0xdba4, 0x74d0, 0x1b29, 0xc059, 0x2e20, 0x0, 0x0);
        gbc.writeMem(0x6850, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xdba4);
        EXPECT(gbc.pc(), 0x6851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0041
        gbc.setState(0x4a22, 0x8d85, 0xd090, 0x3e63, 0xf6c8, 0x1d7c, 0x0, 0x1);
        gbc.writeMem(0x4a22, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8d85);
        EXPECT(gbc.pc(), 0x4a23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0042
        gbc.setState(0xb506, 0x4f5c, 0xa5f0, 0xeb3b, 0x32a0, 0xc2e7, 0x1, 0x0);
        gbc.writeMem(0xb506, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4f5c);
        EXPECT(gbc.pc(), 0xb507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb506), 0x79);
        // 79 0043
        gbc.setState(0x2878, 0x56d3, 0x3e00, 0x3a04, 0xa1e4, 0x5dcd, 0x1, 0x0);
        gbc.writeMem(0x2878, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x56d3);
        EXPECT(gbc.pc(), 0x2879);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0044
        gbc.setState(0x551b, 0xf6f3, 0x9340, 0xe5d0, 0xa70c, 0x5885, 0x0, 0x1);
        gbc.writeMem(0x551b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf6f3);
        EXPECT(gbc.pc(), 0x551c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0046
        gbc.setState(0xc6cd, 0x9da, 0xa2c0, 0x3dff, 0xa828, 0x7108, 0x1, 0x1);
        gbc.writeMem(0xc6cd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9da);
        EXPECT(gbc.pc(), 0xc6ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6cd), 0x79);
        // 79 0047
        gbc.setState(0x6fd, 0xf5ab, 0xcab0, 0x7191, 0xcfc, 0xe9aa, 0x0, 0x1);
        gbc.writeMem(0x6fd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf5ab);
        EXPECT(gbc.pc(), 0x6fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0048
        gbc.setState(0x1a1c, 0x8f65, 0xe510, 0x531, 0x7e85, 0xbf68, 0x1, 0x0);
        gbc.writeMem(0x1a1c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8f65);
        EXPECT(gbc.pc(), 0x1a1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0049
        gbc.setState(0x7737, 0xefb6, 0xdea0, 0x5ac9, 0x9f89, 0x413f, 0x0, 0x0);
        gbc.writeMem(0x7737, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xefb6);
        EXPECT(gbc.pc(), 0x7738);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 004A
        gbc.setState(0x7f92, 0x332b, 0xb630, 0x4faa, 0xf2ff, 0xd135, 0x0, 0x0);
        gbc.writeMem(0x7f92, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x332b);
        EXPECT(gbc.pc(), 0x7f93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 004B
        gbc.setState(0xf2f, 0x228a, 0x6800, 0x234e, 0x7f1d, 0x66c5, 0x1, 0x1);
        gbc.writeMem(0xf2f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x228a);
        EXPECT(gbc.pc(), 0xf30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 004C
        gbc.setState(0x757e, 0xf3a2, 0x3e00, 0xa67b, 0x47d, 0xfc80, 0x1, 0x1);
        gbc.writeMem(0x757e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf3a2);
        EXPECT(gbc.pc(), 0x757f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 004D
        gbc.setState(0x14ab, 0xdd51, 0xd800, 0x9da, 0xe641, 0xe495, 0x1, 0x0);
        gbc.writeMem(0x14ab, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xdd51);
        EXPECT(gbc.pc(), 0x14ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 004E
        gbc.setState(0xe88c, 0xffb, 0x58d0, 0xb550, 0x6f33, 0x92a6, 0x0, 0x1);
        gbc.writeMem(0xe88c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xffb);
        EXPECT(gbc.pc(), 0xe88d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe88c), 0x79);
        // 79 0050
        gbc.setState(0x83ea, 0xb7e3, 0xdff0, 0x28c, 0xb1ae, 0xf53c, 0x0, 0x1);
        gbc.writeMem(0x83ea, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb7e3);
        EXPECT(gbc.pc(), 0x83eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ea), 0x79);
        // 79 0051
        gbc.setState(0x77f4, 0x8aa1, 0x4420, 0x4e4f, 0xda12, 0x9590, 0x0, 0x1);
        gbc.writeMem(0x77f4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8aa1);
        EXPECT(gbc.pc(), 0x77f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0052
        gbc.setState(0x3fcd, 0x8b73, 0x9820, 0xdb06, 0xf58, 0x5d91, 0x0, 0x0);
        gbc.writeMem(0x3fcd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8b73);
        EXPECT(gbc.pc(), 0x3fce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0053
        gbc.setState(0x4203, 0xca71, 0x24e0, 0xb29, 0x21f5, 0xaa7a, 0x0, 0x1);
        gbc.writeMem(0x4203, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xca71);
        EXPECT(gbc.pc(), 0x4204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0054
        gbc.setState(0xe864, 0xc55f, 0x57c0, 0x55e4, 0xbcb2, 0x40c8, 0x0, 0x0);
        gbc.writeMem(0xe864, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc55f);
        EXPECT(gbc.pc(), 0xe865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe864), 0x79);
        // 79 0055
        gbc.setState(0x27, 0xee8d, 0x9980, 0xe263, 0xc430, 0xef8d, 0x0, 0x1);
        gbc.writeMem(0x27, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xee8d);
        EXPECT(gbc.pc(), 0x28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0056
        gbc.setState(0x82bd, 0xabba, 0x8060, 0xee1, 0x772e, 0x7e6c, 0x1, 0x1);
        gbc.writeMem(0x82bd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xabba);
        EXPECT(gbc.pc(), 0x82be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82bd), 0x79);
        // 79 0057
        gbc.setState(0xbde7, 0x8d72, 0x9480, 0x6ca6, 0xa211, 0x5761, 0x0, 0x0);
        gbc.writeMem(0xbde7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8d72);
        EXPECT(gbc.pc(), 0xbde8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbde7), 0x79);
        // 79 0059
        gbc.setState(0xe387, 0x4b4e, 0xefe0, 0x3384, 0x3b46, 0x494a, 0x1, 0x0);
        gbc.writeMem(0xe387, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4b4e);
        EXPECT(gbc.pc(), 0xe388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe387), 0x79);
        // 79 005A
        gbc.setState(0x5190, 0x50dd, 0x9060, 0x7599, 0xac3d, 0xbd14, 0x1, 0x0);
        gbc.writeMem(0x5190, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x50dd);
        EXPECT(gbc.pc(), 0x5191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 005B
        gbc.setState(0x744b, 0x4d26, 0xff60, 0xb729, 0x215a, 0x9baa, 0x0, 0x0);
        gbc.writeMem(0x744b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4d26);
        EXPECT(gbc.pc(), 0x744c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 005C
        gbc.setState(0x68ed, 0xf33, 0x9940, 0xb74e, 0x747a, 0x11bb, 0x0, 0x1);
        gbc.writeMem(0x68ed, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf33);
        EXPECT(gbc.pc(), 0x68ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 005D
        gbc.setState(0x9e19, 0xc579, 0x12a0, 0x5e4e, 0x7817, 0x730a, 0x1, 0x0);
        gbc.writeMem(0x9e19, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc579);
        EXPECT(gbc.pc(), 0x9e1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e19), 0x79);
        // 79 005E
        gbc.setState(0xc385, 0x2741, 0xd180, 0xb49b, 0xdba4, 0xf1d2, 0x0, 0x1);
        gbc.writeMem(0xc385, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2741);
        EXPECT(gbc.pc(), 0xc386);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc385), 0x79);
        // 79 005F
        gbc.setState(0x2757, 0xa376, 0x7930, 0x5609, 0xef38, 0xf5f, 0x0, 0x1);
        gbc.writeMem(0x2757, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa376);
        EXPECT(gbc.pc(), 0x2758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0060
        gbc.setState(0xe94d, 0xff03, 0xb2d0, 0x91f4, 0x1ac6, 0xf03f, 0x0, 0x0);
        gbc.writeMem(0xe94d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xff03);
        EXPECT(gbc.pc(), 0xe94e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe94d), 0x79);
        // 79 0061
        gbc.setState(0xed3e, 0xf6dc, 0xa550, 0x223b, 0xc78, 0xf7ca, 0x0, 0x1);
        gbc.writeMem(0xed3e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf6dc);
        EXPECT(gbc.pc(), 0xed3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed3e), 0x79);
        // 79 0062
        gbc.setState(0x3bdb, 0x66e9, 0x4470, 0x3c3e, 0x39eb, 0xc6ee, 0x0, 0x1);
        gbc.writeMem(0x3bdb, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x66e9);
        EXPECT(gbc.pc(), 0x3bdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0063
        gbc.setState(0x8c90, 0x651b, 0x4610, 0xe253, 0xfd57, 0xeef2, 0x1, 0x1);
        gbc.writeMem(0x8c90, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x651b);
        EXPECT(gbc.pc(), 0x8c91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c90), 0x79);
        // 79 0065
        gbc.setState(0x7f25, 0xf1bd, 0xc230, 0xc116, 0x67ba, 0x7f3e, 0x0, 0x1);
        gbc.writeMem(0x7f25, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf1bd);
        EXPECT(gbc.pc(), 0x7f26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0066
        gbc.setState(0x4dbc, 0xec0a, 0x80f0, 0xe4c3, 0xeb8c, 0xcca5, 0x0, 0x0);
        gbc.writeMem(0x4dbc, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xec0a);
        EXPECT(gbc.pc(), 0x4dbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0067
        gbc.setState(0x445a, 0xf5d9, 0xbd0, 0x5668, 0x3834, 0x565e, 0x1, 0x1);
        gbc.writeMem(0x445a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf5d9);
        EXPECT(gbc.pc(), 0x445b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0068
        gbc.setState(0x492a, 0xf5e0, 0xaac0, 0x5c3, 0xa4cc, 0x153b, 0x1, 0x0);
        gbc.writeMem(0x492a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf5e0);
        EXPECT(gbc.pc(), 0x492b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0069
        gbc.setState(0x3646, 0x546, 0x7e40, 0xd805, 0xc994, 0xddeb, 0x0, 0x1);
        gbc.writeMem(0x3646, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x546);
        EXPECT(gbc.pc(), 0x3647);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 006A
        gbc.setState(0xc4e6, 0xd5c1, 0x4840, 0xb3ed, 0x305b, 0xfd4a, 0x1, 0x1);
        gbc.writeMem(0xc4e6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd5c1);
        EXPECT(gbc.pc(), 0xc4e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4e6), 0x79);
        // 79 006B
        gbc.setState(0xc676, 0xac85, 0x29a0, 0xb3f9, 0xaea0, 0x383e, 0x1, 0x0);
        gbc.writeMem(0xc676, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xac85);
        EXPECT(gbc.pc(), 0xc677);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc676), 0x79);
        // 79 006C
        gbc.setState(0x35a, 0x13de, 0x6fc0, 0x5ee5, 0x25f1, 0x7d7e, 0x0, 0x1);
        gbc.writeMem(0x35a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x13de);
        EXPECT(gbc.pc(), 0x35b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 006D
        gbc.setState(0xc9e9, 0xaef3, 0x5450, 0xf113, 0xc401, 0x5e1e, 0x1, 0x0);
        gbc.writeMem(0xc9e9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xaef3);
        EXPECT(gbc.pc(), 0xc9ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9e9), 0x79);
        // 79 006E
        gbc.setState(0xb0, 0x3aac, 0x9cb0, 0xa5bc, 0xa098, 0x69f8, 0x0, 0x0);
        gbc.writeMem(0xb0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3aac);
        EXPECT(gbc.pc(), 0xb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0070
        gbc.setState(0xa6a0, 0x690e, 0x950, 0xa28, 0x8839, 0xce23, 0x1, 0x0);
        gbc.writeMem(0xa6a0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x690e);
        EXPECT(gbc.pc(), 0xa6a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6a0), 0x79);
        // 79 0072
        gbc.setState(0xae70, 0x4e9b, 0x6700, 0x6cc, 0x27b6, 0xda83, 0x1, 0x1);
        gbc.writeMem(0xae70, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4e9b);
        EXPECT(gbc.pc(), 0xae71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae70), 0x79);
        // 79 0073
        gbc.setState(0x50b7, 0x6dce, 0xafb0, 0xdb59, 0x1fa8, 0x4c4b, 0x0, 0x0);
        gbc.writeMem(0x50b7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6dce);
        EXPECT(gbc.pc(), 0x50b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0075
        gbc.setState(0xee9e, 0x59df, 0xf830, 0x189b, 0xa9a2, 0x3a0c, 0x1, 0x0);
        gbc.writeMem(0xee9e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x59df);
        EXPECT(gbc.pc(), 0xee9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee9e), 0x79);
        // 79 0076
        gbc.setState(0x8c48, 0xfa50, 0x68a0, 0xc4b9, 0x1483, 0x2930, 0x1, 0x1);
        gbc.writeMem(0x8c48, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xfa50);
        EXPECT(gbc.pc(), 0x8c49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c48), 0x79);
        // 79 0077
        gbc.setState(0xb13a, 0xd896, 0xdc50, 0xf58c, 0x7da0, 0x9f77, 0x1, 0x1);
        gbc.writeMem(0xb13a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd896);
        EXPECT(gbc.pc(), 0xb13b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb13a), 0x79);
        // 79 0078
        gbc.setState(0x9601, 0x3f0b, 0x120, 0x903f, 0x45d4, 0x55c5, 0x1, 0x0);
        gbc.writeMem(0x9601, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3f0b);
        EXPECT(gbc.pc(), 0x9602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9601), 0x79);
        // 79 0079
        gbc.setState(0xa481, 0x7d5, 0x9920, 0x5860, 0xb375, 0x726e, 0x0, 0x0);
        gbc.writeMem(0xa481, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7d5);
        EXPECT(gbc.pc(), 0xa482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa481), 0x79);
        // 79 007A
        gbc.setState(0xe62c, 0xfd5, 0x83a0, 0x1f0e, 0x9a7f, 0x93a5, 0x1, 0x0);
        gbc.writeMem(0xe62c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xfd5);
        EXPECT(gbc.pc(), 0xe62d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe62c), 0x79);
        // 79 007B
        gbc.setState(0x2b57, 0x65f6, 0xb8a0, 0xb753, 0x8620, 0x2b2e, 0x1, 0x0);
        gbc.writeMem(0x2b57, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x65f6);
        EXPECT(gbc.pc(), 0x2b58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 007C
        gbc.setState(0xd2d1, 0xfb14, 0x350, 0x6aa6, 0xe711, 0x5ad2, 0x0, 0x1);
        gbc.writeMem(0xd2d1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xfb14);
        EXPECT(gbc.pc(), 0xd2d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2d1), 0x79);
        // 79 007D
        gbc.setState(0x42c6, 0x1dca, 0x3830, 0x23d3, 0x8b29, 0x5724, 0x0, 0x0);
        gbc.writeMem(0x42c6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1dca);
        EXPECT(gbc.pc(), 0x42c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 007E
        gbc.setState(0xab55, 0x6c37, 0xb800, 0x3c23, 0xf84d, 0xc8c0, 0x0, 0x1);
        gbc.writeMem(0xab55, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6c37);
        EXPECT(gbc.pc(), 0xab56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab55), 0x79);
        // 79 007F
        gbc.setState(0x6ae1, 0xf09a, 0xded0, 0xf705, 0x247, 0x36ac, 0x0, 0x0);
        gbc.writeMem(0x6ae1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf09a);
        EXPECT(gbc.pc(), 0x6ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0080
        gbc.setState(0xacbe, 0x91cf, 0xdcb0, 0xd1ad, 0xf242, 0xdcd9, 0x0, 0x0);
        gbc.writeMem(0xacbe, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x91cf);
        EXPECT(gbc.pc(), 0xacbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacbe), 0x79);
        // 79 0081
        gbc.setState(0x6074, 0xd2ee, 0xf310, 0x3110, 0xc980, 0x2398, 0x0, 0x0);
        gbc.writeMem(0x6074, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd2ee);
        EXPECT(gbc.pc(), 0x6075);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0082
        gbc.setState(0x85e2, 0x5db, 0xeba0, 0x3b51, 0xcb92, 0x1305, 0x1, 0x0);
        gbc.writeMem(0x85e2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5db);
        EXPECT(gbc.pc(), 0x85e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85e2), 0x79);
        // 79 0083
        gbc.setState(0xe455, 0x57c4, 0x4330, 0x31b0, 0x8265, 0xb27f, 0x1, 0x0);
        gbc.writeMem(0xe455, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x57c4);
        EXPECT(gbc.pc(), 0xe456);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe455), 0x79);
        // 79 0084
        gbc.setState(0x1612, 0x19c2, 0x2b0, 0x8f22, 0xe1cb, 0x6430, 0x1, 0x1);
        gbc.writeMem(0x1612, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x19c2);
        EXPECT(gbc.pc(), 0x1613);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0085
        gbc.setState(0x8f9e, 0x14f0, 0xc2c0, 0xcd64, 0x50ff, 0x603d, 0x1, 0x1);
        gbc.writeMem(0x8f9e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x14f0);
        EXPECT(gbc.pc(), 0x8f9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f9e), 0x79);
        // 79 0086
        gbc.setState(0xeb0c, 0x46cc, 0x5f60, 0x849a, 0x54cf, 0xdd62, 0x1, 0x0);
        gbc.writeMem(0xeb0c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x46cc);
        EXPECT(gbc.pc(), 0xeb0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb0c), 0x79);
        // 79 0087
        gbc.setState(0xc70b, 0x783b, 0x5650, 0x9650, 0xf8a9, 0x94cd, 0x1, 0x1);
        gbc.writeMem(0xc70b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x783b);
        EXPECT(gbc.pc(), 0xc70c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc70b), 0x79);
        // 79 0088
        gbc.setState(0x339e, 0x539a, 0x8d90, 0xcc49, 0x2dba, 0xeb6b, 0x1, 0x0);
        gbc.writeMem(0x339e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x539a);
        EXPECT(gbc.pc(), 0x339f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0089
        gbc.setState(0x9b51, 0x6d30, 0xdf90, 0x6c99, 0x378d, 0x7df4, 0x1, 0x0);
        gbc.writeMem(0x9b51, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6d30);
        EXPECT(gbc.pc(), 0x9b52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b51), 0x79);
        // 79 008A
        gbc.setState(0xc455, 0x51c4, 0x99e0, 0x766b, 0xf2b5, 0x5c80, 0x1, 0x1);
        gbc.writeMem(0xc455, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x51c4);
        EXPECT(gbc.pc(), 0xc456);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc455), 0x79);
        // 79 008B
        gbc.setState(0x4f48, 0xd4cb, 0xf80, 0x3bb4, 0x2770, 0x3496, 0x0, 0x0);
        gbc.writeMem(0x4f48, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd4cb);
        EXPECT(gbc.pc(), 0x4f49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 008C
        gbc.setState(0xcde1, 0x8f40, 0xf7f0, 0xeb36, 0x621f, 0x6f96, 0x0, 0x1);
        gbc.writeMem(0xcde1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x8f40);
        EXPECT(gbc.pc(), 0xcde2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcde1), 0x79);
        // 79 008D
        gbc.setState(0x6864, 0x8cc9, 0x96f0, 0x33a7, 0x471b, 0xd6bc, 0x0, 0x1);
        gbc.writeMem(0x6864, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8cc9);
        EXPECT(gbc.pc(), 0x6865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 008E
        gbc.setState(0x6279, 0xd203, 0xd110, 0xd8dd, 0x436e, 0x7c04, 0x1, 0x1);
        gbc.writeMem(0x6279, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd203);
        EXPECT(gbc.pc(), 0x627a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 008F
        gbc.setState(0x11f9, 0x8744, 0x1ce0, 0x8440, 0x49f2, 0xb0a1, 0x1, 0x0);
        gbc.writeMem(0x11f9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8744);
        EXPECT(gbc.pc(), 0x11fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0090
        gbc.setState(0x2907, 0x2161, 0x3cc0, 0xc9a9, 0x723c, 0x3b04, 0x0, 0x0);
        gbc.writeMem(0x2907, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2161);
        EXPECT(gbc.pc(), 0x2908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0091
        gbc.setState(0x16bf, 0x8b5a, 0x56c0, 0xf2d8, 0xa04a, 0x6385, 0x0, 0x0);
        gbc.writeMem(0x16bf, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8b5a);
        EXPECT(gbc.pc(), 0x16c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0092
        gbc.setState(0x8bed, 0x8d0c, 0xd7b0, 0xdd21, 0x93ae, 0x5a83, 0x0, 0x0);
        gbc.writeMem(0x8bed, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8d0c);
        EXPECT(gbc.pc(), 0x8bee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bed), 0x79);
        // 79 0094
        gbc.setState(0xbc63, 0x3e94, 0xa4c0, 0xd90f, 0x2033, 0x5fe8, 0x1, 0x0);
        gbc.writeMem(0xbc63, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3e94);
        EXPECT(gbc.pc(), 0xbc64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc63), 0x79);
        // 79 0095
        gbc.setState(0xb33b, 0x7096, 0x3a60, 0x4485, 0xa9be, 0xf589, 0x1, 0x1);
        gbc.writeMem(0xb33b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7096);
        EXPECT(gbc.pc(), 0xb33c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb33b), 0x79);
        // 79 0096
        gbc.setState(0xa576, 0xe1f6, 0xaf50, 0xb583, 0xa4d8, 0x4745, 0x1, 0x0);
        gbc.writeMem(0xa576, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe1f6);
        EXPECT(gbc.pc(), 0xa577);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa576), 0x79);
        // 79 0097
        gbc.setState(0x137f, 0x53c5, 0xfaa0, 0x9318, 0x679c, 0xb76b, 0x1, 0x1);
        gbc.writeMem(0x137f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x53c5);
        EXPECT(gbc.pc(), 0x1380);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0098
        gbc.setState(0xd97a, 0xa98a, 0x9fa0, 0x7772, 0xb62a, 0x7839, 0x0, 0x0);
        gbc.writeMem(0xd97a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa98a);
        EXPECT(gbc.pc(), 0xd97b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd97a), 0x79);
        // 79 0099
        gbc.setState(0x2b1e, 0xda1a, 0xd070, 0xae2a, 0xc9f1, 0x3169, 0x1, 0x0);
        gbc.writeMem(0x2b1e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xda1a);
        EXPECT(gbc.pc(), 0x2b1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 009A
        gbc.setState(0xb3aa, 0x9835, 0xd0e0, 0xe816, 0xe724, 0xc63, 0x1, 0x0);
        gbc.writeMem(0xb3aa, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9835);
        EXPECT(gbc.pc(), 0xb3ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3aa), 0x79);
        // 79 009C
        gbc.setState(0x9ae0, 0x2007, 0x18b0, 0xd5fb, 0x31d5, 0xd503, 0x1, 0x1);
        gbc.writeMem(0x9ae0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2007);
        EXPECT(gbc.pc(), 0x9ae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ae0), 0x79);
        // 79 009D
        gbc.setState(0x4daa, 0xdd1e, 0xc8d0, 0x684f, 0x2225, 0xb748, 0x0, 0x0);
        gbc.writeMem(0x4daa, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdd1e);
        EXPECT(gbc.pc(), 0x4dab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 009E
        gbc.setState(0x83d, 0xebbf, 0x67b0, 0xfddc, 0xca21, 0xf4c3, 0x1, 0x0);
        gbc.writeMem(0x83d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xebbf);
        EXPECT(gbc.pc(), 0x83e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 009F
        gbc.setState(0x12c7, 0x7c68, 0xf5e0, 0x3737, 0xade, 0xb3b0, 0x1, 0x1);
        gbc.writeMem(0x12c7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7c68);
        EXPECT(gbc.pc(), 0x12c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 00A0
        gbc.setState(0x5a12, 0xd1d3, 0xfc90, 0x3659, 0x6028, 0xd12f, 0x1, 0x0);
        gbc.writeMem(0x5a12, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd1d3);
        EXPECT(gbc.pc(), 0x5a13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 00A1
        gbc.setState(0x8710, 0x1de5, 0xd340, 0xf937, 0x5aee, 0x51c6, 0x0, 0x0);
        gbc.writeMem(0x8710, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1de5);
        EXPECT(gbc.pc(), 0x8711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8710), 0x79);
        // 79 00A2
        gbc.setState(0x3f2c, 0x39e1, 0xcd90, 0xf4fc, 0xd264, 0x9f25, 0x0, 0x0);
        gbc.writeMem(0x3f2c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x39e1);
        EXPECT(gbc.pc(), 0x3f2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 00A3
        gbc.setState(0x88b9, 0xa2cc, 0x3440, 0xb01e, 0xcd87, 0x9ae2, 0x1, 0x0);
        gbc.writeMem(0x88b9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa2cc);
        EXPECT(gbc.pc(), 0x88ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88b9), 0x79);
        // 79 00A4
        gbc.setState(0xe1c8, 0x7ecd, 0x9100, 0xb86c, 0x5746, 0xefd1, 0x0, 0x1);
        gbc.writeMem(0xe1c8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7ecd);
        EXPECT(gbc.pc(), 0xe1c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1c8), 0x79);
        // 79 00A5
        gbc.setState(0x70a9, 0x3407, 0x7dc0, 0x21f7, 0xaed3, 0x40c, 0x1, 0x0);
        gbc.writeMem(0x70a9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3407);
        EXPECT(gbc.pc(), 0x70aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 00A6
        gbc.setState(0x7025, 0xf50d, 0x3bf0, 0xc865, 0x15d3, 0xb64b, 0x0, 0x0);
        gbc.writeMem(0x7025, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf50d);
        EXPECT(gbc.pc(), 0x7026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 00A7
        gbc.setState(0xab02, 0x303d, 0x8bf0, 0x6da8, 0xad6f, 0xf2c8, 0x0, 0x1);
        gbc.writeMem(0xab02, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x303d);
        EXPECT(gbc.pc(), 0xab03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab02), 0x79);
        // 79 00A8
        gbc.setState(0x2c6a, 0x352b, 0xedb0, 0xbb78, 0xa806, 0xf11d, 0x1, 0x0);
        gbc.writeMem(0x2c6a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x352b);
        EXPECT(gbc.pc(), 0x2c6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 00A9
        gbc.setState(0xaa7d, 0xdb6a, 0x4800, 0xad, 0x4cc0, 0xaab5, 0x1, 0x0);
        gbc.writeMem(0xaa7d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xdb6a);
        EXPECT(gbc.pc(), 0xaa7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa7d), 0x79);
        // 79 00AA
        gbc.setState(0x8475, 0xa0d4, 0xb750, 0xa53a, 0x4954, 0xed1a, 0x1, 0x1);
        gbc.writeMem(0x8475, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa0d4);
        EXPECT(gbc.pc(), 0x8476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8475), 0x79);
        // 79 00AB
        gbc.setState(0xcaf7, 0xdcfc, 0x5ba0, 0x665e, 0x3d1c, 0x2b04, 0x1, 0x0);
        gbc.writeMem(0xcaf7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xdcfc);
        EXPECT(gbc.pc(), 0xcaf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaf7), 0x79);
        // 79 00AC
        gbc.setState(0x44de, 0xab86, 0xcfe0, 0x45d4, 0xd519, 0xee9d, 0x1, 0x0);
        gbc.writeMem(0x44de, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xab86);
        EXPECT(gbc.pc(), 0x44df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 00AD
        gbc.setState(0x789c, 0xd70a, 0x95f0, 0x3cb4, 0x1f6, 0x7f89, 0x0, 0x1);
        gbc.writeMem(0x789c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd70a);
        EXPECT(gbc.pc(), 0x789d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 00AE
        gbc.setState(0xc70, 0x5752, 0xbb60, 0x32, 0x8ecb, 0x19fe, 0x0, 0x0);
        gbc.writeMem(0xc70, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5752);
        EXPECT(gbc.pc(), 0xc71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 00AF
        gbc.setState(0x947, 0xd90f, 0xebd0, 0xf6b4, 0x5a70, 0x1212, 0x0, 0x1);
        gbc.writeMem(0x947, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd90f);
        EXPECT(gbc.pc(), 0x948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 00B0
        gbc.setState(0x5557, 0x323e, 0x76c0, 0xef3d, 0xaa60, 0x7ec1, 0x0, 0x1);
        gbc.writeMem(0x5557, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x323e);
        EXPECT(gbc.pc(), 0x5558);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 00B1
        gbc.setState(0x2425, 0x8526, 0xdc50, 0xddd2, 0x6cdb, 0xd562, 0x0, 0x0);
        gbc.writeMem(0x2425, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8526);
        EXPECT(gbc.pc(), 0x2426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 00B2
        gbc.setState(0x9388, 0x6aa8, 0xbc10, 0xb926, 0x57aa, 0x320d, 0x1, 0x0);
        gbc.writeMem(0x9388, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6aa8);
        EXPECT(gbc.pc(), 0x9389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9388), 0x79);
        // 79 00B3
        gbc.setState(0x8b63, 0x3d16, 0x8f90, 0xc256, 0x19f6, 0x435b, 0x1, 0x1);
        gbc.writeMem(0x8b63, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3d16);
        EXPECT(gbc.pc(), 0x8b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b63), 0x79);
        // 79 00B4
        gbc.setState(0xd7ca, 0xca77, 0xd4f0, 0xbdc2, 0xefa8, 0xb6af, 0x1, 0x0);
        gbc.writeMem(0xd7ca, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xca77);
        EXPECT(gbc.pc(), 0xd7cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ca), 0x79);
        // 79 00B5
        gbc.setState(0x13b0, 0xbe16, 0x9b00, 0x246d, 0x24d9, 0x64c9, 0x1, 0x1);
        gbc.writeMem(0x13b0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xbe16);
        EXPECT(gbc.pc(), 0x13b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 00B6
        gbc.setState(0x28d0, 0xd825, 0xb730, 0x2607, 0x968d, 0xe00f, 0x0, 0x0);
        gbc.writeMem(0x28d0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd825);
        EXPECT(gbc.pc(), 0x28d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 00B7
        gbc.setState(0x98cd, 0x860f, 0xa3e0, 0xb195, 0x4ea3, 0x88be, 0x0, 0x0);
        gbc.writeMem(0x98cd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x860f);
        EXPECT(gbc.pc(), 0x98ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98cd), 0x79);
        // 79 00B8
        gbc.setState(0xb130, 0xfa9d, 0x8ec0, 0x7ea5, 0x6084, 0x729e, 0x1, 0x0);
        gbc.writeMem(0xb130, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfa9d);
        EXPECT(gbc.pc(), 0xb131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb130), 0x79);
        // 79 00B9
        gbc.setState(0xb58a, 0xd34d, 0x7e60, 0xa04b, 0x16e4, 0x2e44, 0x0, 0x1);
        gbc.writeMem(0xb58a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd34d);
        EXPECT(gbc.pc(), 0xb58b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb58a), 0x79);
        // 79 00BA
        gbc.setState(0xd360, 0xff2b, 0x9e0, 0x6b0c, 0xa356, 0x6d5a, 0x0, 0x1);
        gbc.writeMem(0xd360, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xff2b);
        EXPECT(gbc.pc(), 0xd361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd360), 0x79);
        // 79 00BB
        gbc.setState(0x487, 0x52eb, 0x6d20, 0xa552, 0xfbd3, 0xa97d, 0x1, 0x0);
        gbc.writeMem(0x487, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x52eb);
        EXPECT(gbc.pc(), 0x488);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 00BC
        gbc.setState(0xc8ad, 0x8798, 0xb400, 0xd978, 0x6396, 0xb6f9, 0x0, 0x1);
        gbc.writeMem(0xc8ad, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8798);
        EXPECT(gbc.pc(), 0xc8ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ad), 0x79);
        // 79 00BD
        gbc.setState(0xa157, 0xcb70, 0xb800, 0x5cb6, 0xda4c, 0xf798, 0x1, 0x0);
        gbc.writeMem(0xa157, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xcb70);
        EXPECT(gbc.pc(), 0xa158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa157), 0x79);
        // 79 00BE
        gbc.setState(0x157d, 0xf0be, 0xf50, 0x507a, 0x4ce1, 0xc83a, 0x0, 0x1);
        gbc.writeMem(0x157d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf0be);
        EXPECT(gbc.pc(), 0x157e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 00BF
        gbc.setState(0xcd5e, 0xe1d3, 0x4330, 0xd9d4, 0xa637, 0x29d, 0x0, 0x0);
        gbc.writeMem(0xcd5e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe1d3);
        EXPECT(gbc.pc(), 0xcd5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd5e), 0x79);
        // 79 00C1
        gbc.setState(0x6a93, 0x1263, 0x2110, 0xbe26, 0xb04b, 0x312f, 0x0, 0x1);
        gbc.writeMem(0x6a93, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x1263);
        EXPECT(gbc.pc(), 0x6a94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 00C2
        gbc.setState(0x9144, 0x8014, 0xed60, 0xd18d, 0xa1c1, 0x58d6, 0x1, 0x0);
        gbc.writeMem(0x9144, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8014);
        EXPECT(gbc.pc(), 0x9145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9144), 0x79);
        // 79 00C3
        gbc.setState(0x19aa, 0x6494, 0xf030, 0xa759, 0x8677, 0x18ce, 0x1, 0x1);
        gbc.writeMem(0x19aa, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6494);
        EXPECT(gbc.pc(), 0x19ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 00C5
        gbc.setState(0x322e, 0xb80b, 0x6810, 0x22bd, 0xf012, 0xcd1, 0x1, 0x1);
        gbc.writeMem(0x322e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb80b);
        EXPECT(gbc.pc(), 0x322f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 00C6
        gbc.setState(0x2132, 0x1660, 0xc590, 0x62c3, 0xeb83, 0x86d8, 0x1, 0x1);
        gbc.writeMem(0x2132, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1660);
        EXPECT(gbc.pc(), 0x2133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 00C7
        gbc.setState(0x53cc, 0x494c, 0x7250, 0xa4f1, 0x8bad, 0xc9b2, 0x0, 0x0);
        gbc.writeMem(0x53cc, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x494c);
        EXPECT(gbc.pc(), 0x53cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 00C8
        gbc.setState(0x20b4, 0xe1f, 0x4840, 0xc9f1, 0xda86, 0x4dd2, 0x1, 0x0);
        gbc.writeMem(0x20b4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xe1f);
        EXPECT(gbc.pc(), 0x20b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 00C9
        gbc.setState(0xc7da, 0x43b1, 0x6860, 0x8a5e, 0x7f33, 0x9254, 0x1, 0x1);
        gbc.writeMem(0xc7da, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x43b1);
        EXPECT(gbc.pc(), 0xc7db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7da), 0x79);
        // 79 00CA
        gbc.setState(0xeb95, 0xac10, 0xd920, 0xbc32, 0xfa80, 0x93f5, 0x0, 0x1);
        gbc.writeMem(0xeb95, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xac10);
        EXPECT(gbc.pc(), 0xeb96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb95), 0x79);
        // 79 00CB
        gbc.setState(0xe39f, 0x7b92, 0x3fa0, 0x1152, 0xb3f0, 0x622f, 0x1, 0x0);
        gbc.writeMem(0xe39f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7b92);
        EXPECT(gbc.pc(), 0xe3a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe39f), 0x79);
        // 79 00CC
        gbc.setState(0x2360, 0x5f20, 0xb5b0, 0x9dc5, 0xbbe2, 0x3522, 0x0, 0x0);
        gbc.writeMem(0x2360, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5f20);
        EXPECT(gbc.pc(), 0x2361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 00CD
        gbc.setState(0x53b5, 0xa46c, 0x5780, 0xb7e9, 0x1407, 0xa189, 0x0, 0x0);
        gbc.writeMem(0x53b5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa46c);
        EXPECT(gbc.pc(), 0x53b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 00CE
        gbc.setState(0x5b51, 0x710b, 0xe5e0, 0xd82b, 0x9bc9, 0x23a5, 0x1, 0x0);
        gbc.writeMem(0x5b51, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x710b);
        EXPECT(gbc.pc(), 0x5b52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 00CF
        gbc.setState(0x8693, 0x26ea, 0x7e0, 0x5cad, 0x33b8, 0x5a9d, 0x1, 0x1);
        gbc.writeMem(0x8693, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x26ea);
        EXPECT(gbc.pc(), 0x8694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8693), 0x79);
        // 79 00D0
        gbc.setState(0x68a, 0xc9d5, 0xe620, 0xe0e7, 0x737b, 0xfb74, 0x0, 0x1);
        gbc.writeMem(0x68a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc9d5);
        EXPECT(gbc.pc(), 0x68b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 00D1
        gbc.setState(0x43f0, 0xf757, 0xfb0, 0x7612, 0xc5a, 0x66a9, 0x0, 0x1);
        gbc.writeMem(0x43f0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf757);
        EXPECT(gbc.pc(), 0x43f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 00D2
        gbc.setState(0xd77b, 0xf474, 0xc970, 0xddd4, 0x3a4b, 0xadd9, 0x0, 0x0);
        gbc.writeMem(0xd77b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf474);
        EXPECT(gbc.pc(), 0xd77c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd77b), 0x79);
        // 79 00D3
        gbc.setState(0xa2fb, 0xf911, 0x8ff0, 0x6aaf, 0x6d77, 0x89d3, 0x0, 0x1);
        gbc.writeMem(0xa2fb, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf911);
        EXPECT(gbc.pc(), 0xa2fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2fb), 0x79);
        // 79 00D4
        gbc.setState(0x101, 0xf671, 0xb000, 0xef8, 0x39b1, 0x825e, 0x0, 0x0);
        gbc.writeMem(0x101, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf671);
        EXPECT(gbc.pc(), 0x102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 00D5
        gbc.setState(0x37d2, 0x1a96, 0x16a0, 0x5be8, 0x6811, 0xf03d, 0x0, 0x0);
        gbc.writeMem(0x37d2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1a96);
        EXPECT(gbc.pc(), 0x37d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 00D6
        gbc.setState(0x46a2, 0x56bb, 0xb050, 0x24b6, 0x3a78, 0x9483, 0x0, 0x1);
        gbc.writeMem(0x46a2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x56bb);
        EXPECT(gbc.pc(), 0x46a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 00D7
        gbc.setState(0x9e4f, 0x620c, 0x88c0, 0x818d, 0xff49, 0xac0a, 0x0, 0x1);
        gbc.writeMem(0x9e4f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x620c);
        EXPECT(gbc.pc(), 0x9e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e4f), 0x79);
        // 79 00D8
        gbc.setState(0x4fbc, 0x9019, 0xcd0, 0x68b7, 0x45b, 0x31de, 0x0, 0x0);
        gbc.writeMem(0x4fbc, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9019);
        EXPECT(gbc.pc(), 0x4fbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 00D9
        gbc.setState(0xb256, 0xffe0, 0xe060, 0x794d, 0xb1f3, 0x2bf8, 0x1, 0x0);
        gbc.writeMem(0xb256, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xffe0);
        EXPECT(gbc.pc(), 0xb257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb256), 0x79);
        // 79 00DA
        gbc.setState(0x439b, 0x82a4, 0xc000, 0x737a, 0xca6, 0xd019, 0x1, 0x1);
        gbc.writeMem(0x439b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x82a4);
        EXPECT(gbc.pc(), 0x439c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 00DB
        gbc.setState(0x4058, 0x3653, 0x18b0, 0x24e3, 0x8d80, 0x9d45, 0x0, 0x1);
        gbc.writeMem(0x4058, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3653);
        EXPECT(gbc.pc(), 0x4059);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 00DC
        gbc.setState(0x4f85, 0xd2e8, 0x8c10, 0x66f1, 0x68dc, 0x4b53, 0x0, 0x0);
        gbc.writeMem(0x4f85, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd2e8);
        EXPECT(gbc.pc(), 0x4f86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 00DD
        gbc.setState(0x4c69, 0x9b63, 0xa7f0, 0x231d, 0xf88e, 0x1951, 0x1, 0x0);
        gbc.writeMem(0x4c69, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9b63);
        EXPECT(gbc.pc(), 0x4c6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 00DE
        gbc.setState(0xdb51, 0x609d, 0xeae0, 0x3dd5, 0x95bf, 0x64c3, 0x0, 0x0);
        gbc.writeMem(0xdb51, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x609d);
        EXPECT(gbc.pc(), 0xdb52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb51), 0x79);
        // 79 00DF
        gbc.setState(0x4bb5, 0x518c, 0x6540, 0x5d3e, 0x1777, 0x213b, 0x0, 0x1);
        gbc.writeMem(0x4bb5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x518c);
        EXPECT(gbc.pc(), 0x4bb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 00E0
        gbc.setState(0xd081, 0x9201, 0x9880, 0x4459, 0x531c, 0x2046, 0x1, 0x1);
        gbc.writeMem(0xd081, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9201);
        EXPECT(gbc.pc(), 0xd082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd081), 0x79);
        // 79 00E1
        gbc.setState(0x60e, 0x23f0, 0x6200, 0x9885, 0x64c6, 0xd586, 0x0, 0x0);
        gbc.writeMem(0x60e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x23f0);
        EXPECT(gbc.pc(), 0x60f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 00E2
        gbc.setState(0xefd7, 0x8ba6, 0xe380, 0x16e, 0x4293, 0x2916, 0x1, 0x0);
        gbc.writeMem(0xefd7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8ba6);
        EXPECT(gbc.pc(), 0xefd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefd7), 0x79);
        // 79 00E3
        gbc.setState(0x2d13, 0x1026, 0x7210, 0x6327, 0x6ab, 0x1f04, 0x0, 0x0);
        gbc.writeMem(0x2d13, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1026);
        EXPECT(gbc.pc(), 0x2d14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 00E4
        gbc.setState(0x8a33, 0x25e, 0x1d70, 0x4dbd, 0xa844, 0x9475, 0x0, 0x1);
        gbc.writeMem(0x8a33, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x25e);
        EXPECT(gbc.pc(), 0x8a34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a33), 0x79);
        // 79 00E5
        gbc.setState(0xb079, 0xe0af, 0xf7e0, 0x38f9, 0x958d, 0x1641, 0x0, 0x0);
        gbc.writeMem(0xb079, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe0af);
        EXPECT(gbc.pc(), 0xb07a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb079), 0x79);
        // 79 00E7
        gbc.setState(0x1875, 0xd834, 0x6290, 0x317e, 0x8c80, 0xd85e, 0x0, 0x1);
        gbc.writeMem(0x1875, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd834);
        EXPECT(gbc.pc(), 0x1876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 00E8
        gbc.setState(0x7d2c, 0xd531, 0x5650, 0x252a, 0xcaf7, 0x7402, 0x1, 0x1);
        gbc.writeMem(0x7d2c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd531);
        EXPECT(gbc.pc(), 0x7d2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 00E9
        gbc.setState(0xe177, 0xdda1, 0x87c0, 0x53f, 0xc95d, 0x5b79, 0x0, 0x1);
        gbc.writeMem(0xe177, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdda1);
        EXPECT(gbc.pc(), 0xe178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe177), 0x79);
        // 79 00EA
        gbc.setState(0x38bd, 0x2a82, 0x79c0, 0x9ccd, 0x5d31, 0xc6d5, 0x1, 0x0);
        gbc.writeMem(0x38bd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2a82);
        EXPECT(gbc.pc(), 0x38be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 00EC
        gbc.setState(0x5356, 0x4a7d, 0x61e0, 0x2ccf, 0xe884, 0x80b0, 0x0, 0x1);
        gbc.writeMem(0x5356, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4a7d);
        EXPECT(gbc.pc(), 0x5357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 00ED
        gbc.setState(0x8aaa, 0x5f78, 0xa260, 0xaae, 0x23f0, 0x1051, 0x0, 0x0);
        gbc.writeMem(0x8aaa, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5f78);
        EXPECT(gbc.pc(), 0x8aab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aaa), 0x79);
        // 79 00EE
        gbc.setState(0x3167, 0xd03f, 0xca20, 0xe48f, 0x679a, 0xece2, 0x0, 0x1);
        gbc.writeMem(0x3167, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd03f);
        EXPECT(gbc.pc(), 0x3168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 00EF
        gbc.setState(0x5388, 0x399f, 0x1900, 0x4505, 0xe5ca, 0xa0a3, 0x1, 0x1);
        gbc.writeMem(0x5388, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x399f);
        EXPECT(gbc.pc(), 0x5389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 00F0
        gbc.setState(0xa64e, 0xd781, 0xd260, 0xad4d, 0xd1a8, 0x76b2, 0x0, 0x1);
        gbc.writeMem(0xa64e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd781);
        EXPECT(gbc.pc(), 0xa64f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa64e), 0x79);
        // 79 00F1
        gbc.setState(0xd497, 0xa04a, 0x9760, 0x6f24, 0x4aa9, 0x983d, 0x1, 0x1);
        gbc.writeMem(0xd497, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa04a);
        EXPECT(gbc.pc(), 0xd498);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd497), 0x79);
        // 79 00F2
        gbc.setState(0x21a5, 0x1eab, 0xef0, 0x4d45, 0x8ae2, 0x22f3, 0x1, 0x0);
        gbc.writeMem(0x21a5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1eab);
        EXPECT(gbc.pc(), 0x21a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 00F3
        gbc.setState(0xd02d, 0x4c82, 0xa60, 0x8b93, 0xa900, 0xd345, 0x1, 0x0);
        gbc.writeMem(0xd02d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4c82);
        EXPECT(gbc.pc(), 0xd02e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd02d), 0x79);
        // 79 00F4
        gbc.setState(0xda00, 0x9062, 0x7090, 0x95d4, 0xfc3e, 0x5a6d, 0x0, 0x0);
        gbc.writeMem(0xda00, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9062);
        EXPECT(gbc.pc(), 0xda01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda00), 0x79);
        // 79 00F5
        gbc.setState(0xd792, 0xecb9, 0x5760, 0x3c5, 0x1b7d, 0x1f60, 0x0, 0x1);
        gbc.writeMem(0xd792, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xecb9);
        EXPECT(gbc.pc(), 0xd793);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd792), 0x79);
        // 79 00F6
        gbc.setState(0x93e8, 0xb842, 0x77a0, 0x8701, 0x495d, 0xf35a, 0x1, 0x1);
        gbc.writeMem(0x93e8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb842);
        EXPECT(gbc.pc(), 0x93e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e8), 0x79);
        // 79 00F7
        gbc.setState(0xebf4, 0xc907, 0x58c0, 0xf438, 0x4446, 0xb52a, 0x1, 0x1);
        gbc.writeMem(0xebf4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc907);
        EXPECT(gbc.pc(), 0xebf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebf4), 0x79);
        // 79 00F8
        gbc.setState(0x47b9, 0x308b, 0xe340, 0xe08a, 0x44ea, 0x2ed7, 0x1, 0x1);
        gbc.writeMem(0x47b9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x308b);
        EXPECT(gbc.pc(), 0x47ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 00F9
        gbc.setState(0x434f, 0xe859, 0xd1a0, 0xf13a, 0xca49, 0x4d68, 0x1, 0x1);
        gbc.writeMem(0x434f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe859);
        EXPECT(gbc.pc(), 0x4350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 00FA
        gbc.setState(0x67fe, 0xb565, 0x7760, 0x8684, 0xbebc, 0x1228, 0x1, 0x1);
        gbc.writeMem(0x67fe, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb565);
        EXPECT(gbc.pc(), 0x67ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 00FB
        gbc.setState(0x4535, 0x321f, 0xef70, 0x919d, 0x892e, 0xbf1e, 0x1, 0x0);
        gbc.writeMem(0x4535, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x321f);
        EXPECT(gbc.pc(), 0x4536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 00FC
        gbc.setState(0x54c9, 0x30dc, 0x75e0, 0x6450, 0xc800, 0x3e4f, 0x0, 0x1);
        gbc.writeMem(0x54c9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x30dc);
        EXPECT(gbc.pc(), 0x54ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 00FD
        gbc.setState(0x2bff, 0x5fe9, 0x41d0, 0x60b8, 0xef09, 0xd402, 0x0, 0x0);
        gbc.writeMem(0x2bff, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5fe9);
        EXPECT(gbc.pc(), 0x2c00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 00FE
        gbc.setState(0xbeb8, 0x3e0a, 0xe9c0, 0x69b9, 0x199d, 0x52e8, 0x1, 0x0);
        gbc.writeMem(0xbeb8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3e0a);
        EXPECT(gbc.pc(), 0xbeb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeb8), 0x79);
        // 79 00FF
        gbc.setState(0x208, 0xc163, 0x1270, 0xccfb, 0x2f98, 0x99af, 0x1, 0x0);
        gbc.writeMem(0x208, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc163);
        EXPECT(gbc.pc(), 0x209);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0100
        gbc.setState(0x41d6, 0x675b, 0x6b10, 0x5b31, 0x13e6, 0xa71, 0x1, 0x0);
        gbc.writeMem(0x41d6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x675b);
        EXPECT(gbc.pc(), 0x41d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0101
        gbc.setState(0x3512, 0x84cc, 0x6aa0, 0x6e85, 0xb011, 0xc88f, 0x1, 0x0);
        gbc.writeMem(0x3512, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x84cc);
        EXPECT(gbc.pc(), 0x3513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0102
        gbc.setState(0x6ec9, 0x679f, 0x5570, 0x6305, 0x10ac, 0x82db, 0x0, 0x1);
        gbc.writeMem(0x6ec9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x679f);
        EXPECT(gbc.pc(), 0x6eca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0103
        gbc.setState(0x32c5, 0x11ed, 0x6040, 0x5494, 0xb014, 0x7e4b, 0x1, 0x0);
        gbc.writeMem(0x32c5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x11ed);
        EXPECT(gbc.pc(), 0x32c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0104
        gbc.setState(0xeb76, 0xf839, 0x6a90, 0x481b, 0xf5b5, 0x8bee, 0x0, 0x1);
        gbc.writeMem(0xeb76, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf839);
        EXPECT(gbc.pc(), 0xeb77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb76), 0x79);
        // 79 0105
        gbc.setState(0xecaf, 0xda32, 0xba70, 0xa01e, 0x7f78, 0x5b88, 0x0, 0x1);
        gbc.writeMem(0xecaf, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xda32);
        EXPECT(gbc.pc(), 0xecb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecaf), 0x79);
        // 79 0106
        gbc.setState(0xdda0, 0x5b6e, 0x5b80, 0xd047, 0x5b52, 0xebd6, 0x1, 0x0);
        gbc.writeMem(0xdda0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5b6e);
        EXPECT(gbc.pc(), 0xdda1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdda0), 0x79);
        // 79 0107
        gbc.setState(0x2af2, 0xa902, 0x9bd0, 0x728, 0x1ee3, 0x7321, 0x1, 0x0);
        gbc.writeMem(0x2af2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa902);
        EXPECT(gbc.pc(), 0x2af3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0108
        gbc.setState(0x9f46, 0x8939, 0xfca0, 0x9d2, 0x4688, 0x1b85, 0x1, 0x1);
        gbc.writeMem(0x9f46, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8939);
        EXPECT(gbc.pc(), 0x9f47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f46), 0x79);
        // 79 0109
        gbc.setState(0xcc12, 0x9d97, 0xd0c0, 0xb9d1, 0x92ab, 0xfefc, 0x0, 0x0);
        gbc.writeMem(0xcc12, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9d97);
        EXPECT(gbc.pc(), 0xcc13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc12), 0x79);
        // 79 010A
        gbc.setState(0x5137, 0x3318, 0x3b20, 0xf584, 0x17e4, 0x3991, 0x1, 0x1);
        gbc.writeMem(0x5137, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3318);
        EXPECT(gbc.pc(), 0x5138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 010B
        gbc.setState(0xcdac, 0xc463, 0xec50, 0xc588, 0xe35a, 0x9d7e, 0x1, 0x0);
        gbc.writeMem(0xcdac, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc463);
        EXPECT(gbc.pc(), 0xcdad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdac), 0x79);
        // 79 010C
        gbc.setState(0xcdcb, 0xd31e, 0x4530, 0xd2e9, 0xd50d, 0xb5a8, 0x1, 0x0);
        gbc.writeMem(0xcdcb, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd31e);
        EXPECT(gbc.pc(), 0xcdcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdcb), 0x79);
        // 79 010D
        gbc.setState(0x2a80, 0xafcd, 0x57a0, 0x813f, 0x2f1d, 0xf32, 0x1, 0x1);
        gbc.writeMem(0x2a80, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xafcd);
        EXPECT(gbc.pc(), 0x2a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 010E
        gbc.setState(0x1402, 0xce52, 0x4be0, 0xac0e, 0xad2, 0xfa0, 0x0, 0x0);
        gbc.writeMem(0x1402, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xce52);
        EXPECT(gbc.pc(), 0x1403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 010F
        gbc.setState(0x7775, 0x6d4, 0x82b0, 0xdac5, 0xec9f, 0xa9e0, 0x1, 0x0);
        gbc.writeMem(0x7775, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6d4);
        EXPECT(gbc.pc(), 0x7776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0110
        gbc.setState(0xd65a, 0xeff6, 0x460, 0x49da, 0x6169, 0xab8e, 0x0, 0x1);
        gbc.writeMem(0xd65a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xeff6);
        EXPECT(gbc.pc(), 0xd65b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd65a), 0x79);
        // 79 0111
        gbc.setState(0x56a5, 0xa247, 0xae60, 0x6952, 0xf218, 0x9d5d, 0x1, 0x1);
        gbc.writeMem(0x56a5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa247);
        EXPECT(gbc.pc(), 0x56a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0112
        gbc.setState(0x7839, 0x5950, 0x1ab0, 0xad5d, 0xd40e, 0xd21, 0x1, 0x1);
        gbc.writeMem(0x7839, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5950);
        EXPECT(gbc.pc(), 0x783a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0113
        gbc.setState(0xd854, 0xd6c8, 0xa210, 0x70d4, 0x19a6, 0x3c69, 0x0, 0x1);
        gbc.writeMem(0xd854, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd6c8);
        EXPECT(gbc.pc(), 0xd855);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd854), 0x79);
        // 79 0115
        gbc.setState(0xa79b, 0xebfe, 0x8560, 0xaf2a, 0xf7f9, 0xa247, 0x1, 0x0);
        gbc.writeMem(0xa79b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xebfe);
        EXPECT(gbc.pc(), 0xa79c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa79b), 0x79);
        // 79 0116
        gbc.setState(0x3659, 0x8582, 0x9d90, 0xcd16, 0x1e8f, 0x5041, 0x1, 0x0);
        gbc.writeMem(0x3659, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8582);
        EXPECT(gbc.pc(), 0x365a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0117
        gbc.setState(0x31ce, 0xc29a, 0x8bc0, 0x4207, 0xf5c4, 0x7f5b, 0x1, 0x1);
        gbc.writeMem(0x31ce, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc29a);
        EXPECT(gbc.pc(), 0x31cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0118
        gbc.setState(0xc9b7, 0x1ce0, 0x1fc0, 0x27c6, 0x546a, 0x68ce, 0x1, 0x0);
        gbc.writeMem(0xc9b7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1ce0);
        EXPECT(gbc.pc(), 0xc9b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b7), 0x79);
        // 79 0119
        gbc.setState(0xe1f4, 0x754e, 0xb590, 0xe6b6, 0xc401, 0xdda, 0x0, 0x1);
        gbc.writeMem(0xe1f4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x754e);
        EXPECT(gbc.pc(), 0xe1f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1f4), 0x79);
        // 79 011A
        gbc.setState(0x12f2, 0xc933, 0x6ec0, 0x60eb, 0xdc7, 0x288b, 0x0, 0x0);
        gbc.writeMem(0x12f2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xc933);
        EXPECT(gbc.pc(), 0x12f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 011B
        gbc.setState(0x68d1, 0x7831, 0x7a50, 0xa081, 0x7a80, 0xc544, 0x0, 0x0);
        gbc.writeMem(0x68d1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7831);
        EXPECT(gbc.pc(), 0x68d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 011C
        gbc.setState(0x103e, 0x5cc3, 0xf910, 0xba06, 0xa0f7, 0x9386, 0x0, 0x1);
        gbc.writeMem(0x103e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5cc3);
        EXPECT(gbc.pc(), 0x103f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 011D
        gbc.setState(0x3358, 0xb349, 0xc690, 0x8cf6, 0x164c, 0x3db0, 0x1, 0x0);
        gbc.writeMem(0x3358, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb349);
        EXPECT(gbc.pc(), 0x3359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 011E
        gbc.setState(0x99f9, 0xea85, 0x8a70, 0xb00e, 0xbeb6, 0x610d, 0x0, 0x0);
        gbc.writeMem(0x99f9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xea85);
        EXPECT(gbc.pc(), 0x99fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99f9), 0x79);
        // 79 011F
        gbc.setState(0x42f5, 0x3d6d, 0x3bb0, 0x664e, 0x321d, 0x8882, 0x1, 0x0);
        gbc.writeMem(0x42f5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3d6d);
        EXPECT(gbc.pc(), 0x42f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0120
        gbc.setState(0xbae5, 0xa3e8, 0xcd80, 0x23e8, 0x8fec, 0x845a, 0x1, 0x1);
        gbc.writeMem(0xbae5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa3e8);
        EXPECT(gbc.pc(), 0xbae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbae5), 0x79);
        // 79 0121
        gbc.setState(0x3ca5, 0x26e1, 0x6c50, 0xa964, 0x37e0, 0xc503, 0x0, 0x1);
        gbc.writeMem(0x3ca5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x26e1);
        EXPECT(gbc.pc(), 0x3ca6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0122
        gbc.setState(0x8fcb, 0x7c13, 0x7630, 0xb16e, 0x75da, 0x1567, 0x1, 0x0);
        gbc.writeMem(0x8fcb, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7c13);
        EXPECT(gbc.pc(), 0x8fcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fcb), 0x79);
        // 79 0123
        gbc.setState(0xb959, 0x60c9, 0xc010, 0xb1ea, 0x911e, 0x3c9a, 0x0, 0x1);
        gbc.writeMem(0xb959, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x60c9);
        EXPECT(gbc.pc(), 0xb95a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb959), 0x79);
        // 79 0124
        gbc.setState(0x43c3, 0x80e0, 0xd720, 0x4144, 0x40ee, 0x9180, 0x0, 0x1);
        gbc.writeMem(0x43c3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x80e0);
        EXPECT(gbc.pc(), 0x43c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0125
        gbc.setState(0x58bd, 0x173e, 0x92e0, 0x8870, 0x9067, 0xc833, 0x1, 0x1);
        gbc.writeMem(0x58bd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x173e);
        EXPECT(gbc.pc(), 0x58be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0126
        gbc.setState(0x9c71, 0x48de, 0x2f80, 0x153c, 0xf4d8, 0xc759, 0x0, 0x0);
        gbc.writeMem(0x9c71, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x48de);
        EXPECT(gbc.pc(), 0x9c72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c71), 0x79);
        // 79 0127
        gbc.setState(0x98d, 0x5eac, 0xf2f0, 0xda38, 0xae98, 0x268a, 0x1, 0x1);
        gbc.writeMem(0x98d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5eac);
        EXPECT(gbc.pc(), 0x98e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0129
        gbc.setState(0x167, 0x1ace, 0xdda0, 0xad22, 0x8433, 0x3903, 0x1, 0x0);
        gbc.writeMem(0x167, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1ace);
        EXPECT(gbc.pc(), 0x168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 012A
        gbc.setState(0xcb68, 0x6997, 0x13c0, 0xac26, 0xaced, 0x81c1, 0x1, 0x1);
        gbc.writeMem(0xcb68, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6997);
        EXPECT(gbc.pc(), 0xcb69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb68), 0x79);
        // 79 012B
        gbc.setState(0x7e36, 0xd5d7, 0xa330, 0x8271, 0xad39, 0xa2b1, 0x1, 0x0);
        gbc.writeMem(0x7e36, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd5d7);
        EXPECT(gbc.pc(), 0x7e37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 012D
        gbc.setState(0x5028, 0x5207, 0x45f0, 0xde52, 0xaa6e, 0xc150, 0x0, 0x1);
        gbc.writeMem(0x5028, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5207);
        EXPECT(gbc.pc(), 0x5029);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 012E
        gbc.setState(0xb8a9, 0xd49e, 0xb2b0, 0xb5f8, 0x61d1, 0xe504, 0x0, 0x0);
        gbc.writeMem(0xb8a9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd49e);
        EXPECT(gbc.pc(), 0xb8aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a9), 0x79);
        // 79 012F
        gbc.setState(0xb4c8, 0x435a, 0x9510, 0xb7c6, 0x629b, 0x4785, 0x0, 0x0);
        gbc.writeMem(0xb4c8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x435a);
        EXPECT(gbc.pc(), 0xb4c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4c8), 0x79);
        // 79 0130
        gbc.setState(0x22a4, 0x4d13, 0xbce0, 0x9266, 0xddb2, 0x60bb, 0x0, 0x0);
        gbc.writeMem(0x22a4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4d13);
        EXPECT(gbc.pc(), 0x22a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0131
        gbc.setState(0x20f8, 0x9379, 0x5b30, 0x8afc, 0xf218, 0x6837, 0x1, 0x1);
        gbc.writeMem(0x20f8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9379);
        EXPECT(gbc.pc(), 0x20f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0132
        gbc.setState(0x2b4c, 0x8f28, 0x88b0, 0x2329, 0x1723, 0x818, 0x1, 0x0);
        gbc.writeMem(0x2b4c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8f28);
        EXPECT(gbc.pc(), 0x2b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0133
        gbc.setState(0x33d6, 0x5ee3, 0x86c0, 0x44e, 0xf514, 0xa922, 0x0, 0x0);
        gbc.writeMem(0x33d6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5ee3);
        EXPECT(gbc.pc(), 0x33d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0134
        gbc.setState(0xd8d0, 0x8c3d, 0xf3f0, 0xc2a6, 0x6191, 0x5dbc, 0x1, 0x1);
        gbc.writeMem(0xd8d0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8c3d);
        EXPECT(gbc.pc(), 0xd8d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d0), 0x79);
        // 79 0135
        gbc.setState(0x130c, 0x6d06, 0xfce0, 0xb8a7, 0x3e0f, 0xace0, 0x1, 0x0);
        gbc.writeMem(0x130c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6d06);
        EXPECT(gbc.pc(), 0x130d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0136
        gbc.setState(0x6428, 0x7cab, 0x9a70, 0xf1bd, 0xceb2, 0x74df, 0x0, 0x1);
        gbc.writeMem(0x6428, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7cab);
        EXPECT(gbc.pc(), 0x6429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0137
        gbc.setState(0xf93, 0x96d1, 0xb6d0, 0xaefa, 0x5a5a, 0x8821, 0x1, 0x0);
        gbc.writeMem(0xf93, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x96d1);
        EXPECT(gbc.pc(), 0xf94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0138
        gbc.setState(0x4efc, 0xcc33, 0x6430, 0xb21d, 0xe472, 0x4da7, 0x0, 0x0);
        gbc.writeMem(0x4efc, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xcc33);
        EXPECT(gbc.pc(), 0x4efd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0139
        gbc.setState(0x76f6, 0x895c, 0xd60, 0x812a, 0x4cc3, 0x85ec, 0x0, 0x0);
        gbc.writeMem(0x76f6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x895c);
        EXPECT(gbc.pc(), 0x76f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 013A
        gbc.setState(0x92f2, 0x2af5, 0x4810, 0x8df7, 0xdd60, 0xd35a, 0x0, 0x1);
        gbc.writeMem(0x92f2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2af5);
        EXPECT(gbc.pc(), 0x92f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92f2), 0x79);
        // 79 013B
        gbc.setState(0x975d, 0xfbba, 0xea00, 0xf48d, 0x2cd9, 0x4ea0, 0x0, 0x1);
        gbc.writeMem(0x975d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xfbba);
        EXPECT(gbc.pc(), 0x975e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x975d), 0x79);
        // 79 013C
        gbc.setState(0x17e1, 0x263a, 0xac90, 0xc05d, 0x5530, 0x18ef, 0x1, 0x0);
        gbc.writeMem(0x17e1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x263a);
        EXPECT(gbc.pc(), 0x17e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 013D
        gbc.setState(0xdb72, 0x74a0, 0x1160, 0xc398, 0x8824, 0x55b0, 0x1, 0x1);
        gbc.writeMem(0xdb72, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x74a0);
        EXPECT(gbc.pc(), 0xdb73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb72), 0x79);
        // 79 013E
        gbc.setState(0x661c, 0xff7, 0x8c90, 0x5041, 0xcb87, 0xb212, 0x0, 0x0);
        gbc.writeMem(0x661c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xff7);
        EXPECT(gbc.pc(), 0x661d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 013F
        gbc.setState(0xcf5c, 0x7f3d, 0xa30, 0xf506, 0xce32, 0xca05, 0x1, 0x0);
        gbc.writeMem(0xcf5c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7f3d);
        EXPECT(gbc.pc(), 0xcf5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf5c), 0x79);
        // 79 0140
        gbc.setState(0x74e2, 0x1060, 0xe220, 0xa452, 0x6cbe, 0xe71c, 0x0, 0x1);
        gbc.writeMem(0x74e2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1060);
        EXPECT(gbc.pc(), 0x74e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0141
        gbc.setState(0x6695, 0x5798, 0x7670, 0x628d, 0x56fb, 0x674f, 0x0, 0x0);
        gbc.writeMem(0x6695, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5798);
        EXPECT(gbc.pc(), 0x6696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0143
        gbc.setState(0x14ce, 0x5cf3, 0x4b0, 0x17f4, 0xfda9, 0xcb7d, 0x0, 0x0);
        gbc.writeMem(0x14ce, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5cf3);
        EXPECT(gbc.pc(), 0x14cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0144
        gbc.setState(0x4438, 0xd663, 0x5cb0, 0x5d40, 0x8479, 0xd4a9, 0x0, 0x0);
        gbc.writeMem(0x4438, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd663);
        EXPECT(gbc.pc(), 0x4439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0145
        gbc.setState(0x9dac, 0xb4ca, 0xb4a0, 0xce09, 0xd547, 0xa1, 0x1, 0x1);
        gbc.writeMem(0x9dac, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb4ca);
        EXPECT(gbc.pc(), 0x9dad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dac), 0x79);
        // 79 0146
        gbc.setState(0x2a3e, 0x7b21, 0xbca0, 0xb08d, 0x55dc, 0xb0b2, 0x0, 0x0);
        gbc.writeMem(0x2a3e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7b21);
        EXPECT(gbc.pc(), 0x2a3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0148
        gbc.setState(0x9dd7, 0x351e, 0xb930, 0xbc8e, 0xf961, 0x5d82, 0x1, 0x1);
        gbc.writeMem(0x9dd7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x351e);
        EXPECT(gbc.pc(), 0x9dd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dd7), 0x79);
        // 79 0149
        gbc.setState(0x290b, 0x3b15, 0x3790, 0xb94a, 0xd9e9, 0xbbc3, 0x0, 0x1);
        gbc.writeMem(0x290b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3b15);
        EXPECT(gbc.pc(), 0x290c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 014A
        gbc.setState(0x7792, 0x2fb0, 0x3ee0, 0x8c3e, 0xfc51, 0x38c3, 0x1, 0x0);
        gbc.writeMem(0x7792, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2fb0);
        EXPECT(gbc.pc(), 0x7793);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 014B
        gbc.setState(0x8a32, 0x3ba7, 0x7020, 0x1236, 0x6bec, 0xdaa6, 0x1, 0x1);
        gbc.writeMem(0x8a32, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3ba7);
        EXPECT(gbc.pc(), 0x8a33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a32), 0x79);
        // 79 014C
        gbc.setState(0x66c2, 0xf431, 0xa740, 0xf638, 0xf37e, 0xe427, 0x0, 0x0);
        gbc.writeMem(0x66c2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf431);
        EXPECT(gbc.pc(), 0x66c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 014D
        gbc.setState(0x369b, 0xc4fa, 0x9d0, 0x7814, 0xe620, 0x7c7, 0x0, 0x1);
        gbc.writeMem(0x369b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc4fa);
        EXPECT(gbc.pc(), 0x369c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 014E
        gbc.setState(0x52a4, 0xd9de, 0x8d30, 0xfd9a, 0xe51, 0x9fbc, 0x0, 0x0);
        gbc.writeMem(0x52a4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd9de);
        EXPECT(gbc.pc(), 0x52a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0150
        gbc.setState(0xc8bf, 0xc1f3, 0x46e0, 0x6099, 0x6a94, 0xddf7, 0x1, 0x0);
        gbc.writeMem(0xc8bf, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc1f3);
        EXPECT(gbc.pc(), 0xc8c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8bf), 0x79);
        // 79 0151
        gbc.setState(0x4612, 0x3b97, 0x3cb0, 0x92e6, 0xd0a3, 0x27d7, 0x1, 0x1);
        gbc.writeMem(0x4612, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3b97);
        EXPECT(gbc.pc(), 0x4613);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0152
        gbc.setState(0xcd22, 0x11f4, 0x2ab0, 0x9764, 0xfc28, 0x555e, 0x0, 0x1);
        gbc.writeMem(0xcd22, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x11f4);
        EXPECT(gbc.pc(), 0xcd23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd22), 0x79);
        // 79 0153
        gbc.setState(0x6d3d, 0x22db, 0x9a60, 0x1ddd, 0x6692, 0x4534, 0x1, 0x0);
        gbc.writeMem(0x6d3d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x22db);
        EXPECT(gbc.pc(), 0x6d3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0154
        gbc.setState(0x231d, 0x9049, 0xbfe0, 0xfd57, 0x8e49, 0x9c11, 0x1, 0x0);
        gbc.writeMem(0x231d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9049);
        EXPECT(gbc.pc(), 0x231e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0155
        gbc.setState(0xb6aa, 0x4a4d, 0x5390, 0x8f7e, 0x7fda, 0xd65a, 0x1, 0x0);
        gbc.writeMem(0xb6aa, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4a4d);
        EXPECT(gbc.pc(), 0xb6ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6aa), 0x79);
        // 79 0156
        gbc.setState(0xa, 0xadf9, 0x8e30, 0x99ed, 0x60a1, 0xd6c1, 0x1, 0x1);
        gbc.writeMem(0xa, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xadf9);
        EXPECT(gbc.pc(), 0xb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0157
        gbc.setState(0x6d8, 0x481b, 0x23f0, 0x4517, 0xc0fd, 0x8211, 0x1, 0x0);
        gbc.writeMem(0x6d8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x481b);
        EXPECT(gbc.pc(), 0x6d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0158
        gbc.setState(0x35c, 0x8d3a, 0xae20, 0x3538, 0x98f8, 0x1b41, 0x0, 0x0);
        gbc.writeMem(0x35c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8d3a);
        EXPECT(gbc.pc(), 0x35d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0159
        gbc.setState(0x7a08, 0x59aa, 0x1b20, 0xcb8c, 0x84e1, 0x9174, 0x0, 0x0);
        gbc.writeMem(0x7a08, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x59aa);
        EXPECT(gbc.pc(), 0x7a09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 015A
        gbc.setState(0x4ea2, 0x9747, 0x860, 0x6e20, 0xf0f4, 0xea7c, 0x1, 0x1);
        gbc.writeMem(0x4ea2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9747);
        EXPECT(gbc.pc(), 0x4ea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 015B
        gbc.setState(0xd56f, 0xfc6b, 0x84a0, 0x4180, 0xa960, 0x3720, 0x0, 0x1);
        gbc.writeMem(0xd56f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfc6b);
        EXPECT(gbc.pc(), 0xd570);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd56f), 0x79);
        // 79 015C
        gbc.setState(0x77b2, 0x3bcb, 0x7550, 0xe780, 0x4bc5, 0xabe7, 0x1, 0x1);
        gbc.writeMem(0x77b2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3bcb);
        EXPECT(gbc.pc(), 0x77b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 015D
        gbc.setState(0xb25d, 0xb465, 0xb620, 0xa48f, 0xa093, 0xd50f, 0x0, 0x0);
        gbc.writeMem(0xb25d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb465);
        EXPECT(gbc.pc(), 0xb25e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb25d), 0x79);
        // 79 015E
        gbc.setState(0xadcd, 0xb4e1, 0xd940, 0x5f59, 0xcec1, 0xc038, 0x0, 0x0);
        gbc.writeMem(0xadcd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb4e1);
        EXPECT(gbc.pc(), 0xadce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadcd), 0x79);
        // 79 015F
        gbc.setState(0x9787, 0x755b, 0x7870, 0x71ae, 0xa298, 0xf1d2, 0x1, 0x0);
        gbc.writeMem(0x9787, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x755b);
        EXPECT(gbc.pc(), 0x9788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9787), 0x79);
        // 79 0160
        gbc.setState(0xcf89, 0xe720, 0x6b70, 0x4c78, 0x59a2, 0xd4e4, 0x0, 0x0);
        gbc.writeMem(0xcf89, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe720);
        EXPECT(gbc.pc(), 0xcf8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf89), 0x79);
        // 79 0161
        gbc.setState(0x8197, 0xaef2, 0x930, 0xea60, 0x898e, 0x71e8, 0x0, 0x0);
        gbc.writeMem(0x8197, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xaef2);
        EXPECT(gbc.pc(), 0x8198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8197), 0x79);
        // 79 0162
        gbc.setState(0x7259, 0xadb6, 0xcc60, 0xc47f, 0xc769, 0xaf98, 0x0, 0x0);
        gbc.writeMem(0x7259, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xadb6);
        EXPECT(gbc.pc(), 0x725a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0163
        gbc.setState(0x8d49, 0x3df7, 0x4ad0, 0x39e4, 0xf3ea, 0x60fd, 0x1, 0x0);
        gbc.writeMem(0x8d49, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3df7);
        EXPECT(gbc.pc(), 0x8d4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d49), 0x79);
        // 79 0164
        gbc.setState(0xc4, 0xb87f, 0xb520, 0x2047, 0xc03, 0xf454, 0x1, 0x0);
        gbc.writeMem(0xc4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb87f);
        EXPECT(gbc.pc(), 0xc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0165
        gbc.setState(0x9c6b, 0x3aa, 0xa9f0, 0xee90, 0x3c2d, 0xcacb, 0x1, 0x0);
        gbc.writeMem(0x9c6b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3aa);
        EXPECT(gbc.pc(), 0x9c6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c6b), 0x79);
        // 79 0166
        gbc.setState(0x8d80, 0x768f, 0x9830, 0xa271, 0xf313, 0x17c5, 0x0, 0x0);
        gbc.writeMem(0x8d80, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x768f);
        EXPECT(gbc.pc(), 0x8d81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d80), 0x79);
        // 79 0167
        gbc.setState(0x1469, 0xd121, 0x8440, 0xbcc9, 0xb2ed, 0x900b, 0x0, 0x1);
        gbc.writeMem(0x1469, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd121);
        EXPECT(gbc.pc(), 0x146a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0168
        gbc.setState(0xe902, 0x7da5, 0x1670, 0xe9c, 0x3750, 0xe079, 0x0, 0x0);
        gbc.writeMem(0xe902, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7da5);
        EXPECT(gbc.pc(), 0xe903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe902), 0x79);
        // 79 0169
        gbc.setState(0xcda0, 0x16be, 0x4350, 0x823f, 0x50b3, 0x5384, 0x1, 0x0);
        gbc.writeMem(0xcda0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x16be);
        EXPECT(gbc.pc(), 0xcda1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcda0), 0x79);
        // 79 016B
        gbc.setState(0xa031, 0x90fd, 0x2a80, 0x5dd, 0x884c, 0x35fc, 0x0, 0x0);
        gbc.writeMem(0xa031, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x90fd);
        EXPECT(gbc.pc(), 0xa032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa031), 0x79);
        // 79 016C
        gbc.setState(0xbbd5, 0x50e7, 0x5580, 0x9f05, 0x9e7, 0x50aa, 0x0, 0x0);
        gbc.writeMem(0xbbd5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x50e7);
        EXPECT(gbc.pc(), 0xbbd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbd5), 0x79);
        // 79 016D
        gbc.setState(0x32e3, 0x891c, 0x4e50, 0x61ca, 0x9f27, 0xfefc, 0x0, 0x0);
        gbc.writeMem(0x32e3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x891c);
        EXPECT(gbc.pc(), 0x32e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 016E
        gbc.setState(0x9255, 0x8c61, 0x9190, 0x9bf9, 0xb8f9, 0x93f, 0x1, 0x0);
        gbc.writeMem(0x9255, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8c61);
        EXPECT(gbc.pc(), 0x9256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9255), 0x79);
        // 79 016F
        gbc.setState(0x5703, 0x6515, 0x8ee0, 0xe96d, 0xb550, 0x7ac8, 0x1, 0x1);
        gbc.writeMem(0x5703, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6515);
        EXPECT(gbc.pc(), 0x5704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0170
        gbc.setState(0x32ea, 0xcf01, 0xe330, 0xe65c, 0x52aa, 0x21d0, 0x0, 0x1);
        gbc.writeMem(0x32ea, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xcf01);
        EXPECT(gbc.pc(), 0x32eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0171
        gbc.setState(0x66c6, 0x948d, 0x1390, 0xffeb, 0xdad4, 0x5e0d, 0x0, 0x1);
        gbc.writeMem(0x66c6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x948d);
        EXPECT(gbc.pc(), 0x66c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0172
        gbc.setState(0xacbd, 0xfe6d, 0x8110, 0x290, 0xfa4b, 0x8810, 0x1, 0x0);
        gbc.writeMem(0xacbd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xfe6d);
        EXPECT(gbc.pc(), 0xacbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacbd), 0x79);
        // 79 0173
        gbc.setState(0xc488, 0x698a, 0x3cc0, 0x6230, 0xb675, 0x962c, 0x1, 0x1);
        gbc.writeMem(0xc488, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x698a);
        EXPECT(gbc.pc(), 0xc489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc488), 0x79);
        // 79 0174
        gbc.setState(0x7d7, 0x9348, 0xb380, 0xad79, 0xe730, 0x4ce, 0x1, 0x1);
        gbc.writeMem(0x7d7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9348);
        EXPECT(gbc.pc(), 0x7d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0175
        gbc.setState(0xe5f6, 0xb864, 0xf990, 0x455e, 0xf69e, 0xc37e, 0x1, 0x0);
        gbc.writeMem(0xe5f6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb864);
        EXPECT(gbc.pc(), 0xe5f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5f6), 0x79);
        // 79 0176
        gbc.setState(0x1b6a, 0x3b6, 0x9e20, 0xd9bf, 0x2948, 0xb8d7, 0x1, 0x0);
        gbc.writeMem(0x1b6a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3b6);
        EXPECT(gbc.pc(), 0x1b6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0177
        gbc.setState(0x909e, 0x9714, 0x2b80, 0xcadd, 0xeed4, 0x17e7, 0x0, 0x1);
        gbc.writeMem(0x909e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9714);
        EXPECT(gbc.pc(), 0x909f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x909e), 0x79);
        // 79 0178
        gbc.setState(0x19b2, 0x407, 0x6500, 0x9b2b, 0x244, 0xb027, 0x0, 0x0);
        gbc.writeMem(0x19b2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x407);
        EXPECT(gbc.pc(), 0x19b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0179
        gbc.setState(0xc707, 0x7eb4, 0x82c0, 0xb23b, 0x1eb6, 0xadd2, 0x1, 0x0);
        gbc.writeMem(0xc707, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7eb4);
        EXPECT(gbc.pc(), 0xc708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc707), 0x79);
        // 79 017A
        gbc.setState(0x6259, 0xce32, 0x25e0, 0xfa8, 0xeb95, 0x6527, 0x0, 0x1);
        gbc.writeMem(0x6259, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xce32);
        EXPECT(gbc.pc(), 0x625a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 017B
        gbc.setState(0xdd7a, 0x7451, 0x4440, 0xd8e, 0xc7ef, 0x397a, 0x1, 0x1);
        gbc.writeMem(0xdd7a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7451);
        EXPECT(gbc.pc(), 0xdd7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd7a), 0x79);
        // 79 017C
        gbc.setState(0xe059, 0xa997, 0x40d0, 0x7577, 0xc80, 0x5c07, 0x1, 0x0);
        gbc.writeMem(0xe059, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa997);
        EXPECT(gbc.pc(), 0xe05a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe059), 0x79);
        // 79 017D
        gbc.setState(0xeb86, 0xdc12, 0x1930, 0xf5b3, 0x4884, 0xc450, 0x1, 0x0);
        gbc.writeMem(0xeb86, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xdc12);
        EXPECT(gbc.pc(), 0xeb87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb86), 0x79);
        // 79 017E
        gbc.setState(0xa032, 0x8b3b, 0x78a0, 0xce1b, 0x6d88, 0xe4a5, 0x1, 0x1);
        gbc.writeMem(0xa032, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8b3b);
        EXPECT(gbc.pc(), 0xa033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa032), 0x79);
        // 79 017F
        gbc.setState(0x463d, 0x4540, 0x30a0, 0x707b, 0x8259, 0x5c03, 0x0, 0x1);
        gbc.writeMem(0x463d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4540);
        EXPECT(gbc.pc(), 0x463e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0180
        gbc.setState(0x9322, 0xb207, 0xe10, 0xa63d, 0x76ac, 0x6c81, 0x1, 0x0);
        gbc.writeMem(0x9322, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xb207);
        EXPECT(gbc.pc(), 0x9323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9322), 0x79);
        // 79 0182
        gbc.setState(0x8ba0, 0x7fe4, 0x4b60, 0x554e, 0xd273, 0x8726, 0x1, 0x0);
        gbc.writeMem(0x8ba0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7fe4);
        EXPECT(gbc.pc(), 0x8ba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ba0), 0x79);
        // 79 0183
        gbc.setState(0xb19d, 0xf79f, 0x6c90, 0x1473, 0x947b, 0xf973, 0x0, 0x0);
        gbc.writeMem(0xb19d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf79f);
        EXPECT(gbc.pc(), 0xb19e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb19d), 0x79);
        // 79 0184
        gbc.setState(0xbac9, 0x6735, 0x17d0, 0xbd11, 0x700, 0x6ee9, 0x1, 0x1);
        gbc.writeMem(0xbac9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6735);
        EXPECT(gbc.pc(), 0xbaca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbac9), 0x79);
        // 79 0185
        gbc.setState(0xb20, 0x563b, 0x5310, 0xa60e, 0xebc1, 0xe5e0, 0x0, 0x1);
        gbc.writeMem(0xb20, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x563b);
        EXPECT(gbc.pc(), 0xb21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0186
        gbc.setState(0x5d02, 0x4ad7, 0x2910, 0x7e69, 0xddd7, 0xadd0, 0x0, 0x0);
        gbc.writeMem(0x5d02, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x4ad7);
        EXPECT(gbc.pc(), 0x5d03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0187
        gbc.setState(0x96fc, 0x9774, 0x9440, 0xe42b, 0xc968, 0x47e2, 0x0, 0x1);
        gbc.writeMem(0x96fc, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9774);
        EXPECT(gbc.pc(), 0x96fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96fc), 0x79);
        // 79 0188
        gbc.setState(0xae57, 0x7540, 0x5a00, 0xbe9a, 0x224f, 0xb6a1, 0x0, 0x0);
        gbc.writeMem(0xae57, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7540);
        EXPECT(gbc.pc(), 0xae58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae57), 0x79);
        // 79 0189
        gbc.setState(0x422a, 0x7f38, 0xbe00, 0x81b5, 0x2894, 0x1bac, 0x0, 0x1);
        gbc.writeMem(0x422a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7f38);
        EXPECT(gbc.pc(), 0x422b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 018A
        gbc.setState(0x6b20, 0x472e, 0x6520, 0x77e, 0x92f1, 0xd2b, 0x0, 0x1);
        gbc.writeMem(0x6b20, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x472e);
        EXPECT(gbc.pc(), 0x6b21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 018B
        gbc.setState(0x2303, 0xdfe8, 0x4f0, 0x902d, 0x9baf, 0xbbcc, 0x1, 0x1);
        gbc.writeMem(0x2303, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xdfe8);
        EXPECT(gbc.pc(), 0x2304);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 018C
        gbc.setState(0xc8b2, 0x9714, 0x3d20, 0x3d46, 0x775e, 0xbeb5, 0x1, 0x0);
        gbc.writeMem(0xc8b2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9714);
        EXPECT(gbc.pc(), 0xc8b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8b2), 0x79);
        // 79 018D
        gbc.setState(0x7c36, 0x4545, 0x3cf0, 0x760, 0x7406, 0x5c0f, 0x0, 0x0);
        gbc.writeMem(0x7c36, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4545);
        EXPECT(gbc.pc(), 0x7c37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 018E
        gbc.setState(0x1b7, 0x8364, 0xd2b0, 0x514c, 0x86, 0x3c66, 0x1, 0x1);
        gbc.writeMem(0x1b7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8364);
        EXPECT(gbc.pc(), 0x1b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 018F
        gbc.setState(0xb18b, 0xe70a, 0xa070, 0xc2b, 0xc05d, 0x19e6, 0x0, 0x0);
        gbc.writeMem(0xb18b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe70a);
        EXPECT(gbc.pc(), 0xb18c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb18b), 0x79);
        // 79 0191
        gbc.setState(0x7923, 0x9d4f, 0x510, 0x3956, 0x8f06, 0xe95b, 0x0, 0x0);
        gbc.writeMem(0x7923, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9d4f);
        EXPECT(gbc.pc(), 0x7924);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0192
        gbc.setState(0x85a, 0xccc5, 0x6830, 0x845b, 0x236, 0x25ea, 0x1, 0x0);
        gbc.writeMem(0x85a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xccc5);
        EXPECT(gbc.pc(), 0x85b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0193
        gbc.setState(0x1e0e, 0x50de, 0x6470, 0xf454, 0x509a, 0x156c, 0x1, 0x1);
        gbc.writeMem(0x1e0e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x50de);
        EXPECT(gbc.pc(), 0x1e0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0195
        gbc.setState(0xc727, 0x77dc, 0x89b0, 0x904b, 0x4e01, 0x283f, 0x0, 0x0);
        gbc.writeMem(0xc727, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x77dc);
        EXPECT(gbc.pc(), 0xc728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc727), 0x79);
        // 79 0197
        gbc.setState(0x638e, 0xdf53, 0x76a0, 0xef21, 0x5d15, 0x78f4, 0x1, 0x1);
        gbc.writeMem(0x638e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xdf53);
        EXPECT(gbc.pc(), 0x638f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0198
        gbc.setState(0xb262, 0xc4bd, 0x26a0, 0xd7c7, 0x7789, 0x54d7, 0x0, 0x0);
        gbc.writeMem(0xb262, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc4bd);
        EXPECT(gbc.pc(), 0xb263);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb262), 0x79);
        // 79 0199
        gbc.setState(0x113a, 0x8725, 0x5d70, 0xac37, 0x9ffb, 0x651e, 0x1, 0x1);
        gbc.writeMem(0x113a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8725);
        EXPECT(gbc.pc(), 0x113b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 019A
        gbc.setState(0xce9b, 0xdb50, 0xe5a0, 0x3, 0x5a1b, 0xf2b3, 0x1, 0x0);
        gbc.writeMem(0xce9b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xdb50);
        EXPECT(gbc.pc(), 0xce9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce9b), 0x79);
        // 79 019C
        gbc.setState(0xef4, 0x47ad, 0xb050, 0xdced, 0x60fe, 0xc317, 0x0, 0x1);
        gbc.writeMem(0xef4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x47ad);
        EXPECT(gbc.pc(), 0xef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 019D
        gbc.setState(0xbc88, 0x9635, 0xf520, 0xc2dd, 0xcfa4, 0x5fd2, 0x1, 0x0);
        gbc.writeMem(0xbc88, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9635);
        EXPECT(gbc.pc(), 0xbc89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc88), 0x79);
        // 79 019E
        gbc.setState(0x39cb, 0x860e, 0xfb0, 0x1b9d, 0xe6ca, 0x506d, 0x1, 0x0);
        gbc.writeMem(0x39cb, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x860e);
        EXPECT(gbc.pc(), 0x39cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 019F
        gbc.setState(0xa252, 0xa6d7, 0xd690, 0x8e18, 0x5933, 0x2215, 0x0, 0x0);
        gbc.writeMem(0xa252, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa6d7);
        EXPECT(gbc.pc(), 0xa253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa252), 0x79);
        // 79 01A0
        gbc.setState(0x25bd, 0xbf09, 0xe060, 0x7999, 0xa2c1, 0x9b50, 0x1, 0x1);
        gbc.writeMem(0x25bd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xbf09);
        EXPECT(gbc.pc(), 0x25be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 01A1
        gbc.setState(0x2b4e, 0x3b01, 0xf660, 0xf0b2, 0x48b1, 0xc92e, 0x0, 0x0);
        gbc.writeMem(0x2b4e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3b01);
        EXPECT(gbc.pc(), 0x2b4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 01A2
        gbc.setState(0x4887, 0x48a2, 0xb520, 0xfd96, 0x7155, 0x5b97, 0x0, 0x1);
        gbc.writeMem(0x4887, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x48a2);
        EXPECT(gbc.pc(), 0x4888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 01A3
        gbc.setState(0x9d99, 0x6d90, 0x1400, 0xd907, 0xc047, 0xac75, 0x1, 0x1);
        gbc.writeMem(0x9d99, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6d90);
        EXPECT(gbc.pc(), 0x9d9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d99), 0x79);
        // 79 01A4
        gbc.setState(0x7b91, 0xbff1, 0x3190, 0x2507, 0x6709, 0x5ce1, 0x1, 0x1);
        gbc.writeMem(0x7b91, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xbff1);
        EXPECT(gbc.pc(), 0x7b92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 01A5
        gbc.setState(0xc4d, 0xa3b0, 0xa030, 0x647c, 0xf830, 0x7be7, 0x1, 0x1);
        gbc.writeMem(0xc4d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa3b0);
        EXPECT(gbc.pc(), 0xc4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 01A6
        gbc.setState(0x2f5b, 0x306f, 0x7ab0, 0x50ee, 0xa322, 0x86ac, 0x0, 0x0);
        gbc.writeMem(0x2f5b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x306f);
        EXPECT(gbc.pc(), 0x2f5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 01A7
        gbc.setState(0xaf23, 0xc90, 0x7b10, 0xe2da, 0x7f5b, 0xfbd5, 0x1, 0x1);
        gbc.writeMem(0xaf23, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc90);
        EXPECT(gbc.pc(), 0xaf24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf23), 0x79);
        // 79 01A9
        gbc.setState(0x7a87, 0x6d50, 0xa6b0, 0x4290, 0xe1e2, 0x8b9f, 0x1, 0x1);
        gbc.writeMem(0x7a87, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6d50);
        EXPECT(gbc.pc(), 0x7a88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 01AA
        gbc.setState(0x4b82, 0x61d9, 0x44e0, 0xd132, 0xea26, 0xbe39, 0x0, 0x1);
        gbc.writeMem(0x4b82, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x61d9);
        EXPECT(gbc.pc(), 0x4b83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 01AB
        gbc.setState(0x9207, 0x867f, 0x1c70, 0x2caa, 0xbe9, 0xfdae, 0x0, 0x1);
        gbc.writeMem(0x9207, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x867f);
        EXPECT(gbc.pc(), 0x9208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9207), 0x79);
        // 79 01AC
        gbc.setState(0x7e78, 0x9967, 0x6490, 0xba8f, 0xb227, 0xc464, 0x1, 0x0);
        gbc.writeMem(0x7e78, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9967);
        EXPECT(gbc.pc(), 0x7e79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 01AD
        gbc.setState(0xc656, 0x36a5, 0xb30, 0x224, 0x75af, 0xd90f, 0x0, 0x0);
        gbc.writeMem(0xc656, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x36a5);
        EXPECT(gbc.pc(), 0xc657);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc656), 0x79);
        // 79 01AE
        gbc.setState(0x124b, 0xc0b, 0xa480, 0xd7fa, 0x9168, 0x3883, 0x1, 0x1);
        gbc.writeMem(0x124b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc0b);
        EXPECT(gbc.pc(), 0x124c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 01AF
        gbc.setState(0xbd18, 0xf630, 0xd2f0, 0x727e, 0x3dd2, 0x9629, 0x0, 0x1);
        gbc.writeMem(0xbd18, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf630);
        EXPECT(gbc.pc(), 0xbd19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd18), 0x79);
        // 79 01B0
        gbc.setState(0x469f, 0xbb0b, 0x6a70, 0x9c6e, 0x42fe, 0x7e2b, 0x1, 0x0);
        gbc.writeMem(0x469f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xbb0b);
        EXPECT(gbc.pc(), 0x46a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 01B1
        gbc.setState(0xd8dd, 0xce32, 0x6170, 0x33c, 0xe0e2, 0xe9f3, 0x0, 0x1);
        gbc.writeMem(0xd8dd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xce32);
        EXPECT(gbc.pc(), 0xd8de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8dd), 0x79);
        // 79 01B3
        gbc.setState(0xb422, 0xc732, 0x7790, 0x10b3, 0x12bd, 0xecfa, 0x0, 0x1);
        gbc.writeMem(0xb422, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc732);
        EXPECT(gbc.pc(), 0xb423);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb422), 0x79);
        // 79 01B4
        gbc.setState(0x55e, 0x9c75, 0x5010, 0x6804, 0x44a4, 0xadaf, 0x0, 0x1);
        gbc.writeMem(0x55e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9c75);
        EXPECT(gbc.pc(), 0x55f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 01B5
        gbc.setState(0x850f, 0xd6f6, 0xd70, 0xd363, 0xd569, 0xfcc3, 0x1, 0x1);
        gbc.writeMem(0x850f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd6f6);
        EXPECT(gbc.pc(), 0x8510);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x850f), 0x79);
        // 79 01B6
        gbc.setState(0xc40, 0xc977, 0xd810, 0xd9d, 0x1871, 0x8a85, 0x0, 0x1);
        gbc.writeMem(0xc40, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc977);
        EXPECT(gbc.pc(), 0xc41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 01B7
        gbc.setState(0x3e2d, 0xd981, 0x7a60, 0xdbc, 0x14f5, 0xd5c4, 0x1, 0x0);
        gbc.writeMem(0x3e2d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd981);
        EXPECT(gbc.pc(), 0x3e2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 01B8
        gbc.setState(0xb328, 0xc483, 0x39d0, 0xbb9a, 0x944d, 0x4d96, 0x0, 0x1);
        gbc.writeMem(0xb328, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc483);
        EXPECT(gbc.pc(), 0xb329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb328), 0x79);
        // 79 01B9
        gbc.setState(0x1922, 0xe70b, 0xa040, 0xe402, 0x918d, 0xddf9, 0x1, 0x0);
        gbc.writeMem(0x1922, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe70b);
        EXPECT(gbc.pc(), 0x1923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 01BA
        gbc.setState(0x9880, 0xd317, 0xb4c0, 0xfd47, 0x1d74, 0x9b65, 0x1, 0x0);
        gbc.writeMem(0x9880, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xd317);
        EXPECT(gbc.pc(), 0x9881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9880), 0x79);
        // 79 01BB
        gbc.setState(0xcd2f, 0xcecb, 0xee80, 0xaea, 0x5d0e, 0x29a5, 0x0, 0x1);
        gbc.writeMem(0xcd2f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcecb);
        EXPECT(gbc.pc(), 0xcd30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd2f), 0x79);
        // 79 01BC
        gbc.setState(0x9015, 0x1af4, 0x46d0, 0x2385, 0x16be, 0x25cc, 0x0, 0x0);
        gbc.writeMem(0x9015, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1af4);
        EXPECT(gbc.pc(), 0x9016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9015), 0x79);
        // 79 01BD
        gbc.setState(0x3660, 0x1296, 0x8150, 0x70f8, 0x888c, 0xa16, 0x1, 0x0);
        gbc.writeMem(0x3660, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1296);
        EXPECT(gbc.pc(), 0x3661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 01BE
        gbc.setState(0xbdf1, 0x528c, 0xa9f0, 0x20a7, 0xbab5, 0xbf, 0x1, 0x1);
        gbc.writeMem(0xbdf1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x528c);
        EXPECT(gbc.pc(), 0xbdf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf1), 0x79);
        // 79 01BF
        gbc.setState(0x9820, 0xbe02, 0x1610, 0xc8d9, 0x20fb, 0x5c2a, 0x0, 0x1);
        gbc.writeMem(0x9820, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xbe02);
        EXPECT(gbc.pc(), 0x9821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9820), 0x79);
        // 79 01C0
        gbc.setState(0x35f, 0xf535, 0x9af0, 0xd78d, 0xa053, 0xad8a, 0x1, 0x0);
        gbc.writeMem(0x35f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf535);
        EXPECT(gbc.pc(), 0x360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 01C2
        gbc.setState(0xafbd, 0x277f, 0x3b40, 0x4d57, 0x375d, 0xc2b2, 0x1, 0x1);
        gbc.writeMem(0xafbd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x277f);
        EXPECT(gbc.pc(), 0xafbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafbd), 0x79);
        // 79 01C3
        gbc.setState(0xe8ee, 0x4bb2, 0x160, 0x1c2d, 0xee67, 0xac98, 0x1, 0x0);
        gbc.writeMem(0xe8ee, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4bb2);
        EXPECT(gbc.pc(), 0xe8ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8ee), 0x79);
        // 79 01C4
        gbc.setState(0x2310, 0x31d7, 0xacd0, 0xfb61, 0xe085, 0xd643, 0x1, 0x0);
        gbc.writeMem(0x2310, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x31d7);
        EXPECT(gbc.pc(), 0x2311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 01C5
        gbc.setState(0xe9af, 0xa360, 0x8180, 0x281b, 0xd6ad, 0xe739, 0x0, 0x0);
        gbc.writeMem(0xe9af, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa360);
        EXPECT(gbc.pc(), 0xe9b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9af), 0x79);
        // 79 01C6
        gbc.setState(0x69be, 0xa23d, 0xa730, 0xdc92, 0xe492, 0xdc55, 0x0, 0x1);
        gbc.writeMem(0x69be, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa23d);
        EXPECT(gbc.pc(), 0x69bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 01C7
        gbc.setState(0x78ab, 0xe5dc, 0xffb0, 0xf27e, 0x6fa5, 0xe60f, 0x1, 0x1);
        gbc.writeMem(0x78ab, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe5dc);
        EXPECT(gbc.pc(), 0x78ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 01C8
        gbc.setState(0xe7bc, 0x3170, 0xd870, 0x1361, 0x895d, 0x4aae, 0x0, 0x0);
        gbc.writeMem(0xe7bc, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3170);
        EXPECT(gbc.pc(), 0xe7bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7bc), 0x79);
        // 79 01C9
        gbc.setState(0xc9ad, 0xa6f3, 0xc5f0, 0x8cf3, 0xa20b, 0x2ca2, 0x1, 0x1);
        gbc.writeMem(0xc9ad, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa6f3);
        EXPECT(gbc.pc(), 0xc9ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ad), 0x79);
        // 79 01CA
        gbc.setState(0x6886, 0xc4ed, 0x62e0, 0x5e6f, 0x6847, 0x1362, 0x1, 0x1);
        gbc.writeMem(0x6886, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc4ed);
        EXPECT(gbc.pc(), 0x6887);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 01CB
        gbc.setState(0xc7b2, 0xf990, 0x4f70, 0xc6c5, 0xe777, 0x25d3, 0x1, 0x1);
        gbc.writeMem(0xc7b2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf990);
        EXPECT(gbc.pc(), 0xc7b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b2), 0x79);
        // 79 01CC
        gbc.setState(0x2393, 0x66cc, 0xe9d0, 0x45ea, 0x17d9, 0xb764, 0x1, 0x0);
        gbc.writeMem(0x2393, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x66cc);
        EXPECT(gbc.pc(), 0x2394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 01CD
        gbc.setState(0xb794, 0xbd73, 0x6d90, 0x4df7, 0xd5c8, 0xb410, 0x1, 0x0);
        gbc.writeMem(0xb794, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xbd73);
        EXPECT(gbc.pc(), 0xb795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb794), 0x79);
        // 79 01CE
        gbc.setState(0x19c4, 0x50ce, 0xd990, 0xe27d, 0xeebf, 0xa313, 0x1, 0x0);
        gbc.writeMem(0x19c4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x50ce);
        EXPECT(gbc.pc(), 0x19c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 01CF
        gbc.setState(0x2964, 0xced2, 0x5ab0, 0x1bf3, 0x71c, 0xbe40, 0x1, 0x0);
        gbc.writeMem(0x2964, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xced2);
        EXPECT(gbc.pc(), 0x2965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 01D0
        gbc.setState(0x90, 0x485d, 0x26c0, 0x307a, 0x1ab4, 0xccd4, 0x0, 0x1);
        gbc.writeMem(0x90, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x485d);
        EXPECT(gbc.pc(), 0x91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 01D1
        gbc.setState(0x1da7, 0x97b5, 0xf6d0, 0xef6b, 0x26db, 0x8fa3, 0x1, 0x1);
        gbc.writeMem(0x1da7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x97b5);
        EXPECT(gbc.pc(), 0x1da8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 01D2
        gbc.setState(0x1865, 0x9508, 0xf660, 0xe56c, 0xa112, 0x4985, 0x1, 0x1);
        gbc.writeMem(0x1865, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9508);
        EXPECT(gbc.pc(), 0x1866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 01D3
        gbc.setState(0x87b2, 0x1838, 0xb720, 0x6282, 0xef8e, 0xaa0d, 0x0, 0x1);
        gbc.writeMem(0x87b2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1838);
        EXPECT(gbc.pc(), 0x87b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87b2), 0x79);
        // 79 01D4
        gbc.setState(0xda74, 0xe09, 0x42a0, 0x6a25, 0xae29, 0xb526, 0x0, 0x0);
        gbc.writeMem(0xda74, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe09);
        EXPECT(gbc.pc(), 0xda75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda74), 0x79);
        // 79 01D5
        gbc.setState(0x9109, 0x48de, 0x2b40, 0xc493, 0xbcaa, 0xdee1, 0x1, 0x0);
        gbc.writeMem(0x9109, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x48de);
        EXPECT(gbc.pc(), 0x910a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9109), 0x79);
        // 79 01D7
        gbc.setState(0x8584, 0xa030, 0x1a30, 0x49af, 0xaf3e, 0xbbb6, 0x0, 0x1);
        gbc.writeMem(0x8584, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa030);
        EXPECT(gbc.pc(), 0x8585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8584), 0x79);
        // 79 01D8
        gbc.setState(0xd966, 0xf21, 0x3f80, 0x953d, 0xe6c8, 0xb203, 0x0, 0x1);
        gbc.writeMem(0xd966, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf21);
        EXPECT(gbc.pc(), 0xd967);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd966), 0x79);
        // 79 01D9
        gbc.setState(0xd931, 0x8769, 0xa480, 0x4aa9, 0xf86c, 0xb51a, 0x0, 0x0);
        gbc.writeMem(0xd931, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8769);
        EXPECT(gbc.pc(), 0xd932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd931), 0x79);
        // 79 01DA
        gbc.setState(0x1f0e, 0xab88, 0xb280, 0xb2af, 0xed1b, 0x9f88, 0x0, 0x1);
        gbc.writeMem(0x1f0e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xab88);
        EXPECT(gbc.pc(), 0x1f0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 01DB
        gbc.setState(0x4754, 0x603c, 0x47d0, 0x85c0, 0xf1e9, 0x3c4d, 0x1, 0x1);
        gbc.writeMem(0x4754, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x603c);
        EXPECT(gbc.pc(), 0x4755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 01DC
        gbc.setState(0x8b53, 0xf20a, 0x8190, 0x8026, 0xa0dd, 0x354d, 0x1, 0x1);
        gbc.writeMem(0x8b53, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf20a);
        EXPECT(gbc.pc(), 0x8b54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b53), 0x79);
        // 79 01DD
        gbc.setState(0x3d24, 0x85d1, 0x12a0, 0xe714, 0xbf9c, 0x67a0, 0x1, 0x1);
        gbc.writeMem(0x3d24, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x85d1);
        EXPECT(gbc.pc(), 0x3d25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 01DE
        gbc.setState(0xb551, 0x4809, 0x2780, 0xccf7, 0xdd0d, 0x9937, 0x1, 0x0);
        gbc.writeMem(0xb551, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4809);
        EXPECT(gbc.pc(), 0xb552);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb551), 0x79);
        // 79 01DF
        gbc.setState(0x637a, 0x784b, 0xf2d0, 0xcc4f, 0x3b0d, 0xcd4, 0x0, 0x1);
        gbc.writeMem(0x637a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x784b);
        EXPECT(gbc.pc(), 0x637b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 01E0
        gbc.setState(0xe463, 0xdfa3, 0x7a90, 0xb34e, 0x4d4e, 0x3f70, 0x0, 0x0);
        gbc.writeMem(0xe463, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xdfa3);
        EXPECT(gbc.pc(), 0xe464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe463), 0x79);
        // 79 01E1
        gbc.setState(0xeba3, 0xde45, 0xb550, 0x4921, 0xae32, 0xdba5, 0x1, 0x1);
        gbc.writeMem(0xeba3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xde45);
        EXPECT(gbc.pc(), 0xeba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeba3), 0x79);
        // 79 01E3
        gbc.setState(0x7644, 0xe7ec, 0x4dc0, 0xe551, 0xa67, 0x4be1, 0x1, 0x0);
        gbc.writeMem(0x7644, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe7ec);
        EXPECT(gbc.pc(), 0x7645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 01E4
        gbc.setState(0x1758, 0x887b, 0x32d0, 0xc380, 0xdd7b, 0x29f1, 0x0, 0x1);
        gbc.writeMem(0x1758, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x887b);
        EXPECT(gbc.pc(), 0x1759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 01E5
        gbc.setState(0x3f08, 0xffbe, 0x290, 0xcf9f, 0xe493, 0x65f1, 0x1, 0x0);
        gbc.writeMem(0x3f08, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xffbe);
        EXPECT(gbc.pc(), 0x3f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 01E6
        gbc.setState(0x157e, 0xc07b, 0x2b40, 0x9e7e, 0x22dc, 0x643c, 0x1, 0x1);
        gbc.writeMem(0x157e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc07b);
        EXPECT(gbc.pc(), 0x157f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 01E7
        gbc.setState(0x9bfe, 0x941, 0x63c0, 0x881, 0x82a6, 0xd903, 0x1, 0x1);
        gbc.writeMem(0x9bfe, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x941);
        EXPECT(gbc.pc(), 0x9bff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bfe), 0x79);
        // 79 01E8
        gbc.setState(0xde9a, 0x11f8, 0x4b70, 0x3bfe, 0x9a3c, 0x8e55, 0x0, 0x1);
        gbc.writeMem(0xde9a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x11f8);
        EXPECT(gbc.pc(), 0xde9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde9a), 0x79);
        // 79 01EA
        gbc.setState(0x61e2, 0x956c, 0x34f0, 0x253c, 0xb01d, 0x4a69, 0x1, 0x1);
        gbc.writeMem(0x61e2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x956c);
        EXPECT(gbc.pc(), 0x61e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 01EB
        gbc.setState(0x394c, 0xb4dc, 0x55b0, 0x6b78, 0x6873, 0x9503, 0x0, 0x0);
        gbc.writeMem(0x394c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb4dc);
        EXPECT(gbc.pc(), 0x394d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 01EC
        gbc.setState(0xafe3, 0x5b85, 0xc8d0, 0xdd84, 0x3cb3, 0xb684, 0x0, 0x0);
        gbc.writeMem(0xafe3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5b85);
        EXPECT(gbc.pc(), 0xafe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe3), 0x79);
        // 79 01ED
        gbc.setState(0x375b, 0x41c4, 0x5710, 0xcbf0, 0xda43, 0xf821, 0x1, 0x1);
        gbc.writeMem(0x375b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x41c4);
        EXPECT(gbc.pc(), 0x375c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 01EE
        gbc.setState(0x6913, 0xb12, 0x3cd0, 0x342, 0xa350, 0x2e05, 0x1, 0x0);
        gbc.writeMem(0x6913, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb12);
        EXPECT(gbc.pc(), 0x6914);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 01EF
        gbc.setState(0x793d, 0x433, 0xde40, 0x79ce, 0xfa18, 0x1e37, 0x1, 0x0);
        gbc.writeMem(0x793d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x433);
        EXPECT(gbc.pc(), 0x793e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 01F0
        gbc.setState(0x52a5, 0x89b1, 0x3b40, 0xc78b, 0x4341, 0x8a0c, 0x1, 0x1);
        gbc.writeMem(0x52a5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x89b1);
        EXPECT(gbc.pc(), 0x52a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 01F1
        gbc.setState(0x4591, 0xd114, 0xcac0, 0x14b9, 0x76cc, 0x45e4, 0x1, 0x0);
        gbc.writeMem(0x4591, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd114);
        EXPECT(gbc.pc(), 0x4592);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 01F2
        gbc.setState(0x9be0, 0xd977, 0xb000, 0x9084, 0xe4f2, 0x1b30, 0x1, 0x1);
        gbc.writeMem(0x9be0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd977);
        EXPECT(gbc.pc(), 0x9be1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9be0), 0x79);
        // 79 01F3
        gbc.setState(0xefec, 0xfe6a, 0x5770, 0x85f7, 0x7e78, 0x816d, 0x1, 0x1);
        gbc.writeMem(0xefec, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xfe6a);
        EXPECT(gbc.pc(), 0xefed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefec), 0x79);
        // 79 01F4
        gbc.setState(0x5d49, 0xcf11, 0xeb20, 0xd1f, 0xf50c, 0x99fc, 0x1, 0x1);
        gbc.writeMem(0x5d49, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xcf11);
        EXPECT(gbc.pc(), 0x5d4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 01F5
        gbc.setState(0xb2ca, 0xc3be, 0x1fb0, 0xf0f3, 0x5db7, 0x3457, 0x1, 0x1);
        gbc.writeMem(0xb2ca, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc3be);
        EXPECT(gbc.pc(), 0xb2cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ca), 0x79);
        // 79 01F6
        gbc.setState(0x7b4d, 0x50fe, 0xd040, 0x3415, 0x5433, 0x9095, 0x1, 0x0);
        gbc.writeMem(0x7b4d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x50fe);
        EXPECT(gbc.pc(), 0x7b4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 01F7
        gbc.setState(0xa03a, 0x265d, 0x5a80, 0xd518, 0xf594, 0xa91f, 0x1, 0x0);
        gbc.writeMem(0xa03a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x265d);
        EXPECT(gbc.pc(), 0xa03b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa03a), 0x79);
        // 79 01F8
        gbc.setState(0x9801, 0x6eee, 0xbe70, 0x2117, 0xddf6, 0x6d10, 0x0, 0x0);
        gbc.writeMem(0x9801, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6eee);
        EXPECT(gbc.pc(), 0x9802);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9801), 0x79);
        // 79 01F9
        gbc.setState(0xb31f, 0x6588, 0x3cd0, 0x61b1, 0xa32f, 0xed8, 0x1, 0x0);
        gbc.writeMem(0xb31f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6588);
        EXPECT(gbc.pc(), 0xb320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb31f), 0x79);
        // 79 01FA
        gbc.setState(0xdf88, 0xd07e, 0x9260, 0x89fd, 0x9db6, 0xcc1e, 0x1, 0x1);
        gbc.writeMem(0xdf88, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xd07e);
        EXPECT(gbc.pc(), 0xdf89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf88), 0x79);
        // 79 01FC
        gbc.setState(0xbb4d, 0xf257, 0xf130, 0x9168, 0x562b, 0x4ec2, 0x0, 0x1);
        gbc.writeMem(0xbb4d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf257);
        EXPECT(gbc.pc(), 0xbb4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb4d), 0x79);
        // 79 01FD
        gbc.setState(0xbe51, 0x90aa, 0xcd70, 0xed64, 0x481c, 0x4b65, 0x0, 0x1);
        gbc.writeMem(0xbe51, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x90aa);
        EXPECT(gbc.pc(), 0xbe52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe51), 0x79);
        // 79 01FF
        gbc.setState(0x3262, 0x248d, 0x7830, 0x37b2, 0x6382, 0x799f, 0x1, 0x0);
        gbc.writeMem(0x3262, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x248d);
        EXPECT(gbc.pc(), 0x3263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0200
        gbc.setState(0xc3d1, 0xb7f7, 0x12b0, 0xd3f5, 0x776a, 0x97b5, 0x0, 0x0);
        gbc.writeMem(0xc3d1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb7f7);
        EXPECT(gbc.pc(), 0xc3d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3d1), 0x79);
        // 79 0201
        gbc.setState(0x548b, 0xcb24, 0x39a0, 0x7ee, 0x7038, 0xe69, 0x0, 0x1);
        gbc.writeMem(0x548b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xcb24);
        EXPECT(gbc.pc(), 0x548c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0202
        gbc.setState(0xd96d, 0xb4d0, 0x2870, 0x415, 0x692c, 0xbf19, 0x1, 0x0);
        gbc.writeMem(0xd96d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb4d0);
        EXPECT(gbc.pc(), 0xd96e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd96d), 0x79);
        // 79 0203
        gbc.setState(0xe8cb, 0xcba9, 0x9210, 0xfeab, 0x27d4, 0xa5c4, 0x1, 0x1);
        gbc.writeMem(0xe8cb, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xcba9);
        EXPECT(gbc.pc(), 0xe8cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8cb), 0x79);
        // 79 0204
        gbc.setState(0x5c10, 0x4f9a, 0x8a70, 0x1375, 0x1ab2, 0xbc11, 0x0, 0x1);
        gbc.writeMem(0x5c10, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4f9a);
        EXPECT(gbc.pc(), 0x5c11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0205
        gbc.setState(0x4293, 0xadf3, 0x2d00, 0x407, 0x90de, 0x8803, 0x0, 0x1);
        gbc.writeMem(0x4293, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xadf3);
        EXPECT(gbc.pc(), 0x4294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0206
        gbc.setState(0x9e3c, 0x3016, 0x9960, 0xd07b, 0x9bd, 0xfbfb, 0x0, 0x1);
        gbc.writeMem(0x9e3c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3016);
        EXPECT(gbc.pc(), 0x9e3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e3c), 0x79);
        // 79 0207
        gbc.setState(0x5006, 0x3a06, 0x4790, 0xad30, 0xb41e, 0x759d, 0x0, 0x1);
        gbc.writeMem(0x5006, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3a06);
        EXPECT(gbc.pc(), 0x5007);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0209
        gbc.setState(0x9bae, 0x82d5, 0x4250, 0xf4a5, 0x306f, 0xb929, 0x0, 0x1);
        gbc.writeMem(0x9bae, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x82d5);
        EXPECT(gbc.pc(), 0x9baf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bae), 0x79);
        // 79 020A
        gbc.setState(0xd586, 0x9460, 0x6840, 0x4b46, 0xf859, 0x8f18, 0x1, 0x0);
        gbc.writeMem(0xd586, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9460);
        EXPECT(gbc.pc(), 0xd587);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd586), 0x79);
        // 79 020B
        gbc.setState(0xba31, 0x9903, 0x16c0, 0xb3a9, 0x15ae, 0xc03c, 0x1, 0x1);
        gbc.writeMem(0xba31, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9903);
        EXPECT(gbc.pc(), 0xba32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba31), 0x79);
        // 79 020C
        gbc.setState(0x9146, 0x4017, 0x19d0, 0x1b3f, 0x8da1, 0x60ec, 0x0, 0x1);
        gbc.writeMem(0x9146, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4017);
        EXPECT(gbc.pc(), 0x9147);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9146), 0x79);
        // 79 020D
        gbc.setState(0xa1e1, 0x64ad, 0xd4b0, 0xf777, 0x4d90, 0xe933, 0x1, 0x1);
        gbc.writeMem(0xa1e1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x64ad);
        EXPECT(gbc.pc(), 0xa1e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1e1), 0x79);
        // 79 020E
        gbc.setState(0x2cd3, 0x87ea, 0x6f10, 0x8bcf, 0x79de, 0x40f9, 0x1, 0x0);
        gbc.writeMem(0x2cd3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x87ea);
        EXPECT(gbc.pc(), 0x2cd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 020F
        gbc.setState(0x157c, 0xac7d, 0x3030, 0xbccb, 0x3c37, 0x1fb0, 0x1, 0x0);
        gbc.writeMem(0x157c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xac7d);
        EXPECT(gbc.pc(), 0x157d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0210
        gbc.setState(0x48a6, 0x4fe3, 0x6d70, 0xcda9, 0x1f37, 0xf4b, 0x0, 0x0);
        gbc.writeMem(0x48a6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4fe3);
        EXPECT(gbc.pc(), 0x48a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0211
        gbc.setState(0x7904, 0xcfa9, 0x83c0, 0xc00d, 0x37a3, 0xac9d, 0x0, 0x0);
        gbc.writeMem(0x7904, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xcfa9);
        EXPECT(gbc.pc(), 0x7905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0212
        gbc.setState(0xad5e, 0xee36, 0x2ea0, 0x285b, 0xeced, 0x4491, 0x0, 0x1);
        gbc.writeMem(0xad5e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xee36);
        EXPECT(gbc.pc(), 0xad5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad5e), 0x79);
        // 79 0213
        gbc.setState(0xeeb9, 0x40d7, 0xe840, 0x28ac, 0xd06a, 0x6a0f, 0x1, 0x1);
        gbc.writeMem(0xeeb9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x40d7);
        EXPECT(gbc.pc(), 0xeeba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeb9), 0x79);
        // 79 0214
        gbc.setState(0x404f, 0x94fb, 0xba0, 0x618c, 0xd514, 0xa47a, 0x1, 0x0);
        gbc.writeMem(0x404f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x94fb);
        EXPECT(gbc.pc(), 0x4050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0215
        gbc.setState(0x5ea, 0x25c3, 0x3150, 0x7151, 0x9863, 0xf65a, 0x1, 0x0);
        gbc.writeMem(0x5ea, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x25c3);
        EXPECT(gbc.pc(), 0x5eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0216
        gbc.setState(0x7a2f, 0xec55, 0x37b0, 0x9d59, 0xc423, 0x5e47, 0x1, 0x1);
        gbc.writeMem(0x7a2f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xec55);
        EXPECT(gbc.pc(), 0x7a30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0217
        gbc.setState(0xb73c, 0x72e, 0x9c20, 0xdc04, 0x7733, 0xe8bb, 0x0, 0x0);
        gbc.writeMem(0xb73c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x72e);
        EXPECT(gbc.pc(), 0xb73d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb73c), 0x79);
        // 79 0219
        gbc.setState(0xcbec, 0x125, 0xc4a0, 0x8b21, 0xaa4b, 0x89c6, 0x0, 0x1);
        gbc.writeMem(0xcbec, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x125);
        EXPECT(gbc.pc(), 0xcbed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbec), 0x79);
        // 79 021A
        gbc.setState(0x2b5, 0xb2a0, 0xef00, 0xa01e, 0x5806, 0xdb83, 0x0, 0x1);
        gbc.writeMem(0x2b5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb2a0);
        EXPECT(gbc.pc(), 0x2b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 021B
        gbc.setState(0x90f4, 0x79af, 0x7910, 0x171b, 0x680d, 0x6986, 0x0, 0x1);
        gbc.writeMem(0x90f4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x79af);
        EXPECT(gbc.pc(), 0x90f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f4), 0x79);
        // 79 021D
        gbc.setState(0x7bf6, 0x3d5a, 0x3b10, 0xe7f0, 0xa40d, 0x926b, 0x0, 0x0);
        gbc.writeMem(0x7bf6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3d5a);
        EXPECT(gbc.pc(), 0x7bf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 021E
        gbc.setState(0xa405, 0x6899, 0xe4d0, 0x99a5, 0xbcb7, 0x7ec7, 0x0, 0x1);
        gbc.writeMem(0xa405, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6899);
        EXPECT(gbc.pc(), 0xa406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa405), 0x79);
        // 79 021F
        gbc.setState(0x8459, 0x4da, 0xfff0, 0xd4f0, 0x76f, 0x71ee, 0x0, 0x1);
        gbc.writeMem(0x8459, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4da);
        EXPECT(gbc.pc(), 0x845a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8459), 0x79);
        // 79 0220
        gbc.setState(0xd201, 0xc216, 0xd40, 0x61cd, 0xd716, 0xb673, 0x0, 0x0);
        gbc.writeMem(0xd201, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc216);
        EXPECT(gbc.pc(), 0xd202);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd201), 0x79);
        // 79 0221
        gbc.setState(0x167c, 0x6081, 0x37c0, 0x31ba, 0xf0c8, 0xa7e7, 0x0, 0x1);
        gbc.writeMem(0x167c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x6081);
        EXPECT(gbc.pc(), 0x167d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0222
        gbc.setState(0x3cb, 0x44d3, 0x76d0, 0xd4d7, 0x7154, 0xbbbc, 0x1, 0x1);
        gbc.writeMem(0x3cb, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x44d3);
        EXPECT(gbc.pc(), 0x3cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0223
        gbc.setState(0xc736, 0x91a, 0x46b0, 0x242d, 0xf8fe, 0x51bb, 0x0, 0x1);
        gbc.writeMem(0xc736, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x91a);
        EXPECT(gbc.pc(), 0xc737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc736), 0x79);
        // 79 0224
        gbc.setState(0x76da, 0x9c61, 0x2b00, 0x6684, 0x3d05, 0xa4fd, 0x0, 0x1);
        gbc.writeMem(0x76da, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9c61);
        EXPECT(gbc.pc(), 0x76db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0225
        gbc.setState(0xa36d, 0x5e18, 0x3170, 0xacee, 0x1857, 0xbab5, 0x0, 0x0);
        gbc.writeMem(0xa36d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5e18);
        EXPECT(gbc.pc(), 0xa36e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa36d), 0x79);
        // 79 0226
        gbc.setState(0x30a7, 0x5fe0, 0x3c80, 0xf56b, 0xcb50, 0xb8ab, 0x0, 0x1);
        gbc.writeMem(0x30a7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5fe0);
        EXPECT(gbc.pc(), 0x30a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0227
        gbc.setState(0x7a8a, 0xf92b, 0x3050, 0xb0b8, 0xcad6, 0x6bf, 0x1, 0x0);
        gbc.writeMem(0x7a8a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf92b);
        EXPECT(gbc.pc(), 0x7a8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0229
        gbc.setState(0xd1ee, 0xdbb6, 0x6030, 0x5dcf, 0x2364, 0xcfe1, 0x0, 0x1);
        gbc.writeMem(0xd1ee, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xdbb6);
        EXPECT(gbc.pc(), 0xd1ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ee), 0x79);
        // 79 022A
        gbc.setState(0x2f60, 0xa65f, 0xd2d0, 0x4b83, 0xe75f, 0x2ecd, 0x0, 0x1);
        gbc.writeMem(0x2f60, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa65f);
        EXPECT(gbc.pc(), 0x2f61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 022B
        gbc.setState(0xe6c0, 0x66ce, 0xd300, 0x7e55, 0x69e8, 0xd818, 0x1, 0x1);
        gbc.writeMem(0xe6c0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x66ce);
        EXPECT(gbc.pc(), 0xe6c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6c0), 0x79);
        // 79 022C
        gbc.setState(0x716d, 0x9fcc, 0x1410, 0x4ae6, 0x750c, 0x5cfb, 0x0, 0x1);
        gbc.writeMem(0x716d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9fcc);
        EXPECT(gbc.pc(), 0x716e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 022D
        gbc.setState(0xd9b3, 0x164c, 0x7da0, 0x4086, 0xb0c3, 0xc298, 0x0, 0x0);
        gbc.writeMem(0xd9b3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x164c);
        EXPECT(gbc.pc(), 0xd9b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9b3), 0x79);
        // 79 022E
        gbc.setState(0xce32, 0x57c8, 0x1320, 0xa6ff, 0xc781, 0x38de, 0x1, 0x1);
        gbc.writeMem(0xce32, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x57c8);
        EXPECT(gbc.pc(), 0xce33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce32), 0x79);
        // 79 022F
        gbc.setState(0x185d, 0x4d7f, 0xd4d0, 0xfed8, 0x41c7, 0x84cc, 0x1, 0x1);
        gbc.writeMem(0x185d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4d7f);
        EXPECT(gbc.pc(), 0x185e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0230
        gbc.setState(0xbc98, 0x12ea, 0xf360, 0xfe4b, 0x62de, 0xdce8, 0x0, 0x1);
        gbc.writeMem(0xbc98, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x12ea);
        EXPECT(gbc.pc(), 0xbc99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc98), 0x79);
        // 79 0231
        gbc.setState(0xa1d8, 0x1aa1, 0xc840, 0xe55b, 0x6cc5, 0x4eb1, 0x0, 0x1);
        gbc.writeMem(0xa1d8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1aa1);
        EXPECT(gbc.pc(), 0xa1d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1d8), 0x79);
        // 79 0233
        gbc.setState(0x3813, 0x7dd0, 0xd290, 0xfcf0, 0x71ca, 0xd68b, 0x1, 0x1);
        gbc.writeMem(0x3813, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7dd0);
        EXPECT(gbc.pc(), 0x3814);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0234
        gbc.setState(0x2108, 0xed41, 0xdf0, 0xa471, 0x1c20, 0x94cd, 0x0, 0x0);
        gbc.writeMem(0x2108, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xed41);
        EXPECT(gbc.pc(), 0x2109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0235
        gbc.setState(0xb742, 0xc5b0, 0xe5d0, 0x8987, 0xf7a, 0xeec8, 0x1, 0x0);
        gbc.writeMem(0xb742, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc5b0);
        EXPECT(gbc.pc(), 0xb743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb742), 0x79);
        // 79 0236
        gbc.setState(0xc13e, 0x3b1c, 0x95b0, 0xf794, 0xf501, 0x50c0, 0x1, 0x0);
        gbc.writeMem(0xc13e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3b1c);
        EXPECT(gbc.pc(), 0xc13f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc13e), 0x79);
        // 79 0237
        gbc.setState(0xbf58, 0xf1a8, 0xfc60, 0xe2a4, 0xa720, 0x4c5d, 0x1, 0x0);
        gbc.writeMem(0xbf58, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf1a8);
        EXPECT(gbc.pc(), 0xbf59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf58), 0x79);
        // 79 0238
        gbc.setState(0x4bf7, 0x8137, 0x54a0, 0x7e57, 0xf940, 0xb7fa, 0x1, 0x1);
        gbc.writeMem(0x4bf7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8137);
        EXPECT(gbc.pc(), 0x4bf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0239
        gbc.setState(0x1763, 0x7599, 0x4bc0, 0x20ee, 0x2c47, 0xdb65, 0x0, 0x0);
        gbc.writeMem(0x1763, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7599);
        EXPECT(gbc.pc(), 0x1764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 023A
        gbc.setState(0x3707, 0xc4b3, 0xc290, 0x9f35, 0x30cd, 0x1d69, 0x0, 0x1);
        gbc.writeMem(0x3707, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xc4b3);
        EXPECT(gbc.pc(), 0x3708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 023B
        gbc.setState(0x64da, 0x2c2a, 0x6ee0, 0xd171, 0xefcf, 0x4415, 0x1, 0x1);
        gbc.writeMem(0x64da, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2c2a);
        EXPECT(gbc.pc(), 0x64db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 023C
        gbc.setState(0xbaf8, 0xff00, 0xe2d0, 0x765, 0x6de4, 0xfb8a, 0x0, 0x0);
        gbc.writeMem(0xbaf8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xff00);
        EXPECT(gbc.pc(), 0xbaf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaf8), 0x79);
        // 79 023D
        gbc.setState(0xac55, 0x4606, 0x42a0, 0x64d0, 0x3aa3, 0xe07f, 0x1, 0x0);
        gbc.writeMem(0xac55, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x4606);
        EXPECT(gbc.pc(), 0xac56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac55), 0x79);
        // 79 023E
        gbc.setState(0xc9ba, 0x955b, 0xe6d0, 0x3240, 0x79dd, 0xc46b, 0x1, 0x1);
        gbc.writeMem(0xc9ba, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x955b);
        EXPECT(gbc.pc(), 0xc9bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ba), 0x79);
        // 79 023F
        gbc.setState(0x14cb, 0xdfd9, 0x4c20, 0x99c7, 0x1ab6, 0x60ab, 0x0, 0x0);
        gbc.writeMem(0x14cb, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xdfd9);
        EXPECT(gbc.pc(), 0x14cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0240
        gbc.setState(0x21a2, 0xeda1, 0xe7b0, 0xfe93, 0xd030, 0xb02f, 0x1, 0x0);
        gbc.writeMem(0x21a2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xeda1);
        EXPECT(gbc.pc(), 0x21a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0241
        gbc.setState(0x8765, 0x3b86, 0x84b0, 0x4a8a, 0x99fa, 0xe9c2, 0x0, 0x0);
        gbc.writeMem(0x8765, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3b86);
        EXPECT(gbc.pc(), 0x8766);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8765), 0x79);
        // 79 0242
        gbc.setState(0xd71b, 0xb92c, 0x5cf0, 0x4191, 0x2aa8, 0x7b83, 0x1, 0x1);
        gbc.writeMem(0xd71b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb92c);
        EXPECT(gbc.pc(), 0xd71c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd71b), 0x79);
        // 79 0243
        gbc.setState(0x7db0, 0x6fcc, 0xf720, 0x6e84, 0x7c02, 0xfee4, 0x1, 0x0);
        gbc.writeMem(0x7db0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6fcc);
        EXPECT(gbc.pc(), 0x7db1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0244
        gbc.setState(0x2b70, 0x1bea, 0xeac0, 0x378a, 0x6137, 0x25e4, 0x0, 0x1);
        gbc.writeMem(0x2b70, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1bea);
        EXPECT(gbc.pc(), 0x2b71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0245
        gbc.setState(0x80b2, 0xa1ab, 0x9eb0, 0x792c, 0x4dc7, 0x8866, 0x1, 0x1);
        gbc.writeMem(0x80b2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa1ab);
        EXPECT(gbc.pc(), 0x80b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80b2), 0x79);
        // 79 0246
        gbc.setState(0x2ebe, 0xaaf1, 0x2630, 0x1c1e, 0x710, 0x580f, 0x1, 0x1);
        gbc.writeMem(0x2ebe, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xaaf1);
        EXPECT(gbc.pc(), 0x2ebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0247
        gbc.setState(0xeb49, 0xebba, 0xa5a0, 0x1b27, 0xc738, 0x78e7, 0x1, 0x0);
        gbc.writeMem(0xeb49, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xebba);
        EXPECT(gbc.pc(), 0xeb4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb49), 0x79);
        // 79 0248
        gbc.setState(0x4142, 0x708c, 0x41e0, 0x5aa4, 0x3445, 0x5cba, 0x0, 0x0);
        gbc.writeMem(0x4142, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x708c);
        EXPECT(gbc.pc(), 0x4143);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0249
        gbc.setState(0x430e, 0x5504, 0xd850, 0x1ec4, 0xa7ad, 0x34d2, 0x1, 0x0);
        gbc.writeMem(0x430e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5504);
        EXPECT(gbc.pc(), 0x430f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 024A
        gbc.setState(0x57e7, 0x25df, 0x7e70, 0xa26, 0x39b6, 0x6228, 0x1, 0x1);
        gbc.writeMem(0x57e7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x25df);
        EXPECT(gbc.pc(), 0x57e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 024B
        gbc.setState(0xacf7, 0xe0dd, 0xf90, 0xee1e, 0x8016, 0xb796, 0x1, 0x0);
        gbc.writeMem(0xacf7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe0dd);
        EXPECT(gbc.pc(), 0xacf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacf7), 0x79);
        // 79 024C
        gbc.setState(0x293b, 0x8639, 0xba30, 0x6186, 0xc4ba, 0x9570, 0x0, 0x1);
        gbc.writeMem(0x293b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8639);
        EXPECT(gbc.pc(), 0x293c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 024D
        gbc.setState(0x781a, 0x8129, 0x8f0, 0xa8c9, 0x6ee5, 0x6a1b, 0x0, 0x0);
        gbc.writeMem(0x781a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8129);
        EXPECT(gbc.pc(), 0x781b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 024E
        gbc.setState(0x722f, 0x616a, 0xab40, 0x5bbb, 0x50b8, 0x99a4, 0x1, 0x0);
        gbc.writeMem(0x722f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x616a);
        EXPECT(gbc.pc(), 0x7230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 024F
        gbc.setState(0x4b97, 0xa0b, 0x7f70, 0xfbb4, 0x9432, 0x20c1, 0x1, 0x0);
        gbc.writeMem(0x4b97, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa0b);
        EXPECT(gbc.pc(), 0x4b98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0250
        gbc.setState(0x976c, 0xbad0, 0xb160, 0x3da0, 0x2dfb, 0x57d, 0x1, 0x0);
        gbc.writeMem(0x976c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xbad0);
        EXPECT(gbc.pc(), 0x976d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x976c), 0x79);
        // 79 0251
        gbc.setState(0x38b5, 0x5c87, 0x8570, 0xedf5, 0x8d1b, 0x9185, 0x0, 0x0);
        gbc.writeMem(0x38b5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5c87);
        EXPECT(gbc.pc(), 0x38b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0252
        gbc.setState(0x400, 0x6fe5, 0xbe40, 0x33d7, 0x2df2, 0xad52, 0x0, 0x1);
        gbc.writeMem(0x400, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6fe5);
        EXPECT(gbc.pc(), 0x401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0253
        gbc.setState(0xdb21, 0x605a, 0xe5f0, 0x7f3c, 0xf045, 0x8227, 0x1, 0x0);
        gbc.writeMem(0xdb21, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x605a);
        EXPECT(gbc.pc(), 0xdb22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb21), 0x79);
        // 79 0254
        gbc.setState(0x4c4e, 0xcfa9, 0x41a0, 0xa01f, 0x6f3b, 0xac78, 0x0, 0x1);
        gbc.writeMem(0x4c4e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xcfa9);
        EXPECT(gbc.pc(), 0x4c4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0255
        gbc.setState(0x3967, 0xde4f, 0x92a0, 0x30b5, 0xf27, 0x79a4, 0x1, 0x0);
        gbc.writeMem(0x3967, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xde4f);
        EXPECT(gbc.pc(), 0x3968);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0256
        gbc.setState(0xa44f, 0x757c, 0x84f0, 0x7822, 0xa7a9, 0x88ec, 0x0, 0x1);
        gbc.writeMem(0xa44f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x757c);
        EXPECT(gbc.pc(), 0xa450);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa44f), 0x79);
        // 79 0257
        gbc.setState(0x654a, 0x41bf, 0xe2b0, 0x2f94, 0xe1d2, 0x9d79, 0x0, 0x1);
        gbc.writeMem(0x654a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x41bf);
        EXPECT(gbc.pc(), 0x654b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0258
        gbc.setState(0x8f4d, 0xdc14, 0xcb0, 0x141b, 0xcbc5, 0x5356, 0x0, 0x1);
        gbc.writeMem(0x8f4d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xdc14);
        EXPECT(gbc.pc(), 0x8f4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f4d), 0x79);
        // 79 0259
        gbc.setState(0x5cc6, 0xd954, 0xa6b0, 0xf8ff, 0xbbb5, 0x2866, 0x1, 0x0);
        gbc.writeMem(0x5cc6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd954);
        EXPECT(gbc.pc(), 0x5cc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 025A
        gbc.setState(0x4840, 0x2e5c, 0x5d30, 0xcef0, 0x8e1a, 0x8dd5, 0x0, 0x1);
        gbc.writeMem(0x4840, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2e5c);
        EXPECT(gbc.pc(), 0x4841);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 025B
        gbc.setState(0x2b41, 0x125d, 0xed20, 0xebda, 0x914c, 0xc42, 0x0, 0x0);
        gbc.writeMem(0x2b41, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x125d);
        EXPECT(gbc.pc(), 0x2b42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 025C
        gbc.setState(0xc9ea, 0xefc0, 0x1790, 0xb633, 0x79e9, 0xd370, 0x0, 0x1);
        gbc.writeMem(0xc9ea, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xefc0);
        EXPECT(gbc.pc(), 0xc9eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ea), 0x79);
        // 79 025D
        gbc.setState(0xb068, 0x8a8e, 0x65d0, 0x9f62, 0xe02e, 0x8eb6, 0x0, 0x1);
        gbc.writeMem(0xb068, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8a8e);
        EXPECT(gbc.pc(), 0xb069);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb068), 0x79);
        // 79 025E
        gbc.setState(0x3ed6, 0x10f0, 0xa7d0, 0xf1a3, 0xd, 0xb575, 0x0, 0x0);
        gbc.writeMem(0x3ed6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x10f0);
        EXPECT(gbc.pc(), 0x3ed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 025F
        gbc.setState(0xe83b, 0x70e6, 0x27e0, 0xc42, 0x7e58, 0x1e7, 0x0, 0x1);
        gbc.writeMem(0xe83b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x70e6);
        EXPECT(gbc.pc(), 0xe83c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe83b), 0x79);
        // 79 0260
        gbc.setState(0x1ba4, 0x4fb5, 0xdb30, 0xc546, 0xdc25, 0x6d54, 0x0, 0x0);
        gbc.writeMem(0x1ba4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4fb5);
        EXPECT(gbc.pc(), 0x1ba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0261
        gbc.setState(0x5658, 0xb182, 0x78b0, 0x5f4d, 0xebc8, 0x6fa9, 0x0, 0x0);
        gbc.writeMem(0x5658, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb182);
        EXPECT(gbc.pc(), 0x5659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0262
        gbc.setState(0xa83f, 0xd944, 0xfc60, 0x273c, 0xe1c8, 0x7faf, 0x1, 0x0);
        gbc.writeMem(0xa83f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd944);
        EXPECT(gbc.pc(), 0xa840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa83f), 0x79);
        // 79 0263
        gbc.setState(0x18ef, 0xc56f, 0xd4a0, 0x6abd, 0xe106, 0xd676, 0x0, 0x1);
        gbc.writeMem(0x18ef, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc56f);
        EXPECT(gbc.pc(), 0x18f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0264
        gbc.setState(0xbdeb, 0x5cd0, 0xa910, 0x2fc5, 0xcd7b, 0x43dd, 0x1, 0x0);
        gbc.writeMem(0xbdeb, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5cd0);
        EXPECT(gbc.pc(), 0xbdec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdeb), 0x79);
        // 79 0265
        gbc.setState(0x4048, 0xc9df, 0x9aa0, 0x2f2b, 0x733d, 0x6561, 0x1, 0x0);
        gbc.writeMem(0x4048, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc9df);
        EXPECT(gbc.pc(), 0x4049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0266
        gbc.setState(0x5cac, 0x4ba9, 0x8e40, 0xda78, 0x274b, 0xe6e9, 0x1, 0x1);
        gbc.writeMem(0x5cac, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4ba9);
        EXPECT(gbc.pc(), 0x5cad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0267
        gbc.setState(0xcd29, 0x173a, 0x3cd0, 0xbc60, 0xd5b8, 0xfcc0, 0x1, 0x1);
        gbc.writeMem(0xcd29, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x173a);
        EXPECT(gbc.pc(), 0xcd2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd29), 0x79);
        // 79 0269
        gbc.setState(0x795d, 0x6f21, 0x8d60, 0x6a8, 0xff89, 0x12fe, 0x1, 0x0);
        gbc.writeMem(0x795d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6f21);
        EXPECT(gbc.pc(), 0x795e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 026A
        gbc.setState(0x4c3f, 0xf49d, 0xf160, 0x58d5, 0xb8f0, 0x1ec5, 0x0, 0x0);
        gbc.writeMem(0x4c3f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf49d);
        EXPECT(gbc.pc(), 0x4c40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 026B
        gbc.setState(0x6851, 0xe92e, 0x69d0, 0x771c, 0xda68, 0x3d16, 0x0, 0x0);
        gbc.writeMem(0x6851, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe92e);
        EXPECT(gbc.pc(), 0x6852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 026C
        gbc.setState(0xde1d, 0xf858, 0xf4a0, 0xb738, 0xaf98, 0xca5f, 0x0, 0x1);
        gbc.writeMem(0xde1d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf858);
        EXPECT(gbc.pc(), 0xde1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde1d), 0x79);
        // 79 026D
        gbc.setState(0x8ac9, 0x3538, 0x8980, 0x752c, 0x78da, 0x9194, 0x1, 0x1);
        gbc.writeMem(0x8ac9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3538);
        EXPECT(gbc.pc(), 0x8aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ac9), 0x79);
        // 79 026E
        gbc.setState(0x527, 0x7882, 0x9930, 0x7a70, 0x338e, 0x209a, 0x0, 0x0);
        gbc.writeMem(0x527, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7882);
        EXPECT(gbc.pc(), 0x528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 026F
        gbc.setState(0xdb8f, 0x7ec5, 0x2690, 0x1aa8, 0x9bfe, 0x74f6, 0x0, 0x1);
        gbc.writeMem(0xdb8f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7ec5);
        EXPECT(gbc.pc(), 0xdb90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb8f), 0x79);
        // 79 0270
        gbc.setState(0x59cd, 0x345b, 0x4e60, 0x3e44, 0xe27d, 0x6882, 0x0, 0x0);
        gbc.writeMem(0x59cd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x345b);
        EXPECT(gbc.pc(), 0x59ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0271
        gbc.setState(0xef55, 0xf5df, 0xc1a0, 0x998d, 0xf9f2, 0xc4af, 0x0, 0x1);
        gbc.writeMem(0xef55, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf5df);
        EXPECT(gbc.pc(), 0xef56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef55), 0x79);
        // 79 0272
        gbc.setState(0x78f7, 0x88cd, 0x5e60, 0x605d, 0x6d1d, 0xa978, 0x0, 0x1);
        gbc.writeMem(0x78f7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x88cd);
        EXPECT(gbc.pc(), 0x78f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0273
        gbc.setState(0x3aae, 0x7436, 0xa9f0, 0x8cbf, 0x5958, 0xa63f, 0x1, 0x0);
        gbc.writeMem(0x3aae, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7436);
        EXPECT(gbc.pc(), 0x3aaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0274
        gbc.setState(0x19f2, 0x55ef, 0x95f0, 0xd423, 0xcf91, 0x5f82, 0x1, 0x1);
        gbc.writeMem(0x19f2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x55ef);
        EXPECT(gbc.pc(), 0x19f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0275
        gbc.setState(0xb949, 0x453d, 0x3f10, 0xb98, 0xff82, 0xe4f4, 0x1, 0x0);
        gbc.writeMem(0xb949, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x453d);
        EXPECT(gbc.pc(), 0xb94a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb949), 0x79);
        // 79 0276
        gbc.setState(0xe1ed, 0x4182, 0xaee0, 0xbc18, 0xaff4, 0x1c66, 0x0, 0x1);
        gbc.writeMem(0xe1ed, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4182);
        EXPECT(gbc.pc(), 0xe1ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1ed), 0x79);
        // 79 0277
        gbc.setState(0xe4d2, 0x4317, 0x76f0, 0xaaa8, 0xe1b5, 0x9428, 0x1, 0x1);
        gbc.writeMem(0xe4d2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4317);
        EXPECT(gbc.pc(), 0xe4d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4d2), 0x79);
        // 79 0278
        gbc.setState(0x8f7d, 0x2df8, 0x46a0, 0xe888, 0x4e41, 0x353a, 0x1, 0x0);
        gbc.writeMem(0x8f7d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2df8);
        EXPECT(gbc.pc(), 0x8f7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f7d), 0x79);
        // 79 0279
        gbc.setState(0x3eab, 0x4dca, 0x5090, 0xe00b, 0x91e3, 0xc959, 0x0, 0x0);
        gbc.writeMem(0x3eab, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4dca);
        EXPECT(gbc.pc(), 0x3eac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 027A
        gbc.setState(0xaa68, 0xdc47, 0x4780, 0x36e6, 0x4fa4, 0x9875, 0x0, 0x0);
        gbc.writeMem(0xaa68, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xdc47);
        EXPECT(gbc.pc(), 0xaa69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa68), 0x79);
        // 79 027B
        gbc.setState(0xc6c6, 0x450c, 0x2e50, 0x207d, 0x7b66, 0x2d13, 0x0, 0x0);
        gbc.writeMem(0xc6c6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x450c);
        EXPECT(gbc.pc(), 0xc6c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c6), 0x79);
        // 79 027C
        gbc.setState(0x8020, 0x6cb2, 0x29f0, 0x3463, 0xb6d8, 0x68f0, 0x0, 0x0);
        gbc.writeMem(0x8020, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6cb2);
        EXPECT(gbc.pc(), 0x8021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8020), 0x79);
        // 79 027D
        gbc.setState(0x9f21, 0xae2c, 0x7940, 0x795f, 0x7afe, 0x14de, 0x1, 0x0);
        gbc.writeMem(0x9f21, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xae2c);
        EXPECT(gbc.pc(), 0x9f22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f21), 0x79);
        // 79 027E
        gbc.setState(0xa4b6, 0xf131, 0x7880, 0x927, 0xcbd6, 0x2bf1, 0x0, 0x0);
        gbc.writeMem(0xa4b6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf131);
        EXPECT(gbc.pc(), 0xa4b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4b6), 0x79);
        // 79 0280
        gbc.setState(0xe319, 0x3445, 0xf0b0, 0xe161, 0x5905, 0x4f22, 0x0, 0x1);
        gbc.writeMem(0xe319, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3445);
        EXPECT(gbc.pc(), 0xe31a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe319), 0x79);
        // 79 0281
        gbc.setState(0xe24a, 0xf82f, 0x8fb0, 0xced, 0xa8bf, 0x1eab, 0x0, 0x1);
        gbc.writeMem(0xe24a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf82f);
        EXPECT(gbc.pc(), 0xe24b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe24a), 0x79);
        // 79 0282
        gbc.setState(0x4df1, 0x4989, 0x7f10, 0xac56, 0x58f1, 0x57b8, 0x0, 0x0);
        gbc.writeMem(0x4df1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4989);
        EXPECT(gbc.pc(), 0x4df2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0283
        gbc.setState(0x8e49, 0x85bd, 0x4250, 0x5aa, 0x658c, 0xe099, 0x0, 0x0);
        gbc.writeMem(0x8e49, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x85bd);
        EXPECT(gbc.pc(), 0x8e4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e49), 0x79);
        // 79 0285
        gbc.setState(0x9c15, 0x6a06, 0xd010, 0x84a6, 0xa52b, 0xd265, 0x1, 0x0);
        gbc.writeMem(0x9c15, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6a06);
        EXPECT(gbc.pc(), 0x9c16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c15), 0x79);
        // 79 0286
        gbc.setState(0xecd, 0xd710, 0x63a0, 0x4495, 0x6bd2, 0xa3a, 0x0, 0x1);
        gbc.writeMem(0xecd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd710);
        EXPECT(gbc.pc(), 0xece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0287
        gbc.setState(0x660, 0xa571, 0x5840, 0x2b22, 0xf5bf, 0x4c87, 0x0, 0x0);
        gbc.writeMem(0x660, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa571);
        EXPECT(gbc.pc(), 0x661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0288
        gbc.setState(0x2dff, 0x1864, 0xa400, 0xace5, 0x79b1, 0xfb34, 0x0, 0x1);
        gbc.writeMem(0x2dff, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1864);
        EXPECT(gbc.pc(), 0x2e00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0289
        gbc.setState(0x8330, 0x4391, 0x1680, 0xead3, 0x380, 0x88d3, 0x1, 0x1);
        gbc.writeMem(0x8330, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4391);
        EXPECT(gbc.pc(), 0x8331);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8330), 0x79);
        // 79 028A
        gbc.setState(0x1cf, 0xf989, 0x350, 0x15ce, 0xb4d2, 0x608e, 0x1, 0x0);
        gbc.writeMem(0x1cf, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf989);
        EXPECT(gbc.pc(), 0x1d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 028B
        gbc.setState(0x6218, 0x7617, 0x60c0, 0xffcc, 0x806f, 0x7f51, 0x1, 0x1);
        gbc.writeMem(0x6218, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7617);
        EXPECT(gbc.pc(), 0x6219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 028C
        gbc.setState(0xdcf6, 0x6126, 0xd4a0, 0x2f39, 0x122c, 0x44c0, 0x0, 0x0);
        gbc.writeMem(0xdcf6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6126);
        EXPECT(gbc.pc(), 0xdcf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf6), 0x79);
        // 79 028D
        gbc.setState(0x44, 0x7995, 0x9220, 0xcf8b, 0x64be, 0x77bd, 0x1, 0x0);
        gbc.writeMem(0x44, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7995);
        EXPECT(gbc.pc(), 0x45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 028E
        gbc.setState(0xe904, 0x112e, 0xbf40, 0x55b5, 0x89d7, 0x6405, 0x1, 0x1);
        gbc.writeMem(0xe904, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x112e);
        EXPECT(gbc.pc(), 0xe905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe904), 0x79);
        // 79 028F
        gbc.setState(0x55be, 0xae78, 0xd020, 0xbb6c, 0x1a5, 0x5023, 0x1, 0x1);
        gbc.writeMem(0x55be, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xae78);
        EXPECT(gbc.pc(), 0x55bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0290
        gbc.setState(0xb740, 0xc93, 0x8a20, 0xd8e8, 0x72fa, 0x1c6, 0x0, 0x1);
        gbc.writeMem(0xb740, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc93);
        EXPECT(gbc.pc(), 0xb741);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb740), 0x79);
        // 79 0291
        gbc.setState(0x943c, 0x4ab5, 0x3610, 0x20a5, 0x4edc, 0xb942, 0x0, 0x0);
        gbc.writeMem(0x943c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4ab5);
        EXPECT(gbc.pc(), 0x943d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x943c), 0x79);
        // 79 0292
        gbc.setState(0xba7b, 0xb220, 0xeef0, 0xbfb3, 0xd703, 0xaae8, 0x0, 0x1);
        gbc.writeMem(0xba7b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb220);
        EXPECT(gbc.pc(), 0xba7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba7b), 0x79);
        // 79 0295
        gbc.setState(0xdef8, 0x313, 0xf580, 0x2b76, 0x2494, 0x7455, 0x0, 0x0);
        gbc.writeMem(0xdef8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x313);
        EXPECT(gbc.pc(), 0xdef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdef8), 0x79);
        // 79 0296
        gbc.setState(0x6093, 0x537a, 0x48f0, 0xf4cc, 0x1d04, 0x6745, 0x0, 0x0);
        gbc.writeMem(0x6093, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x537a);
        EXPECT(gbc.pc(), 0x6094);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0297
        gbc.setState(0x6ba1, 0x1c, 0x84b0, 0x35f2, 0x3427, 0x23dc, 0x0, 0x0);
        gbc.writeMem(0x6ba1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1c);
        EXPECT(gbc.pc(), 0x6ba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0298
        gbc.setState(0xc434, 0xcc53, 0x1990, 0xd775, 0x88a2, 0xddb3, 0x1, 0x0);
        gbc.writeMem(0xc434, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xcc53);
        EXPECT(gbc.pc(), 0xc435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc434), 0x79);
        // 79 0299
        gbc.setState(0x84b0, 0x8974, 0x4610, 0xe389, 0xda39, 0xb109, 0x0, 0x0);
        gbc.writeMem(0x84b0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8974);
        EXPECT(gbc.pc(), 0x84b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84b0), 0x79);
        // 79 029A
        gbc.setState(0x9ba1, 0x3566, 0x3280, 0x28fe, 0x6d8, 0x1fed, 0x0, 0x1);
        gbc.writeMem(0x9ba1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3566);
        EXPECT(gbc.pc(), 0x9ba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ba1), 0x79);
        // 79 029B
        gbc.setState(0x90c5, 0xace5, 0x42c0, 0x1e54, 0xe3a5, 0xd053, 0x0, 0x1);
        gbc.writeMem(0x90c5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xace5);
        EXPECT(gbc.pc(), 0x90c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c5), 0x79);
        // 79 029C
        gbc.setState(0x8b65, 0x59c, 0x7100, 0x9310, 0xb2b6, 0xcf02, 0x1, 0x0);
        gbc.writeMem(0x8b65, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x59c);
        EXPECT(gbc.pc(), 0x8b66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b65), 0x79);
        // 79 029D
        gbc.setState(0x4a22, 0x734c, 0xf290, 0xd4e0, 0xb378, 0x89ce, 0x0, 0x0);
        gbc.writeMem(0x4a22, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x734c);
        EXPECT(gbc.pc(), 0x4a23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 029E
        gbc.setState(0x9fa7, 0x705f, 0x7740, 0xb1d4, 0xcbaf, 0xddb1, 0x0, 0x1);
        gbc.writeMem(0x9fa7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x705f);
        EXPECT(gbc.pc(), 0x9fa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fa7), 0x79);
        // 79 029F
        gbc.setState(0xb361, 0x7bab, 0x7ff0, 0x7f8d, 0x2e8c, 0x94bd, 0x0, 0x0);
        gbc.writeMem(0xb361, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7bab);
        EXPECT(gbc.pc(), 0xb362);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb361), 0x79);
        // 79 02A0
        gbc.setState(0xbbb5, 0x9539, 0x7ca0, 0x9e07, 0xc8c6, 0x487a, 0x0, 0x0);
        gbc.writeMem(0xbbb5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9539);
        EXPECT(gbc.pc(), 0xbbb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbb5), 0x79);
        // 79 02A1
        gbc.setState(0xa794, 0x131b, 0xb6d0, 0x76bf, 0x8966, 0x3b9a, 0x0, 0x0);
        gbc.writeMem(0xa794, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x131b);
        EXPECT(gbc.pc(), 0xa795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa794), 0x79);
        // 79 02A2
        gbc.setState(0xdf28, 0xa23c, 0xfd90, 0xf1e9, 0x556a, 0xf940, 0x0, 0x0);
        gbc.writeMem(0xdf28, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa23c);
        EXPECT(gbc.pc(), 0xdf29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf28), 0x79);
        // 79 02A3
        gbc.setState(0x11d7, 0xaabe, 0xffa0, 0xec9b, 0xc17e, 0x4d86, 0x1, 0x1);
        gbc.writeMem(0x11d7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xaabe);
        EXPECT(gbc.pc(), 0x11d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 02A4
        gbc.setState(0x6b84, 0xf1af, 0xc7e0, 0xd882, 0xf5ce, 0x9cc1, 0x0, 0x0);
        gbc.writeMem(0x6b84, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf1af);
        EXPECT(gbc.pc(), 0x6b85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 02A5
        gbc.setState(0x7f4a, 0x6d8, 0x1120, 0x3a6b, 0x72ad, 0xc23, 0x0, 0x0);
        gbc.writeMem(0x7f4a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6d8);
        EXPECT(gbc.pc(), 0x7f4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 02A6
        gbc.setState(0x26f4, 0x3b89, 0x3ef0, 0x95dc, 0x1ce1, 0x5e53, 0x0, 0x1);
        gbc.writeMem(0x26f4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3b89);
        EXPECT(gbc.pc(), 0x26f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 02A7
        gbc.setState(0xa55a, 0xfd5d, 0xf7f0, 0x34b0, 0x31c1, 0x6570, 0x1, 0x0);
        gbc.writeMem(0xa55a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xfd5d);
        EXPECT(gbc.pc(), 0xa55b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa55a), 0x79);
        // 79 02A8
        gbc.setState(0x1d0c, 0x6961, 0x1af0, 0xba34, 0x639, 0x26d4, 0x0, 0x0);
        gbc.writeMem(0x1d0c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6961);
        EXPECT(gbc.pc(), 0x1d0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 02A9
        gbc.setState(0x3e39, 0x809d, 0x2740, 0xef1c, 0x675f, 0x337d, 0x0, 0x1);
        gbc.writeMem(0x3e39, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x809d);
        EXPECT(gbc.pc(), 0x3e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 02AA
        gbc.setState(0xaa4d, 0x8381, 0x52c0, 0xb133, 0xcba7, 0xe2b3, 0x1, 0x1);
        gbc.writeMem(0xaa4d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8381);
        EXPECT(gbc.pc(), 0xaa4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa4d), 0x79);
        // 79 02AB
        gbc.setState(0xb021, 0x6937, 0x1ee0, 0xe2df, 0x330c, 0xb9, 0x0, 0x1);
        gbc.writeMem(0xb021, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6937);
        EXPECT(gbc.pc(), 0xb022);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb021), 0x79);
        // 79 02AC
        gbc.setState(0xc549, 0xc60d, 0x38a0, 0x3a57, 0xee15, 0x5620, 0x1, 0x0);
        gbc.writeMem(0xc549, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc60d);
        EXPECT(gbc.pc(), 0xc54a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc549), 0x79);
        // 79 02AD
        gbc.setState(0xab06, 0x4c3b, 0x8e30, 0x4b8a, 0x9499, 0x4d9f, 0x1, 0x1);
        gbc.writeMem(0xab06, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4c3b);
        EXPECT(gbc.pc(), 0xab07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab06), 0x79);
        // 79 02AE
        gbc.setState(0x42da, 0x7dd1, 0xed50, 0xbfe5, 0xebac, 0x86c1, 0x1, 0x1);
        gbc.writeMem(0x42da, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7dd1);
        EXPECT(gbc.pc(), 0x42db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 02AF
        gbc.setState(0x2ce0, 0x9d95, 0xc210, 0xa5e2, 0xfab4, 0x5941, 0x0, 0x0);
        gbc.writeMem(0x2ce0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9d95);
        EXPECT(gbc.pc(), 0x2ce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 02B0
        gbc.setState(0xedaa, 0x6cab, 0x1b50, 0xb108, 0x7e90, 0x39ab, 0x0, 0x1);
        gbc.writeMem(0xedaa, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6cab);
        EXPECT(gbc.pc(), 0xedab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedaa), 0x79);
        // 79 02B1
        gbc.setState(0x927, 0xa4d1, 0x3e70, 0x781, 0xa813, 0x517e, 0x0, 0x1);
        gbc.writeMem(0x927, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa4d1);
        EXPECT(gbc.pc(), 0x928);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 02B2
        gbc.setState(0x688b, 0x3add, 0x0, 0x4749, 0xed59, 0x5a9e, 0x0, 0x0);
        gbc.writeMem(0x688b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3add);
        EXPECT(gbc.pc(), 0x688c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 02B3
        gbc.setState(0x1108, 0x1312, 0x22c0, 0x316e, 0x904c, 0x5f46, 0x0, 0x1);
        gbc.writeMem(0x1108, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1312);
        EXPECT(gbc.pc(), 0x1109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 02B4
        gbc.setState(0x43c6, 0x2883, 0x3830, 0x83c6, 0xbb88, 0x76bc, 0x0, 0x1);
        gbc.writeMem(0x43c6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2883);
        EXPECT(gbc.pc(), 0x43c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 02B5
        gbc.setState(0xb63e, 0x5a61, 0x7880, 0xefdc, 0x4571, 0xf2d5, 0x0, 0x0);
        gbc.writeMem(0xb63e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5a61);
        EXPECT(gbc.pc(), 0xb63f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb63e), 0x79);
        // 79 02B6
        gbc.setState(0x7929, 0x92ee, 0xa030, 0xff9e, 0xb567, 0x7b30, 0x1, 0x0);
        gbc.writeMem(0x7929, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x92ee);
        EXPECT(gbc.pc(), 0x792a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 02B7
        gbc.setState(0xaf87, 0xbe7, 0xc160, 0x51c9, 0x9727, 0xad58, 0x0, 0x1);
        gbc.writeMem(0xaf87, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xbe7);
        EXPECT(gbc.pc(), 0xaf88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf87), 0x79);
        // 79 02B8
        gbc.setState(0x22fd, 0x2585, 0x1f00, 0x878d, 0x75ca, 0xcadd, 0x0, 0x1);
        gbc.writeMem(0x22fd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2585);
        EXPECT(gbc.pc(), 0x22fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 02B9
        gbc.setState(0x6a8f, 0xe21c, 0x73e0, 0x57f8, 0xcf67, 0x2682, 0x0, 0x0);
        gbc.writeMem(0x6a8f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe21c);
        EXPECT(gbc.pc(), 0x6a90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 02BA
        gbc.setState(0x9561, 0x48eb, 0xc470, 0x77cb, 0x78eb, 0x65bf, 0x0, 0x1);
        gbc.writeMem(0x9561, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x48eb);
        EXPECT(gbc.pc(), 0x9562);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9561), 0x79);
        // 79 02BB
        gbc.setState(0xa7ac, 0x1fdb, 0x7c30, 0xaade, 0xbd9e, 0x12f8, 0x1, 0x1);
        gbc.writeMem(0xa7ac, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1fdb);
        EXPECT(gbc.pc(), 0xa7ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ac), 0x79);
        // 79 02BC
        gbc.setState(0x620a, 0x15dc, 0x2bf0, 0x5235, 0xe520, 0xef10, 0x1, 0x0);
        gbc.writeMem(0x620a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x15dc);
        EXPECT(gbc.pc(), 0x620b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 02BD
        gbc.setState(0x5784, 0x9550, 0xba60, 0x82ff, 0x56fa, 0x2493, 0x0, 0x1);
        gbc.writeMem(0x5784, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9550);
        EXPECT(gbc.pc(), 0x5785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 02BE
        gbc.setState(0xdc76, 0x5e46, 0x36c0, 0xbca, 0x54f7, 0x219, 0x0, 0x0);
        gbc.writeMem(0xdc76, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5e46);
        EXPECT(gbc.pc(), 0xdc77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc76), 0x79);
        // 79 02BF
        gbc.setState(0x9468, 0xad99, 0xa320, 0xb574, 0x8ac4, 0x636c, 0x0, 0x0);
        gbc.writeMem(0x9468, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xad99);
        EXPECT(gbc.pc(), 0x9469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9468), 0x79);
        // 79 02C0
        gbc.setState(0x3023, 0x21d5, 0x87a0, 0x17e8, 0xd7e8, 0x4ec8, 0x0, 0x0);
        gbc.writeMem(0x3023, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x21d5);
        EXPECT(gbc.pc(), 0x3024);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 02C1
        gbc.setState(0x5afe, 0xfdbb, 0x8450, 0x9245, 0x2a8c, 0xd80c, 0x1, 0x0);
        gbc.writeMem(0x5afe, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xfdbb);
        EXPECT(gbc.pc(), 0x5aff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 02C2
        gbc.setState(0xc882, 0x2dda, 0x8d0, 0xc804, 0xc169, 0xb313, 0x0, 0x1);
        gbc.writeMem(0xc882, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2dda);
        EXPECT(gbc.pc(), 0xc883);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc882), 0x79);
        // 79 02C3
        gbc.setState(0xdbec, 0x52b, 0x5ee0, 0x5e23, 0x8c14, 0xea66, 0x0, 0x0);
        gbc.writeMem(0xdbec, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x52b);
        EXPECT(gbc.pc(), 0xdbed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbec), 0x79);
        // 79 02C4
        gbc.setState(0x43, 0x4f07, 0x3ca0, 0x9b41, 0xaaf5, 0xf5be, 0x0, 0x1);
        gbc.writeMem(0x43, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4f07);
        EXPECT(gbc.pc(), 0x44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 02C5
        gbc.setState(0xb8d5, 0x844e, 0x3d0, 0x7f31, 0x9605, 0x3f91, 0x1, 0x1);
        gbc.writeMem(0xb8d5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x844e);
        EXPECT(gbc.pc(), 0xb8d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8d5), 0x79);
        // 79 02C6
        gbc.setState(0x5e48, 0x9195, 0x12c0, 0x43ff, 0x5c9e, 0xc37, 0x1, 0x1);
        gbc.writeMem(0x5e48, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9195);
        EXPECT(gbc.pc(), 0x5e49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 02C7
        gbc.setState(0xa815, 0x2694, 0x94b0, 0x7f4f, 0xebd5, 0x99fa, 0x0, 0x1);
        gbc.writeMem(0xa815, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2694);
        EXPECT(gbc.pc(), 0xa816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa815), 0x79);
        // 79 02C8
        gbc.setState(0xbe1c, 0x5c42, 0x7870, 0x3eb, 0x9cf, 0x3f04, 0x0, 0x1);
        gbc.writeMem(0xbe1c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5c42);
        EXPECT(gbc.pc(), 0xbe1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe1c), 0x79);
        // 79 02C9
        gbc.setState(0x82e9, 0x6ce, 0xae90, 0x69fc, 0x14c4, 0x55aa, 0x1, 0x0);
        gbc.writeMem(0x82e9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6ce);
        EXPECT(gbc.pc(), 0x82ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e9), 0x79);
        // 79 02CA
        gbc.setState(0x5eb2, 0x9432, 0x9c10, 0x1f64, 0x1408, 0x3dc1, 0x1, 0x1);
        gbc.writeMem(0x5eb2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9432);
        EXPECT(gbc.pc(), 0x5eb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 02CB
        gbc.setState(0x80cd, 0x282a, 0xc6d0, 0x9b13, 0xd99f, 0xcacc, 0x0, 0x1);
        gbc.writeMem(0x80cd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x282a);
        EXPECT(gbc.pc(), 0x80ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80cd), 0x79);
        // 79 02CC
        gbc.setState(0xc837, 0xec24, 0x6520, 0xef17, 0xb1b4, 0x6074, 0x1, 0x1);
        gbc.writeMem(0xc837, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xec24);
        EXPECT(gbc.pc(), 0xc838);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc837), 0x79);
        // 79 02CD
        gbc.setState(0x83e9, 0x10f8, 0x980, 0x4e4d, 0x5612, 0xd295, 0x0, 0x0);
        gbc.writeMem(0x83e9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x10f8);
        EXPECT(gbc.pc(), 0x83ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e9), 0x79);
        // 79 02CE
        gbc.setState(0xca8a, 0xf6bb, 0x9f30, 0x3275, 0xa7b3, 0x4670, 0x1, 0x1);
        gbc.writeMem(0xca8a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf6bb);
        EXPECT(gbc.pc(), 0xca8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca8a), 0x79);
        // 79 02CF
        gbc.setState(0xbe0, 0xda33, 0xf240, 0x4a4d, 0x11eb, 0xa76e, 0x0, 0x1);
        gbc.writeMem(0xbe0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xda33);
        EXPECT(gbc.pc(), 0xbe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 02D0
        gbc.setState(0x92f3, 0xb7a7, 0xfcf0, 0x20b6, 0x1993, 0x7e7f, 0x0, 0x1);
        gbc.writeMem(0x92f3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb7a7);
        EXPECT(gbc.pc(), 0x92f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92f3), 0x79);
        // 79 02D1
        gbc.setState(0x1c4b, 0xa066, 0x85b0, 0x24a8, 0x382a, 0x5cc, 0x0, 0x0);
        gbc.writeMem(0x1c4b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa066);
        EXPECT(gbc.pc(), 0x1c4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 02D2
        gbc.setState(0x5886, 0x8804, 0x8250, 0x934d, 0x3de6, 0x271a, 0x0, 0x1);
        gbc.writeMem(0x5886, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8804);
        EXPECT(gbc.pc(), 0x5887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 02D3
        gbc.setState(0x74e8, 0xb27e, 0xac30, 0x7e59, 0xe542, 0x8f8c, 0x1, 0x0);
        gbc.writeMem(0x74e8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb27e);
        EXPECT(gbc.pc(), 0x74e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 02D4
        gbc.setState(0x109d, 0x62a4, 0xb140, 0xbfc1, 0x442f, 0xad41, 0x1, 0x1);
        gbc.writeMem(0x109d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x62a4);
        EXPECT(gbc.pc(), 0x109e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 02D5
        gbc.setState(0x6aa0, 0x7fa0, 0xd130, 0x87c0, 0x2c1d, 0x1762, 0x1, 0x1);
        gbc.writeMem(0x6aa0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7fa0);
        EXPECT(gbc.pc(), 0x6aa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 02D6
        gbc.setState(0x94d7, 0xaf91, 0x9820, 0xc3b3, 0x5e27, 0x224f, 0x1, 0x0);
        gbc.writeMem(0x94d7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xaf91);
        EXPECT(gbc.pc(), 0x94d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d7), 0x79);
        // 79 02D7
        gbc.setState(0x9311, 0x1dc1, 0xe1a0, 0x7cca, 0xab4a, 0x8329, 0x0, 0x1);
        gbc.writeMem(0x9311, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1dc1);
        EXPECT(gbc.pc(), 0x9312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9311), 0x79);
        // 79 02D8
        gbc.setState(0x32a5, 0x69b2, 0xb540, 0x2fc0, 0x7085, 0xfe1f, 0x1, 0x0);
        gbc.writeMem(0x32a5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x69b2);
        EXPECT(gbc.pc(), 0x32a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 02D9
        gbc.setState(0x783f, 0x1278, 0x4230, 0xc253, 0xa4db, 0xaad0, 0x0, 0x1);
        gbc.writeMem(0x783f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1278);
        EXPECT(gbc.pc(), 0x7840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 02DA
        gbc.setState(0x695d, 0xd112, 0x1e00, 0xae59, 0xa78b, 0x54d5, 0x0, 0x0);
        gbc.writeMem(0x695d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd112);
        EXPECT(gbc.pc(), 0x695e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 02DB
        gbc.setState(0x97c1, 0xe29e, 0x58e0, 0xa14d, 0x4fe, 0x2386, 0x1, 0x1);
        gbc.writeMem(0x97c1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe29e);
        EXPECT(gbc.pc(), 0x97c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97c1), 0x79);
        // 79 02DC
        gbc.setState(0x1613, 0x37a3, 0xe890, 0xf7cf, 0xcf1f, 0x20e1, 0x1, 0x1);
        gbc.writeMem(0x1613, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x37a3);
        EXPECT(gbc.pc(), 0x1614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 02DD
        gbc.setState(0xeef0, 0x4ab4, 0xab20, 0x2424, 0xf1fe, 0xc0ab, 0x1, 0x0);
        gbc.writeMem(0xeef0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4ab4);
        EXPECT(gbc.pc(), 0xeef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeef0), 0x79);
        // 79 02DF
        gbc.setState(0xe754, 0x560, 0x7bc0, 0x222e, 0xd542, 0x6b2d, 0x0, 0x0);
        gbc.writeMem(0xe754, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x560);
        EXPECT(gbc.pc(), 0xe755);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe754), 0x79);
        // 79 02E0
        gbc.setState(0x1c8e, 0x9cdf, 0x2ac0, 0x60db, 0xad84, 0xa765, 0x0, 0x1);
        gbc.writeMem(0x1c8e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9cdf);
        EXPECT(gbc.pc(), 0x1c8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 02E1
        gbc.setState(0x8b8d, 0x2f6d, 0x3660, 0xcafb, 0xa2f4, 0x51e5, 0x1, 0x0);
        gbc.writeMem(0x8b8d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2f6d);
        EXPECT(gbc.pc(), 0x8b8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b8d), 0x79);
        // 79 02E2
        gbc.setState(0x88dc, 0x231a, 0x250, 0xd283, 0xbcbe, 0x92a7, 0x1, 0x1);
        gbc.writeMem(0x88dc, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x231a);
        EXPECT(gbc.pc(), 0x88dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88dc), 0x79);
        // 79 02E3
        gbc.setState(0x30b, 0xcfd, 0x4860, 0xdb16, 0xb48e, 0xcab7, 0x0, 0x1);
        gbc.writeMem(0x30b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xcfd);
        EXPECT(gbc.pc(), 0x30c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 02E4
        gbc.setState(0xbfb0, 0xc9e6, 0x8750, 0x6510, 0xc830, 0x38eb, 0x1, 0x0);
        gbc.writeMem(0xbfb0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc9e6);
        EXPECT(gbc.pc(), 0xbfb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfb0), 0x79);
        // 79 02E5
        gbc.setState(0xb939, 0xdaaa, 0x86f0, 0xa92b, 0x987b, 0xa002, 0x1, 0x0);
        gbc.writeMem(0xb939, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdaaa);
        EXPECT(gbc.pc(), 0xb93a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb939), 0x79);
        // 79 02E6
        gbc.setState(0xc3f4, 0xf209, 0x5bb0, 0x84c4, 0xb76f, 0x921, 0x1, 0x1);
        gbc.writeMem(0xc3f4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf209);
        EXPECT(gbc.pc(), 0xc3f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3f4), 0x79);
        // 79 02E7
        gbc.setState(0x2a39, 0xbcd1, 0xf140, 0x5f38, 0x3e52, 0xad33, 0x1, 0x0);
        gbc.writeMem(0x2a39, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xbcd1);
        EXPECT(gbc.pc(), 0x2a3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 02E8
        gbc.setState(0x2a9f, 0xd0c1, 0xaa0, 0xda17, 0x1535, 0x3a1b, 0x1, 0x1);
        gbc.writeMem(0x2a9f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xd0c1);
        EXPECT(gbc.pc(), 0x2aa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 02E9
        gbc.setState(0x6fed, 0x9867, 0xaec0, 0x909e, 0xa5c3, 0x3b38, 0x1, 0x1);
        gbc.writeMem(0x6fed, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9867);
        EXPECT(gbc.pc(), 0x6fee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 02EA
        gbc.setState(0xc7f7, 0x61d7, 0x3790, 0x2f92, 0xce6b, 0xcfac, 0x0, 0x1);
        gbc.writeMem(0xc7f7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x61d7);
        EXPECT(gbc.pc(), 0xc7f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7f7), 0x79);
        // 79 02EB
        gbc.setState(0x4b87, 0x278e, 0x4f30, 0xd997, 0xbd07, 0x3a06, 0x1, 0x1);
        gbc.writeMem(0x4b87, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x278e);
        EXPECT(gbc.pc(), 0x4b88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 02EC
        gbc.setState(0x571, 0x27c5, 0xa780, 0xb6f4, 0xd1f5, 0xc94a, 0x1, 0x1);
        gbc.writeMem(0x571, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x27c5);
        EXPECT(gbc.pc(), 0x572);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 02ED
        gbc.setState(0xccbb, 0xd444, 0xcd10, 0x3e99, 0x664e, 0x44a6, 0x1, 0x0);
        gbc.writeMem(0xccbb, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd444);
        EXPECT(gbc.pc(), 0xccbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccbb), 0x79);
        // 79 02EF
        gbc.setState(0x7441, 0x5a6, 0x7c00, 0xaacb, 0x7ea7, 0x3401, 0x1, 0x1);
        gbc.writeMem(0x7441, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5a6);
        EXPECT(gbc.pc(), 0x7442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 02F0
        gbc.setState(0x64c3, 0x5445, 0x7580, 0x9ab7, 0x6c56, 0x26c5, 0x1, 0x0);
        gbc.writeMem(0x64c3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5445);
        EXPECT(gbc.pc(), 0x64c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 02F1
        gbc.setState(0xb061, 0xe3c2, 0xa6d0, 0xb4a9, 0xd5f8, 0x7a2f, 0x1, 0x1);
        gbc.writeMem(0xb061, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe3c2);
        EXPECT(gbc.pc(), 0xb062);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb061), 0x79);
        // 79 02F2
        gbc.setState(0xe182, 0xd0b0, 0x6750, 0xa9e2, 0xef61, 0x5723, 0x1, 0x1);
        gbc.writeMem(0xe182, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd0b0);
        EXPECT(gbc.pc(), 0xe183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe182), 0x79);
        // 79 02F3
        gbc.setState(0xf50, 0xac99, 0x4b30, 0x5c1a, 0xa235, 0x9845, 0x1, 0x1);
        gbc.writeMem(0xf50, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xac99);
        EXPECT(gbc.pc(), 0xf51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 02F4
        gbc.setState(0x1251, 0xdd86, 0x63a0, 0xf0bb, 0xb9d1, 0xf321, 0x1, 0x0);
        gbc.writeMem(0x1251, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xdd86);
        EXPECT(gbc.pc(), 0x1252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 02F5
        gbc.setState(0x5c05, 0xcac3, 0x6c00, 0xe2cd, 0xb386, 0xe67c, 0x1, 0x0);
        gbc.writeMem(0x5c05, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xcac3);
        EXPECT(gbc.pc(), 0x5c06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 02F7
        gbc.setState(0xccbf, 0xa9a2, 0x7af0, 0xee0c, 0xf17e, 0xe530, 0x1, 0x1);
        gbc.writeMem(0xccbf, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa9a2);
        EXPECT(gbc.pc(), 0xccc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccbf), 0x79);
        // 79 02F8
        gbc.setState(0x2594, 0x5ef3, 0x3790, 0xa542, 0x4abc, 0xb6f8, 0x1, 0x1);
        gbc.writeMem(0x2594, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5ef3);
        EXPECT(gbc.pc(), 0x2595);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 02F9
        gbc.setState(0x1d34, 0x5611, 0x5160, 0x4642, 0x8717, 0xd9e7, 0x0, 0x0);
        gbc.writeMem(0x1d34, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5611);
        EXPECT(gbc.pc(), 0x1d35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 02FA
        gbc.setState(0xdf77, 0xbc91, 0x4130, 0x13c4, 0x9fcb, 0x901d, 0x0, 0x0);
        gbc.writeMem(0xdf77, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xbc91);
        EXPECT(gbc.pc(), 0xdf78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf77), 0x79);
        // 79 02FB
        gbc.setState(0xb325, 0x721e, 0x6d70, 0x98c1, 0xf755, 0x10a0, 0x1, 0x0);
        gbc.writeMem(0xb325, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x721e);
        EXPECT(gbc.pc(), 0xb326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb325), 0x79);
        // 79 02FC
        gbc.setState(0x6345, 0x68f1, 0xb610, 0x3519, 0x997, 0x49e6, 0x1, 0x1);
        gbc.writeMem(0x6345, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x68f1);
        EXPECT(gbc.pc(), 0x6346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 02FD
        gbc.setState(0xee3, 0x6506, 0x710, 0xc218, 0x4ba6, 0x3149, 0x0, 0x0);
        gbc.writeMem(0xee3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6506);
        EXPECT(gbc.pc(), 0xee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 02FE
        gbc.setState(0xc983, 0xc447, 0x4ed0, 0xe05a, 0x12cb, 0xfb09, 0x0, 0x0);
        gbc.writeMem(0xc983, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc447);
        EXPECT(gbc.pc(), 0xc984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc983), 0x79);
        // 79 02FF
        gbc.setState(0xb62a, 0xf69c, 0xeb60, 0x40f6, 0xab37, 0xfa36, 0x1, 0x0);
        gbc.writeMem(0xb62a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf69c);
        EXPECT(gbc.pc(), 0xb62b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb62a), 0x79);
        // 79 0300
        gbc.setState(0x1a1c, 0x1ad5, 0xd4a0, 0x4a04, 0xf77a, 0x372, 0x1, 0x0);
        gbc.writeMem(0x1a1c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1ad5);
        EXPECT(gbc.pc(), 0x1a1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0301
        gbc.setState(0x2ad4, 0xfbfd, 0x11c0, 0xe926, 0xb502, 0xb075, 0x1, 0x0);
        gbc.writeMem(0x2ad4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfbfd);
        EXPECT(gbc.pc(), 0x2ad5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0302
        gbc.setState(0x7a97, 0xd984, 0x1200, 0x69b6, 0x4ee, 0x829a, 0x0, 0x0);
        gbc.writeMem(0x7a97, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd984);
        EXPECT(gbc.pc(), 0x7a98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0303
        gbc.setState(0x9b6a, 0xf981, 0x87b0, 0x42c1, 0xf7d3, 0x1f24, 0x1, 0x0);
        gbc.writeMem(0x9b6a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf981);
        EXPECT(gbc.pc(), 0x9b6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b6a), 0x79);
        // 79 0304
        gbc.setState(0x1ec5, 0x7ad5, 0xb5f0, 0xc623, 0xa755, 0x470f, 0x1, 0x1);
        gbc.writeMem(0x1ec5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7ad5);
        EXPECT(gbc.pc(), 0x1ec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0305
        gbc.setState(0x7a7b, 0x1a90, 0x4dd0, 0xc573, 0x763d, 0x2150, 0x0, 0x0);
        gbc.writeMem(0x7a7b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1a90);
        EXPECT(gbc.pc(), 0x7a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0306
        gbc.setState(0xcdc0, 0x8b54, 0xcf30, 0x3759, 0xc6f8, 0x2ac8, 0x0, 0x1);
        gbc.writeMem(0xcdc0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8b54);
        EXPECT(gbc.pc(), 0xcdc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdc0), 0x79);
        // 79 0307
        gbc.setState(0x4a9c, 0x6ace, 0x47d0, 0xb64a, 0x3a05, 0x2ac7, 0x0, 0x1);
        gbc.writeMem(0x4a9c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6ace);
        EXPECT(gbc.pc(), 0x4a9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0308
        gbc.setState(0xc1d3, 0x81eb, 0xc2b0, 0x8ddc, 0x96e8, 0x2f67, 0x0, 0x0);
        gbc.writeMem(0xc1d3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x81eb);
        EXPECT(gbc.pc(), 0xc1d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d3), 0x79);
        // 79 0309
        gbc.setState(0x5227, 0x4daf, 0x2ef0, 0x16d6, 0xc41f, 0xb8a0, 0x1, 0x1);
        gbc.writeMem(0x5227, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4daf);
        EXPECT(gbc.pc(), 0x5228);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 030A
        gbc.setState(0xb1fb, 0xa737, 0xbd40, 0xe190, 0xc918, 0xfcbe, 0x0, 0x1);
        gbc.writeMem(0xb1fb, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xa737);
        EXPECT(gbc.pc(), 0xb1fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1fb), 0x79);
        // 79 030B
        gbc.setState(0x949f, 0x9ec3, 0x1250, 0x3c43, 0xfca2, 0x60d5, 0x1, 0x0);
        gbc.writeMem(0x949f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9ec3);
        EXPECT(gbc.pc(), 0x94a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x949f), 0x79);
        // 79 030C
        gbc.setState(0x2fb3, 0x6709, 0x4b60, 0xe8b2, 0x80be, 0x69d6, 0x1, 0x1);
        gbc.writeMem(0x2fb3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6709);
        EXPECT(gbc.pc(), 0x2fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 030D
        gbc.setState(0x4c40, 0x6ee8, 0xdcb0, 0x60af, 0x2ee, 0xbd5e, 0x1, 0x0);
        gbc.writeMem(0x4c40, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6ee8);
        EXPECT(gbc.pc(), 0x4c41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 030E
        gbc.setState(0x9744, 0x8a6d, 0x50e0, 0xa64d, 0x6faa, 0x9178, 0x1, 0x1);
        gbc.writeMem(0x9744, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8a6d);
        EXPECT(gbc.pc(), 0x9745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9744), 0x79);
        // 79 030F
        gbc.setState(0xbc28, 0xbfa5, 0xff10, 0x63bb, 0xe77a, 0x1745, 0x0, 0x0);
        gbc.writeMem(0xbc28, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xbfa5);
        EXPECT(gbc.pc(), 0xbc29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc28), 0x79);
        // 79 0311
        gbc.setState(0x4a1f, 0x7156, 0xc620, 0x3310, 0x7a59, 0x9748, 0x1, 0x0);
        gbc.writeMem(0x4a1f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7156);
        EXPECT(gbc.pc(), 0x4a20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0313
        gbc.setState(0x2504, 0x7462, 0xb690, 0x58eb, 0x1040, 0x1707, 0x0, 0x0);
        gbc.writeMem(0x2504, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7462);
        EXPECT(gbc.pc(), 0x2505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0314
        gbc.setState(0x2d06, 0xeec, 0xb400, 0x4188, 0x1976, 0x5af9, 0x0, 0x1);
        gbc.writeMem(0x2d06, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xeec);
        EXPECT(gbc.pc(), 0x2d07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0315
        gbc.setState(0x2c99, 0x2be6, 0x67c0, 0xbd13, 0xa0c5, 0x198e, 0x1, 0x1);
        gbc.writeMem(0x2c99, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2be6);
        EXPECT(gbc.pc(), 0x2c9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0316
        gbc.setState(0x24e1, 0xbfe2, 0xf400, 0x4c1d, 0x1838, 0xdf40, 0x1, 0x1);
        gbc.writeMem(0x24e1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xbfe2);
        EXPECT(gbc.pc(), 0x24e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0317
        gbc.setState(0x7246, 0x38c0, 0xc860, 0x7d47, 0xf39d, 0x7199, 0x0, 0x0);
        gbc.writeMem(0x7246, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x38c0);
        EXPECT(gbc.pc(), 0x7247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0318
        gbc.setState(0xb8d5, 0xad7f, 0x3070, 0xf847, 0xbf72, 0x3a3a, 0x1, 0x0);
        gbc.writeMem(0xb8d5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xad7f);
        EXPECT(gbc.pc(), 0xb8d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8d5), 0x79);
        // 79 0319
        gbc.setState(0xbeeb, 0xf582, 0x1590, 0x90f9, 0xda6c, 0xbb5e, 0x0, 0x0);
        gbc.writeMem(0xbeeb, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf582);
        EXPECT(gbc.pc(), 0xbeec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeeb), 0x79);
        // 79 031A
        gbc.setState(0x5353, 0x8f6f, 0x4eb0, 0xc36, 0xd50c, 0x5c3a, 0x0, 0x1);
        gbc.writeMem(0x5353, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8f6f);
        EXPECT(gbc.pc(), 0x5354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 031B
        gbc.setState(0xd9d, 0xbef8, 0x2870, 0xf123, 0xad0e, 0xc0f2, 0x1, 0x1);
        gbc.writeMem(0xd9d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xbef8);
        EXPECT(gbc.pc(), 0xd9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 031C
        gbc.setState(0x4963, 0xfd04, 0xa1a0, 0x3dc6, 0x6558, 0x95cb, 0x0, 0x1);
        gbc.writeMem(0x4963, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xfd04);
        EXPECT(gbc.pc(), 0x4964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 031D
        gbc.setState(0xc9c5, 0x3cb0, 0xaa0, 0x246, 0xe85f, 0xbcaf, 0x0, 0x0);
        gbc.writeMem(0xc9c5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3cb0);
        EXPECT(gbc.pc(), 0xc9c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9c5), 0x79);
        // 79 031E
        gbc.setState(0xcae1, 0x2aa2, 0x74c0, 0x1107, 0xbb53, 0xe0b3, 0x0, 0x1);
        gbc.writeMem(0xcae1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2aa2);
        EXPECT(gbc.pc(), 0xcae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcae1), 0x79);
        // 79 031F
        gbc.setState(0x2c6f, 0x9714, 0x4d20, 0x85b1, 0x2e50, 0xb525, 0x1, 0x0);
        gbc.writeMem(0x2c6f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9714);
        EXPECT(gbc.pc(), 0x2c70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0320
        gbc.setState(0x45a0, 0xe322, 0xa370, 0xffe4, 0xce50, 0x3b2b, 0x1, 0x1);
        gbc.writeMem(0x45a0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe322);
        EXPECT(gbc.pc(), 0x45a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0321
        gbc.setState(0x3c10, 0x549d, 0xb8a0, 0x4850, 0x1510, 0xe16c, 0x1, 0x1);
        gbc.writeMem(0x3c10, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x549d);
        EXPECT(gbc.pc(), 0x3c11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0322
        gbc.setState(0x47f7, 0x68b6, 0x5490, 0x7b94, 0xef3, 0xa167, 0x0, 0x1);
        gbc.writeMem(0x47f7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x68b6);
        EXPECT(gbc.pc(), 0x47f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0323
        gbc.setState(0x2a32, 0xd0ca, 0xcaa0, 0x7cac, 0x6234, 0x8d0f, 0x0, 0x0);
        gbc.writeMem(0x2a32, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd0ca);
        EXPECT(gbc.pc(), 0x2a33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0324
        gbc.setState(0x3e5f, 0xbe63, 0xfb60, 0x382b, 0xc0c3, 0xc02d, 0x1, 0x0);
        gbc.writeMem(0x3e5f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xbe63);
        EXPECT(gbc.pc(), 0x3e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0325
        gbc.setState(0x4370, 0x879d, 0x3b60, 0xbef8, 0x2eef, 0x1c5f, 0x1, 0x1);
        gbc.writeMem(0x4370, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x879d);
        EXPECT(gbc.pc(), 0x4371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0326
        gbc.setState(0x581e, 0x74ec, 0x4ef0, 0x8faf, 0xe7e4, 0xfe85, 0x1, 0x0);
        gbc.writeMem(0x581e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x74ec);
        EXPECT(gbc.pc(), 0x581f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0327
        gbc.setState(0x27d9, 0xa882, 0x86b0, 0x52a7, 0x4ebd, 0xe29e, 0x0, 0x1);
        gbc.writeMem(0x27d9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa882);
        EXPECT(gbc.pc(), 0x27da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0328
        gbc.setState(0xcc96, 0x7d01, 0x3d30, 0x70c9, 0xe51f, 0x4373, 0x1, 0x1);
        gbc.writeMem(0xcc96, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7d01);
        EXPECT(gbc.pc(), 0xcc97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc96), 0x79);
        // 79 0329
        gbc.setState(0x4ef3, 0xc54d, 0x4b90, 0x349e, 0x6847, 0x18d2, 0x1, 0x0);
        gbc.writeMem(0x4ef3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc54d);
        EXPECT(gbc.pc(), 0x4ef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 032A
        gbc.setState(0x8201, 0x8b59, 0x8880, 0x1b6c, 0x382d, 0x92a3, 0x1, 0x0);
        gbc.writeMem(0x8201, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8b59);
        EXPECT(gbc.pc(), 0x8202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8201), 0x79);
        // 79 032B
        gbc.setState(0x1240, 0xccb3, 0x3420, 0xe6f7, 0x66c5, 0xfcb7, 0x1, 0x0);
        gbc.writeMem(0x1240, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xccb3);
        EXPECT(gbc.pc(), 0x1241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 032C
        gbc.setState(0xd53c, 0xf4ef, 0xc780, 0x8449, 0x40ad, 0x20ce, 0x0, 0x0);
        gbc.writeMem(0xd53c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf4ef);
        EXPECT(gbc.pc(), 0xd53d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd53c), 0x79);
        // 79 032D
        gbc.setState(0xe739, 0x60b4, 0x7af0, 0x8451, 0xb3c9, 0x760c, 0x0, 0x1);
        gbc.writeMem(0xe739, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x60b4);
        EXPECT(gbc.pc(), 0xe73a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe739), 0x79);
        // 79 032E
        gbc.setState(0x3e40, 0x16d6, 0x4450, 0x1a6a, 0xb599, 0x8d0a, 0x0, 0x1);
        gbc.writeMem(0x3e40, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x16d6);
        EXPECT(gbc.pc(), 0x3e41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 032F
        gbc.setState(0xdf47, 0x4f78, 0x6280, 0x793d, 0xea11, 0xf6b8, 0x1, 0x1);
        gbc.writeMem(0xdf47, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4f78);
        EXPECT(gbc.pc(), 0xdf48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf47), 0x79);
        // 79 0330
        gbc.setState(0x3df8, 0xc622, 0x730, 0xc5ad, 0xfb9c, 0x6bc8, 0x0, 0x0);
        gbc.writeMem(0x3df8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc622);
        EXPECT(gbc.pc(), 0x3df9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0331
        gbc.setState(0x3cbb, 0xeea9, 0x7580, 0x5576, 0x9d06, 0xb23d, 0x0, 0x0);
        gbc.writeMem(0x3cbb, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xeea9);
        EXPECT(gbc.pc(), 0x3cbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0332
        gbc.setState(0x48af, 0xb7a3, 0x3270, 0xb712, 0x3470, 0xc6fd, 0x0, 0x1);
        gbc.writeMem(0x48af, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb7a3);
        EXPECT(gbc.pc(), 0x48b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0333
        gbc.setState(0xbe29, 0x4e01, 0xff80, 0x40ea, 0xf7ae, 0x9cf0, 0x1, 0x0);
        gbc.writeMem(0xbe29, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4e01);
        EXPECT(gbc.pc(), 0xbe2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe29), 0x79);
        // 79 0334
        gbc.setState(0x131, 0x2be2, 0x95a0, 0x517c, 0xb5f0, 0x2723, 0x0, 0x0);
        gbc.writeMem(0x131, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2be2);
        EXPECT(gbc.pc(), 0x132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0335
        gbc.setState(0x636a, 0x223f, 0x20b0, 0x91a3, 0xc880, 0x8e4d, 0x0, 0x0);
        gbc.writeMem(0x636a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x223f);
        EXPECT(gbc.pc(), 0x636b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0336
        gbc.setState(0x3c7a, 0x9402, 0xc80, 0x6f1d, 0x3179, 0x46d6, 0x0, 0x1);
        gbc.writeMem(0x3c7a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9402);
        EXPECT(gbc.pc(), 0x3c7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0337
        gbc.setState(0x7df0, 0xefc4, 0x92c0, 0x9b16, 0x13c9, 0x1e54, 0x1, 0x0);
        gbc.writeMem(0x7df0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xefc4);
        EXPECT(gbc.pc(), 0x7df1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0338
        gbc.setState(0x89fc, 0xdb3e, 0xa680, 0xd815, 0x5cf3, 0x2c5f, 0x0, 0x0);
        gbc.writeMem(0x89fc, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xdb3e);
        EXPECT(gbc.pc(), 0x89fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89fc), 0x79);
        // 79 0339
        gbc.setState(0x274d, 0x6b14, 0x4850, 0xbbcc, 0x64ef, 0xd206, 0x1, 0x0);
        gbc.writeMem(0x274d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6b14);
        EXPECT(gbc.pc(), 0x274e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 033A
        gbc.setState(0xc702, 0xee2a, 0x1cd0, 0x7700, 0x990a, 0x19f1, 0x1, 0x0);
        gbc.writeMem(0xc702, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xee2a);
        EXPECT(gbc.pc(), 0xc703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc702), 0x79);
        // 79 033B
        gbc.setState(0x289f, 0x209e, 0xb340, 0xb87, 0x257b, 0x50b3, 0x1, 0x0);
        gbc.writeMem(0x289f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x209e);
        EXPECT(gbc.pc(), 0x28a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 033C
        gbc.setState(0xb0a8, 0xfa3d, 0xc0a0, 0xdcf, 0xc1fb, 0x2fd2, 0x1, 0x1);
        gbc.writeMem(0xb0a8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xfa3d);
        EXPECT(gbc.pc(), 0xb0a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0a8), 0x79);
        // 79 033D
        gbc.setState(0x9fd4, 0xc1be, 0x2830, 0xb883, 0x87af, 0x5d1c, 0x0, 0x0);
        gbc.writeMem(0x9fd4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc1be);
        EXPECT(gbc.pc(), 0x9fd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fd4), 0x79);
        // 79 033F
        gbc.setState(0x6e0, 0xe403, 0xcfa0, 0x5032, 0x4ba, 0x573, 0x0, 0x0);
        gbc.writeMem(0x6e0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe403);
        EXPECT(gbc.pc(), 0x6e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0340
        gbc.setState(0xf93, 0x292c, 0xaf70, 0xfefd, 0xbac, 0x7c11, 0x1, 0x0);
        gbc.writeMem(0xf93, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x292c);
        EXPECT(gbc.pc(), 0xf94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0342
        gbc.setState(0xb77a, 0xa75f, 0xc770, 0xb83b, 0x7892, 0xb90c, 0x0, 0x1);
        gbc.writeMem(0xb77a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa75f);
        EXPECT(gbc.pc(), 0xb77b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb77a), 0x79);
        // 79 0343
        gbc.setState(0xcd3c, 0xf1e9, 0x69e0, 0x100a, 0x82b6, 0x7412, 0x0, 0x1);
        gbc.writeMem(0xcd3c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xf1e9);
        EXPECT(gbc.pc(), 0xcd3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3c), 0x79);
        // 79 0344
        gbc.setState(0xb8cf, 0x9a10, 0x5cc0, 0xb173, 0xd26f, 0x23dd, 0x0, 0x0);
        gbc.writeMem(0xb8cf, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9a10);
        EXPECT(gbc.pc(), 0xb8d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8cf), 0x79);
        // 79 0345
        gbc.setState(0x3c8d, 0x77bd, 0x4e90, 0x7395, 0xb07c, 0x6e56, 0x1, 0x0);
        gbc.writeMem(0x3c8d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x77bd);
        EXPECT(gbc.pc(), 0x3c8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0346
        gbc.setState(0x382, 0xcd09, 0x3d30, 0xb58, 0x1f1a, 0xde7d, 0x1, 0x0);
        gbc.writeMem(0x382, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xcd09);
        EXPECT(gbc.pc(), 0x383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0347
        gbc.setState(0x9a7d, 0xbfb4, 0x4760, 0x6841, 0x2c80, 0x56f0, 0x1, 0x1);
        gbc.writeMem(0x9a7d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xbfb4);
        EXPECT(gbc.pc(), 0x9a7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a7d), 0x79);
        // 79 0348
        gbc.setState(0x5f3e, 0x71f3, 0xb840, 0x6e5, 0x145c, 0x4d66, 0x1, 0x0);
        gbc.writeMem(0x5f3e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x71f3);
        EXPECT(gbc.pc(), 0x5f3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0349
        gbc.setState(0x810d, 0x1ea9, 0xcc60, 0xc726, 0x9b28, 0xa3b8, 0x0, 0x1);
        gbc.writeMem(0x810d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1ea9);
        EXPECT(gbc.pc(), 0x810e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x810d), 0x79);
        // 79 034A
        gbc.setState(0x5894, 0x32f9, 0x9380, 0xf55e, 0x9f13, 0x6e46, 0x0, 0x0);
        gbc.writeMem(0x5894, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x32f9);
        EXPECT(gbc.pc(), 0x5895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 034B
        gbc.setState(0x90d8, 0x1466, 0x98b0, 0xc65, 0x7e9, 0x6239, 0x0, 0x1);
        gbc.writeMem(0x90d8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1466);
        EXPECT(gbc.pc(), 0x90d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90d8), 0x79);
        // 79 034C
        gbc.setState(0xc8bd, 0x358e, 0x82a0, 0x95bd, 0x9470, 0xe058, 0x1, 0x1);
        gbc.writeMem(0xc8bd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x358e);
        EXPECT(gbc.pc(), 0xc8be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8bd), 0x79);
        // 79 034D
        gbc.setState(0x814a, 0x9040, 0x6a50, 0x723d, 0xcb4c, 0x6354, 0x0, 0x0);
        gbc.writeMem(0x814a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9040);
        EXPECT(gbc.pc(), 0x814b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x814a), 0x79);
        // 79 034E
        gbc.setState(0xdbf4, 0x51ec, 0x60f0, 0x2d04, 0x1f1c, 0xd04e, 0x1, 0x0);
        gbc.writeMem(0xdbf4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x51ec);
        EXPECT(gbc.pc(), 0xdbf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbf4), 0x79);
        // 79 034F
        gbc.setState(0x5b8f, 0x73a4, 0xa9b0, 0xc6f2, 0x407c, 0x782d, 0x0, 0x0);
        gbc.writeMem(0x5b8f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x73a4);
        EXPECT(gbc.pc(), 0x5b90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0350
        gbc.setState(0x2196, 0x3b67, 0x2aa0, 0x595d, 0x8289, 0x9792, 0x0, 0x0);
        gbc.writeMem(0x2196, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3b67);
        EXPECT(gbc.pc(), 0x2197);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0351
        gbc.setState(0x6f90, 0x4be8, 0xe560, 0xea8f, 0xe4a4, 0x77c8, 0x0, 0x0);
        gbc.writeMem(0x6f90, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x4be8);
        EXPECT(gbc.pc(), 0x6f91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0352
        gbc.setState(0x63d6, 0xf26, 0x870, 0xee05, 0x6e47, 0x7890, 0x1, 0x1);
        gbc.writeMem(0x63d6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf26);
        EXPECT(gbc.pc(), 0x63d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0353
        gbc.setState(0x1c2b, 0x89c5, 0x5770, 0xbfe5, 0x53a9, 0x96a2, 0x0, 0x1);
        gbc.writeMem(0x1c2b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x89c5);
        EXPECT(gbc.pc(), 0x1c2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0355
        gbc.setState(0xdda8, 0x1e0, 0x62b0, 0x930b, 0xd825, 0x11a5, 0x1, 0x0);
        gbc.writeMem(0xdda8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1e0);
        EXPECT(gbc.pc(), 0xdda9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdda8), 0x79);
        // 79 0356
        gbc.setState(0xdc68, 0x502a, 0x1f30, 0x8204, 0x5e44, 0xb264, 0x1, 0x0);
        gbc.writeMem(0xdc68, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x502a);
        EXPECT(gbc.pc(), 0xdc69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc68), 0x79);
        // 79 0357
        gbc.setState(0x84d0, 0x23d6, 0x9160, 0xf9e4, 0xe8d5, 0x6783, 0x1, 0x0);
        gbc.writeMem(0x84d0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x23d6);
        EXPECT(gbc.pc(), 0x84d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84d0), 0x79);
        // 79 0358
        gbc.setState(0x1f6d, 0xcf82, 0x1400, 0x59dc, 0xd4da, 0xdf14, 0x0, 0x0);
        gbc.writeMem(0x1f6d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xcf82);
        EXPECT(gbc.pc(), 0x1f6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0359
        gbc.setState(0x1014, 0xba43, 0xb440, 0x2604, 0x3330, 0xbb64, 0x0, 0x0);
        gbc.writeMem(0x1014, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xba43);
        EXPECT(gbc.pc(), 0x1015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 035A
        gbc.setState(0x1810, 0xf90f, 0x6400, 0x3d1, 0x3682, 0x7010, 0x0, 0x1);
        gbc.writeMem(0x1810, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf90f);
        EXPECT(gbc.pc(), 0x1811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 035B
        gbc.setState(0xd340, 0x8f37, 0x46f0, 0xa24c, 0xb87f, 0x6fea, 0x1, 0x0);
        gbc.writeMem(0xd340, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8f37);
        EXPECT(gbc.pc(), 0xd341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd340), 0x79);
        // 79 035C
        gbc.setState(0xd7f3, 0xa6dd, 0xadc0, 0x4b28, 0x41be, 0xf5ec, 0x0, 0x0);
        gbc.writeMem(0xd7f3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa6dd);
        EXPECT(gbc.pc(), 0xd7f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7f3), 0x79);
        // 79 035D
        gbc.setState(0xab77, 0xcb43, 0x2560, 0xab64, 0x5fb3, 0x7134, 0x1, 0x1);
        gbc.writeMem(0xab77, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xcb43);
        EXPECT(gbc.pc(), 0xab78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab77), 0x79);
        // 79 035E
        gbc.setState(0x6cc3, 0x4dd9, 0xe150, 0xf976, 0x59ec, 0x7216, 0x1, 0x1);
        gbc.writeMem(0x6cc3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4dd9);
        EXPECT(gbc.pc(), 0x6cc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 035F
        gbc.setState(0xb75e, 0x8bfc, 0x4d70, 0xf49d, 0xf601, 0xd29f, 0x1, 0x0);
        gbc.writeMem(0xb75e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8bfc);
        EXPECT(gbc.pc(), 0xb75f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb75e), 0x79);
        // 79 0360
        gbc.setState(0x94ed, 0x3dbe, 0x80, 0xd109, 0xae4d, 0xc8d6, 0x1, 0x0);
        gbc.writeMem(0x94ed, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3dbe);
        EXPECT(gbc.pc(), 0x94ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ed), 0x79);
        // 79 0361
        gbc.setState(0x658b, 0x2d5d, 0x2de0, 0x192d, 0x10bd, 0x1b28, 0x1, 0x1);
        gbc.writeMem(0x658b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2d5d);
        EXPECT(gbc.pc(), 0x658c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0362
        gbc.setState(0xddb1, 0x1366, 0x1290, 0xabf0, 0x9aeb, 0xe26d, 0x0, 0x1);
        gbc.writeMem(0xddb1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1366);
        EXPECT(gbc.pc(), 0xddb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddb1), 0x79);
        // 79 0363
        gbc.setState(0xdf75, 0x1858, 0xbb80, 0xa318, 0xdaec, 0x636a, 0x1, 0x1);
        gbc.writeMem(0xdf75, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1858);
        EXPECT(gbc.pc(), 0xdf76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf75), 0x79);
        // 79 0364
        gbc.setState(0xd940, 0x2df8, 0x6e40, 0x6824, 0xf58e, 0xad5f, 0x0, 0x1);
        gbc.writeMem(0xd940, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2df8);
        EXPECT(gbc.pc(), 0xd941);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd940), 0x79);
        // 79 0365
        gbc.setState(0xeb18, 0x18db, 0x5b40, 0xe8d4, 0x779e, 0xa5e, 0x1, 0x0);
        gbc.writeMem(0xeb18, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x18db);
        EXPECT(gbc.pc(), 0xeb19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb18), 0x79);
        // 79 0366
        gbc.setState(0x49f3, 0x7a5b, 0x2fe0, 0x1aee, 0x9183, 0x1e0a, 0x1, 0x1);
        gbc.writeMem(0x49f3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7a5b);
        EXPECT(gbc.pc(), 0x49f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0367
        gbc.setState(0x24f1, 0xde4c, 0x3b60, 0x8284, 0x3b69, 0x777c, 0x1, 0x0);
        gbc.writeMem(0x24f1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xde4c);
        EXPECT(gbc.pc(), 0x24f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0369
        gbc.setState(0xedd0, 0x723f, 0x4980, 0x63f3, 0xdcae, 0x7a0, 0x1, 0x1);
        gbc.writeMem(0xedd0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x723f);
        EXPECT(gbc.pc(), 0xedd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd0), 0x79);
        // 79 036A
        gbc.setState(0x927d, 0xb45a, 0x9340, 0x2db2, 0xaaa0, 0xe855, 0x0, 0x1);
        gbc.writeMem(0x927d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb45a);
        EXPECT(gbc.pc(), 0x927e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x927d), 0x79);
        // 79 036B
        gbc.setState(0x7042, 0xcc28, 0x3480, 0x7006, 0xb70, 0xb357, 0x0, 0x0);
        gbc.writeMem(0x7042, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xcc28);
        EXPECT(gbc.pc(), 0x7043);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 036C
        gbc.setState(0x851c, 0x9ed7, 0xfac0, 0xe125, 0x5449, 0x4735, 0x1, 0x0);
        gbc.writeMem(0x851c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9ed7);
        EXPECT(gbc.pc(), 0x851d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x851c), 0x79);
        // 79 036D
        gbc.setState(0xd405, 0xe3c6, 0x8140, 0xb0e6, 0x5017, 0x6ab9, 0x0, 0x0);
        gbc.writeMem(0xd405, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe3c6);
        EXPECT(gbc.pc(), 0xd406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd405), 0x79);
        // 79 036E
        gbc.setState(0xa527, 0xfb26, 0xbd90, 0xa9a7, 0x9c34, 0xe79b, 0x0, 0x1);
        gbc.writeMem(0xa527, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xfb26);
        EXPECT(gbc.pc(), 0xa528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa527), 0x79);
        // 79 036F
        gbc.setState(0x2f51, 0xd671, 0x5ee0, 0x5035, 0xfd98, 0x48ab, 0x0, 0x0);
        gbc.writeMem(0x2f51, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd671);
        EXPECT(gbc.pc(), 0x2f52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0370
        gbc.setState(0xad0c, 0x7c9b, 0x92e0, 0x8c04, 0xb1c0, 0x2577, 0x0, 0x0);
        gbc.writeMem(0xad0c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7c9b);
        EXPECT(gbc.pc(), 0xad0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad0c), 0x79);
        // 79 0371
        gbc.setState(0x6ed1, 0xf36f, 0xc640, 0x2bfc, 0x7302, 0xd00a, 0x1, 0x0);
        gbc.writeMem(0x6ed1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf36f);
        EXPECT(gbc.pc(), 0x6ed2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0372
        gbc.setState(0x884, 0x7472, 0x8310, 0x3760, 0x82af, 0x7a60, 0x1, 0x1);
        gbc.writeMem(0x884, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7472);
        EXPECT(gbc.pc(), 0x885);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0373
        gbc.setState(0xa0e0, 0x4644, 0xd030, 0x6abf, 0x8d79, 0xe588, 0x0, 0x0);
        gbc.writeMem(0xa0e0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4644);
        EXPECT(gbc.pc(), 0xa0e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0e0), 0x79);
        // 79 0374
        gbc.setState(0xa5f3, 0x2c41, 0xab30, 0xdd98, 0x6469, 0xcc4a, 0x1, 0x0);
        gbc.writeMem(0xa5f3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2c41);
        EXPECT(gbc.pc(), 0xa5f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f3), 0x79);
        // 79 0375
        gbc.setState(0xb9bd, 0xb5c0, 0x9b90, 0xfa3c, 0x4254, 0x2f08, 0x1, 0x1);
        gbc.writeMem(0xb9bd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb5c0);
        EXPECT(gbc.pc(), 0xb9be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9bd), 0x79);
        // 79 0376
        gbc.setState(0x7798, 0x9266, 0x6ef0, 0xcbb0, 0xac57, 0x801a, 0x1, 0x0);
        gbc.writeMem(0x7798, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9266);
        EXPECT(gbc.pc(), 0x7799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0377
        gbc.setState(0xe3cc, 0x4c7c, 0x4b20, 0xda61, 0xe4, 0x7055, 0x0, 0x0);
        gbc.writeMem(0xe3cc, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4c7c);
        EXPECT(gbc.pc(), 0xe3cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3cc), 0x79);
        // 79 0378
        gbc.setState(0x2dd9, 0xfd49, 0x79b0, 0x3bb, 0x1031, 0x60ae, 0x0, 0x1);
        gbc.writeMem(0x2dd9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfd49);
        EXPECT(gbc.pc(), 0x2dda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0379
        gbc.setState(0xd40e, 0x3647, 0xf560, 0x30eb, 0x5cfe, 0x27f6, 0x1, 0x0);
        gbc.writeMem(0xd40e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3647);
        EXPECT(gbc.pc(), 0xd40f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd40e), 0x79);
        // 79 037A
        gbc.setState(0xca21, 0x8fda, 0x44c0, 0x1c6d, 0x1ae8, 0xf886, 0x0, 0x1);
        gbc.writeMem(0xca21, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8fda);
        EXPECT(gbc.pc(), 0xca22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca21), 0x79);
        // 79 037B
        gbc.setState(0xe6e7, 0xa606, 0x8b20, 0x7f0, 0xfe11, 0x5baa, 0x0, 0x1);
        gbc.writeMem(0xe6e7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa606);
        EXPECT(gbc.pc(), 0xe6e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6e7), 0x79);
        // 79 037C
        gbc.setState(0x4416, 0x56fe, 0xed40, 0x3649, 0x90f, 0x765f, 0x0, 0x1);
        gbc.writeMem(0x4416, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x56fe);
        EXPECT(gbc.pc(), 0x4417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 037D
        gbc.setState(0xe671, 0x6a5, 0xc110, 0x22ae, 0x4e21, 0xceaa, 0x1, 0x1);
        gbc.writeMem(0xe671, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6a5);
        EXPECT(gbc.pc(), 0xe672);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe671), 0x79);
        // 79 037E
        gbc.setState(0x2b31, 0xe414, 0x3ae0, 0x62e1, 0x385f, 0x86c1, 0x0, 0x0);
        gbc.writeMem(0x2b31, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe414);
        EXPECT(gbc.pc(), 0x2b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 037F
        gbc.setState(0x3c88, 0x3783, 0x20d0, 0x3061, 0x8ed0, 0x6263, 0x1, 0x0);
        gbc.writeMem(0x3c88, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3783);
        EXPECT(gbc.pc(), 0x3c89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0380
        gbc.setState(0x3a89, 0x304e, 0x2ec0, 0x2914, 0x4618, 0x5b49, 0x0, 0x0);
        gbc.writeMem(0x3a89, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x304e);
        EXPECT(gbc.pc(), 0x3a8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0381
        gbc.setState(0xd092, 0x1a20, 0x9830, 0x7e20, 0x5e2a, 0x55f6, 0x0, 0x1);
        gbc.writeMem(0xd092, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1a20);
        EXPECT(gbc.pc(), 0xd093);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd092), 0x79);
        // 79 0383
        gbc.setState(0x4b13, 0x3d3b, 0x9410, 0xa2c8, 0xbafe, 0x9797, 0x0, 0x1);
        gbc.writeMem(0x4b13, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3d3b);
        EXPECT(gbc.pc(), 0x4b14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0384
        gbc.setState(0x9e82, 0x476a, 0x3c30, 0x6400, 0x10f2, 0xd749, 0x1, 0x0);
        gbc.writeMem(0x9e82, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x476a);
        EXPECT(gbc.pc(), 0x9e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e82), 0x79);
        // 79 0385
        gbc.setState(0x7e3b, 0x3c30, 0x8d70, 0x86cf, 0xc0b6, 0x3c53, 0x1, 0x1);
        gbc.writeMem(0x7e3b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3c30);
        EXPECT(gbc.pc(), 0x7e3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0386
        gbc.setState(0xa05e, 0x9418, 0x7870, 0xe9f5, 0x9fdd, 0x4090, 0x1, 0x0);
        gbc.writeMem(0xa05e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9418);
        EXPECT(gbc.pc(), 0xa05f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa05e), 0x79);
        // 79 0387
        gbc.setState(0x8abd, 0xb4d, 0xbf20, 0x2787, 0x9d9, 0xeb1b, 0x0, 0x1);
        gbc.writeMem(0x8abd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb4d);
        EXPECT(gbc.pc(), 0x8abe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8abd), 0x79);
        // 79 0388
        gbc.setState(0x891c, 0x61c8, 0xd0b0, 0x79a4, 0xb354, 0x5708, 0x1, 0x1);
        gbc.writeMem(0x891c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x61c8);
        EXPECT(gbc.pc(), 0x891d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x891c), 0x79);
        // 79 0389
        gbc.setState(0xafb3, 0xa17, 0xa320, 0xf8e1, 0xc6f3, 0x9731, 0x1, 0x1);
        gbc.writeMem(0xafb3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa17);
        EXPECT(gbc.pc(), 0xafb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafb3), 0x79);
        // 79 038A
        gbc.setState(0x2f3e, 0xfee4, 0x4540, 0xd4dd, 0xa037, 0xac1d, 0x0, 0x1);
        gbc.writeMem(0x2f3e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfee4);
        EXPECT(gbc.pc(), 0x2f3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 038B
        gbc.setState(0x2249, 0x4e65, 0x0, 0xd4e2, 0x9fcb, 0x46c5, 0x1, 0x0);
        gbc.writeMem(0x2249, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4e65);
        EXPECT(gbc.pc(), 0x224a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 038C
        gbc.setState(0x4643, 0x6089, 0xb7c0, 0xdf47, 0x7145, 0xc929, 0x1, 0x1);
        gbc.writeMem(0x4643, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6089);
        EXPECT(gbc.pc(), 0x4644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 038D
        gbc.setState(0x98c3, 0xc547, 0xf9c0, 0xb2c5, 0x6bef, 0x1647, 0x1, 0x0);
        gbc.writeMem(0x98c3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc547);
        EXPECT(gbc.pc(), 0x98c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c3), 0x79);
        // 79 038E
        gbc.setState(0x8da1, 0x9574, 0x1780, 0x8121, 0xfac3, 0xa123, 0x1, 0x1);
        gbc.writeMem(0x8da1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x9574);
        EXPECT(gbc.pc(), 0x8da2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8da1), 0x79);
        // 79 0390
        gbc.setState(0x506b, 0x52bd, 0xb520, 0xe13c, 0x2030, 0xe46b, 0x1, 0x1);
        gbc.writeMem(0x506b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x52bd);
        EXPECT(gbc.pc(), 0x506c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 0391
        gbc.setState(0x82b3, 0x6aa6, 0x26b0, 0x44dd, 0x55c5, 0xc2af, 0x1, 0x0);
        gbc.writeMem(0x82b3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6aa6);
        EXPECT(gbc.pc(), 0x82b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82b3), 0x79);
        // 79 0392
        gbc.setState(0x4fe5, 0x9293, 0xf890, 0x218, 0xd5a, 0x1b99, 0x0, 0x1);
        gbc.writeMem(0x4fe5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x9293);
        EXPECT(gbc.pc(), 0x4fe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0393
        gbc.setState(0x22e0, 0xbb17, 0xcc10, 0x9e32, 0xdc1d, 0x44dd, 0x1, 0x0);
        gbc.writeMem(0x22e0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xbb17);
        EXPECT(gbc.pc(), 0x22e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0394
        gbc.setState(0xcb2b, 0x5afb, 0x4990, 0xf27d, 0x1a87, 0x9e36, 0x1, 0x1);
        gbc.writeMem(0xcb2b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5afb);
        EXPECT(gbc.pc(), 0xcb2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb2b), 0x79);
        // 79 0395
        gbc.setState(0x2827, 0xb994, 0x980, 0xecd0, 0xbb49, 0xa41d, 0x1, 0x1);
        gbc.writeMem(0x2827, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb994);
        EXPECT(gbc.pc(), 0x2828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 0396
        gbc.setState(0x11ba, 0xa6d2, 0x1170, 0x85dc, 0x47ec, 0x378e, 0x0, 0x1);
        gbc.writeMem(0x11ba, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa6d2);
        EXPECT(gbc.pc(), 0x11bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0397
        gbc.setState(0x3ac7, 0xb399, 0x3c70, 0x72d5, 0xb7e5, 0xea48, 0x0, 0x0);
        gbc.writeMem(0x3ac7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb399);
        EXPECT(gbc.pc(), 0x3ac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 0398
        gbc.setState(0x1ee8, 0x95ef, 0x9990, 0xd021, 0x3985, 0x1b2d, 0x0, 0x1);
        gbc.writeMem(0x1ee8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x95ef);
        EXPECT(gbc.pc(), 0x1ee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 0399
        gbc.setState(0xaff1, 0x18d2, 0xbc30, 0xc5db, 0x3214, 0xe79f, 0x1, 0x0);
        gbc.writeMem(0xaff1, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x18d2);
        EXPECT(gbc.pc(), 0xaff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaff1), 0x79);
        // 79 039A
        gbc.setState(0xbb29, 0xff5a, 0x34e0, 0x2802, 0x81fd, 0x159a, 0x0, 0x1);
        gbc.writeMem(0xbb29, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xff5a);
        EXPECT(gbc.pc(), 0xbb2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb29), 0x79);
        // 79 039B
        gbc.setState(0xb920, 0xa6f1, 0x9430, 0x1395, 0x85eb, 0xcc6a, 0x0, 0x1);
        gbc.writeMem(0xb920, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa6f1);
        EXPECT(gbc.pc(), 0xb921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb920), 0x79);
        // 79 039C
        gbc.setState(0x5ccd, 0x8bf4, 0xb90, 0x9edc, 0x9563, 0xeaa5, 0x1, 0x1);
        gbc.writeMem(0x5ccd, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8bf4);
        EXPECT(gbc.pc(), 0x5cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 039D
        gbc.setState(0x424b, 0xe3d0, 0x9c20, 0x9381, 0x152e, 0x15f1, 0x1, 0x1);
        gbc.writeMem(0x424b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe3d0);
        EXPECT(gbc.pc(), 0x424c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 039F
        gbc.setState(0xd54a, 0xcb9, 0x90e0, 0xc128, 0xc1e1, 0xc28, 0x1, 0x1);
        gbc.writeMem(0xd54a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xcb9);
        EXPECT(gbc.pc(), 0xd54b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd54a), 0x79);
        // 79 03A0
        gbc.setState(0xb6a6, 0xe49e, 0x15a0, 0xe903, 0xff77, 0xf9f4, 0x1, 0x0);
        gbc.writeMem(0xb6a6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe49e);
        EXPECT(gbc.pc(), 0xb6a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6a6), 0x79);
        // 79 03A1
        gbc.setState(0xa6ad, 0xea60, 0x9d00, 0x506e, 0x182c, 0xca93, 0x1, 0x1);
        gbc.writeMem(0xa6ad, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xea60);
        EXPECT(gbc.pc(), 0xa6ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ad), 0x79);
        // 79 03A2
        gbc.setState(0xee16, 0x84d5, 0x3f20, 0xc5c3, 0xa97e, 0xbfba, 0x1, 0x1);
        gbc.writeMem(0xee16, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x84d5);
        EXPECT(gbc.pc(), 0xee17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee16), 0x79);
        // 79 03A3
        gbc.setState(0xc8b0, 0x614, 0x81c0, 0xbafc, 0x5cb4, 0x1817, 0x0, 0x1);
        gbc.writeMem(0xc8b0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x614);
        EXPECT(gbc.pc(), 0xc8b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8b0), 0x79);
        // 79 03A4
        gbc.setState(0x16ff, 0x6c20, 0x5aa0, 0xf4ad, 0xd849, 0x6ba, 0x0, 0x1);
        gbc.writeMem(0x16ff, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6c20);
        EXPECT(gbc.pc(), 0x1700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 03A5
        gbc.setState(0xab12, 0x7116, 0xf630, 0xa71, 0x2dde, 0x5ca, 0x0, 0x0);
        gbc.writeMem(0xab12, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7116);
        EXPECT(gbc.pc(), 0xab13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab12), 0x79);
        // 79 03A6
        gbc.setState(0xc451, 0xf12a, 0x5ee0, 0x308a, 0x1c78, 0x448c, 0x0, 0x0);
        gbc.writeMem(0xc451, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf12a);
        EXPECT(gbc.pc(), 0xc452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc451), 0x79);
        // 79 03A7
        gbc.setState(0x9aca, 0x5175, 0xdd10, 0xf684, 0x583f, 0x11a, 0x1, 0x0);
        gbc.writeMem(0x9aca, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5175);
        EXPECT(gbc.pc(), 0x9acb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aca), 0x79);
        // 79 03A8
        gbc.setState(0xe7e2, 0x84c8, 0xd450, 0xa26b, 0x5b3a, 0x4ace, 0x1, 0x0);
        gbc.writeMem(0xe7e2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x84c8);
        EXPECT(gbc.pc(), 0xe7e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7e2), 0x79);
        // 79 03A9
        gbc.setState(0xe243, 0xf539, 0x1b90, 0x3d98, 0xaca1, 0x23a2, 0x0, 0x1);
        gbc.writeMem(0xe243, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf539);
        EXPECT(gbc.pc(), 0xe244);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe243), 0x79);
        // 79 03AA
        gbc.setState(0xcf0, 0xabf4, 0x9650, 0xcad, 0x448f, 0xcf90, 0x0, 0x0);
        gbc.writeMem(0xcf0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xabf4);
        EXPECT(gbc.pc(), 0xcf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 03AB
        gbc.setState(0x13de, 0x2a71, 0xf6f0, 0x5396, 0x8e, 0xc4f8, 0x0, 0x0);
        gbc.writeMem(0x13de, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2a71);
        EXPECT(gbc.pc(), 0x13df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 03AC
        gbc.setState(0x7246, 0x8820, 0x7ca0, 0xf6c7, 0x78bd, 0x8abf, 0x0, 0x0);
        gbc.writeMem(0x7246, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8820);
        EXPECT(gbc.pc(), 0x7247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 03AD
        gbc.setState(0x1e65, 0xadd5, 0x27e0, 0x5308, 0x41d0, 0xce4b, 0x0, 0x1);
        gbc.writeMem(0x1e65, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xadd5);
        EXPECT(gbc.pc(), 0x1e66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 03AE
        gbc.setState(0x3f8a, 0x942c, 0x460, 0x2440, 0x7c85, 0x6512, 0x0, 0x1);
        gbc.writeMem(0x3f8a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x942c);
        EXPECT(gbc.pc(), 0x3f8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 03AF
        gbc.setState(0xba6e, 0x2102, 0x3d80, 0x10f3, 0x4b31, 0xfcad, 0x1, 0x0);
        gbc.writeMem(0xba6e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2102);
        EXPECT(gbc.pc(), 0xba6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba6e), 0x79);
        // 79 03B0
        gbc.setState(0x87ed, 0xeb92, 0xfac0, 0x8d84, 0x8a11, 0x2534, 0x1, 0x0);
        gbc.writeMem(0x87ed, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xeb92);
        EXPECT(gbc.pc(), 0x87ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87ed), 0x79);
        // 79 03B2
        gbc.setState(0x8df8, 0xcfed, 0x7740, 0x8d2e, 0xa01b, 0xe549, 0x0, 0x1);
        gbc.writeMem(0x8df8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xcfed);
        EXPECT(gbc.pc(), 0x8df9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8df8), 0x79);
        // 79 03B3
        gbc.setState(0x154f, 0x1966, 0x9a40, 0xe564, 0xa015, 0x9df7, 0x0, 0x1);
        gbc.writeMem(0x154f, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1966);
        EXPECT(gbc.pc(), 0x1550);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 03B4
        gbc.setState(0x68f7, 0x498f, 0x60d0, 0xb816, 0x3ae4, 0xb73b, 0x1, 0x0);
        gbc.writeMem(0x68f7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x498f);
        EXPECT(gbc.pc(), 0x68f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 03B5
        gbc.setState(0x54e4, 0xbc05, 0x35a0, 0xf8ba, 0xeb72, 0x6717, 0x1, 0x1);
        gbc.writeMem(0x54e4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xbc05);
        EXPECT(gbc.pc(), 0x54e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 03B6
        gbc.setState(0xa2c2, 0x57b, 0x3550, 0xcb43, 0xf102, 0x98e3, 0x1, 0x0);
        gbc.writeMem(0xa2c2, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x57b);
        EXPECT(gbc.pc(), 0xa2c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2c2), 0x79);
        // 79 03B7
        gbc.setState(0xde80, 0x34ee, 0x9b50, 0xbf47, 0x9363, 0xb5a3, 0x0, 0x0);
        gbc.writeMem(0xde80, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x34ee);
        EXPECT(gbc.pc(), 0xde81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde80), 0x79);
        // 79 03B8
        gbc.setState(0x9aff, 0x537, 0xec50, 0x9ec7, 0x8db4, 0xe5af, 0x1, 0x1);
        gbc.writeMem(0x9aff, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x537);
        EXPECT(gbc.pc(), 0x9b00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aff), 0x79);
        // 79 03BA
        gbc.setState(0x2a4e, 0x61c8, 0x5970, 0x9634, 0x5172, 0x1515, 0x0, 0x0);
        gbc.writeMem(0x2a4e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x61c8);
        EXPECT(gbc.pc(), 0x2a4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 03BB
        gbc.setState(0xa986, 0x9d0e, 0xc610, 0x6956, 0x5602, 0xd640, 0x0, 0x1);
        gbc.writeMem(0xa986, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9d0e);
        EXPECT(gbc.pc(), 0xa987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa986), 0x79);
        // 79 03BC
        gbc.setState(0x1c4d, 0xdf2, 0x53e0, 0x8a86, 0xc626, 0x9191, 0x0, 0x1);
        gbc.writeMem(0x1c4d, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xdf2);
        EXPECT(gbc.pc(), 0x1c4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 03BD
        gbc.setState(0xba00, 0xd5d5, 0x1540, 0xbad3, 0x1f84, 0x872a, 0x0, 0x1);
        gbc.writeMem(0xba00, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd5d5);
        EXPECT(gbc.pc(), 0xba01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba00), 0x79);
        // 79 03BE
        gbc.setState(0x5372, 0xb844, 0x6e20, 0x4124, 0x486, 0xd80f, 0x0, 0x1);
        gbc.writeMem(0x5372, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb844);
        EXPECT(gbc.pc(), 0x5373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 03BF
        gbc.setState(0x96a, 0x7122, 0xf930, 0xe899, 0x641e, 0xc396, 0x0, 0x1);
        gbc.writeMem(0x96a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7122);
        EXPECT(gbc.pc(), 0x96b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 03C0
        gbc.setState(0xd597, 0x2556, 0x360, 0x2b95, 0x8a6e, 0x2248, 0x1, 0x1);
        gbc.writeMem(0xd597, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2556);
        EXPECT(gbc.pc(), 0xd598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd597), 0x79);
        // 79 03C1
        gbc.setState(0x9123, 0x7f5e, 0x6130, 0xc60e, 0x1a1, 0x8e40, 0x0, 0x1);
        gbc.writeMem(0x9123, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7f5e);
        EXPECT(gbc.pc(), 0x9124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9123), 0x79);
        // 79 03C2
        gbc.setState(0x18b6, 0x172a, 0xe7d0, 0xa384, 0x84c2, 0x10e7, 0x1, 0x0);
        gbc.writeMem(0x18b6, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x172a);
        EXPECT(gbc.pc(), 0x18b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 03C3
        gbc.setState(0x4774, 0xc2ea, 0xd670, 0xb1e0, 0x7103, 0xc426, 0x1, 0x0);
        gbc.writeMem(0x4774, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc2ea);
        EXPECT(gbc.pc(), 0x4775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 03C4
        gbc.setState(0x298, 0x1665, 0xee20, 0xb604, 0x5157, 0xe810, 0x0, 0x1);
        gbc.writeMem(0x298, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1665);
        EXPECT(gbc.pc(), 0x299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 03C5
        gbc.setState(0xe700, 0xfa06, 0x4450, 0x239a, 0xdaef, 0x6577, 0x1, 0x1);
        gbc.writeMem(0xe700, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xfa06);
        EXPECT(gbc.pc(), 0xe701);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe700), 0x79);
        // 79 03C6
        gbc.setState(0x5085, 0xf501, 0x73d0, 0x2aa9, 0x29f9, 0xfe8b, 0x1, 0x1);
        gbc.writeMem(0x5085, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xf501);
        EXPECT(gbc.pc(), 0x5086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 03C7
        gbc.setState(0x3c33, 0x528, 0xbfb0, 0x2f4, 0xb7d7, 0x423e, 0x0, 0x0);
        gbc.writeMem(0x3c33, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x528);
        EXPECT(gbc.pc(), 0x3c34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 03C8
        gbc.setState(0xd2a9, 0xc88e, 0xf400, 0x82d2, 0xc235, 0x2c8c, 0x1, 0x0);
        gbc.writeMem(0xd2a9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc88e);
        EXPECT(gbc.pc(), 0xd2aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2a9), 0x79);
        // 79 03C9
        gbc.setState(0x65ea, 0xc968, 0xaf00, 0x2e0c, 0xa8a0, 0x283e, 0x1, 0x0);
        gbc.writeMem(0x65ea, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc968);
        EXPECT(gbc.pc(), 0x65eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 03CA
        gbc.setState(0xb50a, 0xc958, 0x2d00, 0x601e, 0x9d3, 0x7784, 0x1, 0x1);
        gbc.writeMem(0xb50a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc958);
        EXPECT(gbc.pc(), 0xb50b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb50a), 0x79);
        // 79 03CB
        gbc.setState(0x9b93, 0xfdb6, 0xea30, 0xbe6c, 0xc5da, 0x7f9, 0x1, 0x0);
        gbc.writeMem(0x9b93, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfdb6);
        EXPECT(gbc.pc(), 0x9b94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b93), 0x79);
        // 79 03CC
        gbc.setState(0x635b, 0xccb4, 0x4df0, 0xc42b, 0xef79, 0x442e, 0x1, 0x0);
        gbc.writeMem(0x635b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xccb4);
        EXPECT(gbc.pc(), 0x635c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 03CD
        gbc.setState(0x448e, 0xf5c7, 0xf2d0, 0x69e1, 0x5968, 0x9753, 0x1, 0x1);
        gbc.writeMem(0x448e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf5c7);
        EXPECT(gbc.pc(), 0x448f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 03CE
        gbc.setState(0x8853, 0x151d, 0x7a90, 0x5710, 0x4fa7, 0xf1dd, 0x0, 0x0);
        gbc.writeMem(0x8853, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x151d);
        EXPECT(gbc.pc(), 0x8854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8853), 0x79);
        // 79 03CF
        gbc.setState(0x704a, 0xbee7, 0xe0, 0x6b2f, 0x6438, 0x5301, 0x1, 0x1);
        gbc.writeMem(0x704a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbee7);
        EXPECT(gbc.pc(), 0x704b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 03D0
        gbc.setState(0xa7f9, 0xf96f, 0x5c20, 0x1a9d, 0x2868, 0xd1f5, 0x1, 0x1);
        gbc.writeMem(0xa7f9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf96f);
        EXPECT(gbc.pc(), 0xa7fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f9), 0x79);
        // 79 03D1
        gbc.setState(0xade0, 0x8984, 0x7230, 0xe75d, 0x8d2c, 0x3591, 0x1, 0x1);
        gbc.writeMem(0xade0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8984);
        EXPECT(gbc.pc(), 0xade1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xade0), 0x79);
        // 79 03D2
        gbc.setState(0x605a, 0xc3ea, 0xa020, 0x5d3f, 0xd2, 0xb9a3, 0x0, 0x1);
        gbc.writeMem(0x605a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc3ea);
        EXPECT(gbc.pc(), 0x605b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 03D4
        gbc.setState(0xc4ac, 0xcad0, 0x430, 0x854a, 0xee2f, 0xbb5, 0x1, 0x0);
        gbc.writeMem(0xc4ac, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xcad0);
        EXPECT(gbc.pc(), 0xc4ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ac), 0x79);
        // 79 03D5
        gbc.setState(0xeb58, 0x8f9b, 0x7800, 0x76cc, 0x8e6a, 0x96ab, 0x0, 0x0);
        gbc.writeMem(0xeb58, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x8f9b);
        EXPECT(gbc.pc(), 0xeb59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb58), 0x79);
        // 79 03D6
        gbc.setState(0xde43, 0xf1f5, 0xca60, 0x2eac, 0x76ea, 0xf56f, 0x0, 0x1);
        gbc.writeMem(0xde43, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf1f5);
        EXPECT(gbc.pc(), 0xde44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde43), 0x79);
        // 79 03D7
        gbc.setState(0x2bb7, 0x641c, 0xaf70, 0xdfb9, 0xbbdf, 0x2b4d, 0x1, 0x0);
        gbc.writeMem(0x2bb7, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x641c);
        EXPECT(gbc.pc(), 0x2bb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 03D8
        gbc.setState(0xa927, 0x17d4, 0xaaf0, 0xb9f7, 0x83f5, 0xe8c2, 0x1, 0x1);
        gbc.writeMem(0xa927, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x17d4);
        EXPECT(gbc.pc(), 0xa928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa927), 0x79);
        // 79 03D9
        gbc.setState(0xb4f0, 0x7c76, 0x2c40, 0x41a9, 0xb20d, 0x3c52, 0x1, 0x0);
        gbc.writeMem(0xb4f0, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7c76);
        EXPECT(gbc.pc(), 0xb4f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4f0), 0x79);
        // 79 03DA
        gbc.setState(0x7a97, 0xe8ec, 0x8490, 0xecf8, 0xff40, 0x6c45, 0x0, 0x0);
        gbc.writeMem(0x7a97, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe8ec);
        EXPECT(gbc.pc(), 0x7a98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 03DB
        gbc.setState(0xee05, 0x8bfa, 0xaf00, 0x21c2, 0x3e77, 0x12da, 0x1, 0x1);
        gbc.writeMem(0xee05, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8bfa);
        EXPECT(gbc.pc(), 0xee06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee05), 0x79);
        // 79 03DC
        gbc.setState(0x907a, 0xd29d, 0x9db0, 0x7467, 0x95f1, 0x3b3f, 0x0, 0x1);
        gbc.writeMem(0x907a, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd29d);
        EXPECT(gbc.pc(), 0x907b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x907a), 0x79);
        // 79 03DD
        gbc.setState(0x40ab, 0x9038, 0xe3d0, 0x695f, 0x2f87, 0x2d08, 0x1, 0x1);
        gbc.writeMem(0x40ab, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9038);
        EXPECT(gbc.pc(), 0x40ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 79 03DE
        gbc.setState(0x59a4, 0x8fae, 0x3e30, 0xdc19, 0x6830, 0xcd76, 0x1, 0x0);
        gbc.writeMem(0x59a4, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8fae);
        EXPECT(gbc.pc(), 0x59a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 03DF
        gbc.setState(0xd82, 0x46f, 0xe0a0, 0xd058, 0xb7ab, 0xdf0c, 0x0, 0x0);
        gbc.writeMem(0xd82, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x46f);
        EXPECT(gbc.pc(), 0xd83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 03E1
        gbc.setState(0xceb9, 0x2d7b, 0x6750, 0x980f, 0x3b09, 0x641a, 0x0, 0x1);
        gbc.writeMem(0xceb9, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2d7b);
        EXPECT(gbc.pc(), 0xceba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb9), 0x79);
        // 79 03E2
        gbc.setState(0x917e, 0xbed4, 0x48a0, 0xd27a, 0xa764, 0xa48d, 0x1, 0x1);
        gbc.writeMem(0x917e, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xbed4);
        EXPECT(gbc.pc(), 0x917f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x917e), 0x79);
        // 79 03E3
        gbc.setState(0x38c5, 0xd4fc, 0xcb70, 0xccc7, 0x535f, 0xcaab, 0x1, 0x1);
        gbc.writeMem(0x38c5, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd4fc);
        EXPECT(gbc.pc(), 0x38c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 03E4
        gbc.setState(0x3e36, 0x6b2a, 0x6330, 0x9d14, 0xa75e, 0x56e9, 0x0, 0x0);
        gbc.writeMem(0x3e36, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6b2a);
        EXPECT(gbc.pc(), 0x3e37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 79 03E5
        gbc.setState(0x5224, 0xa35a, 0xffc0, 0x11a8, 0x4079, 0xc19b, 0x0, 0x0);
        gbc.writeMem(0x5224, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa35a);
        EXPECT(gbc.pc(), 0x5225);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 79 03E6
        gbc.setState(0x40ea, 0xeca7, 0xdd60, 0xd0a3, 0x7fd7, 0xaa9b, 0x0, 0x0);
        gbc.writeMem(0x40ea, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xeca7);
        EXPECT(gbc.pc(), 0x40eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 79 03E7
        gbc.setState(0x903c, 0xf0b2, 0x5490, 0x9bf4, 0xb16, 0xa7bc, 0x1, 0x0);
        gbc.writeMem(0x903c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf0b2);
        EXPECT(gbc.pc(), 0x903d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x903c), 0x79);
    }
}
#endif
