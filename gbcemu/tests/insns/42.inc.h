    TEST(gbcemu, opcode_42) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 42 0000
        gbc.setState(0x5b8, 0xfe6, 0x7410, 0xbd43, 0x50c6, 0xb5e1, 0x1, 0x1);
        gbc.writeMem(0x5b8, { 0x42 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfe6, gbc.sp());
        EXPECT(0x5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0001
        gbc.setState(0x2a34, 0x5a95, 0x39c0, 0xa7b9, 0x8b88, 0x4e2a, 0x1, 0x1);
        gbc.writeMem(0x2a34, { 0x42 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5a95, gbc.sp());
        EXPECT(0x2a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0002
        gbc.setState(0xc9fa, 0x5a05, 0x87f0, 0x1983, 0x6bb8, 0x7ed2, 0x0, 0x0);
        gbc.writeMem(0xc9fa, { 0x42 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5a05, gbc.sp());
        EXPECT(0xc9fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc9fa));
        // 42 0004
        gbc.setState(0x8704, 0xa8be, 0x27b0, 0x8ca3, 0x98d4, 0x9af, 0x1, 0x1);
        gbc.writeMem(0x8704, { 0x42 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa8be, gbc.sp());
        EXPECT(0x8705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8704));
        // 42 0005
        gbc.setState(0x48e8, 0x75d, 0xcc30, 0x938, 0xbad9, 0x8d9b, 0x0, 0x1);
        gbc.writeMem(0x48e8, { 0x42 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x75d, gbc.sp());
        EXPECT(0x48e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0006
        gbc.setState(0x209b, 0x28c0, 0xf920, 0xa32, 0xd068, 0xa9d8, 0x0, 0x1);
        gbc.writeMem(0x209b, { 0x42 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x28c0, gbc.sp());
        EXPECT(0x209c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0007
        gbc.setState(0xb01a, 0xa050, 0x6080, 0x2529, 0x44e5, 0xee74, 0x1, 0x0);
        gbc.writeMem(0xb01a, { 0x42 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa050, gbc.sp());
        EXPECT(0xb01b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb01a));
        // 42 000A
        gbc.setState(0xeb5a, 0x9b72, 0x7630, 0x4389, 0xc55, 0x8b66, 0x1, 0x1);
        gbc.writeMem(0xeb5a, { 0x42 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9b72, gbc.sp());
        EXPECT(0xeb5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xeb5a));
        // 42 000B
        gbc.setState(0x3236, 0x7041, 0x9750, 0x6272, 0xf4, 0x9cf8, 0x0, 0x0);
        gbc.writeMem(0x3236, { 0x42 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7041, gbc.sp());
        EXPECT(0x3237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 000C
        gbc.setState(0x2e37, 0xfd0c, 0xd5e0, 0x573a, 0x5110, 0x2efc, 0x1, 0x1);
        gbc.writeMem(0x2e37, { 0x42 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfd0c, gbc.sp());
        EXPECT(0x2e38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 000D
        gbc.setState(0x20a0, 0x2f87, 0xc540, 0x69c0, 0xd088, 0x74da, 0x0, 0x0);
        gbc.writeMem(0x20a0, { 0x42 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2f87, gbc.sp());
        EXPECT(0x20a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 000E
        gbc.setState(0xc60a, 0x5886, 0x990, 0x69d5, 0xcd2c, 0xcb24, 0x0, 0x1);
        gbc.writeMem(0xc60a, { 0x42 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5886, gbc.sp());
        EXPECT(0xc60b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc60a));
        // 42 000F
        gbc.setState(0xa9e0, 0xa93d, 0xe8c0, 0xa842, 0x8e28, 0xe649, 0x1, 0x1);
        gbc.writeMem(0xa9e0, { 0x42 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa93d, gbc.sp());
        EXPECT(0xa9e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa9e0));
        // 42 0010
        gbc.setState(0x3848, 0x2442, 0xbd70, 0x9723, 0x1167, 0xe8a0, 0x1, 0x1);
        gbc.writeMem(0x3848, { 0x42 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2442, gbc.sp());
        EXPECT(0x3849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0011
        gbc.setState(0xcc2e, 0xf1db, 0xff60, 0x251d, 0xdf6b, 0x543b, 0x1, 0x0);
        gbc.writeMem(0xcc2e, { 0x42 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf1db, gbc.sp());
        EXPECT(0xcc2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcc2e));
        // 42 0012
        gbc.setState(0x85a1, 0xfb2e, 0xe370, 0xff1a, 0x5c2c, 0xb27b, 0x0, 0x1);
        gbc.writeMem(0x85a1, { 0x42 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfb2e, gbc.sp());
        EXPECT(0x85a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x85a1));
        // 42 0013
        gbc.setState(0x244c, 0xdd0d, 0xc1f0, 0xb776, 0xa254, 0x390e, 0x1, 0x0);
        gbc.writeMem(0x244c, { 0x42 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdd0d, gbc.sp());
        EXPECT(0x244d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0014
        gbc.setState(0xefc3, 0x494c, 0x6fb0, 0x48bd, 0x1f05, 0xd5fe, 0x1, 0x1);
        gbc.writeMem(0xefc3, { 0x42 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x494c, gbc.sp());
        EXPECT(0xefc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xefc3));
        // 42 0015
        gbc.setState(0x53ab, 0x1625, 0x9d00, 0xa6fc, 0x4b13, 0xbe79, 0x1, 0x0);
        gbc.writeMem(0x53ab, { 0x42 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1625, gbc.sp());
        EXPECT(0x53ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0016
        gbc.setState(0xb870, 0x59a, 0x5bf0, 0xdd18, 0x39fb, 0xf11d, 0x1, 0x1);
        gbc.writeMem(0xb870, { 0x42 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x59a, gbc.sp());
        EXPECT(0xb871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb870));
        // 42 0017
        gbc.setState(0x6edf, 0xbbdb, 0x98b0, 0xcd14, 0x81b7, 0x5dc5, 0x1, 0x0);
        gbc.writeMem(0x6edf, { 0x42 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbbdb, gbc.sp());
        EXPECT(0x6ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0018
        gbc.setState(0x14c, 0x71fb, 0x2f70, 0x930c, 0xa747, 0xf4cc, 0x0, 0x1);
        gbc.writeMem(0x14c, { 0x42 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x71fb, gbc.sp());
        EXPECT(0x14d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0019
        gbc.setState(0xb12a, 0xa97a, 0xf6a0, 0xb8e5, 0x76da, 0x34c0, 0x0, 0x1);
        gbc.writeMem(0xb12a, { 0x42 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa97a, gbc.sp());
        EXPECT(0xb12b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb12a));
        // 42 001A
        gbc.setState(0x969e, 0xb065, 0xe680, 0x685c, 0xfe74, 0xf320, 0x1, 0x1);
        gbc.writeMem(0x969e, { 0x42 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb065, gbc.sp());
        EXPECT(0x969f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x969e));
        // 42 001B
        gbc.setState(0xe3fe, 0x3b37, 0xe2d0, 0xaf3, 0x51e0, 0x7a57, 0x0, 0x1);
        gbc.writeMem(0xe3fe, { 0x42 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3b37, gbc.sp());
        EXPECT(0xe3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe3fe));
        // 42 001C
        gbc.setState(0x1648, 0x83b1, 0x20b0, 0x682f, 0xd5a6, 0xee11, 0x0, 0x0);
        gbc.writeMem(0x1648, { 0x42 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x83b1, gbc.sp());
        EXPECT(0x1649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 001D
        gbc.setState(0x1941, 0x631, 0xdeb0, 0x2fc5, 0xeb96, 0xe62f, 0x0, 0x0);
        gbc.writeMem(0x1941, { 0x42 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x631, gbc.sp());
        EXPECT(0x1942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 001E
        gbc.setState(0x372b, 0x9fd7, 0x93b0, 0x3e1c, 0x96a6, 0xfbff, 0x1, 0x0);
        gbc.writeMem(0x372b, { 0x42 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9fd7, gbc.sp());
        EXPECT(0x372c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 001F
        gbc.setState(0xbeb2, 0xde72, 0x5b50, 0x42bd, 0xa410, 0xcad9, 0x0, 0x0);
        gbc.writeMem(0xbeb2, { 0x42 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xde72, gbc.sp());
        EXPECT(0xbeb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbeb2));
        // 42 0020
        gbc.setState(0xe52f, 0x8d9c, 0xc430, 0xd8f1, 0x1e4, 0x1bcf, 0x0, 0x0);
        gbc.writeMem(0xe52f, { 0x42 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8d9c, gbc.sp());
        EXPECT(0xe530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe52f));
        // 42 0021
        gbc.setState(0x4b38, 0xf3bb, 0x3d20, 0xc018, 0x893c, 0x3c, 0x0, 0x1);
        gbc.writeMem(0x4b38, { 0x42 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf3bb, gbc.sp());
        EXPECT(0x4b39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0022
        gbc.setState(0x5ece, 0xc7fe, 0xd800, 0xfbf5, 0x4aad, 0x1d5a, 0x0, 0x0);
        gbc.writeMem(0x5ece, { 0x42 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc7fe, gbc.sp());
        EXPECT(0x5ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0023
        gbc.setState(0xa29c, 0x9637, 0x68c0, 0x90dc, 0xf234, 0x4c53, 0x1, 0x1);
        gbc.writeMem(0xa29c, { 0x42 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9637, gbc.sp());
        EXPECT(0xa29d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa29c));
        // 42 0024
        gbc.setState(0x36aa, 0xae78, 0x4410, 0x9fa2, 0x3b41, 0x619e, 0x1, 0x1);
        gbc.writeMem(0x36aa, { 0x42 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xae78, gbc.sp());
        EXPECT(0x36ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0025
        gbc.setState(0x5f20, 0x5653, 0x730, 0xacb0, 0x4a71, 0x2e22, 0x0, 0x1);
        gbc.writeMem(0x5f20, { 0x42 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5653, gbc.sp());
        EXPECT(0x5f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0026
        gbc.setState(0x89a1, 0x23b, 0x2640, 0x34cc, 0x38c, 0x1f6e, 0x0, 0x0);
        gbc.writeMem(0x89a1, { 0x42 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x23b, gbc.sp());
        EXPECT(0x89a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x89a1));
        // 42 0027
        gbc.setState(0xda8e, 0x3d92, 0xf230, 0x2dc2, 0xba7d, 0x273c, 0x1, 0x0);
        gbc.writeMem(0xda8e, { 0x42 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3d92, gbc.sp());
        EXPECT(0xda8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xda8e));
        // 42 0028
        gbc.setState(0x58ee, 0xa924, 0x4420, 0x9a74, 0x6d01, 0xc91f, 0x1, 0x0);
        gbc.writeMem(0x58ee, { 0x42 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa924, gbc.sp());
        EXPECT(0x58ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0029
        gbc.setState(0xd09, 0xb317, 0xc230, 0x65e9, 0xb8a1, 0x9a6c, 0x1, 0x1);
        gbc.writeMem(0xd09, { 0x42 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb317, gbc.sp());
        EXPECT(0xd0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 002A
        gbc.setState(0xaa29, 0x61b7, 0xab30, 0xd385, 0x57fe, 0x3642, 0x1, 0x1);
        gbc.writeMem(0xaa29, { 0x42 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x61b7, gbc.sp());
        EXPECT(0xaa2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xaa29));
        // 42 002B
        gbc.setState(0x79cb, 0x9514, 0x3380, 0x4041, 0xe44c, 0x8032, 0x0, 0x0);
        gbc.writeMem(0x79cb, { 0x42 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9514, gbc.sp());
        EXPECT(0x79cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 002C
        gbc.setState(0xee1a, 0x88ef, 0xf800, 0xa6f, 0x6bd8, 0x565e, 0x0, 0x0);
        gbc.writeMem(0xee1a, { 0x42 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x88ef, gbc.sp());
        EXPECT(0xee1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xee1a));
        // 42 002D
        gbc.setState(0x6874, 0x548a, 0x4cb0, 0x14c7, 0x4c35, 0x2127, 0x1, 0x1);
        gbc.writeMem(0x6874, { 0x42 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x548a, gbc.sp());
        EXPECT(0x6875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 002E
        gbc.setState(0x5edb, 0x332b, 0xaab0, 0x4b6a, 0x9f92, 0x1c57, 0x0, 0x1);
        gbc.writeMem(0x5edb, { 0x42 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x332b, gbc.sp());
        EXPECT(0x5edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 002F
        gbc.setState(0x8bdc, 0x2dbd, 0x5e90, 0xcc78, 0x4ffa, 0x473f, 0x1, 0x1);
        gbc.writeMem(0x8bdc, { 0x42 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2dbd, gbc.sp());
        EXPECT(0x8bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8bdc));
        // 42 0030
        gbc.setState(0x16ca, 0xecad, 0xd3e0, 0xf5f7, 0x67e2, 0x2215, 0x1, 0x0);
        gbc.writeMem(0x16ca, { 0x42 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xecad, gbc.sp());
        EXPECT(0x16cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0031
        gbc.setState(0xa534, 0x2c3b, 0x73b0, 0x8fde, 0x9e10, 0xec3a, 0x1, 0x1);
        gbc.writeMem(0xa534, { 0x42 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2c3b, gbc.sp());
        EXPECT(0xa535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa534));
        // 42 0032
        gbc.setState(0x3e45, 0xcc46, 0x4240, 0xa3cd, 0xfb82, 0x4ee0, 0x0, 0x0);
        gbc.writeMem(0x3e45, { 0x42 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcc46, gbc.sp());
        EXPECT(0x3e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0033
        gbc.setState(0xe372, 0xe272, 0xa980, 0xdc85, 0x562c, 0x60a7, 0x0, 0x1);
        gbc.writeMem(0xe372, { 0x42 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe272, gbc.sp());
        EXPECT(0xe373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe372));
        // 42 0034
        gbc.setState(0x58cb, 0x4b51, 0x28a0, 0xb4f1, 0x35c4, 0xd840, 0x1, 0x1);
        gbc.writeMem(0x58cb, { 0x42 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4b51, gbc.sp());
        EXPECT(0x58cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0035
        gbc.setState(0xe9bf, 0x3e80, 0xa8b0, 0xeb7c, 0x8549, 0x3e17, 0x0, 0x1);
        gbc.writeMem(0xe9bf, { 0x42 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3e80, gbc.sp());
        EXPECT(0xe9c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe9bf));
        // 42 0036
        gbc.setState(0xe6e9, 0x6e7e, 0x5a10, 0x43cc, 0x191e, 0x9c19, 0x0, 0x0);
        gbc.writeMem(0xe6e9, { 0x42 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6e7e, gbc.sp());
        EXPECT(0xe6ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe6e9));
        // 42 0037
        gbc.setState(0xecd1, 0x7a36, 0x3e90, 0xb5de, 0x2825, 0xf262, 0x0, 0x0);
        gbc.writeMem(0xecd1, { 0x42 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7a36, gbc.sp());
        EXPECT(0xecd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xecd1));
        // 42 0038
        gbc.setState(0x1c28, 0xf0ac, 0x7670, 0x5b2d, 0xcea3, 0x3578, 0x0, 0x1);
        gbc.writeMem(0x1c28, { 0x42 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf0ac, gbc.sp());
        EXPECT(0x1c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0039
        gbc.setState(0x8c3e, 0xe45, 0x4fb0, 0xbd62, 0x1889, 0x3ba9, 0x1, 0x1);
        gbc.writeMem(0x8c3e, { 0x42 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe45, gbc.sp());
        EXPECT(0x8c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8c3e));
        // 42 003A
        gbc.setState(0xa230, 0x2364, 0x1d70, 0x878d, 0xd19c, 0xdd7, 0x1, 0x1);
        gbc.writeMem(0xa230, { 0x42 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2364, gbc.sp());
        EXPECT(0xa231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa230));
        // 42 003B
        gbc.setState(0x84b4, 0x6e20, 0xf80, 0xc7d5, 0xcf22, 0x9814, 0x0, 0x0);
        gbc.writeMem(0x84b4, { 0x42 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6e20, gbc.sp());
        EXPECT(0x84b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x84b4));
        // 42 003C
        gbc.setState(0x9b70, 0xe358, 0xa150, 0xfd1, 0x1849, 0x6df9, 0x0, 0x0);
        gbc.writeMem(0x9b70, { 0x42 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe358, gbc.sp());
        EXPECT(0x9b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9b70));
        // 42 003D
        gbc.setState(0x5eb, 0xfcb7, 0x54f0, 0xb994, 0xdf26, 0x23db, 0x0, 0x1);
        gbc.writeMem(0x5eb, { 0x42 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfcb7, gbc.sp());
        EXPECT(0x5ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 003E
        gbc.setState(0x797d, 0x2c81, 0xb810, 0x98e9, 0x63a0, 0x5cb9, 0x1, 0x0);
        gbc.writeMem(0x797d, { 0x42 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2c81, gbc.sp());
        EXPECT(0x797e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 003F
        gbc.setState(0x5adb, 0x9216, 0xa110, 0x9a0b, 0x3ba3, 0x99d8, 0x1, 0x0);
        gbc.writeMem(0x5adb, { 0x42 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9216, gbc.sp());
        EXPECT(0x5adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0040
        gbc.setState(0x9885, 0xcee7, 0xa490, 0x875c, 0xaf42, 0xab4c, 0x0, 0x0);
        gbc.writeMem(0x9885, { 0x42 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcee7, gbc.sp());
        EXPECT(0x9886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9885));
        // 42 0041
        gbc.setState(0x5fa4, 0x2295, 0x9300, 0x586b, 0xd0fa, 0x8b1e, 0x0, 0x1);
        gbc.writeMem(0x5fa4, { 0x42 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2295, gbc.sp());
        EXPECT(0x5fa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0042
        gbc.setState(0x7eb9, 0x4737, 0xadd0, 0xa4f3, 0xb6e4, 0xd9f6, 0x0, 0x0);
        gbc.writeMem(0x7eb9, { 0x42 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4737, gbc.sp());
        EXPECT(0x7eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0043
        gbc.setState(0x821c, 0xb682, 0xf8b0, 0xa4e, 0xd530, 0x7b96, 0x1, 0x0);
        gbc.writeMem(0x821c, { 0x42 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb682, gbc.sp());
        EXPECT(0x821d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x821c));
        // 42 0044
        gbc.setState(0xbfa9, 0xcfa6, 0x7840, 0x78a, 0x2ad4, 0x61df, 0x0, 0x1);
        gbc.writeMem(0xbfa9, { 0x42 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcfa6, gbc.sp());
        EXPECT(0xbfaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbfa9));
        // 42 0045
        gbc.setState(0x15c, 0xeead, 0x42e0, 0xf1c6, 0xf1c, 0xb8d2, 0x0, 0x1);
        gbc.writeMem(0x15c, { 0x42 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xeead, gbc.sp());
        EXPECT(0x15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0046
        gbc.setState(0x97b4, 0xc245, 0xe4e0, 0x34e4, 0x361b, 0x2f9b, 0x1, 0x1);
        gbc.writeMem(0x97b4, { 0x42 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc245, gbc.sp());
        EXPECT(0x97b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x97b4));
        // 42 0047
        gbc.setState(0xb357, 0xe3df, 0xa190, 0xf40d, 0x5f4f, 0xe6b9, 0x1, 0x0);
        gbc.writeMem(0xb357, { 0x42 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe3df, gbc.sp());
        EXPECT(0xb358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb357));
        // 42 0048
        gbc.setState(0x69f2, 0xa915, 0xd250, 0xe7e1, 0xe7b7, 0x9c9f, 0x0, 0x0);
        gbc.writeMem(0x69f2, { 0x42 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa915, gbc.sp());
        EXPECT(0x69f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 004A
        gbc.setState(0x4d1, 0xf16c, 0x5760, 0x5ecc, 0xb076, 0x3462, 0x0, 0x0);
        gbc.writeMem(0x4d1, { 0x42 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf16c, gbc.sp());
        EXPECT(0x4d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 004B
        gbc.setState(0x16f5, 0x55a0, 0xf0a0, 0x436e, 0xe184, 0xa452, 0x1, 0x1);
        gbc.writeMem(0x16f5, { 0x42 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x55a0, gbc.sp());
        EXPECT(0x16f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 004C
        gbc.setState(0xbd21, 0x1b46, 0xb7f0, 0x2bcf, 0xe131, 0x22e1, 0x0, 0x1);
        gbc.writeMem(0xbd21, { 0x42 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1b46, gbc.sp());
        EXPECT(0xbd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbd21));
        // 42 004D
        gbc.setState(0xbba6, 0x4c39, 0x6b10, 0x752, 0x9c, 0x6a68, 0x1, 0x0);
        gbc.writeMem(0xbba6, { 0x42 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4c39, gbc.sp());
        EXPECT(0xbba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbba6));
        // 42 004E
        gbc.setState(0x935b, 0xf76c, 0x39e0, 0x361d, 0xbdff, 0x9128, 0x0, 0x0);
        gbc.writeMem(0x935b, { 0x42 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf76c, gbc.sp());
        EXPECT(0x935c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x935b));
        // 42 004F
        gbc.setState(0xd9ff, 0x7942, 0x1540, 0x1d75, 0x1b9a, 0x9bc0, 0x0, 0x1);
        gbc.writeMem(0xd9ff, { 0x42 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7942, gbc.sp());
        EXPECT(0xda00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd9ff));
        // 42 0050
        gbc.setState(0xa54b, 0x99dc, 0x9680, 0x8b8d, 0x4a93, 0x5179, 0x1, 0x1);
        gbc.writeMem(0xa54b, { 0x42 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x99dc, gbc.sp());
        EXPECT(0xa54c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa54b));
        // 42 0051
        gbc.setState(0x8c18, 0x8945, 0x6670, 0x3858, 0xe4bf, 0xb818, 0x1, 0x0);
        gbc.writeMem(0x8c18, { 0x42 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8945, gbc.sp());
        EXPECT(0x8c19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8c18));
        // 42 0052
        gbc.setState(0x9a3e, 0x7a73, 0xa4f0, 0x14bb, 0xfa6c, 0xd417, 0x1, 0x1);
        gbc.writeMem(0x9a3e, { 0x42 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7a73, gbc.sp());
        EXPECT(0x9a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9a3e));
        // 42 0053
        gbc.setState(0xd590, 0xe9f2, 0x3b40, 0x8fac, 0x3628, 0xa931, 0x1, 0x1);
        gbc.writeMem(0xd590, { 0x42 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe9f2, gbc.sp());
        EXPECT(0xd591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd590));
        // 42 0054
        gbc.setState(0x78e0, 0xd832, 0x1d90, 0x3e1a, 0x6ce6, 0x7248, 0x1, 0x0);
        gbc.writeMem(0x78e0, { 0x42 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd832, gbc.sp());
        EXPECT(0x78e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0055
        gbc.setState(0x933f, 0xbcaf, 0x5f60, 0x59e9, 0x51cb, 0xee86, 0x0, 0x0);
        gbc.writeMem(0x933f, { 0x42 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbcaf, gbc.sp());
        EXPECT(0x9340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x933f));
        // 42 0056
        gbc.setState(0x134c, 0xe486, 0x17e0, 0xc73, 0x811d, 0x5471, 0x0, 0x1);
        gbc.writeMem(0x134c, { 0x42 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe486, gbc.sp());
        EXPECT(0x134d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0057
        gbc.setState(0x5258, 0x670b, 0xb5f0, 0x6e59, 0x8aa9, 0x86eb, 0x1, 0x0);
        gbc.writeMem(0x5258, { 0x42 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x670b, gbc.sp());
        EXPECT(0x5259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0058
        gbc.setState(0xd467, 0x480, 0x55d0, 0xcec2, 0xdf03, 0xa7e3, 0x1, 0x1);
        gbc.writeMem(0xd467, { 0x42 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x480, gbc.sp());
        EXPECT(0xd468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd467));
        // 42 0059
        gbc.setState(0xe9e7, 0xd39e, 0x4e00, 0x1879, 0x18e6, 0xf281, 0x0, 0x1);
        gbc.writeMem(0xe9e7, { 0x42 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd39e, gbc.sp());
        EXPECT(0xe9e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe9e7));
        // 42 005A
        gbc.setState(0x31f6, 0x9cf8, 0xab60, 0x5bfb, 0xb64f, 0xd21f, 0x0, 0x1);
        gbc.writeMem(0x31f6, { 0x42 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9cf8, gbc.sp());
        EXPECT(0x31f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 005C
        gbc.setState(0x609, 0xcb75, 0x6170, 0x9352, 0xfba2, 0xe6bb, 0x1, 0x1);
        gbc.writeMem(0x609, { 0x42 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcb75, gbc.sp());
        EXPECT(0x60a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 005D
        gbc.setState(0x1e38, 0xb4d, 0xf450, 0xe4cb, 0xe991, 0xe6d0, 0x1, 0x0);
        gbc.writeMem(0x1e38, { 0x42 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb4d, gbc.sp());
        EXPECT(0x1e39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 005E
        gbc.setState(0xd500, 0xaf7, 0x5d40, 0x999a, 0x1e25, 0xe79d, 0x1, 0x1);
        gbc.writeMem(0xd500, { 0x42 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xaf7, gbc.sp());
        EXPECT(0xd501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd500));
        // 42 005F
        gbc.setState(0x7df8, 0xfa7e, 0x8ac0, 0xbd3, 0xdcc2, 0xe396, 0x0, 0x0);
        gbc.writeMem(0x7df8, { 0x42 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfa7e, gbc.sp());
        EXPECT(0x7df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0060
        gbc.setState(0xad5b, 0x9347, 0xc0e0, 0xc5c7, 0xd24e, 0xfc89, 0x0, 0x0);
        gbc.writeMem(0xad5b, { 0x42 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9347, gbc.sp());
        EXPECT(0xad5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xad5b));
        // 42 0061
        gbc.setState(0x5390, 0xdd3, 0xeb40, 0x1d66, 0xdede, 0xbc9b, 0x1, 0x0);
        gbc.writeMem(0x5390, { 0x42 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdd3, gbc.sp());
        EXPECT(0x5391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0062
        gbc.setState(0xe017, 0xf460, 0xa270, 0xcda3, 0x82cd, 0x4a1e, 0x0, 0x1);
        gbc.writeMem(0xe017, { 0x42 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf460, gbc.sp());
        EXPECT(0xe018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe017));
        // 42 0063
        gbc.setState(0x94d, 0x7ea0, 0x7e40, 0xdd40, 0xd0c9, 0x99cc, 0x1, 0x0);
        gbc.writeMem(0x94d, { 0x42 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7ea0, gbc.sp());
        EXPECT(0x94e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0064
        gbc.setState(0x8e49, 0xbb4f, 0x52d0, 0xf807, 0xa05a, 0x244a, 0x1, 0x1);
        gbc.writeMem(0x8e49, { 0x42 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbb4f, gbc.sp());
        EXPECT(0x8e4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8e49));
        // 42 0065
        gbc.setState(0x4757, 0x18cf, 0x72f0, 0x2eb6, 0x5273, 0xbf35, 0x1, 0x1);
        gbc.writeMem(0x4757, { 0x42 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x18cf, gbc.sp());
        EXPECT(0x4758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0066
        gbc.setState(0xa00b, 0x3f85, 0x8710, 0xd99d, 0x5bec, 0xf834, 0x1, 0x1);
        gbc.writeMem(0xa00b, { 0x42 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3f85, gbc.sp());
        EXPECT(0xa00c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa00b));
        // 42 0067
        gbc.setState(0x84d5, 0x81c5, 0xf430, 0x7ea8, 0x3325, 0x6a9f, 0x0, 0x1);
        gbc.writeMem(0x84d5, { 0x42 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x81c5, gbc.sp());
        EXPECT(0x84d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x84d5));
        // 42 0068
        gbc.setState(0x8f54, 0x5ff9, 0x36c0, 0xe1c1, 0xc208, 0x5529, 0x1, 0x0);
        gbc.writeMem(0x8f54, { 0x42 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5ff9, gbc.sp());
        EXPECT(0x8f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8f54));
        // 42 0069
        gbc.setState(0xb9a7, 0xeb, 0xfc0, 0xb2e9, 0x9fb8, 0xa804, 0x0, 0x0);
        gbc.writeMem(0xb9a7, { 0x42 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xeb, gbc.sp());
        EXPECT(0xb9a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb9a7));
        // 42 006A
        gbc.setState(0x39b7, 0x3341, 0xf870, 0x922a, 0x28d2, 0xbb2d, 0x1, 0x1);
        gbc.writeMem(0x39b7, { 0x42 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3341, gbc.sp());
        EXPECT(0x39b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 006B
        gbc.setState(0xcaf5, 0xe96f, 0x3660, 0x4150, 0xda35, 0x6955, 0x0, 0x1);
        gbc.writeMem(0xcaf5, { 0x42 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe96f, gbc.sp());
        EXPECT(0xcaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcaf5));
        // 42 006C
        gbc.setState(0x2110, 0xeabd, 0x24a0, 0x6aed, 0xc11f, 0xad01, 0x0, 0x1);
        gbc.writeMem(0x2110, { 0x42 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xeabd, gbc.sp());
        EXPECT(0x2111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 006D
        gbc.setState(0x1fa9, 0xfbe1, 0xe750, 0xf44c, 0x5000, 0x5f65, 0x0, 0x1);
        gbc.writeMem(0x1fa9, { 0x42 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfbe1, gbc.sp());
        EXPECT(0x1faa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 006E
        gbc.setState(0x60da, 0x709f, 0xcb90, 0xf2a5, 0xebc0, 0x58a9, 0x1, 0x1);
        gbc.writeMem(0x60da, { 0x42 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x709f, gbc.sp());
        EXPECT(0x60db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 006F
        gbc.setState(0x6bad, 0x823d, 0x3c90, 0x43ad, 0x8e31, 0xc9a0, 0x1, 0x0);
        gbc.writeMem(0x6bad, { 0x42 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x823d, gbc.sp());
        EXPECT(0x6bae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0070
        gbc.setState(0x4424, 0x668b, 0x30e0, 0x32ee, 0x7da9, 0x3715, 0x1, 0x0);
        gbc.writeMem(0x4424, { 0x42 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x668b, gbc.sp());
        EXPECT(0x4425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0071
        gbc.setState(0x4b47, 0x2cad, 0x8ad0, 0xbd9f, 0xf63c, 0x13f7, 0x1, 0x0);
        gbc.writeMem(0x4b47, { 0x42 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2cad, gbc.sp());
        EXPECT(0x4b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0072
        gbc.setState(0xc123, 0x6ea7, 0x4a70, 0xa8ef, 0x47a4, 0x4f6d, 0x1, 0x0);
        gbc.writeMem(0xc123, { 0x42 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6ea7, gbc.sp());
        EXPECT(0xc124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc123));
        // 42 0073
        gbc.setState(0x946, 0x10ce, 0xb530, 0x93d1, 0xced6, 0x7e82, 0x1, 0x0);
        gbc.writeMem(0x946, { 0x42 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x10ce, gbc.sp());
        EXPECT(0x947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0074
        gbc.setState(0xc0f6, 0xa7fd, 0x5020, 0x76df, 0x7b67, 0x74cd, 0x0, 0x1);
        gbc.writeMem(0xc0f6, { 0x42 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa7fd, gbc.sp());
        EXPECT(0xc0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc0f6));
        // 42 0075
        gbc.setState(0xecfc, 0xed08, 0x83a0, 0x1f3b, 0xd30c, 0xb47, 0x0, 0x1);
        gbc.writeMem(0xecfc, { 0x42 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xed08, gbc.sp());
        EXPECT(0xecfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xecfc));
        // 42 0076
        gbc.setState(0x175b, 0x5548, 0xbd80, 0x5730, 0x6a8f, 0xa059, 0x1, 0x0);
        gbc.writeMem(0x175b, { 0x42 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5548, gbc.sp());
        EXPECT(0x175c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0077
        gbc.setState(0xcbee, 0x3a78, 0xb550, 0x8135, 0xbe93, 0x6150, 0x0, 0x1);
        gbc.writeMem(0xcbee, { 0x42 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3a78, gbc.sp());
        EXPECT(0xcbef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcbee));
        // 42 0078
        gbc.setState(0x7dc6, 0xb8fc, 0xc870, 0xf17f, 0x162a, 0x3566, 0x0, 0x1);
        gbc.writeMem(0x7dc6, { 0x42 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb8fc, gbc.sp());
        EXPECT(0x7dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0079
        gbc.setState(0x530e, 0xf49b, 0x6780, 0xe3d0, 0x1195, 0xcfa5, 0x0, 0x1);
        gbc.writeMem(0x530e, { 0x42 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf49b, gbc.sp());
        EXPECT(0x530f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 007A
        gbc.setState(0xc435, 0x284a, 0xdd60, 0xed45, 0xe0d2, 0x4273, 0x0, 0x0);
        gbc.writeMem(0xc435, { 0x42 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x284a, gbc.sp());
        EXPECT(0xc436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc435));
        // 42 007B
        gbc.setState(0xbca1, 0x1f9c, 0x4340, 0x5ac5, 0xff3e, 0x5c57, 0x1, 0x0);
        gbc.writeMem(0xbca1, { 0x42 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1f9c, gbc.sp());
        EXPECT(0xbca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbca1));
        // 42 007C
        gbc.setState(0x774f, 0x895c, 0xd830, 0x4dd2, 0xa800, 0x6d8d, 0x1, 0x0);
        gbc.writeMem(0x774f, { 0x42 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x895c, gbc.sp());
        EXPECT(0x7750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 007D
        gbc.setState(0x95c6, 0xef4a, 0x6210, 0x1fea, 0x299, 0xd660, 0x1, 0x1);
        gbc.writeMem(0x95c6, { 0x42 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xef4a, gbc.sp());
        EXPECT(0x95c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x95c6));
        // 42 007E
        gbc.setState(0x895c, 0x40f2, 0xe3d0, 0xe8dc, 0x21d9, 0x1e73, 0x0, 0x1);
        gbc.writeMem(0x895c, { 0x42 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x40f2, gbc.sp());
        EXPECT(0x895d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x895c));
        // 42 007F
        gbc.setState(0x1dcd, 0xdc24, 0xd4e0, 0x32cc, 0xe857, 0xb92, 0x1, 0x1);
        gbc.writeMem(0x1dcd, { 0x42 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xdc24, gbc.sp());
        EXPECT(0x1dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0080
        gbc.setState(0xafd0, 0xa543, 0x41d0, 0xe65d, 0x3fc1, 0x3f17, 0x0, 0x1);
        gbc.writeMem(0xafd0, { 0x42 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa543, gbc.sp());
        EXPECT(0xafd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xafd0));
        // 42 0081
        gbc.setState(0xd66e, 0x7682, 0x7690, 0xbb6b, 0xaba4, 0x459c, 0x0, 0x1);
        gbc.writeMem(0xd66e, { 0x42 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7682, gbc.sp());
        EXPECT(0xd66f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd66e));
        // 42 0082
        gbc.setState(0x2a4e, 0xe8e, 0x9ff0, 0xcc31, 0x36ce, 0x720b, 0x1, 0x0);
        gbc.writeMem(0x2a4e, { 0x42 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe8e, gbc.sp());
        EXPECT(0x2a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0083
        gbc.setState(0xa9f, 0x9e4c, 0xb9e0, 0xf7c2, 0x1e3b, 0x2c6, 0x0, 0x1);
        gbc.writeMem(0xa9f, { 0x42 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9e4c, gbc.sp());
        EXPECT(0xaa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0084
        gbc.setState(0x6afd, 0xc44d, 0x8c80, 0xe0ee, 0x1eb, 0xa6f7, 0x0, 0x0);
        gbc.writeMem(0x6afd, { 0x42 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc44d, gbc.sp());
        EXPECT(0x6afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0085
        gbc.setState(0x41ac, 0x7093, 0x2620, 0xa7e2, 0xe16e, 0x8177, 0x0, 0x0);
        gbc.writeMem(0x41ac, { 0x42 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7093, gbc.sp());
        EXPECT(0x41ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0086
        gbc.setState(0x745c, 0xe9f3, 0xfc60, 0x1e31, 0xba52, 0x55a4, 0x0, 0x1);
        gbc.writeMem(0x745c, { 0x42 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe9f3, gbc.sp());
        EXPECT(0x745d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0087
        gbc.setState(0x889f, 0xc271, 0x6110, 0x36dd, 0x6aa, 0x6688, 0x0, 0x1);
        gbc.writeMem(0x889f, { 0x42 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc271, gbc.sp());
        EXPECT(0x88a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x889f));
        // 42 0088
        gbc.setState(0x7110, 0xdb17, 0x4160, 0x8d36, 0xc39, 0x455c, 0x1, 0x1);
        gbc.writeMem(0x7110, { 0x42 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdb17, gbc.sp());
        EXPECT(0x7111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0089
        gbc.setState(0x5920, 0x54b4, 0xf610, 0x6cde, 0xa834, 0x9a92, 0x0, 0x1);
        gbc.writeMem(0x5920, { 0x42 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x54b4, gbc.sp());
        EXPECT(0x5921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 008A
        gbc.setState(0xe2d9, 0xb1fb, 0x2740, 0x3a42, 0x9803, 0xc350, 0x0, 0x0);
        gbc.writeMem(0xe2d9, { 0x42 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb1fb, gbc.sp());
        EXPECT(0xe2da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe2d9));
        // 42 008B
        gbc.setState(0xab43, 0x4b6c, 0xad60, 0x44e6, 0x758b, 0x7d19, 0x1, 0x0);
        gbc.writeMem(0xab43, { 0x42 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4b6c, gbc.sp());
        EXPECT(0xab44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xab43));
        // 42 008C
        gbc.setState(0xb5c5, 0xd480, 0x4570, 0x6e91, 0x66a9, 0xc059, 0x1, 0x0);
        gbc.writeMem(0xb5c5, { 0x42 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd480, gbc.sp());
        EXPECT(0xb5c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb5c5));
        // 42 008D
        gbc.setState(0xa45b, 0x40e7, 0x5b10, 0x1d6, 0xd62, 0x9a9c, 0x0, 0x1);
        gbc.writeMem(0xa45b, { 0x42 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x40e7, gbc.sp());
        EXPECT(0xa45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa45b));
        // 42 008E
        gbc.setState(0xbf32, 0x3147, 0x18c0, 0x3fc1, 0x3d2, 0x91dc, 0x0, 0x0);
        gbc.writeMem(0xbf32, { 0x42 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3147, gbc.sp());
        EXPECT(0xbf33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbf32));
        // 42 008F
        gbc.setState(0x2126, 0x943c, 0xa720, 0xb210, 0x91b4, 0x52db, 0x0, 0x1);
        gbc.writeMem(0x2126, { 0x42 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x943c, gbc.sp());
        EXPECT(0x2127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0090
        gbc.setState(0xb0cd, 0x921e, 0xf200, 0x24b8, 0x779f, 0x5b2c, 0x0, 0x0);
        gbc.writeMem(0xb0cd, { 0x42 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x921e, gbc.sp());
        EXPECT(0xb0ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb0cd));
        // 42 0091
        gbc.setState(0xeb10, 0x2a7f, 0x2150, 0x9de0, 0xf567, 0xc006, 0x0, 0x0);
        gbc.writeMem(0xeb10, { 0x42 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2a7f, gbc.sp());
        EXPECT(0xeb11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xeb10));
        // 42 0092
        gbc.setState(0x6bf0, 0x239f, 0xdfb0, 0x824c, 0x36d6, 0xeae5, 0x1, 0x1);
        gbc.writeMem(0x6bf0, { 0x42 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x239f, gbc.sp());
        EXPECT(0x6bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0093
        gbc.setState(0xe532, 0x1fb5, 0x3d70, 0xc0d6, 0xedd2, 0x37b9, 0x0, 0x1);
        gbc.writeMem(0xe532, { 0x42 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1fb5, gbc.sp());
        EXPECT(0xe533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe532));
        // 42 0094
        gbc.setState(0x40da, 0xaac9, 0x50e0, 0x24f, 0x4d2f, 0x375f, 0x0, 0x0);
        gbc.writeMem(0x40da, { 0x42 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xaac9, gbc.sp());
        EXPECT(0x40db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0095
        gbc.setState(0xcbe0, 0x6e8c, 0xff50, 0xfb2, 0x4b31, 0x390e, 0x1, 0x1);
        gbc.writeMem(0xcbe0, { 0x42 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6e8c, gbc.sp());
        EXPECT(0xcbe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcbe0));
        // 42 0096
        gbc.setState(0xa57f, 0xe344, 0x1e40, 0x3482, 0x3783, 0xb637, 0x0, 0x0);
        gbc.writeMem(0xa57f, { 0x42 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe344, gbc.sp());
        EXPECT(0xa580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa57f));
        // 42 0097
        gbc.setState(0xdd6c, 0xb6f1, 0xf6d0, 0x1a72, 0xeab4, 0x5e6a, 0x0, 0x1);
        gbc.writeMem(0xdd6c, { 0x42 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb6f1, gbc.sp());
        EXPECT(0xdd6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdd6c));
        // 42 0098
        gbc.setState(0x56e6, 0x665e, 0x1a0, 0xf006, 0x680c, 0x4918, 0x1, 0x0);
        gbc.writeMem(0x56e6, { 0x42 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x665e, gbc.sp());
        EXPECT(0x56e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0099
        gbc.setState(0xb181, 0x5e86, 0x8060, 0xb556, 0xc6ee, 0xc1a2, 0x0, 0x1);
        gbc.writeMem(0xb181, { 0x42 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5e86, gbc.sp());
        EXPECT(0xb182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb181));
        // 42 009A
        gbc.setState(0x90, 0x9e03, 0x4f30, 0xd6d5, 0x6233, 0xfafc, 0x1, 0x1);
        gbc.writeMem(0x90, { 0x42 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9e03, gbc.sp());
        EXPECT(0x91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 009B
        gbc.setState(0x64b, 0x4148, 0xf410, 0x12f0, 0xda6d, 0x89dd, 0x1, 0x1);
        gbc.writeMem(0x64b, { 0x42 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4148, gbc.sp());
        EXPECT(0x64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 009D
        gbc.setState(0x5f1b, 0xdc54, 0x130, 0xc2aa, 0xff9, 0xc212, 0x0, 0x1);
        gbc.writeMem(0x5f1b, { 0x42 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdc54, gbc.sp());
        EXPECT(0x5f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 009E
        gbc.setState(0x562f, 0x7932, 0x6280, 0xa6a2, 0x9bc, 0xf391, 0x1, 0x0);
        gbc.writeMem(0x562f, { 0x42 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7932, gbc.sp());
        EXPECT(0x5630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 009F
        gbc.setState(0x4b1e, 0x3b19, 0xb760, 0xda4f, 0xe071, 0xcd8f, 0x1, 0x0);
        gbc.writeMem(0x4b1e, { 0x42 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3b19, gbc.sp());
        EXPECT(0x4b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00A0
        gbc.setState(0x88f4, 0xbd3a, 0x2270, 0x8b1f, 0xe2a5, 0xd658, 0x0, 0x0);
        gbc.writeMem(0x88f4, { 0x42 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbd3a, gbc.sp());
        EXPECT(0x88f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x88f4));
        // 42 00A1
        gbc.setState(0xb94d, 0x489b, 0xd2a0, 0x115c, 0xa1ca, 0xc1a1, 0x0, 0x0);
        gbc.writeMem(0xb94d, { 0x42 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x489b, gbc.sp());
        EXPECT(0xb94e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb94d));
        // 42 00A2
        gbc.setState(0x23bc, 0xe021, 0xadc0, 0xee97, 0x6e9a, 0xdbae, 0x1, 0x0);
        gbc.writeMem(0x23bc, { 0x42 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe021, gbc.sp());
        EXPECT(0x23bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00A3
        gbc.setState(0x45e8, 0xc908, 0x28a0, 0xe835, 0xcd60, 0xefce, 0x0, 0x1);
        gbc.writeMem(0x45e8, { 0x42 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc908, gbc.sp());
        EXPECT(0x45e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00A5
        gbc.setState(0xd903, 0x4bfe, 0xe730, 0xfc0b, 0x22ef, 0x7772, 0x1, 0x1);
        gbc.writeMem(0xd903, { 0x42 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4bfe, gbc.sp());
        EXPECT(0xd904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd903));
        // 42 00A6
        gbc.setState(0x903b, 0x9033, 0xacb0, 0x6e73, 0xfd7f, 0xfd9, 0x0, 0x0);
        gbc.writeMem(0x903b, { 0x42 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9033, gbc.sp());
        EXPECT(0x903c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x903b));
        // 42 00A7
        gbc.setState(0x213c, 0x9ecd, 0xa1f0, 0x1084, 0xe590, 0xdba5, 0x1, 0x0);
        gbc.writeMem(0x213c, { 0x42 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9ecd, gbc.sp());
        EXPECT(0x213d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00A8
        gbc.setState(0xb3c, 0x5542, 0x2040, 0xf0c1, 0xf0ee, 0xbc19, 0x0, 0x1);
        gbc.writeMem(0xb3c, { 0x42 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5542, gbc.sp());
        EXPECT(0xb3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00A9
        gbc.setState(0xa042, 0xbf7f, 0xa370, 0x8a64, 0x65cd, 0xfe23, 0x1, 0x1);
        gbc.writeMem(0xa042, { 0x42 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbf7f, gbc.sp());
        EXPECT(0xa043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa042));
        // 42 00AA
        gbc.setState(0x20ec, 0x6650, 0x210, 0xc893, 0xced9, 0xa920, 0x0, 0x1);
        gbc.writeMem(0x20ec, { 0x42 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6650, gbc.sp());
        EXPECT(0x20ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00AB
        gbc.setState(0x433c, 0xccc0, 0x53f0, 0x6921, 0x5c3b, 0x3819, 0x1, 0x0);
        gbc.writeMem(0x433c, { 0x42 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xccc0, gbc.sp());
        EXPECT(0x433d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00AC
        gbc.setState(0x117f, 0x4597, 0x5b80, 0x94e9, 0xabab, 0x24ed, 0x0, 0x1);
        gbc.writeMem(0x117f, { 0x42 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4597, gbc.sp());
        EXPECT(0x1180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00AD
        gbc.setState(0x5050, 0x6325, 0x7410, 0xe58b, 0xfe18, 0xd2d8, 0x1, 0x0);
        gbc.writeMem(0x5050, { 0x42 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6325, gbc.sp());
        EXPECT(0x5051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00AE
        gbc.setState(0xb9f1, 0xdf1a, 0x6420, 0x88dc, 0xb398, 0x3012, 0x0, 0x0);
        gbc.writeMem(0xb9f1, { 0x42 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdf1a, gbc.sp());
        EXPECT(0xb9f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb9f1));
        // 42 00AF
        gbc.setState(0x95fb, 0xfbd6, 0xe370, 0xf3f6, 0x146f, 0x181f, 0x0, 0x1);
        gbc.writeMem(0x95fb, { 0x42 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfbd6, gbc.sp());
        EXPECT(0x95fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x95fb));
        // 42 00B0
        gbc.setState(0xbc3b, 0xa12a, 0xe610, 0x1dab, 0xa64a, 0xa37b, 0x1, 0x0);
        gbc.writeMem(0xbc3b, { 0x42 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa12a, gbc.sp());
        EXPECT(0xbc3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbc3b));
        // 42 00B1
        gbc.setState(0x16bb, 0x5283, 0xe20, 0xd0d9, 0x49a2, 0x7dd3, 0x0, 0x1);
        gbc.writeMem(0x16bb, { 0x42 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5283, gbc.sp());
        EXPECT(0x16bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00B2
        gbc.setState(0xd414, 0xdeda, 0x9af0, 0xe45b, 0x1a8c, 0x1e99, 0x1, 0x1);
        gbc.writeMem(0xd414, { 0x42 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdeda, gbc.sp());
        EXPECT(0xd415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd414));
        // 42 00B3
        gbc.setState(0x1260, 0x16b6, 0x1220, 0xe79f, 0x2445, 0x41a3, 0x1, 0x0);
        gbc.writeMem(0x1260, { 0x42 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x16b6, gbc.sp());
        EXPECT(0x1261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00B4
        gbc.setState(0x280f, 0xccdb, 0x3c0, 0x6bdb, 0xa027, 0xb938, 0x1, 0x1);
        gbc.writeMem(0x280f, { 0x42 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xccdb, gbc.sp());
        EXPECT(0x2810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00B5
        gbc.setState(0xd510, 0x2822, 0x9e10, 0x25f7, 0xef8d, 0x274, 0x0, 0x1);
        gbc.writeMem(0xd510, { 0x42 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2822, gbc.sp());
        EXPECT(0xd511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd510));
        // 42 00B7
        gbc.setState(0x15f7, 0x2407, 0x2fc0, 0xe874, 0xa73f, 0xa63e, 0x0, 0x1);
        gbc.writeMem(0x15f7, { 0x42 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2407, gbc.sp());
        EXPECT(0x15f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00B8
        gbc.setState(0x1e6, 0xc8cc, 0x1540, 0xe018, 0x2ca5, 0xb2fc, 0x0, 0x1);
        gbc.writeMem(0x1e6, { 0x42 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc8cc, gbc.sp());
        EXPECT(0x1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00B9
        gbc.setState(0xaac1, 0x66d0, 0xfb0, 0x472, 0x61e9, 0x964d, 0x1, 0x1);
        gbc.writeMem(0xaac1, { 0x42 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x66d0, gbc.sp());
        EXPECT(0xaac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xaac1));
        // 42 00BA
        gbc.setState(0x5cb6, 0x5ee1, 0x2050, 0x2ccf, 0x35dd, 0x25ce, 0x0, 0x1);
        gbc.writeMem(0x5cb6, { 0x42 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5ee1, gbc.sp());
        EXPECT(0x5cb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00BB
        gbc.setState(0x62f9, 0xf824, 0x8bb0, 0xce16, 0xdb93, 0x5590, 0x1, 0x1);
        gbc.writeMem(0x62f9, { 0x42 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf824, gbc.sp());
        EXPECT(0x62fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00BC
        gbc.setState(0xb501, 0xfb11, 0x2560, 0x5c89, 0xbc15, 0xd34d, 0x0, 0x1);
        gbc.writeMem(0xb501, { 0x42 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xfb11, gbc.sp());
        EXPECT(0xb502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb501));
        // 42 00BD
        gbc.setState(0xaade, 0x3d1, 0x7090, 0x4ad9, 0x52c7, 0x92f5, 0x0, 0x0);
        gbc.writeMem(0xaade, { 0x42 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3d1, gbc.sp());
        EXPECT(0xaadf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xaade));
        // 42 00BE
        gbc.setState(0x766b, 0x6d8b, 0x36b0, 0xe23d, 0xea62, 0x23fa, 0x1, 0x0);
        gbc.writeMem(0x766b, { 0x42 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6d8b, gbc.sp());
        EXPECT(0x766c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00BF
        gbc.setState(0x2692, 0x1fa6, 0x1e10, 0x19c3, 0x5296, 0xaf57, 0x0, 0x1);
        gbc.writeMem(0x2692, { 0x42 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1fa6, gbc.sp());
        EXPECT(0x2693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00C0
        gbc.setState(0x91d, 0x6ffc, 0xc2b0, 0xc742, 0x2729, 0x6fdd, 0x0, 0x0);
        gbc.writeMem(0x91d, { 0x42 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6ffc, gbc.sp());
        EXPECT(0x91e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00C1
        gbc.setState(0x7530, 0xccd, 0xd260, 0x9cd9, 0xeb2a, 0x991d, 0x0, 0x0);
        gbc.writeMem(0x7530, { 0x42 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xccd, gbc.sp());
        EXPECT(0x7531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00C2
        gbc.setState(0x6f0b, 0x9c22, 0xdec0, 0x6759, 0xdc3, 0x3a0b, 0x1, 0x1);
        gbc.writeMem(0x6f0b, { 0x42 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9c22, gbc.sp());
        EXPECT(0x6f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00C3
        gbc.setState(0x55f8, 0x6355, 0x59a0, 0x6274, 0x977, 0xa6c1, 0x0, 0x1);
        gbc.writeMem(0x55f8, { 0x42 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6355, gbc.sp());
        EXPECT(0x55f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00C4
        gbc.setState(0xdab4, 0x17bc, 0xa390, 0x9834, 0x64d6, 0x4631, 0x1, 0x1);
        gbc.writeMem(0xdab4, { 0x42 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x17bc, gbc.sp());
        EXPECT(0xdab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdab4));
        // 42 00C5
        gbc.setState(0x4f9, 0x16fd, 0x33b0, 0xe075, 0x6cc7, 0xd810, 0x0, 0x1);
        gbc.writeMem(0x4f9, { 0x42 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x16fd, gbc.sp());
        EXPECT(0x4fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00C6
        gbc.setState(0x18e4, 0x5167, 0xcfb0, 0x83e7, 0x7058, 0xd1b1, 0x1, 0x1);
        gbc.writeMem(0x18e4, { 0x42 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5167, gbc.sp());
        EXPECT(0x18e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00C7
        gbc.setState(0x39a2, 0x6e6c, 0xe160, 0x89d4, 0xc54d, 0x5007, 0x0, 0x1);
        gbc.writeMem(0x39a2, { 0x42 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6e6c, gbc.sp());
        EXPECT(0x39a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00C8
        gbc.setState(0x27d4, 0x5a3d, 0x6890, 0x6a6e, 0x19e7, 0xdc5a, 0x0, 0x0);
        gbc.writeMem(0x27d4, { 0x42 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5a3d, gbc.sp());
        EXPECT(0x27d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00C9
        gbc.setState(0x3a4f, 0x7d7a, 0xc3c0, 0xb06, 0xc52e, 0xc918, 0x0, 0x0);
        gbc.writeMem(0x3a4f, { 0x42 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7d7a, gbc.sp());
        EXPECT(0x3a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00CA
        gbc.setState(0xe20f, 0x3355, 0xca30, 0xbdbb, 0x9ea2, 0x41b0, 0x0, 0x1);
        gbc.writeMem(0xe20f, { 0x42 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3355, gbc.sp());
        EXPECT(0xe210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe20f));
        // 42 00CB
        gbc.setState(0xae22, 0x7106, 0xfed0, 0xa3e9, 0xe79f, 0x2a94, 0x1, 0x0);
        gbc.writeMem(0xae22, { 0x42 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7106, gbc.sp());
        EXPECT(0xae23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xae22));
        // 42 00CC
        gbc.setState(0xe65f, 0xda57, 0xee70, 0xb3fa, 0xb10a, 0xe95d, 0x0, 0x1);
        gbc.writeMem(0xe65f, { 0x42 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xda57, gbc.sp());
        EXPECT(0xe660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe65f));
        // 42 00CD
        gbc.setState(0x99f3, 0x12a8, 0xe0c0, 0x2b6e, 0x8898, 0x4003, 0x0, 0x1);
        gbc.writeMem(0x99f3, { 0x42 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x12a8, gbc.sp());
        EXPECT(0x99f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x99f3));
        // 42 00CE
        gbc.setState(0xb7a0, 0x5668, 0x71b0, 0x8fa1, 0xa450, 0xed5b, 0x1, 0x1);
        gbc.writeMem(0xb7a0, { 0x42 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5668, gbc.sp());
        EXPECT(0xb7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb7a0));
        // 42 00D0
        gbc.setState(0x2b07, 0x16a9, 0x3dd0, 0x8ada, 0xa7ba, 0x69b8, 0x0, 0x1);
        gbc.writeMem(0x2b07, { 0x42 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x16a9, gbc.sp());
        EXPECT(0x2b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00D1
        gbc.setState(0xd216, 0x7eb, 0x6ec0, 0x7d0, 0x8327, 0xbd95, 0x1, 0x1);
        gbc.writeMem(0xd216, { 0x42 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7eb, gbc.sp());
        EXPECT(0xd217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd216));
        // 42 00D2
        gbc.setState(0x6bd0, 0xcd10, 0xbee0, 0x5ea2, 0xe4f, 0x1d63, 0x1, 0x1);
        gbc.writeMem(0x6bd0, { 0x42 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcd10, gbc.sp());
        EXPECT(0x6bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00D3
        gbc.setState(0x7b48, 0xd0f5, 0x67b0, 0xce24, 0x6c5b, 0x54b6, 0x0, 0x0);
        gbc.writeMem(0x7b48, { 0x42 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd0f5, gbc.sp());
        EXPECT(0x7b49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00D4
        gbc.setState(0xd54, 0x7b6, 0x7c40, 0xdf64, 0x89a3, 0x537d, 0x0, 0x1);
        gbc.writeMem(0xd54, { 0x42 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7b6, gbc.sp());
        EXPECT(0xd55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00D6
        gbc.setState(0xebd2, 0xdd71, 0x94f0, 0x86d2, 0x322a, 0x5d06, 0x0, 0x0);
        gbc.writeMem(0xebd2, { 0x42 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdd71, gbc.sp());
        EXPECT(0xebd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xebd2));
        // 42 00D7
        gbc.setState(0x5371, 0xd45c, 0x4340, 0x34d1, 0xff5, 0xe4dc, 0x1, 0x0);
        gbc.writeMem(0x5371, { 0x42 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd45c, gbc.sp());
        EXPECT(0x5372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00D8
        gbc.setState(0xb18e, 0x4348, 0x4fd0, 0x64fa, 0x3cef, 0x3c23, 0x0, 0x0);
        gbc.writeMem(0xb18e, { 0x42 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4348, gbc.sp());
        EXPECT(0xb18f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb18e));
        // 42 00D9
        gbc.setState(0xe594, 0x8464, 0x9890, 0x6834, 0xf7b5, 0xacd0, 0x0, 0x0);
        gbc.writeMem(0xe594, { 0x42 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8464, gbc.sp());
        EXPECT(0xe595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe594));
        // 42 00DA
        gbc.setState(0x6160, 0x701a, 0xf210, 0x6f82, 0xcffb, 0xa3c3, 0x0, 0x1);
        gbc.writeMem(0x6160, { 0x42 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x701a, gbc.sp());
        EXPECT(0x6161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00DB
        gbc.setState(0xd283, 0xb6e9, 0x7fd0, 0x9999, 0x9153, 0xca4d, 0x0, 0x1);
        gbc.writeMem(0xd283, { 0x42 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb6e9, gbc.sp());
        EXPECT(0xd284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd283));
        // 42 00DC
        gbc.setState(0x2f8b, 0xde88, 0x74a0, 0x1a8, 0x9001, 0xf077, 0x1, 0x0);
        gbc.writeMem(0x2f8b, { 0x42 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xde88, gbc.sp());
        EXPECT(0x2f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00DD
        gbc.setState(0x2988, 0x5fcf, 0x1020, 0x91e2, 0xc715, 0x7551, 0x0, 0x1);
        gbc.writeMem(0x2988, { 0x42 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5fcf, gbc.sp());
        EXPECT(0x2989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00DE
        gbc.setState(0x6236, 0x118a, 0xec00, 0xc82a, 0x1a88, 0xdbe5, 0x0, 0x1);
        gbc.writeMem(0x6236, { 0x42 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x118a, gbc.sp());
        EXPECT(0x6237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00DF
        gbc.setState(0x227e, 0x49b6, 0xa890, 0xff39, 0x72a0, 0x3b93, 0x0, 0x0);
        gbc.writeMem(0x227e, { 0x42 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x49b6, gbc.sp());
        EXPECT(0x227f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00E0
        gbc.setState(0x17f6, 0x2d5d, 0xb130, 0x7360, 0x2a94, 0x3367, 0x0, 0x0);
        gbc.writeMem(0x17f6, { 0x42 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2d5d, gbc.sp());
        EXPECT(0x17f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00E1
        gbc.setState(0x4750, 0xaa5a, 0x5970, 0x4dbb, 0x86a4, 0xade9, 0x0, 0x1);
        gbc.writeMem(0x4750, { 0x42 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xaa5a, gbc.sp());
        EXPECT(0x4751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00E2
        gbc.setState(0x433a, 0x938f, 0xb5a0, 0x849f, 0x5c40, 0x82e4, 0x1, 0x0);
        gbc.writeMem(0x433a, { 0x42 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x938f, gbc.sp());
        EXPECT(0x433b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00E3
        gbc.setState(0x283f, 0xb016, 0x31d0, 0xfc7e, 0xefcf, 0x37b4, 0x0, 0x1);
        gbc.writeMem(0x283f, { 0x42 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb016, gbc.sp());
        EXPECT(0x2840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00E4
        gbc.setState(0xc882, 0x371f, 0xbba0, 0x4caa, 0xb015, 0x75b4, 0x0, 0x0);
        gbc.writeMem(0xc882, { 0x42 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x371f, gbc.sp());
        EXPECT(0xc883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc882));
        // 42 00E5
        gbc.setState(0xcb17, 0xbe5, 0xa220, 0xb13b, 0xc0f6, 0xdb6d, 0x0, 0x0);
        gbc.writeMem(0xcb17, { 0x42 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbe5, gbc.sp());
        EXPECT(0xcb18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcb17));
        // 42 00E6
        gbc.setState(0x7fe1, 0x399, 0x5cd0, 0xb1eb, 0x3296, 0x3026, 0x1, 0x0);
        gbc.writeMem(0x7fe1, { 0x42 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x399, gbc.sp());
        EXPECT(0x7fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00E7
        gbc.setState(0x3454, 0x7cac, 0xc930, 0xad6b, 0x447b, 0x23da, 0x0, 0x0);
        gbc.writeMem(0x3454, { 0x42 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7cac, gbc.sp());
        EXPECT(0x3455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00E8
        gbc.setState(0xd38b, 0xbd21, 0x30b0, 0xf87d, 0x71b9, 0xab9d, 0x0, 0x1);
        gbc.writeMem(0xd38b, { 0x42 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbd21, gbc.sp());
        EXPECT(0xd38c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd38b));
        // 42 00E9
        gbc.setState(0xa873, 0x8485, 0xb040, 0x5f8d, 0x59bb, 0x3222, 0x0, 0x1);
        gbc.writeMem(0xa873, { 0x42 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8485, gbc.sp());
        EXPECT(0xa874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa873));
        // 42 00EA
        gbc.setState(0x481b, 0x36e5, 0x30e0, 0x4da2, 0x87f8, 0x55c5, 0x1, 0x0);
        gbc.writeMem(0x481b, { 0x42 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x36e5, gbc.sp());
        EXPECT(0x481c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00EB
        gbc.setState(0x83b, 0xfb0, 0x9010, 0x1c4a, 0xdfe5, 0x728e, 0x1, 0x0);
        gbc.writeMem(0x83b, { 0x42 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfb0, gbc.sp());
        EXPECT(0x83c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00EC
        gbc.setState(0x82f1, 0x96f1, 0xa180, 0x9429, 0xd0fe, 0xe6db, 0x1, 0x0);
        gbc.writeMem(0x82f1, { 0x42 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x96f1, gbc.sp());
        EXPECT(0x82f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x82f1));
        // 42 00ED
        gbc.setState(0xa8de, 0x8970, 0x4080, 0xa21, 0xba5b, 0xaa37, 0x0, 0x0);
        gbc.writeMem(0xa8de, { 0x42 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8970, gbc.sp());
        EXPECT(0xa8df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa8de));
        // 42 00EE
        gbc.setState(0xb0e3, 0x8549, 0xea90, 0x5b37, 0xcf54, 0x19ae, 0x1, 0x1);
        gbc.writeMem(0xb0e3, { 0x42 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8549, gbc.sp());
        EXPECT(0xb0e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb0e3));
        // 42 00EF
        gbc.setState(0x561b, 0x81ad, 0x4fd0, 0x4d, 0xced3, 0xefca, 0x0, 0x0);
        gbc.writeMem(0x561b, { 0x42 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x81ad, gbc.sp());
        EXPECT(0x561c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00F0
        gbc.setState(0xc080, 0xc506, 0x9ce0, 0x62c9, 0xdc8b, 0x5062, 0x0, 0x1);
        gbc.writeMem(0xc080, { 0x42 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc506, gbc.sp());
        EXPECT(0xc081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc080));
        // 42 00F1
        gbc.setState(0x231e, 0xcbf2, 0x1800, 0x78db, 0x664c, 0x35a6, 0x1, 0x0);
        gbc.writeMem(0x231e, { 0x42 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcbf2, gbc.sp());
        EXPECT(0x231f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00F2
        gbc.setState(0x134d, 0x6bba, 0xfaa0, 0x196c, 0x624a, 0xbccc, 0x0, 0x0);
        gbc.writeMem(0x134d, { 0x42 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6bba, gbc.sp());
        EXPECT(0x134e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00F3
        gbc.setState(0xb32f, 0xe670, 0x25b0, 0x40ee, 0x688d, 0x3af, 0x1, 0x0);
        gbc.writeMem(0xb32f, { 0x42 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe670, gbc.sp());
        EXPECT(0xb330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb32f));
        // 42 00F4
        gbc.setState(0x6fa7, 0x22e0, 0xce30, 0x9664, 0xf028, 0xc639, 0x0, 0x1);
        gbc.writeMem(0x6fa7, { 0x42 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x22e0, gbc.sp());
        EXPECT(0x6fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00F5
        gbc.setState(0x1191, 0x4495, 0xdd10, 0x8276, 0x5224, 0xe125, 0x0, 0x1);
        gbc.writeMem(0x1191, { 0x42 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4495, gbc.sp());
        EXPECT(0x1192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00F6
        gbc.setState(0x79db, 0xd862, 0xc390, 0xed1c, 0x4d90, 0x5b6b, 0x0, 0x0);
        gbc.writeMem(0x79db, { 0x42 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd862, gbc.sp());
        EXPECT(0x79dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00F7
        gbc.setState(0x887b, 0x1b5e, 0x6b0, 0x573, 0xb833, 0x5bea, 0x0, 0x1);
        gbc.writeMem(0x887b, { 0x42 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1b5e, gbc.sp());
        EXPECT(0x887c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x887b));
        // 42 00F8
        gbc.setState(0xc3bb, 0x9072, 0xb060, 0x552a, 0x2f2b, 0x4bf0, 0x1, 0x0);
        gbc.writeMem(0xc3bb, { 0x42 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9072, gbc.sp());
        EXPECT(0xc3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc3bb));
        // 42 00F9
        gbc.setState(0x47e, 0xa648, 0x1580, 0x156b, 0x56c1, 0xec66, 0x1, 0x1);
        gbc.writeMem(0x47e, { 0x42 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa648, gbc.sp());
        EXPECT(0x47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00FA
        gbc.setState(0x53c8, 0x5930, 0xd930, 0x60d6, 0xf53d, 0x1919, 0x0, 0x0);
        gbc.writeMem(0x53c8, { 0x42 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5930, gbc.sp());
        EXPECT(0x53c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00FB
        gbc.setState(0x9084, 0x643d, 0xdc80, 0x75e2, 0x4ea9, 0x8dec, 0x0, 0x1);
        gbc.writeMem(0x9084, { 0x42 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x643d, gbc.sp());
        EXPECT(0x9085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9084));
        // 42 00FC
        gbc.setState(0x6236, 0x5858, 0xf3d0, 0x2949, 0xdaf4, 0x2a07, 0x0, 0x1);
        gbc.writeMem(0x6236, { 0x42 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5858, gbc.sp());
        EXPECT(0x6237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00FD
        gbc.setState(0x6fa7, 0x1034, 0x8360, 0xd551, 0xc006, 0xb039, 0x0, 0x1);
        gbc.writeMem(0x6fa7, { 0x42 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1034, gbc.sp());
        EXPECT(0x6fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 00FE
        gbc.setState(0x60d3, 0x63c, 0x4390, 0xf218, 0xf53b, 0xbab8, 0x1, 0x1);
        gbc.writeMem(0x60d3, { 0x42 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x63c, gbc.sp());
        EXPECT(0x60d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 00FF
        gbc.setState(0xd39e, 0xb538, 0x9790, 0x2417, 0xdeeb, 0xd735, 0x1, 0x1);
        gbc.writeMem(0xd39e, { 0x42 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb538, gbc.sp());
        EXPECT(0xd39f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd39e));
        // 42 0100
        gbc.setState(0xa97, 0x73bf, 0x6070, 0x3157, 0xeb6e, 0x3d28, 0x0, 0x1);
        gbc.writeMem(0xa97, { 0x42 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x73bf, gbc.sp());
        EXPECT(0xa98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0102
        gbc.setState(0x44c6, 0x6e63, 0x84b0, 0x7e97, 0x7bb8, 0xbbf3, 0x1, 0x0);
        gbc.writeMem(0x44c6, { 0x42 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6e63, gbc.sp());
        EXPECT(0x44c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0103
        gbc.setState(0x458, 0xa8e2, 0xbf90, 0x84d5, 0x28ea, 0x54d7, 0x0, 0x1);
        gbc.writeMem(0x458, { 0x42 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa8e2, gbc.sp());
        EXPECT(0x459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0104
        gbc.setState(0xd1ee, 0x3235, 0x3830, 0xb588, 0xdc46, 0xa133, 0x0, 0x1);
        gbc.writeMem(0xd1ee, { 0x42 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3235, gbc.sp());
        EXPECT(0xd1ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd1ee));
        // 42 0105
        gbc.setState(0x6c48, 0x16b0, 0x55b0, 0x5d5a, 0xf796, 0xac1d, 0x0, 0x1);
        gbc.writeMem(0x6c48, { 0x42 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x16b0, gbc.sp());
        EXPECT(0x6c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0106
        gbc.setState(0xd714, 0x8bcf, 0xa840, 0xefda, 0xa841, 0x6aed, 0x1, 0x1);
        gbc.writeMem(0xd714, { 0x42 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8bcf, gbc.sp());
        EXPECT(0xd715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd714));
        // 42 0107
        gbc.setState(0xe4bb, 0x80dd, 0xff30, 0x8811, 0x18e6, 0x1f13, 0x1, 0x0);
        gbc.writeMem(0xe4bb, { 0x42 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x80dd, gbc.sp());
        EXPECT(0xe4bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe4bb));
        // 42 0108
        gbc.setState(0xdb3d, 0x78b3, 0x6660, 0x71db, 0x5a28, 0xf46, 0x0, 0x1);
        gbc.writeMem(0xdb3d, { 0x42 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x78b3, gbc.sp());
        EXPECT(0xdb3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdb3d));
        // 42 0109
        gbc.setState(0x737b, 0xa22f, 0x5290, 0x29b2, 0x71d6, 0xaafc, 0x0, 0x1);
        gbc.writeMem(0x737b, { 0x42 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa22f, gbc.sp());
        EXPECT(0x737c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 010A
        gbc.setState(0x9d26, 0x2825, 0x45e0, 0xb9d4, 0xbe2d, 0x2ed, 0x1, 0x0);
        gbc.writeMem(0x9d26, { 0x42 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2825, gbc.sp());
        EXPECT(0x9d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9d26));
        // 42 010B
        gbc.setState(0x4e52, 0xf51d, 0x8a10, 0x4aa3, 0x20a9, 0x9fb1, 0x1, 0x1);
        gbc.writeMem(0x4e52, { 0x42 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf51d, gbc.sp());
        EXPECT(0x4e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 010C
        gbc.setState(0x66de, 0x679, 0x9460, 0x41e8, 0xceaf, 0x1cda, 0x0, 0x0);
        gbc.writeMem(0x66de, { 0x42 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x679, gbc.sp());
        EXPECT(0x66df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 010D
        gbc.setState(0x9659, 0xce5, 0xc960, 0x15ab, 0x15d7, 0x1f71, 0x0, 0x0);
        gbc.writeMem(0x9659, { 0x42 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xce5, gbc.sp());
        EXPECT(0x965a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9659));
        // 42 010E
        gbc.setState(0xf66, 0xc022, 0xdf0, 0xfb0, 0xf3b0, 0x4223, 0x0, 0x0);
        gbc.writeMem(0xf66, { 0x42 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc022, gbc.sp());
        EXPECT(0xf67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0110
        gbc.setState(0x900c, 0x64af, 0x79a0, 0x4fec, 0xff1c, 0x61d0, 0x1, 0x0);
        gbc.writeMem(0x900c, { 0x42 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x64af, gbc.sp());
        EXPECT(0x900d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x900c));
        // 42 0111
        gbc.setState(0x9016, 0x23a4, 0xaaa0, 0x3043, 0x24c5, 0xd026, 0x1, 0x0);
        gbc.writeMem(0x9016, { 0x42 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x23a4, gbc.sp());
        EXPECT(0x9017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9016));
        // 42 0112
        gbc.setState(0x2bdf, 0xaaa5, 0xc110, 0xd4c7, 0x52d6, 0x54a, 0x0, 0x0);
        gbc.writeMem(0x2bdf, { 0x42 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xaaa5, gbc.sp());
        EXPECT(0x2be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0113
        gbc.setState(0xb2a2, 0x12db, 0x6b90, 0xe6c1, 0x5432, 0xdfa5, 0x0, 0x1);
        gbc.writeMem(0xb2a2, { 0x42 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x12db, gbc.sp());
        EXPECT(0xb2a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb2a2));
        // 42 0115
        gbc.setState(0x9231, 0xf205, 0xaf50, 0x993b, 0x549f, 0xa7a7, 0x1, 0x0);
        gbc.writeMem(0x9231, { 0x42 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf205, gbc.sp());
        EXPECT(0x9232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9231));
        // 42 0116
        gbc.setState(0x3cd7, 0x6daf, 0x6330, 0x6c88, 0xe530, 0x3d28, 0x1, 0x1);
        gbc.writeMem(0x3cd7, { 0x42 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6daf, gbc.sp());
        EXPECT(0x3cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0117
        gbc.setState(0x6e1c, 0x126c, 0x2e00, 0xcf5, 0xd8f7, 0x7e78, 0x1, 0x1);
        gbc.writeMem(0x6e1c, { 0x42 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x126c, gbc.sp());
        EXPECT(0x6e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0118
        gbc.setState(0x653, 0x4173, 0x41d0, 0x4c, 0xc596, 0x53a5, 0x1, 0x0);
        gbc.writeMem(0x653, { 0x42 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4173, gbc.sp());
        EXPECT(0x654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0119
        gbc.setState(0xdf80, 0x1fca, 0x9940, 0xdbfc, 0x181, 0x2b7a, 0x0, 0x0);
        gbc.writeMem(0xdf80, { 0x42 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1fca, gbc.sp());
        EXPECT(0xdf81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdf80));
        // 42 011A
        gbc.setState(0x2664, 0xb33b, 0x3470, 0x643f, 0x528, 0x4a67, 0x0, 0x0);
        gbc.writeMem(0x2664, { 0x42 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb33b, gbc.sp());
        EXPECT(0x2665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 011B
        gbc.setState(0x3885, 0xb4e2, 0xae90, 0x2cec, 0xce2a, 0x128b, 0x0, 0x0);
        gbc.writeMem(0x3885, { 0x42 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb4e2, gbc.sp());
        EXPECT(0x3886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 011C
        gbc.setState(0xa286, 0x8454, 0xea10, 0x8cce, 0xb9df, 0xc40d, 0x1, 0x0);
        gbc.writeMem(0xa286, { 0x42 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8454, gbc.sp());
        EXPECT(0xa287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa286));
        // 42 011D
        gbc.setState(0x9f05, 0x26e5, 0xd6e0, 0x7de4, 0xbbf2, 0x93e7, 0x1, 0x0);
        gbc.writeMem(0x9f05, { 0x42 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x26e5, gbc.sp());
        EXPECT(0x9f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9f05));
        // 42 011E
        gbc.setState(0xb3fc, 0x9a0a, 0xfcb0, 0x6f1f, 0x2e9, 0xc06f, 0x1, 0x0);
        gbc.writeMem(0xb3fc, { 0x42 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9a0a, gbc.sp());
        EXPECT(0xb3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb3fc));
        // 42 011F
        gbc.setState(0x5af1, 0x3eae, 0x270, 0xdd1e, 0x313e, 0x1bc5, 0x0, 0x0);
        gbc.writeMem(0x5af1, { 0x42 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3eae, gbc.sp());
        EXPECT(0x5af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0120
        gbc.setState(0x8d96, 0xc7ad, 0xa7e0, 0xf026, 0xbc60, 0x4cdf, 0x1, 0x1);
        gbc.writeMem(0x8d96, { 0x42 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc7ad, gbc.sp());
        EXPECT(0x8d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8d96));
        // 42 0121
        gbc.setState(0x47ce, 0x6d33, 0x9c30, 0x5317, 0x9973, 0x5a16, 0x1, 0x1);
        gbc.writeMem(0x47ce, { 0x42 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6d33, gbc.sp());
        EXPECT(0x47cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0122
        gbc.setState(0x14b6, 0x3a0d, 0xd300, 0x33a5, 0x2c53, 0x39ef, 0x1, 0x0);
        gbc.writeMem(0x14b6, { 0x42 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3a0d, gbc.sp());
        EXPECT(0x14b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0123
        gbc.setState(0x8d2c, 0x65d7, 0xa140, 0x2c1d, 0xea31, 0x5dcd, 0x0, 0x0);
        gbc.writeMem(0x8d2c, { 0x42 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x65d7, gbc.sp());
        EXPECT(0x8d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8d2c));
        // 42 0125
        gbc.setState(0xc4d, 0xac92, 0x2660, 0x1ff0, 0x87f0, 0x655c, 0x1, 0x1);
        gbc.writeMem(0xc4d, { 0x42 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xac92, gbc.sp());
        EXPECT(0xc4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0126
        gbc.setState(0xc6e2, 0x6e38, 0x1570, 0xe8d1, 0x3ebc, 0xa6f0, 0x1, 0x1);
        gbc.writeMem(0xc6e2, { 0x42 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6e38, gbc.sp());
        EXPECT(0xc6e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc6e2));
        // 42 0128
        gbc.setState(0x641c, 0xa37e, 0x1c30, 0xd36b, 0x51b0, 0xa794, 0x0, 0x0);
        gbc.writeMem(0x641c, { 0x42 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa37e, gbc.sp());
        EXPECT(0x641d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0129
        gbc.setState(0xf46, 0xd85, 0xbc0, 0x4cb, 0x4d3e, 0x81df, 0x0, 0x0);
        gbc.writeMem(0xf46, { 0x42 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd85, gbc.sp());
        EXPECT(0xf47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 012A
        gbc.setState(0x3889, 0x7834, 0x1090, 0xf390, 0xd52d, 0x2867, 0x1, 0x0);
        gbc.writeMem(0x3889, { 0x42 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7834, gbc.sp());
        EXPECT(0x388a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 012B
        gbc.setState(0xc604, 0x1e08, 0xa730, 0x951e, 0xda6d, 0x1e91, 0x0, 0x1);
        gbc.writeMem(0xc604, { 0x42 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1e08, gbc.sp());
        EXPECT(0xc605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc604));
        // 42 012C
        gbc.setState(0x16bc, 0x75dd, 0x6b90, 0x240f, 0x4bf8, 0x968e, 0x0, 0x0);
        gbc.writeMem(0x16bc, { 0x42 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x75dd, gbc.sp());
        EXPECT(0x16bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 012D
        gbc.setState(0x5a0, 0xd097, 0x2380, 0x936, 0x519e, 0xadee, 0x1, 0x0);
        gbc.writeMem(0x5a0, { 0x42 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd097, gbc.sp());
        EXPECT(0x5a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 012E
        gbc.setState(0xa124, 0x810f, 0x80, 0xa538, 0xd372, 0xab3c, 0x1, 0x1);
        gbc.writeMem(0xa124, { 0x42 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x810f, gbc.sp());
        EXPECT(0xa125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa124));
        // 42 012F
        gbc.setState(0xdcd8, 0xf600, 0xb730, 0xfbcf, 0x3bbc, 0xac28, 0x1, 0x0);
        gbc.writeMem(0xdcd8, { 0x42 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf600, gbc.sp());
        EXPECT(0xdcd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdcd8));
        // 42 0130
        gbc.setState(0xa164, 0x5456, 0x1760, 0x7b75, 0x9d75, 0xb324, 0x1, 0x1);
        gbc.writeMem(0xa164, { 0x42 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5456, gbc.sp());
        EXPECT(0xa165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa164));
        // 42 0131
        gbc.setState(0x6e6, 0x60e5, 0x4a0, 0x5447, 0xe84a, 0x147, 0x1, 0x1);
        gbc.writeMem(0x6e6, { 0x42 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x60e5, gbc.sp());
        EXPECT(0x6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0132
        gbc.setState(0x2fdb, 0x6747, 0x1720, 0x4119, 0x4ba4, 0xc2b6, 0x1, 0x1);
        gbc.writeMem(0x2fdb, { 0x42 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6747, gbc.sp());
        EXPECT(0x2fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0133
        gbc.setState(0x7d83, 0x840e, 0x310, 0xef56, 0x7daa, 0x44a, 0x1, 0x1);
        gbc.writeMem(0x7d83, { 0x42 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x840e, gbc.sp());
        EXPECT(0x7d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0134
        gbc.setState(0xe2f8, 0xe36f, 0xf070, 0x98c1, 0xf324, 0xfc84, 0x1, 0x0);
        gbc.writeMem(0xe2f8, { 0x42 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe36f, gbc.sp());
        EXPECT(0xe2f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe2f8));
        // 42 0135
        gbc.setState(0xd17d, 0xeaeb, 0x4a90, 0x3b3a, 0x8a02, 0x2006, 0x1, 0x1);
        gbc.writeMem(0xd17d, { 0x42 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xeaeb, gbc.sp());
        EXPECT(0xd17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd17d));
        // 42 0136
        gbc.setState(0x3e29, 0xa383, 0x6360, 0xa863, 0x90ad, 0xba, 0x0, 0x0);
        gbc.writeMem(0x3e29, { 0x42 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa383, gbc.sp());
        EXPECT(0x3e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0137
        gbc.setState(0x8e5e, 0x42b0, 0xcd50, 0xf6c9, 0x97bb, 0x3bb6, 0x0, 0x0);
        gbc.writeMem(0x8e5e, { 0x42 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x42b0, gbc.sp());
        EXPECT(0x8e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8e5e));
        // 42 0138
        gbc.setState(0x2052, 0x1556, 0xb290, 0x2e11, 0xd698, 0xcdcd, 0x1, 0x1);
        gbc.writeMem(0x2052, { 0x42 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1556, gbc.sp());
        EXPECT(0x2053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 013A
        gbc.setState(0xd9e3, 0xef42, 0x3cc0, 0x8da2, 0x959f, 0xfaf1, 0x1, 0x1);
        gbc.writeMem(0xd9e3, { 0x42 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xef42, gbc.sp());
        EXPECT(0xd9e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd9e3));
        // 42 013B
        gbc.setState(0xb184, 0x3ec, 0xa260, 0xb59f, 0x2927, 0x1ad9, 0x1, 0x1);
        gbc.writeMem(0xb184, { 0x42 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3ec, gbc.sp());
        EXPECT(0xb185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb184));
        // 42 013C
        gbc.setState(0x730a, 0x8a74, 0xa880, 0x8252, 0xa626, 0x4b89, 0x0, 0x1);
        gbc.writeMem(0x730a, { 0x42 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8a74, gbc.sp());
        EXPECT(0x730b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 013D
        gbc.setState(0x6bd2, 0x9052, 0x4440, 0xfc1d, 0xf69b, 0xe66f, 0x1, 0x0);
        gbc.writeMem(0x6bd2, { 0x42 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9052, gbc.sp());
        EXPECT(0x6bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 013E
        gbc.setState(0x5e5d, 0x2d07, 0x7a80, 0xbc7, 0xbdbe, 0x22db, 0x0, 0x0);
        gbc.writeMem(0x5e5d, { 0x42 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2d07, gbc.sp());
        EXPECT(0x5e5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 013F
        gbc.setState(0x4b69, 0x8937, 0xe220, 0x6f40, 0x315d, 0xc368, 0x1, 0x0);
        gbc.writeMem(0x4b69, { 0x42 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8937, gbc.sp());
        EXPECT(0x4b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0140
        gbc.setState(0x7339, 0x77a3, 0x8d80, 0x9ee1, 0x1021, 0xa40e, 0x1, 0x0);
        gbc.writeMem(0x7339, { 0x42 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x77a3, gbc.sp());
        EXPECT(0x733a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0141
        gbc.setState(0x365, 0x26b9, 0xa70, 0x5533, 0xc506, 0xe6e3, 0x1, 0x1);
        gbc.writeMem(0x365, { 0x42 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x26b9, gbc.sp());
        EXPECT(0x366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0142
        gbc.setState(0x79c6, 0x402d, 0xc630, 0x9be1, 0x4bd9, 0x7747, 0x0, 0x0);
        gbc.writeMem(0x79c6, { 0x42 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x402d, gbc.sp());
        EXPECT(0x79c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0143
        gbc.setState(0xc751, 0x1067, 0x82d0, 0x26f1, 0x51b6, 0x1157, 0x0, 0x1);
        gbc.writeMem(0xc751, { 0x42 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1067, gbc.sp());
        EXPECT(0xc752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc751));
        // 42 0144
        gbc.setState(0x5ce8, 0x1397, 0xb630, 0x1353, 0xefc1, 0xb57c, 0x1, 0x1);
        gbc.writeMem(0x5ce8, { 0x42 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1397, gbc.sp());
        EXPECT(0x5ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0145
        gbc.setState(0x8faa, 0xa73f, 0x150, 0x19c3, 0x13ae, 0x7f9b, 0x1, 0x0);
        gbc.writeMem(0x8faa, { 0x42 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa73f, gbc.sp());
        EXPECT(0x8fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8faa));
        // 42 0146
        gbc.setState(0xb131, 0x4669, 0x8cb0, 0xb00d, 0xba46, 0xfbfe, 0x0, 0x1);
        gbc.writeMem(0xb131, { 0x42 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4669, gbc.sp());
        EXPECT(0xb132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb131));
        // 42 0147
        gbc.setState(0x1084, 0xd532, 0x87b0, 0x691b, 0x1a0a, 0x4e50, 0x0, 0x0);
        gbc.writeMem(0x1084, { 0x42 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd532, gbc.sp());
        EXPECT(0x1085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0148
        gbc.setState(0x7334, 0x1304, 0x9030, 0x8df6, 0x24c0, 0xa22d, 0x0, 0x0);
        gbc.writeMem(0x7334, { 0x42 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1304, gbc.sp());
        EXPECT(0x7335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0149
        gbc.setState(0x7e2a, 0xe5c8, 0xe390, 0x645f, 0xcd40, 0x8cb1, 0x0, 0x1);
        gbc.writeMem(0x7e2a, { 0x42 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe5c8, gbc.sp());
        EXPECT(0x7e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 014A
        gbc.setState(0xc0b9, 0x28ed, 0x8d30, 0x470e, 0xc7bd, 0x9da0, 0x0, 0x1);
        gbc.writeMem(0xc0b9, { 0x42 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x28ed, gbc.sp());
        EXPECT(0xc0ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc0b9));
        // 42 014B
        gbc.setState(0xcdb5, 0x1bfd, 0x79c0, 0x33bb, 0x6964, 0x7054, 0x0, 0x0);
        gbc.writeMem(0xcdb5, { 0x42 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1bfd, gbc.sp());
        EXPECT(0xcdb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcdb5));
        // 42 014C
        gbc.setState(0x7264, 0x562e, 0xcb60, 0x3b44, 0xa811, 0x9f18, 0x0, 0x1);
        gbc.writeMem(0x7264, { 0x42 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x562e, gbc.sp());
        EXPECT(0x7265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 014D
        gbc.setState(0x58f2, 0x3b6, 0x57a0, 0x7996, 0x9508, 0x151b, 0x0, 0x0);
        gbc.writeMem(0x58f2, { 0x42 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3b6, gbc.sp());
        EXPECT(0x58f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 014E
        gbc.setState(0x839, 0xd5c9, 0xf310, 0xf174, 0x9e2b, 0x1f04, 0x1, 0x0);
        gbc.writeMem(0x839, { 0x42 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd5c9, gbc.sp());
        EXPECT(0x83a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 014F
        gbc.setState(0x6b7d, 0xea0d, 0x52a0, 0x9f1a, 0x2a1b, 0xef9a, 0x1, 0x1);
        gbc.writeMem(0x6b7d, { 0x42 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xea0d, gbc.sp());
        EXPECT(0x6b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0150
        gbc.setState(0x6c3d, 0x1c87, 0x7a60, 0xec2, 0x8a01, 0x6171, 0x0, 0x0);
        gbc.writeMem(0x6c3d, { 0x42 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1c87, gbc.sp());
        EXPECT(0x6c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0151
        gbc.setState(0x37e, 0xd89c, 0xcfb0, 0xf14f, 0x6176, 0xff81, 0x0, 0x1);
        gbc.writeMem(0x37e, { 0x42 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd89c, gbc.sp());
        EXPECT(0x37f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0152
        gbc.setState(0xef4e, 0x50db, 0xe610, 0x5434, 0x515f, 0x5250, 0x1, 0x1);
        gbc.writeMem(0xef4e, { 0x42 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x50db, gbc.sp());
        EXPECT(0xef4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xef4e));
        // 42 0153
        gbc.setState(0xd9c3, 0xafb0, 0x8db0, 0x7127, 0xda66, 0x9dba, 0x0, 0x0);
        gbc.writeMem(0xd9c3, { 0x42 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xafb0, gbc.sp());
        EXPECT(0xd9c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd9c3));
        // 42 0154
        gbc.setState(0x1231, 0x675, 0x7b60, 0x97a7, 0x3379, 0x387f, 0x1, 0x1);
        gbc.writeMem(0x1231, { 0x42 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x675, gbc.sp());
        EXPECT(0x1232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0155
        gbc.setState(0x96a5, 0xa84e, 0x5f60, 0xa603, 0x210c, 0x8190, 0x1, 0x1);
        gbc.writeMem(0x96a5, { 0x42 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa84e, gbc.sp());
        EXPECT(0x96a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x96a5));
        // 42 0156
        gbc.setState(0x76c7, 0xe9f, 0xf00, 0x30ec, 0xf938, 0x701a, 0x1, 0x1);
        gbc.writeMem(0x76c7, { 0x42 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe9f, gbc.sp());
        EXPECT(0x76c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0157
        gbc.setState(0x71aa, 0x4101, 0xbaf0, 0xbc6b, 0x3f6b, 0xc4c0, 0x0, 0x1);
        gbc.writeMem(0x71aa, { 0x42 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4101, gbc.sp());
        EXPECT(0x71ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0158
        gbc.setState(0xdb3d, 0x5bb9, 0x8c30, 0xd4ec, 0x3811, 0x1291, 0x0, 0x0);
        gbc.writeMem(0xdb3d, { 0x42 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5bb9, gbc.sp());
        EXPECT(0xdb3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdb3d));
        // 42 0159
        gbc.setState(0xe03c, 0xca7c, 0x2740, 0x2c93, 0x8eff, 0x9da0, 0x0, 0x1);
        gbc.writeMem(0xe03c, { 0x42 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xca7c, gbc.sp());
        EXPECT(0xe03d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe03c));
        // 42 015A
        gbc.setState(0xa219, 0xe5e5, 0xe9a0, 0xb5b5, 0xc373, 0x3fe1, 0x0, 0x0);
        gbc.writeMem(0xa219, { 0x42 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe5e5, gbc.sp());
        EXPECT(0xa21a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa219));
        // 42 015B
        gbc.setState(0xce66, 0xa2b4, 0xd50, 0xd4a9, 0x243f, 0xb154, 0x0, 0x0);
        gbc.writeMem(0xce66, { 0x42 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa2b4, gbc.sp());
        EXPECT(0xce67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xce66));
        // 42 015C
        gbc.setState(0x9cb6, 0x6451, 0xa110, 0xd855, 0x192b, 0x2410, 0x1, 0x1);
        gbc.writeMem(0x9cb6, { 0x42 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6451, gbc.sp());
        EXPECT(0x9cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9cb6));
        // 42 015D
        gbc.setState(0xe0fd, 0xb7c3, 0x4bd0, 0x933, 0xc214, 0xd293, 0x1, 0x0);
        gbc.writeMem(0xe0fd, { 0x42 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb7c3, gbc.sp());
        EXPECT(0xe0fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe0fd));
        // 42 015E
        gbc.setState(0xdbb3, 0x7792, 0x26f0, 0xfdd8, 0x9b58, 0xca26, 0x1, 0x1);
        gbc.writeMem(0xdbb3, { 0x42 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7792, gbc.sp());
        EXPECT(0xdbb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdbb3));
        // 42 0160
        gbc.setState(0x5439, 0xfdaf, 0xccd0, 0x8aca, 0xf020, 0x5b9f, 0x0, 0x0);
        gbc.writeMem(0x5439, { 0x42 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfdaf, gbc.sp());
        EXPECT(0x543a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0161
        gbc.setState(0x94cb, 0x4431, 0xebc0, 0x2e6d, 0x234, 0x667b, 0x1, 0x0);
        gbc.writeMem(0x94cb, { 0x42 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4431, gbc.sp());
        EXPECT(0x94cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x94cb));
        // 42 0162
        gbc.setState(0x3b64, 0x4c45, 0x8a60, 0xcc79, 0xbac5, 0x4220, 0x1, 0x0);
        gbc.writeMem(0x3b64, { 0x42 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4c45, gbc.sp());
        EXPECT(0x3b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0163
        gbc.setState(0xdb4a, 0xd666, 0xe5a0, 0x751f, 0x3f26, 0x793e, 0x0, 0x1);
        gbc.writeMem(0xdb4a, { 0x42 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd666, gbc.sp());
        EXPECT(0xdb4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdb4a));
        // 42 0164
        gbc.setState(0xcfca, 0x8a18, 0x1920, 0x3b7c, 0xb20, 0x6984, 0x1, 0x0);
        gbc.writeMem(0xcfca, { 0x42 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8a18, gbc.sp());
        EXPECT(0xcfcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcfca));
        // 42 0165
        gbc.setState(0x7bdb, 0x557f, 0xc3f0, 0xf203, 0x6a1b, 0x7c8d, 0x1, 0x0);
        gbc.writeMem(0x7bdb, { 0x42 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x557f, gbc.sp());
        EXPECT(0x7bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0166
        gbc.setState(0x8142, 0xe54b, 0x8190, 0xa8ec, 0x8a14, 0x341e, 0x0, 0x1);
        gbc.writeMem(0x8142, { 0x42 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe54b, gbc.sp());
        EXPECT(0x8143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8142));
        // 42 0167
        gbc.setState(0xd668, 0xaf79, 0xf560, 0xb638, 0xff50, 0x8dfd, 0x0, 0x1);
        gbc.writeMem(0xd668, { 0x42 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xaf79, gbc.sp());
        EXPECT(0xd669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd668));
        // 42 0168
        gbc.setState(0x98ae, 0x16e4, 0xab70, 0xfccd, 0xce1c, 0x7ce3, 0x0, 0x0);
        gbc.writeMem(0x98ae, { 0x42 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x16e4, gbc.sp());
        EXPECT(0x98af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x98ae));
        // 42 0169
        gbc.setState(0x106b, 0xdc8f, 0x4ae0, 0x5e81, 0xe29f, 0xc055, 0x0, 0x1);
        gbc.writeMem(0x106b, { 0x42 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdc8f, gbc.sp());
        EXPECT(0x106c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 016A
        gbc.setState(0xa1e6, 0x8a45, 0x25a0, 0x9e05, 0x77ad, 0x590d, 0x1, 0x0);
        gbc.writeMem(0xa1e6, { 0x42 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8a45, gbc.sp());
        EXPECT(0xa1e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa1e6));
        // 42 016B
        gbc.setState(0x69fb, 0x7a1f, 0xd8d0, 0x9f65, 0x6937, 0x5270, 0x1, 0x1);
        gbc.writeMem(0x69fb, { 0x42 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7a1f, gbc.sp());
        EXPECT(0x69fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 016C
        gbc.setState(0xacd5, 0xf540, 0x8050, 0x5ab2, 0x9c54, 0x4a3e, 0x0, 0x1);
        gbc.writeMem(0xacd5, { 0x42 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf540, gbc.sp());
        EXPECT(0xacd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xacd5));
        // 42 016D
        gbc.setState(0x46ed, 0x9e57, 0x4bd0, 0xbb61, 0x35a, 0x24fb, 0x1, 0x1);
        gbc.writeMem(0x46ed, { 0x42 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9e57, gbc.sp());
        EXPECT(0x46ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 016E
        gbc.setState(0xbb9c, 0x85c0, 0xdbe0, 0xff2e, 0xc68a, 0x8c68, 0x0, 0x1);
        gbc.writeMem(0xbb9c, { 0x42 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x85c0, gbc.sp());
        EXPECT(0xbb9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbb9c));
        // 42 016F
        gbc.setState(0x52e5, 0x2d7f, 0xdb70, 0x80b7, 0xcc06, 0xee33, 0x0, 0x1);
        gbc.writeMem(0x52e5, { 0x42 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2d7f, gbc.sp());
        EXPECT(0x52e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0170
        gbc.setState(0x9c8, 0x66b1, 0x1e60, 0x6e63, 0x7703, 0xaa40, 0x1, 0x1);
        gbc.writeMem(0x9c8, { 0x42 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x66b1, gbc.sp());
        EXPECT(0x9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0171
        gbc.setState(0x9b92, 0x79a1, 0xd790, 0x8da1, 0x85d5, 0x5b69, 0x1, 0x0);
        gbc.writeMem(0x9b92, { 0x42 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x79a1, gbc.sp());
        EXPECT(0x9b93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9b92));
        // 42 0172
        gbc.setState(0xc49e, 0x7b9e, 0x8110, 0x6de2, 0xd524, 0xc259, 0x1, 0x1);
        gbc.writeMem(0xc49e, { 0x42 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7b9e, gbc.sp());
        EXPECT(0xc49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc49e));
        // 42 0173
        gbc.setState(0xaeec, 0x3f3, 0x8500, 0x82e4, 0xa8a2, 0x406a, 0x0, 0x0);
        gbc.writeMem(0xaeec, { 0x42 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3f3, gbc.sp());
        EXPECT(0xaeed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xaeec));
        // 42 0174
        gbc.setState(0xf58, 0x64c3, 0x5410, 0xf576, 0xc1ef, 0x77ec, 0x1, 0x0);
        gbc.writeMem(0xf58, { 0x42 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x64c3, gbc.sp());
        EXPECT(0xf59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0175
        gbc.setState(0x372b, 0xdecc, 0x4680, 0x1b67, 0x467b, 0x1fc2, 0x0, 0x1);
        gbc.writeMem(0x372b, { 0x42 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdecc, gbc.sp());
        EXPECT(0x372c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0176
        gbc.setState(0x788, 0x78b5, 0x5980, 0x2b4b, 0xb56a, 0xac0f, 0x1, 0x0);
        gbc.writeMem(0x788, { 0x42 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x78b5, gbc.sp());
        EXPECT(0x789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0177
        gbc.setState(0x8e36, 0xb09e, 0x4d40, 0x3892, 0xfc75, 0xaa3d, 0x1, 0x0);
        gbc.writeMem(0x8e36, { 0x42 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb09e, gbc.sp());
        EXPECT(0x8e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8e36));
        // 42 0179
        gbc.setState(0xc94d, 0x7634, 0x3440, 0x147f, 0xc959, 0x2c20, 0x1, 0x1);
        gbc.writeMem(0xc94d, { 0x42 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7634, gbc.sp());
        EXPECT(0xc94e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc94d));
        // 42 017A
        gbc.setState(0x3cd0, 0x7a12, 0xd750, 0x28c7, 0x4a7e, 0x7726, 0x1, 0x0);
        gbc.writeMem(0x3cd0, { 0x42 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7a12, gbc.sp());
        EXPECT(0x3cd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 017B
        gbc.setState(0x493b, 0xb213, 0xe0d0, 0x3bb9, 0x2c09, 0x5139, 0x0, 0x1);
        gbc.writeMem(0x493b, { 0x42 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb213, gbc.sp());
        EXPECT(0x493c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 017C
        gbc.setState(0xc4c5, 0xbdd2, 0x350, 0xf51, 0x7550, 0x3ff1, 0x0, 0x1);
        gbc.writeMem(0xc4c5, { 0x42 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbdd2, gbc.sp());
        EXPECT(0xc4c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc4c5));
        // 42 017E
        gbc.setState(0x450, 0x123a, 0x870, 0x3831, 0x87eb, 0x306a, 0x1, 0x1);
        gbc.writeMem(0x450, { 0x42 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x123a, gbc.sp());
        EXPECT(0x451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 017F
        gbc.setState(0x13d9, 0xecd4, 0xb0c0, 0x3f67, 0xa11d, 0xe4ca, 0x0, 0x1);
        gbc.writeMem(0x13d9, { 0x42 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xecd4, gbc.sp());
        EXPECT(0x13da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0180
        gbc.setState(0x89b3, 0x81fe, 0xc110, 0x1728, 0xa93e, 0x53cf, 0x0, 0x0);
        gbc.writeMem(0x89b3, { 0x42 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x81fe, gbc.sp());
        EXPECT(0x89b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x89b3));
        // 42 0181
        gbc.setState(0x9a4e, 0xb6ef, 0x2b60, 0x38a0, 0xa1f9, 0xedb8, 0x0, 0x1);
        gbc.writeMem(0x9a4e, { 0x42 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb6ef, gbc.sp());
        EXPECT(0x9a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9a4e));
        // 42 0182
        gbc.setState(0xb64d, 0x65fa, 0x6da0, 0xfcab, 0xd7c1, 0x70aa, 0x1, 0x0);
        gbc.writeMem(0xb64d, { 0x42 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x65fa, gbc.sp());
        EXPECT(0xb64e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb64d));
        // 42 0183
        gbc.setState(0x136c, 0x13fa, 0xb580, 0xb6d, 0x7813, 0x19db, 0x1, 0x1);
        gbc.writeMem(0x136c, { 0x42 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x13fa, gbc.sp());
        EXPECT(0x136d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0184
        gbc.setState(0xe926, 0x3753, 0xa190, 0x770b, 0x314d, 0x8322, 0x1, 0x1);
        gbc.writeMem(0xe926, { 0x42 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3753, gbc.sp());
        EXPECT(0xe927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe926));
        // 42 0185
        gbc.setState(0x78fe, 0x980e, 0xdfb0, 0x256d, 0xcfb, 0xd168, 0x1, 0x0);
        gbc.writeMem(0x78fe, { 0x42 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x980e, gbc.sp());
        EXPECT(0x78ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0186
        gbc.setState(0x333d, 0xfd43, 0x7f80, 0x470b, 0x173f, 0x231e, 0x0, 0x0);
        gbc.writeMem(0x333d, { 0x42 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfd43, gbc.sp());
        EXPECT(0x333e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0187
        gbc.setState(0xda5b, 0xf392, 0xf4a0, 0xaeac, 0x9318, 0xdbae, 0x1, 0x0);
        gbc.writeMem(0xda5b, { 0x42 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf392, gbc.sp());
        EXPECT(0xda5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xda5b));
        // 42 0188
        gbc.setState(0x91a1, 0x471c, 0xc070, 0x5371, 0xdfa8, 0x441a, 0x1, 0x0);
        gbc.writeMem(0x91a1, { 0x42 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x471c, gbc.sp());
        EXPECT(0x91a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x91a1));
        // 42 0189
        gbc.setState(0x315d, 0x7f79, 0x2100, 0x50ed, 0xb412, 0x5ae2, 0x0, 0x1);
        gbc.writeMem(0x315d, { 0x42 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7f79, gbc.sp());
        EXPECT(0x315e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 018A
        gbc.setState(0xe731, 0x7b3f, 0x6d90, 0x4f6, 0x9b27, 0x9fc7, 0x1, 0x1);
        gbc.writeMem(0xe731, { 0x42 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7b3f, gbc.sp());
        EXPECT(0xe732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe731));
        // 42 018B
        gbc.setState(0x2010, 0xed87, 0xf2c0, 0x382f, 0x514f, 0xa5c3, 0x0, 0x0);
        gbc.writeMem(0x2010, { 0x42 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xed87, gbc.sp());
        EXPECT(0x2011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 018C
        gbc.setState(0xbfd3, 0x26ff, 0xe430, 0x617f, 0x49e3, 0xf6af, 0x1, 0x1);
        gbc.writeMem(0xbfd3, { 0x42 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x26ff, gbc.sp());
        EXPECT(0xbfd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbfd3));
        // 42 018D
        gbc.setState(0x146e, 0x4b7b, 0x7ea0, 0xf911, 0xa88d, 0x91a, 0x0, 0x0);
        gbc.writeMem(0x146e, { 0x42 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4b7b, gbc.sp());
        EXPECT(0x146f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 018E
        gbc.setState(0xd6fc, 0x1646, 0x2bf0, 0x90a, 0xc0d7, 0xeb42, 0x0, 0x0);
        gbc.writeMem(0xd6fc, { 0x42 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1646, gbc.sp());
        EXPECT(0xd6fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd6fc));
        // 42 018F
        gbc.setState(0x348f, 0xcb76, 0xa6d0, 0xfba4, 0x13ea, 0xa239, 0x1, 0x0);
        gbc.writeMem(0x348f, { 0x42 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcb76, gbc.sp());
        EXPECT(0x3490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0190
        gbc.setState(0xbb23, 0xc690, 0x50b0, 0x8a4e, 0xc4d3, 0xb366, 0x1, 0x0);
        gbc.writeMem(0xbb23, { 0x42 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc690, gbc.sp());
        EXPECT(0xbb24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbb23));
        // 42 0191
        gbc.setState(0xeb49, 0x976b, 0xd100, 0x18ab, 0x8593, 0xa2a1, 0x0, 0x1);
        gbc.writeMem(0xeb49, { 0x42 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x976b, gbc.sp());
        EXPECT(0xeb4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xeb49));
        // 42 0192
        gbc.setState(0x303e, 0xf874, 0xb370, 0x67c2, 0x6db9, 0xa642, 0x0, 0x1);
        gbc.writeMem(0x303e, { 0x42 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf874, gbc.sp());
        EXPECT(0x303f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0194
        gbc.setState(0x8685, 0xf08b, 0x1d50, 0x67f9, 0xb0ba, 0x17f8, 0x0, 0x0);
        gbc.writeMem(0x8685, { 0x42 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf08b, gbc.sp());
        EXPECT(0x8686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8685));
        // 42 0195
        gbc.setState(0x49ca, 0xa304, 0xfe50, 0x3e18, 0x8e5f, 0x2f40, 0x1, 0x1);
        gbc.writeMem(0x49ca, { 0x42 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa304, gbc.sp());
        EXPECT(0x49cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0196
        gbc.setState(0x4465, 0xe512, 0x6f50, 0xd784, 0xcd94, 0xee3b, 0x0, 0x1);
        gbc.writeMem(0x4465, { 0x42 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe512, gbc.sp());
        EXPECT(0x4466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0197
        gbc.setState(0x594c, 0xa3d3, 0x5180, 0x5181, 0x921e, 0xc8d2, 0x0, 0x1);
        gbc.writeMem(0x594c, { 0x42 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa3d3, gbc.sp());
        EXPECT(0x594d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0199
        gbc.setState(0x32e2, 0xf23e, 0xa450, 0x68d9, 0xc330, 0xd2eb, 0x1, 0x1);
        gbc.writeMem(0x32e2, { 0x42 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf23e, gbc.sp());
        EXPECT(0x32e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 019A
        gbc.setState(0xa01f, 0xbb72, 0x52b0, 0x2696, 0xaf17, 0x7b31, 0x0, 0x1);
        gbc.writeMem(0xa01f, { 0x42 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbb72, gbc.sp());
        EXPECT(0xa020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa01f));
        // 42 019B
        gbc.setState(0xd5db, 0xf9a0, 0x9d30, 0xdc0d, 0x7093, 0x1e12, 0x0, 0x1);
        gbc.writeMem(0xd5db, { 0x42 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf9a0, gbc.sp());
        EXPECT(0xd5dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd5db));
        // 42 019C
        gbc.setState(0x53b7, 0x87d8, 0xbc00, 0x7e5b, 0xd914, 0x7dd6, 0x0, 0x1);
        gbc.writeMem(0x53b7, { 0x42 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x87d8, gbc.sp());
        EXPECT(0x53b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 019D
        gbc.setState(0x5993, 0xa03c, 0x5e60, 0x4096, 0x756a, 0xea44, 0x1, 0x1);
        gbc.writeMem(0x5993, { 0x42 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa03c, gbc.sp());
        EXPECT(0x5994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 019E
        gbc.setState(0x7525, 0xabe7, 0x38c0, 0xa905, 0xaeca, 0x512b, 0x0, 0x0);
        gbc.writeMem(0x7525, { 0x42 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xabe7, gbc.sp());
        EXPECT(0x7526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 019F
        gbc.setState(0xed8e, 0xc573, 0xb6a0, 0x2b9, 0xc2e0, 0xca63, 0x1, 0x0);
        gbc.writeMem(0xed8e, { 0x42 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc573, gbc.sp());
        EXPECT(0xed8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xed8e));
        // 42 01A0
        gbc.setState(0xbf1d, 0xbb64, 0xa200, 0x169b, 0x6fe4, 0x9b7b, 0x0, 0x1);
        gbc.writeMem(0xbf1d, { 0x42 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbb64, gbc.sp());
        EXPECT(0xbf1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbf1d));
        // 42 01A1
        gbc.setState(0x5dd7, 0x85a7, 0x450, 0x7952, 0xad84, 0x6359, 0x1, 0x1);
        gbc.writeMem(0x5dd7, { 0x42 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x85a7, gbc.sp());
        EXPECT(0x5dd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01A2
        gbc.setState(0x489f, 0x1361, 0xbb60, 0x3122, 0xb68b, 0x6435, 0x0, 0x1);
        gbc.writeMem(0x489f, { 0x42 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1361, gbc.sp());
        EXPECT(0x48a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01A3
        gbc.setState(0xe061, 0x63bc, 0xcf50, 0x2f23, 0x968c, 0x4094, 0x1, 0x0);
        gbc.writeMem(0xe061, { 0x42 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x63bc, gbc.sp());
        EXPECT(0xe062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe061));
        // 42 01A4
        gbc.setState(0xaa0f, 0x7aab, 0x6e30, 0x9888, 0x5ef2, 0x5329, 0x1, 0x1);
        gbc.writeMem(0xaa0f, { 0x42 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7aab, gbc.sp());
        EXPECT(0xaa10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xaa0f));
        // 42 01A5
        gbc.setState(0x1a42, 0xf98e, 0xf90, 0xa8f7, 0xdb16, 0x3479, 0x0, 0x1);
        gbc.writeMem(0x1a42, { 0x42 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf98e, gbc.sp());
        EXPECT(0x1a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01A6
        gbc.setState(0x3135, 0x62d4, 0x8b00, 0x1262, 0xf577, 0xa4c6, 0x1, 0x0);
        gbc.writeMem(0x3135, { 0x42 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x62d4, gbc.sp());
        EXPECT(0x3136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01A7
        gbc.setState(0x5b26, 0x4209, 0x7f00, 0x4d35, 0x2aa9, 0xd1be, 0x0, 0x1);
        gbc.writeMem(0x5b26, { 0x42 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4209, gbc.sp());
        EXPECT(0x5b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01A8
        gbc.setState(0xe864, 0xeeab, 0xeff0, 0xc260, 0x41a4, 0x990c, 0x0, 0x1);
        gbc.writeMem(0xe864, { 0x42 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xeeab, gbc.sp());
        EXPECT(0xe865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe864));
        // 42 01A9
        gbc.setState(0x5482, 0x8aa3, 0xa700, 0xcca8, 0x488d, 0x8977, 0x0, 0x0);
        gbc.writeMem(0x5482, { 0x42 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8aa3, gbc.sp());
        EXPECT(0x5483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01AA
        gbc.setState(0x8102, 0x702a, 0xe90, 0xab01, 0x72b7, 0x333, 0x1, 0x0);
        gbc.writeMem(0x8102, { 0x42 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x702a, gbc.sp());
        EXPECT(0x8103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8102));
        // 42 01AB
        gbc.setState(0x1336, 0xc88f, 0xe660, 0x6d15, 0xf3e0, 0xb4a7, 0x1, 0x1);
        gbc.writeMem(0x1336, { 0x42 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc88f, gbc.sp());
        EXPECT(0x1337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01AC
        gbc.setState(0x7ab, 0xb93, 0x39c0, 0x9544, 0xf107, 0xa631, 0x0, 0x0);
        gbc.writeMem(0x7ab, { 0x42 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb93, gbc.sp());
        EXPECT(0x7ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01AD
        gbc.setState(0xeb44, 0xc8dd, 0xea90, 0x126c, 0x5e7, 0x1169, 0x0, 0x1);
        gbc.writeMem(0xeb44, { 0x42 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc8dd, gbc.sp());
        EXPECT(0xeb45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xeb44));
        // 42 01AE
        gbc.setState(0x5d66, 0x3d4e, 0x68d0, 0x2778, 0xf89e, 0x34cb, 0x1, 0x0);
        gbc.writeMem(0x5d66, { 0x42 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3d4e, gbc.sp());
        EXPECT(0x5d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01AF
        gbc.setState(0xa316, 0xf4f8, 0xe5b0, 0x9810, 0xe5d, 0x865e, 0x1, 0x1);
        gbc.writeMem(0xa316, { 0x42 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf4f8, gbc.sp());
        EXPECT(0xa317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa316));
        // 42 01B0
        gbc.setState(0x58a7, 0xa132, 0x6930, 0x47e5, 0x6bdf, 0x95d, 0x1, 0x1);
        gbc.writeMem(0x58a7, { 0x42 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa132, gbc.sp());
        EXPECT(0x58a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01B1
        gbc.setState(0x7957, 0xc116, 0x9380, 0x1725, 0xe936, 0x572b, 0x0, 0x1);
        gbc.writeMem(0x7957, { 0x42 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc116, gbc.sp());
        EXPECT(0x7958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01B2
        gbc.setState(0xd081, 0x91b6, 0x2460, 0xcb6e, 0x8774, 0xa0da, 0x1, 0x1);
        gbc.writeMem(0xd081, { 0x42 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x91b6, gbc.sp());
        EXPECT(0xd082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd081));
        // 42 01B3
        gbc.setState(0xa41c, 0x8b30, 0x4580, 0x44a7, 0x7541, 0x9301, 0x1, 0x0);
        gbc.writeMem(0xa41c, { 0x42 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8b30, gbc.sp());
        EXPECT(0xa41d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa41c));
        // 42 01B4
        gbc.setState(0x18f4, 0x44ff, 0x1dc0, 0xc252, 0x5860, 0x864e, 0x1, 0x0);
        gbc.writeMem(0x18f4, { 0x42 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x44ff, gbc.sp());
        EXPECT(0x18f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01B5
        gbc.setState(0x3e72, 0xbb9e, 0x97c0, 0xa2a8, 0x9e70, 0x61f7, 0x0, 0x1);
        gbc.writeMem(0x3e72, { 0x42 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbb9e, gbc.sp());
        EXPECT(0x3e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01B6
        gbc.setState(0x694d, 0x9ed5, 0x2030, 0xb95f, 0xbf49, 0x21e1, 0x1, 0x1);
        gbc.writeMem(0x694d, { 0x42 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9ed5, gbc.sp());
        EXPECT(0x694e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01B7
        gbc.setState(0xda54, 0x24ae, 0x6d30, 0xbff0, 0xbb4a, 0x4c7a, 0x0, 0x0);
        gbc.writeMem(0xda54, { 0x42 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x24ae, gbc.sp());
        EXPECT(0xda55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xda54));
        // 42 01B8
        gbc.setState(0xba95, 0x5e4a, 0x3e10, 0x814f, 0xcbb6, 0x2d0a, 0x0, 0x1);
        gbc.writeMem(0xba95, { 0x42 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5e4a, gbc.sp());
        EXPECT(0xba96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xba95));
        // 42 01B9
        gbc.setState(0x6f43, 0xc685, 0xbf90, 0x872a, 0x97ee, 0x4cd5, 0x1, 0x0);
        gbc.writeMem(0x6f43, { 0x42 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc685, gbc.sp());
        EXPECT(0x6f44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01BA
        gbc.setState(0x3f9d, 0x8255, 0xccd0, 0x3e21, 0x85e8, 0xa6e8, 0x0, 0x1);
        gbc.writeMem(0x3f9d, { 0x42 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8255, gbc.sp());
        EXPECT(0x3f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01BC
        gbc.setState(0x3b5f, 0x76d1, 0x29a0, 0x3b6a, 0xeaa4, 0x617, 0x0, 0x1);
        gbc.writeMem(0x3b5f, { 0x42 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x76d1, gbc.sp());
        EXPECT(0x3b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01BD
        gbc.setState(0xd04a, 0x41be, 0x4560, 0xf79f, 0xff8c, 0x56ec, 0x0, 0x0);
        gbc.writeMem(0xd04a, { 0x42 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x41be, gbc.sp());
        EXPECT(0xd04b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd04a));
        // 42 01BE
        gbc.setState(0x9e0d, 0x32b3, 0xd480, 0x4cdc, 0x56ef, 0x276a, 0x1, 0x0);
        gbc.writeMem(0x9e0d, { 0x42 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x32b3, gbc.sp());
        EXPECT(0x9e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9e0d));
        // 42 01BF
        gbc.setState(0x48e9, 0x80d4, 0x5b00, 0xdd02, 0x2212, 0x53d, 0x1, 0x0);
        gbc.writeMem(0x48e9, { 0x42 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x80d4, gbc.sp());
        EXPECT(0x48ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01C0
        gbc.setState(0xff8, 0x19c, 0xd6c0, 0x1d5, 0x5202, 0xf970, 0x0, 0x0);
        gbc.writeMem(0xff8, { 0x42 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x19c, gbc.sp());
        EXPECT(0xff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01C1
        gbc.setState(0xc19f, 0xfc65, 0x2d50, 0xf6cb, 0x7e01, 0x7b5e, 0x1, 0x1);
        gbc.writeMem(0xc19f, { 0x42 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfc65, gbc.sp());
        EXPECT(0xc1a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc19f));
        // 42 01C2
        gbc.setState(0x3625, 0x9db2, 0x3ee0, 0x4d1d, 0x8c4, 0xd84, 0x1, 0x1);
        gbc.writeMem(0x3625, { 0x42 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9db2, gbc.sp());
        EXPECT(0x3626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01C3
        gbc.setState(0xda0, 0x2dbc, 0x7910, 0x7ec7, 0x72d5, 0xc33d, 0x0, 0x1);
        gbc.writeMem(0xda0, { 0x42 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2dbc, gbc.sp());
        EXPECT(0xda1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01C4
        gbc.setState(0x1c9d, 0x2f7a, 0xe640, 0xa3f2, 0x4854, 0x3095, 0x0, 0x0);
        gbc.writeMem(0x1c9d, { 0x42 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2f7a, gbc.sp());
        EXPECT(0x1c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01C5
        gbc.setState(0x498a, 0xee7a, 0xb220, 0x6e69, 0xa43b, 0x1a43, 0x0, 0x1);
        gbc.writeMem(0x498a, { 0x42 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xee7a, gbc.sp());
        EXPECT(0x498b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01C7
        gbc.setState(0x6ca1, 0xb385, 0x9da0, 0x343e, 0x30e0, 0x8b0e, 0x0, 0x1);
        gbc.writeMem(0x6ca1, { 0x42 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb385, gbc.sp());
        EXPECT(0x6ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01C8
        gbc.setState(0x4d11, 0x2018, 0x3550, 0x89ed, 0x8113, 0x6f7, 0x0, 0x0);
        gbc.writeMem(0x4d11, { 0x42 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2018, gbc.sp());
        EXPECT(0x4d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01C9
        gbc.setState(0x3da1, 0xbd5b, 0x6a0, 0xb525, 0xbcf7, 0x151b, 0x0, 0x0);
        gbc.writeMem(0x3da1, { 0x42 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbd5b, gbc.sp());
        EXPECT(0x3da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01CA
        gbc.setState(0x18ab, 0x2a38, 0xa270, 0x9fda, 0xaae5, 0x7439, 0x0, 0x1);
        gbc.writeMem(0x18ab, { 0x42 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2a38, gbc.sp());
        EXPECT(0x18ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01CB
        gbc.setState(0x695c, 0x3426, 0x7790, 0x94ab, 0xb395, 0x5f05, 0x0, 0x1);
        gbc.writeMem(0x695c, { 0x42 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3426, gbc.sp());
        EXPECT(0x695d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01CD
        gbc.setState(0x2cdc, 0x8c78, 0x3510, 0xea, 0x2317, 0x66cb, 0x1, 0x1);
        gbc.writeMem(0x2cdc, { 0x42 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8c78, gbc.sp());
        EXPECT(0x2cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01CE
        gbc.setState(0x2994, 0xcd57, 0xff20, 0x6b8f, 0xf4b6, 0xa38d, 0x1, 0x0);
        gbc.writeMem(0x2994, { 0x42 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcd57, gbc.sp());
        EXPECT(0x2995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01CF
        gbc.setState(0x7474, 0x5faf, 0x97a0, 0x2905, 0x4d73, 0xa9b8, 0x1, 0x1);
        gbc.writeMem(0x7474, { 0x42 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5faf, gbc.sp());
        EXPECT(0x7475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01D0
        gbc.setState(0x4e00, 0x6e81, 0x6dc0, 0xcd1, 0xe1be, 0xfef0, 0x1, 0x1);
        gbc.writeMem(0x4e00, { 0x42 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6e81, gbc.sp());
        EXPECT(0x4e01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01D1
        gbc.setState(0x9fcd, 0xfff2, 0xf3a0, 0x3744, 0xa07d, 0xae29, 0x1, 0x1);
        gbc.writeMem(0x9fcd, { 0x42 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfff2, gbc.sp());
        EXPECT(0x9fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9fcd));
        // 42 01D2
        gbc.setState(0x4c1f, 0x5ae0, 0xcf80, 0x2d57, 0x951, 0x6236, 0x1, 0x1);
        gbc.writeMem(0x4c1f, { 0x42 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5ae0, gbc.sp());
        EXPECT(0x4c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01D3
        gbc.setState(0x3f57, 0xa84e, 0x2700, 0x2344, 0x4253, 0x2e78, 0x0, 0x1);
        gbc.writeMem(0x3f57, { 0x42 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa84e, gbc.sp());
        EXPECT(0x3f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01D4
        gbc.setState(0x3e01, 0x9b64, 0x3bd0, 0x3857, 0xa408, 0x2164, 0x1, 0x1);
        gbc.writeMem(0x3e01, { 0x42 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9b64, gbc.sp());
        EXPECT(0x3e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01D5
        gbc.setState(0x160c, 0xb5ba, 0xf120, 0xba31, 0x52bd, 0x9917, 0x0, 0x1);
        gbc.writeMem(0x160c, { 0x42 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb5ba, gbc.sp());
        EXPECT(0x160d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01D6
        gbc.setState(0x8218, 0xb87c, 0xe7e0, 0xc1d2, 0x97d1, 0xecb, 0x1, 0x1);
        gbc.writeMem(0x8218, { 0x42 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb87c, gbc.sp());
        EXPECT(0x8219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8218));
        // 42 01D7
        gbc.setState(0x325, 0xec74, 0xcb00, 0x93b2, 0x1162, 0x52b1, 0x1, 0x1);
        gbc.writeMem(0x325, { 0x42 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xec74, gbc.sp());
        EXPECT(0x326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01D9
        gbc.setState(0x3bed, 0x9150, 0x2db0, 0xa547, 0xc741, 0x5195, 0x1, 0x0);
        gbc.writeMem(0x3bed, { 0x42 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9150, gbc.sp());
        EXPECT(0x3bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01DA
        gbc.setState(0x5286, 0x348d, 0x4bb0, 0xb2cb, 0xb862, 0x5426, 0x0, 0x0);
        gbc.writeMem(0x5286, { 0x42 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x348d, gbc.sp());
        EXPECT(0x5287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01DB
        gbc.setState(0x5ea2, 0x7c24, 0x3470, 0x12a3, 0x4551, 0x96ee, 0x1, 0x1);
        gbc.writeMem(0x5ea2, { 0x42 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7c24, gbc.sp());
        EXPECT(0x5ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01DC
        gbc.setState(0x1be9, 0x3674, 0x1de0, 0x784a, 0xa049, 0x3c4c, 0x1, 0x0);
        gbc.writeMem(0x1be9, { 0x42 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3674, gbc.sp());
        EXPECT(0x1bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01DD
        gbc.setState(0x91a, 0x9d48, 0x2650, 0x305e, 0xf7bc, 0xb4ec, 0x1, 0x1);
        gbc.writeMem(0x91a, { 0x42 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9d48, gbc.sp());
        EXPECT(0x91b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01DE
        gbc.setState(0x93a8, 0x190b, 0x5eb0, 0x374f, 0xcb06, 0xff7d, 0x0, 0x1);
        gbc.writeMem(0x93a8, { 0x42 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x190b, gbc.sp());
        EXPECT(0x93a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x93a8));
        // 42 01DF
        gbc.setState(0xc118, 0x9d4c, 0xfa70, 0x8c7, 0x17d3, 0xae3a, 0x0, 0x0);
        gbc.writeMem(0xc118, { 0x42 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9d4c, gbc.sp());
        EXPECT(0xc119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc118));
        // 42 01E0
        gbc.setState(0x51d7, 0x4a74, 0x9ca0, 0x6612, 0x4b5a, 0x730a, 0x1, 0x1);
        gbc.writeMem(0x51d7, { 0x42 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4a74, gbc.sp());
        EXPECT(0x51d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01E1
        gbc.setState(0x3051, 0x77c3, 0xc490, 0x88d2, 0x33ee, 0x5077, 0x0, 0x1);
        gbc.writeMem(0x3051, { 0x42 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x77c3, gbc.sp());
        EXPECT(0x3052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01E2
        gbc.setState(0xb80f, 0xee8d, 0xd470, 0xc86b, 0xbf8f, 0xb81c, 0x0, 0x0);
        gbc.writeMem(0xb80f, { 0x42 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xee8d, gbc.sp());
        EXPECT(0xb810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb80f));
        // 42 01E3
        gbc.setState(0x9341, 0xa991, 0xa380, 0x8197, 0x4141, 0x26ec, 0x1, 0x1);
        gbc.writeMem(0x9341, { 0x42 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa991, gbc.sp());
        EXPECT(0x9342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9341));
        // 42 01E4
        gbc.setState(0x237b, 0xa9d0, 0x8f30, 0x84e0, 0x7a93, 0xcd0d, 0x1, 0x1);
        gbc.writeMem(0x237b, { 0x42 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa9d0, gbc.sp());
        EXPECT(0x237c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01E5
        gbc.setState(0xe555, 0x340e, 0x2f00, 0x10b0, 0x271a, 0x22bc, 0x1, 0x0);
        gbc.writeMem(0xe555, { 0x42 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x340e, gbc.sp());
        EXPECT(0xe556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe555));
        // 42 01E6
        gbc.setState(0xfac, 0xd422, 0x7100, 0x9adc, 0xb528, 0x625f, 0x0, 0x1);
        gbc.writeMem(0xfac, { 0x42 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd422, gbc.sp());
        EXPECT(0xfad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01E7
        gbc.setState(0x3573, 0x2974, 0x650, 0xf07d, 0xfbe9, 0xb152, 0x0, 0x1);
        gbc.writeMem(0x3573, { 0x42 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2974, gbc.sp());
        EXPECT(0x3574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01E8
        gbc.setState(0x8079, 0xf42, 0x5e80, 0x8030, 0x4192, 0xdcea, 0x0, 0x1);
        gbc.writeMem(0x8079, { 0x42 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf42, gbc.sp());
        EXPECT(0x807a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8079));
        // 42 01EA
        gbc.setState(0x1609, 0x94c2, 0x3980, 0x4fa2, 0xd8ce, 0x3341, 0x0, 0x1);
        gbc.writeMem(0x1609, { 0x42 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x94c2, gbc.sp());
        EXPECT(0x160a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01EB
        gbc.setState(0x74a, 0x1e94, 0xd420, 0xde83, 0x8d04, 0xd128, 0x1, 0x0);
        gbc.writeMem(0x74a, { 0x42 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1e94, gbc.sp());
        EXPECT(0x74b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01EC
        gbc.setState(0xd52f, 0x9581, 0x25a0, 0xcd3c, 0xd2f3, 0x1d13, 0x0, 0x1);
        gbc.writeMem(0xd52f, { 0x42 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9581, gbc.sp());
        EXPECT(0xd530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd52f));
        // 42 01ED
        gbc.setState(0x91d3, 0x44be, 0x5b70, 0x10fa, 0xf58e, 0xd292, 0x0, 0x0);
        gbc.writeMem(0x91d3, { 0x42 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x44be, gbc.sp());
        EXPECT(0x91d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x91d3));
        // 42 01EE
        gbc.setState(0xaea, 0x3c7, 0x6d00, 0xb895, 0x6845, 0xcdcc, 0x1, 0x1);
        gbc.writeMem(0xaea, { 0x42 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3c7, gbc.sp());
        EXPECT(0xaeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01EF
        gbc.setState(0x8082, 0xa85e, 0x8fb0, 0x2bb6, 0x39a8, 0xeb88, 0x1, 0x0);
        gbc.writeMem(0x8082, { 0x42 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa85e, gbc.sp());
        EXPECT(0x8083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8082));
        // 42 01F0
        gbc.setState(0x35fc, 0xf348, 0x8910, 0x3089, 0x43e8, 0x9d8f, 0x1, 0x1);
        gbc.writeMem(0x35fc, { 0x42 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf348, gbc.sp());
        EXPECT(0x35fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01F1
        gbc.setState(0x8fc8, 0xce14, 0x99a0, 0x6ab3, 0xc0b1, 0xe465, 0x0, 0x0);
        gbc.writeMem(0x8fc8, { 0x42 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xce14, gbc.sp());
        EXPECT(0x8fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8fc8));
        // 42 01F2
        gbc.setState(0x6e5a, 0x2af3, 0xcf10, 0x4b52, 0x2930, 0x71c8, 0x1, 0x0);
        gbc.writeMem(0x6e5a, { 0x42 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2af3, gbc.sp());
        EXPECT(0x6e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01F3
        gbc.setState(0x68ec, 0xba29, 0xfed0, 0xf95b, 0xbae7, 0x473e, 0x0, 0x1);
        gbc.writeMem(0x68ec, { 0x42 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xba29, gbc.sp());
        EXPECT(0x68ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01F4
        gbc.setState(0xd2e1, 0xd1a2, 0x1fa0, 0xf185, 0xbaad, 0x5aa4, 0x1, 0x1);
        gbc.writeMem(0xd2e1, { 0x42 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd1a2, gbc.sp());
        EXPECT(0xd2e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd2e1));
        // 42 01F5
        gbc.setState(0x93bf, 0xd2d5, 0x8230, 0xa558, 0x94c0, 0x18c7, 0x0, 0x1);
        gbc.writeMem(0x93bf, { 0x42 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd2d5, gbc.sp());
        EXPECT(0x93c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x93bf));
        // 42 01F6
        gbc.setState(0xc6ab, 0x2be0, 0xcc60, 0xa3e7, 0xed7b, 0x5be5, 0x0, 0x0);
        gbc.writeMem(0xc6ab, { 0x42 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2be0, gbc.sp());
        EXPECT(0xc6ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc6ab));
        // 42 01F7
        gbc.setState(0x1a27, 0x7e74, 0x6b10, 0x6e12, 0xfc59, 0x962, 0x1, 0x1);
        gbc.writeMem(0x1a27, { 0x42 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7e74, gbc.sp());
        EXPECT(0x1a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01F8
        gbc.setState(0x7b2d, 0x814f, 0xbae0, 0x2ce4, 0x9f0e, 0xb58e, 0x1, 0x1);
        gbc.writeMem(0x7b2d, { 0x42 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x814f, gbc.sp());
        EXPECT(0x7b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01F9
        gbc.setState(0xcda2, 0x1e42, 0x49c0, 0xf233, 0x6055, 0xe602, 0x0, 0x1);
        gbc.writeMem(0xcda2, { 0x42 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1e42, gbc.sp());
        EXPECT(0xcda3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcda2));
        // 42 01FA
        gbc.setState(0xedef, 0x8d53, 0xa290, 0xc8f1, 0x64d7, 0x1c1b, 0x0, 0x1);
        gbc.writeMem(0xedef, { 0x42 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8d53, gbc.sp());
        EXPECT(0xedf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xedef));
        // 42 01FB
        gbc.setState(0xd55a, 0x483c, 0xabf0, 0xb6f5, 0x3d3c, 0x2f1d, 0x1, 0x0);
        gbc.writeMem(0xd55a, { 0x42 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x483c, gbc.sp());
        EXPECT(0xd55b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd55a));
        // 42 01FC
        gbc.setState(0x1e28, 0x64a0, 0x580, 0xd915, 0x1d6a, 0x49e5, 0x0, 0x1);
        gbc.writeMem(0x1e28, { 0x42 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x64a0, gbc.sp());
        EXPECT(0x1e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 01FD
        gbc.setState(0x505f, 0x8e8, 0xd3b0, 0x1a2b, 0xfd1e, 0x2ecc, 0x1, 0x0);
        gbc.writeMem(0x505f, { 0x42 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8e8, gbc.sp());
        EXPECT(0x5060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 01FE
        gbc.setState(0xcbb2, 0x7a8d, 0x7120, 0xaf16, 0x245b, 0x38a5, 0x0, 0x0);
        gbc.writeMem(0xcbb2, { 0x42 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7a8d, gbc.sp());
        EXPECT(0xcbb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcbb2));
        // 42 01FF
        gbc.setState(0x7102, 0xe6f, 0xa7d0, 0x9f12, 0x6ea4, 0xe278, 0x0, 0x1);
        gbc.writeMem(0x7102, { 0x42 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe6f, gbc.sp());
        EXPECT(0x7103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0200
        gbc.setState(0x1268, 0x849b, 0xbee0, 0x4295, 0x939a, 0x3a37, 0x1, 0x0);
        gbc.writeMem(0x1268, { 0x42 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x849b, gbc.sp());
        EXPECT(0x1269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0201
        gbc.setState(0x30e9, 0x56d3, 0xe210, 0xa484, 0x3b0b, 0xf190, 0x0, 0x1);
        gbc.writeMem(0x30e9, { 0x42 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x56d3, gbc.sp());
        EXPECT(0x30ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0202
        gbc.setState(0x14ce, 0x827c, 0x1f0, 0x1e42, 0x801e, 0x9d9, 0x1, 0x0);
        gbc.writeMem(0x14ce, { 0x42 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x827c, gbc.sp());
        EXPECT(0x14cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0203
        gbc.setState(0xd14, 0x6164, 0xea0, 0xbcbd, 0x91f0, 0x6fd1, 0x1, 0x0);
        gbc.writeMem(0xd14, { 0x42 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6164, gbc.sp());
        EXPECT(0xd15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0204
        gbc.setState(0x40f0, 0x96e7, 0xdee0, 0x548, 0xb493, 0xcac6, 0x0, 0x1);
        gbc.writeMem(0x40f0, { 0x42 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x96e7, gbc.sp());
        EXPECT(0x40f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0205
        gbc.setState(0x9f4b, 0xd738, 0x82c0, 0x490f, 0x88fa, 0x8667, 0x1, 0x1);
        gbc.writeMem(0x9f4b, { 0x42 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd738, gbc.sp());
        EXPECT(0x9f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9f4b));
        // 42 0206
        gbc.setState(0xbab3, 0x35e, 0xe450, 0xf4db, 0xd28d, 0x79a1, 0x0, 0x0);
        gbc.writeMem(0xbab3, { 0x42 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x35e, gbc.sp());
        EXPECT(0xbab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbab3));
        // 42 0207
        gbc.setState(0x72c7, 0x5787, 0x9080, 0xf29c, 0xb4b6, 0x5e26, 0x1, 0x1);
        gbc.writeMem(0x72c7, { 0x42 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5787, gbc.sp());
        EXPECT(0x72c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0208
        gbc.setState(0x901e, 0x496e, 0xf070, 0x8baf, 0xd4a8, 0xbc4f, 0x1, 0x1);
        gbc.writeMem(0x901e, { 0x42 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x496e, gbc.sp());
        EXPECT(0x901f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x901e));
        // 42 0209
        gbc.setState(0x64f2, 0x3410, 0x24f0, 0xfff5, 0xda6a, 0xd063, 0x1, 0x0);
        gbc.writeMem(0x64f2, { 0x42 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3410, gbc.sp());
        EXPECT(0x64f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 020A
        gbc.setState(0xab16, 0x141a, 0x1f90, 0xf58f, 0x57d3, 0x64cd, 0x0, 0x0);
        gbc.writeMem(0xab16, { 0x42 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x141a, gbc.sp());
        EXPECT(0xab17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xab16));
        // 42 020B
        gbc.setState(0x2850, 0x654f, 0x2740, 0xe973, 0x5476, 0xbc56, 0x1, 0x0);
        gbc.writeMem(0x2850, { 0x42 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x654f, gbc.sp());
        EXPECT(0x2851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 020C
        gbc.setState(0x4df3, 0x617b, 0x3510, 0xa96, 0xbfe7, 0xbc9b, 0x0, 0x0);
        gbc.writeMem(0x4df3, { 0x42 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x617b, gbc.sp());
        EXPECT(0x4df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 020D
        gbc.setState(0x19e, 0xaab8, 0x9a40, 0x2294, 0xc6ee, 0xfa07, 0x0, 0x1);
        gbc.writeMem(0x19e, { 0x42 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xaab8, gbc.sp());
        EXPECT(0x19f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 020E
        gbc.setState(0x82e4, 0xb02e, 0x9ed0, 0x6624, 0x179, 0xb69c, 0x0, 0x1);
        gbc.writeMem(0x82e4, { 0x42 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb02e, gbc.sp());
        EXPECT(0x82e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x82e4));
        // 42 020F
        gbc.setState(0xe52a, 0x7915, 0xd950, 0x181f, 0xc5cd, 0xeb99, 0x0, 0x1);
        gbc.writeMem(0xe52a, { 0x42 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7915, gbc.sp());
        EXPECT(0xe52b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe52a));
        // 42 0210
        gbc.setState(0x9003, 0x2583, 0x8230, 0x79c3, 0x44b1, 0xfd82, 0x1, 0x1);
        gbc.writeMem(0x9003, { 0x42 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2583, gbc.sp());
        EXPECT(0x9004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9003));
        // 42 0211
        gbc.setState(0x4881, 0xafb1, 0x570, 0xa00, 0x1798, 0x9322, 0x1, 0x0);
        gbc.writeMem(0x4881, { 0x42 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xafb1, gbc.sp());
        EXPECT(0x4882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0212
        gbc.setState(0x9e69, 0xd69c, 0xa9a0, 0x3a8e, 0x15e8, 0x4557, 0x1, 0x0);
        gbc.writeMem(0x9e69, { 0x42 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd69c, gbc.sp());
        EXPECT(0x9e6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9e69));
        // 42 0213
        gbc.setState(0x800c, 0x11b9, 0xc7e0, 0x159d, 0xf40f, 0x5f96, 0x0, 0x1);
        gbc.writeMem(0x800c, { 0x42 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x11b9, gbc.sp());
        EXPECT(0x800d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x800c));
        // 42 0214
        gbc.setState(0x3102, 0xa22f, 0xb5e0, 0x9244, 0x8b18, 0x13a6, 0x1, 0x1);
        gbc.writeMem(0x3102, { 0x42 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa22f, gbc.sp());
        EXPECT(0x3103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0215
        gbc.setState(0x38d6, 0x86a2, 0xd3b0, 0xf4e3, 0x77f3, 0x7989, 0x1, 0x0);
        gbc.writeMem(0x38d6, { 0x42 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x86a2, gbc.sp());
        EXPECT(0x38d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0216
        gbc.setState(0x7a70, 0xe1c0, 0xc550, 0x357a, 0x57e1, 0x5795, 0x1, 0x1);
        gbc.writeMem(0x7a70, { 0x42 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe1c0, gbc.sp());
        EXPECT(0x7a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0217
        gbc.setState(0x2250, 0x4f6f, 0x7850, 0x3d7b, 0x64d7, 0x65a, 0x0, 0x1);
        gbc.writeMem(0x2250, { 0x42 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4f6f, gbc.sp());
        EXPECT(0x2251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0219
        gbc.setState(0xb54a, 0x1c08, 0xa5a0, 0x18dd, 0xd7a4, 0x516a, 0x1, 0x1);
        gbc.writeMem(0xb54a, { 0x42 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1c08, gbc.sp());
        EXPECT(0xb54b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb54a));
        // 42 021A
        gbc.setState(0xce8f, 0x90f4, 0x4090, 0x6acd, 0xb597, 0xde8f, 0x1, 0x0);
        gbc.writeMem(0xce8f, { 0x42 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x90f4, gbc.sp());
        EXPECT(0xce90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xce8f));
        // 42 021B
        gbc.setState(0x39f3, 0xe7b6, 0x1f20, 0x967d, 0x9c0f, 0xf59d, 0x1, 0x0);
        gbc.writeMem(0x39f3, { 0x42 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe7b6, gbc.sp());
        EXPECT(0x39f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 021C
        gbc.setState(0xbe02, 0xa4a9, 0x7480, 0x7559, 0x733e, 0x8977, 0x0, 0x0);
        gbc.writeMem(0xbe02, { 0x42 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa4a9, gbc.sp());
        EXPECT(0xbe03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbe02));
        // 42 021D
        gbc.setState(0x9ee4, 0xa52e, 0x770, 0xdf4a, 0xed9f, 0x9514, 0x1, 0x1);
        gbc.writeMem(0x9ee4, { 0x42 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa52e, gbc.sp());
        EXPECT(0x9ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9ee4));
        // 42 021F
        gbc.setState(0x607, 0xfdd8, 0x6ec0, 0xfcf7, 0xc612, 0xe937, 0x1, 0x1);
        gbc.writeMem(0x607, { 0x42 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfdd8, gbc.sp());
        EXPECT(0x608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0220
        gbc.setState(0x85e0, 0x935d, 0x8ad0, 0x27d0, 0xedae, 0xac50, 0x1, 0x0);
        gbc.writeMem(0x85e0, { 0x42 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x935d, gbc.sp());
        EXPECT(0x85e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x85e0));
        // 42 0222
        gbc.setState(0x500, 0x4773, 0xf200, 0x396e, 0x2c24, 0x4bb6, 0x0, 0x0);
        gbc.writeMem(0x500, { 0x42 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4773, gbc.sp());
        EXPECT(0x501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0223
        gbc.setState(0xd5cb, 0x4b8, 0xbd0, 0xb55a, 0xf04, 0x87f2, 0x1, 0x1);
        gbc.writeMem(0xd5cb, { 0x42 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4b8, gbc.sp());
        EXPECT(0xd5cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd5cb));
        // 42 0224
        gbc.setState(0xc33e, 0xcab1, 0xa090, 0x3605, 0x9ebe, 0xbad1, 0x0, 0x1);
        gbc.writeMem(0xc33e, { 0x42 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcab1, gbc.sp());
        EXPECT(0xc33f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc33e));
        // 42 0225
        gbc.setState(0x8f99, 0xd4b6, 0x5530, 0xee8a, 0xdb51, 0xe578, 0x0, 0x1);
        gbc.writeMem(0x8f99, { 0x42 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd4b6, gbc.sp());
        EXPECT(0x8f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8f99));
        // 42 0226
        gbc.setState(0xe702, 0x2a3f, 0xd460, 0x913e, 0x5d09, 0xeabf, 0x1, 0x1);
        gbc.writeMem(0xe702, { 0x42 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2a3f, gbc.sp());
        EXPECT(0xe703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe702));
        // 42 0227
        gbc.setState(0x23b2, 0xc3ea, 0x6510, 0xdfc9, 0x60dc, 0x6cb8, 0x1, 0x1);
        gbc.writeMem(0x23b2, { 0x42 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc3ea, gbc.sp());
        EXPECT(0x23b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0228
        gbc.setState(0x3090, 0xff81, 0x1f60, 0x30a3, 0xfdfa, 0xd99f, 0x0, 0x0);
        gbc.writeMem(0x3090, { 0x42 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xff81, gbc.sp());
        EXPECT(0x3091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0229
        gbc.setState(0x3d3c, 0x1f8b, 0x330, 0x293d, 0x719d, 0x33be, 0x0, 0x1);
        gbc.writeMem(0x3d3c, { 0x42 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1f8b, gbc.sp());
        EXPECT(0x3d3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 022B
        gbc.setState(0xb769, 0x6dc5, 0xf40, 0x48db, 0xfcd8, 0x284f, 0x0, 0x1);
        gbc.writeMem(0xb769, { 0x42 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6dc5, gbc.sp());
        EXPECT(0xb76a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb769));
        // 42 022C
        gbc.setState(0xb172, 0x39d4, 0x98c0, 0x1cc3, 0x3ca9, 0x9f92, 0x0, 0x1);
        gbc.writeMem(0xb172, { 0x42 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x39d4, gbc.sp());
        EXPECT(0xb173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb172));
        // 42 022E
        gbc.setState(0x4edf, 0xe3eb, 0xbea0, 0x4f6b, 0x90ba, 0xd8f2, 0x0, 0x1);
        gbc.writeMem(0x4edf, { 0x42 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe3eb, gbc.sp());
        EXPECT(0x4ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 022F
        gbc.setState(0x5bad, 0x3a62, 0xc9e0, 0x5356, 0x6464, 0x7434, 0x0, 0x1);
        gbc.writeMem(0x5bad, { 0x42 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3a62, gbc.sp());
        EXPECT(0x5bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0230
        gbc.setState(0x97c6, 0x46d4, 0x7470, 0xf9b8, 0xc039, 0x6acd, 0x1, 0x1);
        gbc.writeMem(0x97c6, { 0x42 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x46d4, gbc.sp());
        EXPECT(0x97c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x97c6));
        // 42 0231
        gbc.setState(0xe5a5, 0xd47a, 0x2a0, 0x4550, 0x402b, 0xe09, 0x1, 0x1);
        gbc.writeMem(0xe5a5, { 0x42 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd47a, gbc.sp());
        EXPECT(0xe5a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe5a5));
        // 42 0232
        gbc.setState(0xaffe, 0xbaf8, 0x660, 0x5dbf, 0x170b, 0xeffb, 0x0, 0x1);
        gbc.writeMem(0xaffe, { 0x42 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbaf8, gbc.sp());
        EXPECT(0xafff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xaffe));
        // 42 0233
        gbc.setState(0x1d6e, 0x122c, 0x6660, 0x24e7, 0x6823, 0xa85f, 0x0, 0x0);
        gbc.writeMem(0x1d6e, { 0x42 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x122c, gbc.sp());
        EXPECT(0x1d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0234
        gbc.setState(0xee31, 0x690, 0xdbd0, 0x1f42, 0xcd2e, 0x55c0, 0x1, 0x1);
        gbc.writeMem(0xee31, { 0x42 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x690, gbc.sp());
        EXPECT(0xee32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xee31));
        // 42 0235
        gbc.setState(0xccef, 0xe671, 0xa6b0, 0x7e5e, 0x8d9c, 0xf4a9, 0x1, 0x0);
        gbc.writeMem(0xccef, { 0x42 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe671, gbc.sp());
        EXPECT(0xccf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xccef));
        // 42 0236
        gbc.setState(0x1c57, 0x2932, 0xfa50, 0xb55e, 0xf624, 0x86e4, 0x0, 0x1);
        gbc.writeMem(0x1c57, { 0x42 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2932, gbc.sp());
        EXPECT(0x1c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0237
        gbc.setState(0x16f5, 0x6792, 0x52f0, 0x6c25, 0xd3f1, 0x73fa, 0x0, 0x0);
        gbc.writeMem(0x16f5, { 0x42 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6792, gbc.sp());
        EXPECT(0x16f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0238
        gbc.setState(0x94dc, 0xe727, 0xeaa0, 0x5194, 0x8811, 0xf2f1, 0x1, 0x1);
        gbc.writeMem(0x94dc, { 0x42 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe727, gbc.sp());
        EXPECT(0x94dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x94dc));
        // 42 0239
        gbc.setState(0x94d9, 0xe8c, 0xfac0, 0xa152, 0xa4a, 0x1c97, 0x0, 0x1);
        gbc.writeMem(0x94d9, { 0x42 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe8c, gbc.sp());
        EXPECT(0x94da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x94d9));
        // 42 023A
        gbc.setState(0x210c, 0x1528, 0xe9a0, 0x8074, 0x9474, 0xefec, 0x1, 0x0);
        gbc.writeMem(0x210c, { 0x42 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1528, gbc.sp());
        EXPECT(0x210d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 023B
        gbc.setState(0xddac, 0xee7, 0x1ea0, 0x72d8, 0x9179, 0xefc4, 0x0, 0x1);
        gbc.writeMem(0xddac, { 0x42 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xee7, gbc.sp());
        EXPECT(0xddad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xddac));
        // 42 023C
        gbc.setState(0x5914, 0xc4fb, 0xe260, 0x9f35, 0xc1fd, 0x34aa, 0x0, 0x0);
        gbc.writeMem(0x5914, { 0x42 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc4fb, gbc.sp());
        EXPECT(0x5915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 023D
        gbc.setState(0x174d, 0xa20d, 0xe5b0, 0x343b, 0x5245, 0xb7f8, 0x0, 0x0);
        gbc.writeMem(0x174d, { 0x42 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa20d, gbc.sp());
        EXPECT(0x174e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 023E
        gbc.setState(0xada6, 0x714f, 0x9e50, 0x28e4, 0x85c1, 0x84cd, 0x0, 0x0);
        gbc.writeMem(0xada6, { 0x42 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x714f, gbc.sp());
        EXPECT(0xada7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xada6));
        // 42 023F
        gbc.setState(0xdd1, 0xe900, 0x8140, 0x9e22, 0x124, 0xa847, 0x1, 0x1);
        gbc.writeMem(0xdd1, { 0x42 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe900, gbc.sp());
        EXPECT(0xdd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0240
        gbc.setState(0xd6c3, 0x74f2, 0x5480, 0x35c9, 0xa63, 0x8ac, 0x0, 0x0);
        gbc.writeMem(0xd6c3, { 0x42 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x74f2, gbc.sp());
        EXPECT(0xd6c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd6c3));
        // 42 0241
        gbc.setState(0x338f, 0x7458, 0xb200, 0x1c35, 0xd713, 0xb855, 0x1, 0x0);
        gbc.writeMem(0x338f, { 0x42 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7458, gbc.sp());
        EXPECT(0x3390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0242
        gbc.setState(0x994e, 0x39ea, 0x8060, 0x48ef, 0x2387, 0x32d, 0x0, 0x1);
        gbc.writeMem(0x994e, { 0x42 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x39ea, gbc.sp());
        EXPECT(0x994f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x994e));
        // 42 0243
        gbc.setState(0xa9d8, 0x22fb, 0x98c0, 0xcf68, 0x1e83, 0x6372, 0x0, 0x1);
        gbc.writeMem(0xa9d8, { 0x42 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x22fb, gbc.sp());
        EXPECT(0xa9d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa9d8));
        // 42 0244
        gbc.setState(0x3948, 0x167, 0xed50, 0xa7a, 0x231, 0xe370, 0x0, 0x1);
        gbc.writeMem(0x3948, { 0x42 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x167, gbc.sp());
        EXPECT(0x3949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0245
        gbc.setState(0xc936, 0x4eb0, 0x1f80, 0x7fe8, 0x65f2, 0xb7b6, 0x0, 0x0);
        gbc.writeMem(0xc936, { 0x42 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4eb0, gbc.sp());
        EXPECT(0xc937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc936));
        // 42 0246
        gbc.setState(0x69f3, 0x333a, 0xa260, 0xbd2, 0x82cb, 0x565f, 0x0, 0x0);
        gbc.writeMem(0x69f3, { 0x42 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x333a, gbc.sp());
        EXPECT(0x69f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0247
        gbc.setState(0x562f, 0x28e1, 0x8f90, 0x59e8, 0x1443, 0xf29c, 0x1, 0x0);
        gbc.writeMem(0x562f, { 0x42 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x28e1, gbc.sp());
        EXPECT(0x5630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0248
        gbc.setState(0x6b7b, 0xa8f8, 0x40e0, 0x3261, 0x3357, 0x639a, 0x0, 0x1);
        gbc.writeMem(0x6b7b, { 0x42 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa8f8, gbc.sp());
        EXPECT(0x6b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0249
        gbc.setState(0x79da, 0x557, 0xece0, 0x9ce4, 0x668, 0xabf8, 0x1, 0x1);
        gbc.writeMem(0x79da, { 0x42 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x557, gbc.sp());
        EXPECT(0x79db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 024B
        gbc.setState(0x60f1, 0xe2b7, 0xeb0, 0xf561, 0xb1d4, 0x8f66, 0x1, 0x1);
        gbc.writeMem(0x60f1, { 0x42 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe2b7, gbc.sp());
        EXPECT(0x60f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 024C
        gbc.setState(0x231d, 0x1876, 0xd760, 0x7ffc, 0xb2bc, 0x31d6, 0x0, 0x0);
        gbc.writeMem(0x231d, { 0x42 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1876, gbc.sp());
        EXPECT(0x231e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 024D
        gbc.setState(0x632f, 0x979c, 0xad70, 0x6d3e, 0x8252, 0x8582, 0x0, 0x0);
        gbc.writeMem(0x632f, { 0x42 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x979c, gbc.sp());
        EXPECT(0x6330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 024E
        gbc.setState(0xd373, 0x2c4c, 0xe950, 0x1768, 0x72c1, 0xe448, 0x0, 0x1);
        gbc.writeMem(0xd373, { 0x42 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2c4c, gbc.sp());
        EXPECT(0xd374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd373));
        // 42 024F
        gbc.setState(0x9a45, 0x1f74, 0xed0, 0xc779, 0xf79d, 0x713f, 0x1, 0x0);
        gbc.writeMem(0x9a45, { 0x42 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1f74, gbc.sp());
        EXPECT(0x9a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9a45));
        // 42 0250
        gbc.setState(0x5c7b, 0xd88e, 0x5d30, 0xe15f, 0x7ded, 0x6584, 0x1, 0x1);
        gbc.writeMem(0x5c7b, { 0x42 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd88e, gbc.sp());
        EXPECT(0x5c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0251
        gbc.setState(0xd514, 0xf4f0, 0xf040, 0xe179, 0x476c, 0x29, 0x1, 0x1);
        gbc.writeMem(0xd514, { 0x42 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf4f0, gbc.sp());
        EXPECT(0xd515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd514));
        // 42 0252
        gbc.setState(0x5f07, 0x896e, 0xbc90, 0xd41b, 0xf16b, 0xe6e3, 0x1, 0x1);
        gbc.writeMem(0x5f07, { 0x42 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x896e, gbc.sp());
        EXPECT(0x5f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0253
        gbc.setState(0x90ab, 0xc863, 0x8ff0, 0xbf25, 0x59b5, 0x950e, 0x0, 0x1);
        gbc.writeMem(0x90ab, { 0x42 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc863, gbc.sp());
        EXPECT(0x90ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x90ab));
        // 42 0254
        gbc.setState(0xc4a0, 0x97e7, 0x8b80, 0x2edb, 0x8609, 0x7fae, 0x1, 0x1);
        gbc.writeMem(0xc4a0, { 0x42 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x97e7, gbc.sp());
        EXPECT(0xc4a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc4a0));
        // 42 0255
        gbc.setState(0xdc0f, 0x81e8, 0xbc00, 0xdb78, 0x6e8e, 0xdd59, 0x0, 0x1);
        gbc.writeMem(0xdc0f, { 0x42 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x81e8, gbc.sp());
        EXPECT(0xdc10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdc0f));
        // 42 0256
        gbc.setState(0x40e3, 0x99e1, 0x5630, 0x5258, 0x7a37, 0xb582, 0x1, 0x1);
        gbc.writeMem(0x40e3, { 0x42 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x99e1, gbc.sp());
        EXPECT(0x40e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0257
        gbc.setState(0x9801, 0x607b, 0xdbf0, 0x7f3b, 0x9146, 0x37a3, 0x0, 0x1);
        gbc.writeMem(0x9801, { 0x42 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x607b, gbc.sp());
        EXPECT(0x9802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9801));
        // 42 0258
        gbc.setState(0x3001, 0xcbb1, 0x5fc0, 0xe420, 0x13a9, 0xcecc, 0x1, 0x0);
        gbc.writeMem(0x3001, { 0x42 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcbb1, gbc.sp());
        EXPECT(0x3002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0259
        gbc.setState(0x3be, 0x6, 0xb4a0, 0x328d, 0x9506, 0xd059, 0x1, 0x0);
        gbc.writeMem(0x3be, { 0x42 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6, gbc.sp());
        EXPECT(0x3bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 025A
        gbc.setState(0x7af0, 0x2d64, 0x7960, 0x4e48, 0x56c5, 0x74d8, 0x0, 0x1);
        gbc.writeMem(0x7af0, { 0x42 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2d64, gbc.sp());
        EXPECT(0x7af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 025B
        gbc.setState(0x7cbd, 0x3919, 0xd330, 0xbfe1, 0x976e, 0x2a0a, 0x0, 0x0);
        gbc.writeMem(0x7cbd, { 0x42 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3919, gbc.sp());
        EXPECT(0x7cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 025C
        gbc.setState(0xcf7a, 0x6b, 0xea00, 0x39a5, 0x760, 0x2f15, 0x0, 0x1);
        gbc.writeMem(0xcf7a, { 0x42 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6b, gbc.sp());
        EXPECT(0xcf7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcf7a));
        // 42 025D
        gbc.setState(0x8487, 0x96e8, 0x81c0, 0x328f, 0x33fe, 0x8fcf, 0x0, 0x1);
        gbc.writeMem(0x8487, { 0x42 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x96e8, gbc.sp());
        EXPECT(0x8488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8487));
        // 42 025E
        gbc.setState(0x9cc4, 0x86c5, 0x180, 0x463, 0xe451, 0xb182, 0x1, 0x1);
        gbc.writeMem(0x9cc4, { 0x42 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x86c5, gbc.sp());
        EXPECT(0x9cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9cc4));
        // 42 025F
        gbc.setState(0xb4a3, 0x5d5a, 0x8380, 0x5369, 0x44b1, 0x28e4, 0x0, 0x0);
        gbc.writeMem(0xb4a3, { 0x42 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5d5a, gbc.sp());
        EXPECT(0xb4a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb4a3));
        // 42 0260
        gbc.setState(0xe23e, 0xd45e, 0x47d0, 0xc6d3, 0x9ebc, 0xde4e, 0x0, 0x1);
        gbc.writeMem(0xe23e, { 0x42 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd45e, gbc.sp());
        EXPECT(0xe23f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe23e));
        // 42 0261
        gbc.setState(0xa8be, 0xf5a1, 0xfe00, 0x97ab, 0x24c0, 0x951f, 0x1, 0x0);
        gbc.writeMem(0xa8be, { 0x42 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf5a1, gbc.sp());
        EXPECT(0xa8bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa8be));
        // 42 0262
        gbc.setState(0x31fd, 0x3310, 0x34f0, 0x8e28, 0xead2, 0xcf7a, 0x0, 0x0);
        gbc.writeMem(0x31fd, { 0x42 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3310, gbc.sp());
        EXPECT(0x31fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0263
        gbc.setState(0x9393, 0x5229, 0xbe30, 0xe8be, 0xa219, 0x5b97, 0x0, 0x0);
        gbc.writeMem(0x9393, { 0x42 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5229, gbc.sp());
        EXPECT(0x9394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9393));
        // 42 0264
        gbc.setState(0x10f, 0x15d3, 0xe2c0, 0x1307, 0xceeb, 0xb952, 0x0, 0x1);
        gbc.writeMem(0x10f, { 0x42 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x15d3, gbc.sp());
        EXPECT(0x110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0265
        gbc.setState(0xefe8, 0x52ac, 0x7c00, 0x189a, 0x6a9d, 0x652f, 0x1, 0x0);
        gbc.writeMem(0xefe8, { 0x42 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x52ac, gbc.sp());
        EXPECT(0xefe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xefe8));
        // 42 0266
        gbc.setState(0x9182, 0x19a3, 0x5a20, 0xd1aa, 0x171b, 0xf10d, 0x1, 0x0);
        gbc.writeMem(0x9182, { 0x42 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x19a3, gbc.sp());
        EXPECT(0x9183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9182));
        // 42 0267
        gbc.setState(0x3d79, 0x3f2f, 0x5470, 0xa7d9, 0x30a, 0xaa02, 0x0, 0x1);
        gbc.writeMem(0x3d79, { 0x42 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3f2f, gbc.sp());
        EXPECT(0x3d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0268
        gbc.setState(0xe808, 0x6e5, 0x3ee0, 0xa5f1, 0x8f42, 0x937f, 0x0, 0x0);
        gbc.writeMem(0xe808, { 0x42 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6e5, gbc.sp());
        EXPECT(0xe809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe808));
        // 42 0269
        gbc.setState(0x7bd9, 0xf695, 0x1fb0, 0xa481, 0x9bea, 0x7e72, 0x0, 0x1);
        gbc.writeMem(0x7bd9, { 0x42 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf695, gbc.sp());
        EXPECT(0x7bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 026A
        gbc.setState(0xc3de, 0xfce5, 0xc310, 0x492a, 0x33ad, 0x6eb1, 0x0, 0x0);
        gbc.writeMem(0xc3de, { 0x42 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfce5, gbc.sp());
        EXPECT(0xc3df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc3de));
        // 42 026B
        gbc.setState(0xd935, 0xc50b, 0x63c0, 0xcbee, 0xabbb, 0xe795, 0x1, 0x0);
        gbc.writeMem(0xd935, { 0x42 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc50b, gbc.sp());
        EXPECT(0xd936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd935));
        // 42 026C
        gbc.setState(0x1ded, 0xa710, 0x1620, 0xc6f7, 0xea6, 0xa832, 0x0, 0x0);
        gbc.writeMem(0x1ded, { 0x42 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa710, gbc.sp());
        EXPECT(0x1dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 026D
        gbc.setState(0x3afa, 0xff52, 0x8760, 0xc1ea, 0x8fa5, 0x4cd0, 0x0, 0x1);
        gbc.writeMem(0x3afa, { 0x42 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xff52, gbc.sp());
        EXPECT(0x3afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 026E
        gbc.setState(0xd69d, 0x5c61, 0xbf60, 0x54c3, 0x58ca, 0xf89f, 0x1, 0x1);
        gbc.writeMem(0xd69d, { 0x42 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5c61, gbc.sp());
        EXPECT(0xd69e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd69d));
        // 42 026F
        gbc.setState(0x802e, 0xfbe, 0x5d40, 0xfafe, 0x15da, 0xdf2b, 0x0, 0x1);
        gbc.writeMem(0x802e, { 0x42 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfbe, gbc.sp());
        EXPECT(0x802f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x802e));
        // 42 0270
        gbc.setState(0xd760, 0x99c4, 0xb650, 0x4f0d, 0x3140, 0xf2a8, 0x1, 0x1);
        gbc.writeMem(0xd760, { 0x42 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x99c4, gbc.sp());
        EXPECT(0xd761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd760));
        // 42 0271
        gbc.setState(0x535e, 0x51c8, 0xb170, 0x9e82, 0xee81, 0x7c46, 0x1, 0x1);
        gbc.writeMem(0x535e, { 0x42 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x51c8, gbc.sp());
        EXPECT(0x535f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0272
        gbc.setState(0x5d09, 0xd7e8, 0xbce0, 0x135f, 0x2f88, 0x538, 0x1, 0x1);
        gbc.writeMem(0x5d09, { 0x42 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd7e8, gbc.sp());
        EXPECT(0x5d0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0273
        gbc.setState(0xbe6b, 0x89fd, 0x71d0, 0x3812, 0xb765, 0xd9ea, 0x0, 0x0);
        gbc.writeMem(0xbe6b, { 0x42 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x89fd, gbc.sp());
        EXPECT(0xbe6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbe6b));
        // 42 0274
        gbc.setState(0x2be3, 0x318d, 0x5d50, 0xfc15, 0xf055, 0x8d5f, 0x1, 0x0);
        gbc.writeMem(0x2be3, { 0x42 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x318d, gbc.sp());
        EXPECT(0x2be4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0275
        gbc.setState(0x9a7b, 0x7ef4, 0x8b50, 0xc52, 0x1c28, 0x1f1b, 0x0, 0x0);
        gbc.writeMem(0x9a7b, { 0x42 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7ef4, gbc.sp());
        EXPECT(0x9a7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9a7b));
        // 42 0276
        gbc.setState(0xa76f, 0x6b97, 0xb630, 0x780a, 0x5c24, 0x9e57, 0x0, 0x1);
        gbc.writeMem(0xa76f, { 0x42 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6b97, gbc.sp());
        EXPECT(0xa770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa76f));
        // 42 0277
        gbc.setState(0x8819, 0xb718, 0xa1e0, 0xa164, 0x58a6, 0x40f3, 0x1, 0x0);
        gbc.writeMem(0x8819, { 0x42 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb718, gbc.sp());
        EXPECT(0x881a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8819));
        // 42 0278
        gbc.setState(0x6da4, 0xb1d3, 0x2cd0, 0xe12f, 0x77cf, 0xb96e, 0x0, 0x0);
        gbc.writeMem(0x6da4, { 0x42 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb1d3, gbc.sp());
        EXPECT(0x6da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0279
        gbc.setState(0x683f, 0xd3a4, 0x6cf0, 0xe0f, 0x8c42, 0xd1d7, 0x1, 0x0);
        gbc.writeMem(0x683f, { 0x42 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd3a4, gbc.sp());
        EXPECT(0x6840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 027B
        gbc.setState(0x4cee, 0xdf1c, 0x110, 0x747, 0x6127, 0xba8d, 0x1, 0x1);
        gbc.writeMem(0x4cee, { 0x42 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdf1c, gbc.sp());
        EXPECT(0x4cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 027C
        gbc.setState(0xd681, 0xbf7c, 0x21c0, 0x11de, 0x4632, 0xf324, 0x1, 0x1);
        gbc.writeMem(0xd681, { 0x42 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbf7c, gbc.sp());
        EXPECT(0xd682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd681));
        // 42 027E
        gbc.setState(0xb8e1, 0xbabc, 0xd150, 0x9d1d, 0x63e7, 0x151f, 0x1, 0x0);
        gbc.writeMem(0xb8e1, { 0x42 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbabc, gbc.sp());
        EXPECT(0xb8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb8e1));
        // 42 027F
        gbc.setState(0x35ac, 0x7b88, 0xc50, 0x2e07, 0xb8c9, 0xbfd1, 0x0, 0x1);
        gbc.writeMem(0x35ac, { 0x42 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7b88, gbc.sp());
        EXPECT(0x35ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0280
        gbc.setState(0x8dbd, 0x41d6, 0x97a0, 0xbeac, 0x54a0, 0xce29, 0x1, 0x0);
        gbc.writeMem(0x8dbd, { 0x42 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x41d6, gbc.sp());
        EXPECT(0x8dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8dbd));
        // 42 0281
        gbc.setState(0x7e77, 0x5511, 0xd300, 0x20cc, 0x884f, 0x22f6, 0x0, 0x1);
        gbc.writeMem(0x7e77, { 0x42 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5511, gbc.sp());
        EXPECT(0x7e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0282
        gbc.setState(0xfb3, 0xc1d9, 0xe340, 0xae76, 0xa9c1, 0x9535, 0x0, 0x0);
        gbc.writeMem(0xfb3, { 0x42 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc1d9, gbc.sp());
        EXPECT(0xfb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0283
        gbc.setState(0xfb9, 0x7c62, 0x6070, 0x4b93, 0x1edf, 0xb69e, 0x1, 0x0);
        gbc.writeMem(0xfb9, { 0x42 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7c62, gbc.sp());
        EXPECT(0xfba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0284
        gbc.setState(0xaea4, 0x8709, 0x7dd0, 0x9c84, 0xd81f, 0xe785, 0x1, 0x1);
        gbc.writeMem(0xaea4, { 0x42 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8709, gbc.sp());
        EXPECT(0xaea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xaea4));
        // 42 0285
        gbc.setState(0xc532, 0xa390, 0x4c90, 0xa027, 0xae01, 0x4892, 0x0, 0x0);
        gbc.writeMem(0xc532, { 0x42 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa390, gbc.sp());
        EXPECT(0xc533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc532));
        // 42 0286
        gbc.setState(0xaaea, 0xb2bc, 0x83b0, 0x17db, 0xfd8d, 0xe142, 0x1, 0x1);
        gbc.writeMem(0xaaea, { 0x42 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb2bc, gbc.sp());
        EXPECT(0xaaeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xaaea));
        // 42 0287
        gbc.setState(0xbb88, 0x420e, 0xffd0, 0x14c2, 0x6611, 0xfe75, 0x0, 0x1);
        gbc.writeMem(0xbb88, { 0x42 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x420e, gbc.sp());
        EXPECT(0xbb89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbb88));
        // 42 0288
        gbc.setState(0x4221, 0x5ff7, 0x3f50, 0x1a44, 0x491f, 0x1f97, 0x0, 0x1);
        gbc.writeMem(0x4221, { 0x42 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5ff7, gbc.sp());
        EXPECT(0x4222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0289
        gbc.setState(0x27bc, 0x59ae, 0x8780, 0x2c07, 0x1d3c, 0x9fb9, 0x0, 0x0);
        gbc.writeMem(0x27bc, { 0x42 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x59ae, gbc.sp());
        EXPECT(0x27bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 028A
        gbc.setState(0x1b19, 0x66c8, 0x5320, 0xc074, 0x9073, 0xaedc, 0x0, 0x1);
        gbc.writeMem(0x1b19, { 0x42 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x66c8, gbc.sp());
        EXPECT(0x1b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 028B
        gbc.setState(0x7401, 0xc963, 0xf3f0, 0x6f36, 0x953d, 0x5b9e, 0x0, 0x0);
        gbc.writeMem(0x7401, { 0x42 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc963, gbc.sp());
        EXPECT(0x7402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 028C
        gbc.setState(0xaae9, 0x39f7, 0x400, 0x564d, 0x8540, 0xfa12, 0x0, 0x1);
        gbc.writeMem(0xaae9, { 0x42 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x39f7, gbc.sp());
        EXPECT(0xaaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xaae9));
        // 42 028D
        gbc.setState(0x941e, 0x4e8a, 0x41c0, 0xd4a8, 0xa57c, 0x7bcf, 0x1, 0x0);
        gbc.writeMem(0x941e, { 0x42 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4e8a, gbc.sp());
        EXPECT(0x941f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x941e));
        // 42 028E
        gbc.setState(0x8644, 0x5fc6, 0xaf50, 0x3728, 0x8cde, 0xc97, 0x1, 0x1);
        gbc.writeMem(0x8644, { 0x42 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5fc6, gbc.sp());
        EXPECT(0x8645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8644));
        // 42 028F
        gbc.setState(0x7cbd, 0x9f0a, 0x8220, 0x304, 0xe89, 0x1d86, 0x0, 0x1);
        gbc.writeMem(0x7cbd, { 0x42 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9f0a, gbc.sp());
        EXPECT(0x7cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0291
        gbc.setState(0xda63, 0xa2dd, 0xd390, 0x9248, 0x97c3, 0xcf13, 0x1, 0x1);
        gbc.writeMem(0xda63, { 0x42 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa2dd, gbc.sp());
        EXPECT(0xda64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xda63));
        // 42 0292
        gbc.setState(0xadcf, 0x96, 0xebc0, 0x1640, 0x7e37, 0x5602, 0x0, 0x0);
        gbc.writeMem(0xadcf, { 0x42 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x96, gbc.sp());
        EXPECT(0xadd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xadcf));
        // 42 0293
        gbc.setState(0x688e, 0xc562, 0x3960, 0xd222, 0x474, 0xf5cf, 0x0, 0x1);
        gbc.writeMem(0x688e, { 0x42 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc562, gbc.sp());
        EXPECT(0x688f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0294
        gbc.setState(0x317e, 0xb63e, 0xe5d0, 0x36e0, 0x6733, 0x226e, 0x1, 0x0);
        gbc.writeMem(0x317e, { 0x42 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb63e, gbc.sp());
        EXPECT(0x317f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0295
        gbc.setState(0x2a8, 0x21af, 0x5d30, 0x2d95, 0xb24b, 0x65d, 0x0, 0x0);
        gbc.writeMem(0x2a8, { 0x42 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x21af, gbc.sp());
        EXPECT(0x2a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0296
        gbc.setState(0x491e, 0xc1fc, 0xa440, 0xdcdb, 0xd4cc, 0xfda1, 0x1, 0x1);
        gbc.writeMem(0x491e, { 0x42 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc1fc, gbc.sp());
        EXPECT(0x491f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0297
        gbc.setState(0x4118, 0x9a88, 0x5ce0, 0xbe2a, 0x5379, 0x61cb, 0x1, 0x1);
        gbc.writeMem(0x4118, { 0x42 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9a88, gbc.sp());
        EXPECT(0x4119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0298
        gbc.setState(0x9cde, 0xe042, 0xff30, 0xfbea, 0xd078, 0x563b, 0x0, 0x1);
        gbc.writeMem(0x9cde, { 0x42 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe042, gbc.sp());
        EXPECT(0x9cdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9cde));
        // 42 0299
        gbc.setState(0xca2e, 0x6a34, 0xbbc0, 0x6d39, 0x667a, 0x1efb, 0x1, 0x1);
        gbc.writeMem(0xca2e, { 0x42 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6a34, gbc.sp());
        EXPECT(0xca2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xca2e));
        // 42 029A
        gbc.setState(0x5b53, 0xc7e4, 0xa3a0, 0x694f, 0x13a5, 0xb452, 0x0, 0x0);
        gbc.writeMem(0x5b53, { 0x42 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc7e4, gbc.sp());
        EXPECT(0x5b54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 029B
        gbc.setState(0xeb7c, 0xa204, 0x9280, 0xb9c3, 0xda25, 0x1276, 0x1, 0x0);
        gbc.writeMem(0xeb7c, { 0x42 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa204, gbc.sp());
        EXPECT(0xeb7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xeb7c));
        // 42 029C
        gbc.setState(0xe0c7, 0x7eca, 0x50d0, 0xb245, 0xb588, 0xc696, 0x1, 0x0);
        gbc.writeMem(0xe0c7, { 0x42 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7eca, gbc.sp());
        EXPECT(0xe0c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe0c7));
        // 42 029D
        gbc.setState(0x94dd, 0x946c, 0x6010, 0xedfd, 0x37f0, 0x7b3b, 0x1, 0x1);
        gbc.writeMem(0x94dd, { 0x42 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x946c, gbc.sp());
        EXPECT(0x94de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x94dd));
        // 42 029E
        gbc.setState(0x221a, 0x465b, 0xa5a0, 0xea6b, 0x25f, 0x7636, 0x0, 0x0);
        gbc.writeMem(0x221a, { 0x42 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x465b, gbc.sp());
        EXPECT(0x221b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 029F
        gbc.setState(0xd337, 0xea8b, 0x7480, 0x7464, 0x661c, 0x998, 0x1, 0x1);
        gbc.writeMem(0xd337, { 0x42 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xea8b, gbc.sp());
        EXPECT(0xd338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd337));
        // 42 02A0
        gbc.setState(0x99b9, 0xec54, 0xeae0, 0xe783, 0x27d9, 0xa8fd, 0x1, 0x0);
        gbc.writeMem(0x99b9, { 0x42 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xec54, gbc.sp());
        EXPECT(0x99ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x99b9));
        // 42 02A2
        gbc.setState(0x402d, 0xc13b, 0xcc30, 0x87c9, 0x63e8, 0xf61d, 0x1, 0x1);
        gbc.writeMem(0x402d, { 0x42 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc13b, gbc.sp());
        EXPECT(0x402e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02A3
        gbc.setState(0x2c2f, 0xbd27, 0xcb40, 0xab13, 0xff97, 0xab30, 0x0, 0x1);
        gbc.writeMem(0x2c2f, { 0x42 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbd27, gbc.sp());
        EXPECT(0x2c30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02A4
        gbc.setState(0x253d, 0x7d2a, 0x3a00, 0xd8a1, 0x9051, 0xd655, 0x0, 0x1);
        gbc.writeMem(0x253d, { 0x42 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7d2a, gbc.sp());
        EXPECT(0x253e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02A5
        gbc.setState(0x5ccb, 0x8c3b, 0x5ee0, 0x1f68, 0xb636, 0x3fdd, 0x1, 0x0);
        gbc.writeMem(0x5ccb, { 0x42 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8c3b, gbc.sp());
        EXPECT(0x5ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02A6
        gbc.setState(0x20de, 0x3620, 0x4d80, 0xe6c3, 0x76b3, 0x1127, 0x1, 0x1);
        gbc.writeMem(0x20de, { 0x42 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3620, gbc.sp());
        EXPECT(0x20df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02A7
        gbc.setState(0x5757, 0x5616, 0x6f80, 0x6b00, 0x8267, 0xc621, 0x0, 0x0);
        gbc.writeMem(0x5757, { 0x42 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5616, gbc.sp());
        EXPECT(0x5758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02A8
        gbc.setState(0xade0, 0x1f28, 0x8180, 0x6709, 0xb4ad, 0xe21, 0x0, 0x1);
        gbc.writeMem(0xade0, { 0x42 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1f28, gbc.sp());
        EXPECT(0xade1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xade0));
        // 42 02A9
        gbc.setState(0x8f3, 0xcee6, 0xd060, 0xf037, 0x64c4, 0x2daf, 0x0, 0x0);
        gbc.writeMem(0x8f3, { 0x42 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcee6, gbc.sp());
        EXPECT(0x8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02AA
        gbc.setState(0xab1f, 0x5bf6, 0xab30, 0xb775, 0x51b, 0x4041, 0x0, 0x0);
        gbc.writeMem(0xab1f, { 0x42 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5bf6, gbc.sp());
        EXPECT(0xab20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xab1f));
        // 42 02AB
        gbc.setState(0x7e93, 0x9a3c, 0x41b0, 0xf068, 0x6ded, 0xd5b1, 0x0, 0x1);
        gbc.writeMem(0x7e93, { 0x42 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9a3c, gbc.sp());
        EXPECT(0x7e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02AC
        gbc.setState(0x93d7, 0xfc50, 0xe110, 0xf344, 0x68bc, 0xdd01, 0x0, 0x0);
        gbc.writeMem(0x93d7, { 0x42 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfc50, gbc.sp());
        EXPECT(0x93d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x93d7));
        // 42 02AD
        gbc.setState(0xa5cd, 0x2400, 0x8db0, 0x6fb, 0xec1, 0xc9c2, 0x0, 0x1);
        gbc.writeMem(0xa5cd, { 0x42 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2400, gbc.sp());
        EXPECT(0xa5ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa5cd));
        // 42 02AE
        gbc.setState(0xb104, 0xdacb, 0xf270, 0xf010, 0xd4a6, 0x26b1, 0x1, 0x1);
        gbc.writeMem(0xb104, { 0x42 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdacb, gbc.sp());
        EXPECT(0xb105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb104));
        // 42 02AF
        gbc.setState(0x2891, 0xa747, 0x6100, 0x2e05, 0x7c36, 0x5de9, 0x0, 0x1);
        gbc.writeMem(0x2891, { 0x42 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa747, gbc.sp());
        EXPECT(0x2892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02B0
        gbc.setState(0xb584, 0x94a3, 0x58e0, 0x7b25, 0x37c0, 0x5fad, 0x1, 0x0);
        gbc.writeMem(0xb584, { 0x42 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x94a3, gbc.sp());
        EXPECT(0xb585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb584));
        // 42 02B1
        gbc.setState(0x2d6, 0x310d, 0x32f0, 0x66aa, 0x4c25, 0x3383, 0x1, 0x1);
        gbc.writeMem(0x2d6, { 0x42 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x310d, gbc.sp());
        EXPECT(0x2d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02B3
        gbc.setState(0x158c, 0xcc17, 0x550, 0xd29d, 0x8d3b, 0xe8d0, 0x0, 0x1);
        gbc.writeMem(0x158c, { 0x42 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcc17, gbc.sp());
        EXPECT(0x158d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02B4
        gbc.setState(0x1979, 0x2e04, 0xecc0, 0xbc8a, 0xad94, 0x7553, 0x0, 0x1);
        gbc.writeMem(0x1979, { 0x42 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2e04, gbc.sp());
        EXPECT(0x197a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02B6
        gbc.setState(0x43cb, 0x4fe2, 0xb740, 0x71da, 0xc59a, 0x2cb5, 0x1, 0x0);
        gbc.writeMem(0x43cb, { 0x42 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4fe2, gbc.sp());
        EXPECT(0x43cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02B7
        gbc.setState(0x556a, 0xd6f6, 0xbf60, 0xd86a, 0x3353, 0xeb61, 0x0, 0x1);
        gbc.writeMem(0x556a, { 0x42 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd6f6, gbc.sp());
        EXPECT(0x556b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02B8
        gbc.setState(0x93e0, 0xfabf, 0xfa10, 0xeac7, 0x9300, 0xf734, 0x1, 0x1);
        gbc.writeMem(0x93e0, { 0x42 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfabf, gbc.sp());
        EXPECT(0x93e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x93e0));
        // 42 02B9
        gbc.setState(0x740c, 0xcd8f, 0x7d20, 0x621d, 0x55e6, 0x96c, 0x0, 0x0);
        gbc.writeMem(0x740c, { 0x42 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcd8f, gbc.sp());
        EXPECT(0x740d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02BB
        gbc.setState(0xb725, 0x7b34, 0x3550, 0xc3c3, 0x66f1, 0x2acf, 0x1, 0x0);
        gbc.writeMem(0xb725, { 0x42 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7b34, gbc.sp());
        EXPECT(0xb726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb725));
        // 42 02BC
        gbc.setState(0xb6fb, 0x4816, 0x5590, 0x5dc4, 0x1d1c, 0x80a0, 0x0, 0x0);
        gbc.writeMem(0xb6fb, { 0x42 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4816, gbc.sp());
        EXPECT(0xb6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb6fb));
        // 42 02BD
        gbc.setState(0xb65b, 0xe8d3, 0x38f0, 0xf30f, 0x357a, 0xee46, 0x0, 0x0);
        gbc.writeMem(0xb65b, { 0x42 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe8d3, gbc.sp());
        EXPECT(0xb65c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb65b));
        // 42 02BE
        gbc.setState(0x2097, 0x5b84, 0x9650, 0x28cd, 0xfe72, 0x36fd, 0x1, 0x1);
        gbc.writeMem(0x2097, { 0x42 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5b84, gbc.sp());
        EXPECT(0x2098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02BF
        gbc.setState(0xcc9b, 0x3f6c, 0x7fc0, 0x8d7, 0xd7dc, 0x65ea, 0x1, 0x1);
        gbc.writeMem(0xcc9b, { 0x42 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3f6c, gbc.sp());
        EXPECT(0xcc9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcc9b));
        // 42 02C0
        gbc.setState(0x74d1, 0xa325, 0x7c20, 0x44eb, 0xd73b, 0x4f1e, 0x0, 0x1);
        gbc.writeMem(0x74d1, { 0x42 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa325, gbc.sp());
        EXPECT(0x74d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02C1
        gbc.setState(0x4367, 0x6003, 0x2b20, 0xe6bb, 0xddfd, 0x3058, 0x0, 0x1);
        gbc.writeMem(0x4367, { 0x42 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6003, gbc.sp());
        EXPECT(0x4368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02C2
        gbc.setState(0x6f30, 0x6c75, 0xd280, 0x9d5a, 0xe6d1, 0x57bb, 0x0, 0x1);
        gbc.writeMem(0x6f30, { 0x42 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6c75, gbc.sp());
        EXPECT(0x6f31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02C3
        gbc.setState(0xaf9f, 0x4540, 0x53b0, 0xcbef, 0x9165, 0xc22c, 0x0, 0x0);
        gbc.writeMem(0xaf9f, { 0x42 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4540, gbc.sp());
        EXPECT(0xafa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xaf9f));
        // 42 02C4
        gbc.setState(0xceda, 0x5961, 0x9180, 0xb7e7, 0x6ea3, 0x64c, 0x1, 0x0);
        gbc.writeMem(0xceda, { 0x42 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5961, gbc.sp());
        EXPECT(0xcedb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xceda));
        // 42 02C5
        gbc.setState(0x6dd, 0xf3e2, 0x1bc0, 0x21aa, 0x963b, 0xb85a, 0x1, 0x1);
        gbc.writeMem(0x6dd, { 0x42 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf3e2, gbc.sp());
        EXPECT(0x6de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02C6
        gbc.setState(0xea99, 0xd1a2, 0xa160, 0x1c41, 0xd821, 0xa92c, 0x0, 0x0);
        gbc.writeMem(0xea99, { 0x42 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd1a2, gbc.sp());
        EXPECT(0xea9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xea99));
        // 42 02C7
        gbc.setState(0x3bf8, 0xe886, 0xe340, 0xd177, 0x6cd6, 0xdae3, 0x1, 0x0);
        gbc.writeMem(0x3bf8, { 0x42 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe886, gbc.sp());
        EXPECT(0x3bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02C8
        gbc.setState(0xaa2f, 0xe7ae, 0x8e00, 0x7c89, 0x18b5, 0x13a9, 0x1, 0x0);
        gbc.writeMem(0xaa2f, { 0x42 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe7ae, gbc.sp());
        EXPECT(0xaa30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xaa2f));
        // 42 02C9
        gbc.setState(0x1732, 0xe187, 0xfd0, 0x7861, 0xaef4, 0xefbc, 0x0, 0x1);
        gbc.writeMem(0x1732, { 0x42 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe187, gbc.sp());
        EXPECT(0x1733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02CA
        gbc.setState(0xa643, 0x81f9, 0x79c0, 0xaacf, 0xf716, 0x4fc9, 0x1, 0x1);
        gbc.writeMem(0xa643, { 0x42 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x81f9, gbc.sp());
        EXPECT(0xa644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa643));
        // 42 02CB
        gbc.setState(0x6f14, 0xc48a, 0xb870, 0x792c, 0x5f75, 0x33e1, 0x1, 0x1);
        gbc.writeMem(0x6f14, { 0x42 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc48a, gbc.sp());
        EXPECT(0x6f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02CC
        gbc.setState(0x9cc6, 0xf5af, 0x1640, 0xdf86, 0x6683, 0x8477, 0x1, 0x1);
        gbc.writeMem(0x9cc6, { 0x42 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf5af, gbc.sp());
        EXPECT(0x9cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9cc6));
        // 42 02CE
        gbc.setState(0x8a6b, 0x72bd, 0xc420, 0xe11c, 0xf528, 0x9ab1, 0x1, 0x0);
        gbc.writeMem(0x8a6b, { 0x42 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x72bd, gbc.sp());
        EXPECT(0x8a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8a6b));
        // 42 02CF
        gbc.setState(0x1e18, 0x7c59, 0x3c10, 0x8db4, 0x3d6e, 0x8110, 0x1, 0x1);
        gbc.writeMem(0x1e18, { 0x42 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7c59, gbc.sp());
        EXPECT(0x1e19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02D0
        gbc.setState(0x8880, 0x6038, 0xee40, 0x25cb, 0x422f, 0xca1d, 0x1, 0x0);
        gbc.writeMem(0x8880, { 0x42 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6038, gbc.sp());
        EXPECT(0x8881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8880));
        // 42 02D1
        gbc.setState(0x727b, 0xe30c, 0x9710, 0x1121, 0xa317, 0x9f83, 0x1, 0x0);
        gbc.writeMem(0x727b, { 0x42 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe30c, gbc.sp());
        EXPECT(0x727c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02D2
        gbc.setState(0x6a60, 0xd9da, 0x55e0, 0x35de, 0x1f33, 0x571, 0x0, 0x1);
        gbc.writeMem(0x6a60, { 0x42 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd9da, gbc.sp());
        EXPECT(0x6a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02D3
        gbc.setState(0xe657, 0x61bd, 0xc9c0, 0x83e1, 0x4e4e, 0x12f7, 0x0, 0x1);
        gbc.writeMem(0xe657, { 0x42 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x61bd, gbc.sp());
        EXPECT(0xe658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe657));
        // 42 02D4
        gbc.setState(0x9d6, 0xe9d8, 0xf190, 0x53a5, 0x2643, 0x4562, 0x1, 0x0);
        gbc.writeMem(0x9d6, { 0x42 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe9d8, gbc.sp());
        EXPECT(0x9d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02D5
        gbc.setState(0x563d, 0x5590, 0x8450, 0x1cf0, 0x8020, 0x165, 0x1, 0x1);
        gbc.writeMem(0x563d, { 0x42 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5590, gbc.sp());
        EXPECT(0x563e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02D6
        gbc.setState(0x6140, 0x8ba, 0x4430, 0xa102, 0x5f8c, 0x6779, 0x0, 0x1);
        gbc.writeMem(0x6140, { 0x42 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8ba, gbc.sp());
        EXPECT(0x6141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02D7
        gbc.setState(0x6115, 0xbf0f, 0x7900, 0x1bb, 0x1dd2, 0xad69, 0x0, 0x1);
        gbc.writeMem(0x6115, { 0x42 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbf0f, gbc.sp());
        EXPECT(0x6116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02D8
        gbc.setState(0x4a9b, 0xa9b6, 0x3190, 0x2ea6, 0x9bf3, 0x2d25, 0x1, 0x1);
        gbc.writeMem(0x4a9b, { 0x42 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa9b6, gbc.sp());
        EXPECT(0x4a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02D9
        gbc.setState(0x3fc9, 0x25e2, 0xd990, 0x1cc3, 0x4c6b, 0xdff7, 0x1, 0x0);
        gbc.writeMem(0x3fc9, { 0x42 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x25e2, gbc.sp());
        EXPECT(0x3fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02DA
        gbc.setState(0xad46, 0x95f8, 0x3150, 0x8ead, 0x48ec, 0xb32a, 0x0, 0x0);
        gbc.writeMem(0xad46, { 0x42 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x95f8, gbc.sp());
        EXPECT(0xad47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xad46));
        // 42 02DB
        gbc.setState(0x1b5f, 0x2201, 0x16b0, 0x8212, 0x3986, 0x4884, 0x1, 0x0);
        gbc.writeMem(0x1b5f, { 0x42 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2201, gbc.sp());
        EXPECT(0x1b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02DC
        gbc.setState(0x37c1, 0xf77c, 0x3b0, 0x2ae9, 0x1baa, 0x3e0f, 0x1, 0x0);
        gbc.writeMem(0x37c1, { 0x42 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf77c, gbc.sp());
        EXPECT(0x37c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02DD
        gbc.setState(0x166b, 0x80d1, 0x6e60, 0x240e, 0xebcd, 0xd2, 0x1, 0x1);
        gbc.writeMem(0x166b, { 0x42 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x80d1, gbc.sp());
        EXPECT(0x166c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02DF
        gbc.setState(0x5def, 0xec10, 0x3930, 0xcd6e, 0x1cc6, 0xe002, 0x0, 0x0);
        gbc.writeMem(0x5def, { 0x42 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xec10, gbc.sp());
        EXPECT(0x5df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02E0
        gbc.setState(0xbf96, 0xaa15, 0x45d0, 0x7962, 0x9868, 0xcca6, 0x1, 0x0);
        gbc.writeMem(0xbf96, { 0x42 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xaa15, gbc.sp());
        EXPECT(0xbf97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbf96));
        // 42 02E1
        gbc.setState(0x2858, 0x60c1, 0xa470, 0x1ac0, 0x6003, 0xbc96, 0x1, 0x0);
        gbc.writeMem(0x2858, { 0x42 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x60c1, gbc.sp());
        EXPECT(0x2859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02E2
        gbc.setState(0x94ac, 0x804, 0xc800, 0x3727, 0x39a5, 0x4de0, 0x0, 0x1);
        gbc.writeMem(0x94ac, { 0x42 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x804, gbc.sp());
        EXPECT(0x94ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x94ac));
        // 42 02E3
        gbc.setState(0x31ee, 0x7fd4, 0x42e0, 0xc2c6, 0xf7ff, 0x32ba, 0x0, 0x1);
        gbc.writeMem(0x31ee, { 0x42 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7fd4, gbc.sp());
        EXPECT(0x31ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02E4
        gbc.setState(0x6c3c, 0x7aef, 0x31f0, 0xa1b1, 0xe37, 0xe51, 0x0, 0x0);
        gbc.writeMem(0x6c3c, { 0x42 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7aef, gbc.sp());
        EXPECT(0x6c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02E5
        gbc.setState(0x6d4c, 0xb219, 0x6510, 0xd7ea, 0x894a, 0x4da3, 0x1, 0x1);
        gbc.writeMem(0x6d4c, { 0x42 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb219, gbc.sp());
        EXPECT(0x6d4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02E6
        gbc.setState(0x7bed, 0x27ce, 0xb150, 0xd6d2, 0xd36a, 0x3ba2, 0x0, 0x0);
        gbc.writeMem(0x7bed, { 0x42 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x27ce, gbc.sp());
        EXPECT(0x7bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02E7
        gbc.setState(0xcc57, 0xb449, 0xa4f0, 0x8d1c, 0x5b59, 0x3665, 0x0, 0x1);
        gbc.writeMem(0xcc57, { 0x42 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb449, gbc.sp());
        EXPECT(0xcc58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcc57));
        // 42 02E8
        gbc.setState(0x479c, 0xfa42, 0x5d70, 0xfd6d, 0x88c, 0x9cf8, 0x1, 0x1);
        gbc.writeMem(0x479c, { 0x42 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfa42, gbc.sp());
        EXPECT(0x479d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02E9
        gbc.setState(0xddfa, 0xab3c, 0x4360, 0x8df0, 0x3dab, 0x38df, 0x0, 0x1);
        gbc.writeMem(0xddfa, { 0x42 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xab3c, gbc.sp());
        EXPECT(0xddfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xddfa));
        // 42 02EA
        gbc.setState(0x2422, 0xb5f8, 0x2c80, 0xfb56, 0x92c, 0xc05d, 0x0, 0x1);
        gbc.writeMem(0x2422, { 0x42 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb5f8, gbc.sp());
        EXPECT(0x2423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02EB
        gbc.setState(0x11a1, 0x3976, 0xc8a0, 0x81d3, 0x9bea, 0x70a7, 0x0, 0x0);
        gbc.writeMem(0x11a1, { 0x42 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3976, gbc.sp());
        EXPECT(0x11a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02EC
        gbc.setState(0x55df, 0xd560, 0x8cf0, 0x3f66, 0x5579, 0x2dba, 0x1, 0x1);
        gbc.writeMem(0x55df, { 0x42 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd560, gbc.sp());
        EXPECT(0x55e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02ED
        gbc.setState(0xd0bc, 0xa636, 0x3f50, 0x6455, 0x2f54, 0xa5c4, 0x1, 0x1);
        gbc.writeMem(0xd0bc, { 0x42 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa636, gbc.sp());
        EXPECT(0xd0bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd0bc));
        // 42 02EE
        gbc.setState(0x8d32, 0x85c8, 0xd8c0, 0x4eb8, 0x19b5, 0x7d4c, 0x0, 0x1);
        gbc.writeMem(0x8d32, { 0x42 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x85c8, gbc.sp());
        EXPECT(0x8d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8d32));
        // 42 02EF
        gbc.setState(0x3ba0, 0x7ae, 0x3a20, 0x85f9, 0x93fc, 0x82e0, 0x1, 0x0);
        gbc.writeMem(0x3ba0, { 0x42 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7ae, gbc.sp());
        EXPECT(0x3ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02F1
        gbc.setState(0x697d, 0xc334, 0x4500, 0xb4f5, 0x294d, 0x4904, 0x1, 0x1);
        gbc.writeMem(0x697d, { 0x42 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc334, gbc.sp());
        EXPECT(0x697e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02F2
        gbc.setState(0xd05d, 0x10d3, 0xb580, 0x2eb5, 0xd118, 0x240d, 0x0, 0x1);
        gbc.writeMem(0xd05d, { 0x42 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x10d3, gbc.sp());
        EXPECT(0xd05e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd05d));
        // 42 02F3
        gbc.setState(0x4610, 0x33b4, 0x83e0, 0x5489, 0x7b53, 0x35b9, 0x1, 0x0);
        gbc.writeMem(0x4610, { 0x42 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x33b4, gbc.sp());
        EXPECT(0x4611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02F4
        gbc.setState(0x85ec, 0x7592, 0x4330, 0xa9a4, 0xaa9c, 0xa5e9, 0x1, 0x1);
        gbc.writeMem(0x85ec, { 0x42 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7592, gbc.sp());
        EXPECT(0x85ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x85ec));
        // 42 02F5
        gbc.setState(0x205a, 0x9584, 0x310, 0xc3dd, 0x78f5, 0x70c6, 0x0, 0x1);
        gbc.writeMem(0x205a, { 0x42 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9584, gbc.sp());
        EXPECT(0x205b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02F7
        gbc.setState(0x7232, 0x46ea, 0xf1b0, 0x7686, 0x55a1, 0x1182, 0x1, 0x0);
        gbc.writeMem(0x7232, { 0x42 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x46ea, gbc.sp());
        EXPECT(0x7233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02F8
        gbc.setState(0xf62, 0xca81, 0x24d0, 0xd669, 0x1554, 0x9cbb, 0x0, 0x0);
        gbc.writeMem(0xf62, { 0x42 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xca81, gbc.sp());
        EXPECT(0xf63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02F9
        gbc.setState(0x1e61, 0x8bc9, 0x7030, 0xee, 0x6975, 0xf248, 0x1, 0x1);
        gbc.writeMem(0x1e61, { 0x42 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8bc9, gbc.sp());
        EXPECT(0x1e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02FA
        gbc.setState(0x4ca6, 0x475d, 0x3da0, 0xe285, 0xd76a, 0x5847, 0x0, 0x0);
        gbc.writeMem(0x4ca6, { 0x42 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x475d, gbc.sp());
        EXPECT(0x4ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02FB
        gbc.setState(0x5c7b, 0xf522, 0xbf60, 0x6fbb, 0x8dd2, 0x967b, 0x1, 0x1);
        gbc.writeMem(0x5c7b, { 0x42 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf522, gbc.sp());
        EXPECT(0x5c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02FC
        gbc.setState(0xeea4, 0xb2f5, 0x2ef0, 0x9dfd, 0x15e8, 0x68ff, 0x0, 0x1);
        gbc.writeMem(0xeea4, { 0x42 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb2f5, gbc.sp());
        EXPECT(0xeea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xeea4));
        // 42 02FD
        gbc.setState(0x2927, 0xdb3b, 0x9e0, 0x4bbc, 0xf17, 0x3114, 0x1, 0x0);
        gbc.writeMem(0x2927, { 0x42 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdb3b, gbc.sp());
        EXPECT(0x2928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 02FE
        gbc.setState(0x784b, 0xfd66, 0x4530, 0x30da, 0x236d, 0x80f1, 0x1, 0x0);
        gbc.writeMem(0x784b, { 0x42 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfd66, gbc.sp());
        EXPECT(0x784c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 02FF
        gbc.setState(0xc278, 0xd264, 0x8590, 0x8d94, 0xd9ac, 0x1f57, 0x0, 0x1);
        gbc.writeMem(0xc278, { 0x42 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd264, gbc.sp());
        EXPECT(0xc279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc278));
        // 42 0300
        gbc.setState(0x8400, 0x635e, 0xb420, 0x3d52, 0xc9d8, 0xcb57, 0x0, 0x1);
        gbc.writeMem(0x8400, { 0x42 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x635e, gbc.sp());
        EXPECT(0x8401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8400));
        // 42 0301
        gbc.setState(0x42b1, 0xc3c9, 0x2480, 0x8438, 0xfde7, 0xf741, 0x1, 0x0);
        gbc.writeMem(0x42b1, { 0x42 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc3c9, gbc.sp());
        EXPECT(0x42b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0302
        gbc.setState(0x6074, 0x6bf, 0x5b10, 0xa99a, 0x60d9, 0x943, 0x1, 0x1);
        gbc.writeMem(0x6074, { 0x42 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6bf, gbc.sp());
        EXPECT(0x6075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0303
        gbc.setState(0x6267, 0xbbe2, 0xaff0, 0x9e5f, 0xa025, 0x780d, 0x0, 0x0);
        gbc.writeMem(0x6267, { 0x42 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbbe2, gbc.sp());
        EXPECT(0x6268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0305
        gbc.setState(0x61e1, 0xd62e, 0x4830, 0x5964, 0x6b16, 0x40, 0x1, 0x0);
        gbc.writeMem(0x61e1, { 0x42 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd62e, gbc.sp());
        EXPECT(0x61e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0306
        gbc.setState(0x4f0f, 0x1c7a, 0x95e0, 0x1d1b, 0x73cb, 0x81, 0x0, 0x0);
        gbc.writeMem(0x4f0f, { 0x42 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1c7a, gbc.sp());
        EXPECT(0x4f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0307
        gbc.setState(0xdbe8, 0xbfaf, 0x66f0, 0x452d, 0x5758, 0xae96, 0x0, 0x0);
        gbc.writeMem(0xdbe8, { 0x42 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbfaf, gbc.sp());
        EXPECT(0xdbe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdbe8));
        // 42 0308
        gbc.setState(0x582c, 0xec2a, 0xb530, 0x9b3c, 0x510b, 0x21d8, 0x0, 0x1);
        gbc.writeMem(0x582c, { 0x42 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xec2a, gbc.sp());
        EXPECT(0x582d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0309
        gbc.setState(0xbfa3, 0x8bc0, 0x7d90, 0xd076, 0x1eec, 0x4db5, 0x1, 0x0);
        gbc.writeMem(0xbfa3, { 0x42 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8bc0, gbc.sp());
        EXPECT(0xbfa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbfa3));
        // 42 030A
        gbc.setState(0x7ce9, 0xdab9, 0xc740, 0xf7d9, 0x6338, 0xb677, 0x0, 0x0);
        gbc.writeMem(0x7ce9, { 0x42 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdab9, gbc.sp());
        EXPECT(0x7cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 030B
        gbc.setState(0x31d3, 0x1b1e, 0x9f10, 0xd75e, 0xbaa2, 0x5400, 0x0, 0x1);
        gbc.writeMem(0x31d3, { 0x42 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1b1e, gbc.sp());
        EXPECT(0x31d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 030C
        gbc.setState(0x611b, 0x9729, 0x3be0, 0x47e3, 0x7d3c, 0x8a7e, 0x0, 0x0);
        gbc.writeMem(0x611b, { 0x42 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9729, gbc.sp());
        EXPECT(0x611c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 030D
        gbc.setState(0x80bd, 0xe827, 0x1c50, 0x103c, 0xe83e, 0xd93a, 0x0, 0x1);
        gbc.writeMem(0x80bd, { 0x42 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe827, gbc.sp());
        EXPECT(0x80be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x80bd));
        // 42 030E
        gbc.setState(0x92ee, 0xa597, 0xf050, 0x4682, 0xa2ab, 0x4098, 0x1, 0x0);
        gbc.writeMem(0x92ee, { 0x42 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa597, gbc.sp());
        EXPECT(0x92ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x92ee));
        // 42 030F
        gbc.setState(0x8fb6, 0xcbad, 0xc890, 0xf6fe, 0x2899, 0xf5ee, 0x1, 0x1);
        gbc.writeMem(0x8fb6, { 0x42 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcbad, gbc.sp());
        EXPECT(0x8fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8fb6));
        // 42 0310
        gbc.setState(0xdbf8, 0x2e6b, 0xa3f0, 0xcfa7, 0x76f7, 0xf66f, 0x0, 0x0);
        gbc.writeMem(0xdbf8, { 0x42 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2e6b, gbc.sp());
        EXPECT(0xdbf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdbf8));
        // 42 0311
        gbc.setState(0x36ff, 0xd831, 0x4c0, 0x43dd, 0xc8c9, 0x70cd, 0x0, 0x0);
        gbc.writeMem(0x36ff, { 0x42 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd831, gbc.sp());
        EXPECT(0x3700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0312
        gbc.setState(0xacf7, 0xe04e, 0x8f60, 0x2884, 0x3334, 0x983, 0x1, 0x1);
        gbc.writeMem(0xacf7, { 0x42 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe04e, gbc.sp());
        EXPECT(0xacf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xacf7));
        // 42 0313
        gbc.setState(0xe8b6, 0x7d31, 0xbd90, 0x5f9e, 0xf1d7, 0x6dc9, 0x0, 0x1);
        gbc.writeMem(0xe8b6, { 0x42 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7d31, gbc.sp());
        EXPECT(0xe8b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe8b6));
        // 42 0314
        gbc.setState(0xb917, 0x6883, 0x710, 0x687e, 0x82a9, 0x6176, 0x0, 0x0);
        gbc.writeMem(0xb917, { 0x42 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6883, gbc.sp());
        EXPECT(0xb918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb917));
        // 42 0315
        gbc.setState(0x628c, 0x133a, 0xb080, 0x9dbe, 0x4395, 0x5db1, 0x1, 0x1);
        gbc.writeMem(0x628c, { 0x42 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x133a, gbc.sp());
        EXPECT(0x628d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0317
        gbc.setState(0x5368, 0x3dbf, 0x1380, 0x3e25, 0x2079, 0xbb29, 0x0, 0x0);
        gbc.writeMem(0x5368, { 0x42 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3dbf, gbc.sp());
        EXPECT(0x5369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0318
        gbc.setState(0x7dc2, 0x5ecd, 0x5630, 0xa34f, 0xde56, 0x35de, 0x0, 0x1);
        gbc.writeMem(0x7dc2, { 0x42 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5ecd, gbc.sp());
        EXPECT(0x7dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0319
        gbc.setState(0x583e, 0xca1d, 0xfc10, 0xac1c, 0x129f, 0xfaf9, 0x1, 0x1);
        gbc.writeMem(0x583e, { 0x42 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xca1d, gbc.sp());
        EXPECT(0x583f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 031A
        gbc.setState(0x469f, 0x2d20, 0xb100, 0x1889, 0x4718, 0x3e31, 0x1, 0x0);
        gbc.writeMem(0x469f, { 0x42 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2d20, gbc.sp());
        EXPECT(0x46a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 031B
        gbc.setState(0x2db7, 0xa276, 0x7d50, 0x60b5, 0xe96b, 0xea76, 0x0, 0x1);
        gbc.writeMem(0x2db7, { 0x42 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa276, gbc.sp());
        EXPECT(0x2db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 031E
        gbc.setState(0x295a, 0x1993, 0xd950, 0xf566, 0xe8ea, 0xf827, 0x0, 0x1);
        gbc.writeMem(0x295a, { 0x42 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1993, gbc.sp());
        EXPECT(0x295b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0320
        gbc.setState(0x9c7e, 0x30b4, 0x7290, 0x3532, 0xcef4, 0x7252, 0x1, 0x1);
        gbc.writeMem(0x9c7e, { 0x42 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x30b4, gbc.sp());
        EXPECT(0x9c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9c7e));
        // 42 0321
        gbc.setState(0xaf4b, 0x6630, 0xed00, 0x27c4, 0x503f, 0xb2f6, 0x0, 0x1);
        gbc.writeMem(0xaf4b, { 0x42 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6630, gbc.sp());
        EXPECT(0xaf4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xaf4b));
        // 42 0322
        gbc.setState(0xbd02, 0x8ecf, 0x78b0, 0xe815, 0xfb12, 0x8a14, 0x1, 0x1);
        gbc.writeMem(0xbd02, { 0x42 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8ecf, gbc.sp());
        EXPECT(0xbd03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbd02));
        // 42 0323
        gbc.setState(0xb25b, 0x6438, 0xa9d0, 0x4147, 0xcb6b, 0x11a3, 0x0, 0x1);
        gbc.writeMem(0xb25b, { 0x42 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6438, gbc.sp());
        EXPECT(0xb25c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb25b));
        // 42 0324
        gbc.setState(0x33c5, 0x4ff, 0x7190, 0xe4c2, 0x62e1, 0x1391, 0x1, 0x0);
        gbc.writeMem(0x33c5, { 0x42 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4ff, gbc.sp());
        EXPECT(0x33c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0325
        gbc.setState(0x575f, 0x29b3, 0xa0d0, 0x33ce, 0x2765, 0xdda9, 0x1, 0x1);
        gbc.writeMem(0x575f, { 0x42 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x29b3, gbc.sp());
        EXPECT(0x5760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0326
        gbc.setState(0x10ab, 0x9484, 0x8f60, 0x1926, 0x7366, 0x744f, 0x1, 0x0);
        gbc.writeMem(0x10ab, { 0x42 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9484, gbc.sp());
        EXPECT(0x10ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0327
        gbc.setState(0xc7a5, 0xa087, 0xca10, 0xb455, 0xecd3, 0x53d1, 0x1, 0x0);
        gbc.writeMem(0xc7a5, { 0x42 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa087, gbc.sp());
        EXPECT(0xc7a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc7a5));
        // 42 0328
        gbc.setState(0x6e77, 0xb36c, 0x4190, 0x6d7c, 0x9901, 0xc401, 0x0, 0x0);
        gbc.writeMem(0x6e77, { 0x42 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb36c, gbc.sp());
        EXPECT(0x6e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0329
        gbc.setState(0x646c, 0x2e54, 0xdfc0, 0x1db6, 0xf6bb, 0xc298, 0x1, 0x0);
        gbc.writeMem(0x646c, { 0x42 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2e54, gbc.sp());
        EXPECT(0x646d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 032A
        gbc.setState(0x18d7, 0x88e5, 0x4c0, 0x64af, 0x6a5c, 0xc547, 0x1, 0x1);
        gbc.writeMem(0x18d7, { 0x42 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x88e5, gbc.sp());
        EXPECT(0x18d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 032B
        gbc.setState(0xb664, 0x485a, 0x1ad0, 0x1370, 0xadd8, 0x13ac, 0x0, 0x0);
        gbc.writeMem(0xb664, { 0x42 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x485a, gbc.sp());
        EXPECT(0xb665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb664));
        // 42 032C
        gbc.setState(0xee5a, 0xb535, 0x4350, 0x6fae, 0xc153, 0x5604, 0x0, 0x0);
        gbc.writeMem(0xee5a, { 0x42 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb535, gbc.sp());
        EXPECT(0xee5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xee5a));
        // 42 032D
        gbc.setState(0xbaca, 0xa359, 0x92a0, 0x7d9a, 0x3e1d, 0xc8f0, 0x1, 0x1);
        gbc.writeMem(0xbaca, { 0x42 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa359, gbc.sp());
        EXPECT(0xbacb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbaca));
        // 42 032E
        gbc.setState(0x8874, 0x1df5, 0x8d80, 0xa9a7, 0x586d, 0x86eb, 0x0, 0x0);
        gbc.writeMem(0x8874, { 0x42 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1df5, gbc.sp());
        EXPECT(0x8875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8874));
        // 42 032F
        gbc.setState(0x71fa, 0xa01a, 0xfa40, 0x8785, 0x5fa2, 0xd4d8, 0x0, 0x0);
        gbc.writeMem(0x71fa, { 0x42 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa01a, gbc.sp());
        EXPECT(0x71fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0330
        gbc.setState(0xd090, 0x5446, 0x5720, 0x42a1, 0x91d1, 0xa2ae, 0x0, 0x0);
        gbc.writeMem(0xd090, { 0x42 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5446, gbc.sp());
        EXPECT(0xd091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd090));
        // 42 0331
        gbc.setState(0x5f70, 0x7102, 0x44f0, 0x535c, 0xe572, 0x5325, 0x1, 0x1);
        gbc.writeMem(0x5f70, { 0x42 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7102, gbc.sp());
        EXPECT(0x5f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0332
        gbc.setState(0x7f64, 0x2df0, 0x2b80, 0x9b41, 0xffb8, 0xa81c, 0x0, 0x0);
        gbc.writeMem(0x7f64, { 0x42 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2df0, gbc.sp());
        EXPECT(0x7f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0333
        gbc.setState(0x4cc1, 0xb040, 0x7d70, 0xac4f, 0xb7f7, 0xdc7f, 0x0, 0x1);
        gbc.writeMem(0x4cc1, { 0x42 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb040, gbc.sp());
        EXPECT(0x4cc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0334
        gbc.setState(0x769f, 0x2a61, 0x9680, 0xb93, 0x4f25, 0x7867, 0x1, 0x1);
        gbc.writeMem(0x769f, { 0x42 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2a61, gbc.sp());
        EXPECT(0x76a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0335
        gbc.setState(0x8c9e, 0xcd06, 0x8050, 0x3b4e, 0x981d, 0xb3d1, 0x0, 0x1);
        gbc.writeMem(0x8c9e, { 0x42 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcd06, gbc.sp());
        EXPECT(0x8c9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8c9e));
        // 42 0336
        gbc.setState(0x325f, 0x6d4f, 0xa550, 0xa3d7, 0x3000, 0x5de3, 0x1, 0x0);
        gbc.writeMem(0x325f, { 0x42 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6d4f, gbc.sp());
        EXPECT(0x3260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0337
        gbc.setState(0xa04d, 0xa66b, 0x30a0, 0x4261, 0x6904, 0xe2d6, 0x1, 0x0);
        gbc.writeMem(0xa04d, { 0x42 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa66b, gbc.sp());
        EXPECT(0xa04e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa04d));
        // 42 0338
        gbc.setState(0xc713, 0xf0b1, 0x6e40, 0x4589, 0xcbb3, 0xbe3c, 0x0, 0x0);
        gbc.writeMem(0xc713, { 0x42 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf0b1, gbc.sp());
        EXPECT(0xc714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc713));
        // 42 0339
        gbc.setState(0x50, 0xf2b0, 0x2d30, 0xbf18, 0xf6c9, 0x3bba, 0x1, 0x0);
        gbc.writeMem(0x50, { 0x42 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf2b0, gbc.sp());
        EXPECT(0x51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 033A
        gbc.setState(0x666a, 0x68a4, 0x4780, 0xf87d, 0x6098, 0x8d36, 0x0, 0x1);
        gbc.writeMem(0x666a, { 0x42 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x68a4, gbc.sp());
        EXPECT(0x666b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 033B
        gbc.setState(0xe122, 0xfcbb, 0x2da0, 0x5900, 0xf875, 0xc39e, 0x1, 0x1);
        gbc.writeMem(0xe122, { 0x42 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfcbb, gbc.sp());
        EXPECT(0xe123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe122));
        // 42 033C
        gbc.setState(0x6833, 0x2c5f, 0x6d0, 0x9fb5, 0x92b0, 0x849, 0x0, 0x1);
        gbc.writeMem(0x6833, { 0x42 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2c5f, gbc.sp());
        EXPECT(0x6834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 033D
        gbc.setState(0x8143, 0xc293, 0x8380, 0x47e3, 0x3a27, 0x4b80, 0x1, 0x1);
        gbc.writeMem(0x8143, { 0x42 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc293, gbc.sp());
        EXPECT(0x8144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8143));
        // 42 033F
        gbc.setState(0x6aba, 0x3fc3, 0xab90, 0xcdc3, 0x35f9, 0xa2fb, 0x1, 0x1);
        gbc.writeMem(0x6aba, { 0x42 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3fc3, gbc.sp());
        EXPECT(0x6abb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0340
        gbc.setState(0x19f3, 0x503f, 0x6c20, 0xba0a, 0xb75, 0x1fe7, 0x0, 0x0);
        gbc.writeMem(0x19f3, { 0x42 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x503f, gbc.sp());
        EXPECT(0x19f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0341
        gbc.setState(0x5f2a, 0xd37e, 0x400, 0x5f39, 0xa82d, 0x26ab, 0x1, 0x0);
        gbc.writeMem(0x5f2a, { 0x42 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd37e, gbc.sp());
        EXPECT(0x5f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0342
        gbc.setState(0x9dc, 0x697d, 0x6e60, 0x1dcf, 0x8854, 0x6a61, 0x0, 0x0);
        gbc.writeMem(0x9dc, { 0x42 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x697d, gbc.sp());
        EXPECT(0x9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0343
        gbc.setState(0x787a, 0xe296, 0xadb0, 0x6935, 0xa311, 0x5f32, 0x1, 0x1);
        gbc.writeMem(0x787a, { 0x42 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe296, gbc.sp());
        EXPECT(0x787b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0344
        gbc.setState(0x3c5, 0xb343, 0x60d0, 0xd4d0, 0x9cae, 0x2b82, 0x1, 0x1);
        gbc.writeMem(0x3c5, { 0x42 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb343, gbc.sp());
        EXPECT(0x3c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0345
        gbc.setState(0x7d8e, 0xdfc3, 0x1190, 0xe7b8, 0x5b07, 0xaf01, 0x0, 0x0);
        gbc.writeMem(0x7d8e, { 0x42 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xdfc3, gbc.sp());
        EXPECT(0x7d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0346
        gbc.setState(0x84b9, 0xaccc, 0x5f70, 0xc3, 0xf6ef, 0xc4c1, 0x1, 0x1);
        gbc.writeMem(0x84b9, { 0x42 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xaccc, gbc.sp());
        EXPECT(0x84ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x84b9));
        // 42 0347
        gbc.setState(0x7620, 0x2f50, 0xd9d0, 0xd03b, 0x3b13, 0x2708, 0x0, 0x0);
        gbc.writeMem(0x7620, { 0x42 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2f50, gbc.sp());
        EXPECT(0x7621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0348
        gbc.setState(0xd7ca, 0x71ae, 0x13b0, 0xa009, 0xe74e, 0x30cb, 0x0, 0x1);
        gbc.writeMem(0xd7ca, { 0x42 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x71ae, gbc.sp());
        EXPECT(0xd7cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd7ca));
        // 42 0349
        gbc.setState(0x6c0, 0xedd6, 0xc400, 0xc925, 0xe2e3, 0x8fb2, 0x1, 0x1);
        gbc.writeMem(0x6c0, { 0x42 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xedd6, gbc.sp());
        EXPECT(0x6c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 034A
        gbc.setState(0xdbc0, 0xc02e, 0xa060, 0xb0b, 0x3f37, 0xe213, 0x1, 0x1);
        gbc.writeMem(0xdbc0, { 0x42 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc02e, gbc.sp());
        EXPECT(0xdbc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdbc0));
        // 42 034B
        gbc.setState(0x5efe, 0x5306, 0xcf20, 0x3bac, 0x5f27, 0x2097, 0x0, 0x1);
        gbc.writeMem(0x5efe, { 0x42 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5306, gbc.sp());
        EXPECT(0x5eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 034C
        gbc.setState(0x842f, 0x53f6, 0x1ab0, 0x5eb0, 0xddeb, 0x6591, 0x0, 0x1);
        gbc.writeMem(0x842f, { 0x42 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x53f6, gbc.sp());
        EXPECT(0x8430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x842f));
        // 42 034D
        gbc.setState(0x7350, 0x1d6c, 0x60a0, 0x5d5e, 0xf0b4, 0xc634, 0x1, 0x0);
        gbc.writeMem(0x7350, { 0x42 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1d6c, gbc.sp());
        EXPECT(0x7351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 034E
        gbc.setState(0x71f1, 0x9030, 0xdad0, 0xd911, 0x9609, 0x45b8, 0x0, 0x1);
        gbc.writeMem(0x71f1, { 0x42 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9030, gbc.sp());
        EXPECT(0x71f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 034F
        gbc.setState(0xcec6, 0x60d8, 0x6b30, 0x479c, 0xd204, 0x29b3, 0x0, 0x0);
        gbc.writeMem(0xcec6, { 0x42 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x60d8, gbc.sp());
        EXPECT(0xcec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcec6));
        // 42 0350
        gbc.setState(0xa0e9, 0x9db7, 0x50a0, 0x1602, 0x5766, 0x2001, 0x1, 0x1);
        gbc.writeMem(0xa0e9, { 0x42 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9db7, gbc.sp());
        EXPECT(0xa0ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa0e9));
        // 42 0352
        gbc.setState(0x64fe, 0xd843, 0x2a00, 0x5dd6, 0x92df, 0x1eeb, 0x0, 0x0);
        gbc.writeMem(0x64fe, { 0x42 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd843, gbc.sp());
        EXPECT(0x64ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0353
        gbc.setState(0x90a4, 0xb932, 0x5f20, 0xf619, 0x4b3c, 0x5187, 0x0, 0x1);
        gbc.writeMem(0x90a4, { 0x42 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb932, gbc.sp());
        EXPECT(0x90a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x90a4));
        // 42 0355
        gbc.setState(0x69f9, 0x455, 0x8f0, 0x71ee, 0xcf10, 0xf4d7, 0x1, 0x0);
        gbc.writeMem(0x69f9, { 0x42 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x455, gbc.sp());
        EXPECT(0x69fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0356
        gbc.setState(0xe5e8, 0x26eb, 0x7960, 0xfc99, 0x45, 0xf82, 0x1, 0x0);
        gbc.writeMem(0xe5e8, { 0x42 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x26eb, gbc.sp());
        EXPECT(0xe5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe5e8));
        // 42 0357
        gbc.setState(0xf2, 0xd8d5, 0x7c70, 0x37ec, 0xf996, 0xc500, 0x1, 0x1);
        gbc.writeMem(0xf2, { 0x42 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd8d5, gbc.sp());
        EXPECT(0xf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0358
        gbc.setState(0xa7f9, 0x76dd, 0xa720, 0xacb9, 0xb3df, 0x6166, 0x1, 0x0);
        gbc.writeMem(0xa7f9, { 0x42 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x76dd, gbc.sp());
        EXPECT(0xa7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa7f9));
        // 42 0359
        gbc.setState(0xb749, 0x62b6, 0x8850, 0x459a, 0x4d30, 0xcff0, 0x0, 0x1);
        gbc.writeMem(0xb749, { 0x42 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x62b6, gbc.sp());
        EXPECT(0xb74a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb749));
        // 42 035A
        gbc.setState(0xdee2, 0x968d, 0xfc00, 0x47e0, 0x41e, 0x5e5f, 0x0, 0x1);
        gbc.writeMem(0xdee2, { 0x42 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x968d, gbc.sp());
        EXPECT(0xdee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdee2));
        // 42 035B
        gbc.setState(0xc312, 0x833, 0x47a0, 0xae8c, 0x524, 0xa0e2, 0x1, 0x0);
        gbc.writeMem(0xc312, { 0x42 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x833, gbc.sp());
        EXPECT(0xc313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc312));
        // 42 035C
        gbc.setState(0x76db, 0x7957, 0x2220, 0x2edf, 0x7734, 0x689d, 0x1, 0x0);
        gbc.writeMem(0x76db, { 0x42 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7957, gbc.sp());
        EXPECT(0x76dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 035D
        gbc.setState(0x1403, 0x21cc, 0xe460, 0x85a3, 0x27c3, 0xcab3, 0x1, 0x0);
        gbc.writeMem(0x1403, { 0x42 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x21cc, gbc.sp());
        EXPECT(0x1404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 035E
        gbc.setState(0x25b0, 0x46aa, 0x5a60, 0x59c8, 0xc72f, 0x1031, 0x1, 0x0);
        gbc.writeMem(0x25b0, { 0x42 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x46aa, gbc.sp());
        EXPECT(0x25b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 035F
        gbc.setState(0xb133, 0x57fc, 0x6000, 0xee7b, 0xfbb5, 0x1962, 0x0, 0x0);
        gbc.writeMem(0xb133, { 0x42 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x57fc, gbc.sp());
        EXPECT(0xb134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb133));
        // 42 0360
        gbc.setState(0x3275, 0xaa9e, 0x5fa0, 0xea51, 0xfef2, 0x6028, 0x1, 0x1);
        gbc.writeMem(0x3275, { 0x42 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xaa9e, gbc.sp());
        EXPECT(0x3276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0361
        gbc.setState(0xe3ef, 0x66ce, 0x6080, 0x423f, 0x3313, 0x2968, 0x0, 0x1);
        gbc.writeMem(0xe3ef, { 0x42 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x66ce, gbc.sp());
        EXPECT(0xe3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe3ef));
        // 42 0362
        gbc.setState(0x31bd, 0x5a74, 0x3250, 0x2276, 0xfd80, 0x66a0, 0x1, 0x0);
        gbc.writeMem(0x31bd, { 0x42 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5a74, gbc.sp());
        EXPECT(0x31be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0363
        gbc.setState(0xe5e0, 0xc2ae, 0xfa10, 0xa9b2, 0x8d74, 0xc228, 0x1, 0x1);
        gbc.writeMem(0xe5e0, { 0x42 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc2ae, gbc.sp());
        EXPECT(0xe5e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe5e0));
        // 42 0364
        gbc.setState(0xec48, 0x70cb, 0xaf00, 0x2a6, 0xe0d7, 0x812a, 0x1, 0x1);
        gbc.writeMem(0xec48, { 0x42 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x70cb, gbc.sp());
        EXPECT(0xec49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xec48));
        // 42 0365
        gbc.setState(0x713f, 0x8e65, 0x7c30, 0xb909, 0xd9b4, 0xec6c, 0x1, 0x0);
        gbc.writeMem(0x713f, { 0x42 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8e65, gbc.sp());
        EXPECT(0x7140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0366
        gbc.setState(0xdf98, 0x7ef7, 0xe140, 0xcb6d, 0x1d40, 0x8e26, 0x1, 0x1);
        gbc.writeMem(0xdf98, { 0x42 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7ef7, gbc.sp());
        EXPECT(0xdf99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdf98));
        // 42 0367
        gbc.setState(0x35de, 0xf0c2, 0xc480, 0xa19a, 0x8a7, 0x3041, 0x1, 0x1);
        gbc.writeMem(0x35de, { 0x42 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf0c2, gbc.sp());
        EXPECT(0x35df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0368
        gbc.setState(0x65e6, 0x528a, 0xc870, 0xa244, 0x2223, 0xcdae, 0x0, 0x0);
        gbc.writeMem(0x65e6, { 0x42 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x528a, gbc.sp());
        EXPECT(0x65e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0369
        gbc.setState(0x96e5, 0x4f79, 0x5f20, 0xb02f, 0x5e33, 0x6736, 0x0, 0x0);
        gbc.writeMem(0x96e5, { 0x42 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4f79, gbc.sp());
        EXPECT(0x96e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x96e5));
        // 42 036A
        gbc.setState(0xdd2b, 0x32d3, 0x3d40, 0xd69a, 0xea70, 0xd5d9, 0x1, 0x0);
        gbc.writeMem(0xdd2b, { 0x42 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x32d3, gbc.sp());
        EXPECT(0xdd2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdd2b));
        // 42 036B
        gbc.setState(0xca2e, 0xff8, 0x9a00, 0x1df4, 0x7785, 0x7a91, 0x1, 0x1);
        gbc.writeMem(0xca2e, { 0x42 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xff8, gbc.sp());
        EXPECT(0xca2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xca2e));
        // 42 036C
        gbc.setState(0x5ef5, 0x71a6, 0x7b90, 0xaf98, 0xfa47, 0xed0d, 0x1, 0x1);
        gbc.writeMem(0x5ef5, { 0x42 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x71a6, gbc.sp());
        EXPECT(0x5ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 036D
        gbc.setState(0xa4c5, 0x1dab, 0x2e70, 0x1930, 0x3f1f, 0xb5c9, 0x0, 0x0);
        gbc.writeMem(0xa4c5, { 0x42 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1dab, gbc.sp());
        EXPECT(0xa4c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa4c5));
        // 42 036E
        gbc.setState(0xc285, 0x14bf, 0xd8e0, 0x7b79, 0x98ec, 0xb5c5, 0x1, 0x1);
        gbc.writeMem(0xc285, { 0x42 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x14bf, gbc.sp());
        EXPECT(0xc286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc285));
        // 42 036F
        gbc.setState(0xb4a7, 0xdee3, 0x9630, 0xd4ea, 0xfa2d, 0xce57, 0x0, 0x1);
        gbc.writeMem(0xb4a7, { 0x42 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xdee3, gbc.sp());
        EXPECT(0xb4a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb4a7));
        // 42 0370
        gbc.setState(0x8c62, 0xd635, 0x60d0, 0xce30, 0x7bf, 0xb67, 0x1, 0x0);
        gbc.writeMem(0x8c62, { 0x42 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd635, gbc.sp());
        EXPECT(0x8c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8c62));
        // 42 0371
        gbc.setState(0xb9fe, 0xce7a, 0xd5b0, 0x4a06, 0xd6bf, 0x9e6, 0x1, 0x0);
        gbc.writeMem(0xb9fe, { 0x42 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xce7a, gbc.sp());
        EXPECT(0xb9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb9fe));
        // 42 0372
        gbc.setState(0xda68, 0x205, 0xb120, 0xadcd, 0x2fa6, 0xc086, 0x0, 0x1);
        gbc.writeMem(0xda68, { 0x42 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x205, gbc.sp());
        EXPECT(0xda69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xda68));
        // 42 0373
        gbc.setState(0xa47e, 0x8e6e, 0xcb0, 0xaf7f, 0x9413, 0x887, 0x0, 0x1);
        gbc.writeMem(0xa47e, { 0x42 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8e6e, gbc.sp());
        EXPECT(0xa47f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa47e));
        // 42 0374
        gbc.setState(0x1c81, 0x1398, 0x6b60, 0xbd5, 0x4c14, 0x399f, 0x1, 0x0);
        gbc.writeMem(0x1c81, { 0x42 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1398, gbc.sp());
        EXPECT(0x1c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0375
        gbc.setState(0xbf0a, 0xfc49, 0xcf70, 0xb7b8, 0x24c6, 0x25eb, 0x0, 0x1);
        gbc.writeMem(0xbf0a, { 0x42 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfc49, gbc.sp());
        EXPECT(0xbf0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbf0a));
        // 42 0376
        gbc.setState(0x8635, 0xbdd6, 0x8a50, 0xcecf, 0x801d, 0xe16c, 0x0, 0x1);
        gbc.writeMem(0x8635, { 0x42 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbdd6, gbc.sp());
        EXPECT(0x8636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8635));
        // 42 0377
        gbc.setState(0x95d6, 0x37a1, 0x75c0, 0xac5c, 0xe1b2, 0xf7c2, 0x1, 0x1);
        gbc.writeMem(0x95d6, { 0x42 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x37a1, gbc.sp());
        EXPECT(0x95d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x95d6));
        // 42 0378
        gbc.setState(0xa929, 0x286a, 0x1c50, 0x33c1, 0x2d0d, 0x2a87, 0x1, 0x0);
        gbc.writeMem(0xa929, { 0x42 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x286a, gbc.sp());
        EXPECT(0xa92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa929));
        // 42 0379
        gbc.setState(0x9436, 0x7b8d, 0xca0, 0x6400, 0xda93, 0x1c67, 0x0, 0x0);
        gbc.writeMem(0x9436, { 0x42 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7b8d, gbc.sp());
        EXPECT(0x9437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9436));
        // 42 037A
        gbc.setState(0x92d7, 0x4f3a, 0x1c30, 0x1771, 0x90e4, 0x23ff, 0x0, 0x1);
        gbc.writeMem(0x92d7, { 0x42 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4f3a, gbc.sp());
        EXPECT(0x92d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x92d7));
        // 42 037B
        gbc.setState(0x68c0, 0x1420, 0x8ef0, 0x756a, 0x6a08, 0xac6b, 0x1, 0x1);
        gbc.writeMem(0x68c0, { 0x42 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1420, gbc.sp());
        EXPECT(0x68c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 037C
        gbc.setState(0x9872, 0x371e, 0xaf20, 0x259a, 0x471a, 0xe94e, 0x1, 0x1);
        gbc.writeMem(0x9872, { 0x42 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x371e, gbc.sp());
        EXPECT(0x9873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9872));
        // 42 037D
        gbc.setState(0xd27f, 0xa195, 0xa260, 0xb7, 0x18f7, 0x9d7f, 0x1, 0x1);
        gbc.writeMem(0xd27f, { 0x42 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa195, gbc.sp());
        EXPECT(0xd280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd27f));
        // 42 037E
        gbc.setState(0x9b1d, 0x6ac9, 0xe6a0, 0x8be0, 0xc206, 0x450c, 0x0, 0x0);
        gbc.writeMem(0x9b1d, { 0x42 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6ac9, gbc.sp());
        EXPECT(0x9b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9b1d));
        // 42 037F
        gbc.setState(0x389e, 0x2eac, 0x4a0, 0x9964, 0x820a, 0x76bb, 0x0, 0x0);
        gbc.writeMem(0x389e, { 0x42 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2eac, gbc.sp());
        EXPECT(0x389f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0380
        gbc.setState(0x85c0, 0xa41a, 0xb380, 0xe79e, 0x2c7f, 0x6c02, 0x0, 0x1);
        gbc.writeMem(0x85c0, { 0x42 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa41a, gbc.sp());
        EXPECT(0x85c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x85c0));
        // 42 0381
        gbc.setState(0x610b, 0xfe04, 0x98f0, 0x60ab, 0xf0e1, 0x4fc8, 0x0, 0x0);
        gbc.writeMem(0x610b, { 0x42 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfe04, gbc.sp());
        EXPECT(0x610c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0382
        gbc.setState(0x46a9, 0xf5ec, 0x2f10, 0xe144, 0x93af, 0xad2f, 0x0, 0x0);
        gbc.writeMem(0x46a9, { 0x42 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf5ec, gbc.sp());
        EXPECT(0x46aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0383
        gbc.setState(0x181, 0xe59a, 0xa4b0, 0x9b8d, 0x926f, 0x6636, 0x0, 0x1);
        gbc.writeMem(0x181, { 0x42 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe59a, gbc.sp());
        EXPECT(0x182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0384
        gbc.setState(0xd958, 0x9677, 0x4000, 0xf4bf, 0x4805, 0xfcad, 0x0, 0x1);
        gbc.writeMem(0xd958, { 0x42 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9677, gbc.sp());
        EXPECT(0xd959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd958));
        // 42 0385
        gbc.setState(0xfff, 0x489b, 0xcca0, 0xd61a, 0xe7e7, 0x1755, 0x0, 0x1);
        gbc.writeMem(0xfff, { 0x42 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x489b, gbc.sp());
        EXPECT(0x1000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0386
        gbc.setState(0x6b8f, 0x48de, 0xd830, 0xd09c, 0x90ed, 0xf4a5, 0x0, 0x0);
        gbc.writeMem(0x6b8f, { 0x42 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x48de, gbc.sp());
        EXPECT(0x6b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0387
        gbc.setState(0x40a3, 0xc385, 0x1420, 0xcfa, 0xcf41, 0x1c18, 0x1, 0x0);
        gbc.writeMem(0x40a3, { 0x42 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc385, gbc.sp());
        EXPECT(0x40a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0388
        gbc.setState(0x293a, 0x9c5c, 0xb150, 0xb908, 0x6ae2, 0xce1, 0x0, 0x0);
        gbc.writeMem(0x293a, { 0x42 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9c5c, gbc.sp());
        EXPECT(0x293b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0389
        gbc.setState(0x378d, 0x5877, 0x2f80, 0x82ea, 0x668d, 0x4c6, 0x1, 0x0);
        gbc.writeMem(0x378d, { 0x42 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5877, gbc.sp());
        EXPECT(0x378e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 038A
        gbc.setState(0x3e05, 0xdef7, 0xdc90, 0x77ee, 0x8865, 0xf373, 0x0, 0x0);
        gbc.writeMem(0x3e05, { 0x42 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xdef7, gbc.sp());
        EXPECT(0x3e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 038B
        gbc.setState(0x6a4b, 0xf2db, 0x9f80, 0x79a4, 0x93f2, 0x3ad4, 0x1, 0x1);
        gbc.writeMem(0x6a4b, { 0x42 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf2db, gbc.sp());
        EXPECT(0x6a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 038C
        gbc.setState(0x123a, 0xf6eb, 0x1470, 0x695f, 0x5e49, 0x5d76, 0x1, 0x1);
        gbc.writeMem(0x123a, { 0x42 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf6eb, gbc.sp());
        EXPECT(0x123b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 038D
        gbc.setState(0xc8e1, 0x8dfe, 0x9e50, 0xd11a, 0x7d94, 0x95dc, 0x0, 0x0);
        gbc.writeMem(0xc8e1, { 0x42 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8dfe, gbc.sp());
        EXPECT(0xc8e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc8e1));
        // 42 038E
        gbc.setState(0x36a1, 0x5d6, 0x4d0, 0x765d, 0x162a, 0xfe8d, 0x1, 0x1);
        gbc.writeMem(0x36a1, { 0x42 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5d6, gbc.sp());
        EXPECT(0x36a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 038F
        gbc.setState(0x8fe7, 0x5b7d, 0x22f0, 0x9504, 0x2c2e, 0xbced, 0x0, 0x1);
        gbc.writeMem(0x8fe7, { 0x42 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5b7d, gbc.sp());
        EXPECT(0x8fe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8fe7));
        // 42 0390
        gbc.setState(0x2138, 0xd377, 0x64c0, 0x485f, 0x930b, 0x4f68, 0x0, 0x1);
        gbc.writeMem(0x2138, { 0x42 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd377, gbc.sp());
        EXPECT(0x2139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0391
        gbc.setState(0xba9, 0xe713, 0xf70, 0xc1db, 0xa4b6, 0x3fc5, 0x1, 0x1);
        gbc.writeMem(0xba9, { 0x42 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe713, gbc.sp());
        EXPECT(0xbaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0392
        gbc.setState(0x28a5, 0x1f70, 0x9d50, 0xe9ed, 0x1146, 0x7227, 0x1, 0x1);
        gbc.writeMem(0x28a5, { 0x42 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1f70, gbc.sp());
        EXPECT(0x28a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0393
        gbc.setState(0xa5cb, 0x981b, 0xae60, 0x5f3a, 0xad07, 0xadcb, 0x0, 0x1);
        gbc.writeMem(0xa5cb, { 0x42 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x981b, gbc.sp());
        EXPECT(0xa5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa5cb));
        // 42 0394
        gbc.setState(0xaf3f, 0xd39e, 0x5840, 0x56eb, 0x7983, 0xd486, 0x1, 0x1);
        gbc.writeMem(0xaf3f, { 0x42 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd39e, gbc.sp());
        EXPECT(0xaf40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xaf3f));
        // 42 0395
        gbc.setState(0x5bba, 0x195f, 0xc30, 0x956f, 0xce6, 0xe647, 0x1, 0x1);
        gbc.writeMem(0x5bba, { 0x42 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x195f, gbc.sp());
        EXPECT(0x5bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0396
        gbc.setState(0x5bbe, 0xff87, 0xf470, 0x4221, 0xe070, 0x2862, 0x0, 0x0);
        gbc.writeMem(0x5bbe, { 0x42 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xff87, gbc.sp());
        EXPECT(0x5bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0397
        gbc.setState(0x40a3, 0xedc3, 0x93c0, 0x78c0, 0x1ee5, 0x4c8f, 0x0, 0x1);
        gbc.writeMem(0x40a3, { 0x42 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xedc3, gbc.sp());
        EXPECT(0x40a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 0398
        gbc.setState(0x40f8, 0x14f8, 0x3970, 0xbf16, 0x3e05, 0x2003, 0x0, 0x1);
        gbc.writeMem(0x40f8, { 0x42 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x14f8, gbc.sp());
        EXPECT(0x40f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 0399
        gbc.setState(0xbcaf, 0x299, 0xda50, 0x391, 0x279b, 0xb5f5, 0x0, 0x0);
        gbc.writeMem(0xbcaf, { 0x42 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x299, gbc.sp());
        EXPECT(0xbcb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbcaf));
        // 42 039A
        gbc.setState(0xd978, 0x476c, 0xcc0, 0x7dd1, 0x129, 0x7f70, 0x0, 0x0);
        gbc.writeMem(0xd978, { 0x42 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x476c, gbc.sp());
        EXPECT(0xd979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd978));
        // 42 039B
        gbc.setState(0xb6ef, 0x67ff, 0x5670, 0x58f8, 0xaa49, 0xee69, 0x0, 0x0);
        gbc.writeMem(0xb6ef, { 0x42 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x67ff, gbc.sp());
        EXPECT(0xb6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb6ef));
        // 42 039C
        gbc.setState(0x80b3, 0x7fc6, 0xf7f0, 0x10c3, 0x549f, 0xf054, 0x0, 0x0);
        gbc.writeMem(0x80b3, { 0x42 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7fc6, gbc.sp());
        EXPECT(0x80b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x80b3));
        // 42 039D
        gbc.setState(0xd7e7, 0x3a08, 0x1d70, 0x15f, 0x3c4e, 0x53b6, 0x0, 0x0);
        gbc.writeMem(0xd7e7, { 0x42 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3a08, gbc.sp());
        EXPECT(0xd7e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd7e7));
        // 42 039E
        gbc.setState(0x4be, 0x1f4e, 0xbb70, 0xa4e3, 0xaef9, 0x419c, 0x1, 0x1);
        gbc.writeMem(0x4be, { 0x42 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1f4e, gbc.sp());
        EXPECT(0x4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 039F
        gbc.setState(0xdd77, 0x57be, 0x6610, 0xeb85, 0xbf38, 0x4840, 0x1, 0x0);
        gbc.writeMem(0xdd77, { 0x42 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x57be, gbc.sp());
        EXPECT(0xdd78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdd77));
        // 42 03A0
        gbc.setState(0x672b, 0x5d27, 0x8d00, 0x29eb, 0x256e, 0xf5ba, 0x0, 0x1);
        gbc.writeMem(0x672b, { 0x42 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5d27, gbc.sp());
        EXPECT(0x672c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03A1
        gbc.setState(0x3144, 0xcd4b, 0x7ff0, 0x735e, 0xd641, 0xd6df, 0x0, 0x1);
        gbc.writeMem(0x3144, { 0x42 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcd4b, gbc.sp());
        EXPECT(0x3145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03A2
        gbc.setState(0xafbe, 0xbd64, 0x2960, 0xed6b, 0x4d1a, 0x9582, 0x0, 0x1);
        gbc.writeMem(0xafbe, { 0x42 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbd64, gbc.sp());
        EXPECT(0xafbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xafbe));
        // 42 03A3
        gbc.setState(0xd5b1, 0x9c20, 0xaf60, 0x93c8, 0x6b5, 0xd86c, 0x0, 0x0);
        gbc.writeMem(0xd5b1, { 0x42 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9c20, gbc.sp());
        EXPECT(0xd5b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd5b1));
        // 42 03A4
        gbc.setState(0x5fdc, 0x37a9, 0xbfb0, 0x8167, 0x2af0, 0x2298, 0x1, 0x1);
        gbc.writeMem(0x5fdc, { 0x42 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x37a9, gbc.sp());
        EXPECT(0x5fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03A5
        gbc.setState(0x22b8, 0x8ea9, 0x57c0, 0x2e35, 0x25a0, 0xac6b, 0x1, 0x0);
        gbc.writeMem(0x22b8, { 0x42 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8ea9, gbc.sp());
        EXPECT(0x22b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03A6
        gbc.setState(0x6bb7, 0x5505, 0x31f0, 0x5cc0, 0xfab8, 0xb6bc, 0x0, 0x1);
        gbc.writeMem(0x6bb7, { 0x42 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5505, gbc.sp());
        EXPECT(0x6bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03A7
        gbc.setState(0x7594, 0xee40, 0x8a40, 0xc0b, 0x32e, 0x7ab6, 0x0, 0x1);
        gbc.writeMem(0x7594, { 0x42 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xee40, gbc.sp());
        EXPECT(0x7595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03A8
        gbc.setState(0x7cd1, 0x71d2, 0xabf0, 0x9ac, 0x2057, 0x4a14, 0x1, 0x0);
        gbc.writeMem(0x7cd1, { 0x42 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x71d2, gbc.sp());
        EXPECT(0x7cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03A9
        gbc.setState(0x776f, 0x4377, 0xde20, 0x3546, 0xd170, 0xec4c, 0x1, 0x1);
        gbc.writeMem(0x776f, { 0x42 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4377, gbc.sp());
        EXPECT(0x7770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03AB
        gbc.setState(0x8a2f, 0x8e7c, 0x3e00, 0x3887, 0x5d89, 0x2bac, 0x0, 0x0);
        gbc.writeMem(0x8a2f, { 0x42 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8e7c, gbc.sp());
        EXPECT(0x8a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8a2f));
        // 42 03AC
        gbc.setState(0x6e16, 0x69e, 0x5c10, 0xfa96, 0xff10, 0x42e4, 0x1, 0x0);
        gbc.writeMem(0x6e16, { 0x42 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x69e, gbc.sp());
        EXPECT(0x6e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03AD
        gbc.setState(0x3f76, 0xe113, 0x13f0, 0x5815, 0x61d2, 0xfa7b, 0x1, 0x1);
        gbc.writeMem(0x3f76, { 0x42 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe113, gbc.sp());
        EXPECT(0x3f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03AE
        gbc.setState(0xa852, 0x937b, 0x19c0, 0x9247, 0x7d8f, 0xbc46, 0x0, 0x0);
        gbc.writeMem(0xa852, { 0x42 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x937b, gbc.sp());
        EXPECT(0xa853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa852));
        // 42 03AF
        gbc.setState(0xb01f, 0x2c8f, 0x9170, 0xc8ef, 0xf6ac, 0x39f8, 0x1, 0x0);
        gbc.writeMem(0xb01f, { 0x42 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2c8f, gbc.sp());
        EXPECT(0xb020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb01f));
        // 42 03B0
        gbc.setState(0x8e7d, 0x91cb, 0xadc0, 0x8938, 0xab7e, 0x6029, 0x1, 0x0);
        gbc.writeMem(0x8e7d, { 0x42 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x91cb, gbc.sp());
        EXPECT(0x8e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8e7d));
        // 42 03B1
        gbc.setState(0x4173, 0xd389, 0x7e50, 0xca8, 0xf627, 0xc359, 0x1, 0x0);
        gbc.writeMem(0x4173, { 0x42 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd389, gbc.sp());
        EXPECT(0x4174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03B2
        gbc.setState(0x2b5f, 0x1385, 0xe230, 0x47ac, 0x8bd3, 0xbab2, 0x0, 0x0);
        gbc.writeMem(0x2b5f, { 0x42 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1385, gbc.sp());
        EXPECT(0x2b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03B3
        gbc.setState(0xc0a, 0x281, 0x8ea0, 0xcb72, 0xc6f5, 0xfe0c, 0x1, 0x0);
        gbc.writeMem(0xc0a, { 0x42 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x281, gbc.sp());
        EXPECT(0xc0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03B4
        gbc.setState(0x55da, 0x9ca6, 0xb460, 0xba92, 0x94d, 0x8630, 0x1, 0x1);
        gbc.writeMem(0x55da, { 0x42 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9ca6, gbc.sp());
        EXPECT(0x55db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03B6
        gbc.setState(0x4972, 0x4179, 0x6550, 0x4a9b, 0xa87e, 0x86b9, 0x0, 0x1);
        gbc.writeMem(0x4972, { 0x42 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4179, gbc.sp());
        EXPECT(0x4973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03B7
        gbc.setState(0x4f81, 0x9489, 0x4c40, 0x7816, 0x86c4, 0x969b, 0x1, 0x0);
        gbc.writeMem(0x4f81, { 0x42 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9489, gbc.sp());
        EXPECT(0x4f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03B8
        gbc.setState(0xa732, 0x9648, 0x5d50, 0x1170, 0x3df7, 0x9fe9, 0x0, 0x1);
        gbc.writeMem(0xa732, { 0x42 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9648, gbc.sp());
        EXPECT(0xa733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa732));
        // 42 03B9
        gbc.setState(0x8e60, 0xfd40, 0xf030, 0x1665, 0x193d, 0x2eaf, 0x0, 0x1);
        gbc.writeMem(0x8e60, { 0x42 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfd40, gbc.sp());
        EXPECT(0x8e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8e60));
        // 42 03BA
        gbc.setState(0xccca, 0x9d33, 0xfe60, 0xb408, 0xc432, 0xb8aa, 0x1, 0x0);
        gbc.writeMem(0xccca, { 0x42 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9d33, gbc.sp());
        EXPECT(0xcccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xccca));
        // 42 03BB
        gbc.setState(0x7b96, 0x4185, 0x5920, 0xa51, 0x9945, 0x7733, 0x1, 0x0);
        gbc.writeMem(0x7b96, { 0x42 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4185, gbc.sp());
        EXPECT(0x7b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03BC
        gbc.setState(0x4aa9, 0x38df, 0xa050, 0xef66, 0xf4f0, 0x7ddd, 0x1, 0x1);
        gbc.writeMem(0x4aa9, { 0x42 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x38df, gbc.sp());
        EXPECT(0x4aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03BD
        gbc.setState(0xbbaa, 0x9bcd, 0xb690, 0xfb70, 0x748b, 0xdc61, 0x0, 0x0);
        gbc.writeMem(0xbbaa, { 0x42 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9bcd, gbc.sp());
        EXPECT(0xbbab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbbaa));
        // 42 03BE
        gbc.setState(0x5c99, 0x5308, 0x5cb0, 0x18a4, 0xde27, 0x46ce, 0x0, 0x0);
        gbc.writeMem(0x5c99, { 0x42 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5308, gbc.sp());
        EXPECT(0x5c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03BF
        gbc.setState(0xcbf1, 0xf3ba, 0xfbb0, 0xd16d, 0x9fda, 0x6333, 0x1, 0x0);
        gbc.writeMem(0xcbf1, { 0x42 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf3ba, gbc.sp());
        EXPECT(0xcbf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcbf1));
        // 42 03C0
        gbc.setState(0x9e9, 0xb78c, 0x3160, 0xb582, 0x1dca, 0x6515, 0x0, 0x1);
        gbc.writeMem(0x9e9, { 0x42 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb78c, gbc.sp());
        EXPECT(0x9ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03C1
        gbc.setState(0xcc57, 0xe03e, 0xf6d0, 0x5856, 0xe69f, 0xf717, 0x0, 0x0);
        gbc.writeMem(0xcc57, { 0x42 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe03e, gbc.sp());
        EXPECT(0xcc58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcc57));
        // 42 03C2
        gbc.setState(0x7b58, 0xcf5e, 0xa5b0, 0x77ad, 0xa37e, 0xbba4, 0x0, 0x1);
        gbc.writeMem(0x7b58, { 0x42 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcf5e, gbc.sp());
        EXPECT(0x7b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03C3
        gbc.setState(0x7f41, 0xa852, 0xdc60, 0x82f9, 0x151b, 0x8e37, 0x1, 0x1);
        gbc.writeMem(0x7f41, { 0x42 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa852, gbc.sp());
        EXPECT(0x7f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03C4
        gbc.setState(0x3c1c, 0x7af3, 0x7e20, 0x9e24, 0x11da, 0x6c4e, 0x1, 0x0);
        gbc.writeMem(0x3c1c, { 0x42 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7af3, gbc.sp());
        EXPECT(0x3c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03C5
        gbc.setState(0xea2c, 0x7684, 0x8f00, 0x5e80, 0xa23e, 0xefc7, 0x0, 0x1);
        gbc.writeMem(0xea2c, { 0x42 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7684, gbc.sp());
        EXPECT(0xea2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xea2c));
        // 42 03C6
        gbc.setState(0xa2e2, 0x4ea3, 0x12d0, 0x1d21, 0xd092, 0xb249, 0x0, 0x0);
        gbc.writeMem(0xa2e2, { 0x42 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4ea3, gbc.sp());
        EXPECT(0xa2e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa2e2));
        // 42 03C7
        gbc.setState(0xaa3d, 0xea74, 0x3540, 0x84ef, 0x8d30, 0x2aa1, 0x1, 0x0);
        gbc.writeMem(0xaa3d, { 0x42 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xea74, gbc.sp());
        EXPECT(0xaa3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xaa3d));
        // 42 03C8
        gbc.setState(0x1534, 0xb24e, 0x2670, 0xd991, 0xce14, 0x1c45, 0x0, 0x1);
        gbc.writeMem(0x1534, { 0x42 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb24e, gbc.sp());
        EXPECT(0x1535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03CA
        gbc.setState(0x9491, 0xd46, 0x72f0, 0xf6c4, 0xfd7a, 0x52b4, 0x1, 0x1);
        gbc.writeMem(0x9491, { 0x42 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd46, gbc.sp());
        EXPECT(0x9492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9491));
        // 42 03CB
        gbc.setState(0x94f5, 0xf507, 0x20, 0x855e, 0x2e19, 0x69bf, 0x1, 0x0);
        gbc.writeMem(0x94f5, { 0x42 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf507, gbc.sp());
        EXPECT(0x94f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x94f5));
        // 42 03CC
        gbc.setState(0xaea4, 0x80fa, 0x9f0, 0x12ac, 0x57c6, 0x6010, 0x1, 0x1);
        gbc.writeMem(0xaea4, { 0x42 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x80fa, gbc.sp());
        EXPECT(0xaea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xaea4));
        // 42 03CD
        gbc.setState(0xd940, 0xaca2, 0xa900, 0x7ae9, 0x30cc, 0xa61f, 0x0, 0x0);
        gbc.writeMem(0xd940, { 0x42 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xaca2, gbc.sp());
        EXPECT(0xd941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd940));
        // 42 03CE
        gbc.setState(0xaa09, 0x6530, 0x67d0, 0xfcef, 0xefd1, 0x9996, 0x0, 0x0);
        gbc.writeMem(0xaa09, { 0x42 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6530, gbc.sp());
        EXPECT(0xaa0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xaa09));
        // 42 03CF
        gbc.setState(0x23c9, 0xd520, 0x6080, 0xbeb7, 0xf628, 0xb4f4, 0x0, 0x1);
        gbc.writeMem(0x23c9, { 0x42 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd520, gbc.sp());
        EXPECT(0x23ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03D0
        gbc.setState(0xe281, 0x69c2, 0xf030, 0xd97, 0x1e03, 0xeb83, 0x0, 0x0);
        gbc.writeMem(0xe281, { 0x42 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x69c2, gbc.sp());
        EXPECT(0xe282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe281));
        // 42 03D1
        gbc.setState(0x1a3e, 0xfe0b, 0xd020, 0xb83e, 0x2a5f, 0x4086, 0x1, 0x1);
        gbc.writeMem(0x1a3e, { 0x42 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xfe0b, gbc.sp());
        EXPECT(0x1a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03D2
        gbc.setState(0x6f7f, 0x3650, 0xb850, 0x5fec, 0xd727, 0x7ce3, 0x0, 0x1);
        gbc.writeMem(0x6f7f, { 0x42 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3650, gbc.sp());
        EXPECT(0x6f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03D3
        gbc.setState(0xd454, 0x455a, 0x910, 0xacf5, 0x6c38, 0x8e9f, 0x1, 0x0);
        gbc.writeMem(0xd454, { 0x42 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x455a, gbc.sp());
        EXPECT(0xd455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd454));
        // 42 03D4
        gbc.setState(0x265d, 0x9eb4, 0x4540, 0xa765, 0xa8f7, 0x70a6, 0x1, 0x1);
        gbc.writeMem(0x265d, { 0x42 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9eb4, gbc.sp());
        EXPECT(0x265e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03D5
        gbc.setState(0x179b, 0xac65, 0x2290, 0x2817, 0xf5bb, 0x4a36, 0x0, 0x1);
        gbc.writeMem(0x179b, { 0x42 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xac65, gbc.sp());
        EXPECT(0x179c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03D6
        gbc.setState(0x44b1, 0xfd26, 0x1190, 0xe172, 0x47f1, 0xa161, 0x1, 0x0);
        gbc.writeMem(0x44b1, { 0x42 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfd26, gbc.sp());
        EXPECT(0x44b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03D7
        gbc.setState(0xbe8c, 0xe598, 0x85a0, 0xb1ad, 0x3556, 0xbb1e, 0x1, 0x1);
        gbc.writeMem(0xbe8c, { 0x42 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe598, gbc.sp());
        EXPECT(0xbe8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xbe8c));
        // 42 03D8
        gbc.setState(0x1b5, 0x7c7, 0xbd20, 0x59de, 0x980d, 0x75ba, 0x0, 0x0);
        gbc.writeMem(0x1b5, { 0x42 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7c7, gbc.sp());
        EXPECT(0x1b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03D9
        gbc.setState(0x44de, 0x912a, 0xf050, 0xda52, 0x7182, 0x9a41, 0x0, 0x1);
        gbc.writeMem(0x44de, { 0x42 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x912a, gbc.sp());
        EXPECT(0x44df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03DA
        gbc.setState(0x5b55, 0xd135, 0xb750, 0x90f8, 0x1a66, 0x9d12, 0x1, 0x1);
        gbc.writeMem(0x5b55, { 0x42 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd135, gbc.sp());
        EXPECT(0x5b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03DC
        gbc.setState(0x67b6, 0xa3d0, 0x6d80, 0xfcff, 0x616b, 0x4fa3, 0x1, 0x1);
        gbc.writeMem(0x67b6, { 0x42 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa3d0, gbc.sp());
        EXPECT(0x67b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03DD
        gbc.setState(0xdf4, 0xe49d, 0x1490, 0xb9f0, 0x9b62, 0x6823, 0x0, 0x1);
        gbc.writeMem(0xdf4, { 0x42 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe49d, gbc.sp());
        EXPECT(0xdf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03DE
        gbc.setState(0xc880, 0xe61, 0x1ad0, 0xcf76, 0xa8f1, 0x3c62, 0x1, 0x0);
        gbc.writeMem(0xc880, { 0x42 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe61, gbc.sp());
        EXPECT(0xc881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc880));
        // 42 03DF
        gbc.setState(0x5e4b, 0x935, 0x4780, 0x10f1, 0x668a, 0x831e, 0x0, 0x1);
        gbc.writeMem(0x5e4b, { 0x42 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x935, gbc.sp());
        EXPECT(0x5e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03E0
        gbc.setState(0x2adf, 0x77a8, 0xa390, 0xb10a, 0x66b3, 0x2740, 0x0, 0x0);
        gbc.writeMem(0x2adf, { 0x42 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x77a8, gbc.sp());
        EXPECT(0x2ae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03E1
        gbc.setState(0xe12b, 0x9126, 0xc1a0, 0x30aa, 0x2aa5, 0x87a, 0x1, 0x1);
        gbc.writeMem(0xe12b, { 0x42 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9126, gbc.sp());
        EXPECT(0xe12c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xe12b));
        // 42 03E2
        gbc.setState(0x69c6, 0x8a33, 0x3bb0, 0x50c3, 0x7c73, 0xb318, 0x1, 0x0);
        gbc.writeMem(0x69c6, { 0x42 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8a33, gbc.sp());
        EXPECT(0x69c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 42 03E3
        gbc.setState(0xee89, 0x1edd, 0xda60, 0x283, 0x17f2, 0x29df, 0x0, 0x1);
        gbc.writeMem(0xee89, { 0x42 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1edd, gbc.sp());
        EXPECT(0xee8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xee89));
        // 42 03E4
        gbc.setState(0xba0, 0xd957, 0x3040, 0x3a40, 0x4480, 0x414d, 0x0, 0x1);
        gbc.writeMem(0xba0, { 0x42 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd957, gbc.sp());
        EXPECT(0xba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03E6
        gbc.setState(0x517f, 0x5369, 0x4320, 0x98a, 0xf2db, 0x3ca1, 0x0, 0x0);
        gbc.writeMem(0x517f, { 0x42 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5369, gbc.sp());
        EXPECT(0x5180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 42 03E7
        gbc.setState(0x1e0a, 0x926c, 0x4de0, 0x4766, 0x27ed, 0xf60d, 0x0, 0x0);
        gbc.writeMem(0x1e0a, { 0x42 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x926c, gbc.sp());
        EXPECT(0x1e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
