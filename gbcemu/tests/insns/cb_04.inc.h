    TEST(gbcemu, opcode_cb_04) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 04 0000
        gbc.setState(0x4df6, 0x3e8b, 0x4800, 0x88e1, 0xdbd1, 0x88ef, 0x0, 0x1);
        gbc.writeMem(0x4df6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3e8b, gbc.sp());
        EXPECT(0x4df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0001
        gbc.setState(0x8450, 0xbeda, 0xffc0, 0x57ef, 0x435, 0xe9b1, 0x0, 0x0);
        gbc.writeMem(0x8450, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbeda, gbc.sp());
        EXPECT(0x8452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8450));
        EXPECT(0x4, gbc.readMem(0x8451));
        // CB 04 0002
        gbc.setState(0xc8fc, 0x4fa9, 0xa1e0, 0x4aff, 0x3755, 0x2d44, 0x1, 0x1);
        gbc.writeMem(0xc8fc, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4fa9, gbc.sp());
        EXPECT(0xc8fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8fc));
        EXPECT(0x4, gbc.readMem(0xc8fd));
        // CB 04 0003
        gbc.setState(0xedf4, 0x4de0, 0xf40, 0xa832, 0x10dc, 0x7651, 0x0, 0x1);
        gbc.writeMem(0xedf4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4de0, gbc.sp());
        EXPECT(0xedf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf4));
        EXPECT(0x4, gbc.readMem(0xedf5));
        // CB 04 0004
        gbc.setState(0xcd21, 0x44fa, 0x19d0, 0xe598, 0xb606, 0xdcc, 0x1, 0x1);
        gbc.writeMem(0xcd21, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x44fa, gbc.sp());
        EXPECT(0xcd23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd21));
        EXPECT(0x4, gbc.readMem(0xcd22));
        // CB 04 0005
        gbc.setState(0x7259, 0x9a5d, 0x6050, 0x58b0, 0x7a4b, 0xcfc2, 0x1, 0x1);
        gbc.writeMem(0x7259, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9a5d, gbc.sp());
        EXPECT(0x725b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0006
        gbc.setState(0xa23a, 0xbc8d, 0x7cd0, 0xc981, 0x611d, 0xc590, 0x0, 0x0);
        gbc.writeMem(0xa23a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbc8d, gbc.sp());
        EXPECT(0xa23c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa23a));
        EXPECT(0x4, gbc.readMem(0xa23b));
        // CB 04 0007
        gbc.setState(0x28c1, 0xd95b, 0x9d50, 0xfead, 0x3ca5, 0x76d7, 0x1, 0x0);
        gbc.writeMem(0x28c1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd95b, gbc.sp());
        EXPECT(0x28c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0008
        gbc.setState(0x6499, 0xcd2a, 0x3d0, 0x413f, 0xb3d7, 0x3a77, 0x1, 0x1);
        gbc.writeMem(0x6499, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcd2a, gbc.sp());
        EXPECT(0x649b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0009
        gbc.setState(0xad11, 0x1129, 0x2760, 0x4eed, 0x72fc, 0x2cb0, 0x0, 0x0);
        gbc.writeMem(0xad11, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1129, gbc.sp());
        EXPECT(0xad13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad11));
        EXPECT(0x4, gbc.readMem(0xad12));
        // CB 04 000A
        gbc.setState(0xab8b, 0x3c3c, 0xf750, 0x2218, 0x9931, 0xaeae, 0x1, 0x0);
        gbc.writeMem(0xab8b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3c3c, gbc.sp());
        EXPECT(0xab8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab8b));
        EXPECT(0x4, gbc.readMem(0xab8c));
        // CB 04 000B
        gbc.setState(0x9c3c, 0x38ab, 0x7610, 0x4da6, 0x5426, 0x6d0d, 0x1, 0x0);
        gbc.writeMem(0x9c3c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x38ab, gbc.sp());
        EXPECT(0x9c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3c));
        EXPECT(0x4, gbc.readMem(0x9c3d));
        // CB 04 000C
        gbc.setState(0x1d, 0x6126, 0x4af0, 0xdfe4, 0xce92, 0xc8f8, 0x0, 0x1);
        gbc.writeMem(0x1d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6126, gbc.sp());
        EXPECT(0x1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 000D
        gbc.setState(0x87b6, 0x4661, 0xd3f0, 0x4223, 0x70ab, 0xfe9, 0x0, 0x0);
        gbc.writeMem(0x87b6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4661, gbc.sp());
        EXPECT(0x87b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b6));
        EXPECT(0x4, gbc.readMem(0x87b7));
        // CB 04 000E
        gbc.setState(0x1575, 0xe570, 0xb60, 0x544a, 0x96a7, 0x5da2, 0x0, 0x1);
        gbc.writeMem(0x1575, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe570, gbc.sp());
        EXPECT(0x1577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 000F
        gbc.setState(0x795e, 0x739e, 0xebc0, 0x3c7d, 0x4a3f, 0x911d, 0x1, 0x1);
        gbc.writeMem(0x795e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x739e, gbc.sp());
        EXPECT(0x7960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0010
        gbc.setState(0xb994, 0x48e6, 0x3ac0, 0x15d3, 0xeb02, 0x5915, 0x0, 0x0);
        gbc.writeMem(0xb994, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x48e6, gbc.sp());
        EXPECT(0xb996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb994));
        EXPECT(0x4, gbc.readMem(0xb995));
        // CB 04 0011
        gbc.setState(0xac22, 0xe65b, 0xe4a0, 0xcf78, 0xe419, 0xfdca, 0x1, 0x1);
        gbc.writeMem(0xac22, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe65b, gbc.sp());
        EXPECT(0xac24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac22));
        EXPECT(0x4, gbc.readMem(0xac23));
        // CB 04 0012
        gbc.setState(0xbd2f, 0xafba, 0xa50, 0xd7b1, 0xa8cc, 0x15df, 0x0, 0x1);
        gbc.writeMem(0xbd2f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xafba, gbc.sp());
        EXPECT(0xbd31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd2f));
        EXPECT(0x4, gbc.readMem(0xbd30));
        // CB 04 0013
        gbc.setState(0xb5d6, 0xeaf, 0xef20, 0x96a0, 0x8e3e, 0xfc38, 0x1, 0x0);
        gbc.writeMem(0xb5d6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xeaf, gbc.sp());
        EXPECT(0xb5d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5d6));
        EXPECT(0x4, gbc.readMem(0xb5d7));
        // CB 04 0014
        gbc.setState(0x53ba, 0x58c0, 0x5e00, 0x283d, 0x9ced, 0x30dc, 0x0, 0x0);
        gbc.writeMem(0x53ba, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x58c0, gbc.sp());
        EXPECT(0x53bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0015
        gbc.setState(0x3ce5, 0x83d8, 0xf4a0, 0x42d4, 0x1018, 0x2e23, 0x0, 0x0);
        gbc.writeMem(0x3ce5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x83d8, gbc.sp());
        EXPECT(0x3ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0016
        gbc.setState(0xce60, 0x35ad, 0x7ba0, 0xa38e, 0x216d, 0x5b3b, 0x1, 0x1);
        gbc.writeMem(0xce60, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x35ad, gbc.sp());
        EXPECT(0xce62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce60));
        EXPECT(0x4, gbc.readMem(0xce61));
        // CB 04 0017
        gbc.setState(0x497, 0xfede, 0x8160, 0xcdab, 0x7e52, 0x301b, 0x0, 0x0);
        gbc.writeMem(0x497, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfede, gbc.sp());
        EXPECT(0x499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0018
        gbc.setState(0x9cf8, 0xb69b, 0xaae0, 0x27ff, 0xd33e, 0xa069, 0x1, 0x0);
        gbc.writeMem(0x9cf8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb69b, gbc.sp());
        EXPECT(0x9cfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf8));
        EXPECT(0x4, gbc.readMem(0x9cf9));
        // CB 04 0019
        gbc.setState(0xd557, 0x73ef, 0x2750, 0xec7d, 0x1485, 0xec53, 0x0, 0x0);
        gbc.writeMem(0xd557, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x73ef, gbc.sp());
        EXPECT(0xd559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd557));
        EXPECT(0x4, gbc.readMem(0xd558));
        // CB 04 001A
        gbc.setState(0xcb6d, 0xce4f, 0xd610, 0x58a2, 0x89cb, 0x8b68, 0x1, 0x1);
        gbc.writeMem(0xcb6d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xce4f, gbc.sp());
        EXPECT(0xcb6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb6d));
        EXPECT(0x4, gbc.readMem(0xcb6e));
        // CB 04 001B
        gbc.setState(0x2dd6, 0x7f3a, 0x81c0, 0x430b, 0x4c3b, 0x880, 0x0, 0x0);
        gbc.writeMem(0x2dd6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7f3a, gbc.sp());
        EXPECT(0x2dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 001D
        gbc.setState(0x9ef1, 0x92e3, 0xe180, 0xa93d, 0x3c41, 0x36ee, 0x1, 0x1);
        gbc.writeMem(0x9ef1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x92e3, gbc.sp());
        EXPECT(0x9ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef1));
        EXPECT(0x4, gbc.readMem(0x9ef2));
        // CB 04 001E
        gbc.setState(0x65df, 0x8d37, 0x3c70, 0x76bf, 0x18bd, 0xeba9, 0x0, 0x0);
        gbc.writeMem(0x65df, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8d37, gbc.sp());
        EXPECT(0x65e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 001F
        gbc.setState(0xe5b, 0xaa84, 0x4ce0, 0x5b07, 0x7e75, 0xf8d0, 0x0, 0x0);
        gbc.writeMem(0xe5b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xaa84, gbc.sp());
        EXPECT(0xe5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0020
        gbc.setState(0xc4da, 0x6c8f, 0x2ba0, 0x724, 0x67a3, 0xc223, 0x0, 0x1);
        gbc.writeMem(0xc4da, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6c8f, gbc.sp());
        EXPECT(0xc4dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4da));
        EXPECT(0x4, gbc.readMem(0xc4db));
        // CB 04 0021
        gbc.setState(0x283d, 0xeca6, 0xd860, 0x36f, 0x86d7, 0xace8, 0x1, 0x0);
        gbc.writeMem(0x283d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xeca6, gbc.sp());
        EXPECT(0x283f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0022
        gbc.setState(0x7408, 0x258c, 0x6680, 0x506d, 0xdb06, 0x265f, 0x1, 0x1);
        gbc.writeMem(0x7408, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x258c, gbc.sp());
        EXPECT(0x740a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0023
        gbc.setState(0xe1c7, 0xed0a, 0x10f0, 0xfe84, 0xe50e, 0x926d, 0x1, 0x1);
        gbc.writeMem(0xe1c7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xed0a, gbc.sp());
        EXPECT(0xe1c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c7));
        EXPECT(0x4, gbc.readMem(0xe1c8));
        // CB 04 0024
        gbc.setState(0x4b0b, 0xb1c, 0x13a0, 0x66d4, 0x4328, 0x4a42, 0x0, 0x0);
        gbc.writeMem(0x4b0b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb1c, gbc.sp());
        EXPECT(0x4b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0025
        gbc.setState(0x1a9c, 0x434c, 0x7b80, 0x7ac4, 0xf0d, 0xe9a6, 0x1, 0x0);
        gbc.writeMem(0x1a9c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x434c, gbc.sp());
        EXPECT(0x1a9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0026
        gbc.setState(0x72b2, 0x7e0, 0xd080, 0x97e6, 0x86e0, 0x4103, 0x0, 0x1);
        gbc.writeMem(0x72b2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7e0, gbc.sp());
        EXPECT(0x72b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0027
        gbc.setState(0x28d5, 0x9554, 0x9040, 0x54e5, 0xa2ec, 0x2bef, 0x1, 0x0);
        gbc.writeMem(0x28d5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9554, gbc.sp());
        EXPECT(0x28d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0028
        gbc.setState(0xa321, 0x4d72, 0x9ca0, 0x9c0f, 0x1730, 0xcd55, 0x1, 0x0);
        gbc.writeMem(0xa321, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4d72, gbc.sp());
        EXPECT(0xa323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa321));
        EXPECT(0x4, gbc.readMem(0xa322));
        // CB 04 0029
        gbc.setState(0xa701, 0xcab0, 0x1920, 0xe2cc, 0x1291, 0x3417, 0x1, 0x1);
        gbc.writeMem(0xa701, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xcab0, gbc.sp());
        EXPECT(0xa703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa701));
        EXPECT(0x4, gbc.readMem(0xa702));
        // CB 04 002A
        gbc.setState(0x570e, 0x62d4, 0xc3d0, 0x3af1, 0x783, 0x9402, 0x1, 0x1);
        gbc.writeMem(0x570e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x62d4, gbc.sp());
        EXPECT(0x5710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 002B
        gbc.setState(0xa571, 0xfca3, 0xb1b0, 0x5d2f, 0xb475, 0x788b, 0x0, 0x1);
        gbc.writeMem(0xa571, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfca3, gbc.sp());
        EXPECT(0xa573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa571));
        EXPECT(0x4, gbc.readMem(0xa572));
        // CB 04 002C
        gbc.setState(0x6d12, 0x349e, 0xcdc0, 0xa435, 0x2757, 0x983, 0x1, 0x0);
        gbc.writeMem(0x6d12, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x349e, gbc.sp());
        EXPECT(0x6d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 002D
        gbc.setState(0x1d50, 0xe6af, 0x20f0, 0xe536, 0xa7cd, 0x6342, 0x1, 0x1);
        gbc.writeMem(0x1d50, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe6af, gbc.sp());
        EXPECT(0x1d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 002E
        gbc.setState(0xe892, 0x2845, 0xbe0, 0x1d13, 0xd97b, 0x632, 0x0, 0x1);
        gbc.writeMem(0xe892, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2845, gbc.sp());
        EXPECT(0xe894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe892));
        EXPECT(0x4, gbc.readMem(0xe893));
        // CB 04 002F
        gbc.setState(0x1810, 0xc233, 0x8ac0, 0x21a2, 0xfb64, 0xeefc, 0x0, 0x0);
        gbc.writeMem(0x1810, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc233, gbc.sp());
        EXPECT(0x1812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0030
        gbc.setState(0x87be, 0x7d07, 0x6140, 0x2ac5, 0xde80, 0xaa08, 0x1, 0x0);
        gbc.writeMem(0x87be, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7d07, gbc.sp());
        EXPECT(0x87c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87be));
        EXPECT(0x4, gbc.readMem(0x87bf));
        // CB 04 0031
        gbc.setState(0xefc1, 0x58af, 0x1270, 0x75d1, 0x9821, 0xa140, 0x1, 0x1);
        gbc.writeMem(0xefc1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x58af, gbc.sp());
        EXPECT(0xefc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc1));
        EXPECT(0x4, gbc.readMem(0xefc2));
        // CB 04 0032
        gbc.setState(0xc4bb, 0xe596, 0x9020, 0x9432, 0x211b, 0x59ae, 0x1, 0x0);
        gbc.writeMem(0xc4bb, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe596, gbc.sp());
        EXPECT(0xc4bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4bb));
        EXPECT(0x4, gbc.readMem(0xc4bc));
        // CB 04 0033
        gbc.setState(0xbd18, 0x9dcc, 0x4f90, 0x3c4, 0xe8f, 0xbac2, 0x1, 0x1);
        gbc.writeMem(0xbd18, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9dcc, gbc.sp());
        EXPECT(0xbd1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd18));
        EXPECT(0x4, gbc.readMem(0xbd19));
        // CB 04 0034
        gbc.setState(0x1090, 0x2d7a, 0x5930, 0x908a, 0x4fc6, 0xad9d, 0x1, 0x0);
        gbc.writeMem(0x1090, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2d7a, gbc.sp());
        EXPECT(0x1092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0035
        gbc.setState(0x72df, 0x5669, 0x5d90, 0x4fd, 0x1750, 0x4add, 0x0, 0x1);
        gbc.writeMem(0x72df, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5669, gbc.sp());
        EXPECT(0x72e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0036
        gbc.setState(0x66f9, 0x2f17, 0x8450, 0x111b, 0x27d0, 0xb74b, 0x0, 0x0);
        gbc.writeMem(0x66f9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2f17, gbc.sp());
        EXPECT(0x66fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0037
        gbc.setState(0x4b05, 0xb157, 0xd450, 0xac29, 0x81cd, 0xf51, 0x1, 0x1);
        gbc.writeMem(0x4b05, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb157, gbc.sp());
        EXPECT(0x4b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0038
        gbc.setState(0xaf6c, 0xdd13, 0x4dd0, 0x2409, 0x3d1c, 0x9a21, 0x0, 0x1);
        gbc.writeMem(0xaf6c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdd13, gbc.sp());
        EXPECT(0xaf6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6c));
        EXPECT(0x4, gbc.readMem(0xaf6d));
        // CB 04 0039
        gbc.setState(0xd71e, 0x643b, 0xa4a0, 0x5790, 0xe065, 0xc5c8, 0x1, 0x1);
        gbc.writeMem(0xd71e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x643b, gbc.sp());
        EXPECT(0xd720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71e));
        EXPECT(0x4, gbc.readMem(0xd71f));
        // CB 04 003A
        gbc.setState(0xb540, 0x34ef, 0x9570, 0x914, 0x4672, 0xbf6c, 0x0, 0x1);
        gbc.writeMem(0xb540, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x34ef, gbc.sp());
        EXPECT(0xb542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb540));
        EXPECT(0x4, gbc.readMem(0xb541));
        // CB 04 003B
        gbc.setState(0xce55, 0xf9be, 0xd700, 0x6eb7, 0xbb41, 0x29ae, 0x1, 0x1);
        gbc.writeMem(0xce55, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf9be, gbc.sp());
        EXPECT(0xce57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce55));
        EXPECT(0x4, gbc.readMem(0xce56));
        // CB 04 003C
        gbc.setState(0x9acf, 0xee8d, 0x8650, 0x9ea9, 0xfbf, 0x5f2f, 0x1, 0x0);
        gbc.writeMem(0x9acf, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xee8d, gbc.sp());
        EXPECT(0x9ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9acf));
        EXPECT(0x4, gbc.readMem(0x9ad0));
        // CB 04 003D
        gbc.setState(0x43be, 0x5dde, 0x5bb0, 0xed67, 0x6e0e, 0x57d5, 0x0, 0x1);
        gbc.writeMem(0x43be, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5dde, gbc.sp());
        EXPECT(0x43c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 003E
        gbc.setState(0xd9c, 0x88d1, 0x3930, 0x43af, 0x7f08, 0x23e3, 0x0, 0x1);
        gbc.writeMem(0xd9c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x88d1, gbc.sp());
        EXPECT(0xd9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 003F
        gbc.setState(0x844c, 0xc04b, 0xc7a0, 0xd0fd, 0xbb4a, 0x975b, 0x1, 0x0);
        gbc.writeMem(0x844c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc04b, gbc.sp());
        EXPECT(0x844e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x844c));
        EXPECT(0x4, gbc.readMem(0x844d));
        // CB 04 0040
        gbc.setState(0x11db, 0xf74e, 0x86a0, 0x4214, 0x6015, 0xeb26, 0x0, 0x0);
        gbc.writeMem(0x11db, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf74e, gbc.sp());
        EXPECT(0x11dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0041
        gbc.setState(0x4b73, 0x492e, 0x88f0, 0x22ff, 0xc38, 0x8ca8, 0x1, 0x0);
        gbc.writeMem(0x4b73, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x492e, gbc.sp());
        EXPECT(0x4b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0042
        gbc.setState(0x9b60, 0x51db, 0xc050, 0x91ab, 0x837c, 0x8d65, 0x0, 0x1);
        gbc.writeMem(0x9b60, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x51db, gbc.sp());
        EXPECT(0x9b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b60));
        EXPECT(0x4, gbc.readMem(0x9b61));
        // CB 04 0044
        gbc.setState(0x2b42, 0x592c, 0xc7c0, 0x742c, 0x9cf3, 0xe2fa, 0x1, 0x0);
        gbc.writeMem(0x2b42, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x592c, gbc.sp());
        EXPECT(0x2b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0046
        gbc.setState(0x6269, 0xae7b, 0xa40, 0xd0da, 0xd244, 0xa1bf, 0x0, 0x1);
        gbc.writeMem(0x6269, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xae7b, gbc.sp());
        EXPECT(0x626b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0047
        gbc.setState(0xce64, 0xdac9, 0x3e00, 0x7716, 0xce4b, 0x53f3, 0x1, 0x1);
        gbc.writeMem(0xce64, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdac9, gbc.sp());
        EXPECT(0xce66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce64));
        EXPECT(0x4, gbc.readMem(0xce65));
        // CB 04 0048
        gbc.setState(0xd40d, 0xeed2, 0xf2d0, 0xddbc, 0x9039, 0x6719, 0x1, 0x0);
        gbc.writeMem(0xd40d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xeed2, gbc.sp());
        EXPECT(0xd40f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd40d));
        EXPECT(0x4, gbc.readMem(0xd40e));
        // CB 04 0049
        gbc.setState(0x71a8, 0x765f, 0xa0b0, 0xf511, 0xe1b6, 0x1ea5, 0x0, 0x0);
        gbc.writeMem(0x71a8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x765f, gbc.sp());
        EXPECT(0x71aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 004A
        gbc.setState(0x2810, 0xf68, 0x3110, 0x4d2e, 0x8a5d, 0x9b90, 0x1, 0x1);
        gbc.writeMem(0x2810, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf68, gbc.sp());
        EXPECT(0x2812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 004B
        gbc.setState(0x2f8c, 0x858, 0xe320, 0x6653, 0xd2c3, 0xfef3, 0x1, 0x0);
        gbc.writeMem(0x2f8c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x858, gbc.sp());
        EXPECT(0x2f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 004C
        gbc.setState(0x92a2, 0xb4cf, 0x2f80, 0x60d1, 0xbf8c, 0xcf6f, 0x0, 0x0);
        gbc.writeMem(0x92a2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb4cf, gbc.sp());
        EXPECT(0x92a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a2));
        EXPECT(0x4, gbc.readMem(0x92a3));
        // CB 04 004D
        gbc.setState(0x8ee5, 0x602c, 0x76c0, 0x82fb, 0x3257, 0x96d2, 0x0, 0x1);
        gbc.writeMem(0x8ee5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x602c, gbc.sp());
        EXPECT(0x8ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee5));
        EXPECT(0x4, gbc.readMem(0x8ee6));
        // CB 04 004E
        gbc.setState(0x73c4, 0xc0a0, 0xfb50, 0xa8e2, 0xc712, 0x9494, 0x0, 0x1);
        gbc.writeMem(0x73c4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc0a0, gbc.sp());
        EXPECT(0x73c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 004F
        gbc.setState(0x928f, 0xeaa3, 0x8ce0, 0x51ea, 0xcf7e, 0x7860, 0x1, 0x1);
        gbc.writeMem(0x928f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xeaa3, gbc.sp());
        EXPECT(0x9291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928f));
        EXPECT(0x4, gbc.readMem(0x9290));
        // CB 04 0050
        gbc.setState(0x618a, 0x6187, 0x44b0, 0x3e81, 0xfbd8, 0x7b07, 0x1, 0x0);
        gbc.writeMem(0x618a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6187, gbc.sp());
        EXPECT(0x618c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0051
        gbc.setState(0x989e, 0x3160, 0x7ef0, 0x1c40, 0xd1d2, 0xd04c, 0x1, 0x1);
        gbc.writeMem(0x989e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3160, gbc.sp());
        EXPECT(0x98a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x989e));
        EXPECT(0x4, gbc.readMem(0x989f));
        // CB 04 0052
        gbc.setState(0x3bb4, 0x9550, 0x55c0, 0xf61, 0x9940, 0x549e, 0x1, 0x0);
        gbc.writeMem(0x3bb4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9550, gbc.sp());
        EXPECT(0x3bb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0053
        gbc.setState(0x7eb5, 0x9d0c, 0xde0, 0xd2d8, 0xd06d, 0x3568, 0x0, 0x0);
        gbc.writeMem(0x7eb5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9d0c, gbc.sp());
        EXPECT(0x7eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0054
        gbc.setState(0x43ea, 0xaae8, 0xc40, 0x2f9b, 0x2da0, 0xb5ba, 0x1, 0x1);
        gbc.writeMem(0x43ea, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xaae8, gbc.sp());
        EXPECT(0x43ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0055
        gbc.setState(0x3301, 0xc4c7, 0xe990, 0x87cb, 0xbdcc, 0xf4ce, 0x1, 0x1);
        gbc.writeMem(0x3301, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc4c7, gbc.sp());
        EXPECT(0x3303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0056
        gbc.setState(0x909f, 0x6297, 0xb5a0, 0xabc0, 0xd8ec, 0xc4d2, 0x0, 0x1);
        gbc.writeMem(0x909f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6297, gbc.sp());
        EXPECT(0x90a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x909f));
        EXPECT(0x4, gbc.readMem(0x90a0));
        // CB 04 0058
        gbc.setState(0x75f6, 0x72ae, 0xe380, 0x1fd7, 0x2e92, 0xe29c, 0x0, 0x0);
        gbc.writeMem(0x75f6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x72ae, gbc.sp());
        EXPECT(0x75f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0059
        gbc.setState(0xa238, 0x4db2, 0xc990, 0xedba, 0xac6e, 0x3423, 0x0, 0x0);
        gbc.writeMem(0xa238, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4db2, gbc.sp());
        EXPECT(0xa23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa238));
        EXPECT(0x4, gbc.readMem(0xa239));
        // CB 04 005A
        gbc.setState(0xd4f5, 0xa537, 0x37d0, 0xa112, 0xeb2c, 0xf6b5, 0x1, 0x1);
        gbc.writeMem(0xd4f5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa537, gbc.sp());
        EXPECT(0xd4f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f5));
        EXPECT(0x4, gbc.readMem(0xd4f6));
        // CB 04 005B
        gbc.setState(0xc8aa, 0x8698, 0x2fa0, 0x55b7, 0x9ecb, 0x7890, 0x0, 0x0);
        gbc.writeMem(0xc8aa, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8698, gbc.sp());
        EXPECT(0xc8ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8aa));
        EXPECT(0x4, gbc.readMem(0xc8ab));
        // CB 04 005C
        gbc.setState(0xcca6, 0x75d5, 0x63a0, 0xf86, 0xce08, 0xad41, 0x0, 0x1);
        gbc.writeMem(0xcca6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x75d5, gbc.sp());
        EXPECT(0xcca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca6));
        EXPECT(0x4, gbc.readMem(0xcca7));
        // CB 04 005D
        gbc.setState(0xd2ae, 0xddd2, 0xf400, 0x861c, 0xac41, 0xa77c, 0x0, 0x1);
        gbc.writeMem(0xd2ae, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xddd2, gbc.sp());
        EXPECT(0xd2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2ae));
        EXPECT(0x4, gbc.readMem(0xd2af));
        // CB 04 005E
        gbc.setState(0xe01c, 0xe039, 0xc330, 0x2c57, 0x78cb, 0x8b74, 0x0, 0x0);
        gbc.writeMem(0xe01c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe039, gbc.sp());
        EXPECT(0xe01e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe01c));
        EXPECT(0x4, gbc.readMem(0xe01d));
        // CB 04 005F
        gbc.setState(0xc74e, 0x58da, 0xe110, 0xd265, 0x5d24, 0x4326, 0x1, 0x0);
        gbc.writeMem(0xc74e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x58da, gbc.sp());
        EXPECT(0xc750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc74e));
        EXPECT(0x4, gbc.readMem(0xc74f));
        // CB 04 0060
        gbc.setState(0x1e9e, 0xb443, 0x100, 0xfa92, 0xaf58, 0xa0a2, 0x1, 0x1);
        gbc.writeMem(0x1e9e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb443, gbc.sp());
        EXPECT(0x1ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0062
        gbc.setState(0x88a3, 0x633a, 0xc290, 0x5580, 0xb4d5, 0xcb8, 0x1, 0x1);
        gbc.writeMem(0x88a3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x633a, gbc.sp());
        EXPECT(0x88a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a3));
        EXPECT(0x4, gbc.readMem(0x88a4));
        // CB 04 0063
        gbc.setState(0x5a18, 0x7492, 0xcb70, 0xfff7, 0x2b6f, 0x7816, 0x0, 0x0);
        gbc.writeMem(0x5a18, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7492, gbc.sp());
        EXPECT(0x5a1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0064
        gbc.setState(0x2765, 0x82d2, 0x2bd0, 0xb21b, 0x4746, 0xa51f, 0x0, 0x1);
        gbc.writeMem(0x2765, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x82d2, gbc.sp());
        EXPECT(0x2767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0065
        gbc.setState(0x42b7, 0x751c, 0xdf0, 0xb870, 0x8c63, 0x7a09, 0x1, 0x0);
        gbc.writeMem(0x42b7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x751c, gbc.sp());
        EXPECT(0x42b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0067
        gbc.setState(0x9c80, 0x4bb6, 0x7500, 0xc540, 0x9fde, 0xee6e, 0x1, 0x0);
        gbc.writeMem(0x9c80, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4bb6, gbc.sp());
        EXPECT(0x9c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c80));
        EXPECT(0x4, gbc.readMem(0x9c81));
        // CB 04 0069
        gbc.setState(0xc0d2, 0x8568, 0x2280, 0x4c41, 0x4247, 0x962, 0x1, 0x1);
        gbc.writeMem(0xc0d2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8568, gbc.sp());
        EXPECT(0xc0d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0d2));
        EXPECT(0x4, gbc.readMem(0xc0d3));
        // CB 04 006A
        gbc.setState(0x342d, 0x6566, 0x2870, 0xa229, 0x91a6, 0x831f, 0x1, 0x0);
        gbc.writeMem(0x342d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6566, gbc.sp());
        EXPECT(0x342f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 006B
        gbc.setState(0xc713, 0x2cdd, 0x1c30, 0x9648, 0x3b3e, 0x65a8, 0x1, 0x1);
        gbc.writeMem(0xc713, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2cdd, gbc.sp());
        EXPECT(0xc715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc713));
        EXPECT(0x4, gbc.readMem(0xc714));
        // CB 04 006C
        gbc.setState(0xbee, 0xd52, 0x2a30, 0xe78d, 0x8f2d, 0x716f, 0x0, 0x1);
        gbc.writeMem(0xbee, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd52, gbc.sp());
        EXPECT(0xbf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 006D
        gbc.setState(0x655d, 0x9bbf, 0x3490, 0x245d, 0xef6, 0x2900, 0x0, 0x0);
        gbc.writeMem(0x655d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9bbf, gbc.sp());
        EXPECT(0x655f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 006E
        gbc.setState(0x6e04, 0x4eb2, 0x78c0, 0x912c, 0xec21, 0xd2f, 0x0, 0x0);
        gbc.writeMem(0x6e04, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4eb2, gbc.sp());
        EXPECT(0x6e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 006F
        gbc.setState(0xe688, 0x860a, 0x12f0, 0xad33, 0x18ea, 0x5eba, 0x0, 0x1);
        gbc.writeMem(0xe688, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x860a, gbc.sp());
        EXPECT(0xe68a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe688));
        EXPECT(0x4, gbc.readMem(0xe689));
        // CB 04 0070
        gbc.setState(0x43c1, 0xf0c3, 0x97d0, 0xc523, 0xec38, 0xfe7c, 0x0, 0x1);
        gbc.writeMem(0x43c1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf0c3, gbc.sp());
        EXPECT(0x43c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0071
        gbc.setState(0x9f25, 0xb2e6, 0xe1b0, 0x1c28, 0xadd4, 0x86bf, 0x1, 0x1);
        gbc.writeMem(0x9f25, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb2e6, gbc.sp());
        EXPECT(0x9f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f25));
        EXPECT(0x4, gbc.readMem(0x9f26));
        // CB 04 0073
        gbc.setState(0xd23e, 0x78ca, 0x3ee0, 0x3829, 0x1958, 0x529d, 0x1, 0x1);
        gbc.writeMem(0xd23e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x78ca, gbc.sp());
        EXPECT(0xd240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd23e));
        EXPECT(0x4, gbc.readMem(0xd23f));
        // CB 04 0074
        gbc.setState(0xd71c, 0xe0f8, 0x1f10, 0xc8fe, 0xeb5b, 0x3741, 0x0, 0x1);
        gbc.writeMem(0xd71c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe0f8, gbc.sp());
        EXPECT(0xd71e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71c));
        EXPECT(0x4, gbc.readMem(0xd71d));
        // CB 04 0075
        gbc.setState(0x42c2, 0x5ec0, 0xeed0, 0x127d, 0x9b4e, 0x43d2, 0x0, 0x0);
        gbc.writeMem(0x42c2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5ec0, gbc.sp());
        EXPECT(0x42c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0077
        gbc.setState(0xc010, 0x375d, 0x7710, 0xdec4, 0xd74, 0xa8b5, 0x0, 0x0);
        gbc.writeMem(0xc010, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x375d, gbc.sp());
        EXPECT(0xc012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc010));
        EXPECT(0x4, gbc.readMem(0xc011));
        // CB 04 0078
        gbc.setState(0x2a08, 0xf524, 0x15b0, 0x2842, 0x7ea6, 0x6ccf, 0x1, 0x0);
        gbc.writeMem(0x2a08, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf524, gbc.sp());
        EXPECT(0x2a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0079
        gbc.setState(0xc677, 0x279a, 0x5640, 0x90c2, 0x9fa1, 0xddf6, 0x1, 0x0);
        gbc.writeMem(0xc677, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x279a, gbc.sp());
        EXPECT(0xc679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc677));
        EXPECT(0x4, gbc.readMem(0xc678));
        // CB 04 007A
        gbc.setState(0x2a03, 0xcd74, 0xe660, 0x66b3, 0xd80a, 0x28e4, 0x1, 0x0);
        gbc.writeMem(0x2a03, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcd74, gbc.sp());
        EXPECT(0x2a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 007B
        gbc.setState(0x263b, 0x3725, 0x11c0, 0xd7c2, 0xc387, 0xdcf1, 0x1, 0x1);
        gbc.writeMem(0x263b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3725, gbc.sp());
        EXPECT(0x263d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 007C
        gbc.setState(0x8bdf, 0x2dca, 0x9470, 0x90ae, 0x5b21, 0x72dd, 0x1, 0x0);
        gbc.writeMem(0x8bdf, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2dca, gbc.sp());
        EXPECT(0x8be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bdf));
        EXPECT(0x4, gbc.readMem(0x8be0));
        // CB 04 007D
        gbc.setState(0x7edf, 0xe5c5, 0x8050, 0x97e6, 0x9b2, 0x85cd, 0x0, 0x0);
        gbc.writeMem(0x7edf, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe5c5, gbc.sp());
        EXPECT(0x7ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 007E
        gbc.setState(0x8262, 0xd7d8, 0x9ec0, 0xfed7, 0x688c, 0xea12, 0x1, 0x1);
        gbc.writeMem(0x8262, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd7d8, gbc.sp());
        EXPECT(0x8264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8262));
        EXPECT(0x4, gbc.readMem(0x8263));
        // CB 04 007F
        gbc.setState(0xd639, 0x6e0d, 0xab90, 0x3fb2, 0x5e89, 0x7412, 0x0, 0x1);
        gbc.writeMem(0xd639, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6e0d, gbc.sp());
        EXPECT(0xd63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd639));
        EXPECT(0x4, gbc.readMem(0xd63a));
        // CB 04 0080
        gbc.setState(0xc52f, 0x2009, 0x2a60, 0x8a6c, 0xe1bd, 0x4240, 0x1, 0x1);
        gbc.writeMem(0xc52f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2009, gbc.sp());
        EXPECT(0xc531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc52f));
        EXPECT(0x4, gbc.readMem(0xc530));
        // CB 04 0081
        gbc.setState(0x9e35, 0x1bcc, 0x8dd0, 0xe18a, 0xc332, 0x1b4f, 0x0, 0x1);
        gbc.writeMem(0x9e35, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1bcc, gbc.sp());
        EXPECT(0x9e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e35));
        EXPECT(0x4, gbc.readMem(0x9e36));
        // CB 04 0083
        gbc.setState(0xc0ed, 0xe3cf, 0x5030, 0xe483, 0x43a1, 0xa8e3, 0x1, 0x0);
        gbc.writeMem(0xc0ed, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe3cf, gbc.sp());
        EXPECT(0xc0ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ed));
        EXPECT(0x4, gbc.readMem(0xc0ee));
        // CB 04 0085
        gbc.setState(0x5b0e, 0x6369, 0x5b80, 0x8241, 0x114f, 0x691, 0x1, 0x1);
        gbc.writeMem(0x5b0e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6369, gbc.sp());
        EXPECT(0x5b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0086
        gbc.setState(0x5712, 0x26c6, 0x8770, 0x90bb, 0x779, 0x9bfd, 0x1, 0x0);
        gbc.writeMem(0x5712, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x26c6, gbc.sp());
        EXPECT(0x5714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0087
        gbc.setState(0xcc2f, 0x84cd, 0x3f90, 0x1fdf, 0xc5dd, 0xdf1f, 0x1, 0x1);
        gbc.writeMem(0xcc2f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x84cd, gbc.sp());
        EXPECT(0xcc31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc2f));
        EXPECT(0x4, gbc.readMem(0xcc30));
        // CB 04 0088
        gbc.setState(0xd34f, 0x70e6, 0x910, 0xb88e, 0xa13e, 0x1481, 0x0, 0x1);
        gbc.writeMem(0xd34f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x70e6, gbc.sp());
        EXPECT(0xd351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd34f));
        EXPECT(0x4, gbc.readMem(0xd350));
        // CB 04 0089
        gbc.setState(0x9ab5, 0xcd3d, 0x8080, 0x488a, 0x9768, 0x334a, 0x0, 0x1);
        gbc.writeMem(0x9ab5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcd3d, gbc.sp());
        EXPECT(0x9ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab5));
        EXPECT(0x4, gbc.readMem(0x9ab6));
        // CB 04 008A
        gbc.setState(0xba62, 0x159d, 0xb360, 0x81ea, 0x3500, 0xf982, 0x0, 0x0);
        gbc.writeMem(0xba62, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x159d, gbc.sp());
        EXPECT(0xba64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba62));
        EXPECT(0x4, gbc.readMem(0xba63));
        // CB 04 008B
        gbc.setState(0x5299, 0xdc6f, 0xc620, 0x188d, 0x74fe, 0xd780, 0x0, 0x0);
        gbc.writeMem(0x5299, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdc6f, gbc.sp());
        EXPECT(0x529b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 008C
        gbc.setState(0x6b9a, 0xdc70, 0x8cf0, 0xd8c8, 0x865d, 0xc08b, 0x1, 0x0);
        gbc.writeMem(0x6b9a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdc70, gbc.sp());
        EXPECT(0x6b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 008D
        gbc.setState(0xc4e1, 0x976e, 0xba50, 0xd41, 0x64a6, 0x48d9, 0x0, 0x1);
        gbc.writeMem(0xc4e1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x976e, gbc.sp());
        EXPECT(0xc4e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e1));
        EXPECT(0x4, gbc.readMem(0xc4e2));
        // CB 04 008E
        gbc.setState(0xe2bb, 0x3901, 0x7b20, 0x8336, 0x5392, 0x1031, 0x1, 0x0);
        gbc.writeMem(0xe2bb, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3901, gbc.sp());
        EXPECT(0xe2bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2bb));
        EXPECT(0x4, gbc.readMem(0xe2bc));
        // CB 04 008F
        gbc.setState(0xb4fa, 0xef38, 0xc7a0, 0xc3b5, 0xdda, 0x71b8, 0x0, 0x1);
        gbc.writeMem(0xb4fa, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xef38, gbc.sp());
        EXPECT(0xb4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4fa));
        EXPECT(0x4, gbc.readMem(0xb4fb));
        // CB 04 0090
        gbc.setState(0x75ff, 0xaf88, 0x21a0, 0x530b, 0x3bc1, 0x5ac7, 0x1, 0x1);
        gbc.writeMem(0x75ff, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xaf88, gbc.sp());
        EXPECT(0x7601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0091
        gbc.setState(0x7bf9, 0xb54a, 0x2640, 0x77b2, 0x666c, 0x6a80, 0x0, 0x1);
        gbc.writeMem(0x7bf9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb54a, gbc.sp());
        EXPECT(0x7bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0092
        gbc.setState(0x9e33, 0x3440, 0xba10, 0xdbfe, 0xb9d2, 0x9c06, 0x1, 0x1);
        gbc.writeMem(0x9e33, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3440, gbc.sp());
        EXPECT(0x9e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e33));
        EXPECT(0x4, gbc.readMem(0x9e34));
        // CB 04 0093
        gbc.setState(0x1e92, 0x21a4, 0x850, 0xc663, 0xdf0b, 0xf13c, 0x0, 0x0);
        gbc.writeMem(0x1e92, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x21a4, gbc.sp());
        EXPECT(0x1e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0094
        gbc.setState(0x23e1, 0x7ca6, 0x6a70, 0xa180, 0x6053, 0x2372, 0x1, 0x1);
        gbc.writeMem(0x23e1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7ca6, gbc.sp());
        EXPECT(0x23e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0095
        gbc.setState(0xa3cc, 0x88f1, 0x8b90, 0x8dc7, 0x73be, 0x3a91, 0x0, 0x1);
        gbc.writeMem(0xa3cc, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x88f1, gbc.sp());
        EXPECT(0xa3ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3cc));
        EXPECT(0x4, gbc.readMem(0xa3cd));
        // CB 04 0096
        gbc.setState(0x21bb, 0x35be, 0xd2c0, 0x3ee2, 0x7f6e, 0xda6c, 0x0, 0x1);
        gbc.writeMem(0x21bb, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x35be, gbc.sp());
        EXPECT(0x21bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0099
        gbc.setState(0x8e68, 0xda74, 0x7aa0, 0xdc97, 0xa2c3, 0x2798, 0x0, 0x1);
        gbc.writeMem(0x8e68, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xda74, gbc.sp());
        EXPECT(0x8e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e68));
        EXPECT(0x4, gbc.readMem(0x8e69));
        // CB 04 009A
        gbc.setState(0x953b, 0x6767, 0x8ce0, 0x7580, 0x5052, 0x5fab, 0x0, 0x0);
        gbc.writeMem(0x953b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6767, gbc.sp());
        EXPECT(0x953d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x953b));
        EXPECT(0x4, gbc.readMem(0x953c));
        // CB 04 009B
        gbc.setState(0xc56e, 0x16de, 0x5670, 0x5c74, 0xf7e6, 0x7646, 0x1, 0x1);
        gbc.writeMem(0xc56e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x16de, gbc.sp());
        EXPECT(0xc570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc56e));
        EXPECT(0x4, gbc.readMem(0xc56f));
        // CB 04 009C
        gbc.setState(0x34a8, 0x423, 0xa5c0, 0xae13, 0x776a, 0x8717, 0x0, 0x0);
        gbc.writeMem(0x34a8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x423, gbc.sp());
        EXPECT(0x34aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 009D
        gbc.setState(0x3447, 0x577f, 0xd170, 0x106a, 0x2b9c, 0xc848, 0x1, 0x1);
        gbc.writeMem(0x3447, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x577f, gbc.sp());
        EXPECT(0x3449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 009E
        gbc.setState(0x6d4e, 0x8678, 0x1310, 0x4b19, 0xb7f7, 0x3e6b, 0x1, 0x1);
        gbc.writeMem(0x6d4e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8678, gbc.sp());
        EXPECT(0x6d50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 009F
        gbc.setState(0xc420, 0x32ba, 0x4ad0, 0x841e, 0x4bb1, 0xdce, 0x1, 0x0);
        gbc.writeMem(0xc420, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x32ba, gbc.sp());
        EXPECT(0xc422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc420));
        EXPECT(0x4, gbc.readMem(0xc421));
        // CB 04 00A0
        gbc.setState(0x5952, 0x2ac9, 0xd4b0, 0xd08a, 0xfc33, 0xa719, 0x1, 0x0);
        gbc.writeMem(0x5952, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2ac9, gbc.sp());
        EXPECT(0x5954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00A1
        gbc.setState(0xbd62, 0xf77a, 0xa660, 0xb8b, 0x9cfa, 0x59fa, 0x1, 0x0);
        gbc.writeMem(0xbd62, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf77a, gbc.sp());
        EXPECT(0xbd64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd62));
        EXPECT(0x4, gbc.readMem(0xbd63));
        // CB 04 00A2
        gbc.setState(0x6cf9, 0x120, 0xc750, 0xed40, 0x8db0, 0x4f5, 0x1, 0x0);
        gbc.writeMem(0x6cf9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x120, gbc.sp());
        EXPECT(0x6cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00A3
        gbc.setState(0x5516, 0xfca9, 0x4810, 0xe6d2, 0x44cb, 0xdccd, 0x1, 0x0);
        gbc.writeMem(0x5516, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfca9, gbc.sp());
        EXPECT(0x5518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00A4
        gbc.setState(0x7daf, 0x1b5e, 0x2d40, 0x4e75, 0x1d0c, 0x7542, 0x1, 0x0);
        gbc.writeMem(0x7daf, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1b5e, gbc.sp());
        EXPECT(0x7db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00A5
        gbc.setState(0x1001, 0x9530, 0x90e0, 0x2956, 0x6cd0, 0x4576, 0x1, 0x0);
        gbc.writeMem(0x1001, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9530, gbc.sp());
        EXPECT(0x1003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00A6
        gbc.setState(0xb3fc, 0x2b0b, 0x2b60, 0xf6e8, 0x781d, 0x6aa3, 0x1, 0x0);
        gbc.writeMem(0xb3fc, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2b0b, gbc.sp());
        EXPECT(0xb3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3fc));
        EXPECT(0x4, gbc.readMem(0xb3fd));
        // CB 04 00A7
        gbc.setState(0x84c1, 0xdc6e, 0x5e50, 0x4810, 0x7e6d, 0xbf20, 0x1, 0x0);
        gbc.writeMem(0x84c1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdc6e, gbc.sp());
        EXPECT(0x84c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c1));
        EXPECT(0x4, gbc.readMem(0x84c2));
        // CB 04 00A8
        gbc.setState(0x7f1c, 0x867a, 0xd5a0, 0xaa11, 0xdcaa, 0xdf89, 0x1, 0x0);
        gbc.writeMem(0x7f1c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x867a, gbc.sp());
        EXPECT(0x7f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00A9
        gbc.setState(0x3b82, 0x1b51, 0x1530, 0xfd93, 0xd2c0, 0xb5d1, 0x0, 0x0);
        gbc.writeMem(0x3b82, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1b51, gbc.sp());
        EXPECT(0x3b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00AA
        gbc.setState(0x8af1, 0x7643, 0xa5d0, 0x70c5, 0x6c5e, 0x8467, 0x0, 0x1);
        gbc.writeMem(0x8af1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7643, gbc.sp());
        EXPECT(0x8af3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af1));
        EXPECT(0x4, gbc.readMem(0x8af2));
        // CB 04 00AB
        gbc.setState(0x551c, 0x2cf6, 0x4c50, 0xe65f, 0x253f, 0xa57e, 0x0, 0x0);
        gbc.writeMem(0x551c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2cf6, gbc.sp());
        EXPECT(0x551e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00AC
        gbc.setState(0x8d4a, 0x1a66, 0x3170, 0xb57c, 0x5489, 0x320f, 0x0, 0x1);
        gbc.writeMem(0x8d4a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1a66, gbc.sp());
        EXPECT(0x8d4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d4a));
        EXPECT(0x4, gbc.readMem(0x8d4b));
        // CB 04 00AD
        gbc.setState(0x101e, 0xa589, 0xdce0, 0xe5fa, 0x642a, 0xd6dc, 0x1, 0x1);
        gbc.writeMem(0x101e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa589, gbc.sp());
        EXPECT(0x1020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00AE
        gbc.setState(0x9766, 0xfeff, 0xcd0, 0xd156, 0xf26f, 0xb3ca, 0x0, 0x1);
        gbc.writeMem(0x9766, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfeff, gbc.sp());
        EXPECT(0x9768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9766));
        EXPECT(0x4, gbc.readMem(0x9767));
        // CB 04 00AF
        gbc.setState(0x5a57, 0xc565, 0xac30, 0x7bc9, 0xf90c, 0xf296, 0x1, 0x0);
        gbc.writeMem(0x5a57, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc565, gbc.sp());
        EXPECT(0x5a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00B0
        gbc.setState(0xa718, 0x1cf, 0xaf70, 0x1070, 0x87e, 0xbaf4, 0x1, 0x0);
        gbc.writeMem(0xa718, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1cf, gbc.sp());
        EXPECT(0xa71a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa718));
        EXPECT(0x4, gbc.readMem(0xa719));
        // CB 04 00B1
        gbc.setState(0xd31e, 0x2409, 0xf370, 0xb466, 0xa730, 0xafb5, 0x1, 0x1);
        gbc.writeMem(0xd31e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2409, gbc.sp());
        EXPECT(0xd320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd31e));
        EXPECT(0x4, gbc.readMem(0xd31f));
        // CB 04 00B2
        gbc.setState(0x437c, 0x9921, 0x9730, 0xde4a, 0x1615, 0xfec8, 0x0, 0x0);
        gbc.writeMem(0x437c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9921, gbc.sp());
        EXPECT(0x437e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00B3
        gbc.setState(0x6fe9, 0x69c0, 0xf2b0, 0x477d, 0x345d, 0x20c4, 0x1, 0x0);
        gbc.writeMem(0x6fe9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x69c0, gbc.sp());
        EXPECT(0x6feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00B4
        gbc.setState(0x9505, 0x9284, 0xda80, 0xb7b1, 0x22bf, 0xf90d, 0x1, 0x1);
        gbc.writeMem(0x9505, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9284, gbc.sp());
        EXPECT(0x9507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9505));
        EXPECT(0x4, gbc.readMem(0x9506));
        // CB 04 00B5
        gbc.setState(0x7db9, 0xd45d, 0x93a0, 0x380b, 0x40a1, 0x8c6, 0x1, 0x1);
        gbc.writeMem(0x7db9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd45d, gbc.sp());
        EXPECT(0x7dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00B6
        gbc.setState(0x7723, 0x7d68, 0x4e40, 0x626c, 0xcbc9, 0x86eb, 0x1, 0x1);
        gbc.writeMem(0x7723, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7d68, gbc.sp());
        EXPECT(0x7725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00B7
        gbc.setState(0x903b, 0xe6ae, 0x83d0, 0x4ace, 0x7a1a, 0x8a3, 0x0, 0x0);
        gbc.writeMem(0x903b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe6ae, gbc.sp());
        EXPECT(0x903d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x903b));
        EXPECT(0x4, gbc.readMem(0x903c));
        // CB 04 00B8
        gbc.setState(0x91ff, 0xc59e, 0xe850, 0x96ee, 0xffbd, 0xd0f8, 0x1, 0x1);
        gbc.writeMem(0x91ff, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc59e, gbc.sp());
        EXPECT(0x9201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ff));
        EXPECT(0x4, gbc.readMem(0x9200));
        // CB 04 00B9
        gbc.setState(0x8df6, 0x36e6, 0x7130, 0x6cd6, 0xcfb0, 0xd41a, 0x0, 0x0);
        gbc.writeMem(0x8df6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x36e6, gbc.sp());
        EXPECT(0x8df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df6));
        EXPECT(0x4, gbc.readMem(0x8df7));
        // CB 04 00BA
        gbc.setState(0xe09b, 0x4712, 0x7070, 0xb21e, 0x5ece, 0xeca4, 0x1, 0x0);
        gbc.writeMem(0xe09b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4712, gbc.sp());
        EXPECT(0xe09d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09b));
        EXPECT(0x4, gbc.readMem(0xe09c));
        // CB 04 00BB
        gbc.setState(0xa5c3, 0xb252, 0x20d0, 0x270a, 0x586f, 0xce1, 0x0, 0x0);
        gbc.writeMem(0xa5c3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb252, gbc.sp());
        EXPECT(0xa5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5c3));
        EXPECT(0x4, gbc.readMem(0xa5c4));
        // CB 04 00BC
        gbc.setState(0x71be, 0xac6c, 0xb8d0, 0xe6f9, 0x1be8, 0x3832, 0x0, 0x1);
        gbc.writeMem(0x71be, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xac6c, gbc.sp());
        EXPECT(0x71c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00BD
        gbc.setState(0x9546, 0xd1e8, 0x9f90, 0x1366, 0x3f0, 0x50c1, 0x1, 0x0);
        gbc.writeMem(0x9546, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd1e8, gbc.sp());
        EXPECT(0x9548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9546));
        EXPECT(0x4, gbc.readMem(0x9547));
        // CB 04 00BE
        gbc.setState(0x7e5a, 0x9336, 0xc90, 0x5b9c, 0x9940, 0x30d7, 0x0, 0x0);
        gbc.writeMem(0x7e5a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9336, gbc.sp());
        EXPECT(0x7e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00BF
        gbc.setState(0x286e, 0x33e3, 0xb70, 0xe090, 0xf6f, 0x5387, 0x1, 0x0);
        gbc.writeMem(0x286e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x33e3, gbc.sp());
        EXPECT(0x2870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00C0
        gbc.setState(0x96ee, 0xc55a, 0xf5d0, 0x1c4e, 0xe69c, 0x57ec, 0x0, 0x1);
        gbc.writeMem(0x96ee, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc55a, gbc.sp());
        EXPECT(0x96f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ee));
        EXPECT(0x4, gbc.readMem(0x96ef));
        // CB 04 00C1
        gbc.setState(0x363e, 0x4018, 0xd340, 0x76a7, 0x680b, 0x3c55, 0x0, 0x1);
        gbc.writeMem(0x363e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4018, gbc.sp());
        EXPECT(0x3640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00C2
        gbc.setState(0xbb18, 0x3752, 0xb520, 0x5e09, 0x52cb, 0xcf38, 0x0, 0x1);
        gbc.writeMem(0xbb18, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3752, gbc.sp());
        EXPECT(0xbb1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb18));
        EXPECT(0x4, gbc.readMem(0xbb19));
        // CB 04 00C3
        gbc.setState(0x1c63, 0x3b1c, 0x3670, 0x551f, 0x6a9a, 0xf39b, 0x0, 0x1);
        gbc.writeMem(0x1c63, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3b1c, gbc.sp());
        EXPECT(0x1c65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00C4
        gbc.setState(0xd260, 0x882b, 0x2a0, 0x4c00, 0x40ce, 0xcc1a, 0x0, 0x1);
        gbc.writeMem(0xd260, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x882b, gbc.sp());
        EXPECT(0xd262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd260));
        EXPECT(0x4, gbc.readMem(0xd261));
        // CB 04 00C5
        gbc.setState(0x2f0f, 0x3828, 0xa2a0, 0xccd4, 0xa1ba, 0xea2a, 0x1, 0x1);
        gbc.writeMem(0x2f0f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3828, gbc.sp());
        EXPECT(0x2f11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00C6
        gbc.setState(0x5a66, 0x9acc, 0x5a20, 0x5e7f, 0xda53, 0xc8a2, 0x0, 0x1);
        gbc.writeMem(0x5a66, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9acc, gbc.sp());
        EXPECT(0x5a68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00C7
        gbc.setState(0xc057, 0xa526, 0x4ea0, 0x11d, 0xb8bb, 0x8a9d, 0x1, 0x0);
        gbc.writeMem(0xc057, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa526, gbc.sp());
        EXPECT(0xc059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc057));
        EXPECT(0x4, gbc.readMem(0xc058));
        // CB 04 00C8
        gbc.setState(0x2673, 0x6894, 0x12e0, 0x1846, 0x4e7f, 0xc158, 0x0, 0x0);
        gbc.writeMem(0x2673, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6894, gbc.sp());
        EXPECT(0x2675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00C9
        gbc.setState(0xd3c0, 0xe049, 0xd590, 0x732a, 0xf685, 0xd396, 0x1, 0x1);
        gbc.writeMem(0xd3c0, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe049, gbc.sp());
        EXPECT(0xd3c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c0));
        EXPECT(0x4, gbc.readMem(0xd3c1));
        // CB 04 00CA
        gbc.setState(0x1d12, 0x5553, 0x5290, 0x6119, 0x7ad0, 0xc938, 0x1, 0x0);
        gbc.writeMem(0x1d12, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5553, gbc.sp());
        EXPECT(0x1d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00CB
        gbc.setState(0xeac4, 0x1afc, 0x5aa0, 0x71d5, 0xbe4e, 0xc713, 0x0, 0x0);
        gbc.writeMem(0xeac4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1afc, gbc.sp());
        EXPECT(0xeac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac4));
        EXPECT(0x4, gbc.readMem(0xeac5));
        // CB 04 00CC
        gbc.setState(0x54a1, 0x2993, 0x250, 0x94b8, 0x7a1d, 0x60c1, 0x0, 0x1);
        gbc.writeMem(0x54a1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2993, gbc.sp());
        EXPECT(0x54a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00CD
        gbc.setState(0x4ae7, 0x99f8, 0x77b0, 0x4a80, 0xe92a, 0x92b6, 0x0, 0x0);
        gbc.writeMem(0x4ae7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x99f8, gbc.sp());
        EXPECT(0x4ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00CF
        gbc.setState(0x3ef2, 0x40c8, 0xec0, 0x39fd, 0xdb32, 0x772a, 0x0, 0x0);
        gbc.writeMem(0x3ef2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x40c8, gbc.sp());
        EXPECT(0x3ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00D0
        gbc.setState(0x7fc8, 0x9f02, 0x26b0, 0x2a3e, 0x6681, 0xdfd7, 0x0, 0x1);
        gbc.writeMem(0x7fc8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9f02, gbc.sp());
        EXPECT(0x7fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00D1
        gbc.setState(0x2079, 0x9953, 0x9b40, 0xef6f, 0x161f, 0xf775, 0x1, 0x0);
        gbc.writeMem(0x2079, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9953, gbc.sp());
        EXPECT(0x207b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00D3
        gbc.setState(0x34fa, 0xc6b4, 0x3d50, 0x8d5a, 0x2e5, 0xcb5d, 0x1, 0x0);
        gbc.writeMem(0x34fa, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc6b4, gbc.sp());
        EXPECT(0x34fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00D4
        gbc.setState(0xe3df, 0x771d, 0x6e70, 0x4ccd, 0x44b9, 0xccec, 0x1, 0x0);
        gbc.writeMem(0xe3df, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x771d, gbc.sp());
        EXPECT(0xe3e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3df));
        EXPECT(0x4, gbc.readMem(0xe3e0));
        // CB 04 00D5
        gbc.setState(0xe233, 0xdb01, 0xf4b0, 0xeedd, 0xdf7, 0xc7b7, 0x1, 0x1);
        gbc.writeMem(0xe233, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdb01, gbc.sp());
        EXPECT(0xe235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe233));
        EXPECT(0x4, gbc.readMem(0xe234));
        // CB 04 00D6
        gbc.setState(0x558d, 0xe11d, 0x7070, 0x9ab7, 0x902c, 0xc361, 0x0, 0x1);
        gbc.writeMem(0x558d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe11d, gbc.sp());
        EXPECT(0x558f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00D7
        gbc.setState(0xe0d3, 0xad51, 0x4460, 0x33b0, 0x69b2, 0xc0b1, 0x0, 0x1);
        gbc.writeMem(0xe0d3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xad51, gbc.sp());
        EXPECT(0xe0d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d3));
        EXPECT(0x4, gbc.readMem(0xe0d4));
        // CB 04 00D8
        gbc.setState(0x3a3, 0x3d74, 0xd520, 0xb3b0, 0x2f08, 0x19c3, 0x1, 0x0);
        gbc.writeMem(0x3a3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3d74, gbc.sp());
        EXPECT(0x3a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00D9
        gbc.setState(0x2204, 0xf058, 0x3920, 0xc84, 0xde55, 0x8823, 0x1, 0x0);
        gbc.writeMem(0x2204, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf058, gbc.sp());
        EXPECT(0x2206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00DA
        gbc.setState(0x8171, 0xf4db, 0xe960, 0x832c, 0x9ddf, 0xfaa0, 0x1, 0x1);
        gbc.writeMem(0x8171, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf4db, gbc.sp());
        EXPECT(0x8173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8171));
        EXPECT(0x4, gbc.readMem(0x8172));
        // CB 04 00DB
        gbc.setState(0x6f38, 0x40d7, 0xbf40, 0x58f1, 0xb2c, 0xd16b, 0x0, 0x0);
        gbc.writeMem(0x6f38, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x40d7, gbc.sp());
        EXPECT(0x6f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00DC
        gbc.setState(0x62e9, 0xf854, 0x9200, 0xf877, 0xa21e, 0x194b, 0x1, 0x1);
        gbc.writeMem(0x62e9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf854, gbc.sp());
        EXPECT(0x62eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00DD
        gbc.setState(0xcef2, 0x6433, 0x1a80, 0x44e, 0x4106, 0x5db, 0x1, 0x0);
        gbc.writeMem(0xcef2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6433, gbc.sp());
        EXPECT(0xcef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef2));
        EXPECT(0x4, gbc.readMem(0xcef3));
        // CB 04 00DE
        gbc.setState(0xb390, 0xe107, 0xeba0, 0xef2e, 0x332b, 0xf377, 0x1, 0x1);
        gbc.writeMem(0xb390, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe107, gbc.sp());
        EXPECT(0xb392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb390));
        EXPECT(0x4, gbc.readMem(0xb391));
        // CB 04 00DF
        gbc.setState(0x347, 0xad81, 0xffc0, 0x18e5, 0xf13a, 0x6216, 0x0, 0x1);
        gbc.writeMem(0x347, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xad81, gbc.sp());
        EXPECT(0x349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00E1
        gbc.setState(0xb763, 0xaded, 0xd090, 0x116c, 0x8ba6, 0x4121, 0x1, 0x0);
        gbc.writeMem(0xb763, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xaded, gbc.sp());
        EXPECT(0xb765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb763));
        EXPECT(0x4, gbc.readMem(0xb764));
        // CB 04 00E2
        gbc.setState(0xfa3, 0x6d9a, 0x600, 0xeaff, 0x4961, 0x8e8a, 0x1, 0x0);
        gbc.writeMem(0xfa3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6d9a, gbc.sp());
        EXPECT(0xfa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00E3
        gbc.setState(0xdc4b, 0xe181, 0xf250, 0xb47b, 0x3e2e, 0x6509, 0x1, 0x1);
        gbc.writeMem(0xdc4b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe181, gbc.sp());
        EXPECT(0xdc4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc4b));
        EXPECT(0x4, gbc.readMem(0xdc4c));
        // CB 04 00E4
        gbc.setState(0x2d8c, 0xdf81, 0xeba0, 0x776a, 0x11bd, 0x1427, 0x1, 0x1);
        gbc.writeMem(0x2d8c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdf81, gbc.sp());
        EXPECT(0x2d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00E5
        gbc.setState(0x11ff, 0xd3dc, 0xeac0, 0x7f71, 0xe785, 0x5a8, 0x1, 0x0);
        gbc.writeMem(0x11ff, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd3dc, gbc.sp());
        EXPECT(0x1201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00E6
        gbc.setState(0x3145, 0x1476, 0xec30, 0x38f6, 0x52d0, 0x80dd, 0x0, 0x1);
        gbc.writeMem(0x3145, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1476, gbc.sp());
        EXPECT(0x3147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00E9
        gbc.setState(0x45e7, 0x68e6, 0xa130, 0xa229, 0xbc9b, 0x7fb1, 0x1, 0x1);
        gbc.writeMem(0x45e7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x68e6, gbc.sp());
        EXPECT(0x45e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00EB
        gbc.setState(0x7334, 0x100e, 0xfdf0, 0xe56d, 0x9ea0, 0xd96b, 0x1, 0x1);
        gbc.writeMem(0x7334, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x100e, gbc.sp());
        EXPECT(0x7336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00EC
        gbc.setState(0x3ac5, 0xf1e0, 0xd320, 0x8ad4, 0x1887, 0x860f, 0x1, 0x0);
        gbc.writeMem(0x3ac5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf1e0, gbc.sp());
        EXPECT(0x3ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00ED
        gbc.setState(0xea3d, 0x9c03, 0xc80, 0xda7e, 0x7477, 0x6319, 0x0, 0x0);
        gbc.writeMem(0xea3d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9c03, gbc.sp());
        EXPECT(0xea3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea3d));
        EXPECT(0x4, gbc.readMem(0xea3e));
        // CB 04 00EE
        gbc.setState(0x2756, 0x5f69, 0xfec0, 0x78cc, 0x3028, 0xbe3c, 0x1, 0x1);
        gbc.writeMem(0x2756, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5f69, gbc.sp());
        EXPECT(0x2758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00EF
        gbc.setState(0xacde, 0xb15b, 0x26d0, 0x4773, 0xbab5, 0x597f, 0x0, 0x0);
        gbc.writeMem(0xacde, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb15b, gbc.sp());
        EXPECT(0xace0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacde));
        EXPECT(0x4, gbc.readMem(0xacdf));
        // CB 04 00F0
        gbc.setState(0x57cd, 0xc5dc, 0x4330, 0x8608, 0xb8f2, 0xa73b, 0x0, 0x1);
        gbc.writeMem(0x57cd, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc5dc, gbc.sp());
        EXPECT(0x57cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00F1
        gbc.setState(0x107a, 0x2fd, 0x540, 0xb198, 0xeb56, 0x9a95, 0x1, 0x1);
        gbc.writeMem(0x107a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2fd, gbc.sp());
        EXPECT(0x107c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00F3
        gbc.setState(0xa673, 0x5c50, 0x58c0, 0xea56, 0x9bb9, 0xc330, 0x0, 0x0);
        gbc.writeMem(0xa673, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5c50, gbc.sp());
        EXPECT(0xa675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa673));
        EXPECT(0x4, gbc.readMem(0xa674));
        // CB 04 00F4
        gbc.setState(0x4414, 0x13e9, 0xad10, 0x4608, 0xa243, 0xaa6b, 0x0, 0x1);
        gbc.writeMem(0x4414, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x13e9, gbc.sp());
        EXPECT(0x4416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00F5
        gbc.setState(0xa4c2, 0x84af, 0x2d00, 0xc1e, 0x3742, 0x6f49, 0x1, 0x1);
        gbc.writeMem(0xa4c2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x84af, gbc.sp());
        EXPECT(0xa4c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c2));
        EXPECT(0x4, gbc.readMem(0xa4c3));
        // CB 04 00F6
        gbc.setState(0x1cee, 0xecda, 0xd750, 0xedb6, 0xc3f5, 0xa52f, 0x1, 0x1);
        gbc.writeMem(0x1cee, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xecda, gbc.sp());
        EXPECT(0x1cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00F7
        gbc.setState(0x301f, 0xfc36, 0x3fe0, 0x566e, 0x3a10, 0xc18f, 0x1, 0x1);
        gbc.writeMem(0x301f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfc36, gbc.sp());
        EXPECT(0x3021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00F8
        gbc.setState(0x1bfd, 0xea4c, 0x92f0, 0xe31, 0x78bb, 0x7b47, 0x1, 0x0);
        gbc.writeMem(0x1bfd, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xea4c, gbc.sp());
        EXPECT(0x1bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00F9
        gbc.setState(0xa3f8, 0x91b5, 0xc140, 0x24c2, 0x5734, 0x6073, 0x0, 0x0);
        gbc.writeMem(0xa3f8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x91b5, gbc.sp());
        EXPECT(0xa3fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f8));
        EXPECT(0x4, gbc.readMem(0xa3f9));
        // CB 04 00FA
        gbc.setState(0x2886, 0xca3a, 0x71b0, 0x2053, 0x2bb9, 0x981f, 0x0, 0x0);
        gbc.writeMem(0x2886, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xca3a, gbc.sp());
        EXPECT(0x2888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00FB
        gbc.setState(0x6456, 0x26b7, 0x80e0, 0xda60, 0xa1eb, 0x525b, 0x1, 0x1);
        gbc.writeMem(0x6456, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x26b7, gbc.sp());
        EXPECT(0x6458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00FC
        gbc.setState(0x233e, 0x920d, 0x5250, 0xd2be, 0xc97b, 0x15a6, 0x0, 0x0);
        gbc.writeMem(0x233e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x920d, gbc.sp());
        EXPECT(0x2340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00FD
        gbc.setState(0x67ec, 0x995a, 0x9600, 0xef74, 0x9ef0, 0xbfbf, 0x0, 0x0);
        gbc.writeMem(0x67ec, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x995a, gbc.sp());
        EXPECT(0x67ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 00FE
        gbc.setState(0x2e85, 0x2d27, 0x3960, 0x71c2, 0xe65, 0x7d62, 0x1, 0x0);
        gbc.writeMem(0x2e85, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2d27, gbc.sp());
        EXPECT(0x2e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 00FF
        gbc.setState(0x86ae, 0xee49, 0xb0c0, 0xb684, 0xee93, 0x8034, 0x0, 0x1);
        gbc.writeMem(0x86ae, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xee49, gbc.sp());
        EXPECT(0x86b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ae));
        EXPECT(0x4, gbc.readMem(0x86af));
        // CB 04 0100
        gbc.setState(0x86fb, 0xcbc2, 0x1870, 0x86bf, 0x9deb, 0x8e82, 0x0, 0x1);
        gbc.writeMem(0x86fb, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcbc2, gbc.sp());
        EXPECT(0x86fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fb));
        EXPECT(0x4, gbc.readMem(0x86fc));
        // CB 04 0101
        gbc.setState(0x1bff, 0xd424, 0x3db0, 0x8985, 0x8d8, 0x798c, 0x1, 0x1);
        gbc.writeMem(0x1bff, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd424, gbc.sp());
        EXPECT(0x1c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0102
        gbc.setState(0xa7bb, 0xad3a, 0x3570, 0xfe8c, 0xf4f8, 0x5e57, 0x1, 0x1);
        gbc.writeMem(0xa7bb, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xad3a, gbc.sp());
        EXPECT(0xa7bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7bb));
        EXPECT(0x4, gbc.readMem(0xa7bc));
        // CB 04 0103
        gbc.setState(0x6224, 0xd4f, 0x4ca0, 0x7f6, 0x9717, 0xdd13, 0x1, 0x0);
        gbc.writeMem(0x6224, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd4f, gbc.sp());
        EXPECT(0x6226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0104
        gbc.setState(0x422d, 0x1dff, 0x8650, 0x48b7, 0x47a1, 0xfaa9, 0x0, 0x0);
        gbc.writeMem(0x422d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1dff, gbc.sp());
        EXPECT(0x422f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0105
        gbc.setState(0xefd, 0xff73, 0x6850, 0x89e1, 0x9572, 0x6541, 0x1, 0x1);
        gbc.writeMem(0xefd, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xff73, gbc.sp());
        EXPECT(0xeff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0107
        gbc.setState(0x3854, 0xe8f3, 0x4be0, 0xcc75, 0xbb8a, 0x999a, 0x1, 0x0);
        gbc.writeMem(0x3854, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe8f3, gbc.sp());
        EXPECT(0x3856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0108
        gbc.setState(0x373f, 0x8f35, 0x9ba0, 0x7570, 0x27fd, 0x9d24, 0x1, 0x0);
        gbc.writeMem(0x373f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8f35, gbc.sp());
        EXPECT(0x3741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0109
        gbc.setState(0x407f, 0x454a, 0xba70, 0x7479, 0x4616, 0xcaad, 0x0, 0x1);
        gbc.writeMem(0x407f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x454a, gbc.sp());
        EXPECT(0x4081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 010A
        gbc.setState(0xa528, 0xfff3, 0x3cb0, 0xfa40, 0xc126, 0xe079, 0x0, 0x1);
        gbc.writeMem(0xa528, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfff3, gbc.sp());
        EXPECT(0xa52a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa528));
        EXPECT(0x4, gbc.readMem(0xa529));
        // CB 04 010B
        gbc.setState(0x50c8, 0xa97f, 0x43e0, 0xfe15, 0x745a, 0x6857, 0x0, 0x0);
        gbc.writeMem(0x50c8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa97f, gbc.sp());
        EXPECT(0x50ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 010D
        gbc.setState(0x4675, 0xbffe, 0x54f0, 0x9425, 0xda33, 0x2e1e, 0x1, 0x0);
        gbc.writeMem(0x4675, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbffe, gbc.sp());
        EXPECT(0x4677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 010E
        gbc.setState(0xd19b, 0xbe5, 0xd230, 0xd53d, 0xbad7, 0x2772, 0x1, 0x1);
        gbc.writeMem(0xd19b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbe5, gbc.sp());
        EXPECT(0xd19d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd19b));
        EXPECT(0x4, gbc.readMem(0xd19c));
        // CB 04 010F
        gbc.setState(0x485a, 0xe9f3, 0x88b0, 0x3678, 0x1eed, 0xc1e0, 0x0, 0x1);
        gbc.writeMem(0x485a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe9f3, gbc.sp());
        EXPECT(0x485c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0110
        gbc.setState(0x45b3, 0x4c83, 0x3cd0, 0xc9b4, 0x4c11, 0xf888, 0x0, 0x1);
        gbc.writeMem(0x45b3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4c83, gbc.sp());
        EXPECT(0x45b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0111
        gbc.setState(0x88a5, 0xf204, 0x68d0, 0xbdeb, 0x75e9, 0xb1d6, 0x1, 0x1);
        gbc.writeMem(0x88a5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf204, gbc.sp());
        EXPECT(0x88a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a5));
        EXPECT(0x4, gbc.readMem(0x88a6));
        // CB 04 0112
        gbc.setState(0x2534, 0xe686, 0x23d0, 0x22f5, 0x4f70, 0xf59a, 0x1, 0x0);
        gbc.writeMem(0x2534, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe686, gbc.sp());
        EXPECT(0x2536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0113
        gbc.setState(0x35ad, 0x514b, 0xd450, 0xa6a1, 0x8665, 0xcb53, 0x1, 0x1);
        gbc.writeMem(0x35ad, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x514b, gbc.sp());
        EXPECT(0x35af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0114
        gbc.setState(0xa571, 0x2b75, 0x1f00, 0xbc08, 0x9a51, 0x5d84, 0x0, 0x0);
        gbc.writeMem(0xa571, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2b75, gbc.sp());
        EXPECT(0xa573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa571));
        EXPECT(0x4, gbc.readMem(0xa572));
        // CB 04 0116
        gbc.setState(0x2f04, 0x6110, 0xe8b0, 0x12e0, 0xcca3, 0x12e, 0x1, 0x0);
        gbc.writeMem(0x2f04, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6110, gbc.sp());
        EXPECT(0x2f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0117
        gbc.setState(0xa1fd, 0xf1cf, 0x2990, 0x8b37, 0xce3b, 0xc0ef, 0x0, 0x1);
        gbc.writeMem(0xa1fd, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf1cf, gbc.sp());
        EXPECT(0xa1ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1fd));
        EXPECT(0x4, gbc.readMem(0xa1fe));
        // CB 04 0118
        gbc.setState(0x30ce, 0x63e1, 0xacd0, 0x3c35, 0x66f7, 0xda21, 0x0, 0x1);
        gbc.writeMem(0x30ce, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x63e1, gbc.sp());
        EXPECT(0x30d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 011A
        gbc.setState(0xc2cc, 0xccd8, 0xbc10, 0x4bf, 0xbe95, 0x6580, 0x1, 0x1);
        gbc.writeMem(0xc2cc, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xccd8, gbc.sp());
        EXPECT(0xc2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2cc));
        EXPECT(0x4, gbc.readMem(0xc2cd));
        // CB 04 011B
        gbc.setState(0xb46b, 0xa7f1, 0xb1a0, 0x4d84, 0xa36d, 0x9838, 0x1, 0x1);
        gbc.writeMem(0xb46b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa7f1, gbc.sp());
        EXPECT(0xb46d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb46b));
        EXPECT(0x4, gbc.readMem(0xb46c));
        // CB 04 011C
        gbc.setState(0xba7a, 0x9846, 0x1290, 0x39d4, 0x1d6e, 0xe8d0, 0x1, 0x1);
        gbc.writeMem(0xba7a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9846, gbc.sp());
        EXPECT(0xba7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba7a));
        EXPECT(0x4, gbc.readMem(0xba7b));
        // CB 04 011D
        gbc.setState(0x2b9e, 0xceeb, 0x79f0, 0xb63, 0xb0b0, 0xc055, 0x0, 0x0);
        gbc.writeMem(0x2b9e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xceeb, gbc.sp());
        EXPECT(0x2ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 011E
        gbc.setState(0x479a, 0x6668, 0xf2f0, 0x4a57, 0xc9ff, 0x885, 0x1, 0x1);
        gbc.writeMem(0x479a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6668, gbc.sp());
        EXPECT(0x479c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 011F
        gbc.setState(0x638b, 0x8512, 0x5540, 0xe29d, 0x47fb, 0x49cf, 0x1, 0x0);
        gbc.writeMem(0x638b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8512, gbc.sp());
        EXPECT(0x638d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0120
        gbc.setState(0x5c9f, 0x9f71, 0xc370, 0xa19, 0xc866, 0x67f9, 0x0, 0x1);
        gbc.writeMem(0x5c9f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9f71, gbc.sp());
        EXPECT(0x5ca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0121
        gbc.setState(0x2feb, 0x39af, 0xebb0, 0x2dd9, 0x62d0, 0x83c0, 0x1, 0x1);
        gbc.writeMem(0x2feb, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x39af, gbc.sp());
        EXPECT(0x2fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0122
        gbc.setState(0x52ab, 0x1037, 0x63f0, 0xd05, 0x3893, 0xc72c, 0x0, 0x1);
        gbc.writeMem(0x52ab, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1037, gbc.sp());
        EXPECT(0x52ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0123
        gbc.setState(0x8775, 0xe450, 0xb050, 0xf7c0, 0xaf29, 0x782, 0x0, 0x0);
        gbc.writeMem(0x8775, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe450, gbc.sp());
        EXPECT(0x8777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8775));
        EXPECT(0x4, gbc.readMem(0x8776));
        // CB 04 0124
        gbc.setState(0xe1d6, 0x26ed, 0x2b40, 0x8fe8, 0xed80, 0xf71d, 0x0, 0x1);
        gbc.writeMem(0xe1d6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x26ed, gbc.sp());
        EXPECT(0xe1d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d6));
        EXPECT(0x4, gbc.readMem(0xe1d7));
        // CB 04 0125
        gbc.setState(0x3457, 0x868c, 0xc5f0, 0xe8d7, 0x30d2, 0xc04a, 0x1, 0x0);
        gbc.writeMem(0x3457, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x868c, gbc.sp());
        EXPECT(0x3459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0126
        gbc.setState(0x8ebf, 0x4742, 0xe4a0, 0x77a5, 0xf9dd, 0x3be3, 0x1, 0x0);
        gbc.writeMem(0x8ebf, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4742, gbc.sp());
        EXPECT(0x8ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ebf));
        EXPECT(0x4, gbc.readMem(0x8ec0));
        // CB 04 0127
        gbc.setState(0x8142, 0x23dc, 0x6e30, 0xa160, 0xe537, 0x9433, 0x1, 0x1);
        gbc.writeMem(0x8142, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x23dc, gbc.sp());
        EXPECT(0x8144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8142));
        EXPECT(0x4, gbc.readMem(0x8143));
        // CB 04 0128
        gbc.setState(0x37e7, 0x43be, 0xf490, 0x7fc4, 0x243f, 0x97a0, 0x0, 0x0);
        gbc.writeMem(0x37e7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x43be, gbc.sp());
        EXPECT(0x37e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0129
        gbc.setState(0x7b20, 0xcd0e, 0x7a30, 0x5423, 0x60e4, 0x404f, 0x0, 0x1);
        gbc.writeMem(0x7b20, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcd0e, gbc.sp());
        EXPECT(0x7b22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 012A
        gbc.setState(0xae4a, 0xbde7, 0xfb80, 0x3975, 0xf581, 0x65c5, 0x0, 0x1);
        gbc.writeMem(0xae4a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbde7, gbc.sp());
        EXPECT(0xae4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae4a));
        EXPECT(0x4, gbc.readMem(0xae4b));
        // CB 04 012B
        gbc.setState(0xcec, 0x3260, 0x8960, 0xba32, 0x41ae, 0xecce, 0x1, 0x1);
        gbc.writeMem(0xcec, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3260, gbc.sp());
        EXPECT(0xcee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 012C
        gbc.setState(0x68f2, 0x90a6, 0x1d20, 0x1166, 0x6608, 0x6750, 0x1, 0x1);
        gbc.writeMem(0x68f2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x90a6, gbc.sp());
        EXPECT(0x68f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 012D
        gbc.setState(0x6f2, 0x3ac9, 0x19d0, 0xadd6, 0xd003, 0x9e61, 0x1, 0x0);
        gbc.writeMem(0x6f2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3ac9, gbc.sp());
        EXPECT(0x6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 012E
        gbc.setState(0x4ba7, 0x2a0b, 0xdae0, 0xa8d7, 0x150f, 0x28d1, 0x0, 0x0);
        gbc.writeMem(0x4ba7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2a0b, gbc.sp());
        EXPECT(0x4ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 012F
        gbc.setState(0x889, 0xa647, 0xb720, 0x4e49, 0xa070, 0x5cbe, 0x1, 0x0);
        gbc.writeMem(0x889, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa647, gbc.sp());
        EXPECT(0x88b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0130
        gbc.setState(0xad, 0x5f60, 0x3500, 0x9782, 0xde4b, 0xe3c8, 0x0, 0x0);
        gbc.writeMem(0xad, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5f60, gbc.sp());
        EXPECT(0xaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0131
        gbc.setState(0xcc1, 0x13de, 0x8570, 0xc773, 0x18b9, 0x846b, 0x0, 0x1);
        gbc.writeMem(0xcc1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x13de, gbc.sp());
        EXPECT(0xcc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0132
        gbc.setState(0x93c4, 0x1c33, 0xb700, 0x863, 0x34a3, 0x17fc, 0x1, 0x1);
        gbc.writeMem(0x93c4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1c33, gbc.sp());
        EXPECT(0x93c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c4));
        EXPECT(0x4, gbc.readMem(0x93c5));
        // CB 04 0133
        gbc.setState(0x5938, 0xe15b, 0xd460, 0xa118, 0xdc33, 0x6d66, 0x1, 0x1);
        gbc.writeMem(0x5938, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe15b, gbc.sp());
        EXPECT(0x593a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0135
        gbc.setState(0xe334, 0x8ee3, 0x2f0, 0x5809, 0xa1d1, 0x52e8, 0x1, 0x0);
        gbc.writeMem(0xe334, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8ee3, gbc.sp());
        EXPECT(0xe336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe334));
        EXPECT(0x4, gbc.readMem(0xe335));
        // CB 04 0136
        gbc.setState(0x99c9, 0x8b22, 0xae90, 0xf1f6, 0x5d9, 0x3f20, 0x0, 0x0);
        gbc.writeMem(0x99c9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8b22, gbc.sp());
        EXPECT(0x99cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99c9));
        EXPECT(0x4, gbc.readMem(0x99ca));
        // CB 04 0137
        gbc.setState(0x9853, 0xb0eb, 0xcc20, 0x47be, 0xf1f2, 0xd19e, 0x1, 0x1);
        gbc.writeMem(0x9853, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb0eb, gbc.sp());
        EXPECT(0x9855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9853));
        EXPECT(0x4, gbc.readMem(0x9854));
        // CB 04 0138
        gbc.setState(0xd835, 0x45b8, 0x3360, 0xc3a4, 0xde2e, 0x3411, 0x0, 0x0);
        gbc.writeMem(0xd835, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x45b8, gbc.sp());
        EXPECT(0xd837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd835));
        EXPECT(0x4, gbc.readMem(0xd836));
        // CB 04 0139
        gbc.setState(0x324e, 0xc143, 0xfe40, 0x5dc1, 0x9a75, 0xb748, 0x1, 0x1);
        gbc.writeMem(0x324e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc143, gbc.sp());
        EXPECT(0x3250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 013A
        gbc.setState(0x521e, 0x4306, 0x7b0, 0x183e, 0x68f9, 0xbbe9, 0x0, 0x0);
        gbc.writeMem(0x521e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4306, gbc.sp());
        EXPECT(0x5220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 013B
        gbc.setState(0xb272, 0xd0da, 0xf5c0, 0x8233, 0x3171, 0x13ec, 0x1, 0x0);
        gbc.writeMem(0xb272, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd0da, gbc.sp());
        EXPECT(0xb274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb272));
        EXPECT(0x4, gbc.readMem(0xb273));
        // CB 04 013C
        gbc.setState(0x73fe, 0xcabc, 0x830, 0x2cb0, 0x2a9c, 0x7e70, 0x1, 0x1);
        gbc.writeMem(0x73fe, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xcabc, gbc.sp());
        EXPECT(0x7400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 013D
        gbc.setState(0x449b, 0x12ac, 0xfbf0, 0xf48e, 0xf59d, 0x9b, 0x1, 0x0);
        gbc.writeMem(0x449b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x12ac, gbc.sp());
        EXPECT(0x449d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 013E
        gbc.setState(0x597b, 0xcb0f, 0xc2b0, 0xfe29, 0x9649, 0x81ca, 0x0, 0x0);
        gbc.writeMem(0x597b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcb0f, gbc.sp());
        EXPECT(0x597d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 013F
        gbc.setState(0x5d4d, 0xec74, 0x7260, 0xba18, 0x91c1, 0xd425, 0x1, 0x1);
        gbc.writeMem(0x5d4d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xec74, gbc.sp());
        EXPECT(0x5d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0140
        gbc.setState(0x62d0, 0x57c6, 0x1050, 0x90ae, 0xd4f7, 0x69fd, 0x1, 0x0);
        gbc.writeMem(0x62d0, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x57c6, gbc.sp());
        EXPECT(0x62d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0141
        gbc.setState(0x443c, 0x6a27, 0x1d00, 0xd587, 0x5d57, 0xc020, 0x0, 0x1);
        gbc.writeMem(0x443c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6a27, gbc.sp());
        EXPECT(0x443e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0142
        gbc.setState(0xef53, 0x4500, 0x41e0, 0xba5f, 0xf78b, 0x7e32, 0x1, 0x1);
        gbc.writeMem(0xef53, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4500, gbc.sp());
        EXPECT(0xef55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef53));
        EXPECT(0x4, gbc.readMem(0xef54));
        // CB 04 0143
        gbc.setState(0x378a, 0xf157, 0x89c0, 0xc123, 0xebf3, 0x9b07, 0x1, 0x0);
        gbc.writeMem(0x378a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf157, gbc.sp());
        EXPECT(0x378c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0144
        gbc.setState(0xbac9, 0xd9b4, 0x87f0, 0x8434, 0x983f, 0x7dc6, 0x0, 0x0);
        gbc.writeMem(0xbac9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd9b4, gbc.sp());
        EXPECT(0xbacb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac9));
        EXPECT(0x4, gbc.readMem(0xbaca));
        // CB 04 0145
        gbc.setState(0x5153, 0x8b4, 0xe040, 0x3e05, 0x6f1, 0x3341, 0x1, 0x0);
        gbc.writeMem(0x5153, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8b4, gbc.sp());
        EXPECT(0x5155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0146
        gbc.setState(0x1f05, 0xd603, 0x63b0, 0x7280, 0x2cc1, 0xa1f9, 0x1, 0x1);
        gbc.writeMem(0x1f05, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd603, gbc.sp());
        EXPECT(0x1f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0147
        gbc.setState(0x4de3, 0x902c, 0xb600, 0x5047, 0x6538, 0xff35, 0x1, 0x1);
        gbc.writeMem(0x4de3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x902c, gbc.sp());
        EXPECT(0x4de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0149
        gbc.setState(0xdeb8, 0xd5c2, 0x75e0, 0xdc12, 0x402a, 0x821f, 0x1, 0x0);
        gbc.writeMem(0xdeb8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd5c2, gbc.sp());
        EXPECT(0xdeba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb8));
        EXPECT(0x4, gbc.readMem(0xdeb9));
        // CB 04 014A
        gbc.setState(0xe6d1, 0x256c, 0x9390, 0xd48c, 0x20a, 0xd406, 0x1, 0x0);
        gbc.writeMem(0xe6d1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x256c, gbc.sp());
        EXPECT(0xe6d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d1));
        EXPECT(0x4, gbc.readMem(0xe6d2));
        // CB 04 014B
        gbc.setState(0xd518, 0x714, 0x3390, 0xdf01, 0xe300, 0xb7d, 0x1, 0x1);
        gbc.writeMem(0xd518, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x714, gbc.sp());
        EXPECT(0xd51a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd518));
        EXPECT(0x4, gbc.readMem(0xd519));
        // CB 04 014C
        gbc.setState(0x4896, 0x7b53, 0x28f0, 0x6064, 0x3cba, 0x1352, 0x0, 0x0);
        gbc.writeMem(0x4896, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7b53, gbc.sp());
        EXPECT(0x4898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 014D
        gbc.setState(0x5f6c, 0x64f, 0x9d10, 0xff10, 0xd295, 0xd5c5, 0x1, 0x0);
        gbc.writeMem(0x5f6c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x64f, gbc.sp());
        EXPECT(0x5f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 014E
        gbc.setState(0x4cf2, 0x437c, 0x3290, 0x81e1, 0x62a6, 0xf32e, 0x0, 0x0);
        gbc.writeMem(0x4cf2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x437c, gbc.sp());
        EXPECT(0x4cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 014F
        gbc.setState(0x1469, 0x74e7, 0x1820, 0xbc0, 0xe7d4, 0xbcfc, 0x0, 0x0);
        gbc.writeMem(0x1469, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x74e7, gbc.sp());
        EXPECT(0x146b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0150
        gbc.setState(0xdb5, 0x309c, 0x3d40, 0x363, 0x8db7, 0x8698, 0x1, 0x1);
        gbc.writeMem(0xdb5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x309c, gbc.sp());
        EXPECT(0xdb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0151
        gbc.setState(0xa524, 0x3025, 0x94c0, 0x43f3, 0xc696, 0x1be8, 0x0, 0x0);
        gbc.writeMem(0xa524, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3025, gbc.sp());
        EXPECT(0xa526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa524));
        EXPECT(0x4, gbc.readMem(0xa525));
        // CB 04 0152
        gbc.setState(0x7305, 0x9773, 0x1460, 0xb4f, 0x5ad2, 0x4b9, 0x0, 0x0);
        gbc.writeMem(0x7305, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9773, gbc.sp());
        EXPECT(0x7307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0153
        gbc.setState(0x37de, 0xde1a, 0x8960, 0xa1a7, 0x7d36, 0xfe15, 0x1, 0x0);
        gbc.writeMem(0x37de, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xde1a, gbc.sp());
        EXPECT(0x37e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0154
        gbc.setState(0xc2a9, 0x2c31, 0xa360, 0x1fb3, 0xa601, 0x345d, 0x0, 0x0);
        gbc.writeMem(0xc2a9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2c31, gbc.sp());
        EXPECT(0xc2ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a9));
        EXPECT(0x4, gbc.readMem(0xc2aa));
        // CB 04 0155
        gbc.setState(0x4cb8, 0x5818, 0xdc10, 0x79b8, 0xad9d, 0xdb15, 0x0, 0x1);
        gbc.writeMem(0x4cb8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5818, gbc.sp());
        EXPECT(0x4cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0156
        gbc.setState(0x7d78, 0x2e08, 0x4690, 0x846c, 0xebac, 0x31b5, 0x0, 0x0);
        gbc.writeMem(0x7d78, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2e08, gbc.sp());
        EXPECT(0x7d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0157
        gbc.setState(0x925b, 0x536, 0x690, 0xf48b, 0x620d, 0x6010, 0x0, 0x1);
        gbc.writeMem(0x925b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x536, gbc.sp());
        EXPECT(0x925d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x925b));
        EXPECT(0x4, gbc.readMem(0x925c));
        // CB 04 0158
        gbc.setState(0x5623, 0x2b30, 0x4f90, 0x4478, 0xe4e2, 0xa1f5, 0x1, 0x0);
        gbc.writeMem(0x5623, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2b30, gbc.sp());
        EXPECT(0x5625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0159
        gbc.setState(0x405d, 0x44f3, 0xd560, 0xf224, 0x6aab, 0x30d, 0x1, 0x1);
        gbc.writeMem(0x405d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x44f3, gbc.sp());
        EXPECT(0x405f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 015A
        gbc.setState(0xdd4e, 0x431d, 0x2820, 0xe60f, 0xf7dd, 0x1de, 0x0, 0x1);
        gbc.writeMem(0xdd4e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x431d, gbc.sp());
        EXPECT(0xdd50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd4e));
        EXPECT(0x4, gbc.readMem(0xdd4f));
        // CB 04 015B
        gbc.setState(0xbe41, 0xff3e, 0x9f30, 0xc02a, 0x293a, 0x7809, 0x1, 0x1);
        gbc.writeMem(0xbe41, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xff3e, gbc.sp());
        EXPECT(0xbe43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe41));
        EXPECT(0x4, gbc.readMem(0xbe42));
        // CB 04 015D
        gbc.setState(0x1a96, 0xb29e, 0x4f20, 0xccf4, 0xfa6c, 0x36fb, 0x1, 0x1);
        gbc.writeMem(0x1a96, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb29e, gbc.sp());
        EXPECT(0x1a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 015E
        gbc.setState(0xe4f8, 0xf70f, 0x9c90, 0x9d50, 0xc6e8, 0x547e, 0x1, 0x0);
        gbc.writeMem(0xe4f8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf70f, gbc.sp());
        EXPECT(0xe4fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f8));
        EXPECT(0x4, gbc.readMem(0xe4f9));
        // CB 04 015F
        gbc.setState(0xacf, 0x7afc, 0x98e0, 0x4fed, 0x4da2, 0x9394, 0x1, 0x1);
        gbc.writeMem(0xacf, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7afc, gbc.sp());
        EXPECT(0xad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0160
        gbc.setState(0x9f2f, 0x4519, 0xdda0, 0x898e, 0x443f, 0x6e15, 0x1, 0x1);
        gbc.writeMem(0x9f2f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4519, gbc.sp());
        EXPECT(0x9f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f2f));
        EXPECT(0x4, gbc.readMem(0x9f30));
        // CB 04 0161
        gbc.setState(0xe954, 0xa979, 0xd270, 0x555a, 0xfd6b, 0x30ad, 0x1, 0x1);
        gbc.writeMem(0xe954, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa979, gbc.sp());
        EXPECT(0xe956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe954));
        EXPECT(0x4, gbc.readMem(0xe955));
        // CB 04 0162
        gbc.setState(0xe501, 0xbce7, 0x3e0, 0x2b1e, 0xe737, 0x2c00, 0x1, 0x0);
        gbc.writeMem(0xe501, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbce7, gbc.sp());
        EXPECT(0xe503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe501));
        EXPECT(0x4, gbc.readMem(0xe502));
        // CB 04 0163
        gbc.setState(0x89f9, 0x5910, 0xe930, 0xe4f2, 0x74ee, 0xd469, 0x1, 0x0);
        gbc.writeMem(0x89f9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5910, gbc.sp());
        EXPECT(0x89fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89f9));
        EXPECT(0x4, gbc.readMem(0x89fa));
        // CB 04 0164
        gbc.setState(0xc044, 0xa2fd, 0xb210, 0x74f, 0xc177, 0xdb1c, 0x1, 0x0);
        gbc.writeMem(0xc044, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa2fd, gbc.sp());
        EXPECT(0xc046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc044));
        EXPECT(0x4, gbc.readMem(0xc045));
        // CB 04 0165
        gbc.setState(0x21ea, 0x7345, 0xa0d0, 0x6391, 0x4ca0, 0xea25, 0x0, 0x0);
        gbc.writeMem(0x21ea, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7345, gbc.sp());
        EXPECT(0x21ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0166
        gbc.setState(0x80db, 0x830e, 0x93e0, 0x2542, 0xaf40, 0x2072, 0x1, 0x1);
        gbc.writeMem(0x80db, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x830e, gbc.sp());
        EXPECT(0x80dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80db));
        EXPECT(0x4, gbc.readMem(0x80dc));
        // CB 04 0167
        gbc.setState(0x7f89, 0xfda4, 0x2ea0, 0xee03, 0x4e25, 0xd611, 0x1, 0x0);
        gbc.writeMem(0x7f89, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfda4, gbc.sp());
        EXPECT(0x7f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0168
        gbc.setState(0x2036, 0xb7c8, 0x6cc0, 0xd5fd, 0x1662, 0x7787, 0x1, 0x1);
        gbc.writeMem(0x2036, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb7c8, gbc.sp());
        EXPECT(0x2038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0169
        gbc.setState(0x802, 0x7390, 0x2630, 0x2212, 0x666f, 0x135f, 0x0, 0x1);
        gbc.writeMem(0x802, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7390, gbc.sp());
        EXPECT(0x804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 016A
        gbc.setState(0x1249, 0x5239, 0xffb0, 0x1c65, 0x80da, 0x474c, 0x0, 0x0);
        gbc.writeMem(0x1249, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5239, gbc.sp());
        EXPECT(0x124b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 016B
        gbc.setState(0x4408, 0xeb06, 0x69d0, 0xe6ec, 0x671, 0x2572, 0x1, 0x0);
        gbc.writeMem(0x4408, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xeb06, gbc.sp());
        EXPECT(0x440a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 016C
        gbc.setState(0x1861, 0x15e9, 0xf8a0, 0x21b6, 0x8b63, 0xd9a1, 0x1, 0x0);
        gbc.writeMem(0x1861, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x15e9, gbc.sp());
        EXPECT(0x1863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 016D
        gbc.setState(0x3253, 0x480f, 0xb260, 0xa1d4, 0x40be, 0xf319, 0x1, 0x1);
        gbc.writeMem(0x3253, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x480f, gbc.sp());
        EXPECT(0x3255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 016E
        gbc.setState(0x79aa, 0x41bb, 0x8200, 0xed89, 0x73a8, 0xc5b4, 0x1, 0x1);
        gbc.writeMem(0x79aa, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x41bb, gbc.sp());
        EXPECT(0x79ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 016F
        gbc.setState(0x5ea5, 0x4327, 0x2da0, 0x3604, 0x204e, 0x6aea, 0x1, 0x0);
        gbc.writeMem(0x5ea5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4327, gbc.sp());
        EXPECT(0x5ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0170
        gbc.setState(0xe867, 0x2ee6, 0xd400, 0xa696, 0xa50b, 0x3abd, 0x0, 0x0);
        gbc.writeMem(0xe867, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2ee6, gbc.sp());
        EXPECT(0xe869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe867));
        EXPECT(0x4, gbc.readMem(0xe868));
        // CB 04 0171
        gbc.setState(0x6ab2, 0xcc5c, 0xb1a0, 0x39fd, 0x825d, 0xf7fd, 0x1, 0x1);
        gbc.writeMem(0x6ab2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcc5c, gbc.sp());
        EXPECT(0x6ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0172
        gbc.setState(0xd864, 0x3a4, 0xa460, 0x1fc8, 0x6bd2, 0x76d9, 0x1, 0x0);
        gbc.writeMem(0xd864, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3a4, gbc.sp());
        EXPECT(0xd866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd864));
        EXPECT(0x4, gbc.readMem(0xd865));
        // CB 04 0173
        gbc.setState(0x98ba, 0x4462, 0xc490, 0xd3c0, 0x783f, 0xba6b, 0x0, 0x1);
        gbc.writeMem(0x98ba, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4462, gbc.sp());
        EXPECT(0x98bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ba));
        EXPECT(0x4, gbc.readMem(0x98bb));
        // CB 04 0174
        gbc.setState(0x974, 0xd980, 0xf600, 0x5a0e, 0xf25f, 0x202f, 0x0, 0x1);
        gbc.writeMem(0x974, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd980, gbc.sp());
        EXPECT(0x976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0175
        gbc.setState(0x64f9, 0x54d4, 0xcc20, 0x7187, 0x4df4, 0x5899, 0x0, 0x0);
        gbc.writeMem(0x64f9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x54d4, gbc.sp());
        EXPECT(0x64fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0176
        gbc.setState(0x3678, 0x6f0a, 0xe070, 0xfa61, 0x4fa4, 0x391a, 0x1, 0x0);
        gbc.writeMem(0x3678, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6f0a, gbc.sp());
        EXPECT(0x367a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0177
        gbc.setState(0x885, 0xf3d6, 0xfd10, 0x1bef, 0x3ca2, 0x8009, 0x1, 0x0);
        gbc.writeMem(0x885, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf3d6, gbc.sp());
        EXPECT(0x887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0178
        gbc.setState(0xdb2c, 0xda13, 0xc740, 0x7459, 0x1477, 0xa53a, 0x1, 0x0);
        gbc.writeMem(0xdb2c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xda13, gbc.sp());
        EXPECT(0xdb2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb2c));
        EXPECT(0x4, gbc.readMem(0xdb2d));
        // CB 04 0179
        gbc.setState(0x89a7, 0xef4d, 0x1ef0, 0x42d5, 0x524e, 0x4cfc, 0x1, 0x0);
        gbc.writeMem(0x89a7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xef4d, gbc.sp());
        EXPECT(0x89a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a7));
        EXPECT(0x4, gbc.readMem(0x89a8));
        // CB 04 017A
        gbc.setState(0x940f, 0xb34, 0xb190, 0xfaf0, 0x151b, 0xa90d, 0x1, 0x1);
        gbc.writeMem(0x940f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb34, gbc.sp());
        EXPECT(0x9411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940f));
        EXPECT(0x4, gbc.readMem(0x9410));
        // CB 04 017B
        gbc.setState(0x9ff2, 0xecdf, 0xaf00, 0xd925, 0x7f87, 0x4c23, 0x1, 0x0);
        gbc.writeMem(0x9ff2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xecdf, gbc.sp());
        EXPECT(0x9ff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff2));
        EXPECT(0x4, gbc.readMem(0x9ff3));
        // CB 04 017C
        gbc.setState(0x833b, 0x533d, 0x45d0, 0xb6ff, 0x92b6, 0x8c9d, 0x1, 0x0);
        gbc.writeMem(0x833b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x533d, gbc.sp());
        EXPECT(0x833d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x833b));
        EXPECT(0x4, gbc.readMem(0x833c));
        // CB 04 017D
        gbc.setState(0x4d43, 0x7f79, 0x20c0, 0x2cba, 0xaf61, 0x8845, 0x1, 0x1);
        gbc.writeMem(0x4d43, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7f79, gbc.sp());
        EXPECT(0x4d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 017E
        gbc.setState(0x4cc3, 0xede3, 0xfc00, 0xb611, 0x9097, 0xf97a, 0x0, 0x0);
        gbc.writeMem(0x4cc3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xede3, gbc.sp());
        EXPECT(0x4cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 017F
        gbc.setState(0x4672, 0x649, 0xd6e0, 0x84e7, 0xf5c, 0x7552, 0x1, 0x0);
        gbc.writeMem(0x4672, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x649, gbc.sp());
        EXPECT(0x4674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0180
        gbc.setState(0x87a3, 0x330e, 0xbe00, 0x8bb1, 0x5138, 0x683, 0x1, 0x1);
        gbc.writeMem(0x87a3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x330e, gbc.sp());
        EXPECT(0x87a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a3));
        EXPECT(0x4, gbc.readMem(0x87a4));
        // CB 04 0181
        gbc.setState(0x67d2, 0x352, 0x2a0, 0xbb15, 0x53f5, 0x6b35, 0x0, 0x0);
        gbc.writeMem(0x67d2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x352, gbc.sp());
        EXPECT(0x67d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0182
        gbc.setState(0x32ca, 0x6ee1, 0x1550, 0x7b0e, 0xfa65, 0xfd21, 0x1, 0x1);
        gbc.writeMem(0x32ca, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6ee1, gbc.sp());
        EXPECT(0x32cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0183
        gbc.setState(0x4838, 0x31e1, 0x26d0, 0x829f, 0x69b7, 0xfe7a, 0x0, 0x0);
        gbc.writeMem(0x4838, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x31e1, gbc.sp());
        EXPECT(0x483a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0184
        gbc.setState(0xaa26, 0xd2c7, 0x34d0, 0x3bd9, 0x2845, 0x8134, 0x0, 0x1);
        gbc.writeMem(0xaa26, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd2c7, gbc.sp());
        EXPECT(0xaa28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa26));
        EXPECT(0x4, gbc.readMem(0xaa27));
        // CB 04 0185
        gbc.setState(0xb7c0, 0xbf79, 0x5c50, 0xaca2, 0x9ff2, 0x8131, 0x1, 0x1);
        gbc.writeMem(0xb7c0, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbf79, gbc.sp());
        EXPECT(0xb7c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c0));
        EXPECT(0x4, gbc.readMem(0xb7c1));
        // CB 04 0186
        gbc.setState(0x8276, 0xf0ed, 0x8e30, 0xa29a, 0x6624, 0xea02, 0x0, 0x0);
        gbc.writeMem(0x8276, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf0ed, gbc.sp());
        EXPECT(0x8278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8276));
        EXPECT(0x4, gbc.readMem(0x8277));
        // CB 04 0187
        gbc.setState(0x82d8, 0xf4c9, 0xe020, 0xe925, 0xa830, 0x44c0, 0x0, 0x1);
        gbc.writeMem(0x82d8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf4c9, gbc.sp());
        EXPECT(0x82da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d8));
        EXPECT(0x4, gbc.readMem(0x82d9));
        // CB 04 0189
        gbc.setState(0x6733, 0x2120, 0x2c30, 0xb9f8, 0x756c, 0xbe2b, 0x0, 0x0);
        gbc.writeMem(0x6733, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2120, gbc.sp());
        EXPECT(0x6735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 018A
        gbc.setState(0x260, 0x7b3f, 0x8920, 0xfd66, 0x7d07, 0x53e0, 0x1, 0x0);
        gbc.writeMem(0x260, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7b3f, gbc.sp());
        EXPECT(0x262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 018B
        gbc.setState(0xc1f4, 0x6414, 0xbfb0, 0xae59, 0x7f04, 0xfaa1, 0x0, 0x0);
        gbc.writeMem(0xc1f4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6414, gbc.sp());
        EXPECT(0xc1f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f4));
        EXPECT(0x4, gbc.readMem(0xc1f5));
        // CB 04 018C
        gbc.setState(0xdb26, 0xb0e8, 0x1010, 0x35d8, 0xa8a9, 0xbab5, 0x1, 0x0);
        gbc.writeMem(0xdb26, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb0e8, gbc.sp());
        EXPECT(0xdb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb26));
        EXPECT(0x4, gbc.readMem(0xdb27));
        // CB 04 018D
        gbc.setState(0x7f32, 0x8b5c, 0x7220, 0x34da, 0xb49a, 0x5235, 0x1, 0x1);
        gbc.writeMem(0x7f32, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8b5c, gbc.sp());
        EXPECT(0x7f34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 018E
        gbc.setState(0x5626, 0xb2c, 0xcd50, 0xb7c2, 0x521e, 0xcda1, 0x0, 0x1);
        gbc.writeMem(0x5626, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb2c, gbc.sp());
        EXPECT(0x5628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 018F
        gbc.setState(0xee42, 0xa552, 0xeba0, 0xff6, 0xb4d, 0x46ef, 0x1, 0x0);
        gbc.writeMem(0xee42, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa552, gbc.sp());
        EXPECT(0xee44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee42));
        EXPECT(0x4, gbc.readMem(0xee43));
        // CB 04 0190
        gbc.setState(0xdad1, 0x7126, 0x6590, 0x5387, 0x4f11, 0x5130, 0x1, 0x1);
        gbc.writeMem(0xdad1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7126, gbc.sp());
        EXPECT(0xdad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad1));
        EXPECT(0x4, gbc.readMem(0xdad2));
        // CB 04 0191
        gbc.setState(0xcd8f, 0x59cb, 0x5eb0, 0xafcd, 0x6fe9, 0xb476, 0x0, 0x0);
        gbc.writeMem(0xcd8f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x59cb, gbc.sp());
        EXPECT(0xcd91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd8f));
        EXPECT(0x4, gbc.readMem(0xcd90));
        // CB 04 0192
        gbc.setState(0xd268, 0xcac1, 0xd050, 0x7fed, 0x72bf, 0x8693, 0x1, 0x0);
        gbc.writeMem(0xd268, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcac1, gbc.sp());
        EXPECT(0xd26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd268));
        EXPECT(0x4, gbc.readMem(0xd269));
        // CB 04 0193
        gbc.setState(0x56b, 0xcef4, 0xb70, 0xcaa4, 0xe9f8, 0x56ab, 0x1, 0x0);
        gbc.writeMem(0x56b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcef4, gbc.sp());
        EXPECT(0x56d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0194
        gbc.setState(0x52d5, 0x984, 0x7d10, 0x492f, 0xf3e0, 0xc011, 0x1, 0x0);
        gbc.writeMem(0x52d5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x984, gbc.sp());
        EXPECT(0x52d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0195
        gbc.setState(0x3aff, 0x927b, 0xc250, 0xd6ec, 0x8e8d, 0x6137, 0x1, 0x1);
        gbc.writeMem(0x3aff, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x927b, gbc.sp());
        EXPECT(0x3b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0196
        gbc.setState(0x793e, 0xa6f6, 0xc720, 0x4ca8, 0xd750, 0x4d73, 0x1, 0x1);
        gbc.writeMem(0x793e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa6f6, gbc.sp());
        EXPECT(0x7940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0197
        gbc.setState(0x5b7d, 0x8319, 0x2210, 0xc6d9, 0x3fe, 0xce06, 0x1, 0x0);
        gbc.writeMem(0x5b7d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8319, gbc.sp());
        EXPECT(0x5b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0199
        gbc.setState(0xc3f2, 0x3f5c, 0x2940, 0xbcd2, 0x7272, 0xc92, 0x1, 0x0);
        gbc.writeMem(0xc3f2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3f5c, gbc.sp());
        EXPECT(0xc3f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f2));
        EXPECT(0x4, gbc.readMem(0xc3f3));
        // CB 04 019A
        gbc.setState(0x2241, 0x5bb5, 0xe70, 0x56b5, 0x4501, 0x15e, 0x1, 0x1);
        gbc.writeMem(0x2241, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5bb5, gbc.sp());
        EXPECT(0x2243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 019B
        gbc.setState(0x4afa, 0x443d, 0xafd0, 0xfd8e, 0x713c, 0xb056, 0x0, 0x1);
        gbc.writeMem(0x4afa, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x443d, gbc.sp());
        EXPECT(0x4afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 019C
        gbc.setState(0xa40f, 0x6d4e, 0xcad0, 0x9319, 0xffc1, 0x5660, 0x0, 0x1);
        gbc.writeMem(0xa40f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6d4e, gbc.sp());
        EXPECT(0xa411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40f));
        EXPECT(0x4, gbc.readMem(0xa410));
        // CB 04 019D
        gbc.setState(0xefac, 0x2aef, 0xdff0, 0xed87, 0xaa96, 0x6253, 0x0, 0x0);
        gbc.writeMem(0xefac, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2aef, gbc.sp());
        EXPECT(0xefae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefac));
        EXPECT(0x4, gbc.readMem(0xefad));
        // CB 04 019E
        gbc.setState(0xb584, 0x2e23, 0x35b0, 0x5bed, 0xefbc, 0xc849, 0x1, 0x1);
        gbc.writeMem(0xb584, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2e23, gbc.sp());
        EXPECT(0xb586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb584));
        EXPECT(0x4, gbc.readMem(0xb585));
        // CB 04 019F
        gbc.setState(0x56f4, 0x456c, 0x6920, 0xeb38, 0xd7c5, 0x3a85, 0x1, 0x1);
        gbc.writeMem(0x56f4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x456c, gbc.sp());
        EXPECT(0x56f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01A0
        gbc.setState(0x670b, 0x8360, 0x430, 0xc1b6, 0x1909, 0x8381, 0x0, 0x0);
        gbc.writeMem(0x670b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8360, gbc.sp());
        EXPECT(0x670d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01A1
        gbc.setState(0x47d3, 0x4546, 0x31b0, 0x4f1b, 0xdf00, 0xdee1, 0x1, 0x0);
        gbc.writeMem(0x47d3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4546, gbc.sp());
        EXPECT(0x47d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01A2
        gbc.setState(0xe841, 0x4011, 0xc00, 0x35eb, 0x4a96, 0xcbb1, 0x0, 0x1);
        gbc.writeMem(0xe841, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4011, gbc.sp());
        EXPECT(0xe843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe841));
        EXPECT(0x4, gbc.readMem(0xe842));
        // CB 04 01A3
        gbc.setState(0x3166, 0xe2d1, 0xd140, 0x824a, 0xedaf, 0xb4f8, 0x0, 0x0);
        gbc.writeMem(0x3166, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe2d1, gbc.sp());
        EXPECT(0x3168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01A4
        gbc.setState(0x4d8a, 0xd20, 0x8300, 0x787, 0x6ccc, 0xd051, 0x1, 0x1);
        gbc.writeMem(0x4d8a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd20, gbc.sp());
        EXPECT(0x4d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01A5
        gbc.setState(0xe87d, 0x122, 0x8d00, 0x9bcb, 0xef95, 0xb123, 0x0, 0x0);
        gbc.writeMem(0xe87d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x122, gbc.sp());
        EXPECT(0xe87f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe87d));
        EXPECT(0x4, gbc.readMem(0xe87e));
        // CB 04 01A6
        gbc.setState(0x856e, 0xa495, 0xb640, 0xc063, 0xc66e, 0x6cb, 0x0, 0x0);
        gbc.writeMem(0x856e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa495, gbc.sp());
        EXPECT(0x8570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856e));
        EXPECT(0x4, gbc.readMem(0x856f));
        // CB 04 01A7
        gbc.setState(0xbb39, 0x8328, 0xf5e0, 0xb7d4, 0x7e90, 0x2cfb, 0x1, 0x1);
        gbc.writeMem(0xbb39, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8328, gbc.sp());
        EXPECT(0xbb3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb39));
        EXPECT(0x4, gbc.readMem(0xbb3a));
        // CB 04 01A8
        gbc.setState(0x6ada, 0x824e, 0xd090, 0xb504, 0x88ba, 0x8573, 0x0, 0x1);
        gbc.writeMem(0x6ada, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x824e, gbc.sp());
        EXPECT(0x6adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01A9
        gbc.setState(0x2356, 0x69f9, 0xc7f0, 0xff84, 0x9004, 0x1695, 0x1, 0x1);
        gbc.writeMem(0x2356, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x69f9, gbc.sp());
        EXPECT(0x2358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01AA
        gbc.setState(0x7f2f, 0xa56c, 0xfb20, 0x11ab, 0xcaaa, 0xa75f, 0x0, 0x1);
        gbc.writeMem(0x7f2f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa56c, gbc.sp());
        EXPECT(0x7f31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01AB
        gbc.setState(0x24ce, 0xfe19, 0xf9f0, 0x66db, 0x7226, 0x9a73, 0x1, 0x1);
        gbc.writeMem(0x24ce, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfe19, gbc.sp());
        EXPECT(0x24d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01AC
        gbc.setState(0x2d2c, 0x7391, 0xf740, 0xb5a2, 0xce30, 0x9f53, 0x0, 0x1);
        gbc.writeMem(0x2d2c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7391, gbc.sp());
        EXPECT(0x2d2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01AD
        gbc.setState(0x7117, 0x44f1, 0x3eb0, 0x5d17, 0x8b7c, 0x69ce, 0x1, 0x1);
        gbc.writeMem(0x7117, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x44f1, gbc.sp());
        EXPECT(0x7119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01AE
        gbc.setState(0x7f6f, 0xa2a, 0xf90, 0x3389, 0xc61d, 0x2880, 0x1, 0x0);
        gbc.writeMem(0x7f6f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa2a, gbc.sp());
        EXPECT(0x7f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01B0
        gbc.setState(0xb3f3, 0x8d8, 0x8ac0, 0x9c1c, 0x5f20, 0x2a12, 0x0, 0x0);
        gbc.writeMem(0xb3f3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8d8, gbc.sp());
        EXPECT(0xb3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f3));
        EXPECT(0x4, gbc.readMem(0xb3f4));
        // CB 04 01B2
        gbc.setState(0x6696, 0x62c3, 0x18c0, 0x742d, 0x1c8d, 0x95d1, 0x0, 0x0);
        gbc.writeMem(0x6696, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x62c3, gbc.sp());
        EXPECT(0x6698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01B3
        gbc.setState(0xdb36, 0x76a2, 0x42f0, 0xe66b, 0x2b53, 0xb6f9, 0x0, 0x1);
        gbc.writeMem(0xdb36, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x76a2, gbc.sp());
        EXPECT(0xdb38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb36));
        EXPECT(0x4, gbc.readMem(0xdb37));
        // CB 04 01B4
        gbc.setState(0x81a8, 0xf450, 0x9eb0, 0xe373, 0x78a2, 0x9474, 0x0, 0x0);
        gbc.writeMem(0x81a8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf450, gbc.sp());
        EXPECT(0x81aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a8));
        EXPECT(0x4, gbc.readMem(0x81a9));
        // CB 04 01B5
        gbc.setState(0xce37, 0x95e2, 0x5920, 0x7462, 0xafcb, 0xe734, 0x1, 0x1);
        gbc.writeMem(0xce37, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x95e2, gbc.sp());
        EXPECT(0xce39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce37));
        EXPECT(0x4, gbc.readMem(0xce38));
        // CB 04 01B6
        gbc.setState(0x4ff8, 0xe71b, 0x5780, 0x5d5b, 0x5a61, 0x9475, 0x1, 0x0);
        gbc.writeMem(0x4ff8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe71b, gbc.sp());
        EXPECT(0x4ffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01B7
        gbc.setState(0x284, 0x8efb, 0xc580, 0xea5a, 0xc046, 0x10e4, 0x0, 0x1);
        gbc.writeMem(0x284, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8efb, gbc.sp());
        EXPECT(0x286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01B8
        gbc.setState(0x9a63, 0xb06e, 0x11c0, 0xb3d8, 0x93dd, 0xb8aa, 0x1, 0x1);
        gbc.writeMem(0x9a63, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb06e, gbc.sp());
        EXPECT(0x9a65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a63));
        EXPECT(0x4, gbc.readMem(0x9a64));
        // CB 04 01BA
        gbc.setState(0x1a29, 0xe96, 0xcf40, 0x2cfd, 0x8035, 0x5abc, 0x1, 0x1);
        gbc.writeMem(0x1a29, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe96, gbc.sp());
        EXPECT(0x1a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01BB
        gbc.setState(0x2cf8, 0xf4a9, 0xe750, 0xdae4, 0x902, 0xd9a7, 0x0, 0x1);
        gbc.writeMem(0x2cf8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf4a9, gbc.sp());
        EXPECT(0x2cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01BC
        gbc.setState(0x97c6, 0xc613, 0xf8a0, 0x8377, 0xa083, 0xb9d6, 0x0, 0x1);
        gbc.writeMem(0x97c6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc613, gbc.sp());
        EXPECT(0x97c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c6));
        EXPECT(0x4, gbc.readMem(0x97c7));
        // CB 04 01BD
        gbc.setState(0x8525, 0x4a04, 0xdff0, 0x6afe, 0xb27e, 0x17a0, 0x1, 0x1);
        gbc.writeMem(0x8525, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4a04, gbc.sp());
        EXPECT(0x8527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8525));
        EXPECT(0x4, gbc.readMem(0x8526));
        // CB 04 01BE
        gbc.setState(0x7ad9, 0x9a7b, 0xd410, 0x6247, 0x8f3c, 0xf812, 0x0, 0x0);
        gbc.writeMem(0x7ad9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9a7b, gbc.sp());
        EXPECT(0x7adb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01BF
        gbc.setState(0xe690, 0x84cd, 0x8380, 0x85b, 0xbbac, 0x90c2, 0x0, 0x0);
        gbc.writeMem(0xe690, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x84cd, gbc.sp());
        EXPECT(0xe692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe690));
        EXPECT(0x4, gbc.readMem(0xe691));
        // CB 04 01C0
        gbc.setState(0xc3b6, 0x99c0, 0x9d50, 0x69ba, 0xea2c, 0xf519, 0x1, 0x1);
        gbc.writeMem(0xc3b6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x99c0, gbc.sp());
        EXPECT(0xc3b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b6));
        EXPECT(0x4, gbc.readMem(0xc3b7));
        // CB 04 01C1
        gbc.setState(0xda7b, 0xc94d, 0x8a00, 0x81e3, 0xf461, 0x9860, 0x1, 0x1);
        gbc.writeMem(0xda7b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc94d, gbc.sp());
        EXPECT(0xda7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7b));
        EXPECT(0x4, gbc.readMem(0xda7c));
        // CB 04 01C2
        gbc.setState(0xd538, 0xe557, 0xd310, 0xbd94, 0xf9e6, 0x6d15, 0x0, 0x1);
        gbc.writeMem(0xd538, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe557, gbc.sp());
        EXPECT(0xd53a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd538));
        EXPECT(0x4, gbc.readMem(0xd539));
        // CB 04 01C3
        gbc.setState(0x5673, 0x433f, 0xaae0, 0xf089, 0x8ea5, 0x7221, 0x1, 0x1);
        gbc.writeMem(0x5673, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x433f, gbc.sp());
        EXPECT(0x5675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01C4
        gbc.setState(0xe4f2, 0x8926, 0xfe40, 0x5438, 0x1082, 0x6f6a, 0x0, 0x0);
        gbc.writeMem(0xe4f2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8926, gbc.sp());
        EXPECT(0xe4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f2));
        EXPECT(0x4, gbc.readMem(0xe4f3));
        // CB 04 01C6
        gbc.setState(0x9f9, 0x478e, 0x5df0, 0x24c1, 0x51d4, 0x436b, 0x0, 0x1);
        gbc.writeMem(0x9f9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x478e, gbc.sp());
        EXPECT(0x9fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01C7
        gbc.setState(0x7ff6, 0x770f, 0xf110, 0xc044, 0xa566, 0x7fe9, 0x0, 0x0);
        gbc.writeMem(0x7ff6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x770f, gbc.sp());
        EXPECT(0x7ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01C9
        gbc.setState(0xbbc3, 0x94aa, 0x3d0, 0x72b1, 0xcfd1, 0xf6db, 0x1, 0x1);
        gbc.writeMem(0xbbc3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x94aa, gbc.sp());
        EXPECT(0xbbc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc3));
        EXPECT(0x4, gbc.readMem(0xbbc4));
        // CB 04 01CA
        gbc.setState(0xc006, 0x5a6b, 0xb710, 0x964f, 0xe4ce, 0xb504, 0x0, 0x1);
        gbc.writeMem(0xc006, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5a6b, gbc.sp());
        EXPECT(0xc008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc006));
        EXPECT(0x4, gbc.readMem(0xc007));
        // CB 04 01CB
        gbc.setState(0x8b62, 0x907e, 0x5840, 0xfafb, 0xaff, 0xe1ea, 0x0, 0x0);
        gbc.writeMem(0x8b62, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x907e, gbc.sp());
        EXPECT(0x8b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b62));
        EXPECT(0x4, gbc.readMem(0x8b63));
        // CB 04 01CC
        gbc.setState(0x98b0, 0xd229, 0xaa10, 0xcf40, 0xc40d, 0xa6f7, 0x1, 0x0);
        gbc.writeMem(0x98b0, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd229, gbc.sp());
        EXPECT(0x98b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b0));
        EXPECT(0x4, gbc.readMem(0x98b1));
        // CB 04 01CD
        gbc.setState(0x5fcd, 0x4765, 0x5ab0, 0xda9f, 0x4ee7, 0x7d9a, 0x0, 0x0);
        gbc.writeMem(0x5fcd, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4765, gbc.sp());
        EXPECT(0x5fcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01CE
        gbc.setState(0xc2d, 0x1d06, 0xd4f0, 0xdaee, 0xcf33, 0xa5e1, 0x1, 0x1);
        gbc.writeMem(0xc2d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1d06, gbc.sp());
        EXPECT(0xc2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01CF
        gbc.setState(0x2ec4, 0xe7ca, 0x59b0, 0x1787, 0xdd40, 0x9950, 0x0, 0x0);
        gbc.writeMem(0x2ec4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe7ca, gbc.sp());
        EXPECT(0x2ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01D0
        gbc.setState(0x3f85, 0xf451, 0xed20, 0x652c, 0x2ea8, 0x9a38, 0x0, 0x0);
        gbc.writeMem(0x3f85, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf451, gbc.sp());
        EXPECT(0x3f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01D1
        gbc.setState(0x3942, 0x7fc4, 0x2390, 0xef70, 0x2f98, 0x5099, 0x1, 0x0);
        gbc.writeMem(0x3942, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7fc4, gbc.sp());
        EXPECT(0x3944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01D2
        gbc.setState(0x2ae5, 0x14fb, 0xd220, 0x1163, 0xc085, 0xf6b4, 0x0, 0x1);
        gbc.writeMem(0x2ae5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x14fb, gbc.sp());
        EXPECT(0x2ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01D3
        gbc.setState(0x144b, 0xbcce, 0xa570, 0x9cf2, 0xad24, 0xca0c, 0x1, 0x0);
        gbc.writeMem(0x144b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbcce, gbc.sp());
        EXPECT(0x144d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01D4
        gbc.setState(0xc3c, 0xed46, 0x25a0, 0xb403, 0x7235, 0x3965, 0x0, 0x0);
        gbc.writeMem(0xc3c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xed46, gbc.sp());
        EXPECT(0xc3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01D5
        gbc.setState(0x279f, 0x466, 0x99b0, 0x1b88, 0x50fe, 0x1dc1, 0x0, 0x0);
        gbc.writeMem(0x279f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x466, gbc.sp());
        EXPECT(0x27a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01D6
        gbc.setState(0x1df, 0xdbb4, 0xab70, 0x420d, 0xbb9a, 0x7d6a, 0x1, 0x1);
        gbc.writeMem(0x1df, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdbb4, gbc.sp());
        EXPECT(0x1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01D7
        gbc.setState(0xbdd, 0xca4d, 0x3080, 0x5ef8, 0xd975, 0x8ebe, 0x1, 0x0);
        gbc.writeMem(0xbdd, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xca4d, gbc.sp());
        EXPECT(0xbdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01D8
        gbc.setState(0x4f5d, 0xcea9, 0xcfc0, 0xc016, 0x3744, 0xd8fc, 0x1, 0x1);
        gbc.writeMem(0x4f5d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xcea9, gbc.sp());
        EXPECT(0x4f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01D9
        gbc.setState(0x5c4e, 0x205a, 0xf050, 0x495f, 0x47a, 0xceb5, 0x1, 0x0);
        gbc.writeMem(0x5c4e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x205a, gbc.sp());
        EXPECT(0x5c50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01DA
        gbc.setState(0x24b3, 0xea14, 0x14a0, 0x9bc4, 0x8bb3, 0x60da, 0x0, 0x1);
        gbc.writeMem(0x24b3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xea14, gbc.sp());
        EXPECT(0x24b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01DB
        gbc.setState(0x9446, 0x98ae, 0x5120, 0x4843, 0x12d, 0xdfb4, 0x1, 0x0);
        gbc.writeMem(0x9446, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x98ae, gbc.sp());
        EXPECT(0x9448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9446));
        EXPECT(0x4, gbc.readMem(0x9447));
        // CB 04 01DC
        gbc.setState(0x8d2a, 0xaeb1, 0x76d0, 0x8048, 0xafe7, 0x5c4e, 0x1, 0x1);
        gbc.writeMem(0x8d2a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xaeb1, gbc.sp());
        EXPECT(0x8d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d2a));
        EXPECT(0x4, gbc.readMem(0x8d2b));
        // CB 04 01DD
        gbc.setState(0xdddf, 0xba89, 0xcf90, 0x57df, 0xaeca, 0x8e7f, 0x1, 0x1);
        gbc.writeMem(0xdddf, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xba89, gbc.sp());
        EXPECT(0xdde1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdddf));
        EXPECT(0x4, gbc.readMem(0xdde0));
        // CB 04 01DE
        gbc.setState(0x46ad, 0x8e14, 0xd5b0, 0x79b2, 0x483b, 0xa9a9, 0x1, 0x1);
        gbc.writeMem(0x46ad, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8e14, gbc.sp());
        EXPECT(0x46af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01DF
        gbc.setState(0x3a62, 0xe48a, 0xb440, 0x502b, 0x84ee, 0xcd6c, 0x1, 0x0);
        gbc.writeMem(0x3a62, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe48a, gbc.sp());
        EXPECT(0x3a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01E0
        gbc.setState(0xe029, 0x5ff5, 0x220, 0x5924, 0x20e6, 0x32ed, 0x1, 0x0);
        gbc.writeMem(0xe029, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5ff5, gbc.sp());
        EXPECT(0xe02b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe029));
        EXPECT(0x4, gbc.readMem(0xe02a));
        // CB 04 01E1
        gbc.setState(0x59f7, 0x30cb, 0x8990, 0xf473, 0xbcff, 0x95b0, 0x0, 0x0);
        gbc.writeMem(0x59f7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x30cb, gbc.sp());
        EXPECT(0x59f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01E2
        gbc.setState(0x4b6c, 0xe009, 0x8ce0, 0xe5dd, 0x2235, 0x9cff, 0x1, 0x0);
        gbc.writeMem(0x4b6c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe009, gbc.sp());
        EXPECT(0x4b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01E3
        gbc.setState(0x8e24, 0xf003, 0xfab0, 0xb13, 0x607e, 0x3047, 0x0, 0x1);
        gbc.writeMem(0x8e24, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf003, gbc.sp());
        EXPECT(0x8e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e24));
        EXPECT(0x4, gbc.readMem(0x8e25));
        // CB 04 01E4
        gbc.setState(0x5dbf, 0x8df8, 0x64a0, 0x7f90, 0xd60a, 0xd026, 0x1, 0x1);
        gbc.writeMem(0x5dbf, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8df8, gbc.sp());
        EXPECT(0x5dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01E5
        gbc.setState(0x2adc, 0x55be, 0xc120, 0xd345, 0xdac0, 0xfb22, 0x1, 0x1);
        gbc.writeMem(0x2adc, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x55be, gbc.sp());
        EXPECT(0x2ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01E6
        gbc.setState(0x65d0, 0xd9c2, 0x9700, 0x6a40, 0xeddf, 0x445c, 0x1, 0x0);
        gbc.writeMem(0x65d0, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd9c2, gbc.sp());
        EXPECT(0x65d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01E7
        gbc.setState(0x16fa, 0x5c1c, 0xaa40, 0xcd91, 0xb151, 0x7ea0, 0x1, 0x0);
        gbc.writeMem(0x16fa, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5c1c, gbc.sp());
        EXPECT(0x16fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01E8
        gbc.setState(0x5f1f, 0x2e8b, 0xc2e0, 0x6960, 0xbf60, 0xf8f8, 0x0, 0x1);
        gbc.writeMem(0x5f1f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2e8b, gbc.sp());
        EXPECT(0x5f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01E9
        gbc.setState(0xe144, 0x7f02, 0x87d0, 0xe20, 0x29bb, 0x2598, 0x0, 0x1);
        gbc.writeMem(0xe144, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7f02, gbc.sp());
        EXPECT(0xe146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe144));
        EXPECT(0x4, gbc.readMem(0xe145));
        // CB 04 01EA
        gbc.setState(0xe19c, 0x75c7, 0xc410, 0x6ee1, 0x8eaf, 0xfc81, 0x1, 0x0);
        gbc.writeMem(0xe19c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x75c7, gbc.sp());
        EXPECT(0xe19e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe19c));
        EXPECT(0x4, gbc.readMem(0xe19d));
        // CB 04 01EC
        gbc.setState(0xba8f, 0x1627, 0x8c40, 0xdfd6, 0x290c, 0x9835, 0x1, 0x1);
        gbc.writeMem(0xba8f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1627, gbc.sp());
        EXPECT(0xba91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba8f));
        EXPECT(0x4, gbc.readMem(0xba90));
        // CB 04 01ED
        gbc.setState(0xae55, 0x21de, 0x6930, 0xe471, 0xe53, 0x4ee5, 0x0, 0x1);
        gbc.writeMem(0xae55, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x21de, gbc.sp());
        EXPECT(0xae57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae55));
        EXPECT(0x4, gbc.readMem(0xae56));
        // CB 04 01EF
        gbc.setState(0xc36a, 0xd299, 0x7a10, 0x77b5, 0xa360, 0x9cf4, 0x0, 0x1);
        gbc.writeMem(0xc36a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd299, gbc.sp());
        EXPECT(0xc36c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc36a));
        EXPECT(0x4, gbc.readMem(0xc36b));
        // CB 04 01F0
        gbc.setState(0xeccb, 0x9949, 0x26d0, 0xea61, 0x9536, 0x9b19, 0x1, 0x1);
        gbc.writeMem(0xeccb, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9949, gbc.sp());
        EXPECT(0xeccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeccb));
        EXPECT(0x4, gbc.readMem(0xeccc));
        // CB 04 01F1
        gbc.setState(0x5e98, 0xd4c1, 0x1e10, 0xa68c, 0x1d21, 0xd0b2, 0x1, 0x0);
        gbc.writeMem(0x5e98, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd4c1, gbc.sp());
        EXPECT(0x5e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01F2
        gbc.setState(0x1e7, 0xd420, 0xada0, 0x5d94, 0xb8f6, 0x68a5, 0x1, 0x0);
        gbc.writeMem(0x1e7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd420, gbc.sp());
        EXPECT(0x1e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01F3
        gbc.setState(0xe85c, 0xb29a, 0xa920, 0x70b4, 0x2a6b, 0x8600, 0x0, 0x0);
        gbc.writeMem(0xe85c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb29a, gbc.sp());
        EXPECT(0xe85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe85c));
        EXPECT(0x4, gbc.readMem(0xe85d));
        // CB 04 01F4
        gbc.setState(0xc9fa, 0xaecd, 0x80f0, 0x5bdd, 0x9473, 0xb5dc, 0x1, 0x1);
        gbc.writeMem(0xc9fa, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xaecd, gbc.sp());
        EXPECT(0xc9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fa));
        EXPECT(0x4, gbc.readMem(0xc9fb));
        // CB 04 01F5
        gbc.setState(0xa789, 0xc8f9, 0x96d0, 0x6474, 0xc4af, 0x5657, 0x0, 0x0);
        gbc.writeMem(0xa789, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc8f9, gbc.sp());
        EXPECT(0xa78b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa789));
        EXPECT(0x4, gbc.readMem(0xa78a));
        // CB 04 01F6
        gbc.setState(0x5cc2, 0x9dec, 0x2780, 0xa3de, 0x9c8b, 0x8dc3, 0x0, 0x0);
        gbc.writeMem(0x5cc2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9dec, gbc.sp());
        EXPECT(0x5cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01F7
        gbc.setState(0x1208, 0x1078, 0xd730, 0x1c78, 0x4a23, 0x613e, 0x1, 0x0);
        gbc.writeMem(0x1208, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1078, gbc.sp());
        EXPECT(0x120a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01F8
        gbc.setState(0xc9f0, 0xa77b, 0x3850, 0x5325, 0x9c83, 0xba68, 0x1, 0x0);
        gbc.writeMem(0xc9f0, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa77b, gbc.sp());
        EXPECT(0xc9f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f0));
        EXPECT(0x4, gbc.readMem(0xc9f1));
        // CB 04 01F9
        gbc.setState(0xafea, 0xf39, 0x6c30, 0xeb8a, 0x3705, 0x4d1c, 0x1, 0x1);
        gbc.writeMem(0xafea, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf39, gbc.sp());
        EXPECT(0xafec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafea));
        EXPECT(0x4, gbc.readMem(0xafeb));
        // CB 04 01FA
        gbc.setState(0x3020, 0x104e, 0x8030, 0x2204, 0xd8f3, 0xdd8, 0x1, 0x0);
        gbc.writeMem(0x3020, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x104e, gbc.sp());
        EXPECT(0x3022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01FB
        gbc.setState(0x91f6, 0x9a8, 0xeb70, 0xf4d7, 0xf603, 0x36f7, 0x0, 0x1);
        gbc.writeMem(0x91f6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9a8, gbc.sp());
        EXPECT(0x91f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f6));
        EXPECT(0x4, gbc.readMem(0x91f7));
        // CB 04 01FC
        gbc.setState(0x4e51, 0xbb08, 0x56c0, 0xf866, 0x6ec9, 0x4763, 0x1, 0x0);
        gbc.writeMem(0x4e51, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbb08, gbc.sp());
        EXPECT(0x4e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 01FD
        gbc.setState(0xb5ad, 0x9c26, 0x4fe0, 0xa459, 0xea36, 0x6f92, 0x0, 0x1);
        gbc.writeMem(0xb5ad, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9c26, gbc.sp());
        EXPECT(0xb5af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ad));
        EXPECT(0x4, gbc.readMem(0xb5ae));
        // CB 04 01FE
        gbc.setState(0x6f86, 0xf15e, 0x1e10, 0x9c92, 0x87fb, 0xac8e, 0x0, 0x1);
        gbc.writeMem(0x6f86, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf15e, gbc.sp());
        EXPECT(0x6f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 01FF
        gbc.setState(0x73b1, 0x8776, 0xe1c0, 0x1c55, 0x2e83, 0xa245, 0x0, 0x0);
        gbc.writeMem(0x73b1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8776, gbc.sp());
        EXPECT(0x73b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0200
        gbc.setState(0x2915, 0x9aa2, 0x34c0, 0xd55c, 0xca14, 0x27c, 0x1, 0x1);
        gbc.writeMem(0x2915, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9aa2, gbc.sp());
        EXPECT(0x2917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0201
        gbc.setState(0x3e31, 0x73d5, 0x1ad0, 0x2acf, 0x161b, 0x6d3a, 0x0, 0x1);
        gbc.writeMem(0x3e31, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x73d5, gbc.sp());
        EXPECT(0x3e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0202
        gbc.setState(0xc180, 0x3e27, 0x4210, 0x63cf, 0x3108, 0x9a88, 0x0, 0x1);
        gbc.writeMem(0xc180, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3e27, gbc.sp());
        EXPECT(0xc182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc180));
        EXPECT(0x4, gbc.readMem(0xc181));
        // CB 04 0203
        gbc.setState(0x9aeb, 0x81fb, 0xdb20, 0x8319, 0xc234, 0x2699, 0x1, 0x0);
        gbc.writeMem(0x9aeb, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x81fb, gbc.sp());
        EXPECT(0x9aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aeb));
        EXPECT(0x4, gbc.readMem(0x9aec));
        // CB 04 0204
        gbc.setState(0xce56, 0x258b, 0x8530, 0xe6ee, 0xcee2, 0xe362, 0x1, 0x0);
        gbc.writeMem(0xce56, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x258b, gbc.sp());
        EXPECT(0xce58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce56));
        EXPECT(0x4, gbc.readMem(0xce57));
        // CB 04 0205
        gbc.setState(0x5c61, 0xeed6, 0x5f30, 0x19f9, 0xe777, 0x6867, 0x0, 0x1);
        gbc.writeMem(0x5c61, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xeed6, gbc.sp());
        EXPECT(0x5c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0206
        gbc.setState(0x6c0b, 0x67dc, 0xb890, 0x2aff, 0xbc26, 0xbed1, 0x1, 0x1);
        gbc.writeMem(0x6c0b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x67dc, gbc.sp());
        EXPECT(0x6c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0208
        gbc.setState(0x70f8, 0x9a5e, 0xf6d0, 0x1a15, 0x3ce, 0x28eb, 0x0, 0x1);
        gbc.writeMem(0x70f8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9a5e, gbc.sp());
        EXPECT(0x70fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0209
        gbc.setState(0xb06a, 0x7e04, 0x2d70, 0x99f5, 0x4091, 0xd0d6, 0x1, 0x1);
        gbc.writeMem(0xb06a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7e04, gbc.sp());
        EXPECT(0xb06c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb06a));
        EXPECT(0x4, gbc.readMem(0xb06b));
        // CB 04 020A
        gbc.setState(0xb23, 0x9bae, 0xe8d0, 0xd4ac, 0x3808, 0xd453, 0x0, 0x0);
        gbc.writeMem(0xb23, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9bae, gbc.sp());
        EXPECT(0xb25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 020B
        gbc.setState(0x3d8a, 0x3ca4, 0xc690, 0xda25, 0x7f07, 0xbc5b, 0x1, 0x1);
        gbc.writeMem(0x3d8a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3ca4, gbc.sp());
        EXPECT(0x3d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 020C
        gbc.setState(0xb76f, 0x286f, 0x1d10, 0x9aeb, 0xacd2, 0x7a42, 0x1, 0x0);
        gbc.writeMem(0xb76f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x286f, gbc.sp());
        EXPECT(0xb771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb76f));
        EXPECT(0x4, gbc.readMem(0xb770));
        // CB 04 020D
        gbc.setState(0x49d7, 0xc66c, 0x77e0, 0x647f, 0xfe46, 0x8260, 0x1, 0x0);
        gbc.writeMem(0x49d7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc66c, gbc.sp());
        EXPECT(0x49d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 020E
        gbc.setState(0x26b7, 0x13cc, 0xda80, 0x7d70, 0x20a1, 0xdb7c, 0x1, 0x1);
        gbc.writeMem(0x26b7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x13cc, gbc.sp());
        EXPECT(0x26b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 020F
        gbc.setState(0xdcea, 0x934d, 0xf190, 0xfb81, 0x9fd2, 0xd4a2, 0x0, 0x0);
        gbc.writeMem(0xdcea, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x934d, gbc.sp());
        EXPECT(0xdcec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcea));
        EXPECT(0x4, gbc.readMem(0xdceb));
        // CB 04 0210
        gbc.setState(0xdd6b, 0x95e7, 0x9bd0, 0xec86, 0x5958, 0x5697, 0x0, 0x0);
        gbc.writeMem(0xdd6b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x95e7, gbc.sp());
        EXPECT(0xdd6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd6b));
        EXPECT(0x4, gbc.readMem(0xdd6c));
        // CB 04 0211
        gbc.setState(0x91d6, 0x8f4f, 0x3a40, 0xa637, 0xd790, 0x715b, 0x1, 0x1);
        gbc.writeMem(0x91d6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8f4f, gbc.sp());
        EXPECT(0x91d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d6));
        EXPECT(0x4, gbc.readMem(0x91d7));
        // CB 04 0212
        gbc.setState(0x36c5, 0xd868, 0xe70, 0xf13c, 0x385b, 0x1c15, 0x1, 0x1);
        gbc.writeMem(0x36c5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd868, gbc.sp());
        EXPECT(0x36c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0213
        gbc.setState(0x9906, 0x8e11, 0xc9e0, 0xb5f, 0x75f3, 0xc486, 0x0, 0x0);
        gbc.writeMem(0x9906, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8e11, gbc.sp());
        EXPECT(0x9908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9906));
        EXPECT(0x4, gbc.readMem(0x9907));
        // CB 04 0214
        gbc.setState(0x4bbc, 0x9c64, 0xd210, 0x54f8, 0x88e3, 0x1a5c, 0x0, 0x0);
        gbc.writeMem(0x4bbc, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9c64, gbc.sp());
        EXPECT(0x4bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0215
        gbc.setState(0x4cac, 0x6657, 0x3ae0, 0xbc67, 0xd489, 0x96d7, 0x0, 0x0);
        gbc.writeMem(0x4cac, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6657, gbc.sp());
        EXPECT(0x4cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0216
        gbc.setState(0xe662, 0x72fa, 0x3bc0, 0xe0ef, 0xfd82, 0x1613, 0x0, 0x1);
        gbc.writeMem(0xe662, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x72fa, gbc.sp());
        EXPECT(0xe664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe662));
        EXPECT(0x4, gbc.readMem(0xe663));
        // CB 04 0217
        gbc.setState(0xc65b, 0xe8ee, 0xd5c0, 0x2131, 0xb96f, 0xc2f7, 0x1, 0x1);
        gbc.writeMem(0xc65b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe8ee, gbc.sp());
        EXPECT(0xc65d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc65b));
        EXPECT(0x4, gbc.readMem(0xc65c));
        // CB 04 0218
        gbc.setState(0xed81, 0x78a0, 0xb7f0, 0xc374, 0x28e4, 0x445b, 0x1, 0x1);
        gbc.writeMem(0xed81, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x78a0, gbc.sp());
        EXPECT(0xed83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed81));
        EXPECT(0x4, gbc.readMem(0xed82));
        // CB 04 0219
        gbc.setState(0xa5ec, 0x2e7d, 0x2b40, 0xc077, 0xe639, 0x90d5, 0x0, 0x0);
        gbc.writeMem(0xa5ec, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2e7d, gbc.sp());
        EXPECT(0xa5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ec));
        EXPECT(0x4, gbc.readMem(0xa5ed));
        // CB 04 021A
        gbc.setState(0x7789, 0x9820, 0x1470, 0x3b96, 0x711b, 0xbf6a, 0x0, 0x0);
        gbc.writeMem(0x7789, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9820, gbc.sp());
        EXPECT(0x778b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 021B
        gbc.setState(0xdf88, 0xc6af, 0x6f90, 0x64cd, 0xdfb4, 0x1dcc, 0x0, 0x0);
        gbc.writeMem(0xdf88, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc6af, gbc.sp());
        EXPECT(0xdf8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf88));
        EXPECT(0x4, gbc.readMem(0xdf89));
        // CB 04 021C
        gbc.setState(0x5bd, 0xbd45, 0x86f0, 0xe526, 0x8474, 0xb543, 0x1, 0x1);
        gbc.writeMem(0x5bd, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbd45, gbc.sp());
        EXPECT(0x5bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 021D
        gbc.setState(0x7a59, 0xcdad, 0x75c0, 0xabd9, 0xcefb, 0xb67, 0x0, 0x0);
        gbc.writeMem(0x7a59, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcdad, gbc.sp());
        EXPECT(0x7a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 021E
        gbc.setState(0x5410, 0x6cfc, 0x22a0, 0xa466, 0x6fc4, 0xecd2, 0x1, 0x1);
        gbc.writeMem(0x5410, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6cfc, gbc.sp());
        EXPECT(0x5412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 021F
        gbc.setState(0x2715, 0xe59c, 0x9f90, 0x6569, 0x673f, 0x6b4a, 0x0, 0x0);
        gbc.writeMem(0x2715, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe59c, gbc.sp());
        EXPECT(0x2717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0220
        gbc.setState(0x4459, 0x4ff2, 0x1350, 0x2302, 0xd13d, 0x23b, 0x1, 0x1);
        gbc.writeMem(0x4459, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4ff2, gbc.sp());
        EXPECT(0x445b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0221
        gbc.setState(0xc6d2, 0x31c3, 0xe3e0, 0xe85a, 0xc084, 0x858e, 0x0, 0x1);
        gbc.writeMem(0xc6d2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x31c3, gbc.sp());
        EXPECT(0xc6d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d2));
        EXPECT(0x4, gbc.readMem(0xc6d3));
        // CB 04 0222
        gbc.setState(0xc541, 0xa499, 0x7090, 0xa75b, 0x7233, 0xe589, 0x1, 0x1);
        gbc.writeMem(0xc541, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa499, gbc.sp());
        EXPECT(0xc543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc541));
        EXPECT(0x4, gbc.readMem(0xc542));
        // CB 04 0223
        gbc.setState(0x71b8, 0xa036, 0xdc10, 0xe6b, 0x61e2, 0xc51b, 0x0, 0x0);
        gbc.writeMem(0x71b8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa036, gbc.sp());
        EXPECT(0x71ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0224
        gbc.setState(0xd9f7, 0x7dd9, 0x9ff0, 0xa3f3, 0xb662, 0x81eb, 0x1, 0x1);
        gbc.writeMem(0xd9f7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7dd9, gbc.sp());
        EXPECT(0xd9f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f7));
        EXPECT(0x4, gbc.readMem(0xd9f8));
        // CB 04 0225
        gbc.setState(0xc2de, 0xdba3, 0xfba0, 0x4acd, 0x5019, 0x5011, 0x1, 0x1);
        gbc.writeMem(0xc2de, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xdba3, gbc.sp());
        EXPECT(0xc2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2de));
        EXPECT(0x4, gbc.readMem(0xc2df));
        // CB 04 0226
        gbc.setState(0xd0aa, 0x5fca, 0x6810, 0xab89, 0xf9a5, 0xfc2a, 0x0, 0x0);
        gbc.writeMem(0xd0aa, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5fca, gbc.sp());
        EXPECT(0xd0ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0aa));
        EXPECT(0x4, gbc.readMem(0xd0ab));
        // CB 04 0227
        gbc.setState(0x962e, 0x32ac, 0x74a0, 0x6689, 0x4ed4, 0x839d, 0x1, 0x0);
        gbc.writeMem(0x962e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x32ac, gbc.sp());
        EXPECT(0x9630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x962e));
        EXPECT(0x4, gbc.readMem(0x962f));
        // CB 04 0228
        gbc.setState(0xa4d6, 0x3835, 0x510, 0xbf87, 0xfabd, 0x5ae, 0x1, 0x0);
        gbc.writeMem(0xa4d6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3835, gbc.sp());
        EXPECT(0xa4d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d6));
        EXPECT(0x4, gbc.readMem(0xa4d7));
        // CB 04 0229
        gbc.setState(0x4a14, 0xa5b2, 0x6050, 0xeda2, 0xd21e, 0x1ce1, 0x1, 0x1);
        gbc.writeMem(0x4a14, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa5b2, gbc.sp());
        EXPECT(0x4a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 022A
        gbc.setState(0xdd0e, 0xce20, 0x4350, 0x5aa1, 0x66e1, 0xa81, 0x1, 0x0);
        gbc.writeMem(0xdd0e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xce20, gbc.sp());
        EXPECT(0xdd10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0e));
        EXPECT(0x4, gbc.readMem(0xdd0f));
        // CB 04 022B
        gbc.setState(0x3022, 0xdae0, 0xe40, 0x8030, 0x8ab0, 0x47b6, 0x0, 0x1);
        gbc.writeMem(0x3022, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdae0, gbc.sp());
        EXPECT(0x3024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 022C
        gbc.setState(0x7db6, 0x433f, 0xa9a0, 0x388c, 0x23ba, 0xa5ff, 0x1, 0x0);
        gbc.writeMem(0x7db6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x433f, gbc.sp());
        EXPECT(0x7db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 022D
        gbc.setState(0x458a, 0xe5b1, 0xc380, 0x248e, 0xff67, 0xa344, 0x1, 0x0);
        gbc.writeMem(0x458a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe5b1, gbc.sp());
        EXPECT(0x458c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 022E
        gbc.setState(0x6335, 0x6533, 0x64b0, 0xb216, 0x7010, 0xfc33, 0x1, 0x1);
        gbc.writeMem(0x6335, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6533, gbc.sp());
        EXPECT(0x6337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 022F
        gbc.setState(0x9be9, 0x6580, 0x9b40, 0x5589, 0xbda2, 0xbe5, 0x1, 0x0);
        gbc.writeMem(0x9be9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6580, gbc.sp());
        EXPECT(0x9beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9be9));
        EXPECT(0x4, gbc.readMem(0x9bea));
        // CB 04 0230
        gbc.setState(0x4c17, 0xcf9, 0x5a10, 0xd3f6, 0x501e, 0x936, 0x1, 0x1);
        gbc.writeMem(0x4c17, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcf9, gbc.sp());
        EXPECT(0x4c19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0231
        gbc.setState(0x95cd, 0x2894, 0x5840, 0x4f5f, 0x3558, 0x761c, 0x1, 0x1);
        gbc.writeMem(0x95cd, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2894, gbc.sp());
        EXPECT(0x95cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95cd));
        EXPECT(0x4, gbc.readMem(0x95ce));
        // CB 04 0232
        gbc.setState(0x9201, 0x6966, 0x1af0, 0x7773, 0xb26, 0xd116, 0x1, 0x1);
        gbc.writeMem(0x9201, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6966, gbc.sp());
        EXPECT(0x9203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9201));
        EXPECT(0x4, gbc.readMem(0x9202));
        // CB 04 0233
        gbc.setState(0x55ff, 0x3ff9, 0x6e40, 0xcec1, 0x71f0, 0x1b0a, 0x0, 0x1);
        gbc.writeMem(0x55ff, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3ff9, gbc.sp());
        EXPECT(0x5601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0235
        gbc.setState(0x41e3, 0xe285, 0x6e00, 0xe33, 0x765a, 0xbf5e, 0x1, 0x0);
        gbc.writeMem(0x41e3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe285, gbc.sp());
        EXPECT(0x41e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0237
        gbc.setState(0xbe27, 0x2633, 0x92f0, 0x641d, 0xdfe9, 0x4a4, 0x1, 0x1);
        gbc.writeMem(0xbe27, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2633, gbc.sp());
        EXPECT(0xbe29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe27));
        EXPECT(0x4, gbc.readMem(0xbe28));
        // CB 04 0238
        gbc.setState(0x4fde, 0xed76, 0x2850, 0x5e67, 0xf56d, 0xcd43, 0x0, 0x1);
        gbc.writeMem(0x4fde, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xed76, gbc.sp());
        EXPECT(0x4fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0239
        gbc.setState(0xaf3f, 0x225e, 0x6e40, 0x34e8, 0xd773, 0xcf59, 0x1, 0x1);
        gbc.writeMem(0xaf3f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x225e, gbc.sp());
        EXPECT(0xaf41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3f));
        EXPECT(0x4, gbc.readMem(0xaf40));
        // CB 04 023B
        gbc.setState(0x25f2, 0x9c72, 0xeda0, 0x48e8, 0xfeb2, 0x36af, 0x1, 0x1);
        gbc.writeMem(0x25f2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9c72, gbc.sp());
        EXPECT(0x25f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 023C
        gbc.setState(0x7861, 0x83a3, 0x3f70, 0x4911, 0xd40a, 0x9c7f, 0x0, 0x1);
        gbc.writeMem(0x7861, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x83a3, gbc.sp());
        EXPECT(0x7863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 023D
        gbc.setState(0xc0be, 0xa24f, 0xec10, 0x4094, 0x4cf1, 0x4234, 0x0, 0x0);
        gbc.writeMem(0xc0be, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa24f, gbc.sp());
        EXPECT(0xc0c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0be));
        EXPECT(0x4, gbc.readMem(0xc0bf));
        // CB 04 023E
        gbc.setState(0xc135, 0x369a, 0x2580, 0xc8e4, 0x9303, 0x198e, 0x1, 0x0);
        gbc.writeMem(0xc135, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x369a, gbc.sp());
        EXPECT(0xc137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc135));
        EXPECT(0x4, gbc.readMem(0xc136));
        // CB 04 023F
        gbc.setState(0x5def, 0x2b9a, 0x45d0, 0x84d6, 0xb813, 0x790b, 0x0, 0x0);
        gbc.writeMem(0x5def, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2b9a, gbc.sp());
        EXPECT(0x5df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0240
        gbc.setState(0xbe6f, 0x20ec, 0x3860, 0xe2bd, 0x2e6, 0x3cdb, 0x0, 0x0);
        gbc.writeMem(0xbe6f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x20ec, gbc.sp());
        EXPECT(0xbe71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe6f));
        EXPECT(0x4, gbc.readMem(0xbe70));
        // CB 04 0241
        gbc.setState(0x93ff, 0xd2bd, 0xe170, 0x853c, 0xba4f, 0x4406, 0x0, 0x1);
        gbc.writeMem(0x93ff, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd2bd, gbc.sp());
        EXPECT(0x9401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ff));
        EXPECT(0x4, gbc.readMem(0x9400));
        // CB 04 0242
        gbc.setState(0x177a, 0xa2a1, 0x6c20, 0x2b0a, 0x3d66, 0x6ea4, 0x1, 0x1);
        gbc.writeMem(0x177a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa2a1, gbc.sp());
        EXPECT(0x177c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0243
        gbc.setState(0xdbf4, 0x45b4, 0xf4e0, 0x2f9, 0x5bfa, 0x6881, 0x0, 0x0);
        gbc.writeMem(0xdbf4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x45b4, gbc.sp());
        EXPECT(0xdbf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf4));
        EXPECT(0x4, gbc.readMem(0xdbf5));
        // CB 04 0244
        gbc.setState(0x7ea1, 0x2a54, 0xae70, 0x9880, 0x3739, 0x4111, 0x0, 0x1);
        gbc.writeMem(0x7ea1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2a54, gbc.sp());
        EXPECT(0x7ea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0245
        gbc.setState(0x700c, 0xa2c9, 0xa170, 0xf48f, 0x78c9, 0x387b, 0x0, 0x1);
        gbc.writeMem(0x700c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa2c9, gbc.sp());
        EXPECT(0x700e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0246
        gbc.setState(0x5f11, 0xd48d, 0xce90, 0xb282, 0xc939, 0xee01, 0x1, 0x1);
        gbc.writeMem(0x5f11, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd48d, gbc.sp());
        EXPECT(0x5f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0247
        gbc.setState(0xb0cf, 0x898e, 0x2690, 0xae44, 0xe9ed, 0xc40c, 0x1, 0x1);
        gbc.writeMem(0xb0cf, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x898e, gbc.sp());
        EXPECT(0xb0d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0cf));
        EXPECT(0x4, gbc.readMem(0xb0d0));
        // CB 04 0248
        gbc.setState(0x6a12, 0xe40f, 0xbe60, 0xd378, 0xfee4, 0xaaad, 0x1, 0x0);
        gbc.writeMem(0x6a12, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe40f, gbc.sp());
        EXPECT(0x6a14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0249
        gbc.setState(0x83d4, 0xbd3b, 0x5a40, 0x446c, 0x937b, 0xcd30, 0x0, 0x1);
        gbc.writeMem(0x83d4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbd3b, gbc.sp());
        EXPECT(0x83d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d4));
        EXPECT(0x4, gbc.readMem(0x83d5));
        // CB 04 024A
        gbc.setState(0x2a9, 0x1136, 0xc4d0, 0x617, 0x7839, 0xb017, 0x0, 0x0);
        gbc.writeMem(0x2a9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1136, gbc.sp());
        EXPECT(0x2ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 024C
        gbc.setState(0xce99, 0xdde3, 0x9000, 0xa2ca, 0xc996, 0x2104, 0x1, 0x1);
        gbc.writeMem(0xce99, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdde3, gbc.sp());
        EXPECT(0xce9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce99));
        EXPECT(0x4, gbc.readMem(0xce9a));
        // CB 04 024F
        gbc.setState(0xc9aa, 0x60aa, 0x7c70, 0xcbb1, 0x64cf, 0x70c1, 0x0, 0x1);
        gbc.writeMem(0xc9aa, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x60aa, gbc.sp());
        EXPECT(0xc9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9aa));
        EXPECT(0x4, gbc.readMem(0xc9ab));
        // CB 04 0250
        gbc.setState(0x1865, 0x6966, 0x9190, 0x7c88, 0x5848, 0xa318, 0x0, 0x0);
        gbc.writeMem(0x1865, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6966, gbc.sp());
        EXPECT(0x1867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0251
        gbc.setState(0xe416, 0xa38d, 0x7060, 0x2bf8, 0xcc1e, 0x7c1f, 0x1, 0x0);
        gbc.writeMem(0xe416, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa38d, gbc.sp());
        EXPECT(0xe418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe416));
        EXPECT(0x4, gbc.readMem(0xe417));
        // CB 04 0252
        gbc.setState(0xc112, 0xfefd, 0xeaf0, 0x9fa7, 0xff34, 0x9f75, 0x0, 0x0);
        gbc.writeMem(0xc112, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfefd, gbc.sp());
        EXPECT(0xc114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc112));
        EXPECT(0x4, gbc.readMem(0xc113));
        // CB 04 0253
        gbc.setState(0x83a9, 0xda6, 0xa970, 0x8750, 0xb061, 0x4dd9, 0x0, 0x0);
        gbc.writeMem(0x83a9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xda6, gbc.sp());
        EXPECT(0x83ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a9));
        EXPECT(0x4, gbc.readMem(0x83aa));
        // CB 04 0254
        gbc.setState(0x19c4, 0xd4e0, 0xb70, 0xf319, 0xd3ae, 0x91d3, 0x1, 0x1);
        gbc.writeMem(0x19c4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd4e0, gbc.sp());
        EXPECT(0x19c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0255
        gbc.setState(0x5761, 0xb21, 0xad50, 0x693, 0xba7f, 0xe7fc, 0x1, 0x1);
        gbc.writeMem(0x5761, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb21, gbc.sp());
        EXPECT(0x5763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0256
        gbc.setState(0x6f10, 0xb4b9, 0x8750, 0xb7e1, 0xc045, 0xa57b, 0x1, 0x0);
        gbc.writeMem(0x6f10, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb4b9, gbc.sp());
        EXPECT(0x6f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0257
        gbc.setState(0x3b7a, 0xfb96, 0xab70, 0x4d2d, 0xe118, 0x455b, 0x0, 0x0);
        gbc.writeMem(0x3b7a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xfb96, gbc.sp());
        EXPECT(0x3b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0258
        gbc.setState(0x380f, 0x8533, 0x1f00, 0x12b6, 0x22ce, 0x87b2, 0x0, 0x1);
        gbc.writeMem(0x380f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8533, gbc.sp());
        EXPECT(0x3811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0259
        gbc.setState(0x5e4, 0x7dbb, 0x67f0, 0x481b, 0x9f40, 0x5c5b, 0x1, 0x1);
        gbc.writeMem(0x5e4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7dbb, gbc.sp());
        EXPECT(0x5e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 025A
        gbc.setState(0xe3e, 0x723, 0x33b0, 0xb9c2, 0xfa0, 0x1eb2, 0x1, 0x1);
        gbc.writeMem(0xe3e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x723, gbc.sp());
        EXPECT(0xe40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 025B
        gbc.setState(0x94c1, 0xf382, 0x53c0, 0xf32c, 0x1312, 0xdbb5, 0x1, 0x0);
        gbc.writeMem(0x94c1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf382, gbc.sp());
        EXPECT(0x94c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c1));
        EXPECT(0x4, gbc.readMem(0x94c2));
        // CB 04 025C
        gbc.setState(0x8d0d, 0xa65c, 0xdba0, 0xf175, 0xc744, 0xd125, 0x1, 0x1);
        gbc.writeMem(0x8d0d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa65c, gbc.sp());
        EXPECT(0x8d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d0d));
        EXPECT(0x4, gbc.readMem(0x8d0e));
        // CB 04 025D
        gbc.setState(0x3307, 0x7ee3, 0x3a30, 0x35fb, 0x68e0, 0xd6a6, 0x1, 0x1);
        gbc.writeMem(0x3307, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7ee3, gbc.sp());
        EXPECT(0x3309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 025E
        gbc.setState(0x6589, 0xc0ea, 0x2c50, 0x6ce2, 0xd9d7, 0xf7d7, 0x1, 0x0);
        gbc.writeMem(0x6589, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc0ea, gbc.sp());
        EXPECT(0x658b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 025F
        gbc.setState(0x225c, 0xdc9b, 0xe540, 0x5761, 0xbb2d, 0x2618, 0x1, 0x1);
        gbc.writeMem(0x225c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdc9b, gbc.sp());
        EXPECT(0x225e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0260
        gbc.setState(0x823f, 0x856d, 0x64f0, 0x2e62, 0xb2ae, 0x7987, 0x0, 0x1);
        gbc.writeMem(0x823f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x856d, gbc.sp());
        EXPECT(0x8241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x823f));
        EXPECT(0x4, gbc.readMem(0x8240));
        // CB 04 0261
        gbc.setState(0x31c2, 0x7273, 0xd7c0, 0xb6f2, 0xe25a, 0xfe3c, 0x1, 0x0);
        gbc.writeMem(0x31c2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7273, gbc.sp());
        EXPECT(0x31c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0262
        gbc.setState(0x27c4, 0x3494, 0xd40, 0x2c8d, 0x3b70, 0x2dcd, 0x0, 0x1);
        gbc.writeMem(0x27c4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3494, gbc.sp());
        EXPECT(0x27c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0263
        gbc.setState(0x7a9c, 0xaa79, 0x6a0, 0xb1e, 0xbbdd, 0x1e3a, 0x0, 0x0);
        gbc.writeMem(0x7a9c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xaa79, gbc.sp());
        EXPECT(0x7a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0264
        gbc.setState(0xd354, 0x743, 0xb3f0, 0x17e3, 0x2a35, 0xf2aa, 0x1, 0x0);
        gbc.writeMem(0xd354, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x743, gbc.sp());
        EXPECT(0xd356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd354));
        EXPECT(0x4, gbc.readMem(0xd355));
        // CB 04 0265
        gbc.setState(0x2ac6, 0x6cdd, 0x13b0, 0x6a65, 0xf965, 0xef6e, 0x0, 0x0);
        gbc.writeMem(0x2ac6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6cdd, gbc.sp());
        EXPECT(0x2ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0266
        gbc.setState(0x1290, 0x1a1, 0x73b0, 0xd8c4, 0x75c0, 0x467d, 0x1, 0x0);
        gbc.writeMem(0x1290, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1a1, gbc.sp());
        EXPECT(0x1292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0267
        gbc.setState(0x8e9d, 0xd8ff, 0xecf0, 0x8fef, 0x26f, 0x6dde, 0x1, 0x0);
        gbc.writeMem(0x8e9d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd8ff, gbc.sp());
        EXPECT(0x8e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e9d));
        EXPECT(0x4, gbc.readMem(0x8e9e));
        // CB 04 0268
        gbc.setState(0x2de6, 0xe920, 0x3a70, 0x9c77, 0x8a74, 0x883a, 0x0, 0x1);
        gbc.writeMem(0x2de6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe920, gbc.sp());
        EXPECT(0x2de8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0269
        gbc.setState(0xc72b, 0xe0f8, 0x4520, 0xccc1, 0xa129, 0xeca9, 0x0, 0x0);
        gbc.writeMem(0xc72b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe0f8, gbc.sp());
        EXPECT(0xc72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc72b));
        EXPECT(0x4, gbc.readMem(0xc72c));
        // CB 04 026A
        gbc.setState(0xcfc0, 0x26ed, 0x4130, 0x49c4, 0xf2bd, 0x8a13, 0x0, 0x1);
        gbc.writeMem(0xcfc0, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x26ed, gbc.sp());
        EXPECT(0xcfc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc0));
        EXPECT(0x4, gbc.readMem(0xcfc1));
        // CB 04 026B
        gbc.setState(0x145b, 0xff26, 0x1950, 0xd3c1, 0x7909, 0x31c7, 0x1, 0x1);
        gbc.writeMem(0x145b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xff26, gbc.sp());
        EXPECT(0x145d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 026D
        gbc.setState(0xda19, 0x654, 0x1860, 0xfdec, 0x3c01, 0x5133, 0x0, 0x1);
        gbc.writeMem(0xda19, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x654, gbc.sp());
        EXPECT(0xda1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda19));
        EXPECT(0x4, gbc.readMem(0xda1a));
        // CB 04 026E
        gbc.setState(0xd70a, 0x8d3c, 0xc360, 0x8f88, 0xf692, 0xe76e, 0x1, 0x1);
        gbc.writeMem(0xd70a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8d3c, gbc.sp());
        EXPECT(0xd70c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd70a));
        EXPECT(0x4, gbc.readMem(0xd70b));
        // CB 04 026F
        gbc.setState(0x6926, 0x2e7e, 0x4b40, 0xf7c1, 0x93c5, 0x8615, 0x0, 0x1);
        gbc.writeMem(0x6926, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2e7e, gbc.sp());
        EXPECT(0x6928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0270
        gbc.setState(0x828c, 0xce01, 0x2e20, 0x69df, 0x3b8a, 0x73d8, 0x0, 0x1);
        gbc.writeMem(0x828c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xce01, gbc.sp());
        EXPECT(0x828e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x828c));
        EXPECT(0x4, gbc.readMem(0x828d));
        // CB 04 0271
        gbc.setState(0xea86, 0xcfce, 0xee70, 0x7125, 0x683d, 0xc05c, 0x0, 0x0);
        gbc.writeMem(0xea86, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcfce, gbc.sp());
        EXPECT(0xea88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea86));
        EXPECT(0x4, gbc.readMem(0xea87));
        // CB 04 0272
        gbc.setState(0x1d19, 0xd7ed, 0xae40, 0x117f, 0x61a0, 0xc98d, 0x0, 0x1);
        gbc.writeMem(0x1d19, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd7ed, gbc.sp());
        EXPECT(0x1d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0273
        gbc.setState(0xcddf, 0x67dc, 0xbb50, 0x3b44, 0x794c, 0x70a3, 0x1, 0x1);
        gbc.writeMem(0xcddf, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x67dc, gbc.sp());
        EXPECT(0xcde1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcddf));
        EXPECT(0x4, gbc.readMem(0xcde0));
        // CB 04 0274
        gbc.setState(0x2f30, 0x2d20, 0x520, 0x7f58, 0x2083, 0xab5a, 0x1, 0x0);
        gbc.writeMem(0x2f30, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2d20, gbc.sp());
        EXPECT(0x2f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0275
        gbc.setState(0x77fa, 0x63de, 0xf8d0, 0xa35b, 0x6ab0, 0xa7b, 0x1, 0x1);
        gbc.writeMem(0x77fa, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x63de, gbc.sp());
        EXPECT(0x77fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0276
        gbc.setState(0x9f57, 0xe79b, 0xc860, 0xe146, 0xcd9, 0xabd2, 0x0, 0x1);
        gbc.writeMem(0x9f57, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe79b, gbc.sp());
        EXPECT(0x9f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f57));
        EXPECT(0x4, gbc.readMem(0x9f58));
        // CB 04 0277
        gbc.setState(0xd209, 0x19db, 0x1c20, 0x49a3, 0x5ba4, 0xd403, 0x1, 0x0);
        gbc.writeMem(0xd209, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x19db, gbc.sp());
        EXPECT(0xd20b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd209));
        EXPECT(0x4, gbc.readMem(0xd20a));
        // CB 04 0278
        gbc.setState(0x5a71, 0x6dcd, 0xb0d0, 0x6179, 0x392b, 0xec3d, 0x0, 0x1);
        gbc.writeMem(0x5a71, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6dcd, gbc.sp());
        EXPECT(0x5a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0279
        gbc.setState(0xded1, 0x5a8f, 0xadb0, 0x992, 0x7b12, 0x309d, 0x1, 0x1);
        gbc.writeMem(0xded1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5a8f, gbc.sp());
        EXPECT(0xded3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded1));
        EXPECT(0x4, gbc.readMem(0xded2));
        // CB 04 027A
        gbc.setState(0xd53c, 0xc0c6, 0xb5c0, 0x10d9, 0x8933, 0x8d22, 0x0, 0x0);
        gbc.writeMem(0xd53c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc0c6, gbc.sp());
        EXPECT(0xd53e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd53c));
        EXPECT(0x4, gbc.readMem(0xd53d));
        // CB 04 027B
        gbc.setState(0x214, 0x7785, 0x6370, 0xb591, 0xcd68, 0xa0db, 0x1, 0x1);
        gbc.writeMem(0x214, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7785, gbc.sp());
        EXPECT(0x216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 027C
        gbc.setState(0xa80d, 0x4ca7, 0x20e0, 0xacf7, 0x1842, 0xbd98, 0x0, 0x0);
        gbc.writeMem(0xa80d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4ca7, gbc.sp());
        EXPECT(0xa80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80d));
        EXPECT(0x4, gbc.readMem(0xa80e));
        // CB 04 027D
        gbc.setState(0x30b1, 0x4114, 0x55f0, 0x190d, 0xfbbd, 0xda0a, 0x1, 0x1);
        gbc.writeMem(0x30b1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4114, gbc.sp());
        EXPECT(0x30b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 027E
        gbc.setState(0x78f2, 0xbe59, 0x5c80, 0x4aa8, 0x4477, 0x3c05, 0x1, 0x0);
        gbc.writeMem(0x78f2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbe59, gbc.sp());
        EXPECT(0x78f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 027F
        gbc.setState(0x6629, 0x28be, 0xb450, 0x961, 0x49a5, 0x44dd, 0x1, 0x1);
        gbc.writeMem(0x6629, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x28be, gbc.sp());
        EXPECT(0x662b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0280
        gbc.setState(0x457, 0x62ee, 0x8700, 0x1821, 0xc3c9, 0x2ee8, 0x1, 0x1);
        gbc.writeMem(0x457, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x62ee, gbc.sp());
        EXPECT(0x459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0281
        gbc.setState(0xda85, 0x6c22, 0x6890, 0x657a, 0x9d12, 0x33a0, 0x0, 0x1);
        gbc.writeMem(0xda85, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6c22, gbc.sp());
        EXPECT(0xda87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda85));
        EXPECT(0x4, gbc.readMem(0xda86));
        // CB 04 0282
        gbc.setState(0x38a8, 0xc5be, 0x3890, 0x4230, 0x4608, 0xd89f, 0x1, 0x1);
        gbc.writeMem(0x38a8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc5be, gbc.sp());
        EXPECT(0x38aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0284
        gbc.setState(0xacc3, 0xb4a1, 0x7360, 0x731c, 0xceac, 0xfb8e, 0x1, 0x0);
        gbc.writeMem(0xacc3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb4a1, gbc.sp());
        EXPECT(0xacc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc3));
        EXPECT(0x4, gbc.readMem(0xacc4));
        // CB 04 0285
        gbc.setState(0xa8f9, 0xad3a, 0x6a40, 0x9dd, 0x111b, 0x35b5, 0x1, 0x0);
        gbc.writeMem(0xa8f9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xad3a, gbc.sp());
        EXPECT(0xa8fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f9));
        EXPECT(0x4, gbc.readMem(0xa8fa));
        // CB 04 0286
        gbc.setState(0xe24b, 0x2f91, 0x84c0, 0x24b6, 0x5cf1, 0x7300, 0x0, 0x0);
        gbc.writeMem(0xe24b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2f91, gbc.sp());
        EXPECT(0xe24d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe24b));
        EXPECT(0x4, gbc.readMem(0xe24c));
        // CB 04 0288
        gbc.setState(0xd621, 0xf7b3, 0xa7c0, 0x3c28, 0x44ba, 0x938b, 0x0, 0x0);
        gbc.writeMem(0xd621, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf7b3, gbc.sp());
        EXPECT(0xd623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd621));
        EXPECT(0x4, gbc.readMem(0xd622));
        // CB 04 0289
        gbc.setState(0xd8c1, 0x3629, 0xeec0, 0x9164, 0x4535, 0xe73e, 0x1, 0x1);
        gbc.writeMem(0xd8c1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3629, gbc.sp());
        EXPECT(0xd8c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8c1));
        EXPECT(0x4, gbc.readMem(0xd8c2));
        // CB 04 028A
        gbc.setState(0x2901, 0xe23e, 0xc140, 0x4ee3, 0xbf1f, 0x7168, 0x1, 0x1);
        gbc.writeMem(0x2901, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe23e, gbc.sp());
        EXPECT(0x2903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 028B
        gbc.setState(0x3625, 0xb0c3, 0x8c00, 0x5923, 0xdfd7, 0x549d, 0x0, 0x0);
        gbc.writeMem(0x3625, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb0c3, gbc.sp());
        EXPECT(0x3627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 028C
        gbc.setState(0x9405, 0xdd91, 0x6f60, 0xc991, 0x1f98, 0xe659, 0x0, 0x0);
        gbc.writeMem(0x9405, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdd91, gbc.sp());
        EXPECT(0x9407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9405));
        EXPECT(0x4, gbc.readMem(0x9406));
        // CB 04 028D
        gbc.setState(0x11dd, 0x6338, 0x2660, 0x8f6, 0xf6ec, 0x7dc3, 0x1, 0x0);
        gbc.writeMem(0x11dd, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6338, gbc.sp());
        EXPECT(0x11df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 028E
        gbc.setState(0xe59e, 0xcb1d, 0xb580, 0x523, 0x8838, 0xad76, 0x0, 0x1);
        gbc.writeMem(0xe59e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xcb1d, gbc.sp());
        EXPECT(0xe5a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe59e));
        EXPECT(0x4, gbc.readMem(0xe59f));
        // CB 04 028F
        gbc.setState(0x7941, 0xd120, 0xd8b0, 0xbf55, 0xe5a8, 0xee91, 0x1, 0x0);
        gbc.writeMem(0x7941, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd120, gbc.sp());
        EXPECT(0x7943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0290
        gbc.setState(0x62ca, 0x1d81, 0x2f00, 0x11bb, 0xc137, 0xc85d, 0x0, 0x0);
        gbc.writeMem(0x62ca, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1d81, gbc.sp());
        EXPECT(0x62cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0291
        gbc.setState(0xeae7, 0x96f5, 0xe4e0, 0xcf0, 0x862a, 0x68ec, 0x1, 0x1);
        gbc.writeMem(0xeae7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x96f5, gbc.sp());
        EXPECT(0xeae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae7));
        EXPECT(0x4, gbc.readMem(0xeae8));
        // CB 04 0292
        gbc.setState(0x13b6, 0xa006, 0x2560, 0xea2d, 0x56d6, 0xec9b, 0x1, 0x1);
        gbc.writeMem(0x13b6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa006, gbc.sp());
        EXPECT(0x13b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0293
        gbc.setState(0x1cc5, 0xf264, 0x3320, 0x5666, 0xde5e, 0x4b67, 0x1, 0x0);
        gbc.writeMem(0x1cc5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf264, gbc.sp());
        EXPECT(0x1cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0294
        gbc.setState(0x701b, 0x3437, 0xc450, 0x15d4, 0x1759, 0x65d1, 0x1, 0x1);
        gbc.writeMem(0x701b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3437, gbc.sp());
        EXPECT(0x701d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0295
        gbc.setState(0xabe2, 0xc52, 0x1120, 0x43c1, 0x4309, 0x1cf, 0x1, 0x0);
        gbc.writeMem(0xabe2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc52, gbc.sp());
        EXPECT(0xabe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe2));
        EXPECT(0x4, gbc.readMem(0xabe3));
        // CB 04 0296
        gbc.setState(0xa775, 0xf979, 0x3df0, 0xecff, 0x726c, 0x6759, 0x1, 0x0);
        gbc.writeMem(0xa775, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf979, gbc.sp());
        EXPECT(0xa777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa775));
        EXPECT(0x4, gbc.readMem(0xa776));
        // CB 04 0297
        gbc.setState(0x67e7, 0x5677, 0x8d0, 0x55f9, 0x40de, 0x5fe, 0x0, 0x1);
        gbc.writeMem(0x67e7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5677, gbc.sp());
        EXPECT(0x67e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0298
        gbc.setState(0x733b, 0x51d3, 0x7c0, 0xe28e, 0xeef3, 0xbd22, 0x1, 0x0);
        gbc.writeMem(0x733b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x51d3, gbc.sp());
        EXPECT(0x733d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0299
        gbc.setState(0x11ae, 0x4853, 0x2c40, 0xa63a, 0x74b0, 0x4e22, 0x1, 0x0);
        gbc.writeMem(0x11ae, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4853, gbc.sp());
        EXPECT(0x11b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 029A
        gbc.setState(0xcc91, 0xebaf, 0x9e40, 0x516c, 0x8fb9, 0xf429, 0x0, 0x1);
        gbc.writeMem(0xcc91, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xebaf, gbc.sp());
        EXPECT(0xcc93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc91));
        EXPECT(0x4, gbc.readMem(0xcc92));
        // CB 04 029B
        gbc.setState(0x19f6, 0x80f1, 0x9e0, 0x2e74, 0xd3d7, 0x7048, 0x1, 0x1);
        gbc.writeMem(0x19f6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x80f1, gbc.sp());
        EXPECT(0x19f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 029D
        gbc.setState(0x49c8, 0x6a8a, 0x6480, 0xe451, 0x9636, 0xf97f, 0x1, 0x1);
        gbc.writeMem(0x49c8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6a8a, gbc.sp());
        EXPECT(0x49ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 029E
        gbc.setState(0x1e3c, 0xd34e, 0x3410, 0x894e, 0xc427, 0x1d03, 0x0, 0x0);
        gbc.writeMem(0x1e3c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd34e, gbc.sp());
        EXPECT(0x1e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 029F
        gbc.setState(0xafe6, 0x2a2a, 0x94a0, 0xbe5d, 0x76f4, 0x64fd, 0x1, 0x1);
        gbc.writeMem(0xafe6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2a2a, gbc.sp());
        EXPECT(0xafe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe6));
        EXPECT(0x4, gbc.readMem(0xafe7));
        // CB 04 02A0
        gbc.setState(0x803c, 0xfb5b, 0xa590, 0xa585, 0x2c0, 0x3bc5, 0x1, 0x0);
        gbc.writeMem(0x803c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfb5b, gbc.sp());
        EXPECT(0x803e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x803c));
        EXPECT(0x4, gbc.readMem(0x803d));
        // CB 04 02A1
        gbc.setState(0xcd08, 0x1731, 0x9140, 0x1536, 0x29e, 0xd9df, 0x0, 0x0);
        gbc.writeMem(0xcd08, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1731, gbc.sp());
        EXPECT(0xcd0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd08));
        EXPECT(0x4, gbc.readMem(0xcd09));
        // CB 04 02A2
        gbc.setState(0xadf7, 0x3539, 0x5380, 0x5310, 0x6208, 0xa2e0, 0x1, 0x1);
        gbc.writeMem(0xadf7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3539, gbc.sp());
        EXPECT(0xadf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf7));
        EXPECT(0x4, gbc.readMem(0xadf8));
        // CB 04 02A3
        gbc.setState(0x270e, 0x3374, 0x9b70, 0x8ca9, 0x5dfa, 0xa378, 0x0, 0x0);
        gbc.writeMem(0x270e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3374, gbc.sp());
        EXPECT(0x2710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02A4
        gbc.setState(0xec5d, 0x3f85, 0xf910, 0x9a77, 0x21dd, 0x51be, 0x1, 0x0);
        gbc.writeMem(0xec5d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3f85, gbc.sp());
        EXPECT(0xec5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5d));
        EXPECT(0x4, gbc.readMem(0xec5e));
        // CB 04 02A5
        gbc.setState(0x2f7, 0x5739, 0x20c0, 0x42f, 0xe83, 0xb9fa, 0x1, 0x0);
        gbc.writeMem(0x2f7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5739, gbc.sp());
        EXPECT(0x2f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02A7
        gbc.setState(0x40a3, 0x9bb9, 0xb7a0, 0xa35d, 0x7881, 0xf5c7, 0x0, 0x1);
        gbc.writeMem(0x40a3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9bb9, gbc.sp());
        EXPECT(0x40a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02A8
        gbc.setState(0xa094, 0x43f, 0xac70, 0xb252, 0xb362, 0x93e6, 0x0, 0x1);
        gbc.writeMem(0xa094, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x43f, gbc.sp());
        EXPECT(0xa096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa094));
        EXPECT(0x4, gbc.readMem(0xa095));
        // CB 04 02A9
        gbc.setState(0x7688, 0x9c8a, 0xff70, 0x7b2, 0x67f5, 0x124f, 0x1, 0x0);
        gbc.writeMem(0x7688, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9c8a, gbc.sp());
        EXPECT(0x768a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 02AA
        gbc.setState(0x93e3, 0x7c56, 0x2d0, 0x7168, 0x84ed, 0x73f0, 0x1, 0x0);
        gbc.writeMem(0x93e3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7c56, gbc.sp());
        EXPECT(0x93e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e3));
        EXPECT(0x4, gbc.readMem(0x93e4));
        // CB 04 02AB
        gbc.setState(0x45fb, 0x1ea9, 0xd3b0, 0x2802, 0x445, 0xe754, 0x0, 0x0);
        gbc.writeMem(0x45fb, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1ea9, gbc.sp());
        EXPECT(0x45fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02AC
        gbc.setState(0x564e, 0x87f1, 0x23d0, 0x1c1, 0x6d67, 0xcbce, 0x1, 0x0);
        gbc.writeMem(0x564e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x87f1, gbc.sp());
        EXPECT(0x5650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02AD
        gbc.setState(0x23f4, 0x41c0, 0xac70, 0xb3f8, 0xee9b, 0x9d15, 0x1, 0x0);
        gbc.writeMem(0x23f4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x41c0, gbc.sp());
        EXPECT(0x23f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02AE
        gbc.setState(0xbb4c, 0xf09, 0xd8c0, 0x1dc2, 0x6699, 0x27a7, 0x1, 0x0);
        gbc.writeMem(0xbb4c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf09, gbc.sp());
        EXPECT(0xbb4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb4c));
        EXPECT(0x4, gbc.readMem(0xbb4d));
        // CB 04 02B0
        gbc.setState(0x184f, 0x5b67, 0xdc70, 0xe925, 0xedf4, 0xddb6, 0x0, 0x1);
        gbc.writeMem(0x184f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5b67, gbc.sp());
        EXPECT(0x1851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02B1
        gbc.setState(0x7d1, 0xc63e, 0xc540, 0x107d, 0x397, 0x13e6, 0x0, 0x1);
        gbc.writeMem(0x7d1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc63e, gbc.sp());
        EXPECT(0x7d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 02B2
        gbc.setState(0xb361, 0x5316, 0x220, 0x3830, 0xf2dd, 0x6c1c, 0x1, 0x1);
        gbc.writeMem(0xb361, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5316, gbc.sp());
        EXPECT(0xb363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb361));
        EXPECT(0x4, gbc.readMem(0xb362));
        // CB 04 02B3
        gbc.setState(0xe20f, 0xd3e1, 0x5760, 0xf33f, 0x1637, 0xb725, 0x1, 0x1);
        gbc.writeMem(0xe20f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd3e1, gbc.sp());
        EXPECT(0xe211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe20f));
        EXPECT(0x4, gbc.readMem(0xe210));
        // CB 04 02B4
        gbc.setState(0x83f5, 0xda75, 0xbf50, 0x2941, 0xb8d4, 0x9f39, 0x0, 0x0);
        gbc.writeMem(0x83f5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xda75, gbc.sp());
        EXPECT(0x83f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f5));
        EXPECT(0x4, gbc.readMem(0x83f6));
        // CB 04 02B5
        gbc.setState(0xbcda, 0x11d6, 0x4a50, 0x7f7b, 0x621f, 0x3b2, 0x1, 0x0);
        gbc.writeMem(0xbcda, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x11d6, gbc.sp());
        EXPECT(0xbcdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcda));
        EXPECT(0x4, gbc.readMem(0xbcdb));
        // CB 04 02B6
        gbc.setState(0x9263, 0xa08f, 0x2480, 0x553f, 0xe390, 0xeea, 0x1, 0x1);
        gbc.writeMem(0x9263, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa08f, gbc.sp());
        EXPECT(0x9265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9263));
        EXPECT(0x4, gbc.readMem(0x9264));
        // CB 04 02B7
        gbc.setState(0x64e8, 0xa376, 0xfa50, 0x93d4, 0x84e8, 0x7906, 0x1, 0x0);
        gbc.writeMem(0x64e8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa376, gbc.sp());
        EXPECT(0x64ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 02B8
        gbc.setState(0x519d, 0x9cad, 0xac50, 0xd110, 0x364c, 0xce51, 0x1, 0x1);
        gbc.writeMem(0x519d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9cad, gbc.sp());
        EXPECT(0x519f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02B9
        gbc.setState(0xb0e7, 0x5363, 0xecf0, 0xcf76, 0x27b0, 0xa511, 0x1, 0x1);
        gbc.writeMem(0xb0e7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5363, gbc.sp());
        EXPECT(0xb0e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e7));
        EXPECT(0x4, gbc.readMem(0xb0e8));
        // CB 04 02BA
        gbc.setState(0xb82b, 0xe8ee, 0x2100, 0xf21c, 0x56d0, 0x2b89, 0x0, 0x1);
        gbc.writeMem(0xb82b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe8ee, gbc.sp());
        EXPECT(0xb82d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb82b));
        EXPECT(0x4, gbc.readMem(0xb82c));
        // CB 04 02BC
        gbc.setState(0x953, 0xe0ef, 0xdd20, 0xcdd5, 0xa1af, 0x19e9, 0x1, 0x0);
        gbc.writeMem(0x953, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe0ef, gbc.sp());
        EXPECT(0x955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 02BD
        gbc.setState(0xa3f5, 0x3a9f, 0x2380, 0x66ff, 0x2a44, 0x5a6d, 0x0, 0x1);
        gbc.writeMem(0xa3f5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3a9f, gbc.sp());
        EXPECT(0xa3f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f5));
        EXPECT(0x4, gbc.readMem(0xa3f6));
        // CB 04 02BE
        gbc.setState(0x2be3, 0xa26a, 0xdc0, 0xc95d, 0x50a0, 0x239d, 0x1, 0x1);
        gbc.writeMem(0x2be3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa26a, gbc.sp());
        EXPECT(0x2be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 02BF
        gbc.setState(0xaaa1, 0x8076, 0xde30, 0x434c, 0xf5f0, 0x6b8b, 0x1, 0x0);
        gbc.writeMem(0xaaa1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8076, gbc.sp());
        EXPECT(0xaaa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa1));
        EXPECT(0x4, gbc.readMem(0xaaa2));
        // CB 04 02C0
        gbc.setState(0x7812, 0xd2a2, 0xd940, 0x31, 0xd65e, 0x574b, 0x1, 0x0);
        gbc.writeMem(0x7812, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd2a2, gbc.sp());
        EXPECT(0x7814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 02C1
        gbc.setState(0x812a, 0x124c, 0xa8a0, 0x2ea3, 0x7844, 0xc0e5, 0x1, 0x1);
        gbc.writeMem(0x812a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x124c, gbc.sp());
        EXPECT(0x812c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x812a));
        EXPECT(0x4, gbc.readMem(0x812b));
        // CB 04 02C2
        gbc.setState(0x9c30, 0xa60b, 0xe260, 0x6a5, 0xb4c2, 0x4c1f, 0x0, 0x1);
        gbc.writeMem(0x9c30, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa60b, gbc.sp());
        EXPECT(0x9c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c30));
        EXPECT(0x4, gbc.readMem(0x9c31));
        // CB 04 02C3
        gbc.setState(0x4737, 0x5416, 0x8d60, 0x1c9b, 0xf5bd, 0xd56a, 0x0, 0x0);
        gbc.writeMem(0x4737, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5416, gbc.sp());
        EXPECT(0x4739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02C4
        gbc.setState(0x818f, 0xea79, 0x2f70, 0x6ab4, 0x337f, 0x597c, 0x1, 0x1);
        gbc.writeMem(0x818f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xea79, gbc.sp());
        EXPECT(0x8191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x818f));
        EXPECT(0x4, gbc.readMem(0x8190));
        // CB 04 02C5
        gbc.setState(0x7d8, 0x23b0, 0xd970, 0x904c, 0x561f, 0x7dc4, 0x0, 0x0);
        gbc.writeMem(0x7d8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x23b0, gbc.sp());
        EXPECT(0x7da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 02C6
        gbc.setState(0xb821, 0x96e3, 0x79e0, 0x9e34, 0xa6b, 0xf57, 0x1, 0x0);
        gbc.writeMem(0xb821, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x96e3, gbc.sp());
        EXPECT(0xb823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb821));
        EXPECT(0x4, gbc.readMem(0xb822));
        // CB 04 02C8
        gbc.setState(0x1174, 0xb34, 0xf3f0, 0xbd72, 0x6030, 0x818d, 0x0, 0x0);
        gbc.writeMem(0x1174, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb34, gbc.sp());
        EXPECT(0x1176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02C9
        gbc.setState(0x78d, 0x2312, 0xf670, 0xa199, 0x421f, 0xefee, 0x1, 0x0);
        gbc.writeMem(0x78d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2312, gbc.sp());
        EXPECT(0x78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02CA
        gbc.setState(0x87c8, 0xcd7d, 0x8e10, 0xebbf, 0x4e65, 0x884e, 0x0, 0x0);
        gbc.writeMem(0x87c8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcd7d, gbc.sp());
        EXPECT(0x87ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87c8));
        EXPECT(0x4, gbc.readMem(0x87c9));
        // CB 04 02CB
        gbc.setState(0x8250, 0x45f, 0x7fd0, 0xcff8, 0xcda9, 0x1ad9, 0x0, 0x0);
        gbc.writeMem(0x8250, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x45f, gbc.sp());
        EXPECT(0x8252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8250));
        EXPECT(0x4, gbc.readMem(0x8251));
        // CB 04 02CC
        gbc.setState(0xe719, 0x8f94, 0xaf40, 0xf61c, 0x49c5, 0x5f7a, 0x1, 0x1);
        gbc.writeMem(0xe719, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8f94, gbc.sp());
        EXPECT(0xe71b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe719));
        EXPECT(0x4, gbc.readMem(0xe71a));
        // CB 04 02CD
        gbc.setState(0x40ec, 0x5f60, 0xc3d0, 0x44e0, 0xa92e, 0xda91, 0x1, 0x0);
        gbc.writeMem(0x40ec, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5f60, gbc.sp());
        EXPECT(0x40ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02CE
        gbc.setState(0x7f98, 0x2676, 0xf3e0, 0x4cef, 0xbb56, 0x7628, 0x0, 0x1);
        gbc.writeMem(0x7f98, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2676, gbc.sp());
        EXPECT(0x7f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 02CF
        gbc.setState(0xc9ff, 0x6778, 0x65e0, 0x76bd, 0x47cd, 0x3700, 0x1, 0x0);
        gbc.writeMem(0xc9ff, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6778, gbc.sp());
        EXPECT(0xca01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ff));
        EXPECT(0x4, gbc.readMem(0xca00));
        // CB 04 02D0
        gbc.setState(0xde7d, 0xbca2, 0x6c90, 0x499d, 0x4160, 0x1929, 0x0, 0x0);
        gbc.writeMem(0xde7d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbca2, gbc.sp());
        EXPECT(0xde7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7d));
        EXPECT(0x4, gbc.readMem(0xde7e));
        // CB 04 02D1
        gbc.setState(0x49fa, 0xdc0d, 0x81f0, 0x70b6, 0xbdc0, 0xf3b3, 0x0, 0x0);
        gbc.writeMem(0x49fa, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xdc0d, gbc.sp());
        EXPECT(0x49fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02D2
        gbc.setState(0xe05, 0x991f, 0xb3c0, 0x63c9, 0x9e2c, 0xc657, 0x1, 0x0);
        gbc.writeMem(0xe05, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x991f, gbc.sp());
        EXPECT(0xe07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02D3
        gbc.setState(0x3da5, 0x78f9, 0xf340, 0x3cd0, 0x7ba, 0xacfc, 0x1, 0x1);
        gbc.writeMem(0x3da5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x78f9, gbc.sp());
        EXPECT(0x3da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02D4
        gbc.setState(0x365d, 0x4e75, 0xd940, 0xf3bb, 0xcadf, 0x8e11, 0x1, 0x0);
        gbc.writeMem(0x365d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4e75, gbc.sp());
        EXPECT(0x365f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02D5
        gbc.setState(0x3af4, 0xfc8f, 0x1a50, 0x18e6, 0x657c, 0x345a, 0x1, 0x0);
        gbc.writeMem(0x3af4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfc8f, gbc.sp());
        EXPECT(0x3af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 02D6
        gbc.setState(0xcbf1, 0x4378, 0x23f0, 0xb06, 0x67c2, 0x4a36, 0x1, 0x0);
        gbc.writeMem(0xcbf1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4378, gbc.sp());
        EXPECT(0xcbf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf1));
        EXPECT(0x4, gbc.readMem(0xcbf2));
        // CB 04 02D7
        gbc.setState(0xe23, 0x2d1a, 0x60a0, 0xdac2, 0x8230, 0xb516, 0x0, 0x0);
        gbc.writeMem(0xe23, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2d1a, gbc.sp());
        EXPECT(0xe25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02D8
        gbc.setState(0xbebe, 0xe5a3, 0x22a0, 0x91a5, 0x3d25, 0xb30, 0x0, 0x0);
        gbc.writeMem(0xbebe, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe5a3, gbc.sp());
        EXPECT(0xbec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbebe));
        EXPECT(0x4, gbc.readMem(0xbebf));
        // CB 04 02D9
        gbc.setState(0x9cb7, 0x5846, 0x10b0, 0x529, 0xd3f4, 0xeff4, 0x0, 0x0);
        gbc.writeMem(0x9cb7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5846, gbc.sp());
        EXPECT(0x9cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb7));
        EXPECT(0x4, gbc.readMem(0x9cb8));
        // CB 04 02DB
        gbc.setState(0x5c6c, 0x703e, 0xfa60, 0xf788, 0xac85, 0xb654, 0x1, 0x0);
        gbc.writeMem(0x5c6c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x703e, gbc.sp());
        EXPECT(0x5c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02DC
        gbc.setState(0x1cc9, 0xa0ac, 0xbe60, 0x2572, 0x5250, 0x4a3c, 0x0, 0x0);
        gbc.writeMem(0x1cc9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa0ac, gbc.sp());
        EXPECT(0x1ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 02DD
        gbc.setState(0x61a1, 0xd010, 0xc390, 0xa2c1, 0x8aa6, 0x2f91, 0x1, 0x0);
        gbc.writeMem(0x61a1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd010, gbc.sp());
        EXPECT(0x61a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 02DE
        gbc.setState(0x9963, 0x640d, 0x7450, 0x8788, 0x13f1, 0xe79f, 0x0, 0x0);
        gbc.writeMem(0x9963, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x640d, gbc.sp());
        EXPECT(0x9965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9963));
        EXPECT(0x4, gbc.readMem(0x9964));
        // CB 04 02DF
        gbc.setState(0xa9c3, 0xaaf8, 0x6520, 0x7d92, 0xca7d, 0x8158, 0x0, 0x1);
        gbc.writeMem(0xa9c3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xaaf8, gbc.sp());
        EXPECT(0xa9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c3));
        EXPECT(0x4, gbc.readMem(0xa9c4));
        // CB 04 02E0
        gbc.setState(0xdea3, 0xe982, 0x1f60, 0x72e0, 0x868b, 0x3796, 0x1, 0x0);
        gbc.writeMem(0xdea3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe982, gbc.sp());
        EXPECT(0xdea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea3));
        EXPECT(0x4, gbc.readMem(0xdea4));
        // CB 04 02E1
        gbc.setState(0x67de, 0xfd5d, 0xe20, 0x5938, 0xe6d6, 0x9437, 0x0, 0x0);
        gbc.writeMem(0x67de, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfd5d, gbc.sp());
        EXPECT(0x67e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02E2
        gbc.setState(0x15f1, 0x776a, 0x73d0, 0x6bfe, 0x8f0c, 0xd780, 0x0, 0x1);
        gbc.writeMem(0x15f1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x776a, gbc.sp());
        EXPECT(0x15f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02E3
        gbc.setState(0x27d3, 0x1ce3, 0xcc30, 0x5d3a, 0x3baf, 0x245a, 0x1, 0x1);
        gbc.writeMem(0x27d3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1ce3, gbc.sp());
        EXPECT(0x27d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 02E4
        gbc.setState(0x24e1, 0xb399, 0x55a0, 0xf52c, 0x59e1, 0xd30d, 0x0, 0x1);
        gbc.writeMem(0x24e1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb399, gbc.sp());
        EXPECT(0x24e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02E6
        gbc.setState(0x9f93, 0x66e8, 0x92c0, 0x4a44, 0x1d, 0xf31a, 0x0, 0x0);
        gbc.writeMem(0x9f93, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x66e8, gbc.sp());
        EXPECT(0x9f95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f93));
        EXPECT(0x4, gbc.readMem(0x9f94));
        // CB 04 02E7
        gbc.setState(0xaf5c, 0xce45, 0x3d80, 0x530b, 0x8eed, 0x3a15, 0x1, 0x1);
        gbc.writeMem(0xaf5c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xce45, gbc.sp());
        EXPECT(0xaf5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5c));
        EXPECT(0x4, gbc.readMem(0xaf5d));
        // CB 04 02E8
        gbc.setState(0x8e9c, 0xf6ac, 0xb4f0, 0x548b, 0x3593, 0xcda4, 0x0, 0x0);
        gbc.writeMem(0x8e9c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf6ac, gbc.sp());
        EXPECT(0x8e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e9c));
        EXPECT(0x4, gbc.readMem(0x8e9d));
        // CB 04 02E9
        gbc.setState(0xb8df, 0xa5b0, 0x1ec0, 0xbe47, 0x89f1, 0xc02f, 0x1, 0x1);
        gbc.writeMem(0xb8df, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa5b0, gbc.sp());
        EXPECT(0xb8e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8df));
        EXPECT(0x4, gbc.readMem(0xb8e0));
        // CB 04 02EA
        gbc.setState(0xc33a, 0x2b8b, 0x3ce0, 0x997f, 0xfb1, 0xc520, 0x0, 0x1);
        gbc.writeMem(0xc33a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2b8b, gbc.sp());
        EXPECT(0xc33c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc33a));
        EXPECT(0x4, gbc.readMem(0xc33b));
        // CB 04 02EB
        gbc.setState(0x6dd6, 0x94c0, 0xee50, 0x21a8, 0xcbb, 0xa012, 0x0, 0x1);
        gbc.writeMem(0x6dd6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x94c0, gbc.sp());
        EXPECT(0x6dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02EC
        gbc.setState(0x3d74, 0xc302, 0xa210, 0x76a, 0x5469, 0xf4b0, 0x0, 0x1);
        gbc.writeMem(0x3d74, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc302, gbc.sp());
        EXPECT(0x3d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02ED
        gbc.setState(0xa3a9, 0x1e3b, 0x3d0, 0x3520, 0xbcb1, 0x5876, 0x0, 0x0);
        gbc.writeMem(0xa3a9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1e3b, gbc.sp());
        EXPECT(0xa3ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a9));
        EXPECT(0x4, gbc.readMem(0xa3aa));
        // CB 04 02EE
        gbc.setState(0xa9e6, 0x205f, 0x6ac0, 0xa295, 0xf476, 0x3eb, 0x0, 0x0);
        gbc.writeMem(0xa9e6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x205f, gbc.sp());
        EXPECT(0xa9e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e6));
        EXPECT(0x4, gbc.readMem(0xa9e7));
        // CB 04 02EF
        gbc.setState(0xdeee, 0xca16, 0xaf20, 0xd4ea, 0x7a97, 0x85e7, 0x0, 0x0);
        gbc.writeMem(0xdeee, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xca16, gbc.sp());
        EXPECT(0xdef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeee));
        EXPECT(0x4, gbc.readMem(0xdeef));
        // CB 04 02F0
        gbc.setState(0x9b48, 0xc8b, 0x1410, 0xbc9e, 0xd18c, 0x2a7c, 0x0, 0x0);
        gbc.writeMem(0x9b48, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc8b, gbc.sp());
        EXPECT(0x9b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b48));
        EXPECT(0x4, gbc.readMem(0x9b49));
        // CB 04 02F1
        gbc.setState(0x3438, 0xee37, 0x3a20, 0x74a7, 0x8a0a, 0xa07, 0x0, 0x0);
        gbc.writeMem(0x3438, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xee37, gbc.sp());
        EXPECT(0x343a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 02F2
        gbc.setState(0x2339, 0x1138, 0xc5f0, 0x4c49, 0xa01c, 0xa1b2, 0x0, 0x1);
        gbc.writeMem(0x2339, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1138, gbc.sp());
        EXPECT(0x233b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02F3
        gbc.setState(0x2752, 0x7398, 0xc810, 0xecb9, 0xe15, 0x2d5d, 0x0, 0x0);
        gbc.writeMem(0x2752, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7398, gbc.sp());
        EXPECT(0x2754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 02F4
        gbc.setState(0xcc2a, 0x9739, 0x1f30, 0x460a, 0x1d6e, 0x32d9, 0x1, 0x0);
        gbc.writeMem(0xcc2a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9739, gbc.sp());
        EXPECT(0xcc2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc2a));
        EXPECT(0x4, gbc.readMem(0xcc2b));
        // CB 04 02F5
        gbc.setState(0xd504, 0x557c, 0x3880, 0x4ec5, 0xfd7f, 0xa007, 0x1, 0x1);
        gbc.writeMem(0xd504, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x557c, gbc.sp());
        EXPECT(0xd506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd504));
        EXPECT(0x4, gbc.readMem(0xd505));
        // CB 04 02F6
        gbc.setState(0x46e8, 0x437d, 0x65e0, 0xb2f6, 0xe716, 0xaa40, 0x1, 0x1);
        gbc.writeMem(0x46e8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x437d, gbc.sp());
        EXPECT(0x46ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02F7
        gbc.setState(0xbeef, 0x18ba, 0x8a00, 0x9432, 0x1a9a, 0x1a3b, 0x0, 0x1);
        gbc.writeMem(0xbeef, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x18ba, gbc.sp());
        EXPECT(0xbef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeef));
        EXPECT(0x4, gbc.readMem(0xbef0));
        // CB 04 02F8
        gbc.setState(0x931, 0x93a2, 0x3a70, 0x98e2, 0x369e, 0xd8d1, 0x0, 0x1);
        gbc.writeMem(0x931, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x93a2, gbc.sp());
        EXPECT(0x933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02F9
        gbc.setState(0xb587, 0x5c89, 0x6860, 0x9585, 0x15b6, 0x154b, 0x0, 0x1);
        gbc.writeMem(0xb587, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5c89, gbc.sp());
        EXPECT(0xb589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb587));
        EXPECT(0x4, gbc.readMem(0xb588));
        // CB 04 02FA
        gbc.setState(0x2b90, 0xdcb8, 0xd560, 0x9cd4, 0xedd3, 0xbc58, 0x1, 0x1);
        gbc.writeMem(0x2b90, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xdcb8, gbc.sp());
        EXPECT(0x2b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 02FB
        gbc.setState(0xaa6a, 0xf5f6, 0x5270, 0x9351, 0xd819, 0xabc0, 0x1, 0x0);
        gbc.writeMem(0xaa6a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf5f6, gbc.sp());
        EXPECT(0xaa6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa6a));
        EXPECT(0x4, gbc.readMem(0xaa6b));
        // CB 04 02FC
        gbc.setState(0x8818, 0xcffa, 0xfb0, 0xeab8, 0x54a1, 0x63ee, 0x0, 0x1);
        gbc.writeMem(0x8818, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcffa, gbc.sp());
        EXPECT(0x881a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8818));
        EXPECT(0x4, gbc.readMem(0x8819));
        // CB 04 02FD
        gbc.setState(0xc310, 0x6cc0, 0xe740, 0x7737, 0xac24, 0xde68, 0x1, 0x1);
        gbc.writeMem(0xc310, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6cc0, gbc.sp());
        EXPECT(0xc312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc310));
        EXPECT(0x4, gbc.readMem(0xc311));
        // CB 04 02FE
        gbc.setState(0x6c48, 0x2ea0, 0x5040, 0x1661, 0xdab8, 0x559f, 0x1, 0x1);
        gbc.writeMem(0x6c48, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2ea0, gbc.sp());
        EXPECT(0x6c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 02FF
        gbc.setState(0x932f, 0x773e, 0xaf30, 0x6e6e, 0xb439, 0x1955, 0x0, 0x1);
        gbc.writeMem(0x932f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x773e, gbc.sp());
        EXPECT(0x9331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x932f));
        EXPECT(0x4, gbc.readMem(0x9330));
        // CB 04 0300
        gbc.setState(0xc03e, 0x838c, 0x2120, 0x8750, 0x9f80, 0x2253, 0x1, 0x1);
        gbc.writeMem(0xc03e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x838c, gbc.sp());
        EXPECT(0xc040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc03e));
        EXPECT(0x4, gbc.readMem(0xc03f));
        // CB 04 0301
        gbc.setState(0xe9c4, 0x9ed9, 0xa5b0, 0xc0b7, 0x17e6, 0x4e0, 0x1, 0x1);
        gbc.writeMem(0xe9c4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9ed9, gbc.sp());
        EXPECT(0xe9c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c4));
        EXPECT(0x4, gbc.readMem(0xe9c5));
        // CB 04 0302
        gbc.setState(0xa248, 0xcfbb, 0xd60, 0xe8bf, 0x1975, 0xc63a, 0x1, 0x0);
        gbc.writeMem(0xa248, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcfbb, gbc.sp());
        EXPECT(0xa24a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa248));
        EXPECT(0x4, gbc.readMem(0xa249));
        // CB 04 0303
        gbc.setState(0x3d0, 0xdaf0, 0x4890, 0x3d86, 0xb2f6, 0xf966, 0x1, 0x0);
        gbc.writeMem(0x3d0, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdaf0, gbc.sp());
        EXPECT(0x3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0304
        gbc.setState(0x1a07, 0x73fd, 0x9c00, 0x70ff, 0xa104, 0x2199, 0x0, 0x1);
        gbc.writeMem(0x1a07, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x73fd, gbc.sp());
        EXPECT(0x1a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0306
        gbc.setState(0x32f7, 0x9de2, 0x3be0, 0xff0c, 0xff5, 0xfe97, 0x1, 0x1);
        gbc.writeMem(0x32f7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9de2, gbc.sp());
        EXPECT(0x32f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0307
        gbc.setState(0x29ee, 0xa73e, 0xf310, 0xcaf7, 0x678a, 0xaf19, 0x1, 0x1);
        gbc.writeMem(0x29ee, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa73e, gbc.sp());
        EXPECT(0x29f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0308
        gbc.setState(0xb19f, 0xd82, 0xa710, 0xde6, 0xc1af, 0x56ff, 0x1, 0x1);
        gbc.writeMem(0xb19f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd82, gbc.sp());
        EXPECT(0xb1a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb19f));
        EXPECT(0x4, gbc.readMem(0xb1a0));
        // CB 04 0309
        gbc.setState(0x4ad7, 0x6dba, 0xa600, 0x7c50, 0xf83f, 0xf0e7, 0x0, 0x0);
        gbc.writeMem(0x4ad7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6dba, gbc.sp());
        EXPECT(0x4ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 030A
        gbc.setState(0x343b, 0x682f, 0x5900, 0x12db, 0x1cef, 0xb7d4, 0x1, 0x0);
        gbc.writeMem(0x343b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x682f, gbc.sp());
        EXPECT(0x343d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 030B
        gbc.setState(0x9232, 0xf2c7, 0x2800, 0xd22d, 0x93a3, 0xb226, 0x1, 0x1);
        gbc.writeMem(0x9232, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf2c7, gbc.sp());
        EXPECT(0x9234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9232));
        EXPECT(0x4, gbc.readMem(0x9233));
        // CB 04 030C
        gbc.setState(0xdbd3, 0x451a, 0x7ed0, 0xc3b5, 0xf3c5, 0x2a62, 0x1, 0x1);
        gbc.writeMem(0xdbd3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x451a, gbc.sp());
        EXPECT(0xdbd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd3));
        EXPECT(0x4, gbc.readMem(0xdbd4));
        // CB 04 030D
        gbc.setState(0xc48e, 0xa7f6, 0x6480, 0x4fb6, 0x5537, 0xb890, 0x0, 0x0);
        gbc.writeMem(0xc48e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa7f6, gbc.sp());
        EXPECT(0xc490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc48e));
        EXPECT(0x4, gbc.readMem(0xc48f));
        // CB 04 030E
        gbc.setState(0xdbd, 0x225e, 0x54d0, 0xef78, 0x77d5, 0xf7f3, 0x0, 0x1);
        gbc.writeMem(0xdbd, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x225e, gbc.sp());
        EXPECT(0xdbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 030F
        gbc.setState(0x1f0, 0x8172, 0x5a30, 0xe302, 0x69f4, 0xec1b, 0x1, 0x1);
        gbc.writeMem(0x1f0, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8172, gbc.sp());
        EXPECT(0x1f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0310
        gbc.setState(0xd536, 0x2843, 0xc5a0, 0x64ef, 0x1fb9, 0xa687, 0x1, 0x1);
        gbc.writeMem(0xd536, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2843, gbc.sp());
        EXPECT(0xd538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd536));
        EXPECT(0x4, gbc.readMem(0xd537));
        // CB 04 0311
        gbc.setState(0xca7a, 0xedf5, 0x2ae0, 0x4048, 0x324, 0xa8a4, 0x0, 0x0);
        gbc.writeMem(0xca7a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xedf5, gbc.sp());
        EXPECT(0xca7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca7a));
        EXPECT(0x4, gbc.readMem(0xca7b));
        // CB 04 0312
        gbc.setState(0x845e, 0xc9d8, 0x9710, 0xd2f5, 0xa9cf, 0x6466, 0x1, 0x1);
        gbc.writeMem(0x845e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc9d8, gbc.sp());
        EXPECT(0x8460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x845e));
        EXPECT(0x4, gbc.readMem(0x845f));
        // CB 04 0313
        gbc.setState(0xdf0c, 0xe4db, 0xeb50, 0x5212, 0x6ab4, 0x3533, 0x1, 0x1);
        gbc.writeMem(0xdf0c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe4db, gbc.sp());
        EXPECT(0xdf0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf0c));
        EXPECT(0x4, gbc.readMem(0xdf0d));
        // CB 04 0314
        gbc.setState(0x5226, 0x3b16, 0xc550, 0xc4ee, 0x6467, 0xf75f, 0x0, 0x1);
        gbc.writeMem(0x5226, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3b16, gbc.sp());
        EXPECT(0x5228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0315
        gbc.setState(0x9fbb, 0x8932, 0xbef0, 0xe0fa, 0x46a3, 0xc474, 0x0, 0x1);
        gbc.writeMem(0x9fbb, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8932, gbc.sp());
        EXPECT(0x9fbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fbb));
        EXPECT(0x4, gbc.readMem(0x9fbc));
        // CB 04 0316
        gbc.setState(0x3d62, 0x40d6, 0x44e0, 0x4966, 0x84fc, 0x1cac, 0x1, 0x0);
        gbc.writeMem(0x3d62, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x40d6, gbc.sp());
        EXPECT(0x3d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0317
        gbc.setState(0xc84, 0xa297, 0xaf80, 0x761, 0x31b2, 0x929a, 0x0, 0x0);
        gbc.writeMem(0xc84, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa297, gbc.sp());
        EXPECT(0xc86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0318
        gbc.setState(0x994b, 0x66cd, 0x27b0, 0xbdbd, 0x4cc5, 0x9c93, 0x0, 0x0);
        gbc.writeMem(0x994b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x66cd, gbc.sp());
        EXPECT(0x994d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994b));
        EXPECT(0x4, gbc.readMem(0x994c));
        // CB 04 0319
        gbc.setState(0x6b7c, 0x1840, 0xe340, 0x56fb, 0x8e7a, 0x5ba, 0x0, 0x1);
        gbc.writeMem(0x6b7c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1840, gbc.sp());
        EXPECT(0x6b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 031A
        gbc.setState(0x1829, 0x6ae1, 0x2760, 0xb05f, 0x419a, 0x728e, 0x0, 0x1);
        gbc.writeMem(0x1829, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6ae1, gbc.sp());
        EXPECT(0x182b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 031B
        gbc.setState(0xb5b9, 0x4276, 0xce80, 0x6690, 0xe7ce, 0x519c, 0x1, 0x1);
        gbc.writeMem(0xb5b9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4276, gbc.sp());
        EXPECT(0xb5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b9));
        EXPECT(0x4, gbc.readMem(0xb5ba));
        // CB 04 031C
        gbc.setState(0xd07c, 0xdfa0, 0x6680, 0x43a7, 0xea7d, 0x4170, 0x0, 0x0);
        gbc.writeMem(0xd07c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdfa0, gbc.sp());
        EXPECT(0xd07e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd07c));
        EXPECT(0x4, gbc.readMem(0xd07d));
        // CB 04 031D
        gbc.setState(0x2ee, 0xf11c, 0x840, 0xa303, 0xfb29, 0x681e, 0x1, 0x0);
        gbc.writeMem(0x2ee, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf11c, gbc.sp());
        EXPECT(0x2f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 031E
        gbc.setState(0x613a, 0x12c0, 0x3c20, 0x4131, 0x156e, 0xf32c, 0x0, 0x0);
        gbc.writeMem(0x613a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x12c0, gbc.sp());
        EXPECT(0x613c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 031F
        gbc.setState(0x4c0, 0xa882, 0xb510, 0xe2a9, 0x611f, 0x6058, 0x0, 0x0);
        gbc.writeMem(0x4c0, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa882, gbc.sp());
        EXPECT(0x4c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0320
        gbc.setState(0x24f2, 0x4b6f, 0xe980, 0x8bf1, 0xc62, 0xaa19, 0x0, 0x0);
        gbc.writeMem(0x24f2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4b6f, gbc.sp());
        EXPECT(0x24f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0321
        gbc.setState(0xa5ee, 0x4eb0, 0xc320, 0xab0, 0xbaf4, 0x5a9d, 0x1, 0x1);
        gbc.writeMem(0xa5ee, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4eb0, gbc.sp());
        EXPECT(0xa5f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ee));
        EXPECT(0x4, gbc.readMem(0xa5ef));
        // CB 04 0322
        gbc.setState(0x8e6, 0xd0a6, 0x2d10, 0xc38, 0x2df4, 0x1fdf, 0x0, 0x1);
        gbc.writeMem(0x8e6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd0a6, gbc.sp());
        EXPECT(0x8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0323
        gbc.setState(0x6143, 0x3e7e, 0xfc60, 0xb486, 0x426b, 0x8a93, 0x1, 0x1);
        gbc.writeMem(0x6143, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3e7e, gbc.sp());
        EXPECT(0x6145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0324
        gbc.setState(0xdfae, 0x8776, 0x5340, 0x48c2, 0x7433, 0xa7b5, 0x1, 0x1);
        gbc.writeMem(0xdfae, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8776, gbc.sp());
        EXPECT(0xdfb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfae));
        EXPECT(0x4, gbc.readMem(0xdfaf));
        // CB 04 0325
        gbc.setState(0xb8b9, 0x7d07, 0xc660, 0x6dab, 0xbcf6, 0x9132, 0x1, 0x1);
        gbc.writeMem(0xb8b9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7d07, gbc.sp());
        EXPECT(0xb8bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8b9));
        EXPECT(0x4, gbc.readMem(0xb8ba));
        // CB 04 0326
        gbc.setState(0x48d4, 0x1006, 0xcb20, 0x6be0, 0x25c1, 0x63ec, 0x1, 0x0);
        gbc.writeMem(0x48d4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1006, gbc.sp());
        EXPECT(0x48d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0327
        gbc.setState(0xee9f, 0x1b10, 0x5e10, 0x75ab, 0xb69d, 0x8345, 0x0, 0x1);
        gbc.writeMem(0xee9f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1b10, gbc.sp());
        EXPECT(0xeea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee9f));
        EXPECT(0x4, gbc.readMem(0xeea0));
        // CB 04 0328
        gbc.setState(0x19d8, 0x8c46, 0x3bd0, 0xcc19, 0x65ef, 0xe231, 0x0, 0x1);
        gbc.writeMem(0x19d8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8c46, gbc.sp());
        EXPECT(0x19da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0329
        gbc.setState(0x147d, 0x33b8, 0x2430, 0x6a87, 0xe3cb, 0x998b, 0x0, 0x1);
        gbc.writeMem(0x147d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x33b8, gbc.sp());
        EXPECT(0x147f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 032A
        gbc.setState(0xec99, 0x7ac3, 0xa2a0, 0x4443, 0xc9c0, 0x8689, 0x1, 0x0);
        gbc.writeMem(0xec99, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7ac3, gbc.sp());
        EXPECT(0xec9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec99));
        EXPECT(0x4, gbc.readMem(0xec9a));
        // CB 04 032B
        gbc.setState(0x7794, 0x300b, 0xc320, 0xd2bb, 0xacd2, 0x1d6d, 0x1, 0x1);
        gbc.writeMem(0x7794, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x300b, gbc.sp());
        EXPECT(0x7796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 032C
        gbc.setState(0x5814, 0xc4a, 0xb460, 0x9d02, 0x7374, 0x9b83, 0x1, 0x1);
        gbc.writeMem(0x5814, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc4a, gbc.sp());
        EXPECT(0x5816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 032D
        gbc.setState(0x1724, 0x3801, 0xfbb0, 0x8597, 0x33d9, 0x21ea, 0x0, 0x1);
        gbc.writeMem(0x1724, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3801, gbc.sp());
        EXPECT(0x1726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 032E
        gbc.setState(0xac50, 0xe15a, 0x2110, 0xd3d9, 0xa6b3, 0x2505, 0x1, 0x0);
        gbc.writeMem(0xac50, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe15a, gbc.sp());
        EXPECT(0xac52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac50));
        EXPECT(0x4, gbc.readMem(0xac51));
        // CB 04 032F
        gbc.setState(0x5077, 0x29c6, 0x71d0, 0x126b, 0xeafa, 0xc14b, 0x0, 0x0);
        gbc.writeMem(0x5077, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x29c6, gbc.sp());
        EXPECT(0x5079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0330
        gbc.setState(0xc25, 0x823a, 0xf6c0, 0x8bb2, 0x28e8, 0x57b2, 0x0, 0x0);
        gbc.writeMem(0xc25, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x823a, gbc.sp());
        EXPECT(0xc27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0332
        gbc.setState(0x4ad0, 0x1664, 0xe400, 0xf70e, 0x73f6, 0xf6e1, 0x1, 0x1);
        gbc.writeMem(0x4ad0, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1664, gbc.sp());
        EXPECT(0x4ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0333
        gbc.setState(0xd996, 0x6bdf, 0xe50, 0x2e4, 0xe177, 0xb491, 0x0, 0x0);
        gbc.writeMem(0xd996, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6bdf, gbc.sp());
        EXPECT(0xd998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd996));
        EXPECT(0x4, gbc.readMem(0xd997));
        // CB 04 0334
        gbc.setState(0xc55c, 0x4b0c, 0xd20, 0xd196, 0x5f2d, 0x7bd5, 0x0, 0x1);
        gbc.writeMem(0xc55c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4b0c, gbc.sp());
        EXPECT(0xc55e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55c));
        EXPECT(0x4, gbc.readMem(0xc55d));
        // CB 04 0335
        gbc.setState(0x448f, 0xfb30, 0xa550, 0x9924, 0xca58, 0x23ca, 0x1, 0x0);
        gbc.writeMem(0x448f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfb30, gbc.sp());
        EXPECT(0x4491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0336
        gbc.setState(0xc589, 0xa6ac, 0x7c10, 0x5bba, 0x728e, 0xf1ca, 0x1, 0x1);
        gbc.writeMem(0xc589, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa6ac, gbc.sp());
        EXPECT(0xc58b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc589));
        EXPECT(0x4, gbc.readMem(0xc58a));
        // CB 04 0337
        gbc.setState(0xc1bd, 0xbb0b, 0xa930, 0xb66b, 0xeabf, 0x4961, 0x0, 0x0);
        gbc.writeMem(0xc1bd, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbb0b, gbc.sp());
        EXPECT(0xc1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1bd));
        EXPECT(0x4, gbc.readMem(0xc1be));
        // CB 04 0338
        gbc.setState(0xc2b7, 0x854e, 0x6500, 0xf678, 0xe0c9, 0xd9bd, 0x1, 0x0);
        gbc.writeMem(0xc2b7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x854e, gbc.sp());
        EXPECT(0xc2b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b7));
        EXPECT(0x4, gbc.readMem(0xc2b8));
        // CB 04 0339
        gbc.setState(0x99e0, 0x1f51, 0x28d0, 0xbd14, 0x46a3, 0x4220, 0x0, 0x1);
        gbc.writeMem(0x99e0, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1f51, gbc.sp());
        EXPECT(0x99e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e0));
        EXPECT(0x4, gbc.readMem(0x99e1));
        // CB 04 033A
        gbc.setState(0x7fc1, 0x7b52, 0x9680, 0x8d3a, 0x61f9, 0x3a02, 0x0, 0x1);
        gbc.writeMem(0x7fc1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7b52, gbc.sp());
        EXPECT(0x7fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 033B
        gbc.setState(0x3623, 0x95b6, 0x43a0, 0x42d0, 0x1c8d, 0x7d75, 0x0, 0x0);
        gbc.writeMem(0x3623, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x95b6, gbc.sp());
        EXPECT(0x3625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 033C
        gbc.setState(0xe408, 0xe8f4, 0xcf60, 0x1810, 0xf906, 0x75c9, 0x0, 0x1);
        gbc.writeMem(0xe408, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe8f4, gbc.sp());
        EXPECT(0xe40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe408));
        EXPECT(0x4, gbc.readMem(0xe409));
        // CB 04 033D
        gbc.setState(0xebe5, 0x1717, 0x6490, 0xbbe7, 0xd2a5, 0x4a71, 0x1, 0x1);
        gbc.writeMem(0xebe5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1717, gbc.sp());
        EXPECT(0xebe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe5));
        EXPECT(0x4, gbc.readMem(0xebe6));
        // CB 04 033E
        gbc.setState(0x8057, 0x9465, 0xb870, 0x2825, 0x28e1, 0xd038, 0x1, 0x1);
        gbc.writeMem(0x8057, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9465, gbc.sp());
        EXPECT(0x8059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8057));
        EXPECT(0x4, gbc.readMem(0x8058));
        // CB 04 033F
        gbc.setState(0xa0c5, 0x4475, 0x1360, 0x44e2, 0x7bd0, 0x7bd0, 0x0, 0x0);
        gbc.writeMem(0xa0c5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4475, gbc.sp());
        EXPECT(0xa0c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c5));
        EXPECT(0x4, gbc.readMem(0xa0c6));
        // CB 04 0340
        gbc.setState(0x1844, 0x4ee4, 0x9790, 0xc1a9, 0x4ea6, 0xbbd5, 0x1, 0x0);
        gbc.writeMem(0x1844, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4ee4, gbc.sp());
        EXPECT(0x1846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0341
        gbc.setState(0xefb9, 0xe969, 0x35d0, 0x99fc, 0xab5f, 0x858e, 0x1, 0x1);
        gbc.writeMem(0xefb9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe969, gbc.sp());
        EXPECT(0xefbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb9));
        EXPECT(0x4, gbc.readMem(0xefba));
        // CB 04 0342
        gbc.setState(0x1591, 0xc403, 0x2c60, 0xc08b, 0xa221, 0x8144, 0x1, 0x1);
        gbc.writeMem(0x1591, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc403, gbc.sp());
        EXPECT(0x1593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0343
        gbc.setState(0xd475, 0x8b33, 0x5740, 0xf18f, 0xdf68, 0x925, 0x0, 0x0);
        gbc.writeMem(0xd475, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8b33, gbc.sp());
        EXPECT(0xd477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd475));
        EXPECT(0x4, gbc.readMem(0xd476));
        // CB 04 0344
        gbc.setState(0xc721, 0xab2e, 0xf860, 0xfa, 0x10b, 0x85ac, 0x1, 0x0);
        gbc.writeMem(0xc721, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xab2e, gbc.sp());
        EXPECT(0xc723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc721));
        EXPECT(0x4, gbc.readMem(0xc722));
        // CB 04 0345
        gbc.setState(0x17d6, 0x48e7, 0x4860, 0x6672, 0x9c6d, 0x629c, 0x0, 0x1);
        gbc.writeMem(0x17d6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x48e7, gbc.sp());
        EXPECT(0x17d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0346
        gbc.setState(0xdd55, 0xef02, 0x4950, 0xe6f1, 0x366a, 0xabb4, 0x1, 0x1);
        gbc.writeMem(0xdd55, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xef02, gbc.sp());
        EXPECT(0xdd57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd55));
        EXPECT(0x4, gbc.readMem(0xdd56));
        // CB 04 0347
        gbc.setState(0x9d79, 0x19e5, 0xc00, 0x3b0c, 0xac9f, 0x5380, 0x0, 0x0);
        gbc.writeMem(0x9d79, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x19e5, gbc.sp());
        EXPECT(0x9d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d79));
        EXPECT(0x4, gbc.readMem(0x9d7a));
        // CB 04 0348
        gbc.setState(0xcfc2, 0x7d8b, 0x7cb0, 0xbd7f, 0xd20a, 0xc4d1, 0x1, 0x0);
        gbc.writeMem(0xcfc2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7d8b, gbc.sp());
        EXPECT(0xcfc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc2));
        EXPECT(0x4, gbc.readMem(0xcfc3));
        // CB 04 0349
        gbc.setState(0x297, 0x2100, 0x8b00, 0x2fd7, 0x8d5e, 0xdead, 0x1, 0x1);
        gbc.writeMem(0x297, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2100, gbc.sp());
        EXPECT(0x299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 034A
        gbc.setState(0x6482, 0x8e5f, 0xde70, 0x7caa, 0xd1cb, 0x248b, 0x0, 0x1);
        gbc.writeMem(0x6482, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8e5f, gbc.sp());
        EXPECT(0x6484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 034B
        gbc.setState(0xe664, 0xe868, 0x8890, 0x92a4, 0x6079, 0x4cb9, 0x1, 0x0);
        gbc.writeMem(0xe664, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe868, gbc.sp());
        EXPECT(0xe666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe664));
        EXPECT(0x4, gbc.readMem(0xe665));
        // CB 04 034C
        gbc.setState(0x2730, 0x4ebd, 0xf2e0, 0xb9c0, 0xf2f6, 0x30b1, 0x1, 0x0);
        gbc.writeMem(0x2730, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4ebd, gbc.sp());
        EXPECT(0x2732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 034D
        gbc.setState(0x435e, 0x4d65, 0x7940, 0x790b, 0x8d77, 0xa551, 0x0, 0x0);
        gbc.writeMem(0x435e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4d65, gbc.sp());
        EXPECT(0x4360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 034E
        gbc.setState(0x3f2c, 0x9bd0, 0x6350, 0x9569, 0x63a2, 0x9af5, 0x0, 0x0);
        gbc.writeMem(0x3f2c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9bd0, gbc.sp());
        EXPECT(0x3f2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 034F
        gbc.setState(0x5d67, 0x2d92, 0x7450, 0xde04, 0xb9a7, 0xe10c, 0x1, 0x1);
        gbc.writeMem(0x5d67, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2d92, gbc.sp());
        EXPECT(0x5d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0350
        gbc.setState(0xc53b, 0x2a05, 0x18c0, 0xba56, 0xfb91, 0x706c, 0x0, 0x1);
        gbc.writeMem(0xc53b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2a05, gbc.sp());
        EXPECT(0xc53d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc53b));
        EXPECT(0x4, gbc.readMem(0xc53c));
        // CB 04 0351
        gbc.setState(0xed21, 0x8598, 0xc0f0, 0xfd34, 0x8082, 0xdc92, 0x1, 0x1);
        gbc.writeMem(0xed21, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8598, gbc.sp());
        EXPECT(0xed23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed21));
        EXPECT(0x4, gbc.readMem(0xed22));
        // CB 04 0352
        gbc.setState(0x754e, 0xc3dc, 0x5790, 0xa5f2, 0x979f, 0xbd64, 0x0, 0x1);
        gbc.writeMem(0x754e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc3dc, gbc.sp());
        EXPECT(0x7550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0353
        gbc.setState(0x41be, 0xc686, 0x2670, 0xfe80, 0xf660, 0xe3c5, 0x0, 0x1);
        gbc.writeMem(0x41be, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc686, gbc.sp());
        EXPECT(0x41c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0354
        gbc.setState(0xad5b, 0xaf1a, 0x2ff0, 0xbdc7, 0xd48f, 0x6ab4, 0x0, 0x0);
        gbc.writeMem(0xad5b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xaf1a, gbc.sp());
        EXPECT(0xad5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad5b));
        EXPECT(0x4, gbc.readMem(0xad5c));
        // CB 04 0355
        gbc.setState(0xb593, 0x1681, 0xeb70, 0x7279, 0xf432, 0xfbd, 0x0, 0x1);
        gbc.writeMem(0xb593, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1681, gbc.sp());
        EXPECT(0xb595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb593));
        EXPECT(0x4, gbc.readMem(0xb594));
        // CB 04 0356
        gbc.setState(0xcfb9, 0x73ea, 0xc340, 0xca53, 0xf2f7, 0xc561, 0x0, 0x0);
        gbc.writeMem(0xcfb9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x73ea, gbc.sp());
        EXPECT(0xcfbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb9));
        EXPECT(0x4, gbc.readMem(0xcfba));
        // CB 04 0357
        gbc.setState(0xa6fb, 0xa5f7, 0x5c50, 0x2dd4, 0x1cf2, 0x7a62, 0x0, 0x1);
        gbc.writeMem(0xa6fb, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa5f7, gbc.sp());
        EXPECT(0xa6fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fb));
        EXPECT(0x4, gbc.readMem(0xa6fc));
        // CB 04 0358
        gbc.setState(0x5af7, 0x3f27, 0x9220, 0x1d3d, 0x3435, 0x301c, 0x0, 0x1);
        gbc.writeMem(0x5af7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3f27, gbc.sp());
        EXPECT(0x5af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0359
        gbc.setState(0x9ee5, 0xc531, 0x6bd0, 0xb68a, 0x9bf, 0x1491, 0x0, 0x1);
        gbc.writeMem(0x9ee5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc531, gbc.sp());
        EXPECT(0x9ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee5));
        EXPECT(0x4, gbc.readMem(0x9ee6));
        // CB 04 035A
        gbc.setState(0x5047, 0xa602, 0x9430, 0x87e3, 0x724e, 0xb18d, 0x0, 0x1);
        gbc.writeMem(0x5047, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa602, gbc.sp());
        EXPECT(0x5049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 035B
        gbc.setState(0xeabb, 0xa99a, 0x4650, 0xfc9c, 0xa58, 0xbf2a, 0x1, 0x0);
        gbc.writeMem(0xeabb, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa99a, gbc.sp());
        EXPECT(0xeabd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeabb));
        EXPECT(0x4, gbc.readMem(0xeabc));
        // CB 04 035C
        gbc.setState(0x4a5c, 0x4f31, 0x3150, 0x520f, 0xa8ef, 0xbd24, 0x0, 0x1);
        gbc.writeMem(0x4a5c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4f31, gbc.sp());
        EXPECT(0x4a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 035D
        gbc.setState(0x45fe, 0x9f0a, 0xa350, 0x81dc, 0x6dc6, 0x5727, 0x1, 0x0);
        gbc.writeMem(0x45fe, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9f0a, gbc.sp());
        EXPECT(0x4600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 035E
        gbc.setState(0x8a1b, 0xea69, 0x7d0, 0xcdc6, 0x2022, 0x1487, 0x1, 0x1);
        gbc.writeMem(0x8a1b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xea69, gbc.sp());
        EXPECT(0x8a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1b));
        EXPECT(0x4, gbc.readMem(0x8a1c));
        // CB 04 035F
        gbc.setState(0xa3e, 0x5013, 0x6de0, 0x6e00, 0xeddb, 0x3dcb, 0x0, 0x1);
        gbc.writeMem(0xa3e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5013, gbc.sp());
        EXPECT(0xa40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0360
        gbc.setState(0x7bcc, 0x1415, 0xf420, 0xd2c2, 0xafd9, 0xef63, 0x0, 0x0);
        gbc.writeMem(0x7bcc, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1415, gbc.sp());
        EXPECT(0x7bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0361
        gbc.setState(0x116b, 0x127, 0x7e00, 0x62ff, 0x7d93, 0x1070, 0x0, 0x1);
        gbc.writeMem(0x116b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x127, gbc.sp());
        EXPECT(0x116d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0362
        gbc.setState(0x9e64, 0x7821, 0x7890, 0x148, 0x6f9c, 0x48a3, 0x1, 0x0);
        gbc.writeMem(0x9e64, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7821, gbc.sp());
        EXPECT(0x9e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e64));
        EXPECT(0x4, gbc.readMem(0x9e65));
        // CB 04 0363
        gbc.setState(0x7d24, 0xb633, 0xf380, 0x23ad, 0x317e, 0xfa4f, 0x1, 0x1);
        gbc.writeMem(0x7d24, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb633, gbc.sp());
        EXPECT(0x7d26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0364
        gbc.setState(0x34ac, 0x5af7, 0x2320, 0x7a66, 0x9d27, 0xb7e8, 0x1, 0x1);
        gbc.writeMem(0x34ac, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5af7, gbc.sp());
        EXPECT(0x34ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0365
        gbc.setState(0x3988, 0x8365, 0x45b0, 0xd3e1, 0xd2ed, 0x4a09, 0x0, 0x0);
        gbc.writeMem(0x3988, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8365, gbc.sp());
        EXPECT(0x398a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0366
        gbc.setState(0x30b3, 0xaf81, 0x36b0, 0xd2a6, 0x3e2f, 0x2f03, 0x0, 0x1);
        gbc.writeMem(0x30b3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xaf81, gbc.sp());
        EXPECT(0x30b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0367
        gbc.setState(0xdb78, 0xce81, 0x5ec0, 0x2d97, 0xebd1, 0xd4a1, 0x1, 0x1);
        gbc.writeMem(0xdb78, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xce81, gbc.sp());
        EXPECT(0xdb7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb78));
        EXPECT(0x4, gbc.readMem(0xdb79));
        // CB 04 0368
        gbc.setState(0x4989, 0x12d2, 0x6ec0, 0xc483, 0x72a, 0xf952, 0x0, 0x1);
        gbc.writeMem(0x4989, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x12d2, gbc.sp());
        EXPECT(0x498b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0369
        gbc.setState(0x15, 0x93e8, 0xbb80, 0xd84a, 0x3ed, 0x6450, 0x0, 0x1);
        gbc.writeMem(0x15, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x93e8, gbc.sp());
        EXPECT(0x17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 036B
        gbc.setState(0xd39d, 0x5060, 0xa990, 0xcd5e, 0x68c0, 0xad5d, 0x0, 0x1);
        gbc.writeMem(0xd39d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5060, gbc.sp());
        EXPECT(0xd39f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd39d));
        EXPECT(0x4, gbc.readMem(0xd39e));
        // CB 04 036C
        gbc.setState(0x84b8, 0x418d, 0x4510, 0x3304, 0x9880, 0x746e, 0x0, 0x0);
        gbc.writeMem(0x84b8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x418d, gbc.sp());
        EXPECT(0x84ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b8));
        EXPECT(0x4, gbc.readMem(0x84b9));
        // CB 04 036D
        gbc.setState(0xd12b, 0x4a63, 0xf0f0, 0xfddd, 0x61cc, 0xd881, 0x1, 0x1);
        gbc.writeMem(0xd12b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4a63, gbc.sp());
        EXPECT(0xd12d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd12b));
        EXPECT(0x4, gbc.readMem(0xd12c));
        // CB 04 036E
        gbc.setState(0xcc2, 0xd7a7, 0x920, 0xf77b, 0xb774, 0x5063, 0x0, 0x1);
        gbc.writeMem(0xcc2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd7a7, gbc.sp());
        EXPECT(0xcc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0370
        gbc.setState(0x5ede, 0x97c9, 0x8d70, 0x324b, 0x9f85, 0x38b6, 0x0, 0x0);
        gbc.writeMem(0x5ede, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x97c9, gbc.sp());
        EXPECT(0x5ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0371
        gbc.setState(0x126c, 0xc9f7, 0x2a60, 0x7302, 0x432f, 0x9a62, 0x1, 0x0);
        gbc.writeMem(0x126c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc9f7, gbc.sp());
        EXPECT(0x126e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0372
        gbc.setState(0x13ab, 0xf2f2, 0x290, 0xe4c1, 0x4372, 0x2dbe, 0x1, 0x1);
        gbc.writeMem(0x13ab, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf2f2, gbc.sp());
        EXPECT(0x13ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0373
        gbc.setState(0x992b, 0x3372, 0xeb30, 0x3395, 0xb881, 0x6b5a, 0x1, 0x0);
        gbc.writeMem(0x992b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3372, gbc.sp());
        EXPECT(0x992d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x992b));
        EXPECT(0x4, gbc.readMem(0x992c));
        // CB 04 0374
        gbc.setState(0xe186, 0x88cf, 0x6a80, 0x73fc, 0xb27b, 0x7372, 0x1, 0x1);
        gbc.writeMem(0xe186, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x88cf, gbc.sp());
        EXPECT(0xe188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe186));
        EXPECT(0x4, gbc.readMem(0xe187));
        // CB 04 0375
        gbc.setState(0x3aea, 0xbf08, 0x26d0, 0xc347, 0x36ad, 0x229, 0x1, 0x1);
        gbc.writeMem(0x3aea, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbf08, gbc.sp());
        EXPECT(0x3aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0376
        gbc.setState(0x3a2b, 0x1bb2, 0x4d00, 0xab5f, 0x84bf, 0xd5e9, 0x1, 0x0);
        gbc.writeMem(0x3a2b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1bb2, gbc.sp());
        EXPECT(0x3a2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0377
        gbc.setState(0x62fd, 0x9016, 0x4fb0, 0x8af2, 0x4868, 0x2019, 0x1, 0x0);
        gbc.writeMem(0x62fd, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9016, gbc.sp());
        EXPECT(0x62ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0378
        gbc.setState(0x3c6d, 0x7cd, 0x62d0, 0x20fb, 0x7e43, 0x9181, 0x1, 0x1);
        gbc.writeMem(0x3c6d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7cd, gbc.sp());
        EXPECT(0x3c6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0379
        gbc.setState(0x92ac, 0x9acb, 0x3fe0, 0x6ba6, 0x1528, 0xc3b0, 0x0, 0x0);
        gbc.writeMem(0x92ac, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9acb, gbc.sp());
        EXPECT(0x92ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ac));
        EXPECT(0x4, gbc.readMem(0x92ad));
        // CB 04 037A
        gbc.setState(0xe801, 0x826f, 0x2f80, 0x8d2d, 0x64b0, 0x1a1f, 0x1, 0x1);
        gbc.writeMem(0xe801, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x826f, gbc.sp());
        EXPECT(0xe803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe801));
        EXPECT(0x4, gbc.readMem(0xe802));
        // CB 04 037B
        gbc.setState(0x2ff9, 0x6c57, 0x1e60, 0xd722, 0x3700, 0x22de, 0x0, 0x0);
        gbc.writeMem(0x2ff9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6c57, gbc.sp());
        EXPECT(0x2ffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 037C
        gbc.setState(0x4632, 0xf942, 0xe3f0, 0xfdca, 0x2805, 0xa798, 0x1, 0x1);
        gbc.writeMem(0x4632, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf942, gbc.sp());
        EXPECT(0x4634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 037D
        gbc.setState(0xd341, 0x3172, 0xcc30, 0x9136, 0xef07, 0xa80f, 0x0, 0x0);
        gbc.writeMem(0xd341, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3172, gbc.sp());
        EXPECT(0xd343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd341));
        EXPECT(0x4, gbc.readMem(0xd342));
        // CB 04 037E
        gbc.setState(0xb9f0, 0xf97, 0x200, 0xed2c, 0x39f2, 0xacaa, 0x1, 0x1);
        gbc.writeMem(0xb9f0, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf97, gbc.sp());
        EXPECT(0xb9f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f0));
        EXPECT(0x4, gbc.readMem(0xb9f1));
        // CB 04 037F
        gbc.setState(0x30b, 0xc581, 0x3060, 0x2afe, 0x97, 0x526f, 0x0, 0x0);
        gbc.writeMem(0x30b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc581, gbc.sp());
        EXPECT(0x30d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0380
        gbc.setState(0x45ae, 0xd11c, 0xcf30, 0x57ba, 0xf546, 0xb425, 0x1, 0x0);
        gbc.writeMem(0x45ae, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd11c, gbc.sp());
        EXPECT(0x45b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0381
        gbc.setState(0x7ae2, 0x9537, 0x7b60, 0xfa03, 0x95d2, 0xb2af, 0x0, 0x1);
        gbc.writeMem(0x7ae2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9537, gbc.sp());
        EXPECT(0x7ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0382
        gbc.setState(0x7844, 0xa7f9, 0xf9c0, 0x3d2d, 0x8e58, 0x21b2, 0x0, 0x1);
        gbc.writeMem(0x7844, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa7f9, gbc.sp());
        EXPECT(0x7846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0383
        gbc.setState(0x4af8, 0xccff, 0xa4e0, 0xdc9, 0x63fe, 0xb52b, 0x0, 0x1);
        gbc.writeMem(0x4af8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xccff, gbc.sp());
        EXPECT(0x4afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0384
        gbc.setState(0x3d4f, 0x35b, 0xdea0, 0x1e1a, 0xe92a, 0xa19f, 0x1, 0x1);
        gbc.writeMem(0x3d4f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x35b, gbc.sp());
        EXPECT(0x3d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0385
        gbc.setState(0x97cb, 0x6fb9, 0x5720, 0x7657, 0xff32, 0xc24, 0x1, 0x0);
        gbc.writeMem(0x97cb, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6fb9, gbc.sp());
        EXPECT(0x97cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97cb));
        EXPECT(0x4, gbc.readMem(0x97cc));
        // CB 04 0386
        gbc.setState(0xdf29, 0x93bc, 0xaf70, 0xc7e5, 0x4d9c, 0x32ce, 0x1, 0x0);
        gbc.writeMem(0xdf29, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x93bc, gbc.sp());
        EXPECT(0xdf2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf29));
        EXPECT(0x4, gbc.readMem(0xdf2a));
        // CB 04 0388
        gbc.setState(0x2757, 0x3564, 0xd2f0, 0x73ab, 0x8859, 0x79d1, 0x0, 0x0);
        gbc.writeMem(0x2757, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3564, gbc.sp());
        EXPECT(0x2759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0389
        gbc.setState(0x97bf, 0x1ccb, 0xcc20, 0x9f8a, 0xaa6, 0x4337, 0x0, 0x0);
        gbc.writeMem(0x97bf, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1ccb, gbc.sp());
        EXPECT(0x97c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97bf));
        EXPECT(0x4, gbc.readMem(0x97c0));
        // CB 04 038A
        gbc.setState(0x618a, 0x209b, 0x6120, 0xc3ff, 0x74e1, 0xc0a8, 0x1, 0x1);
        gbc.writeMem(0x618a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x209b, gbc.sp());
        EXPECT(0x618c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 038B
        gbc.setState(0x8aec, 0x42de, 0x7090, 0x5210, 0xbbe8, 0xae61, 0x1, 0x0);
        gbc.writeMem(0x8aec, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x42de, gbc.sp());
        EXPECT(0x8aee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aec));
        EXPECT(0x4, gbc.readMem(0x8aed));
        // CB 04 038D
        gbc.setState(0x74d5, 0x7a36, 0x9e90, 0x114d, 0xd4ab, 0xed11, 0x0, 0x0);
        gbc.writeMem(0x74d5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7a36, gbc.sp());
        EXPECT(0x74d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 038E
        gbc.setState(0xd04, 0xae2b, 0xc940, 0x616, 0x59da, 0x4597, 0x0, 0x1);
        gbc.writeMem(0xd04, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xae2b, gbc.sp());
        EXPECT(0xd06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 038F
        gbc.setState(0xf93, 0x53b1, 0xb980, 0x2da1, 0xa121, 0xc545, 0x0, 0x0);
        gbc.writeMem(0xf93, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x53b1, gbc.sp());
        EXPECT(0xf95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0390
        gbc.setState(0x9ed1, 0x568f, 0xd20, 0x2162, 0x3701, 0x241e, 0x1, 0x1);
        gbc.writeMem(0x9ed1, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x568f, gbc.sp());
        EXPECT(0x9ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed1));
        EXPECT(0x4, gbc.readMem(0x9ed2));
        // CB 04 0392
        gbc.setState(0x9aa, 0x1b90, 0xf210, 0x86eb, 0x14d0, 0xafe9, 0x0, 0x0);
        gbc.writeMem(0x9aa, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1b90, gbc.sp());
        EXPECT(0x9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 0393
        gbc.setState(0xcb23, 0x16a1, 0xab30, 0xc22d, 0xb882, 0x9bfe, 0x0, 0x0);
        gbc.writeMem(0xcb23, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x16a1, gbc.sp());
        EXPECT(0xcb25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb23));
        EXPECT(0x4, gbc.readMem(0xcb24));
        // CB 04 0394
        gbc.setState(0x8bab, 0x3e00, 0x4f40, 0xabe2, 0x339f, 0x2e8f, 0x0, 0x0);
        gbc.writeMem(0x8bab, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3e00, gbc.sp());
        EXPECT(0x8bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bab));
        EXPECT(0x4, gbc.readMem(0x8bac));
        // CB 04 0395
        gbc.setState(0x2807, 0x92ad, 0x1c10, 0xa835, 0xa962, 0x20a2, 0x1, 0x1);
        gbc.writeMem(0x2807, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x92ad, gbc.sp());
        EXPECT(0x2809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0396
        gbc.setState(0xcc33, 0xfa9c, 0x7900, 0x1f84, 0xef1, 0xbe2a, 0x0, 0x0);
        gbc.writeMem(0xcc33, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfa9c, gbc.sp());
        EXPECT(0xcc35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc33));
        EXPECT(0x4, gbc.readMem(0xcc34));
        // CB 04 0397
        gbc.setState(0x7d36, 0x685a, 0x96e0, 0x67ba, 0xd30b, 0x3b9d, 0x1, 0x0);
        gbc.writeMem(0x7d36, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x685a, gbc.sp());
        EXPECT(0x7d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0398
        gbc.setState(0x2edb, 0xf617, 0x7fe0, 0x940d, 0xdd24, 0x2a6f, 0x0, 0x0);
        gbc.writeMem(0x2edb, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf617, gbc.sp());
        EXPECT(0x2edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 0399
        gbc.setState(0xde6b, 0xc405, 0xd4f0, 0x3ecd, 0x3676, 0xf3b1, 0x1, 0x0);
        gbc.writeMem(0xde6b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc405, gbc.sp());
        EXPECT(0xde6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6b));
        EXPECT(0x4, gbc.readMem(0xde6c));
        // CB 04 039A
        gbc.setState(0x3553, 0x4c4, 0xce60, 0x3693, 0x5461, 0x57e1, 0x1, 0x1);
        gbc.writeMem(0x3553, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4c4, gbc.sp());
        EXPECT(0x3555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 039B
        gbc.setState(0xe8f8, 0xdf43, 0xf7d0, 0xc91c, 0xc0a, 0x4caa, 0x0, 0x1);
        gbc.writeMem(0xe8f8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdf43, gbc.sp());
        EXPECT(0xe8fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f8));
        EXPECT(0x4, gbc.readMem(0xe8f9));
        // CB 04 039C
        gbc.setState(0x60d3, 0x2ef1, 0xeae0, 0xbe68, 0x7a4, 0x3786, 0x0, 0x0);
        gbc.writeMem(0x60d3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2ef1, gbc.sp());
        EXPECT(0x60d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 039D
        gbc.setState(0x8a78, 0x3d37, 0x3390, 0x2aa9, 0x22f1, 0xcc47, 0x0, 0x0);
        gbc.writeMem(0x8a78, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3d37, gbc.sp());
        EXPECT(0x8a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a78));
        EXPECT(0x4, gbc.readMem(0x8a79));
        // CB 04 039E
        gbc.setState(0x5d78, 0xe393, 0x7c90, 0xe799, 0x3e12, 0x5662, 0x1, 0x0);
        gbc.writeMem(0x5d78, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe393, gbc.sp());
        EXPECT(0x5d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 039F
        gbc.setState(0x85cf, 0x89c3, 0x31e0, 0xdd68, 0x42a0, 0xbe15, 0x0, 0x1);
        gbc.writeMem(0x85cf, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x89c3, gbc.sp());
        EXPECT(0x85d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85cf));
        EXPECT(0x4, gbc.readMem(0x85d0));
        // CB 04 03A0
        gbc.setState(0x7686, 0x1917, 0x9970, 0x240e, 0xc606, 0xd4e9, 0x1, 0x1);
        gbc.writeMem(0x7686, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1917, gbc.sp());
        EXPECT(0x7688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 03A1
        gbc.setState(0xa2fa, 0xa72, 0x4ae0, 0x2753, 0xc5a5, 0xef05, 0x0, 0x1);
        gbc.writeMem(0xa2fa, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa72, gbc.sp());
        EXPECT(0xa2fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2fa));
        EXPECT(0x4, gbc.readMem(0xa2fb));
        // CB 04 03A2
        gbc.setState(0x390d, 0xaa47, 0x6a0, 0xa0bb, 0xad89, 0x3be7, 0x1, 0x1);
        gbc.writeMem(0x390d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xaa47, gbc.sp());
        EXPECT(0x390f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03A3
        gbc.setState(0x3703, 0x4988, 0x28d0, 0x1bd1, 0xa5a8, 0x533b, 0x0, 0x0);
        gbc.writeMem(0x3703, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4988, gbc.sp());
        EXPECT(0x3705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03A4
        gbc.setState(0x61b9, 0xc3de, 0x1810, 0x1aec, 0xecf9, 0xcae7, 0x1, 0x1);
        gbc.writeMem(0x61b9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc3de, gbc.sp());
        EXPECT(0x61bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 03A5
        gbc.setState(0x803, 0xf7dd, 0x9440, 0x5120, 0xef40, 0xc07d, 0x1, 0x0);
        gbc.writeMem(0x803, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf7dd, gbc.sp());
        EXPECT(0x805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 03A6
        gbc.setState(0x3c84, 0x83d4, 0xca10, 0x8d26, 0xd075, 0xbb61, 0x1, 0x1);
        gbc.writeMem(0x3c84, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x83d4, gbc.sp());
        EXPECT(0x3c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 03A7
        gbc.setState(0x2b46, 0xaca1, 0x4110, 0x39c6, 0xd845, 0x55c3, 0x0, 0x1);
        gbc.writeMem(0x2b46, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xaca1, gbc.sp());
        EXPECT(0x2b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03A8
        gbc.setState(0x1eb2, 0x6a72, 0x940, 0x1011, 0xf026, 0x2dc0, 0x0, 0x1);
        gbc.writeMem(0x1eb2, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6a72, gbc.sp());
        EXPECT(0x1eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03A9
        gbc.setState(0xc78b, 0xe819, 0xe390, 0x6223, 0x7c60, 0xfb28, 0x1, 0x1);
        gbc.writeMem(0xc78b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe819, gbc.sp());
        EXPECT(0xc78d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc78b));
        EXPECT(0x4, gbc.readMem(0xc78c));
        // CB 04 03AA
        gbc.setState(0x3ae3, 0xb2ed, 0xebd0, 0xfeac, 0xb58f, 0x4ed9, 0x0, 0x0);
        gbc.writeMem(0x3ae3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb2ed, gbc.sp());
        EXPECT(0x3ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03AB
        gbc.setState(0xd9f8, 0xc2a7, 0xe0f0, 0x59fe, 0xb0ff, 0x16bd, 0x0, 0x0);
        gbc.writeMem(0xd9f8, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc2a7, gbc.sp());
        EXPECT(0xd9fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f8));
        EXPECT(0x4, gbc.readMem(0xd9f9));
        // CB 04 03AC
        gbc.setState(0xb0a7, 0x5525, 0x8fd0, 0xb217, 0xc85a, 0x20c, 0x0, 0x0);
        gbc.writeMem(0xb0a7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5525, gbc.sp());
        EXPECT(0xb0a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a7));
        EXPECT(0x4, gbc.readMem(0xb0a8));
        // CB 04 03AD
        gbc.setState(0x9405, 0x2b3d, 0xd1b0, 0xb016, 0x97d1, 0xce88, 0x0, 0x0);
        gbc.writeMem(0x9405, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2b3d, gbc.sp());
        EXPECT(0x9407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9405));
        EXPECT(0x4, gbc.readMem(0x9406));
        // CB 04 03AE
        gbc.setState(0x4eff, 0x8d89, 0xc230, 0xcca9, 0x2b67, 0x55ad, 0x1, 0x0);
        gbc.writeMem(0x4eff, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8d89, gbc.sp());
        EXPECT(0x4f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03AF
        gbc.setState(0x9051, 0x530e, 0x4190, 0xe605, 0x7f1c, 0xf35e, 0x0, 0x0);
        gbc.writeMem(0x9051, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x530e, gbc.sp());
        EXPECT(0x9053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9051));
        EXPECT(0x4, gbc.readMem(0x9052));
        // CB 04 03B0
        gbc.setState(0x88e3, 0xf65b, 0x5820, 0x7a9c, 0x3185, 0x17ac, 0x1, 0x1);
        gbc.writeMem(0x88e3, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf65b, gbc.sp());
        EXPECT(0x88e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e3));
        EXPECT(0x4, gbc.readMem(0x88e4));
        // CB 04 03B1
        gbc.setState(0x114, 0x4226, 0x4400, 0x8051, 0xd4da, 0xe871, 0x1, 0x1);
        gbc.writeMem(0x114, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4226, gbc.sp());
        EXPECT(0x116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 03B3
        gbc.setState(0x4963, 0x7d50, 0xd5c0, 0xdeee, 0x6847, 0x349d, 0x0, 0x1);
        gbc.writeMem(0x4963, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7d50, gbc.sp());
        EXPECT(0x4965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03B4
        gbc.setState(0x87a9, 0xd6b4, 0xc9c0, 0x429c, 0xb4bb, 0x2a6d, 0x1, 0x0);
        gbc.writeMem(0x87a9, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd6b4, gbc.sp());
        EXPECT(0x87ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a9));
        EXPECT(0x4, gbc.readMem(0x87aa));
        // CB 04 03B5
        gbc.setState(0x46a6, 0x1ad7, 0x6390, 0xa256, 0x2e6f, 0xbfae, 0x0, 0x1);
        gbc.writeMem(0x46a6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1ad7, gbc.sp());
        EXPECT(0x46a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 03B6
        gbc.setState(0x2a7a, 0xbe1, 0x3bc0, 0xa2c5, 0x73e8, 0xcf1, 0x1, 0x1);
        gbc.writeMem(0x2a7a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbe1, gbc.sp());
        EXPECT(0x2a7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03B7
        gbc.setState(0x25ea, 0xe8bf, 0xb670, 0xadf9, 0xf432, 0xfdd9, 0x0, 0x1);
        gbc.writeMem(0x25ea, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe8bf, gbc.sp());
        EXPECT(0x25ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 03B8
        gbc.setState(0x3979, 0xbbcf, 0x6ca0, 0x42d, 0xf1d8, 0xa07d, 0x1, 0x1);
        gbc.writeMem(0x3979, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbbcf, gbc.sp());
        EXPECT(0x397b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 03B9
        gbc.setState(0xed6, 0xa560, 0xe2e0, 0xdef9, 0xb0e9, 0x2d3e, 0x0, 0x1);
        gbc.writeMem(0xed6, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa560, gbc.sp());
        EXPECT(0xed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03BA
        gbc.setState(0xcfa5, 0xbba4, 0xea80, 0x98f8, 0xdda4, 0x1a73, 0x1, 0x1);
        gbc.writeMem(0xcfa5, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbba4, gbc.sp());
        EXPECT(0xcfa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa5));
        EXPECT(0x4, gbc.readMem(0xcfa6));
        // CB 04 03BB
        gbc.setState(0x6c49, 0xd955, 0x3260, 0xbd28, 0xf64d, 0x2ced, 0x0, 0x1);
        gbc.writeMem(0x6c49, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd955, gbc.sp());
        EXPECT(0x6c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03BC
        gbc.setState(0x348f, 0xd060, 0x1800, 0xed95, 0xb090, 0xde64, 0x0, 0x0);
        gbc.writeMem(0x348f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd060, gbc.sp());
        EXPECT(0x3491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 03BD
        gbc.setState(0x820, 0x1fd6, 0xe000, 0xeabe, 0xce1, 0xf34, 0x0, 0x1);
        gbc.writeMem(0x820, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1fd6, gbc.sp());
        EXPECT(0x822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03BE
        gbc.setState(0x8cc7, 0x1092, 0xdf80, 0x4873, 0x45ac, 0x2316, 0x0, 0x1);
        gbc.writeMem(0x8cc7, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1092, gbc.sp());
        EXPECT(0x8cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc7));
        EXPECT(0x4, gbc.readMem(0x8cc8));
        // CB 04 03BF
        gbc.setState(0x21cc, 0xf328, 0xb0d0, 0xb7bf, 0xc08, 0xe717, 0x0, 0x0);
        gbc.writeMem(0x21cc, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf328, gbc.sp());
        EXPECT(0x21ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 03C0
        gbc.setState(0xd68c, 0xa641, 0x3430, 0x5f61, 0xd4d5, 0xc240, 0x0, 0x1);
        gbc.writeMem(0xd68c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa641, gbc.sp());
        EXPECT(0xd68e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd68c));
        EXPECT(0x4, gbc.readMem(0xd68d));
        // CB 04 03C1
        gbc.setState(0x76cb, 0x63e0, 0x2800, 0xc9cc, 0xe16, 0x328, 0x1, 0x1);
        gbc.writeMem(0x76cb, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x63e0, gbc.sp());
        EXPECT(0x76cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03C2
        gbc.setState(0xe450, 0x5cae, 0xfbe0, 0x7b26, 0x24df, 0x5dec, 0x1, 0x0);
        gbc.writeMem(0xe450, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5cae, gbc.sp());
        EXPECT(0xe452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe450));
        EXPECT(0x4, gbc.readMem(0xe451));
        // CB 04 03C3
        gbc.setState(0xaa8b, 0xe450, 0xb2a0, 0x190f, 0x6494, 0xb78f, 0x0, 0x1);
        gbc.writeMem(0xaa8b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe450, gbc.sp());
        EXPECT(0xaa8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa8b));
        EXPECT(0x4, gbc.readMem(0xaa8c));
        // CB 04 03C4
        gbc.setState(0x1e4d, 0x494f, 0x1c50, 0x3ffc, 0x468, 0xd592, 0x1, 0x1);
        gbc.writeMem(0x1e4d, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x494f, gbc.sp());
        EXPECT(0x1e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 03C5
        gbc.setState(0x8389, 0x6e4e, 0x9d20, 0x5944, 0xe985, 0x8ba0, 0x1, 0x0);
        gbc.writeMem(0x8389, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6e4e, gbc.sp());
        EXPECT(0x838b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8389));
        EXPECT(0x4, gbc.readMem(0x838a));
        // CB 04 03C6
        gbc.setState(0x90bc, 0xe809, 0x3490, 0x2a55, 0x104d, 0x2b23, 0x1, 0x0);
        gbc.writeMem(0x90bc, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe809, gbc.sp());
        EXPECT(0x90be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90bc));
        EXPECT(0x4, gbc.readMem(0x90bd));
        // CB 04 03C7
        gbc.setState(0x468b, 0x5797, 0xaee0, 0xb4d4, 0x7cdc, 0xa6ae, 0x0, 0x0);
        gbc.writeMem(0x468b, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5797, gbc.sp());
        EXPECT(0x468d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 03C8
        gbc.setState(0xec3c, 0xb4dd, 0xefd0, 0x2fee, 0x68e9, 0x2ef9, 0x1, 0x0);
        gbc.writeMem(0xec3c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb4dd, gbc.sp());
        EXPECT(0xec3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec3c));
        EXPECT(0x4, gbc.readMem(0xec3d));
        // CB 04 03CA
        gbc.setState(0x42f4, 0xd2c7, 0x4060, 0xe3fc, 0x1ec3, 0x1140, 0x0, 0x1);
        gbc.writeMem(0x42f4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd2c7, gbc.sp());
        EXPECT(0x42f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03CB
        gbc.setState(0x8729, 0x8d0a, 0xcc40, 0x2454, 0xf50b, 0x40dc, 0x1, 0x1);
        gbc.writeMem(0x8729, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8d0a, gbc.sp());
        EXPECT(0x872b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8729));
        EXPECT(0x4, gbc.readMem(0x872a));
        // CB 04 03CC
        gbc.setState(0x6941, 0x4cfe, 0x9b30, 0x1d57, 0xb314, 0x4cc1, 0x1, 0x0);
        gbc.writeMem(0x6941, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4cfe, gbc.sp());
        EXPECT(0x6943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03CE
        gbc.setState(0xd853, 0x1514, 0xe540, 0x9e80, 0x1fee, 0x2f68, 0x1, 0x1);
        gbc.writeMem(0xd853, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1514, gbc.sp());
        EXPECT(0xd855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd853));
        EXPECT(0x4, gbc.readMem(0xd854));
        // CB 04 03CF
        gbc.setState(0x70a, 0xb6e9, 0x2760, 0xc210, 0x1f33, 0x3a95, 0x1, 0x1);
        gbc.writeMem(0x70a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb6e9, gbc.sp());
        EXPECT(0x70c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03D0
        gbc.setState(0x40a4, 0xcaee, 0x8e00, 0xc583, 0x3151, 0x8abb, 0x0, 0x0);
        gbc.writeMem(0x40a4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcaee, gbc.sp());
        EXPECT(0x40a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 03D1
        gbc.setState(0xdc70, 0xb511, 0x45c0, 0x367e, 0x65bc, 0x67c8, 0x0, 0x1);
        gbc.writeMem(0xdc70, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb511, gbc.sp());
        EXPECT(0xdc72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc70));
        EXPECT(0x4, gbc.readMem(0xdc71));
        // CB 04 03D2
        gbc.setState(0x394, 0x3e, 0xdd20, 0xf15b, 0xabb3, 0xbd46, 0x0, 0x0);
        gbc.writeMem(0x394, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3e, gbc.sp());
        EXPECT(0x396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 03D3
        gbc.setState(0xb33f, 0x67ac, 0xcc70, 0xdd09, 0x2919, 0x1b9a, 0x1, 0x0);
        gbc.writeMem(0xb33f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x67ac, gbc.sp());
        EXPECT(0xb341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb33f));
        EXPECT(0x4, gbc.readMem(0xb340));
        // CB 04 03D4
        gbc.setState(0xb51f, 0xb688, 0x41c0, 0xa99a, 0x51c2, 0x1a56, 0x1, 0x1);
        gbc.writeMem(0xb51f, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb688, gbc.sp());
        EXPECT(0xb521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb51f));
        EXPECT(0x4, gbc.readMem(0xb520));
        // CB 04 03D5
        gbc.setState(0x90a4, 0x2da, 0x2990, 0x9f74, 0xf8b9, 0x2182, 0x1, 0x1);
        gbc.writeMem(0x90a4, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2da, gbc.sp());
        EXPECT(0x90a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a4));
        EXPECT(0x4, gbc.readMem(0x90a5));
        // CB 04 03D7
        gbc.setState(0x6ebc, 0xc8b5, 0x1960, 0x262d, 0x6501, 0x718f, 0x0, 0x0);
        gbc.writeMem(0x6ebc, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc8b5, gbc.sp());
        EXPECT(0x6ebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03D9
        gbc.setState(0xc4cb, 0x9fa7, 0xcf60, 0x76d, 0xb955, 0x6a52, 0x1, 0x1);
        gbc.writeMem(0xc4cb, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9fa7, gbc.sp());
        EXPECT(0xc4cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4cb));
        EXPECT(0x4, gbc.readMem(0xc4cc));
        // CB 04 03DA
        gbc.setState(0x760, 0x2596, 0x7420, 0x4a53, 0xe872, 0x2923, 0x1, 0x0);
        gbc.writeMem(0x760, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2596, gbc.sp());
        EXPECT(0x762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03DB
        gbc.setState(0x9532, 0x1524, 0x1340, 0xbb74, 0xbb9c, 0x2803, 0x0, 0x0);
        gbc.writeMem(0x9532, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1524, gbc.sp());
        EXPECT(0x9534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9532));
        EXPECT(0x4, gbc.readMem(0x9533));
        // CB 04 03DC
        gbc.setState(0x4896, 0x19f, 0x5f00, 0x6e72, 0x9ebb, 0x8b0e, 0x1, 0x0);
        gbc.writeMem(0x4896, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x19f, gbc.sp());
        EXPECT(0x4898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 03DF
        gbc.setState(0x13dd, 0xc8cd, 0x580, 0x7fe6, 0xf36, 0x5774, 0x1, 0x0);
        gbc.writeMem(0x13dd, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc8cd, gbc.sp());
        EXPECT(0x13df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03E0
        gbc.setState(0xaf2e, 0x213b, 0x360, 0xa9ae, 0xc32e, 0x3bb8, 0x0, 0x1);
        gbc.writeMem(0xaf2e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x213b, gbc.sp());
        EXPECT(0xaf30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf2e));
        EXPECT(0x4, gbc.readMem(0xaf2f));
        // CB 04 03E1
        gbc.setState(0x146c, 0x7406, 0xe200, 0x1f49, 0xe72b, 0x62f7, 0x1, 0x0);
        gbc.writeMem(0x146c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7406, gbc.sp());
        EXPECT(0x146e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03E3
        gbc.setState(0x5e7c, 0x137c, 0x4f00, 0x8241, 0xe5a7, 0x198e, 0x1, 0x1);
        gbc.writeMem(0x5e7c, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x137c, gbc.sp());
        EXPECT(0x5e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03E4
        gbc.setState(0x15fe, 0x76d0, 0x4870, 0xf6cd, 0x2408, 0x531e, 0x1, 0x0);
        gbc.writeMem(0x15fe, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x76d0, gbc.sp());
        EXPECT(0x1600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 04 03E6
        gbc.setState(0x376a, 0xcc28, 0x9110, 0xe773, 0xa6c9, 0xb3cb, 0x1, 0x1);
        gbc.writeMem(0x376a, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcc28, gbc.sp());
        EXPECT(0x376c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 04 03E7
        gbc.setState(0x6d7e, 0x138f, 0xd710, 0x9d3e, 0xa795, 0x4641, 0x1, 0x0);
        gbc.writeMem(0x6d7e, { 0xcb, 0x4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x138f, gbc.sp());
        EXPECT(0x6d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
