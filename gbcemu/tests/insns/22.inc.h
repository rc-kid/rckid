    TEST(gbcemu, opcode_22) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 22 0000
        gbc.setState(0xe81e, 0x57e7, 0xb230, 0x184, 0xd732, 0xeb0b, 0x0, 0x0);
        gbc.writeMem(0xe81e, { 0x22 });
        gbc.writeMem(0xeb0b, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x57e7, gbc.sp());
        EXPECT(0xe81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xe81e));
        EXPECT(0xb2, gbc.readMem(0xeb0b));
        // 22 0001
        gbc.setState(0xc8cf, 0x22b, 0x9190, 0x4964, 0x5519, 0x8536, 0x0, 0x1);
        gbc.writeMem(0x8536, { 0x0 });
        gbc.writeMem(0xc8cf, { 0x22 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x22b, gbc.sp());
        EXPECT(0xc8d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8536));
        EXPECT(0x22, gbc.readMem(0xc8cf));
        // 22 0002
        gbc.setState(0x15e4, 0xd2b8, 0xd640, 0xbc36, 0xccb7, 0x9790, 0x0, 0x0);
        gbc.writeMem(0x15e4, { 0x22 });
        gbc.writeMem(0x9790, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd2b8, gbc.sp());
        EXPECT(0x15e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9790));
        // 22 0004
        gbc.setState(0xed05, 0x9e4, 0xb980, 0x23e, 0x47da, 0xc31e, 0x1, 0x1);
        gbc.writeMem(0xc31e, { 0x0 });
        gbc.writeMem(0xed05, { 0x22 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9e4, gbc.sp());
        EXPECT(0xed06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc31e));
        EXPECT(0x22, gbc.readMem(0xed05));
        // 22 0005
        gbc.setState(0xeae4, 0x6017, 0x22d0, 0x7a3b, 0xddeb, 0xb39d, 0x1, 0x1);
        gbc.writeMem(0xb39d, { 0x0 });
        gbc.writeMem(0xeae4, { 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6017, gbc.sp());
        EXPECT(0xeae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb39d));
        EXPECT(0x22, gbc.readMem(0xeae4));
        // 22 0009
        gbc.setState(0x5d0f, 0x7db5, 0xa020, 0xc2b, 0x10cd, 0x86de, 0x0, 0x1);
        gbc.writeMem(0x5d0f, { 0x22 });
        gbc.writeMem(0x86de, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7db5, gbc.sp());
        EXPECT(0x5d10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x86de));
        // 22 000C
        gbc.setState(0x8dc, 0xff64, 0x1850, 0xd49d, 0x6712, 0xb98b, 0x1, 0x1);
        gbc.writeMem(0x8dc, { 0x22 });
        gbc.writeMem(0xb98b, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xff64, gbc.sp());
        EXPECT(0x8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xb98b));
        // 22 000D
        gbc.setState(0x481b, 0xec0f, 0x69b0, 0x9a81, 0xad5, 0xefbe, 0x1, 0x1);
        gbc.writeMem(0x481b, { 0x22 });
        gbc.writeMem(0xefbe, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xec0f, gbc.sp());
        EXPECT(0x481c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xefbe));
        // 22 000E
        gbc.setState(0xdb8d, 0xe0d6, 0xb820, 0xb2a0, 0xcda, 0xaa98, 0x1, 0x1);
        gbc.writeMem(0xaa98, { 0x0 });
        gbc.writeMem(0xdb8d, { 0x22 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe0d6, gbc.sp());
        EXPECT(0xdb8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xaa98));
        EXPECT(0x22, gbc.readMem(0xdb8d));
        // 22 000F
        gbc.setState(0x7b68, 0x9fa4, 0x77a0, 0xd77e, 0x51cd, 0x86e6, 0x0, 0x0);
        gbc.writeMem(0x7b68, { 0x22 });
        gbc.writeMem(0x86e6, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9fa4, gbc.sp());
        EXPECT(0x7b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x86e6));
        // 22 0012
        gbc.setState(0x1eaa, 0x579, 0xc00, 0xd899, 0xe825, 0xff83, 0x0, 0x0);
        gbc.writeMem(0x1eaa, { 0x22 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x579, gbc.sp());
        EXPECT(0x1eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xff83));
        // 22 0013
        gbc.setState(0x28b1, 0xd831, 0x1190, 0xda20, 0xc833, 0x95a0, 0x0, 0x1);
        gbc.writeMem(0x28b1, { 0x22 });
        gbc.writeMem(0x95a0, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd831, gbc.sp());
        EXPECT(0x28b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x95a0));
        // 22 0015
        gbc.setState(0x176d, 0x44b5, 0xfda0, 0x10df, 0x3cbf, 0xdfea, 0x1, 0x0);
        gbc.writeMem(0x176d, { 0x22 });
        gbc.writeMem(0xdfea, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x44b5, gbc.sp());
        EXPECT(0x176e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xdfea));
        // 22 0018
        gbc.setState(0xa72, 0x9bd7, 0xd130, 0xaa6b, 0x19e5, 0xed31, 0x1, 0x1);
        gbc.writeMem(0xa72, { 0x22 });
        gbc.writeMem(0xed31, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9bd7, gbc.sp());
        EXPECT(0xa73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xed31));
        // 22 001D
        gbc.setState(0x4667, 0xd3d4, 0x6b00, 0x2ff4, 0xac7c, 0xaaf1, 0x1, 0x0);
        gbc.writeMem(0x4667, { 0x22 });
        gbc.writeMem(0xaaf1, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd3d4, gbc.sp());
        EXPECT(0x4668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xaaf1));
        // 22 001F
        gbc.setState(0x2985, 0xa5ad, 0x1e70, 0x2faf, 0x186e, 0xe6d0, 0x0, 0x0);
        gbc.writeMem(0x2985, { 0x22 });
        gbc.writeMem(0xe6d0, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa5ad, gbc.sp());
        EXPECT(0x2986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xe6d0));
        // 22 0022
        gbc.setState(0xb91d, 0xef27, 0x9830, 0x5719, 0xe55d, 0xb057, 0x1, 0x1);
        gbc.writeMem(0xb057, { 0x0 });
        gbc.writeMem(0xb91d, { 0x22 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xef27, gbc.sp());
        EXPECT(0xb91e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb057));
        EXPECT(0x22, gbc.readMem(0xb91d));
        // 22 0025
        gbc.setState(0x2ca3, 0x1c43, 0x7890, 0xdd79, 0x6083, 0xacbe, 0x0, 0x1);
        gbc.writeMem(0x2ca3, { 0x22 });
        gbc.writeMem(0xacbe, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1c43, gbc.sp());
        EXPECT(0x2ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xacbe));
        // 22 0027
        gbc.setState(0x5e3e, 0x3e3d, 0xe090, 0xc751, 0x1c73, 0xca48, 0x1, 0x1);
        gbc.writeMem(0x5e3e, { 0x22 });
        gbc.writeMem(0xca48, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3e3d, gbc.sp());
        EXPECT(0x5e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xca48));
        // 22 0029
        gbc.setState(0x393c, 0xf93c, 0x5de0, 0x1493, 0xbaa5, 0x915a, 0x1, 0x1);
        gbc.writeMem(0x393c, { 0x22 });
        gbc.writeMem(0x915a, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf93c, gbc.sp());
        EXPECT(0x393d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x915a));
        // 22 002B
        gbc.setState(0x7a69, 0xf519, 0x6c00, 0x1ac3, 0x69f3, 0x8357, 0x1, 0x1);
        gbc.writeMem(0x7a69, { 0x22 });
        gbc.writeMem(0x8357, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf519, gbc.sp());
        EXPECT(0x7a6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8357));
        // 22 002D
        gbc.setState(0x6a68, 0xe06c, 0x3780, 0xa327, 0x3080, 0xaa8f, 0x0, 0x0);
        gbc.writeMem(0x6a68, { 0x22 });
        gbc.writeMem(0xaa8f, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe06c, gbc.sp());
        EXPECT(0x6a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xaa8f));
        // 22 002E
        gbc.setState(0x11da, 0xd200, 0x9830, 0x6ef0, 0x808f, 0xd30b, 0x1, 0x1);
        gbc.writeMem(0x11da, { 0x22 });
        gbc.writeMem(0xd30b, { 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd200, gbc.sp());
        EXPECT(0x11db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd30b));
        // 22 002F
        gbc.setState(0x9fe2, 0xd257, 0x3680, 0x7a0c, 0x69f9, 0x8d17, 0x0, 0x0);
        gbc.writeMem(0x8d17, { 0x0 });
        gbc.writeMem(0x9fe2, { 0x22 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd257, gbc.sp());
        EXPECT(0x9fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8d17));
        EXPECT(0x22, gbc.readMem(0x9fe2));
        // 22 0030
        gbc.setState(0xabe, 0x8731, 0xfda0, 0xe8f4, 0x6ee, 0x8cbd, 0x1, 0x0);
        gbc.writeMem(0xabe, { 0x22 });
        gbc.writeMem(0x8cbd, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8731, gbc.sp());
        EXPECT(0xabf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x8cbd));
        // 22 0032
        gbc.setState(0x9dcf, 0x1818, 0xc070, 0x265c, 0x4e5a, 0xbcab, 0x0, 0x0);
        gbc.writeMem(0x9dcf, { 0x22 });
        gbc.writeMem(0xbcab, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1818, gbc.sp());
        EXPECT(0x9dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9dcf));
        EXPECT(0xc0, gbc.readMem(0xbcab));
        // 22 0034
        gbc.setState(0xaf63, 0xe9da, 0x8860, 0xad50, 0x4bc0, 0xe65e, 0x1, 0x1);
        gbc.writeMem(0xaf63, { 0x22 });
        gbc.writeMem(0xe65e, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe9da, gbc.sp());
        EXPECT(0xaf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xaf63));
        EXPECT(0x88, gbc.readMem(0xe65e));
        // 22 0035
        gbc.setState(0x5d9a, 0xbf8c, 0x8b0, 0xaa10, 0xdbc3, 0xd9e8, 0x0, 0x1);
        gbc.writeMem(0x5d9a, { 0x22 });
        gbc.writeMem(0xd9e8, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbf8c, gbc.sp());
        EXPECT(0x5d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xd9e8));
        // 22 0037
        gbc.setState(0x24ad, 0xab7b, 0xd050, 0x7514, 0x96b7, 0xf7a1, 0x1, 0x1);
        gbc.writeMem(0x24ad, { 0x22 });
        gbc.writeMem(0xf7a1, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xab7b, gbc.sp());
        EXPECT(0x24ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xf7a1));
        // 22 0039
        gbc.setState(0x20f0, 0x962e, 0xf8f0, 0x3ab, 0x6e11, 0xc508, 0x0, 0x1);
        gbc.writeMem(0x20f0, { 0x22 });
        gbc.writeMem(0xc508, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x962e, gbc.sp());
        EXPECT(0x20f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc508));
        // 22 003B
        gbc.setState(0xa046, 0x6bc9, 0x65b0, 0x6c7c, 0x7ee6, 0xc58a, 0x0, 0x1);
        gbc.writeMem(0xa046, { 0x22 });
        gbc.writeMem(0xc58a, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6bc9, gbc.sp());
        EXPECT(0xa047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa046));
        EXPECT(0x65, gbc.readMem(0xc58a));
        // 22 003F
        gbc.setState(0x83c0, 0xe1cf, 0x8f00, 0xaa70, 0xddb4, 0x9375, 0x1, 0x1);
        gbc.writeMem(0x83c0, { 0x22 });
        gbc.writeMem(0x9375, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe1cf, gbc.sp());
        EXPECT(0x83c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x83c0));
        EXPECT(0x8f, gbc.readMem(0x9375));
        // 22 0040
        gbc.setState(0x4fdf, 0xfded, 0x3d10, 0x933a, 0xd70f, 0xacd8, 0x0, 0x0);
        gbc.writeMem(0x4fdf, { 0x22 });
        gbc.writeMem(0xacd8, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfded, gbc.sp());
        EXPECT(0x4fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xacd8));
        // 22 0041
        gbc.setState(0x7ab0, 0xb9ce, 0x3bf0, 0xeda0, 0x33be, 0xc3c9, 0x0, 0x1);
        gbc.writeMem(0x7ab0, { 0x22 });
        gbc.writeMem(0xc3c9, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb9ce, gbc.sp());
        EXPECT(0x7ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc3c9));
        // 22 0044
        gbc.setState(0xccac, 0xc4b9, 0x9490, 0xc014, 0xe3d3, 0xe3db, 0x0, 0x1);
        gbc.writeMem(0xccac, { 0x22 });
        gbc.writeMem(0xe3db, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc4b9, gbc.sp());
        EXPECT(0xccad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xccac));
        EXPECT(0x94, gbc.readMem(0xe3db));
        // 22 0046
        gbc.setState(0x8361, 0x29b3, 0x6180, 0x89e4, 0x63c7, 0x8a14, 0x1, 0x1);
        gbc.writeMem(0x8361, { 0x22 });
        gbc.writeMem(0x8a14, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x29b3, gbc.sp());
        EXPECT(0x8362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8361));
        EXPECT(0x61, gbc.readMem(0x8a14));
        // 22 0048
        gbc.setState(0x213a, 0x24f, 0x27c0, 0x9918, 0xa955, 0xfc75, 0x1, 0x0);
        gbc.writeMem(0x213a, { 0x22 });
        gbc.writeMem(0xfc75, { 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x24f, gbc.sp());
        EXPECT(0x213b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xfc75));
        // 22 004A
        gbc.setState(0xa5db, 0x1926, 0x6fe0, 0xb601, 0x6a2c, 0xefe1, 0x1, 0x0);
        gbc.writeMem(0xa5db, { 0x22 });
        gbc.writeMem(0xefe1, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1926, gbc.sp());
        EXPECT(0xa5dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa5db));
        EXPECT(0x6f, gbc.readMem(0xefe1));
        // 22 004B
        gbc.setState(0x1f0c, 0x6ebd, 0x67b0, 0x8b91, 0xfb19, 0xb8ec, 0x0, 0x0);
        gbc.writeMem(0x1f0c, { 0x22 });
        gbc.writeMem(0xb8ec, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6ebd, gbc.sp());
        EXPECT(0x1f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xb8ec));
        // 22 0050
        gbc.setState(0x67de, 0x9b3b, 0x8830, 0x1d38, 0x1ffb, 0xaed6, 0x1, 0x0);
        gbc.writeMem(0x67de, { 0x22 });
        gbc.writeMem(0xaed6, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9b3b, gbc.sp());
        EXPECT(0x67df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xaed6));
        // 22 0052
        gbc.setState(0x958b, 0xf847, 0x5350, 0xdb6, 0x7b85, 0xbb6e, 0x0, 0x0);
        gbc.writeMem(0x958b, { 0x22 });
        gbc.writeMem(0xbb6e, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf847, gbc.sp());
        EXPECT(0x958c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x958b));
        EXPECT(0x53, gbc.readMem(0xbb6e));
        // 22 0054
        gbc.setState(0xa076, 0x8b28, 0xe470, 0xed81, 0x61e2, 0xc11a, 0x0, 0x1);
        gbc.writeMem(0xa076, { 0x22 });
        gbc.writeMem(0xc11a, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8b28, gbc.sp());
        EXPECT(0xa077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa076));
        EXPECT(0xe4, gbc.readMem(0xc11a));
        // 22 0055
        gbc.setState(0x9e4, 0xf59b, 0xe730, 0xc3f1, 0x64b3, 0xb440, 0x0, 0x1);
        gbc.writeMem(0x9e4, { 0x22 });
        gbc.writeMem(0xb440, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf59b, gbc.sp());
        EXPECT(0x9e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb440));
        // 22 0058
        gbc.setState(0x34cd, 0x1091, 0xc910, 0x1b20, 0x23db, 0xfb91, 0x1, 0x0);
        gbc.writeMem(0x34cd, { 0x22 });
        gbc.writeMem(0xfb91, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1091, gbc.sp());
        EXPECT(0x34ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xfb91));
        // 22 005A
        gbc.setState(0x3037, 0xfa, 0xcf0, 0xc628, 0xc246, 0xc828, 0x1, 0x1);
        gbc.writeMem(0x3037, { 0x22 });
        gbc.writeMem(0xc828, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfa, gbc.sp());
        EXPECT(0x3038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc828));
        // 22 005C
        gbc.setState(0x5c8, 0xc9e0, 0x87d0, 0xaddb, 0xec67, 0xa43c, 0x1, 0x0);
        gbc.writeMem(0x5c8, { 0x22 });
        gbc.writeMem(0xa43c, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc9e0, gbc.sp());
        EXPECT(0x5c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa43c));
        // 22 005D
        gbc.setState(0x1245, 0x3903, 0x18d0, 0xd84d, 0x1fdf, 0xc222, 0x0, 0x1);
        gbc.writeMem(0x1245, { 0x22 });
        gbc.writeMem(0xc222, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3903, gbc.sp());
        EXPECT(0x1246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xc222));
        // 22 005E
        gbc.setState(0x628, 0x574, 0x13f0, 0xab3, 0x1997, 0xab69, 0x0, 0x0);
        gbc.writeMem(0x628, { 0x22 });
        gbc.writeMem(0xab69, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x574, gbc.sp());
        EXPECT(0x629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xab69));
        // 22 0061
        gbc.setState(0x60ff, 0x5f0a, 0x5690, 0x4abe, 0xf698, 0x8600, 0x0, 0x0);
        gbc.writeMem(0x60ff, { 0x22 });
        gbc.writeMem(0x8600, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5f0a, gbc.sp());
        EXPECT(0x6100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8600));
        // 22 0063
        gbc.setState(0x3eb6, 0x9652, 0x2b50, 0x53c7, 0x2638, 0xfaab, 0x1, 0x1);
        gbc.writeMem(0x3eb6, { 0x22 });
        gbc.writeMem(0xfaab, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9652, gbc.sp());
        EXPECT(0x3eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xfaab));
        // 22 0068
        gbc.setState(0x9b9b, 0x2aac, 0x29c0, 0x75e3, 0x2940, 0xcec2, 0x1, 0x0);
        gbc.writeMem(0x9b9b, { 0x22 });
        gbc.writeMem(0xcec2, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2aac, gbc.sp());
        EXPECT(0x9b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9b9b));
        EXPECT(0x29, gbc.readMem(0xcec2));
        // 22 006A
        gbc.setState(0x509a, 0x2566, 0x5b50, 0xfd0d, 0xd51d, 0xd2fc, 0x1, 0x1);
        gbc.writeMem(0x509a, { 0x22 });
        gbc.writeMem(0xd2fc, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2566, gbc.sp());
        EXPECT(0x509b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd2fc));
        // 22 006C
        gbc.setState(0x2329, 0xf821, 0x3300, 0x6062, 0x9ed7, 0xe273, 0x0, 0x0);
        gbc.writeMem(0x2329, { 0x22 });
        gbc.writeMem(0xe273, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf821, gbc.sp());
        EXPECT(0x232a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe273));
        // 22 006D
        gbc.setState(0x7b99, 0x6338, 0x5de0, 0xa6a, 0xc4be, 0x84dd, 0x0, 0x1);
        gbc.writeMem(0x7b99, { 0x22 });
        gbc.writeMem(0x84dd, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6338, gbc.sp());
        EXPECT(0x7b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x84dd));
        // 22 006E
        gbc.setState(0x5834, 0x63a5, 0xdc70, 0x59a4, 0x4061, 0xe988, 0x0, 0x0);
        gbc.writeMem(0x5834, { 0x22 });
        gbc.writeMem(0xe988, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x63a5, gbc.sp());
        EXPECT(0x5835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xe988));
        // 22 006F
        gbc.setState(0xb5d6, 0xe6d2, 0xd1c0, 0x20c4, 0x1c81, 0xfaa7, 0x0, 0x1);
        gbc.writeMem(0xb5d6, { 0x22 });
        gbc.writeMem(0xfaa7, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe6d2, gbc.sp());
        EXPECT(0xb5d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb5d6));
        EXPECT(0xd1, gbc.readMem(0xfaa7));
        // 22 0070
        gbc.setState(0xe64a, 0x88f0, 0x8310, 0x3aa8, 0xcb02, 0xa245, 0x0, 0x1);
        gbc.writeMem(0xa245, { 0x0 });
        gbc.writeMem(0xe64a, { 0x22 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x88f0, gbc.sp());
        EXPECT(0xe64b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xa245));
        EXPECT(0x22, gbc.readMem(0xe64a));
        // 22 0071
        gbc.setState(0xd26c, 0x431d, 0x79e0, 0x14bf, 0xaaba, 0x90e1, 0x1, 0x1);
        gbc.writeMem(0x90e1, { 0x0 });
        gbc.writeMem(0xd26c, { 0x22 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x431d, gbc.sp());
        EXPECT(0xd26d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x90e1));
        EXPECT(0x22, gbc.readMem(0xd26c));
        // 22 0073
        gbc.setState(0x7da3, 0x9e0e, 0xe0d0, 0x9662, 0x4942, 0xcd88, 0x0, 0x0);
        gbc.writeMem(0x7da3, { 0x22 });
        gbc.writeMem(0xcd88, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9e0e, gbc.sp());
        EXPECT(0x7da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xcd88));
        // 22 0075
        gbc.setState(0x1515, 0x5b97, 0x8cf0, 0xebfe, 0x7ea2, 0x9074, 0x1, 0x0);
        gbc.writeMem(0x1515, { 0x22 });
        gbc.writeMem(0x9074, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5b97, gbc.sp());
        EXPECT(0x1516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9074));
        // 22 0076
        gbc.setState(0x2151, 0x8a9f, 0xd1d0, 0xf678, 0x5f0b, 0x9bf4, 0x0, 0x0);
        gbc.writeMem(0x2151, { 0x22 });
        gbc.writeMem(0x9bf4, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8a9f, gbc.sp());
        EXPECT(0x2152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x9bf4));
        // 22 0077
        gbc.setState(0x59aa, 0xb024, 0x31f0, 0xbfc, 0xd58e, 0x8500, 0x0, 0x0);
        gbc.writeMem(0x59aa, { 0x22 });
        gbc.writeMem(0x8500, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb024, gbc.sp());
        EXPECT(0x59ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8500));
        // 22 0079
        gbc.setState(0x789b, 0x4c1c, 0x6740, 0xbb04, 0x6f3a, 0x94c7, 0x1, 0x1);
        gbc.writeMem(0x789b, { 0x22 });
        gbc.writeMem(0x94c7, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4c1c, gbc.sp());
        EXPECT(0x789c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x94c7));
        // 22 007B
        gbc.setState(0xb3be, 0x5a0a, 0x7c10, 0x44b3, 0xcd17, 0xb737, 0x0, 0x0);
        gbc.writeMem(0xb3be, { 0x22 });
        gbc.writeMem(0xb737, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5a0a, gbc.sp());
        EXPECT(0xb3bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb3be));
        EXPECT(0x7c, gbc.readMem(0xb737));
        // 22 007C
        gbc.setState(0x824, 0x9d59, 0x8740, 0xaf87, 0x2320, 0xe244, 0x1, 0x0);
        gbc.writeMem(0x824, { 0x22 });
        gbc.writeMem(0xe244, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9d59, gbc.sp());
        EXPECT(0x825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe244));
        // 22 007E
        gbc.setState(0xa016, 0xa6eb, 0xc920, 0x577a, 0xbc08, 0xde8b, 0x1, 0x0);
        gbc.writeMem(0xa016, { 0x22 });
        gbc.writeMem(0xde8b, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa6eb, gbc.sp());
        EXPECT(0xa017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa016));
        EXPECT(0xc9, gbc.readMem(0xde8b));
        // 22 007F
        gbc.setState(0x8ef3, 0x98b9, 0x5df0, 0xd199, 0x75e0, 0x869f, 0x0, 0x1);
        gbc.writeMem(0x869f, { 0x0 });
        gbc.writeMem(0x8ef3, { 0x22 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x98b9, gbc.sp());
        EXPECT(0x8ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x869f));
        EXPECT(0x22, gbc.readMem(0x8ef3));
        // 22 0081
        gbc.setState(0xee98, 0xc68e, 0x2c0, 0x2909, 0x9bdd, 0x9bb8, 0x1, 0x0);
        gbc.writeMem(0x9bb8, { 0x0 });
        gbc.writeMem(0xee98, { 0x22 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc68e, gbc.sp());
        EXPECT(0xee99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x9bb8));
        EXPECT(0x22, gbc.readMem(0xee98));
        // 22 0084
        gbc.setState(0xafd0, 0x5dd8, 0xd140, 0x1602, 0x907f, 0xfce5, 0x1, 0x1);
        gbc.writeMem(0xafd0, { 0x22 });
        gbc.writeMem(0xfce5, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5dd8, gbc.sp());
        EXPECT(0xafd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xafd0));
        EXPECT(0xd1, gbc.readMem(0xfce5));
        // 22 0086
        gbc.setState(0x8dd3, 0x6010, 0x61b0, 0x4679, 0x278b, 0xee15, 0x1, 0x1);
        gbc.writeMem(0x8dd3, { 0x22 });
        gbc.writeMem(0xee15, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6010, gbc.sp());
        EXPECT(0x8dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8dd3));
        EXPECT(0x61, gbc.readMem(0xee15));
        // 22 0087
        gbc.setState(0x984b, 0x2d23, 0x9a80, 0x8c71, 0xaf65, 0xdf5a, 0x1, 0x1);
        gbc.writeMem(0x984b, { 0x22 });
        gbc.writeMem(0xdf5a, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2d23, gbc.sp());
        EXPECT(0x984c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x984b));
        EXPECT(0x9a, gbc.readMem(0xdf5a));
        // 22 0089
        gbc.setState(0x9888, 0x512a, 0x1660, 0x9364, 0x3f3d, 0xd6c7, 0x0, 0x0);
        gbc.writeMem(0x9888, { 0x22 });
        gbc.writeMem(0xd6c7, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x512a, gbc.sp());
        EXPECT(0x9889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9888));
        EXPECT(0x16, gbc.readMem(0xd6c7));
        // 22 008A
        gbc.setState(0x25ac, 0xeeeb, 0xbec0, 0x3685, 0x89c1, 0x82e2, 0x1, 0x1);
        gbc.writeMem(0x25ac, { 0x22 });
        gbc.writeMem(0x82e2, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xeeeb, gbc.sp());
        EXPECT(0x25ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x82e2));
        // 22 008C
        gbc.setState(0x388b, 0x37c4, 0x6b50, 0x5037, 0xf03f, 0xb6ab, 0x1, 0x0);
        gbc.writeMem(0x388b, { 0x22 });
        gbc.writeMem(0xb6ab, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x37c4, gbc.sp());
        EXPECT(0x388c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xb6ab));
        // 22 008D
        gbc.setState(0x687f, 0x3e9a, 0xcdf0, 0xfacf, 0xa3fa, 0xc0d8, 0x0, 0x0);
        gbc.writeMem(0x687f, { 0x22 });
        gbc.writeMem(0xc0d8, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3e9a, gbc.sp());
        EXPECT(0x6880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xc0d8));
        // 22 008F
        gbc.setState(0x57ab, 0x713f, 0x1d90, 0x30c8, 0x3fcc, 0xa72d, 0x0, 0x0);
        gbc.writeMem(0x57ab, { 0x22 });
        gbc.writeMem(0xa72d, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x713f, gbc.sp());
        EXPECT(0x57ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa72d));
        // 22 0092
        gbc.setState(0xb7f5, 0xc34f, 0x2930, 0xdda, 0x4c91, 0x8216, 0x0, 0x0);
        gbc.writeMem(0x8216, { 0x0 });
        gbc.writeMem(0xb7f5, { 0x22 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc34f, gbc.sp());
        EXPECT(0xb7f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8216));
        EXPECT(0x22, gbc.readMem(0xb7f5));
        // 22 0096
        gbc.setState(0xb2c0, 0xa847, 0x37a0, 0xe57c, 0xf8a, 0x9d38, 0x1, 0x1);
        gbc.writeMem(0x9d38, { 0x0 });
        gbc.writeMem(0xb2c0, { 0x22 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa847, gbc.sp());
        EXPECT(0xb2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9d38));
        EXPECT(0x22, gbc.readMem(0xb2c0));
        // 22 009A
        gbc.setState(0x257d, 0xbb25, 0xff50, 0x1ae6, 0x53f1, 0xf6c0, 0x1, 0x0);
        gbc.writeMem(0x257d, { 0x22 });
        gbc.writeMem(0xf6c0, { 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbb25, gbc.sp());
        EXPECT(0x257e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xf6c0));
        // 22 009B
        gbc.setState(0x47e4, 0xae8e, 0xcdb0, 0x7abf, 0x2cec, 0xe587, 0x0, 0x1);
        gbc.writeMem(0x47e4, { 0x22 });
        gbc.writeMem(0xe587, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xae8e, gbc.sp());
        EXPECT(0x47e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xe587));
        // 22 009C
        gbc.setState(0x7559, 0x6293, 0xab70, 0xd9c2, 0x94b0, 0xbdec, 0x1, 0x1);
        gbc.writeMem(0x7559, { 0x22 });
        gbc.writeMem(0xbdec, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6293, gbc.sp());
        EXPECT(0x755a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xbdec));
        // 22 00A0
        gbc.setState(0x77c5, 0xd47f, 0xe930, 0x78c2, 0x1ccb, 0xd56a, 0x1, 0x1);
        gbc.writeMem(0x77c5, { 0x22 });
        gbc.writeMem(0xd56a, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd47f, gbc.sp());
        EXPECT(0x77c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd56a));
        // 22 00A3
        gbc.setState(0x5ed1, 0x2874, 0x36b0, 0x2478, 0xa3aa, 0x97d2, 0x0, 0x1);
        gbc.writeMem(0x5ed1, { 0x22 });
        gbc.writeMem(0x97d2, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2874, gbc.sp());
        EXPECT(0x5ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x97d2));
        // 22 00A5
        gbc.setState(0xa8d, 0xd5e6, 0xe660, 0x9264, 0x1900, 0xf9e2, 0x0, 0x0);
        gbc.writeMem(0xa8d, { 0x22 });
        gbc.writeMem(0xf9e2, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd5e6, gbc.sp());
        EXPECT(0xa8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xf9e2));
        // 22 00A6
        gbc.setState(0x6d4a, 0xf42b, 0x2940, 0xe146, 0x33a2, 0xc430, 0x1, 0x0);
        gbc.writeMem(0x6d4a, { 0x22 });
        gbc.writeMem(0xc430, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf42b, gbc.sp());
        EXPECT(0x6d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc430));
        // 22 00A7
        gbc.setState(0xb0e7, 0xa30a, 0x1fd0, 0x1f11, 0xecff, 0x85e7, 0x0, 0x1);
        gbc.writeMem(0x85e7, { 0x0 });
        gbc.writeMem(0xb0e7, { 0x22 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa30a, gbc.sp());
        EXPECT(0xb0e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x85e7));
        EXPECT(0x22, gbc.readMem(0xb0e7));
        // 22 00A8
        gbc.setState(0x9b9a, 0x4fb3, 0x8690, 0x4b71, 0xf01d, 0x904f, 0x0, 0x0);
        gbc.writeMem(0x904f, { 0x0 });
        gbc.writeMem(0x9b9a, { 0x22 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4fb3, gbc.sp());
        EXPECT(0x9b9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x904f));
        EXPECT(0x22, gbc.readMem(0x9b9a));
        // 22 00A9
        gbc.setState(0xcaac, 0xd062, 0x2520, 0x8b62, 0x2409, 0x920c, 0x0, 0x0);
        gbc.writeMem(0x920c, { 0x0 });
        gbc.writeMem(0xcaac, { 0x22 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd062, gbc.sp());
        EXPECT(0xcaad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x920c));
        EXPECT(0x22, gbc.readMem(0xcaac));
        // 22 00AA
        gbc.setState(0xefa1, 0x8bca, 0xba30, 0x4aaa, 0xf561, 0x8ac4, 0x1, 0x0);
        gbc.writeMem(0x8ac4, { 0x0 });
        gbc.writeMem(0xefa1, { 0x22 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8bca, gbc.sp());
        EXPECT(0xefa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x8ac4));
        EXPECT(0x22, gbc.readMem(0xefa1));
        // 22 00AD
        gbc.setState(0x2717, 0x83ba, 0x2340, 0xdc43, 0xbf20, 0xa5e3, 0x1, 0x0);
        gbc.writeMem(0x2717, { 0x22 });
        gbc.writeMem(0xa5e3, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x83ba, gbc.sp());
        EXPECT(0x2718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xa5e3));
        // 22 00AE
        gbc.setState(0xd86a, 0xf815, 0x77b0, 0xc99, 0xad96, 0x8b94, 0x0, 0x1);
        gbc.writeMem(0x8b94, { 0x0 });
        gbc.writeMem(0xd86a, { 0x22 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf815, gbc.sp());
        EXPECT(0xd86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8b94));
        EXPECT(0x22, gbc.readMem(0xd86a));
        // 22 00B0
        gbc.setState(0x162e, 0x23d9, 0x1f20, 0xf3dd, 0xf771, 0x97d4, 0x1, 0x1);
        gbc.writeMem(0x162e, { 0x22 });
        gbc.writeMem(0x97d4, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x23d9, gbc.sp());
        EXPECT(0x162f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x97d4));
        // 22 00B1
        gbc.setState(0x6f3b, 0x775a, 0x37d0, 0xf8b5, 0x9ecc, 0xffdb, 0x1, 0x0);
        gbc.writeMem(0x6f3b, { 0x22 });
        gbc.writeMem(0xffdb, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x775a, gbc.sp());
        EXPECT(0x6f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xffdb));
        // 22 00B2
        gbc.setState(0xc9a2, 0xbabe, 0x1840, 0xebc, 0xe41f, 0x8c9a, 0x0, 0x0);
        gbc.writeMem(0x8c9a, { 0x0 });
        gbc.writeMem(0xc9a2, { 0x22 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbabe, gbc.sp());
        EXPECT(0xc9a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x8c9a));
        EXPECT(0x22, gbc.readMem(0xc9a2));
        // 22 00BB
        gbc.setState(0x3c5c, 0xf7e7, 0x3ea0, 0xdb0b, 0xe05e, 0xad5f, 0x1, 0x0);
        gbc.writeMem(0x3c5c, { 0x22 });
        gbc.writeMem(0xad5f, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf7e7, gbc.sp());
        EXPECT(0x3c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xad5f));
        // 22 00BC
        gbc.setState(0x4be3, 0x78bc, 0x1d20, 0xc36b, 0xc549, 0xc31d, 0x0, 0x0);
        gbc.writeMem(0x4be3, { 0x22 });
        gbc.writeMem(0xc31d, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x78bc, gbc.sp());
        EXPECT(0x4be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc31d));
        // 22 00BD
        gbc.setState(0xcbb4, 0xf041, 0xca20, 0xba44, 0xd935, 0x854d, 0x1, 0x0);
        gbc.writeMem(0x854d, { 0x0 });
        gbc.writeMem(0xcbb4, { 0x22 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf041, gbc.sp());
        EXPECT(0xcbb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x854d));
        EXPECT(0x22, gbc.readMem(0xcbb4));
        // 22 00C1
        gbc.setState(0x140b, 0xa53a, 0x57b0, 0xf348, 0xfd7a, 0xab8c, 0x1, 0x1);
        gbc.writeMem(0x140b, { 0x22 });
        gbc.writeMem(0xab8c, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa53a, gbc.sp());
        EXPECT(0x140c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xab8c));
        // 22 00C2
        gbc.setState(0x4875, 0xcec1, 0x87c0, 0xaad2, 0xcb36, 0x9792, 0x0, 0x1);
        gbc.writeMem(0x4875, { 0x22 });
        gbc.writeMem(0x9792, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcec1, gbc.sp());
        EXPECT(0x4876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9792));
        // 22 00C3
        gbc.setState(0xdc13, 0x3372, 0x3220, 0xd6f0, 0x8e81, 0x9d73, 0x0, 0x1);
        gbc.writeMem(0x9d73, { 0x0 });
        gbc.writeMem(0xdc13, { 0x22 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3372, gbc.sp());
        EXPECT(0xdc14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9d73));
        EXPECT(0x22, gbc.readMem(0xdc13));
        // 22 00C4
        gbc.setState(0x4f33, 0xbb0c, 0xf60, 0x2674, 0x6959, 0xf980, 0x1, 0x0);
        gbc.writeMem(0x4f33, { 0x22 });
        gbc.writeMem(0xf980, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbb0c, gbc.sp());
        EXPECT(0x4f34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xf980));
        // 22 00C9
        gbc.setState(0x196b, 0xa6b6, 0x2fc0, 0xac99, 0x2c2f, 0xd741, 0x0, 0x1);
        gbc.writeMem(0x196b, { 0x22 });
        gbc.writeMem(0xd741, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa6b6, gbc.sp());
        EXPECT(0x196c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd741));
        // 22 00CA
        gbc.setState(0x82b7, 0x8c4d, 0x22c0, 0x2f7c, 0xd473, 0x94ce, 0x0, 0x0);
        gbc.writeMem(0x82b7, { 0x22 });
        gbc.writeMem(0x94ce, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8c4d, gbc.sp());
        EXPECT(0x82b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x82b7));
        EXPECT(0x22, gbc.readMem(0x94ce));
        // 22 00CC
        gbc.setState(0x3ccd, 0xd454, 0xba10, 0x36b8, 0x3f90, 0xaed1, 0x0, 0x1);
        gbc.writeMem(0x3ccd, { 0x22 });
        gbc.writeMem(0xaed1, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd454, gbc.sp());
        EXPECT(0x3cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xaed1));
        // 22 00CD
        gbc.setState(0xb399, 0x95be, 0xe30, 0xb729, 0xd5e5, 0xac94, 0x1, 0x1);
        gbc.writeMem(0xac94, { 0x0 });
        gbc.writeMem(0xb399, { 0x22 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x95be, gbc.sp());
        EXPECT(0xb39a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xac94));
        EXPECT(0x22, gbc.readMem(0xb399));
        // 22 00D1
        gbc.setState(0x2cca, 0x3dd5, 0xd8d0, 0xb78e, 0x5e9c, 0xde73, 0x0, 0x1);
        gbc.writeMem(0x2cca, { 0x22 });
        gbc.writeMem(0xde73, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3dd5, gbc.sp());
        EXPECT(0x2ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xde73));
        // 22 00D7
        gbc.setState(0x6e8f, 0xcc16, 0x34f0, 0x3be6, 0x8e6e, 0xaebb, 0x1, 0x0);
        gbc.writeMem(0x6e8f, { 0x22 });
        gbc.writeMem(0xaebb, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcc16, gbc.sp());
        EXPECT(0x6e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xaebb));
        // 22 00D8
        gbc.setState(0xdc56, 0xa688, 0xeff0, 0x2305, 0x8118, 0x8b92, 0x0, 0x1);
        gbc.writeMem(0x8b92, { 0x0 });
        gbc.writeMem(0xdc56, { 0x22 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa688, gbc.sp());
        EXPECT(0xdc57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x8b92));
        EXPECT(0x22, gbc.readMem(0xdc56));
        // 22 00D9
        gbc.setState(0xa067, 0x7641, 0xa8e0, 0xffba, 0xc6f, 0xeb49, 0x0, 0x1);
        gbc.writeMem(0xa067, { 0x22 });
        gbc.writeMem(0xeb49, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7641, gbc.sp());
        EXPECT(0xa068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa067));
        EXPECT(0xa8, gbc.readMem(0xeb49));
        // 22 00DA
        gbc.setState(0x9f2d, 0x9299, 0xc50, 0x8e41, 0xa765, 0x9b5f, 0x0, 0x0);
        gbc.writeMem(0x9b5f, { 0x0 });
        gbc.writeMem(0x9f2d, { 0x22 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9299, gbc.sp());
        EXPECT(0x9f2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9b5f));
        EXPECT(0x22, gbc.readMem(0x9f2d));
        // 22 00DB
        gbc.setState(0x854f, 0xd260, 0x13b0, 0x1340, 0xff9a, 0xf8d9, 0x1, 0x0);
        gbc.writeMem(0x854f, { 0x22 });
        gbc.writeMem(0xf8d9, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd260, gbc.sp());
        EXPECT(0x8550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x854f));
        EXPECT(0x13, gbc.readMem(0xf8d9));
        // 22 00DE
        gbc.setState(0x4589, 0xca20, 0xbfa0, 0x873f, 0xb63a, 0xd73d, 0x1, 0x1);
        gbc.writeMem(0x4589, { 0x22 });
        gbc.writeMem(0xd73d, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xca20, gbc.sp());
        EXPECT(0x458a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd73d));
        // 22 00DF
        gbc.setState(0xd761, 0x5e9, 0xd390, 0x8f6a, 0xa487, 0xbb41, 0x1, 0x1);
        gbc.writeMem(0xbb41, { 0x0 });
        gbc.writeMem(0xd761, { 0x22 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5e9, gbc.sp());
        EXPECT(0xd762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xbb41));
        EXPECT(0x22, gbc.readMem(0xd761));
        // 22 00E0
        gbc.setState(0x63d6, 0xab68, 0x8700, 0x2a4c, 0x104, 0xdfdf, 0x1, 0x1);
        gbc.writeMem(0x63d6, { 0x22 });
        gbc.writeMem(0xdfdf, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xab68, gbc.sp());
        EXPECT(0x63d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xdfdf));
        // 22 00E1
        gbc.setState(0x33c6, 0x3c5e, 0x44c0, 0xca4d, 0xdf7d, 0xa41e, 0x0, 0x0);
        gbc.writeMem(0x33c6, { 0x22 });
        gbc.writeMem(0xa41e, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3c5e, gbc.sp());
        EXPECT(0x33c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa41e));
        // 22 00E2
        gbc.setState(0x4490, 0x5630, 0xfde0, 0xbda6, 0xed8c, 0xe931, 0x0, 0x0);
        gbc.writeMem(0x4490, { 0x22 });
        gbc.writeMem(0xe931, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5630, gbc.sp());
        EXPECT(0x4491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xe931));
        // 22 00E6
        gbc.setState(0x4b21, 0x8993, 0x38c0, 0x7d45, 0x46bf, 0xad2f, 0x1, 0x0);
        gbc.writeMem(0x4b21, { 0x22 });
        gbc.writeMem(0xad2f, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8993, gbc.sp());
        EXPECT(0x4b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xad2f));
        // 22 00E7
        gbc.setState(0x9949, 0x3be1, 0x6f40, 0xafca, 0xa716, 0xe2db, 0x1, 0x0);
        gbc.writeMem(0x9949, { 0x22 });
        gbc.writeMem(0xe2db, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3be1, gbc.sp());
        EXPECT(0x994a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9949));
        EXPECT(0x6f, gbc.readMem(0xe2db));
        // 22 00E8
        gbc.setState(0x863c, 0xbac9, 0x9a10, 0xa827, 0x20a5, 0xe08c, 0x1, 0x1);
        gbc.writeMem(0x863c, { 0x22 });
        gbc.writeMem(0xe08c, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbac9, gbc.sp());
        EXPECT(0x863d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x863c));
        EXPECT(0x9a, gbc.readMem(0xe08c));
        // 22 00EA
        gbc.setState(0x7cc9, 0xce3d, 0x2670, 0xf3fc, 0x4fda, 0xb6b5, 0x1, 0x0);
        gbc.writeMem(0x7cc9, { 0x22 });
        gbc.writeMem(0xb6b5, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xce3d, gbc.sp());
        EXPECT(0x7cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb6b5));
        // 22 00EB
        gbc.setState(0x5d59, 0x32ac, 0x5c80, 0x461b, 0x21d4, 0xcef6, 0x0, 0x0);
        gbc.writeMem(0x5d59, { 0x22 });
        gbc.writeMem(0xcef6, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x32ac, gbc.sp());
        EXPECT(0x5d5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xcef6));
        // 22 00EC
        gbc.setState(0x600f, 0xcd52, 0x7f10, 0xa3d3, 0x974, 0xe011, 0x0, 0x1);
        gbc.writeMem(0x600f, { 0x22 });
        gbc.writeMem(0xe011, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcd52, gbc.sp());
        EXPECT(0x6010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xe011));
        // 22 00ED
        gbc.setState(0xe22a, 0x68d1, 0xbb70, 0x6edc, 0xe638, 0xe85c, 0x1, 0x1);
        gbc.writeMem(0xe22a, { 0x22 });
        gbc.writeMem(0xe85c, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x68d1, gbc.sp());
        EXPECT(0xe22b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xe22a));
        EXPECT(0xbb, gbc.readMem(0xe85c));
        // 22 00EE
        gbc.setState(0x4f82, 0xe2ec, 0xc7a0, 0x215f, 0x9e22, 0xe5a3, 0x1, 0x0);
        gbc.writeMem(0x4f82, { 0x22 });
        gbc.writeMem(0xe5a3, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe2ec, gbc.sp());
        EXPECT(0x4f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xe5a3));
        // 22 00EF
        gbc.setState(0x172a, 0x4836, 0x6250, 0x34e6, 0x54a6, 0x8e4e, 0x1, 0x1);
        gbc.writeMem(0x172a, { 0x22 });
        gbc.writeMem(0x8e4e, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4836, gbc.sp());
        EXPECT(0x172b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x8e4e));
        // 22 00F0
        gbc.setState(0x55b8, 0x5af4, 0xbb70, 0x186f, 0x261a, 0xd29e, 0x1, 0x1);
        gbc.writeMem(0x55b8, { 0x22 });
        gbc.writeMem(0xd29e, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5af4, gbc.sp());
        EXPECT(0x55b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd29e));
        // 22 00F1
        gbc.setState(0x99eb, 0xafb6, 0x3b0, 0xd8b1, 0x3074, 0xedc3, 0x0, 0x1);
        gbc.writeMem(0x99eb, { 0x22 });
        gbc.writeMem(0xedc3, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xafb6, gbc.sp());
        EXPECT(0x99ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x99eb));
        EXPECT(0x3, gbc.readMem(0xedc3));
        // 22 00F3
        gbc.setState(0xb64c, 0x787d, 0xca50, 0x985c, 0x7024, 0xf15d, 0x0, 0x1);
        gbc.writeMem(0xb64c, { 0x22 });
        gbc.writeMem(0xf15d, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x787d, gbc.sp());
        EXPECT(0xb64d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb64c));
        EXPECT(0xca, gbc.readMem(0xf15d));
        // 22 00F4
        gbc.setState(0x2127, 0xc678, 0xfc60, 0xa658, 0x5162, 0x8b28, 0x0, 0x1);
        gbc.writeMem(0x2127, { 0x22 });
        gbc.writeMem(0x8b28, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc678, gbc.sp());
        EXPECT(0x2128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x8b28));
        // 22 00F5
        gbc.setState(0xc1e5, 0xf8dc, 0x8fc0, 0x8e57, 0x890a, 0x8aa5, 0x0, 0x1);
        gbc.writeMem(0x8aa5, { 0x0 });
        gbc.writeMem(0xc1e5, { 0x22 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf8dc, gbc.sp());
        EXPECT(0xc1e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8aa5));
        EXPECT(0x22, gbc.readMem(0xc1e5));
        // 22 00F6
        gbc.setState(0x1980, 0x8af4, 0xdcb0, 0xd9, 0x32c3, 0xcb00, 0x0, 0x0);
        gbc.writeMem(0x1980, { 0x22 });
        gbc.writeMem(0xcb00, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8af4, gbc.sp());
        EXPECT(0x1981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xcb00));
        // 22 00F8
        gbc.setState(0x69c2, 0x51c9, 0x4470, 0x93df, 0xc138, 0xb46f, 0x1, 0x0);
        gbc.writeMem(0x69c2, { 0x22 });
        gbc.writeMem(0xb46f, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x51c9, gbc.sp());
        EXPECT(0x69c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb46f));
        // 22 00F9
        gbc.setState(0xa0e4, 0x4cf0, 0xead0, 0x9063, 0x4b02, 0xbc78, 0x0, 0x1);
        gbc.writeMem(0xa0e4, { 0x22 });
        gbc.writeMem(0xbc78, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4cf0, gbc.sp());
        EXPECT(0xa0e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa0e4));
        EXPECT(0xea, gbc.readMem(0xbc78));
        // 22 00FA
        gbc.setState(0x6fb6, 0x5458, 0x38a0, 0x3fa8, 0xf001, 0xe1c7, 0x1, 0x1);
        gbc.writeMem(0x6fb6, { 0x22 });
        gbc.writeMem(0xe1c7, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5458, gbc.sp());
        EXPECT(0x6fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe1c7));
        // 22 00FB
        gbc.setState(0x3dfc, 0xfc4e, 0x5c70, 0xf99e, 0x111e, 0x9024, 0x1, 0x0);
        gbc.writeMem(0x3dfc, { 0x22 });
        gbc.writeMem(0x9024, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfc4e, gbc.sp());
        EXPECT(0x3dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x9024));
        // 22 00FD
        gbc.setState(0x8a6b, 0xef8, 0x8360, 0x7a39, 0x71e9, 0xe643, 0x0, 0x0);
        gbc.writeMem(0x8a6b, { 0x22 });
        gbc.writeMem(0xe643, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xef8, gbc.sp());
        EXPECT(0x8a6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8a6b));
        EXPECT(0x83, gbc.readMem(0xe643));
        // 22 0101
        gbc.setState(0xbd99, 0xca36, 0xfd90, 0x30e7, 0xe1d7, 0xb089, 0x1, 0x1);
        gbc.writeMem(0xb089, { 0x0 });
        gbc.writeMem(0xbd99, { 0x22 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xca36, gbc.sp());
        EXPECT(0xbd9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xb089));
        EXPECT(0x22, gbc.readMem(0xbd99));
        // 22 0102
        gbc.setState(0x854b, 0xb4de, 0xc020, 0x89c9, 0x1bc, 0xdc5f, 0x0, 0x0);
        gbc.writeMem(0x854b, { 0x22 });
        gbc.writeMem(0xdc5f, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb4de, gbc.sp());
        EXPECT(0x854c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x854b));
        EXPECT(0xc0, gbc.readMem(0xdc5f));
        // 22 0106
        gbc.setState(0x14e3, 0xaf54, 0xf010, 0x87d2, 0xa85, 0xecda, 0x1, 0x0);
        gbc.writeMem(0x14e3, { 0x22 });
        gbc.writeMem(0xecda, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xaf54, gbc.sp());
        EXPECT(0x14e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xecda));
        // 22 0107
        gbc.setState(0xbf2c, 0x72b6, 0xc020, 0xedc4, 0xbb99, 0xc5c8, 0x1, 0x1);
        gbc.writeMem(0xbf2c, { 0x22 });
        gbc.writeMem(0xc5c8, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x72b6, gbc.sp());
        EXPECT(0xbf2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xbf2c));
        EXPECT(0xc0, gbc.readMem(0xc5c8));
        // 22 0108
        gbc.setState(0x37d3, 0x8468, 0xa40, 0x5d56, 0xad38, 0xc03a, 0x0, 0x1);
        gbc.writeMem(0x37d3, { 0x22 });
        gbc.writeMem(0xc03a, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8468, gbc.sp());
        EXPECT(0x37d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc03a));
        // 22 0109
        gbc.setState(0x3e70, 0x4a7f, 0xe360, 0x9098, 0xfaa8, 0x8d09, 0x0, 0x0);
        gbc.writeMem(0x3e70, { 0x22 });
        gbc.writeMem(0x8d09, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4a7f, gbc.sp());
        EXPECT(0x3e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x8d09));
        // 22 010D
        gbc.setState(0xd839, 0x193f, 0xef20, 0x24e6, 0x7a6f, 0x999f, 0x1, 0x1);
        gbc.writeMem(0x999f, { 0x0 });
        gbc.writeMem(0xd839, { 0x22 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x193f, gbc.sp());
        EXPECT(0xd83a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x999f));
        EXPECT(0x22, gbc.readMem(0xd839));
        // 22 010E
        gbc.setState(0x6c4e, 0xe34c, 0x95e0, 0xec65, 0xd1f3, 0xe90f, 0x0, 0x0);
        gbc.writeMem(0x6c4e, { 0x22 });
        gbc.writeMem(0xe90f, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe34c, gbc.sp());
        EXPECT(0x6c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe90f));
        // 22 010F
        gbc.setState(0x572e, 0x561d, 0x6cd0, 0x6a01, 0xf6, 0xc7c0, 0x0, 0x1);
        gbc.writeMem(0x572e, { 0x22 });
        gbc.writeMem(0xc7c0, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x561d, gbc.sp());
        EXPECT(0x572f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc7c0));
        // 22 0110
        gbc.setState(0xb4ff, 0x1077, 0xc280, 0x1c14, 0x7c7, 0xc4bf, 0x0, 0x1);
        gbc.writeMem(0xb4ff, { 0x22 });
        gbc.writeMem(0xc4bf, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1077, gbc.sp());
        EXPECT(0xb500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb4ff));
        EXPECT(0xc2, gbc.readMem(0xc4bf));
        // 22 0115
        gbc.setState(0xc019, 0xf8f7, 0x93e0, 0x225a, 0xb10d, 0xeab3, 0x0, 0x1);
        gbc.writeMem(0xc019, { 0x22 });
        gbc.writeMem(0xeab3, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf8f7, gbc.sp());
        EXPECT(0xc01a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xc019));
        EXPECT(0x93, gbc.readMem(0xeab3));
        // 22 0117
        gbc.setState(0x8ae3, 0x39c2, 0x7ac0, 0x5be9, 0xe864, 0xa011, 0x1, 0x1);
        gbc.writeMem(0x8ae3, { 0x22 });
        gbc.writeMem(0xa011, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x39c2, gbc.sp());
        EXPECT(0x8ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8ae3));
        EXPECT(0x7a, gbc.readMem(0xa011));
        // 22 0119
        gbc.setState(0x7a38, 0x1f1d, 0xad10, 0x9501, 0xd65b, 0x9d5e, 0x1, 0x1);
        gbc.writeMem(0x7a38, { 0x22 });
        gbc.writeMem(0x9d5e, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1f1d, gbc.sp());
        EXPECT(0x7a39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x9d5e));
        // 22 0127
        gbc.setState(0x33c8, 0xc531, 0x2690, 0x9224, 0x3020, 0xf930, 0x0, 0x0);
        gbc.writeMem(0x33c8, { 0x22 });
        gbc.writeMem(0xf930, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc531, gbc.sp());
        EXPECT(0x33c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xf930));
        // 22 0128
        gbc.setState(0xbfb9, 0x4db, 0x4060, 0x23d4, 0xd5fc, 0xedbd, 0x1, 0x1);
        gbc.writeMem(0xbfb9, { 0x22 });
        gbc.writeMem(0xedbd, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4db, gbc.sp());
        EXPECT(0xbfba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xbfb9));
        EXPECT(0x40, gbc.readMem(0xedbd));
        // 22 0129
        gbc.setState(0x697d, 0x72ef, 0x1490, 0x14dd, 0x5964, 0xbdf2, 0x0, 0x1);
        gbc.writeMem(0x697d, { 0x22 });
        gbc.writeMem(0xbdf2, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x72ef, gbc.sp());
        EXPECT(0x697e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbdf2));
        // 22 012B
        gbc.setState(0xdf02, 0x831f, 0xf0a0, 0x3818, 0xd118, 0xde31, 0x0, 0x1);
        gbc.writeMem(0xde31, { 0x0 });
        gbc.writeMem(0xdf02, { 0x22 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x831f, gbc.sp());
        EXPECT(0xdf03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xde31));
        EXPECT(0x22, gbc.readMem(0xdf02));
        // 22 012C
        gbc.setState(0xbb8e, 0x6a99, 0xc8a0, 0x6dd8, 0xf916, 0x8f72, 0x1, 0x1);
        gbc.writeMem(0x8f72, { 0x0 });
        gbc.writeMem(0xbb8e, { 0x22 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6a99, gbc.sp());
        EXPECT(0xbb8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8f72));
        EXPECT(0x22, gbc.readMem(0xbb8e));
        // 22 012E
        gbc.setState(0x8b14, 0x41c3, 0x64d0, 0xe047, 0x20c7, 0xed8f, 0x0, 0x0);
        gbc.writeMem(0x8b14, { 0x22 });
        gbc.writeMem(0xed8f, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x41c3, gbc.sp());
        EXPECT(0x8b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8b14));
        EXPECT(0x64, gbc.readMem(0xed8f));
        // 22 0130
        gbc.setState(0x60b0, 0xee1c, 0x57a0, 0x7d8e, 0x4483, 0xaa93, 0x0, 0x1);
        gbc.writeMem(0x60b0, { 0x22 });
        gbc.writeMem(0xaa93, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xee1c, gbc.sp());
        EXPECT(0x60b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xaa93));
        // 22 0131
        gbc.setState(0x85c7, 0x97be, 0x76a0, 0x888d, 0x5737, 0x991a, 0x0, 0x0);
        gbc.writeMem(0x85c7, { 0x22 });
        gbc.writeMem(0x991a, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x97be, gbc.sp());
        EXPECT(0x85c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x85c7));
        EXPECT(0x76, gbc.readMem(0x991a));
        // 22 0132
        gbc.setState(0x32ad, 0x1502, 0xe790, 0x4432, 0xcaf8, 0x956d, 0x1, 0x0);
        gbc.writeMem(0x32ad, { 0x22 });
        gbc.writeMem(0x956d, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1502, gbc.sp());
        EXPECT(0x32ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x956d));
        // 22 0133
        gbc.setState(0x865, 0xa8ad, 0xfd20, 0xbf94, 0x9353, 0xccef, 0x0, 0x1);
        gbc.writeMem(0x865, { 0x22 });
        gbc.writeMem(0xccef, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa8ad, gbc.sp());
        EXPECT(0x866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xccef));
        // 22 0134
        gbc.setState(0x8e93, 0x2a9, 0x80, 0x99d3, 0x65e6, 0x4a9b, 0x1, 0x0);
        gbc.writeMem(0x4a9b, { 0x0 });
        gbc.writeMem(0x8e93, { 0x22 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2a9, gbc.sp());
        EXPECT(0x8e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8e93));
        // 22 0135
        gbc.setState(0x79e7, 0x8b84, 0x5bd0, 0x1557, 0x7116, 0xade5, 0x0, 0x1);
        gbc.writeMem(0x79e7, { 0x22 });
        gbc.writeMem(0xade5, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8b84, gbc.sp());
        EXPECT(0x79e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xade5));
        // 22 0138
        gbc.setState(0x59d1, 0xa8bf, 0x50e0, 0x5f9c, 0xd74b, 0xbcfc, 0x1, 0x1);
        gbc.writeMem(0x59d1, { 0x22 });
        gbc.writeMem(0xbcfc, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa8bf, gbc.sp());
        EXPECT(0x59d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbcfc));
        // 22 0139
        gbc.setState(0x4df7, 0x5a49, 0x7a00, 0x57e0, 0x422b, 0xe44b, 0x1, 0x0);
        gbc.writeMem(0x4df7, { 0x22 });
        gbc.writeMem(0xe44b, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5a49, gbc.sp());
        EXPECT(0x4df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe44b));
        // 22 013A
        gbc.setState(0xd323, 0x5b93, 0xa60, 0xca, 0xa5b8, 0xa22d, 0x1, 0x0);
        gbc.writeMem(0xa22d, { 0x0 });
        gbc.writeMem(0xd323, { 0x22 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5b93, gbc.sp());
        EXPECT(0xd324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa22d));
        EXPECT(0x22, gbc.readMem(0xd323));
        // 22 013E
        gbc.setState(0x61a4, 0x8420, 0x2330, 0xad6c, 0xae9d, 0xb672, 0x0, 0x0);
        gbc.writeMem(0x61a4, { 0x22 });
        gbc.writeMem(0xb672, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8420, gbc.sp());
        EXPECT(0x61a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xb672));
        // 22 0140
        gbc.setState(0x90f2, 0x5b0f, 0x5600, 0xbd, 0x7af6, 0xc29f, 0x1, 0x0);
        gbc.writeMem(0x90f2, { 0x22 });
        gbc.writeMem(0xc29f, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5b0f, gbc.sp());
        EXPECT(0x90f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x90f2));
        EXPECT(0x56, gbc.readMem(0xc29f));
        // 22 0141
        gbc.setState(0x52ad, 0x1a72, 0xb490, 0xbbdf, 0x820d, 0xc398, 0x1, 0x1);
        gbc.writeMem(0x52ad, { 0x22 });
        gbc.writeMem(0xc398, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1a72, gbc.sp());
        EXPECT(0x52ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xc398));
        // 22 0142
        gbc.setState(0xa6d0, 0x6d1a, 0x1830, 0x1dec, 0x6e5f, 0xa6a5, 0x0, 0x0);
        gbc.writeMem(0xa6a5, { 0x0 });
        gbc.writeMem(0xa6d0, { 0x22 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6d1a, gbc.sp());
        EXPECT(0xa6d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xa6a5));
        EXPECT(0x22, gbc.readMem(0xa6d0));
        // 22 0143
        gbc.setState(0xc7c7, 0x786b, 0x60, 0xb0cd, 0x4642, 0x1d5e, 0x1, 0x0);
        gbc.writeMem(0x1d5e, { 0x0 });
        gbc.writeMem(0xc7c7, { 0x22 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x786b, gbc.sp());
        EXPECT(0xc7c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xc7c7));
        // 22 0144
        gbc.setState(0x5d4b, 0xa5f4, 0x85a0, 0x2096, 0x7fe, 0xdaf2, 0x1, 0x0);
        gbc.writeMem(0x5d4b, { 0x22 });
        gbc.writeMem(0xdaf2, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa5f4, gbc.sp());
        EXPECT(0x5d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdaf2));
        // 22 0146
        gbc.setState(0xb3c4, 0x2a16, 0x80f0, 0xa26b, 0xbffd, 0xcf01, 0x1, 0x1);
        gbc.writeMem(0xb3c4, { 0x22 });
        gbc.writeMem(0xcf01, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2a16, gbc.sp());
        EXPECT(0xb3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb3c4));
        EXPECT(0x80, gbc.readMem(0xcf01));
        // 22 0147
        gbc.setState(0x8fe4, 0xf4e0, 0x4680, 0x854, 0xae84, 0xbda4, 0x1, 0x1);
        gbc.writeMem(0x8fe4, { 0x22 });
        gbc.writeMem(0xbda4, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf4e0, gbc.sp());
        EXPECT(0x8fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8fe4));
        EXPECT(0x46, gbc.readMem(0xbda4));
        // 22 0149
        gbc.setState(0x3f58, 0xf49a, 0x3b0, 0x346, 0xe20, 0xa8ba, 0x1, 0x1);
        gbc.writeMem(0x3f58, { 0x22 });
        gbc.writeMem(0xa8ba, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf49a, gbc.sp());
        EXPECT(0x3f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa8ba));
        // 22 014C
        gbc.setState(0x7b9c, 0x3036, 0xa250, 0x8218, 0x99ad, 0xef77, 0x1, 0x1);
        gbc.writeMem(0x7b9c, { 0x22 });
        gbc.writeMem(0xef77, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3036, gbc.sp());
        EXPECT(0x7b9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xef77));
        // 22 014D
        gbc.setState(0x364a, 0xf833, 0xa750, 0x8621, 0xd1c2, 0xf7d5, 0x1, 0x0);
        gbc.writeMem(0x364a, { 0x22 });
        gbc.writeMem(0xf7d5, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf833, gbc.sp());
        EXPECT(0x364b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xf7d5));
        // 22 014F
        gbc.setState(0xa35a, 0xc42a, 0x4540, 0xd12e, 0x19fa, 0xbf5e, 0x0, 0x1);
        gbc.writeMem(0xa35a, { 0x22 });
        gbc.writeMem(0xbf5e, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc42a, gbc.sp());
        EXPECT(0xa35b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa35a));
        EXPECT(0x45, gbc.readMem(0xbf5e));
        // 22 0151
        gbc.setState(0x43a7, 0x5dbf, 0x7820, 0xc7e8, 0x377, 0xb747, 0x0, 0x1);
        gbc.writeMem(0x43a7, { 0x22 });
        gbc.writeMem(0xb747, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5dbf, gbc.sp());
        EXPECT(0x43a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb747));
        // 22 0153
        gbc.setState(0x993b, 0x28b1, 0xfa70, 0xd4b2, 0xadc0, 0xd082, 0x1, 0x1);
        gbc.writeMem(0x993b, { 0x22 });
        gbc.writeMem(0xd082, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x28b1, gbc.sp());
        EXPECT(0x993c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x993b));
        EXPECT(0xfa, gbc.readMem(0xd082));
        // 22 0156
        gbc.setState(0xa76, 0x4d43, 0x76d0, 0xb35d, 0x807a, 0xa1d3, 0x1, 0x0);
        gbc.writeMem(0xa76, { 0x22 });
        gbc.writeMem(0xa1d3, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4d43, gbc.sp());
        EXPECT(0xa77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa1d3));
        // 22 015A
        gbc.setState(0xbdfe, 0x6a9b, 0x5c20, 0x2275, 0x16a5, 0xb7e2, 0x0, 0x0);
        gbc.writeMem(0xb7e2, { 0x0 });
        gbc.writeMem(0xbdfe, { 0x22 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6a9b, gbc.sp());
        EXPECT(0xbdff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xb7e2));
        EXPECT(0x22, gbc.readMem(0xbdfe));
        // 22 015B
        gbc.setState(0xc643, 0x39af, 0x3810, 0xf8da, 0x6317, 0xf6e6, 0x0, 0x0);
        gbc.writeMem(0xc643, { 0x22 });
        gbc.writeMem(0xf6e6, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x39af, gbc.sp());
        EXPECT(0xc644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xc643));
        EXPECT(0x38, gbc.readMem(0xf6e6));
        // 22 015C
        gbc.setState(0x6ec, 0xe138, 0xc6b0, 0x80ea, 0xbdd7, 0xc7cd, 0x0, 0x1);
        gbc.writeMem(0x6ec, { 0x22 });
        gbc.writeMem(0xc7cd, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe138, gbc.sp());
        EXPECT(0x6ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc7cd));
        // 22 015E
        gbc.setState(0x5602, 0xf721, 0xaea0, 0x30af, 0x8a61, 0x8a8e, 0x1, 0x0);
        gbc.writeMem(0x5602, { 0x22 });
        gbc.writeMem(0x8a8e, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf721, gbc.sp());
        EXPECT(0x5603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0x8a8e));
        // 22 0160
        gbc.setState(0xd031, 0x50c2, 0x5650, 0x5908, 0x17d2, 0x8855, 0x0, 0x1);
        gbc.writeMem(0x8855, { 0x0 });
        gbc.writeMem(0xd031, { 0x22 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x50c2, gbc.sp());
        EXPECT(0xd032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8855));
        EXPECT(0x22, gbc.readMem(0xd031));
        // 22 0164
        gbc.setState(0xc1d4, 0xb970, 0x3f60, 0x454c, 0xe14d, 0xc152, 0x0, 0x1);
        gbc.writeMem(0xc152, { 0x0 });
        gbc.writeMem(0xc1d4, { 0x22 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb970, gbc.sp());
        EXPECT(0xc1d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc152));
        EXPECT(0x22, gbc.readMem(0xc1d4));
        // 22 0165
        gbc.setState(0x661d, 0x82cb, 0x7220, 0xfc72, 0x3b47, 0xa3e9, 0x0, 0x1);
        gbc.writeMem(0x661d, { 0x22 });
        gbc.writeMem(0xa3e9, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x82cb, gbc.sp());
        EXPECT(0x661e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa3e9));
        // 22 0167
        gbc.setState(0x4c0, 0xb5a1, 0x9dc0, 0x24c3, 0x7a70, 0xe212, 0x0, 0x0);
        gbc.writeMem(0x4c0, { 0x22 });
        gbc.writeMem(0xe212, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb5a1, gbc.sp());
        EXPECT(0x4c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe212));
        // 22 0169
        gbc.setState(0x2eff, 0x1254, 0x4e0, 0xe7cf, 0xb0fe, 0xc980, 0x1, 0x1);
        gbc.writeMem(0x2eff, { 0x22 });
        gbc.writeMem(0xc980, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1254, gbc.sp());
        EXPECT(0x2f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc980));
        // 22 016A
        gbc.setState(0x176c, 0x16c7, 0xee50, 0x8a0e, 0x63ff, 0xf676, 0x0, 0x0);
        gbc.writeMem(0x176c, { 0x22 });
        gbc.writeMem(0xf676, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x16c7, gbc.sp());
        EXPECT(0x176d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xf676));
        // 22 016B
        gbc.setState(0x3d18, 0xa3bc, 0x9630, 0xddba, 0xc68a, 0xc026, 0x0, 0x0);
        gbc.writeMem(0x3d18, { 0x22 });
        gbc.writeMem(0xc026, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa3bc, gbc.sp());
        EXPECT(0x3d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xc026));
        // 22 0171
        gbc.setState(0x93a, 0xf9fb, 0x5d10, 0x962a, 0xb6f3, 0xfaee, 0x0, 0x1);
        gbc.writeMem(0x93a, { 0x22 });
        gbc.writeMem(0xfaee, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf9fb, gbc.sp());
        EXPECT(0x93b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xfaee));
        // 22 0172
        gbc.setState(0x48e8, 0x3433, 0x6fe0, 0x758f, 0xa2c9, 0x86aa, 0x0, 0x0);
        gbc.writeMem(0x48e8, { 0x22 });
        gbc.writeMem(0x86aa, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3433, gbc.sp());
        EXPECT(0x48e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x86aa));
        // 22 0174
        gbc.setState(0xc904, 0x7882, 0x4e20, 0x1d33, 0x423d, 0xc75e, 0x1, 0x1);
        gbc.writeMem(0xc75e, { 0x0 });
        gbc.writeMem(0xc904, { 0x22 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7882, gbc.sp());
        EXPECT(0xc905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc75e));
        EXPECT(0x22, gbc.readMem(0xc904));
        // 22 0175
        gbc.setState(0x31fa, 0xb4da, 0xd010, 0x7e5e, 0x1f68, 0xe6e4, 0x1, 0x1);
        gbc.writeMem(0x31fa, { 0x22 });
        gbc.writeMem(0xe6e4, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb4da, gbc.sp());
        EXPECT(0x31fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe6e4));
        // 22 0177
        gbc.setState(0x9b59, 0x6b12, 0xcad0, 0x96e6, 0x27f9, 0x836c, 0x1, 0x1);
        gbc.writeMem(0x836c, { 0x0 });
        gbc.writeMem(0x9b59, { 0x22 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6b12, gbc.sp());
        EXPECT(0x9b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x836c));
        EXPECT(0x22, gbc.readMem(0x9b59));
        // 22 017B
        gbc.setState(0xdc21, 0x9b88, 0xdb0, 0x6903, 0xaf1d, 0xcfa5, 0x0, 0x1);
        gbc.writeMem(0xcfa5, { 0x0 });
        gbc.writeMem(0xdc21, { 0x22 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9b88, gbc.sp());
        EXPECT(0xdc22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xcfa5));
        EXPECT(0x22, gbc.readMem(0xdc21));
        // 22 017C
        gbc.setState(0x815f, 0xaf90, 0x3e0, 0x4f2b, 0x957d, 0xfbf3, 0x0, 0x1);
        gbc.writeMem(0x815f, { 0x22 });
        gbc.writeMem(0xfbf3, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xaf90, gbc.sp());
        EXPECT(0x8160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x815f));
        EXPECT(0x3, gbc.readMem(0xfbf3));
        // 22 017D
        gbc.setState(0x822f, 0xb8b2, 0x6a90, 0x15ce, 0xcf4d, 0xbe79, 0x0, 0x0);
        gbc.writeMem(0x822f, { 0x22 });
        gbc.writeMem(0xbe79, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb8b2, gbc.sp());
        EXPECT(0x8230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x822f));
        EXPECT(0x6a, gbc.readMem(0xbe79));
        // 22 017F
        gbc.setState(0x2fea, 0xfee7, 0x87b0, 0xe781, 0xaf4d, 0x945c, 0x1, 0x1);
        gbc.writeMem(0x2fea, { 0x22 });
        gbc.writeMem(0x945c, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfee7, gbc.sp());
        EXPECT(0x2feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x945c));
        // 22 0180
        gbc.setState(0x2663, 0xccc5, 0x1cd0, 0x6aad, 0x601d, 0xc34b, 0x0, 0x1);
        gbc.writeMem(0x2663, { 0x22 });
        gbc.writeMem(0xc34b, { 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xccc5, gbc.sp());
        EXPECT(0x2664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xc34b));
        // 22 0181
        gbc.setState(0xe2f, 0xe700, 0x4b30, 0xc1b3, 0xe760, 0xa739, 0x1, 0x1);
        gbc.writeMem(0xe2f, { 0x22 });
        gbc.writeMem(0xa739, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe700, gbc.sp());
        EXPECT(0xe30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa739));
        // 22 0183
        gbc.setState(0x4882, 0xcec5, 0xd700, 0x81d, 0x1cca, 0xb325, 0x0, 0x0);
        gbc.writeMem(0x4882, { 0x22 });
        gbc.writeMem(0xb325, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcec5, gbc.sp());
        EXPECT(0x4883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xb325));
        // 22 0190
        gbc.setState(0x2fd, 0xb0e2, 0xe290, 0xd4d5, 0x8b03, 0xac65, 0x1, 0x0);
        gbc.writeMem(0x2fd, { 0x22 });
        gbc.writeMem(0xac65, { 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb0e2, gbc.sp());
        EXPECT(0x2fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xac65));
        // 22 0191
        gbc.setState(0x349, 0xc2d4, 0x9360, 0xfce1, 0xe490, 0xd42d, 0x1, 0x0);
        gbc.writeMem(0x349, { 0x22 });
        gbc.writeMem(0xd42d, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc2d4, gbc.sp());
        EXPECT(0x34a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd42d));
        // 22 0192
        gbc.setState(0x26c0, 0x65e4, 0xccb0, 0x6b1c, 0xad2e, 0xf032, 0x0, 0x1);
        gbc.writeMem(0x26c0, { 0x22 });
        gbc.writeMem(0xf032, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x65e4, gbc.sp());
        EXPECT(0x26c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xf032));
        // 22 019C
        gbc.setState(0xc825, 0x189e, 0xe960, 0x4e4, 0x909, 0xbac2, 0x0, 0x0);
        gbc.writeMem(0xbac2, { 0x0 });
        gbc.writeMem(0xc825, { 0x22 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x189e, gbc.sp());
        EXPECT(0xc826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbac2));
        EXPECT(0x22, gbc.readMem(0xc825));
        // 22 019D
        gbc.setState(0x7de4, 0x351, 0x3500, 0x6f63, 0xce8c, 0x8af8, 0x0, 0x1);
        gbc.writeMem(0x7de4, { 0x22 });
        gbc.writeMem(0x8af8, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x351, gbc.sp());
        EXPECT(0x7de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8af8));
        // 22 019E
        gbc.setState(0xbdcf, 0xcddf, 0xf9c0, 0xf1dc, 0x93b, 0xc981, 0x0, 0x0);
        gbc.writeMem(0xbdcf, { 0x22 });
        gbc.writeMem(0xc981, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcddf, gbc.sp());
        EXPECT(0xbdd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xbdcf));
        EXPECT(0xf9, gbc.readMem(0xc981));
        // 22 01A2
        gbc.setState(0x94ca, 0xa305, 0x14b0, 0x5e8d, 0x5080, 0xb3fe, 0x0, 0x0);
        gbc.writeMem(0x94ca, { 0x22 });
        gbc.writeMem(0xb3fe, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa305, gbc.sp());
        EXPECT(0x94cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x94ca));
        EXPECT(0x14, gbc.readMem(0xb3fe));
        // 22 01A4
        gbc.setState(0x2ecf, 0x465c, 0x2c60, 0xdf01, 0xb32, 0xfca7, 0x1, 0x1);
        gbc.writeMem(0x2ecf, { 0x22 });
        gbc.writeMem(0xfca7, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x465c, gbc.sp());
        EXPECT(0x2ed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xfca7));
        // 22 01A5
        gbc.setState(0x3286, 0x8d7a, 0x5840, 0x621f, 0x9580, 0xf751, 0x1, 0x0);
        gbc.writeMem(0x3286, { 0x22 });
        gbc.writeMem(0xf751, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8d7a, gbc.sp());
        EXPECT(0x3287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xf751));
        // 22 01A8
        gbc.setState(0x24d0, 0x8d31, 0xb0e0, 0x8b8, 0x867, 0x82b7, 0x1, 0x0);
        gbc.writeMem(0x24d0, { 0x22 });
        gbc.writeMem(0x82b7, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8d31, gbc.sp());
        EXPECT(0x24d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x82b7));
        // 22 01A9
        gbc.setState(0x5fb4, 0xcc8c, 0x76c0, 0x9a28, 0x112f, 0xb4f1, 0x0, 0x1);
        gbc.writeMem(0x5fb4, { 0x22 });
        gbc.writeMem(0xb4f1, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcc8c, gbc.sp());
        EXPECT(0x5fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb4f1));
        // 22 01AE
        gbc.setState(0x2f87, 0x2104, 0x1d10, 0x3dc, 0xbef4, 0xb68a, 0x1, 0x1);
        gbc.writeMem(0x2f87, { 0x22 });
        gbc.writeMem(0xb68a, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2104, gbc.sp());
        EXPECT(0x2f88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb68a));
        // 22 01B0
        gbc.setState(0x71bd, 0x269c, 0xd530, 0x3623, 0xae2a, 0xc743, 0x1, 0x0);
        gbc.writeMem(0x71bd, { 0x22 });
        gbc.writeMem(0xc743, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x269c, gbc.sp());
        EXPECT(0x71be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xc743));
        // 22 01B4
        gbc.setState(0xcd50, 0x56e6, 0x8c80, 0x980e, 0x28dd, 0xd821, 0x0, 0x1);
        gbc.writeMem(0xcd50, { 0x22 });
        gbc.writeMem(0xd821, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x56e6, gbc.sp());
        EXPECT(0xcd51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xcd50));
        EXPECT(0x8c, gbc.readMem(0xd821));
        // 22 01B7
        gbc.setState(0xa421, 0x3ba3, 0xe2a0, 0xca65, 0x723d, 0x8657, 0x1, 0x1);
        gbc.writeMem(0x8657, { 0x0 });
        gbc.writeMem(0xa421, { 0x22 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3ba3, gbc.sp());
        EXPECT(0xa422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8657));
        EXPECT(0x22, gbc.readMem(0xa421));
        // 22 01B8
        gbc.setState(0x1da4, 0x54b1, 0x7400, 0x9309, 0x7313, 0xd859, 0x1, 0x0);
        gbc.writeMem(0x1da4, { 0x22 });
        gbc.writeMem(0xd859, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x54b1, gbc.sp());
        EXPECT(0x1da5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xd859));
        // 22 01B9
        gbc.setState(0x196, 0x8074, 0x4020, 0x6dbc, 0x4453, 0xf49b, 0x1, 0x1);
        gbc.writeMem(0x196, { 0x22 });
        gbc.writeMem(0xf49b, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8074, gbc.sp());
        EXPECT(0x197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xf49b));
        // 22 01BC
        gbc.setState(0x28b6, 0xf3df, 0x16c0, 0x221f, 0x7790, 0x8c61, 0x0, 0x1);
        gbc.writeMem(0x28b6, { 0x22 });
        gbc.writeMem(0x8c61, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf3df, gbc.sp());
        EXPECT(0x28b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8c61));
        // 22 01BF
        gbc.setState(0xca61, 0xf0ba, 0x1380, 0xdd81, 0x6755, 0xe4af, 0x1, 0x0);
        gbc.writeMem(0xca61, { 0x22 });
        gbc.writeMem(0xe4af, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf0ba, gbc.sp());
        EXPECT(0xca62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xca61));
        EXPECT(0x13, gbc.readMem(0xe4af));
        // 22 01C0
        gbc.setState(0x239c, 0xf01f, 0xc9d0, 0x6d84, 0x109, 0x8964, 0x1, 0x0);
        gbc.writeMem(0x239c, { 0x22 });
        gbc.writeMem(0x8964, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf01f, gbc.sp());
        EXPECT(0x239d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8964));
        // 22 01C2
        gbc.setState(0x3a2a, 0xdc52, 0xd530, 0x2e1c, 0xc0bb, 0xedc4, 0x0, 0x0);
        gbc.writeMem(0x3a2a, { 0x22 });
        gbc.writeMem(0xedc4, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdc52, gbc.sp());
        EXPECT(0x3a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xedc4));
        // 22 01C4
        gbc.setState(0xc839, 0xafe3, 0x2810, 0x123b, 0x7789, 0xb0ee, 0x1, 0x0);
        gbc.writeMem(0xb0ee, { 0x0 });
        gbc.writeMem(0xc839, { 0x22 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xafe3, gbc.sp());
        EXPECT(0xc83a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xb0ee));
        EXPECT(0x22, gbc.readMem(0xc839));
        // 22 01C5
        gbc.setState(0x290c, 0x67be, 0x6f10, 0xc59f, 0x1894, 0xbf5c, 0x0, 0x1);
        gbc.writeMem(0x290c, { 0x22 });
        gbc.writeMem(0xbf5c, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x67be, gbc.sp());
        EXPECT(0x290d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xbf5c));
        // 22 01C9
        gbc.setState(0x4980, 0xcc46, 0xd2e0, 0x3dca, 0x7144, 0xded4, 0x1, 0x1);
        gbc.writeMem(0x4980, { 0x22 });
        gbc.writeMem(0xded4, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcc46, gbc.sp());
        EXPECT(0x4981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xded4));
        // 22 01CA
        gbc.setState(0x72ec, 0x2b90, 0xfa90, 0xb3a, 0x1117, 0xa79b, 0x1, 0x1);
        gbc.writeMem(0x72ec, { 0x22 });
        gbc.writeMem(0xa79b, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2b90, gbc.sp());
        EXPECT(0x72ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa79b));
        // 22 01CB
        gbc.setState(0xca67, 0xa898, 0x5a90, 0x65fa, 0x7292, 0xf7aa, 0x1, 0x0);
        gbc.writeMem(0xca67, { 0x22 });
        gbc.writeMem(0xf7aa, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa898, gbc.sp());
        EXPECT(0xca68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xca67));
        EXPECT(0x5a, gbc.readMem(0xf7aa));
        // 22 01CD
        gbc.setState(0x3579, 0x784c, 0xa780, 0xf8bc, 0x32f3, 0x8c3e, 0x1, 0x0);
        gbc.writeMem(0x3579, { 0x22 });
        gbc.writeMem(0x8c3e, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x784c, gbc.sp());
        EXPECT(0x357a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8c3e));
        // 22 01CF
        gbc.setState(0xc33d, 0x6fa, 0x1a0, 0x14ca, 0xd370, 0xf821, 0x0, 0x0);
        gbc.writeMem(0xc33d, { 0x22 });
        gbc.writeMem(0xf821, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6fa, gbc.sp());
        EXPECT(0xc33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xc33d));
        EXPECT(0x1, gbc.readMem(0xf821));
        // 22 01D2
        gbc.setState(0xdd73, 0x76cf, 0x89b0, 0x5602, 0xeeb4, 0xd61b, 0x0, 0x0);
        gbc.writeMem(0xd61b, { 0x0 });
        gbc.writeMem(0xdd73, { 0x22 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x76cf, gbc.sp());
        EXPECT(0xdd74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd61b));
        EXPECT(0x22, gbc.readMem(0xdd73));
        // 22 01D4
        gbc.setState(0x1c70, 0xdd4e, 0xcb20, 0xf20b, 0x257e, 0xc1b3, 0x1, 0x1);
        gbc.writeMem(0x1c70, { 0x22 });
        gbc.writeMem(0xc1b3, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdd4e, gbc.sp());
        EXPECT(0x1c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b3));
        // 22 01D7
        gbc.setState(0x3614, 0xebe0, 0x95e0, 0x62cf, 0x5586, 0xea66, 0x1, 0x0);
        gbc.writeMem(0x3614, { 0x22 });
        gbc.writeMem(0xea66, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xebe0, gbc.sp());
        EXPECT(0x3615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xea66));
        // 22 01D8
        gbc.setState(0xa4ec, 0x1692, 0xa700, 0xf127, 0x2972, 0xb11f, 0x1, 0x0);
        gbc.writeMem(0xa4ec, { 0x22 });
        gbc.writeMem(0xb11f, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1692, gbc.sp());
        EXPECT(0xa4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa4ec));
        EXPECT(0xa7, gbc.readMem(0xb11f));
        // 22 01DC
        gbc.setState(0x34a9, 0x32f8, 0x74d0, 0x2df5, 0x8338, 0xdb71, 0x0, 0x0);
        gbc.writeMem(0x34a9, { 0x22 });
        gbc.writeMem(0xdb71, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x32f8, gbc.sp());
        EXPECT(0x34aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xdb71));
        // 22 01DD
        gbc.setState(0x5ff0, 0xb3ef, 0x35f0, 0x4b5f, 0x723a, 0xfa64, 0x0, 0x1);
        gbc.writeMem(0x5ff0, { 0x22 });
        gbc.writeMem(0xfa64, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb3ef, gbc.sp());
        EXPECT(0x5ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xfa64));
        // 22 01DE
        gbc.setState(0x5be4, 0xf722, 0xfd00, 0x3e29, 0x3bf2, 0xd389, 0x1, 0x0);
        gbc.writeMem(0x5be4, { 0x22 });
        gbc.writeMem(0xd389, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf722, gbc.sp());
        EXPECT(0x5be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xd389));
        // 22 01E0
        gbc.setState(0xc3db, 0x11e7, 0xfce0, 0x6b50, 0xb764, 0xf2b1, 0x0, 0x0);
        gbc.writeMem(0xc3db, { 0x22 });
        gbc.writeMem(0xf2b1, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x11e7, gbc.sp());
        EXPECT(0xc3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xc3db));
        EXPECT(0xfc, gbc.readMem(0xf2b1));
        // 22 01E2
        gbc.setState(0x5255, 0x4b20, 0x7890, 0x53de, 0xa631, 0xfdcc, 0x1, 0x1);
        gbc.writeMem(0x5255, { 0x22 });
        gbc.writeMem(0xfdcc, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4b20, gbc.sp());
        EXPECT(0x5256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xfdcc));
        // 22 01E3
        gbc.setState(0x4a7f, 0x877, 0xf5b0, 0x346b, 0x4d72, 0xd643, 0x1, 0x0);
        gbc.writeMem(0x4a7f, { 0x22 });
        gbc.writeMem(0xd643, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x877, gbc.sp());
        EXPECT(0x4a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd643));
        // 22 01EB
        gbc.setState(0xa796, 0xca66, 0x8c60, 0xde5a, 0xf88b, 0xd55f, 0x0, 0x0);
        gbc.writeMem(0xa796, { 0x22 });
        gbc.writeMem(0xd55f, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xca66, gbc.sp());
        EXPECT(0xa797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa796));
        EXPECT(0x8c, gbc.readMem(0xd55f));
        // 22 01F4
        gbc.setState(0x65ab, 0x8997, 0x3d00, 0x50e0, 0x26f4, 0xb0f6, 0x1, 0x1);
        gbc.writeMem(0x65ab, { 0x22 });
        gbc.writeMem(0xb0f6, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8997, gbc.sp());
        EXPECT(0x65ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xb0f6));
        // 22 01F5
        gbc.setState(0x8dd6, 0xf921, 0xad20, 0x95a0, 0x542, 0xc662, 0x0, 0x1);
        gbc.writeMem(0x8dd6, { 0x22 });
        gbc.writeMem(0xc662, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf921, gbc.sp());
        EXPECT(0x8dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8dd6));
        EXPECT(0xad, gbc.readMem(0xc662));
        // 22 01F7
        gbc.setState(0x418, 0x5012, 0xcd70, 0xa877, 0x128d, 0xb209, 0x1, 0x1);
        gbc.writeMem(0x418, { 0x22 });
        gbc.writeMem(0xb209, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5012, gbc.sp());
        EXPECT(0x419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xb209));
        // 22 01FB
        gbc.setState(0x4a6b, 0xd834, 0xa420, 0x63e7, 0x7745, 0xf34d, 0x1, 0x1);
        gbc.writeMem(0x4a6b, { 0x22 });
        gbc.writeMem(0xf34d, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd834, gbc.sp());
        EXPECT(0x4a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xf34d));
        // 22 01FC
        gbc.setState(0x56eb, 0xa6, 0xb7e0, 0xa43b, 0x64ee, 0x8402, 0x1, 0x0);
        gbc.writeMem(0x56eb, { 0x22 });
        gbc.writeMem(0x8402, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa6, gbc.sp());
        EXPECT(0x56ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8402));
        // 22 01FE
        gbc.setState(0xedba, 0x93a4, 0x6a30, 0x23bb, 0x371f, 0x8aed, 0x1, 0x1);
        gbc.writeMem(0x8aed, { 0x0 });
        gbc.writeMem(0xedba, { 0x22 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x93a4, gbc.sp());
        EXPECT(0xedbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8aed));
        EXPECT(0x22, gbc.readMem(0xedba));
        // 22 01FF
        gbc.setState(0xcf84, 0x8fd0, 0xf5e0, 0xfa6f, 0x647d, 0xc3b6, 0x1, 0x1);
        gbc.writeMem(0xc3b6, { 0x0 });
        gbc.writeMem(0xcf84, { 0x22 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8fd0, gbc.sp());
        EXPECT(0xcf85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xc3b6));
        EXPECT(0x22, gbc.readMem(0xcf84));
        // 22 0201
        gbc.setState(0x25d1, 0x84c7, 0xcd00, 0x6b5, 0xaba5, 0xc618, 0x0, 0x0);
        gbc.writeMem(0x25d1, { 0x22 });
        gbc.writeMem(0xc618, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x84c7, gbc.sp());
        EXPECT(0x25d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xc618));
        // 22 0204
        gbc.setState(0x18a2, 0x77a, 0xb710, 0x98c5, 0x7bd6, 0xd02d, 0x0, 0x0);
        gbc.writeMem(0x18a2, { 0x22 });
        gbc.writeMem(0xd02d, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x77a, gbc.sp());
        EXPECT(0x18a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd02d));
        // 22 0205
        gbc.setState(0xc3f3, 0x7b6f, 0x99a0, 0xb364, 0x3f57, 0xfd47, 0x1, 0x0);
        gbc.writeMem(0xc3f3, { 0x22 });
        gbc.writeMem(0xfd47, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7b6f, gbc.sp());
        EXPECT(0xc3f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xc3f3));
        EXPECT(0x99, gbc.readMem(0xfd47));
        // 22 0207
        gbc.setState(0xa382, 0x35ca, 0x2720, 0xa052, 0x98d8, 0xafd4, 0x1, 0x0);
        gbc.writeMem(0xa382, { 0x22 });
        gbc.writeMem(0xafd4, { 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x35ca, gbc.sp());
        EXPECT(0xa383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa382));
        EXPECT(0x27, gbc.readMem(0xafd4));
        // 22 0208
        gbc.setState(0xde43, 0xb18c, 0xc410, 0xe054, 0xaed1, 0xa187, 0x1, 0x1);
        gbc.writeMem(0xa187, { 0x0 });
        gbc.writeMem(0xde43, { 0x22 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb18c, gbc.sp());
        EXPECT(0xde44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xa187));
        EXPECT(0x22, gbc.readMem(0xde43));
        // 22 0209
        gbc.setState(0x16ee, 0x6dde, 0x97c0, 0x2d0f, 0xbbd, 0x9909, 0x1, 0x0);
        gbc.writeMem(0x16ee, { 0x22 });
        gbc.writeMem(0x9909, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6dde, gbc.sp());
        EXPECT(0x16ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9909));
        // 22 020B
        gbc.setState(0x70f, 0xa538, 0xc60, 0x816e, 0x5474, 0xf5f6, 0x0, 0x0);
        gbc.writeMem(0x70f, { 0x22 });
        gbc.writeMem(0xf5f6, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa538, gbc.sp());
        EXPECT(0x710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xf5f6));
        // 22 020E
        gbc.setState(0x9bc7, 0xf832, 0x7050, 0x9081, 0xbcdc, 0xe0bd, 0x0, 0x0);
        gbc.writeMem(0x9bc7, { 0x22 });
        gbc.writeMem(0xe0bd, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf832, gbc.sp());
        EXPECT(0x9bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9bc7));
        EXPECT(0x70, gbc.readMem(0xe0bd));
        // 22 0210
        gbc.setState(0x39d, 0x237c, 0x6f0, 0x9299, 0x4101, 0xb749, 0x0, 0x0);
        gbc.writeMem(0x39d, { 0x22 });
        gbc.writeMem(0xb749, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x237c, gbc.sp());
        EXPECT(0x39e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb749));
        // 22 0212
        gbc.setState(0x4004, 0xa4f3, 0x2e0, 0xabd3, 0x59f2, 0xb1ed, 0x0, 0x1);
        gbc.writeMem(0x4004, { 0x22 });
        gbc.writeMem(0xb1ed, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa4f3, gbc.sp());
        EXPECT(0x4005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xb1ed));
        // 22 0213
        gbc.setState(0xd650, 0x148f, 0xe700, 0xb6b0, 0x2497, 0x9248, 0x1, 0x0);
        gbc.writeMem(0x9248, { 0x0 });
        gbc.writeMem(0xd650, { 0x22 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x148f, gbc.sp());
        EXPECT(0xd651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9248));
        EXPECT(0x22, gbc.readMem(0xd650));
        // 22 0214
        gbc.setState(0xcf4b, 0x8774, 0x30c0, 0x7c8c, 0xc498, 0xa77d, 0x0, 0x1);
        gbc.writeMem(0xa77d, { 0x0 });
        gbc.writeMem(0xcf4b, { 0x22 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8774, gbc.sp());
        EXPECT(0xcf4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xa77d));
        EXPECT(0x22, gbc.readMem(0xcf4b));
        // 22 0215
        gbc.setState(0xd7dd, 0xaee7, 0xa660, 0xc336, 0xc68d, 0x95b7, 0x1, 0x0);
        gbc.writeMem(0x95b7, { 0x0 });
        gbc.writeMem(0xd7dd, { 0x22 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xaee7, gbc.sp());
        EXPECT(0xd7de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x95b7));
        EXPECT(0x22, gbc.readMem(0xd7dd));
        // 22 0218
        gbc.setState(0x78e0, 0x97b3, 0x1580, 0xc355, 0xf208, 0x9df5, 0x0, 0x1);
        gbc.writeMem(0x78e0, { 0x22 });
        gbc.writeMem(0x9df5, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x97b3, gbc.sp());
        EXPECT(0x78e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9df5));
        // 22 021B
        gbc.setState(0x2cf, 0x232b, 0x5af0, 0xb974, 0x112b, 0x80b2, 0x1, 0x1);
        gbc.writeMem(0x2cf, { 0x22 });
        gbc.writeMem(0x80b2, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x232b, gbc.sp());
        EXPECT(0x2d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x80b2));
        // 22 021E
        gbc.setState(0xa47, 0x78c, 0x2270, 0xc233, 0x6e5f, 0x85dc, 0x0, 0x0);
        gbc.writeMem(0xa47, { 0x22 });
        gbc.writeMem(0x85dc, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x78c, gbc.sp());
        EXPECT(0xa48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x85dc));
        // 22 021F
        gbc.setState(0xada, 0x739e, 0x4850, 0x2e5c, 0xcc84, 0xe3db, 0x1, 0x1);
        gbc.writeMem(0xada, { 0x22 });
        gbc.writeMem(0xe3db, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x739e, gbc.sp());
        EXPECT(0xadb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe3db));
        // 22 0220
        gbc.setState(0x150b, 0x63f9, 0x7a80, 0x2158, 0x44e8, 0xc99e, 0x0, 0x0);
        gbc.writeMem(0x150b, { 0x22 });
        gbc.writeMem(0xc99e, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x63f9, gbc.sp());
        EXPECT(0x150c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc99e));
        // 22 0223
        gbc.setState(0x13b9, 0xbbbb, 0xd760, 0x4286, 0x5553, 0x9a13, 0x0, 0x1);
        gbc.writeMem(0x13b9, { 0x22 });
        gbc.writeMem(0x9a13, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbbbb, gbc.sp());
        EXPECT(0x13ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x9a13));
        // 22 0224
        gbc.setState(0x1ff0, 0x40fb, 0xfec0, 0x4f0e, 0x2460, 0xb11b, 0x0, 0x1);
        gbc.writeMem(0x1ff0, { 0x22 });
        gbc.writeMem(0xb11b, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x40fb, gbc.sp());
        EXPECT(0x1ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb11b));
        // 22 0225
        gbc.setState(0xde5e, 0x9a31, 0x2330, 0x8a01, 0xf61e, 0xc2af, 0x0, 0x0);
        gbc.writeMem(0xc2af, { 0x0 });
        gbc.writeMem(0xde5e, { 0x22 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9a31, gbc.sp());
        EXPECT(0xde5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xc2af));
        EXPECT(0x22, gbc.readMem(0xde5e));
        // 22 0227
        gbc.setState(0xb36f, 0x1b68, 0x4bd0, 0x66e4, 0xc487, 0xdb9a, 0x1, 0x1);
        gbc.writeMem(0xb36f, { 0x22 });
        gbc.writeMem(0xdb9a, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1b68, gbc.sp());
        EXPECT(0xb370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb36f));
        EXPECT(0x4b, gbc.readMem(0xdb9a));
        // 22 022B
        gbc.setState(0xc979, 0x5a85, 0x26b0, 0x7238, 0x47d1, 0xa008, 0x1, 0x0);
        gbc.writeMem(0xa008, { 0x0 });
        gbc.writeMem(0xc979, { 0x22 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5a85, gbc.sp());
        EXPECT(0xc97a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa008));
        EXPECT(0x22, gbc.readMem(0xc979));
        // 22 022C
        gbc.setState(0x40de, 0x4242, 0xcf70, 0x13c0, 0x26c, 0xc185, 0x0, 0x0);
        gbc.writeMem(0x40de, { 0x22 });
        gbc.writeMem(0xc185, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4242, gbc.sp());
        EXPECT(0x40df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xc185));
        // 22 022E
        gbc.setState(0xef9e, 0x41d0, 0xd960, 0xbb30, 0xf3fc, 0xa721, 0x0, 0x1);
        gbc.writeMem(0xa721, { 0x0 });
        gbc.writeMem(0xef9e, { 0x22 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x41d0, gbc.sp());
        EXPECT(0xef9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa721));
        EXPECT(0x22, gbc.readMem(0xef9e));
        // 22 0231
        gbc.setState(0x9f17, 0x6253, 0xad90, 0xc40f, 0x4941, 0x88e5, 0x0, 0x1);
        gbc.writeMem(0x88e5, { 0x0 });
        gbc.writeMem(0x9f17, { 0x22 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6253, gbc.sp());
        EXPECT(0x9f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x88e5));
        EXPECT(0x22, gbc.readMem(0x9f17));
        // 22 0237
        gbc.setState(0x8fe0, 0xe8c2, 0x5030, 0x2cc, 0x134b, 0x909c, 0x1, 0x0);
        gbc.writeMem(0x8fe0, { 0x22 });
        gbc.writeMem(0x909c, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe8c2, gbc.sp());
        EXPECT(0x8fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8fe0));
        EXPECT(0x50, gbc.readMem(0x909c));
        // 22 023A
        gbc.setState(0xaf54, 0x6849, 0x7a30, 0x9af0, 0x1d8, 0xb764, 0x1, 0x1);
        gbc.writeMem(0xaf54, { 0x22 });
        gbc.writeMem(0xb764, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6849, gbc.sp());
        EXPECT(0xaf55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xaf54));
        EXPECT(0x7a, gbc.readMem(0xb764));
        // 22 023B
        gbc.setState(0x2d50, 0xc695, 0x3490, 0x6064, 0xb3c5, 0xa281, 0x0, 0x0);
        gbc.writeMem(0x2d50, { 0x22 });
        gbc.writeMem(0xa281, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc695, gbc.sp());
        EXPECT(0x2d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xa281));
        // 22 023E
        gbc.setState(0x3ec8, 0x9004, 0x83a0, 0xb126, 0xf848, 0xfb7f, 0x0, 0x1);
        gbc.writeMem(0x3ec8, { 0x22 });
        gbc.writeMem(0xfb7f, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9004, gbc.sp());
        EXPECT(0x3ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xfb7f));
        // 22 0241
        gbc.setState(0x609f, 0x4101, 0x40, 0x9600, 0x1494, 0x2b2b, 0x1, 0x0);
        gbc.writeMem(0x2b2b, { 0x0 });
        gbc.writeMem(0x609f, { 0x22 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4101, gbc.sp());
        EXPECT(0x60a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 22 0243
        gbc.setState(0xa9de, 0x9bc4, 0xac0, 0x3463, 0xbf8b, 0xc696, 0x0, 0x0);
        gbc.writeMem(0xa9de, { 0x22 });
        gbc.writeMem(0xc696, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9bc4, gbc.sp());
        EXPECT(0xa9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa9de));
        EXPECT(0xa, gbc.readMem(0xc696));
        // 22 0245
        gbc.setState(0x3fe0, 0x3a06, 0x8060, 0xb255, 0x1637, 0x8e74, 0x1, 0x1);
        gbc.writeMem(0x3fe0, { 0x22 });
        gbc.writeMem(0x8e74, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3a06, gbc.sp());
        EXPECT(0x3fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8e74));
        // 22 0247
        gbc.setState(0xc26b, 0xbbab, 0xe7e0, 0xa557, 0xf2c1, 0xe8e4, 0x1, 0x0);
        gbc.writeMem(0xc26b, { 0x22 });
        gbc.writeMem(0xe8e4, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbbab, gbc.sp());
        EXPECT(0xc26c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xc26b));
        EXPECT(0xe7, gbc.readMem(0xe8e4));
        // 22 0249
        gbc.setState(0x5b3c, 0x54bf, 0x58e0, 0x644b, 0xefce, 0x9f51, 0x0, 0x0);
        gbc.writeMem(0x5b3c, { 0x22 });
        gbc.writeMem(0x9f51, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x54bf, gbc.sp());
        EXPECT(0x5b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9f51));
        // 22 024A
        gbc.setState(0x30a1, 0xc21a, 0x6ef0, 0x903e, 0x263, 0xede8, 0x1, 0x0);
        gbc.writeMem(0x30a1, { 0x22 });
        gbc.writeMem(0xede8, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc21a, gbc.sp());
        EXPECT(0x30a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xede8));
        // 22 024C
        gbc.setState(0xeffd, 0x2bcd, 0x8210, 0x18ef, 0x888, 0x876d, 0x1, 0x1);
        gbc.writeMem(0x876d, { 0x0 });
        gbc.writeMem(0xeffd, { 0x22 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2bcd, gbc.sp());
        EXPECT(0xeffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x876d));
        EXPECT(0x22, gbc.readMem(0xeffd));
        // 22 0252
        gbc.setState(0xea80, 0xeba5, 0x7ad0, 0x245a, 0xc227, 0xe09d, 0x0, 0x1);
        gbc.writeMem(0xe09d, { 0x0 });
        gbc.writeMem(0xea80, { 0x22 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xeba5, gbc.sp());
        EXPECT(0xea81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe09d));
        EXPECT(0x22, gbc.readMem(0xea80));
        // 22 0258
        gbc.setState(0x877b, 0x29e9, 0xf0b0, 0xd656, 0x8cf7, 0xa83f, 0x1, 0x1);
        gbc.writeMem(0x877b, { 0x22 });
        gbc.writeMem(0xa83f, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x29e9, gbc.sp());
        EXPECT(0x877c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x877b));
        EXPECT(0xf0, gbc.readMem(0xa83f));
        // 22 0259
        gbc.setState(0x8955, 0x3e9e, 0x80d0, 0x1071, 0x1066, 0xe26c, 0x1, 0x1);
        gbc.writeMem(0x8955, { 0x22 });
        gbc.writeMem(0xe26c, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3e9e, gbc.sp());
        EXPECT(0x8956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8955));
        EXPECT(0x80, gbc.readMem(0xe26c));
        // 22 025A
        gbc.setState(0x70f2, 0xa513, 0x5b20, 0x5745, 0x7fe7, 0x8daf, 0x1, 0x0);
        gbc.writeMem(0x70f2, { 0x22 });
        gbc.writeMem(0x8daf, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa513, gbc.sp());
        EXPECT(0x70f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8daf));
        // 22 025B
        gbc.setState(0x66d0, 0xa1a9, 0x5820, 0xd3f7, 0x8846, 0xfb54, 0x0, 0x0);
        gbc.writeMem(0x66d0, { 0x22 });
        gbc.writeMem(0xfb54, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa1a9, gbc.sp());
        EXPECT(0x66d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xfb54));
        // 22 025C
        gbc.setState(0x6386, 0x7b0c, 0x7fa0, 0xaa5, 0x2d97, 0x97e2, 0x1, 0x1);
        gbc.writeMem(0x6386, { 0x22 });
        gbc.writeMem(0x97e2, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7b0c, gbc.sp());
        EXPECT(0x6387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x97e2));
        // 22 0260
        gbc.setState(0x2117, 0x3732, 0x910, 0xb5ae, 0x42b0, 0xbbfa, 0x0, 0x1);
        gbc.writeMem(0x2117, { 0x22 });
        gbc.writeMem(0xbbfa, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3732, gbc.sp());
        EXPECT(0x2118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbbfa));
        // 22 0262
        gbc.setState(0x92b0, 0xbf2a, 0x2f0, 0xe2ff, 0x36fe, 0xcd99, 0x1, 0x0);
        gbc.writeMem(0x92b0, { 0x22 });
        gbc.writeMem(0xcd99, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbf2a, gbc.sp());
        EXPECT(0x92b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x92b0));
        EXPECT(0x2, gbc.readMem(0xcd99));
        // 22 0265
        gbc.setState(0x3a18, 0x3540, 0x86e0, 0xda1, 0x447d, 0x9f5b, 0x0, 0x1);
        gbc.writeMem(0x3a18, { 0x22 });
        gbc.writeMem(0x9f5b, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3540, gbc.sp());
        EXPECT(0x3a19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9f5b));
        // 22 0268
        gbc.setState(0x6d66, 0xdb59, 0xda00, 0xfdd4, 0x5ade, 0x858a, 0x1, 0x0);
        gbc.writeMem(0x6d66, { 0x22 });
        gbc.writeMem(0x858a, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdb59, gbc.sp());
        EXPECT(0x6d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x858a));
        // 22 026A
        gbc.setState(0xf71, 0xcfb1, 0xda20, 0x840a, 0x651e, 0xa1cd, 0x1, 0x1);
        gbc.writeMem(0xf71, { 0x22 });
        gbc.writeMem(0xa1cd, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcfb1, gbc.sp());
        EXPECT(0xf72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa1cd));
        // 22 026F
        gbc.setState(0x3346, 0x9915, 0xd6d0, 0x3a63, 0xe0f2, 0xa09f, 0x1, 0x0);
        gbc.writeMem(0x3346, { 0x22 });
        gbc.writeMem(0xa09f, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9915, gbc.sp());
        EXPECT(0x3347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa09f));
        // 22 0273
        gbc.setState(0xe5dd, 0xcc75, 0x11b0, 0xee03, 0x6270, 0xa6c0, 0x0, 0x0);
        gbc.writeMem(0xa6c0, { 0x0 });
        gbc.writeMem(0xe5dd, { 0x22 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcc75, gbc.sp());
        EXPECT(0xe5de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa6c0));
        EXPECT(0x22, gbc.readMem(0xe5dd));
        // 22 0275
        gbc.setState(0x1bf0, 0xfb29, 0xf4b0, 0xa81, 0x8d5, 0xaf3b, 0x1, 0x1);
        gbc.writeMem(0x1bf0, { 0x22 });
        gbc.writeMem(0xaf3b, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfb29, gbc.sp());
        EXPECT(0x1bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xaf3b));
        // 22 0276
        gbc.setState(0x31c6, 0x316b, 0x8660, 0x9e30, 0xba02, 0xdf8c, 0x1, 0x0);
        gbc.writeMem(0x31c6, { 0x22 });
        gbc.writeMem(0xdf8c, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x316b, gbc.sp());
        EXPECT(0x31c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xdf8c));
        // 22 0277
        gbc.setState(0x7404, 0x4d4e, 0x12a0, 0x6eaa, 0x7a48, 0x953e, 0x1, 0x0);
        gbc.writeMem(0x7404, { 0x22 });
        gbc.writeMem(0x953e, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4d4e, gbc.sp());
        EXPECT(0x7405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x953e));
        // 22 0279
        gbc.setState(0x2409, 0xc127, 0x8790, 0x1a79, 0x4bbd, 0xc028, 0x1, 0x0);
        gbc.writeMem(0x2409, { 0x22 });
        gbc.writeMem(0xc028, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc127, gbc.sp());
        EXPECT(0x240a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc028));
        // 22 027A
        gbc.setState(0x4f02, 0xc832, 0xf6b0, 0xf433, 0x907d, 0xbda4, 0x0, 0x1);
        gbc.writeMem(0x4f02, { 0x22 });
        gbc.writeMem(0xbda4, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc832, gbc.sp());
        EXPECT(0x4f03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xbda4));
        // 22 027B
        gbc.setState(0x3f33, 0x46f3, 0x2fa0, 0x50b9, 0xca6a, 0xa96d, 0x0, 0x0);
        gbc.writeMem(0x3f33, { 0x22 });
        gbc.writeMem(0xa96d, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x46f3, gbc.sp());
        EXPECT(0x3f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa96d));
        // 22 027D
        gbc.setState(0x275a, 0xdfb0, 0x7f30, 0xf7c8, 0x5896, 0xc599, 0x0, 0x0);
        gbc.writeMem(0x275a, { 0x22 });
        gbc.writeMem(0xc599, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdfb0, gbc.sp());
        EXPECT(0x275b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xc599));
        // 22 027E
        gbc.setState(0x27fa, 0x59ab, 0x83e0, 0xc28f, 0xcc3c, 0xca13, 0x0, 0x1);
        gbc.writeMem(0x27fa, { 0x22 });
        gbc.writeMem(0xca13, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x59ab, gbc.sp());
        EXPECT(0x27fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xca13));
        // 22 027F
        gbc.setState(0x3e4c, 0x31cb, 0x73f0, 0xdd72, 0x6b7b, 0xcf49, 0x0, 0x1);
        gbc.writeMem(0x3e4c, { 0x22 });
        gbc.writeMem(0xcf49, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x31cb, gbc.sp());
        EXPECT(0x3e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xcf49));
        // 22 0280
        gbc.setState(0x42ab, 0xe7ad, 0x9180, 0xd96a, 0xbd4a, 0xa65b, 0x1, 0x0);
        gbc.writeMem(0x42ab, { 0x22 });
        gbc.writeMem(0xa65b, { 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe7ad, gbc.sp());
        EXPECT(0x42ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa65b));
        // 22 0282
        gbc.setState(0xc5a3, 0xa4f, 0x4a20, 0x41c2, 0xa82b, 0x91a9, 0x0, 0x0);
        gbc.writeMem(0x91a9, { 0x0 });
        gbc.writeMem(0xc5a3, { 0x22 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa4f, gbc.sp());
        EXPECT(0xc5a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x91a9));
        EXPECT(0x22, gbc.readMem(0xc5a3));
        // 22 0286
        gbc.setState(0x4e6f, 0x7416, 0x89e0, 0x6aba, 0x20a1, 0xa5ec, 0x0, 0x1);
        gbc.writeMem(0x4e6f, { 0x22 });
        gbc.writeMem(0xa5ec, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7416, gbc.sp());
        EXPECT(0x4e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa5ec));
        // 22 0288
        gbc.setState(0xc16f, 0xcee6, 0xe480, 0x2d31, 0x6cad, 0xd567, 0x1, 0x1);
        gbc.writeMem(0xc16f, { 0x22 });
        gbc.writeMem(0xd567, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcee6, gbc.sp());
        EXPECT(0xc170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xc16f));
        EXPECT(0xe4, gbc.readMem(0xd567));
        // 22 028C
        gbc.setState(0xaec8, 0x7ed7, 0x580, 0x6979, 0x41cf, 0xc303, 0x0, 0x1);
        gbc.writeMem(0xaec8, { 0x22 });
        gbc.writeMem(0xc303, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7ed7, gbc.sp());
        EXPECT(0xaec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xaec8));
        EXPECT(0x5, gbc.readMem(0xc303));
        // 22 028D
        gbc.setState(0xb172, 0xbb70, 0x2490, 0xd79e, 0x7b7c, 0xe526, 0x0, 0x0);
        gbc.writeMem(0xb172, { 0x22 });
        gbc.writeMem(0xe526, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbb70, gbc.sp());
        EXPECT(0xb173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb172));
        EXPECT(0x24, gbc.readMem(0xe526));
        // 22 0296
        gbc.setState(0x46cc, 0xdb9d, 0xcfb0, 0x22b2, 0xdfcf, 0xb3a9, 0x0, 0x0);
        gbc.writeMem(0x46cc, { 0x22 });
        gbc.writeMem(0xb3a9, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdb9d, gbc.sp());
        EXPECT(0x46cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xb3a9));
        // 22 0299
        gbc.setState(0x9b13, 0x4d6d, 0xbe20, 0xf233, 0x138d, 0xef83, 0x0, 0x1);
        gbc.writeMem(0x9b13, { 0x22 });
        gbc.writeMem(0xef83, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4d6d, gbc.sp());
        EXPECT(0x9b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9b13));
        EXPECT(0xbe, gbc.readMem(0xef83));
        // 22 029A
        gbc.setState(0x928a, 0x7ea7, 0x4130, 0xbc13, 0x824c, 0xb25b, 0x1, 0x1);
        gbc.writeMem(0x928a, { 0x22 });
        gbc.writeMem(0xb25b, { 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7ea7, gbc.sp());
        EXPECT(0x928b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x928a));
        EXPECT(0x41, gbc.readMem(0xb25b));
        // 22 029B
        gbc.setState(0xbab4, 0x6083, 0x3780, 0xa167, 0x7b0b, 0xdb27, 0x0, 0x1);
        gbc.writeMem(0xbab4, { 0x22 });
        gbc.writeMem(0xdb27, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6083, gbc.sp());
        EXPECT(0xbab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xbab4));
        EXPECT(0x37, gbc.readMem(0xdb27));
        // 22 029C
        gbc.setState(0x892c, 0x175b, 0x8240, 0xf056, 0xe0bc, 0x872c, 0x1, 0x1);
        gbc.writeMem(0x872c, { 0x0 });
        gbc.writeMem(0x892c, { 0x22 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x175b, gbc.sp());
        EXPECT(0x892d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x872c));
        EXPECT(0x22, gbc.readMem(0x892c));
        // 22 029E
        gbc.setState(0x3406, 0x3e5b, 0x8f20, 0xd24, 0x9b10, 0xc97d, 0x1, 0x0);
        gbc.writeMem(0x3406, { 0x22 });
        gbc.writeMem(0xc97d, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3e5b, gbc.sp());
        EXPECT(0x3407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc97d));
        // 22 02A0
        gbc.setState(0x76d3, 0xcd78, 0x8370, 0xdf80, 0xfc63, 0xaec4, 0x1, 0x0);
        gbc.writeMem(0x76d3, { 0x22 });
        gbc.writeMem(0xaec4, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xcd78, gbc.sp());
        EXPECT(0x76d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xaec4));
        // 22 02A6
        gbc.setState(0xd7ad, 0x8f4e, 0x3b10, 0x7322, 0xd003, 0xa91c, 0x1, 0x1);
        gbc.writeMem(0xa91c, { 0x0 });
        gbc.writeMem(0xd7ad, { 0x22 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8f4e, gbc.sp());
        EXPECT(0xd7ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa91c));
        EXPECT(0x22, gbc.readMem(0xd7ad));
        // 22 02AA
        gbc.setState(0xfe3, 0x5dbd, 0xd220, 0x15b7, 0x4f6f, 0x8ff6, 0x1, 0x0);
        gbc.writeMem(0xfe3, { 0x22 });
        gbc.writeMem(0x8ff6, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5dbd, gbc.sp());
        EXPECT(0xfe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x8ff6));
        // 22 02AB
        gbc.setState(0xd709, 0x1153, 0xfcf0, 0xe002, 0x2ecf, 0xfdf6, 0x0, 0x1);
        gbc.writeMem(0xd709, { 0x22 });
        gbc.writeMem(0xfdf6, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1153, gbc.sp());
        EXPECT(0xd70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xd709));
        EXPECT(0xfc, gbc.readMem(0xfdf6));
        // 22 02AE
        gbc.setState(0x4a5f, 0xa091, 0x5700, 0xf7ca, 0x9d76, 0xba46, 0x1, 0x0);
        gbc.writeMem(0x4a5f, { 0x22 });
        gbc.writeMem(0xba46, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa091, gbc.sp());
        EXPECT(0x4a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xba46));
        // 22 02B2
        gbc.setState(0xd573, 0xa866, 0xaa60, 0x4fe, 0x1f9b, 0xd220, 0x1, 0x0);
        gbc.writeMem(0xd220, { 0x0 });
        gbc.writeMem(0xd573, { 0x22 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa866, gbc.sp());
        EXPECT(0xd574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd220));
        EXPECT(0x22, gbc.readMem(0xd573));
        // 22 02B4
        gbc.setState(0x277f, 0x610d, 0xc290, 0xd4c6, 0x562f, 0xba6f, 0x1, 0x1);
        gbc.writeMem(0x277f, { 0x22 });
        gbc.writeMem(0xba6f, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x610d, gbc.sp());
        EXPECT(0x2780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xba6f));
        // 22 02B5
        gbc.setState(0xafd3, 0x9008, 0x3ee0, 0xa945, 0x4fc4, 0xca51, 0x1, 0x0);
        gbc.writeMem(0xafd3, { 0x22 });
        gbc.writeMem(0xca51, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9008, gbc.sp());
        EXPECT(0xafd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xafd3));
        EXPECT(0x3e, gbc.readMem(0xca51));
        // 22 02B7
        gbc.setState(0xce4c, 0x6924, 0xf040, 0x5b8c, 0xe6cb, 0xe05a, 0x1, 0x0);
        gbc.writeMem(0xce4c, { 0x22 });
        gbc.writeMem(0xe05a, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6924, gbc.sp());
        EXPECT(0xce4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xce4c));
        EXPECT(0xf0, gbc.readMem(0xe05a));
        // 22 02B9
        gbc.setState(0xcfe7, 0x4987, 0xca90, 0x9187, 0x5513, 0x9805, 0x1, 0x1);
        gbc.writeMem(0x9805, { 0x0 });
        gbc.writeMem(0xcfe7, { 0x22 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4987, gbc.sp());
        EXPECT(0xcfe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x9805));
        EXPECT(0x22, gbc.readMem(0xcfe7));
        // 22 02BA
        gbc.setState(0xa66f, 0x13d6, 0xd680, 0x9d7, 0xd05e, 0xe564, 0x1, 0x0);
        gbc.writeMem(0xa66f, { 0x22 });
        gbc.writeMem(0xe564, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x13d6, gbc.sp());
        EXPECT(0xa670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa66f));
        EXPECT(0xd6, gbc.readMem(0xe564));
        // 22 02BF
        gbc.setState(0xd551, 0x2dd4, 0x82b0, 0x4668, 0x731b, 0xd384, 0x0, 0x1);
        gbc.writeMem(0xd384, { 0x0 });
        gbc.writeMem(0xd551, { 0x22 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2dd4, gbc.sp());
        EXPECT(0xd552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd384));
        EXPECT(0x22, gbc.readMem(0xd551));
        // 22 02C2
        gbc.setState(0x5491, 0x5d73, 0x20c0, 0xa946, 0x8f1b, 0x9e00, 0x1, 0x1);
        gbc.writeMem(0x5491, { 0x22 });
        gbc.writeMem(0x9e00, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5d73, gbc.sp());
        EXPECT(0x5492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9e00));
        // 22 02C3
        gbc.setState(0xe497, 0x52, 0x3de0, 0x6d82, 0xe1b1, 0xbdde, 0x1, 0x1);
        gbc.writeMem(0xbdde, { 0x0 });
        gbc.writeMem(0xe497, { 0x22 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x52, gbc.sp());
        EXPECT(0xe498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xbdde));
        EXPECT(0x22, gbc.readMem(0xe497));
        // 22 02C5
        gbc.setState(0x41a, 0x83a9, 0xf6e0, 0x8d3f, 0x57d4, 0x9eb9, 0x1, 0x1);
        gbc.writeMem(0x41a, { 0x22 });
        gbc.writeMem(0x9eb9, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x83a9, gbc.sp());
        EXPECT(0x41b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x9eb9));
        // 22 02C6
        gbc.setState(0x9fac, 0xf41a, 0x2e60, 0x7b63, 0xec01, 0xaf76, 0x0, 0x1);
        gbc.writeMem(0x9fac, { 0x22 });
        gbc.writeMem(0xaf76, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf41a, gbc.sp());
        EXPECT(0x9fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9fac));
        EXPECT(0x2e, gbc.readMem(0xaf76));
        // 22 02C7
        gbc.setState(0x48be, 0x99f2, 0xb1d0, 0x6abf, 0xad83, 0xfac6, 0x1, 0x0);
        gbc.writeMem(0x48be, { 0x22 });
        gbc.writeMem(0xfac6, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x99f2, gbc.sp());
        EXPECT(0x48bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xfac6));
        // 22 02C9
        gbc.setState(0xad4e, 0x4b48, 0xbb0, 0x7d7a, 0xb203, 0x8ebe, 0x1, 0x1);
        gbc.writeMem(0x8ebe, { 0x0 });
        gbc.writeMem(0xad4e, { 0x22 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4b48, gbc.sp());
        EXPECT(0xad4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8ebe));
        EXPECT(0x22, gbc.readMem(0xad4e));
        // 22 02CA
        gbc.setState(0x24bd, 0xc0ad, 0xf730, 0x8c00, 0xfce9, 0xfe65, 0x0, 0x0);
        gbc.writeMem(0x24bd, { 0x22 });
        gbc.writeMem(0xfe65, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc0ad, gbc.sp());
        EXPECT(0x24be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xfe65));
        // 22 02CD
        gbc.setState(0xb0c3, 0xf5ff, 0x40, 0x30b6, 0xd762, 0x7c29, 0x1, 0x0);
        gbc.writeMem(0x7c29, { 0x0 });
        gbc.writeMem(0xb0c3, { 0x22 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf5ff, gbc.sp());
        EXPECT(0xb0c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb0c3));
        // 22 02D0
        gbc.setState(0x39c6, 0x5107, 0xe20, 0xbb3, 0x9c8a, 0xd860, 0x0, 0x0);
        gbc.writeMem(0x39c6, { 0x22 });
        gbc.writeMem(0xd860, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5107, gbc.sp());
        EXPECT(0x39c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd860));
        // 22 02D1
        gbc.setState(0x2a20, 0x7163, 0x9a40, 0xa793, 0x1a7d, 0xe00a, 0x0, 0x1);
        gbc.writeMem(0x2a20, { 0x22 });
        gbc.writeMem(0xe00a, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7163, gbc.sp());
        EXPECT(0x2a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe00a));
        // 22 02D4
        gbc.setState(0xed79, 0xbc91, 0x68d0, 0x3ef0, 0xb063, 0xdae9, 0x1, 0x0);
        gbc.writeMem(0xdae9, { 0x0 });
        gbc.writeMem(0xed79, { 0x22 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbc91, gbc.sp());
        EXPECT(0xed7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdae9));
        EXPECT(0x22, gbc.readMem(0xed79));
        // 22 02D8
        gbc.setState(0xded8, 0xafea, 0x1d0, 0x99d2, 0x3778, 0xb137, 0x0, 0x0);
        gbc.writeMem(0xb137, { 0x0 });
        gbc.writeMem(0xded8, { 0x22 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xafea, gbc.sp());
        EXPECT(0xded9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xb137));
        EXPECT(0x22, gbc.readMem(0xded8));
        // 22 02D9
        gbc.setState(0xd65f, 0xb21e, 0xb6f0, 0x756, 0x4df0, 0xacb7, 0x0, 0x0);
        gbc.writeMem(0xacb7, { 0x0 });
        gbc.writeMem(0xd65f, { 0x22 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb21e, gbc.sp());
        EXPECT(0xd660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xacb7));
        EXPECT(0x22, gbc.readMem(0xd65f));
        // 22 02DA
        gbc.setState(0xa6cf, 0xd4c, 0xf8d0, 0x7406, 0xdd0b, 0xf0ac, 0x0, 0x0);
        gbc.writeMem(0xa6cf, { 0x22 });
        gbc.writeMem(0xf0ac, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd4c, gbc.sp());
        EXPECT(0xa6d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa6cf));
        EXPECT(0xf8, gbc.readMem(0xf0ac));
        // 22 02DB
        gbc.setState(0x65fe, 0x759e, 0x3150, 0xee6, 0x711f, 0xde53, 0x0, 0x0);
        gbc.writeMem(0x65fe, { 0x22 });
        gbc.writeMem(0xde53, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x759e, gbc.sp());
        EXPECT(0x65ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xde53));
        // 22 02DC
        gbc.setState(0x720c, 0x6d69, 0xadc0, 0x6128, 0x73cb, 0xefeb, 0x0, 0x1);
        gbc.writeMem(0x720c, { 0x22 });
        gbc.writeMem(0xefeb, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6d69, gbc.sp());
        EXPECT(0x720d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xefeb));
        // 22 02DE
        gbc.setState(0x4bca, 0x486c, 0x1c50, 0x5598, 0x30df, 0xee3b, 0x0, 0x1);
        gbc.writeMem(0x4bca, { 0x22 });
        gbc.writeMem(0xee3b, { 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x486c, gbc.sp());
        EXPECT(0x4bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xee3b));
        // 22 02DF
        gbc.setState(0x6e63, 0x8b06, 0x9fd0, 0xb2e, 0x356, 0xba67, 0x1, 0x0);
        gbc.writeMem(0x6e63, { 0x22 });
        gbc.writeMem(0xba67, { 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8b06, gbc.sp());
        EXPECT(0x6e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xba67));
        // 22 02E0
        gbc.setState(0x1db5, 0x4c02, 0xf860, 0xe7fc, 0xa7d7, 0xaec9, 0x1, 0x0);
        gbc.writeMem(0x1db5, { 0x22 });
        gbc.writeMem(0xaec9, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4c02, gbc.sp());
        EXPECT(0x1db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xaec9));
        // 22 02E1
        gbc.setState(0x3fd, 0xdaea, 0x9700, 0x4a42, 0xc54, 0xb717, 0x1, 0x1);
        gbc.writeMem(0x3fd, { 0x22 });
        gbc.writeMem(0xb717, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdaea, gbc.sp());
        EXPECT(0x3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb717));
        // 22 02E7
        gbc.setState(0x3b04, 0x34e4, 0x7fc0, 0xe882, 0xf235, 0xf89d, 0x0, 0x0);
        gbc.writeMem(0x3b04, { 0x22 });
        gbc.writeMem(0xf89d, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x34e4, gbc.sp());
        EXPECT(0x3b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xf89d));
        // 22 02E9
        gbc.setState(0xdd30, 0x620e, 0xc630, 0xf6dc, 0x10a8, 0xe70a, 0x1, 0x1);
        gbc.writeMem(0xdd30, { 0x22 });
        gbc.writeMem(0xe70a, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x620e, gbc.sp());
        EXPECT(0xdd31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xdd30));
        EXPECT(0xc6, gbc.readMem(0xe70a));
        // 22 02EA
        gbc.setState(0x285d, 0xcf1e, 0xecd0, 0x1de6, 0xd0b, 0xa9a6, 0x0, 0x0);
        gbc.writeMem(0x285d, { 0x22 });
        gbc.writeMem(0xa9a6, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcf1e, gbc.sp());
        EXPECT(0x285e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xa9a6));
        // 22 02EB
        gbc.setState(0x69b8, 0xa33c, 0x470, 0x9ac0, 0x81f1, 0xe016, 0x0, 0x0);
        gbc.writeMem(0x69b8, { 0x22 });
        gbc.writeMem(0xe016, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa33c, gbc.sp());
        EXPECT(0x69b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe016));
        // 22 02EC
        gbc.setState(0xccb3, 0xfea4, 0xb290, 0x1fbd, 0x7f01, 0xae19, 0x1, 0x1);
        gbc.writeMem(0xae19, { 0x0 });
        gbc.writeMem(0xccb3, { 0x22 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfea4, gbc.sp());
        EXPECT(0xccb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xae19));
        EXPECT(0x22, gbc.readMem(0xccb3));
        // 22 02EF
        gbc.setState(0x2174, 0x7016, 0x7750, 0x87e, 0x24e6, 0xb594, 0x1, 0x0);
        gbc.writeMem(0x2174, { 0x22 });
        gbc.writeMem(0xb594, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7016, gbc.sp());
        EXPECT(0x2175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xb594));
        // 22 02F2
        gbc.setState(0x8b06, 0x4101, 0x4a30, 0xb145, 0x41e3, 0xcf8d, 0x0, 0x0);
        gbc.writeMem(0x8b06, { 0x22 });
        gbc.writeMem(0xcf8d, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4101, gbc.sp());
        EXPECT(0x8b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8b06));
        EXPECT(0x4a, gbc.readMem(0xcf8d));
        // 22 02FA
        gbc.setState(0x7440, 0xa9af, 0x2f20, 0x929a, 0x824d, 0xfc98, 0x0, 0x1);
        gbc.writeMem(0x7440, { 0x22 });
        gbc.writeMem(0xfc98, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa9af, gbc.sp());
        EXPECT(0x7441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xfc98));
        // 22 02FB
        gbc.setState(0x302, 0x42ad, 0x94e0, 0x357e, 0x8c41, 0xb42b, 0x1, 0x1);
        gbc.writeMem(0x302, { 0x22 });
        gbc.writeMem(0xb42b, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x42ad, gbc.sp());
        EXPECT(0x303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb42b));
        // 22 02FD
        gbc.setState(0xa5b8, 0x1ecf, 0x2090, 0x6119, 0xdf30, 0xf8ac, 0x0, 0x1);
        gbc.writeMem(0xa5b8, { 0x22 });
        gbc.writeMem(0xf8ac, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1ecf, gbc.sp());
        EXPECT(0xa5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa5b8));
        EXPECT(0x20, gbc.readMem(0xf8ac));
        // 22 02FE
        gbc.setState(0x167c, 0xc983, 0x1df0, 0x268a, 0x81a0, 0xc035, 0x1, 0x1);
        gbc.writeMem(0x167c, { 0x22 });
        gbc.writeMem(0xc035, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc983, gbc.sp());
        EXPECT(0x167d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc035));
        // 22 02FF
        gbc.setState(0x73, 0xe5a6, 0x8890, 0x7bf9, 0x990, 0xd764, 0x1, 0x0);
        gbc.writeMem(0x73, { 0x22 });
        gbc.writeMem(0xd764, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe5a6, gbc.sp());
        EXPECT(0x74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd764));
        // 22 0301
        gbc.setState(0x7f3a, 0x1fd6, 0x6d20, 0x3d57, 0x872c, 0xc940, 0x1, 0x0);
        gbc.writeMem(0x7f3a, { 0x22 });
        gbc.writeMem(0xc940, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1fd6, gbc.sp());
        EXPECT(0x7f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc940));
        // 22 0302
        gbc.setState(0x516b, 0x948b, 0x9ba0, 0x1749, 0x71d2, 0xca4c, 0x0, 0x1);
        gbc.writeMem(0x516b, { 0x22 });
        gbc.writeMem(0xca4c, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x948b, gbc.sp());
        EXPECT(0x516c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xca4c));
        // 22 0304
        gbc.setState(0x198, 0xbd40, 0x72a0, 0xb674, 0x8e5d, 0xd445, 0x1, 0x1);
        gbc.writeMem(0x198, { 0x22 });
        gbc.writeMem(0xd445, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbd40, gbc.sp());
        EXPECT(0x199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xd445));
        // 22 0305
        gbc.setState(0xda00, 0xed0a, 0x2390, 0x8247, 0x9d3f, 0xbd6b, 0x0, 0x0);
        gbc.writeMem(0xbd6b, { 0x0 });
        gbc.writeMem(0xda00, { 0x22 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xed0a, gbc.sp());
        EXPECT(0xda01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xbd6b));
        EXPECT(0x22, gbc.readMem(0xda00));
        // 22 0306
        gbc.setState(0xd3c8, 0xd8f0, 0xb460, 0xe83d, 0xd5b, 0xa60b, 0x0, 0x1);
        gbc.writeMem(0xa60b, { 0x0 });
        gbc.writeMem(0xd3c8, { 0x22 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd8f0, gbc.sp());
        EXPECT(0xd3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xa60b));
        EXPECT(0x22, gbc.readMem(0xd3c8));
        // 22 0308
        gbc.setState(0x295f, 0x96f2, 0x8020, 0x9786, 0x94bb, 0xe92a, 0x0, 0x0);
        gbc.writeMem(0x295f, { 0x22 });
        gbc.writeMem(0xe92a, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x96f2, gbc.sp());
        EXPECT(0x2960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe92a));
        // 22 030C
        gbc.setState(0xe8b9, 0xf94e, 0xce90, 0xaa04, 0xe4c9, 0x852b, 0x0, 0x1);
        gbc.writeMem(0x852b, { 0x0 });
        gbc.writeMem(0xe8b9, { 0x22 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf94e, gbc.sp());
        EXPECT(0xe8ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x852b));
        EXPECT(0x22, gbc.readMem(0xe8b9));
        // 22 030D
        gbc.setState(0xbc33, 0x22ca, 0xed70, 0x93c8, 0xba13, 0xe6bb, 0x1, 0x1);
        gbc.writeMem(0xbc33, { 0x22 });
        gbc.writeMem(0xe6bb, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x22ca, gbc.sp());
        EXPECT(0xbc34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xbc33));
        EXPECT(0xed, gbc.readMem(0xe6bb));
        // 22 030E
        gbc.setState(0xeb27, 0xcb81, 0xde30, 0xb143, 0x79f5, 0x88bb, 0x1, 0x1);
        gbc.writeMem(0x88bb, { 0x0 });
        gbc.writeMem(0xeb27, { 0x22 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcb81, gbc.sp());
        EXPECT(0xeb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x88bb));
        EXPECT(0x22, gbc.readMem(0xeb27));
        // 22 030F
        gbc.setState(0x4939, 0xc99b, 0xa790, 0x426d, 0x1867, 0xea63, 0x0, 0x1);
        gbc.writeMem(0x4939, { 0x22 });
        gbc.writeMem(0xea63, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc99b, gbc.sp());
        EXPECT(0x493a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xea63));
        // 22 0311
        gbc.setState(0xce06, 0x355c, 0x9280, 0xb1cf, 0x6a1e, 0xb62c, 0x1, 0x0);
        gbc.writeMem(0xb62c, { 0x0 });
        gbc.writeMem(0xce06, { 0x22 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x355c, gbc.sp());
        EXPECT(0xce07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb62c));
        EXPECT(0x22, gbc.readMem(0xce06));
        // 22 0312
        gbc.setState(0xbb37, 0x2631, 0xc170, 0xe77b, 0x5620, 0xf462, 0x0, 0x0);
        gbc.writeMem(0xbb37, { 0x22 });
        gbc.writeMem(0xf462, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2631, gbc.sp());
        EXPECT(0xbb38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xbb37));
        EXPECT(0xc1, gbc.readMem(0xf462));
        // 22 0313
        gbc.setState(0x2b17, 0x4cf, 0x5050, 0x1b63, 0xf1f4, 0xb80a, 0x0, 0x0);
        gbc.writeMem(0x2b17, { 0x22 });
        gbc.writeMem(0xb80a, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4cf, gbc.sp());
        EXPECT(0x2b18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb80a));
        // 22 0314
        gbc.setState(0x6ccb, 0x4366, 0xdcd0, 0x73d8, 0x6bb5, 0x8398, 0x0, 0x1);
        gbc.writeMem(0x6ccb, { 0x22 });
        gbc.writeMem(0x8398, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4366, gbc.sp());
        EXPECT(0x6ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x8398));
        // 22 0315
        gbc.setState(0xb0f3, 0xb54e, 0x6110, 0xfec7, 0x7951, 0xcf00, 0x0, 0x0);
        gbc.writeMem(0xb0f3, { 0x22 });
        gbc.writeMem(0xcf00, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb54e, gbc.sp());
        EXPECT(0xb0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb0f3));
        EXPECT(0x61, gbc.readMem(0xcf00));
        // 22 0317
        gbc.setState(0xd655, 0xe9e6, 0x94b0, 0xb77d, 0x2ab9, 0x8cea, 0x1, 0x0);
        gbc.writeMem(0x8cea, { 0x0 });
        gbc.writeMem(0xd655, { 0x22 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe9e6, gbc.sp());
        EXPECT(0xd656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8cea));
        EXPECT(0x22, gbc.readMem(0xd655));
        // 22 0318
        gbc.setState(0xbe57, 0xedf2, 0xeff0, 0x4e5a, 0xed03, 0xc02d, 0x1, 0x1);
        gbc.writeMem(0xbe57, { 0x22 });
        gbc.writeMem(0xc02d, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xedf2, gbc.sp());
        EXPECT(0xbe58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xbe57));
        EXPECT(0xef, gbc.readMem(0xc02d));
        // 22 031D
        gbc.setState(0xb914, 0xf9ef, 0x30d0, 0x3ca8, 0xec6e, 0xe044, 0x0, 0x0);
        gbc.writeMem(0xb914, { 0x22 });
        gbc.writeMem(0xe044, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf9ef, gbc.sp());
        EXPECT(0xb915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb914));
        EXPECT(0x30, gbc.readMem(0xe044));
        // 22 031E
        gbc.setState(0xd78d, 0x4ec, 0x7e30, 0xbc6f, 0x4a4c, 0xf829, 0x0, 0x0);
        gbc.writeMem(0xd78d, { 0x22 });
        gbc.writeMem(0xf829, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4ec, gbc.sp());
        EXPECT(0xd78e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xd78d));
        EXPECT(0x7e, gbc.readMem(0xf829));
        // 22 031F
        gbc.setState(0xd1bb, 0x52a2, 0x6960, 0x71c9, 0x51df, 0xa159, 0x1, 0x1);
        gbc.writeMem(0xa159, { 0x0 });
        gbc.writeMem(0xd1bb, { 0x22 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x52a2, gbc.sp());
        EXPECT(0xd1bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa159));
        EXPECT(0x22, gbc.readMem(0xd1bb));
        // 22 0320
        gbc.setState(0xd831, 0x8cff, 0x9150, 0xf764, 0x3802, 0xb0cd, 0x0, 0x0);
        gbc.writeMem(0xb0cd, { 0x0 });
        gbc.writeMem(0xd831, { 0x22 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8cff, gbc.sp());
        EXPECT(0xd832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb0cd));
        EXPECT(0x22, gbc.readMem(0xd831));
        // 22 0321
        gbc.setState(0x41ee, 0x2558, 0xfe80, 0x983c, 0xb29b, 0x9c40, 0x0, 0x0);
        gbc.writeMem(0x41ee, { 0x22 });
        gbc.writeMem(0x9c40, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2558, gbc.sp());
        EXPECT(0x41ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9c40));
        // 22 0322
        gbc.setState(0x1c8, 0xb687, 0x33c0, 0xa87f, 0xb88c, 0xe00b, 0x1, 0x1);
        gbc.writeMem(0x1c8, { 0x22 });
        gbc.writeMem(0xe00b, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb687, gbc.sp());
        EXPECT(0x1c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe00b));
        // 22 0324
        gbc.setState(0x94f3, 0x62f1, 0x34c0, 0x3b95, 0xb6ae, 0x8fda, 0x1, 0x1);
        gbc.writeMem(0x8fda, { 0x0 });
        gbc.writeMem(0x94f3, { 0x22 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x62f1, gbc.sp());
        EXPECT(0x94f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8fda));
        EXPECT(0x22, gbc.readMem(0x94f3));
        // 22 0327
        gbc.setState(0x552a, 0xa55, 0x6950, 0xd533, 0x2904, 0xeb7c, 0x0, 0x1);
        gbc.writeMem(0x552a, { 0x22 });
        gbc.writeMem(0xeb7c, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa55, gbc.sp());
        EXPECT(0x552b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xeb7c));
        // 22 0328
        gbc.setState(0x1cdd, 0xdbe5, 0x9730, 0x78a3, 0xbe08, 0xa9c8, 0x0, 0x0);
        gbc.writeMem(0x1cdd, { 0x22 });
        gbc.writeMem(0xa9c8, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdbe5, gbc.sp());
        EXPECT(0x1cde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa9c8));
        // 22 032A
        gbc.setState(0x3b59, 0xa882, 0xcc50, 0x692e, 0xfbb3, 0xbdab, 0x0, 0x1);
        gbc.writeMem(0x3b59, { 0x22 });
        gbc.writeMem(0xbdab, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa882, gbc.sp());
        EXPECT(0x3b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xbdab));
        // 22 0330
        gbc.setState(0xae02, 0x4dd3, 0xc270, 0xa5f2, 0x827d, 0xd32d, 0x1, 0x0);
        gbc.writeMem(0xae02, { 0x22 });
        gbc.writeMem(0xd32d, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4dd3, gbc.sp());
        EXPECT(0xae03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xae02));
        EXPECT(0xc2, gbc.readMem(0xd32d));
        // 22 0331
        gbc.setState(0x6ada, 0xa0cd, 0x0, 0x2890, 0x5d6e, 0xed25, 0x1, 0x0);
        gbc.writeMem(0x6ada, { 0x22 });
        gbc.writeMem(0xed25, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa0cd, gbc.sp());
        EXPECT(0x6adb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xed25));
        // 22 0332
        gbc.setState(0x134b, 0x503e, 0x38e0, 0xad08, 0xa742, 0xf81f, 0x1, 0x1);
        gbc.writeMem(0x134b, { 0x22 });
        gbc.writeMem(0xf81f, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x503e, gbc.sp());
        EXPECT(0x134c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xf81f));
        // 22 0333
        gbc.setState(0x6666, 0x4dd8, 0x7580, 0x4da, 0xac69, 0xc5f7, 0x1, 0x1);
        gbc.writeMem(0x6666, { 0x22 });
        gbc.writeMem(0xc5f7, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4dd8, gbc.sp());
        EXPECT(0x6667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xc5f7));
        // 22 0336
        gbc.setState(0x2ee4, 0x47af, 0x6690, 0xa881, 0xd858, 0x9032, 0x1, 0x1);
        gbc.writeMem(0x2ee4, { 0x22 });
        gbc.writeMem(0x9032, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x47af, gbc.sp());
        EXPECT(0x2ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9032));
        // 22 0337
        gbc.setState(0xa354, 0x16e7, 0x920, 0x5821, 0x8a46, 0xf765, 0x0, 0x1);
        gbc.writeMem(0xa354, { 0x22 });
        gbc.writeMem(0xf765, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x16e7, gbc.sp());
        EXPECT(0xa355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa354));
        EXPECT(0x9, gbc.readMem(0xf765));
        // 22 0338
        gbc.setState(0x31c6, 0xb213, 0x5930, 0x855c, 0xc9fa, 0xcc51, 0x0, 0x1);
        gbc.writeMem(0x31c6, { 0x22 });
        gbc.writeMem(0xcc51, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb213, gbc.sp());
        EXPECT(0x31c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xcc51));
        // 22 0339
        gbc.setState(0x99da, 0x7d68, 0xf530, 0x4d29, 0xf0fe, 0xb0f9, 0x1, 0x1);
        gbc.writeMem(0x99da, { 0x22 });
        gbc.writeMem(0xb0f9, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7d68, gbc.sp());
        EXPECT(0x99db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x99da));
        EXPECT(0xf5, gbc.readMem(0xb0f9));
        // 22 033F
        gbc.setState(0xb7fe, 0x19c8, 0x7220, 0x4d4, 0xf5b2, 0xa7ad, 0x1, 0x0);
        gbc.writeMem(0xa7ad, { 0x0 });
        gbc.writeMem(0xb7fe, { 0x22 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x19c8, gbc.sp());
        EXPECT(0xb7ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa7ad));
        EXPECT(0x22, gbc.readMem(0xb7fe));
        // 22 0340
        gbc.setState(0x4776, 0xaf18, 0xb0, 0x1c2, 0x5038, 0xc90e, 0x0, 0x1);
        gbc.writeMem(0x4776, { 0x22 });
        gbc.writeMem(0xc90e, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xaf18, gbc.sp());
        EXPECT(0x4777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc90e));
        // 22 0341
        gbc.setState(0x6cbf, 0xfee9, 0x2b90, 0xf0fe, 0xe4a5, 0xe582, 0x1, 0x1);
        gbc.writeMem(0x6cbf, { 0x22 });
        gbc.writeMem(0xe582, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfee9, gbc.sp());
        EXPECT(0x6cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe582));
        // 22 0342
        gbc.setState(0xe010, 0x4d12, 0x650, 0xf3b3, 0x129f, 0xcf3c, 0x0, 0x0);
        gbc.writeMem(0xcf3c, { 0x0 });
        gbc.writeMem(0xe010, { 0x22 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4d12, gbc.sp());
        EXPECT(0xe011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xcf3c));
        EXPECT(0x22, gbc.readMem(0xe010));
        // 22 0343
        gbc.setState(0x51b2, 0xe2a5, 0x9950, 0x4ed, 0x7eb8, 0xbcc4, 0x1, 0x1);
        gbc.writeMem(0x51b2, { 0x22 });
        gbc.writeMem(0xbcc4, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe2a5, gbc.sp());
        EXPECT(0x51b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbcc4));
        // 22 0351
        gbc.setState(0xa078, 0x93e3, 0xe6c0, 0x32ed, 0x5038, 0xefb2, 0x1, 0x0);
        gbc.writeMem(0xa078, { 0x22 });
        gbc.writeMem(0xefb2, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x93e3, gbc.sp());
        EXPECT(0xa079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa078));
        EXPECT(0xe6, gbc.readMem(0xefb2));
        // 22 0352
        gbc.setState(0xe041, 0x74d8, 0xe040, 0xb84c, 0xcf7f, 0x98be, 0x0, 0x0);
        gbc.writeMem(0x98be, { 0x0 });
        gbc.writeMem(0xe041, { 0x22 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x74d8, gbc.sp());
        EXPECT(0xe042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x98be));
        EXPECT(0x22, gbc.readMem(0xe041));
        // 22 0353
        gbc.setState(0x9a4b, 0xd9f7, 0x4a20, 0xf77f, 0xf2a3, 0xfb68, 0x0, 0x1);
        gbc.writeMem(0x9a4b, { 0x22 });
        gbc.writeMem(0xfb68, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd9f7, gbc.sp());
        EXPECT(0x9a4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9a4b));
        EXPECT(0x4a, gbc.readMem(0xfb68));
        // 22 0354
        gbc.setState(0x1060, 0x80f0, 0x8720, 0x75b5, 0x6683, 0xe4b6, 0x0, 0x1);
        gbc.writeMem(0x1060, { 0x22 });
        gbc.writeMem(0xe4b6, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x80f0, gbc.sp());
        EXPECT(0x1061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe4b6));
        // 22 0356
        gbc.setState(0x634f, 0x6389, 0xd390, 0xff38, 0xecb7, 0xe289, 0x0, 0x1);
        gbc.writeMem(0x634f, { 0x22 });
        gbc.writeMem(0xe289, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6389, gbc.sp());
        EXPECT(0x6350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xe289));
        // 22 0358
        gbc.setState(0x21df, 0x7c02, 0x40a0, 0xedfc, 0x6b40, 0x87e2, 0x1, 0x0);
        gbc.writeMem(0x21df, { 0x22 });
        gbc.writeMem(0x87e2, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7c02, gbc.sp());
        EXPECT(0x21e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x87e2));
        // 22 0359
        gbc.setState(0xc51b, 0x7012, 0x4bb0, 0x95f1, 0xaf62, 0xcaec, 0x0, 0x0);
        gbc.writeMem(0xc51b, { 0x22 });
        gbc.writeMem(0xcaec, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7012, gbc.sp());
        EXPECT(0xc51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xc51b));
        EXPECT(0x4b, gbc.readMem(0xcaec));
        // 22 035B
        gbc.setState(0x153b, 0x4a36, 0x4220, 0x26ee, 0xe57e, 0xd1cd, 0x1, 0x1);
        gbc.writeMem(0x153b, { 0x22 });
        gbc.writeMem(0xd1cd, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4a36, gbc.sp());
        EXPECT(0x153c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd1cd));
        // 22 035C
        gbc.setState(0x2944, 0x8689, 0x26e0, 0x3152, 0x9d1b, 0xeb72, 0x1, 0x0);
        gbc.writeMem(0x2944, { 0x22 });
        gbc.writeMem(0xeb72, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8689, gbc.sp());
        EXPECT(0x2945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xeb72));
        // 22 0362
        gbc.setState(0x499b, 0xfc55, 0x9b20, 0xd7e5, 0xaf9d, 0x9636, 0x1, 0x0);
        gbc.writeMem(0x499b, { 0x22 });
        gbc.writeMem(0x9636, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfc55, gbc.sp());
        EXPECT(0x499c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9636));
        // 22 0363
        gbc.setState(0x9924, 0xb1a, 0x78f0, 0x40da, 0xf205, 0xe60d, 0x0, 0x1);
        gbc.writeMem(0x9924, { 0x22 });
        gbc.writeMem(0xe60d, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb1a, gbc.sp());
        EXPECT(0x9925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9924));
        EXPECT(0x78, gbc.readMem(0xe60d));
        // 22 0366
        gbc.setState(0x92bb, 0xf24a, 0x4630, 0x5615, 0xfe8e, 0x87fc, 0x0, 0x0);
        gbc.writeMem(0x87fc, { 0x0 });
        gbc.writeMem(0x92bb, { 0x22 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf24a, gbc.sp());
        EXPECT(0x92bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x87fc));
        EXPECT(0x22, gbc.readMem(0x92bb));
        // 22 0367
        gbc.setState(0xc3ae, 0x5dc6, 0x29b0, 0xf70f, 0xc535, 0xa249, 0x1, 0x0);
        gbc.writeMem(0xa249, { 0x0 });
        gbc.writeMem(0xc3ae, { 0x22 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5dc6, gbc.sp());
        EXPECT(0xc3af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa249));
        EXPECT(0x22, gbc.readMem(0xc3ae));
        // 22 036A
        gbc.setState(0x4458, 0x414c, 0x390, 0xa261, 0xe172, 0x91ed, 0x0, 0x1);
        gbc.writeMem(0x4458, { 0x22 });
        gbc.writeMem(0x91ed, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x414c, gbc.sp());
        EXPECT(0x4459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x91ed));
        // 22 036E
        gbc.setState(0x40ba, 0x775e, 0xc4a0, 0x6f79, 0x3456, 0xf678, 0x1, 0x1);
        gbc.writeMem(0x40ba, { 0x22 });
        gbc.writeMem(0xf678, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x775e, gbc.sp());
        EXPECT(0x40bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xf678));
        // 22 0371
        gbc.setState(0xa161, 0x3bad, 0x25b0, 0x87d7, 0x853a, 0xabfb, 0x0, 0x0);
        gbc.writeMem(0xa161, { 0x22 });
        gbc.writeMem(0xabfb, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3bad, gbc.sp());
        EXPECT(0xa162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa161));
        EXPECT(0x25, gbc.readMem(0xabfb));
        // 22 0373
        gbc.setState(0x58ca, 0xaac8, 0x1ce0, 0xccfe, 0xf875, 0xfb4c, 0x1, 0x1);
        gbc.writeMem(0x58ca, { 0x22 });
        gbc.writeMem(0xfb4c, { 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xaac8, gbc.sp());
        EXPECT(0x58cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xfb4c));
        // 22 0374
        gbc.setState(0x4e, 0xcca9, 0x430, 0x1a76, 0xde0d, 0xe215, 0x1, 0x1);
        gbc.writeMem(0x4e, { 0x22 });
        gbc.writeMem(0xe215, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcca9, gbc.sp());
        EXPECT(0x4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe215));
        // 22 0375
        gbc.setState(0xee4c, 0x2cab, 0x53b0, 0x1833, 0x15a4, 0xa72d, 0x1, 0x0);
        gbc.writeMem(0xa72d, { 0x0 });
        gbc.writeMem(0xee4c, { 0x22 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2cab, gbc.sp());
        EXPECT(0xee4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa72d));
        EXPECT(0x22, gbc.readMem(0xee4c));
        // 22 0376
        gbc.setState(0x1a35, 0x7a5, 0x63b0, 0x635a, 0xf4b1, 0x82e0, 0x0, 0x1);
        gbc.writeMem(0x1a35, { 0x22 });
        gbc.writeMem(0x82e0, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7a5, gbc.sp());
        EXPECT(0x1a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x82e0));
        // 22 037E
        gbc.setState(0x7fa0, 0x2d78, 0xd570, 0xaed9, 0xaf8d, 0xdc74, 0x0, 0x1);
        gbc.writeMem(0x7fa0, { 0x22 });
        gbc.writeMem(0xdc74, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2d78, gbc.sp());
        EXPECT(0x7fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xdc74));
        // 22 037F
        gbc.setState(0x88ab, 0xd7e7, 0xab50, 0xe4e7, 0x4adc, 0x92d3, 0x1, 0x0);
        gbc.writeMem(0x88ab, { 0x22 });
        gbc.writeMem(0x92d3, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd7e7, gbc.sp());
        EXPECT(0x88ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x88ab));
        EXPECT(0xab, gbc.readMem(0x92d3));
        // 22 0383
        gbc.setState(0xa862, 0x486d, 0x8c50, 0x8e29, 0xfc71, 0xf1a9, 0x0, 0x1);
        gbc.writeMem(0xa862, { 0x22 });
        gbc.writeMem(0xf1a9, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x486d, gbc.sp());
        EXPECT(0xa863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa862));
        EXPECT(0x8c, gbc.readMem(0xf1a9));
        // 22 0384
        gbc.setState(0x763f, 0x6991, 0x92b0, 0x942f, 0xfde1, 0x8f89, 0x1, 0x0);
        gbc.writeMem(0x763f, { 0x22 });
        gbc.writeMem(0x8f89, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6991, gbc.sp());
        EXPECT(0x7640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8f89));
        // 22 0385
        gbc.setState(0xeb11, 0x9abb, 0xeb80, 0x3f78, 0x3b04, 0xd1eb, 0x1, 0x1);
        gbc.writeMem(0xd1eb, { 0x0 });
        gbc.writeMem(0xeb11, { 0x22 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9abb, gbc.sp());
        EXPECT(0xeb12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xd1eb));
        EXPECT(0x22, gbc.readMem(0xeb11));
        // 22 038C
        gbc.setState(0xed7, 0x6796, 0xed60, 0xf30e, 0xe931, 0xbfdd, 0x1, 0x0);
        gbc.writeMem(0xed7, { 0x22 });
        gbc.writeMem(0xbfdd, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6796, gbc.sp());
        EXPECT(0xed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xbfdd));
        // 22 038D
        gbc.setState(0x5f9b, 0x73d, 0xa4f0, 0x2992, 0x78f1, 0xe002, 0x0, 0x1);
        gbc.writeMem(0x5f9b, { 0x22 });
        gbc.writeMem(0xe002, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x73d, gbc.sp());
        EXPECT(0x5f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe002));
        // 22 038E
        gbc.setState(0x2a1c, 0x2177, 0xa760, 0xb305, 0x99c8, 0xfa3a, 0x0, 0x0);
        gbc.writeMem(0x2a1c, { 0x22 });
        gbc.writeMem(0xfa3a, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2177, gbc.sp());
        EXPECT(0x2a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xfa3a));
        // 22 038F
        gbc.setState(0xcf99, 0x5642, 0x6e70, 0x7c5f, 0xb5e7, 0xec28, 0x1, 0x1);
        gbc.writeMem(0xcf99, { 0x22 });
        gbc.writeMem(0xec28, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5642, gbc.sp());
        EXPECT(0xcf9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xcf99));
        EXPECT(0x6e, gbc.readMem(0xec28));
        // 22 0390
        gbc.setState(0xa35a, 0xaaca, 0x2080, 0x6240, 0xccc4, 0x86f5, 0x1, 0x0);
        gbc.writeMem(0x86f5, { 0x0 });
        gbc.writeMem(0xa35a, { 0x22 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xaaca, gbc.sp());
        EXPECT(0xa35b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x86f5));
        EXPECT(0x22, gbc.readMem(0xa35a));
        // 22 0392
        gbc.setState(0x94a8, 0x3015, 0xac00, 0x956b, 0x85c, 0xecf5, 0x0, 0x1);
        gbc.writeMem(0x94a8, { 0x22 });
        gbc.writeMem(0xecf5, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3015, gbc.sp());
        EXPECT(0x94a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x94a8));
        EXPECT(0xac, gbc.readMem(0xecf5));
        // 22 0395
        gbc.setState(0x2cdf, 0x5667, 0xdf30, 0x6e5d, 0xe5e7, 0xe2b8, 0x0, 0x1);
        gbc.writeMem(0x2cdf, { 0x22 });
        gbc.writeMem(0xe2b8, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5667, gbc.sp());
        EXPECT(0x2ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xe2b8));
        // 22 0399
        gbc.setState(0x28ed, 0x4afe, 0x8e60, 0x1ce3, 0x84bd, 0xdaf3, 0x0, 0x1);
        gbc.writeMem(0x28ed, { 0x22 });
        gbc.writeMem(0xdaf3, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4afe, gbc.sp());
        EXPECT(0x28ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xdaf3));
        // 22 039D
        gbc.setState(0x8f90, 0xd86f, 0xfb40, 0x46cc, 0x6a36, 0x919b, 0x1, 0x1);
        gbc.writeMem(0x8f90, { 0x22 });
        gbc.writeMem(0x919b, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd86f, gbc.sp());
        EXPECT(0x8f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8f90));
        EXPECT(0xfb, gbc.readMem(0x919b));
        // 22 039E
        gbc.setState(0xd6bd, 0x5828, 0x70c0, 0xa08, 0x7596, 0xf651, 0x1, 0x1);
        gbc.writeMem(0xd6bd, { 0x22 });
        gbc.writeMem(0xf651, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5828, gbc.sp());
        EXPECT(0xd6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xd6bd));
        EXPECT(0x70, gbc.readMem(0xf651));
        // 22 03A0
        gbc.setState(0x8abf, 0x944f, 0x5bd0, 0xf781, 0x89cf, 0xa657, 0x0, 0x0);
        gbc.writeMem(0x8abf, { 0x22 });
        gbc.writeMem(0xa657, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x944f, gbc.sp());
        EXPECT(0x8ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8abf));
        EXPECT(0x5b, gbc.readMem(0xa657));
        // 22 03A1
        gbc.setState(0xd77d, 0xa379, 0xdf70, 0xa585, 0x449c, 0xd044, 0x1, 0x0);
        gbc.writeMem(0xd044, { 0x0 });
        gbc.writeMem(0xd77d, { 0x22 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa379, gbc.sp());
        EXPECT(0xd77e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xd044));
        EXPECT(0x22, gbc.readMem(0xd77d));
        // 22 03A3
        gbc.setState(0x43ff, 0xa570, 0xa790, 0xd1a0, 0x6cbd, 0x93f0, 0x0, 0x0);
        gbc.writeMem(0x43ff, { 0x22 });
        gbc.writeMem(0x93f0, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa570, gbc.sp());
        EXPECT(0x4400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x93f0));
        // 22 03A5
        gbc.setState(0x1d27, 0x2306, 0xd10, 0xb35, 0xa83c, 0xa713, 0x1, 0x1);
        gbc.writeMem(0x1d27, { 0x22 });
        gbc.writeMem(0xa713, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2306, gbc.sp());
        EXPECT(0x1d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xa713));
        // 22 03A8
        gbc.setState(0x30dd, 0x12f2, 0xe8f0, 0x40aa, 0x6570, 0xffda, 0x1, 0x1);
        gbc.writeMem(0x30dd, { 0x22 });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x12f2, gbc.sp());
        EXPECT(0x30de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xffda));
        // 22 03AA
        gbc.setState(0x772d, 0x65ea, 0xa6b0, 0x80b0, 0x1702, 0xf03a, 0x1, 0x0);
        gbc.writeMem(0x772d, { 0x22 });
        gbc.writeMem(0xf03a, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x65ea, gbc.sp());
        EXPECT(0x772e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xf03a));
        // 22 03AC
        gbc.setState(0x1619, 0xeb36, 0x15c0, 0xfc91, 0x71b4, 0x8b75, 0x1, 0x1);
        gbc.writeMem(0x1619, { 0x22 });
        gbc.writeMem(0x8b75, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xeb36, gbc.sp());
        EXPECT(0x161a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8b75));
        // 22 03AD
        gbc.setState(0x86b2, 0x1ae6, 0x5e00, 0xd697, 0x9c70, 0xa1a0, 0x1, 0x1);
        gbc.writeMem(0x86b2, { 0x22 });
        gbc.writeMem(0xa1a0, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1ae6, gbc.sp());
        EXPECT(0x86b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x86b2));
        EXPECT(0x5e, gbc.readMem(0xa1a0));
        // 22 03AE
        gbc.setState(0x52d3, 0x82f0, 0x1ab0, 0x8e3f, 0x5d58, 0x9293, 0x0, 0x0);
        gbc.writeMem(0x52d3, { 0x22 });
        gbc.writeMem(0x9293, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x82f0, gbc.sp());
        EXPECT(0x52d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9293));
        // 22 03B0
        gbc.setState(0x7d63, 0x23b4, 0x320, 0x39fb, 0x40c, 0xb377, 0x1, 0x1);
        gbc.writeMem(0x7d63, { 0x22 });
        gbc.writeMem(0xb377, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x23b4, gbc.sp());
        EXPECT(0x7d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb377));
        // 22 03B1
        gbc.setState(0xd3a9, 0xb47b, 0xf1e0, 0x387c, 0xd698, 0x8973, 0x0, 0x0);
        gbc.writeMem(0x8973, { 0x0 });
        gbc.writeMem(0xd3a9, { 0x22 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb47b, gbc.sp());
        EXPECT(0xd3aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8973));
        EXPECT(0x22, gbc.readMem(0xd3a9));
        // 22 03B2
        gbc.setState(0x56a3, 0xf56d, 0x11d0, 0x73ed, 0xb6d9, 0x8fd7, 0x1, 0x1);
        gbc.writeMem(0x56a3, { 0x22 });
        gbc.writeMem(0x8fd7, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf56d, gbc.sp());
        EXPECT(0x56a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8fd7));
        // 22 03B5
        gbc.setState(0x4701, 0xdd12, 0xedc0, 0xe7f2, 0x2409, 0x8871, 0x1, 0x1);
        gbc.writeMem(0x4701, { 0x22 });
        gbc.writeMem(0x8871, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdd12, gbc.sp());
        EXPECT(0x4702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x8871));
        // 22 03B7
        gbc.setState(0x9a4b, 0x2a06, 0xf390, 0x16dd, 0x8778, 0xf41e, 0x1, 0x1);
        gbc.writeMem(0x9a4b, { 0x22 });
        gbc.writeMem(0xf41e, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2a06, gbc.sp());
        EXPECT(0x9a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9a4b));
        EXPECT(0xf3, gbc.readMem(0xf41e));
        // 22 03B8
        gbc.setState(0x1b42, 0x3a36, 0xeda0, 0xb35f, 0x1e33, 0x96a4, 0x0, 0x1);
        gbc.writeMem(0x1b42, { 0x22 });
        gbc.writeMem(0x96a4, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3a36, gbc.sp());
        EXPECT(0x1b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x96a4));
        // 22 03BB
        gbc.setState(0xb7f, 0x33f1, 0x37e0, 0x955a, 0xb568, 0xee00, 0x1, 0x1);
        gbc.writeMem(0xb7f, { 0x22 });
        gbc.writeMem(0xee00, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x33f1, gbc.sp());
        EXPECT(0xb80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xee00));
        // 22 03BC
        gbc.setState(0xda54, 0xa9d4, 0x3e10, 0xa4a5, 0xddfb, 0x9563, 0x1, 0x1);
        gbc.writeMem(0x9563, { 0x0 });
        gbc.writeMem(0xda54, { 0x22 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa9d4, gbc.sp());
        EXPECT(0xda55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9563));
        EXPECT(0x22, gbc.readMem(0xda54));
        // 22 03BD
        gbc.setState(0x58df, 0x6ab3, 0xff20, 0xf64f, 0xa948, 0xbecc, 0x0, 0x0);
        gbc.writeMem(0x58df, { 0x22 });
        gbc.writeMem(0xbecc, { 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6ab3, gbc.sp());
        EXPECT(0x58e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xbecc));
        // 22 03BE
        gbc.setState(0x4f04, 0x748c, 0x55d0, 0xd975, 0x7ee7, 0xc39d, 0x1, 0x1);
        gbc.writeMem(0x4f04, { 0x22 });
        gbc.writeMem(0xc39d, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x748c, gbc.sp());
        EXPECT(0x4f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc39d));
        // 22 03BF
        gbc.setState(0x4e18, 0xdcf8, 0x78b0, 0x70a4, 0x7fcc, 0x8c5d, 0x1, 0x1);
        gbc.writeMem(0x4e18, { 0x22 });
        gbc.writeMem(0x8c5d, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xdcf8, gbc.sp());
        EXPECT(0x4e19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8c5d));
        // 22 03C0
        gbc.setState(0x6a49, 0xd7a, 0x2f90, 0xc90f, 0x2635, 0xa957, 0x0, 0x1);
        gbc.writeMem(0x6a49, { 0x22 });
        gbc.writeMem(0xa957, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd7a, gbc.sp());
        EXPECT(0x6a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa957));
        // 22 03C2
        gbc.setState(0x2027, 0x5ee9, 0x7b40, 0x12ed, 0x94e6, 0xb798, 0x1, 0x1);
        gbc.writeMem(0x2027, { 0x22 });
        gbc.writeMem(0xb798, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5ee9, gbc.sp());
        EXPECT(0x2028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb798));
        // 22 03C3
        gbc.setState(0xd150, 0x7f13, 0xadd0, 0x79c0, 0x2e74, 0xcf5f, 0x0, 0x1);
        gbc.writeMem(0xcf5f, { 0x0 });
        gbc.writeMem(0xd150, { 0x22 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7f13, gbc.sp());
        EXPECT(0xd151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xcf5f));
        EXPECT(0x22, gbc.readMem(0xd150));
        // 22 03C4
        gbc.setState(0x66b6, 0xbe62, 0x5110, 0x5746, 0x8bf2, 0xdeb4, 0x0, 0x0);
        gbc.writeMem(0x66b6, { 0x22 });
        gbc.writeMem(0xdeb4, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xbe62, gbc.sp());
        EXPECT(0x66b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdeb4));
        // 22 03C5
        gbc.setState(0x481d, 0x2716, 0xe9e0, 0xdeec, 0x1abd, 0x89e5, 0x0, 0x0);
        gbc.writeMem(0x481d, { 0x22 });
        gbc.writeMem(0x89e5, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2716, gbc.sp());
        EXPECT(0x481e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x89e5));
        // 22 03CC
        gbc.setState(0x7918, 0x248b, 0x2140, 0x7633, 0x8cfa, 0xbcf2, 0x1, 0x1);
        gbc.writeMem(0x7918, { 0x22 });
        gbc.writeMem(0xbcf2, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x248b, gbc.sp());
        EXPECT(0x7919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbcf2));
        // 22 03D1
        gbc.setState(0xdc5b, 0xbd20, 0x86b0, 0xf313, 0x6712, 0xcc6c, 0x0, 0x0);
        gbc.writeMem(0xcc6c, { 0x0 });
        gbc.writeMem(0xdc5b, { 0x22 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbd20, gbc.sp());
        EXPECT(0xdc5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xcc6c));
        EXPECT(0x22, gbc.readMem(0xdc5b));
        // 22 03D5
        gbc.setState(0x72a0, 0xe699, 0xd130, 0x7b7e, 0xadf3, 0xe61f, 0x0, 0x1);
        gbc.writeMem(0x72a0, { 0x22 });
        gbc.writeMem(0xe61f, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe699, gbc.sp());
        EXPECT(0x72a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xe61f));
        // 22 03DA
        gbc.setState(0x7548, 0x2004, 0x6ac0, 0x8895, 0x4e88, 0xd8f1, 0x0, 0x1);
        gbc.writeMem(0x7548, { 0x22 });
        gbc.writeMem(0xd8f1, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2004, gbc.sp());
        EXPECT(0x7549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd8f1));
        // 22 03DE
        gbc.setState(0x8023, 0x8fe3, 0x9d40, 0xb789, 0xe377, 0xafa2, 0x0, 0x0);
        gbc.writeMem(0x8023, { 0x22 });
        gbc.writeMem(0xafa2, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8fe3, gbc.sp());
        EXPECT(0x8024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8023));
        EXPECT(0x9d, gbc.readMem(0xafa2));
        // 22 03E0
        gbc.setState(0x2b61, 0x5ce8, 0xe920, 0x73da, 0x1015, 0x95da, 0x0, 0x1);
        gbc.writeMem(0x2b61, { 0x22 });
        gbc.writeMem(0x95da, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5ce8, gbc.sp());
        EXPECT(0x2b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x95da));
        // 22 03E1
        gbc.setState(0x8549, 0x79db, 0xa520, 0xc63e, 0x6fcf, 0xf518, 0x0, 0x1);
        gbc.writeMem(0x8549, { 0x22 });
        gbc.writeMem(0xf518, { 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x79db, gbc.sp());
        EXPECT(0x854a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8549));
        EXPECT(0xa5, gbc.readMem(0xf518));
        // 22 03E2
        gbc.setState(0x3e9a, 0xa01a, 0x2b00, 0x8fd4, 0xa954, 0xcf4c, 0x1, 0x1);
        gbc.writeMem(0x3e9a, { 0x22 });
        gbc.writeMem(0xcf4c, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa01a, gbc.sp());
        EXPECT(0x3e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcf4c));
        // 22 03E3
        gbc.setState(0x26bc, 0x10bf, 0x9ec0, 0xef4e, 0xb221, 0x9ca5, 0x0, 0x0);
        gbc.writeMem(0x26bc, { 0x22 });
        gbc.writeMem(0x9ca5, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x10bf, gbc.sp());
        EXPECT(0x26bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9ca5));
    }
