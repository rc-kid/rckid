    TEST(gbcemu, opcode_cb_42) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 42 0000
        gbc.setState(0xe5c5, 0x831d, 0x440, 0xb04e, 0xefa, 0x70f7, 0x0, 0x0);
        gbc.writeMem(0xe5c5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x831d);
        EXPECT(gbc.pc(), 0xe5c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5c5), 0xcb);
        EXPECT(gbc.readMem(0xe5c6), 0x42);
        // CB 42 0001
        gbc.setState(0x2fb3, 0xc37f, 0x180, 0xd301, 0xe3f, 0x35d9, 0x0, 0x0);
        gbc.writeMem(0x2fb3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc37f);
        EXPECT(gbc.pc(), 0x2fb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0002
        gbc.setState(0xb64d, 0xfcc0, 0x2940, 0x9a01, 0x7c15, 0xa9a6, 0x0, 0x1);
        gbc.writeMem(0xb64d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xfcc0);
        EXPECT(gbc.pc(), 0xb64f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb64d), 0xcb);
        EXPECT(gbc.readMem(0xb64e), 0x42);
        // CB 42 0003
        gbc.setState(0x5c66, 0xcd3f, 0x65a0, 0xb5e9, 0xa0ce, 0x3b79, 0x0, 0x1);
        gbc.writeMem(0x5c66, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xcd3f);
        EXPECT(gbc.pc(), 0x5c68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0004
        gbc.setState(0x4751, 0x8c0f, 0x57e0, 0xb1c0, 0x2311, 0x10f3, 0x1, 0x1);
        gbc.writeMem(0x4751, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8c0f);
        EXPECT(gbc.pc(), 0x4753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0005
        gbc.setState(0xe187, 0xcb37, 0xa90, 0x1250, 0x3be4, 0x8ce9, 0x0, 0x0);
        gbc.writeMem(0xe187, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xcb37);
        EXPECT(gbc.pc(), 0xe189);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe187), 0xcb);
        EXPECT(gbc.readMem(0xe188), 0x42);
        // CB 42 0006
        gbc.setState(0x2e, 0x5309, 0xd0, 0xc211, 0xb4eb, 0xff18, 0x1, 0x0);
        gbc.writeMem(0x2e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5309);
        EXPECT(gbc.pc(), 0x30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0007
        gbc.setState(0x4187, 0x2e5c, 0x3ba0, 0xfd95, 0xa102, 0x38f4, 0x0, 0x1);
        gbc.writeMem(0x4187, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2e5c);
        EXPECT(gbc.pc(), 0x4189);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0008
        gbc.setState(0x8c33, 0x3d0a, 0xd480, 0x51dc, 0x58f, 0x893c, 0x1, 0x0);
        gbc.writeMem(0x8c33, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3d0a);
        EXPECT(gbc.pc(), 0x8c35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c33), 0xcb);
        EXPECT(gbc.readMem(0x8c34), 0x42);
        // CB 42 0009
        gbc.setState(0xabbb, 0xa4e, 0x74e0, 0xb95b, 0x4186, 0x7a63, 0x1, 0x0);
        gbc.writeMem(0xabbb, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa4e);
        EXPECT(gbc.pc(), 0xabbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabbb), 0xcb);
        EXPECT(gbc.readMem(0xabbc), 0x42);
        // CB 42 000A
        gbc.setState(0x5439, 0xf0e5, 0x79e0, 0xbc98, 0xcbe, 0xf5bb, 0x0, 0x0);
        gbc.writeMem(0x5439, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf0e5);
        EXPECT(gbc.pc(), 0x543b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 000B
        gbc.setState(0xd403, 0xfe91, 0x9fc0, 0xb099, 0xae0f, 0xc852, 0x1, 0x0);
        gbc.writeMem(0xd403, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xfe91);
        EXPECT(gbc.pc(), 0xd405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd403), 0xcb);
        EXPECT(gbc.readMem(0xd404), 0x42);
        // CB 42 000C
        gbc.setState(0x35ae, 0xe78d, 0x29c0, 0x4b61, 0x9c98, 0x2740, 0x1, 0x0);
        gbc.writeMem(0x35ae, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe78d);
        EXPECT(gbc.pc(), 0x35b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 000D
        gbc.setState(0xc4a4, 0xa3ca, 0x5750, 0xc318, 0xa243, 0x9db0, 0x0, 0x1);
        gbc.writeMem(0xc4a4, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa3ca);
        EXPECT(gbc.pc(), 0xc4a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4a4), 0xcb);
        EXPECT(gbc.readMem(0xc4a5), 0x42);
        // CB 42 000E
        gbc.setState(0x1174, 0xdc4b, 0xbbb0, 0xe058, 0xa6de, 0xe100, 0x0, 0x1);
        gbc.writeMem(0x1174, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xdc4b);
        EXPECT(gbc.pc(), 0x1176);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0010
        gbc.setState(0x4b7c, 0x354f, 0x27b0, 0x273, 0x3f0f, 0x379d, 0x1, 0x0);
        gbc.writeMem(0x4b7c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x354f);
        EXPECT(gbc.pc(), 0x4b7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0011
        gbc.setState(0x6106, 0x42a6, 0xbb80, 0xb8a6, 0x43db, 0x35e9, 0x1, 0x1);
        gbc.writeMem(0x6106, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x42a6);
        EXPECT(gbc.pc(), 0x6108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0012
        gbc.setState(0x6113, 0xab9, 0x8440, 0x5545, 0xb668, 0xfe8, 0x0, 0x0);
        gbc.writeMem(0x6113, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xab9);
        EXPECT(gbc.pc(), 0x6115);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0013
        gbc.setState(0x4b0d, 0x5537, 0x6cb0, 0x1661, 0xf457, 0x3267, 0x1, 0x1);
        gbc.writeMem(0x4b0d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5537);
        EXPECT(gbc.pc(), 0x4b0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0014
        gbc.setState(0xbc99, 0x521f, 0x8a90, 0xe99d, 0xcccb, 0xbbd9, 0x1, 0x0);
        gbc.writeMem(0xbc99, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x521f);
        EXPECT(gbc.pc(), 0xbc9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc99), 0xcb);
        EXPECT(gbc.readMem(0xbc9a), 0x42);
        // CB 42 0015
        gbc.setState(0x8119, 0x49e8, 0xd6c0, 0xb72c, 0xa3e5, 0x4aac, 0x0, 0x0);
        gbc.writeMem(0x8119, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x49e8);
        EXPECT(gbc.pc(), 0x811b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8119), 0xcb);
        EXPECT(gbc.readMem(0x811a), 0x42);
        // CB 42 0016
        gbc.setState(0x6e03, 0xb8f3, 0x2b00, 0x43a2, 0x2c4, 0x67d, 0x0, 0x0);
        gbc.writeMem(0x6e03, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb8f3);
        EXPECT(gbc.pc(), 0x6e05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0017
        gbc.setState(0x8726, 0x7b3c, 0x660, 0x48c8, 0xe8b0, 0x3cd4, 0x1, 0x0);
        gbc.writeMem(0x8726, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7b3c);
        EXPECT(gbc.pc(), 0x8728);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8726), 0xcb);
        EXPECT(gbc.readMem(0x8727), 0x42);
        // CB 42 0018
        gbc.setState(0x993b, 0xc59c, 0xb170, 0x2fa4, 0x4488, 0x1e8a, 0x1, 0x1);
        gbc.writeMem(0x993b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc59c);
        EXPECT(gbc.pc(), 0x993d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x993b), 0xcb);
        EXPECT(gbc.readMem(0x993c), 0x42);
        // CB 42 0019
        gbc.setState(0xaca8, 0xec3d, 0x66a0, 0x9b9b, 0xd10f, 0x6226, 0x0, 0x1);
        gbc.writeMem(0xaca8, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xec3d);
        EXPECT(gbc.pc(), 0xacaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaca8), 0xcb);
        EXPECT(gbc.readMem(0xaca9), 0x42);
        // CB 42 001A
        gbc.setState(0x93e9, 0xc2e, 0xcdd0, 0x4337, 0xc93c, 0x93de, 0x1, 0x0);
        gbc.writeMem(0x93e9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc2e);
        EXPECT(gbc.pc(), 0x93eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93e9), 0xcb);
        EXPECT(gbc.readMem(0x93ea), 0x42);
        // CB 42 001B
        gbc.setState(0xce9f, 0xe126, 0xd470, 0xc6ba, 0x7ab7, 0x78f, 0x1, 0x0);
        gbc.writeMem(0xce9f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe126);
        EXPECT(gbc.pc(), 0xcea1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce9f), 0xcb);
        EXPECT(gbc.readMem(0xcea0), 0x42);
        // CB 42 001C
        gbc.setState(0x96d, 0x5b49, 0x34d0, 0x1fc1, 0x15d, 0xa355, 0x0, 0x1);
        gbc.writeMem(0x96d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5b49);
        EXPECT(gbc.pc(), 0x96f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 001D
        gbc.setState(0x6cb4, 0xbd5e, 0x8a40, 0x565e, 0xc219, 0xf1ff, 0x0, 0x1);
        gbc.writeMem(0x6cb4, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xbd5e);
        EXPECT(gbc.pc(), 0x6cb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 001E
        gbc.setState(0xa7ca, 0xe2de, 0x49e0, 0x7021, 0x6678, 0x9a20, 0x1, 0x0);
        gbc.writeMem(0xa7ca, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe2de);
        EXPECT(gbc.pc(), 0xa7cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ca), 0xcb);
        EXPECT(gbc.readMem(0xa7cb), 0x42);
        // CB 42 001F
        gbc.setState(0x1ba5, 0xfe74, 0x5550, 0x10a2, 0xd9d0, 0x502b, 0x0, 0x1);
        gbc.writeMem(0x1ba5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xfe74);
        EXPECT(gbc.pc(), 0x1ba7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0020
        gbc.setState(0x2c28, 0x57dc, 0xde80, 0x8195, 0x1804, 0x272, 0x1, 0x0);
        gbc.writeMem(0x2c28, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x57dc);
        EXPECT(gbc.pc(), 0x2c2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0021
        gbc.setState(0x479f, 0xfaa9, 0x800, 0xda03, 0xd0e5, 0x38f1, 0x0, 0x0);
        gbc.writeMem(0x479f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xfaa9);
        EXPECT(gbc.pc(), 0x47a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0022
        gbc.setState(0x4067, 0x50d7, 0x8cf0, 0x1045, 0x86fd, 0xa073, 0x0, 0x1);
        gbc.writeMem(0x4067, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x50d7);
        EXPECT(gbc.pc(), 0x4069);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0023
        gbc.setState(0x77ba, 0xb141, 0xe980, 0xcd7, 0x98b7, 0x7027, 0x1, 0x1);
        gbc.writeMem(0x77ba, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb141);
        EXPECT(gbc.pc(), 0x77bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0025
        gbc.setState(0x97b6, 0xfe5b, 0x97c0, 0xda86, 0xff8b, 0x7079, 0x1, 0x1);
        gbc.writeMem(0x97b6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xfe5b);
        EXPECT(gbc.pc(), 0x97b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b6), 0xcb);
        EXPECT(gbc.readMem(0x97b7), 0x42);
        // CB 42 0026
        gbc.setState(0x5e77, 0x393c, 0x6720, 0x29ce, 0xb35c, 0x2df5, 0x1, 0x1);
        gbc.writeMem(0x5e77, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x393c);
        EXPECT(gbc.pc(), 0x5e79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0027
        gbc.setState(0x7ad9, 0xb830, 0xad10, 0x4f45, 0x160d, 0x8aee, 0x1, 0x0);
        gbc.writeMem(0x7ad9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xb830);
        EXPECT(gbc.pc(), 0x7adb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0028
        gbc.setState(0x9f49, 0xd0a1, 0xfad0, 0xa64b, 0x79ae, 0x67fb, 0x1, 0x1);
        gbc.writeMem(0x9f49, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd0a1);
        EXPECT(gbc.pc(), 0x9f4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f49), 0xcb);
        EXPECT(gbc.readMem(0x9f4a), 0x42);
        // CB 42 0029
        gbc.setState(0x259c, 0x1bcd, 0xf670, 0x9b08, 0x46d3, 0xb92f, 0x0, 0x1);
        gbc.writeMem(0x259c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x1bcd);
        EXPECT(gbc.pc(), 0x259e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 002A
        gbc.setState(0x5459, 0x7b2b, 0xf400, 0x6c52, 0xcce2, 0xc3a9, 0x0, 0x0);
        gbc.writeMem(0x5459, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7b2b);
        EXPECT(gbc.pc(), 0x545b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 002B
        gbc.setState(0x5140, 0xb1e2, 0x890, 0x341d, 0x8fb4, 0xa58, 0x0, 0x0);
        gbc.writeMem(0x5140, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb1e2);
        EXPECT(gbc.pc(), 0x5142);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 002C
        gbc.setState(0xdd07, 0x16dd, 0xcc60, 0xb7bd, 0x9bb8, 0x5e25, 0x1, 0x1);
        gbc.writeMem(0xdd07, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x16dd);
        EXPECT(gbc.pc(), 0xdd09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd07), 0xcb);
        EXPECT(gbc.readMem(0xdd08), 0x42);
        // CB 42 002D
        gbc.setState(0xff0, 0x5b7b, 0xa7b0, 0xf4e0, 0xc56d, 0xf85, 0x0, 0x0);
        gbc.writeMem(0xff0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5b7b);
        EXPECT(gbc.pc(), 0xff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 002E
        gbc.setState(0x79f4, 0x2497, 0x38a0, 0xb52a, 0x1276, 0xdf45, 0x1, 0x0);
        gbc.writeMem(0x79f4, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2497);
        EXPECT(gbc.pc(), 0x79f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0030
        gbc.setState(0xb775, 0xbafa, 0xdf00, 0x23f6, 0x3bc9, 0x6374, 0x0, 0x0);
        gbc.writeMem(0xb775, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbafa);
        EXPECT(gbc.pc(), 0xb777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb775), 0xcb);
        EXPECT(gbc.readMem(0xb776), 0x42);
        // CB 42 0031
        gbc.setState(0x355d, 0x67ee, 0x8900, 0x1fae, 0xddf4, 0xe33c, 0x1, 0x0);
        gbc.writeMem(0x355d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x67ee);
        EXPECT(gbc.pc(), 0x355f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0032
        gbc.setState(0xcf7c, 0xb39d, 0xeac0, 0xbb8f, 0x2b54, 0x36f1, 0x0, 0x0);
        gbc.writeMem(0xcf7c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb39d);
        EXPECT(gbc.pc(), 0xcf7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf7c), 0xcb);
        EXPECT(gbc.readMem(0xcf7d), 0x42);
        // CB 42 0033
        gbc.setState(0x3008, 0xffd3, 0x93c0, 0x4082, 0xfc1f, 0xad35, 0x1, 0x0);
        gbc.writeMem(0x3008, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xffd3);
        EXPECT(gbc.pc(), 0x300a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0034
        gbc.setState(0xe2ce, 0xf6d4, 0xe430, 0xce2, 0x2700, 0xe479, 0x0, 0x0);
        gbc.writeMem(0xe2ce, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf6d4);
        EXPECT(gbc.pc(), 0xe2d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ce), 0xcb);
        EXPECT(gbc.readMem(0xe2cf), 0x42);
        // CB 42 0035
        gbc.setState(0xd894, 0x651b, 0x1fa0, 0x48e3, 0x423b, 0xce5e, 0x1, 0x0);
        gbc.writeMem(0xd894, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x651b);
        EXPECT(gbc.pc(), 0xd896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd894), 0xcb);
        EXPECT(gbc.readMem(0xd895), 0x42);
        // CB 42 0036
        gbc.setState(0x10a, 0x5efe, 0x5420, 0x484d, 0x11f9, 0xc7cc, 0x0, 0x0);
        gbc.writeMem(0x10a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x5efe);
        EXPECT(gbc.pc(), 0x10c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0037
        gbc.setState(0xea72, 0xff71, 0x1720, 0x8c1d, 0xefbd, 0xd5a1, 0x0, 0x1);
        gbc.writeMem(0xea72, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xff71);
        EXPECT(gbc.pc(), 0xea74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea72), 0xcb);
        EXPECT(gbc.readMem(0xea73), 0x42);
        // CB 42 0038
        gbc.setState(0xb36d, 0xe44a, 0x5a40, 0x29ab, 0x6a23, 0xb1b7, 0x1, 0x0);
        gbc.writeMem(0xb36d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe44a);
        EXPECT(gbc.pc(), 0xb36f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb36d), 0xcb);
        EXPECT(gbc.readMem(0xb36e), 0x42);
        // CB 42 0039
        gbc.setState(0xc25d, 0x620c, 0x1560, 0x61f8, 0xf120, 0x129f, 0x1, 0x1);
        gbc.writeMem(0xc25d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x620c);
        EXPECT(gbc.pc(), 0xc25f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc25d), 0xcb);
        EXPECT(gbc.readMem(0xc25e), 0x42);
        // CB 42 003A
        gbc.setState(0x784d, 0x50e1, 0x7e10, 0x52e4, 0x7ab5, 0xb12, 0x1, 0x1);
        gbc.writeMem(0x784d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x50e1);
        EXPECT(gbc.pc(), 0x784f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 003B
        gbc.setState(0x3971, 0x5db2, 0x630, 0x75bb, 0x6075, 0x5538, 0x0, 0x1);
        gbc.writeMem(0x3971, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5db2);
        EXPECT(gbc.pc(), 0x3973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 003C
        gbc.setState(0x84b0, 0x32a1, 0x7b90, 0x7581, 0xf680, 0xd389, 0x0, 0x1);
        gbc.writeMem(0x84b0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x32a1);
        EXPECT(gbc.pc(), 0x84b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84b0), 0xcb);
        EXPECT(gbc.readMem(0x84b1), 0x42);
        // CB 42 003D
        gbc.setState(0x5cf0, 0x3d83, 0xd1d0, 0xe20, 0x5126, 0x8e40, 0x0, 0x1);
        gbc.writeMem(0x5cf0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3d83);
        EXPECT(gbc.pc(), 0x5cf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 003E
        gbc.setState(0x1983, 0xf7df, 0x1a90, 0x34a1, 0x879d, 0x59ff, 0x1, 0x1);
        gbc.writeMem(0x1983, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf7df);
        EXPECT(gbc.pc(), 0x1985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 003F
        gbc.setState(0x28e3, 0x36d7, 0x2750, 0x1f53, 0x89ce, 0xed70, 0x1, 0x1);
        gbc.writeMem(0x28e3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x36d7);
        EXPECT(gbc.pc(), 0x28e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0040
        gbc.setState(0xb98f, 0x64b7, 0xf4d0, 0xcc6, 0x52b3, 0xb72b, 0x0, 0x0);
        gbc.writeMem(0xb98f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x64b7);
        EXPECT(gbc.pc(), 0xb991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb98f), 0xcb);
        EXPECT(gbc.readMem(0xb990), 0x42);
        // CB 42 0041
        gbc.setState(0xd4a2, 0x95e7, 0xcb60, 0x2e0a, 0xe810, 0x9411, 0x0, 0x0);
        gbc.writeMem(0xd4a2, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x95e7);
        EXPECT(gbc.pc(), 0xd4a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4a2), 0xcb);
        EXPECT(gbc.readMem(0xd4a3), 0x42);
        // CB 42 0042
        gbc.setState(0x73a7, 0xd166, 0x3120, 0x7616, 0x7b12, 0xce82, 0x1, 0x0);
        gbc.writeMem(0x73a7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd166);
        EXPECT(gbc.pc(), 0x73a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0043
        gbc.setState(0x425e, 0x4ace, 0xc080, 0x4798, 0x61dc, 0xd48d, 0x0, 0x0);
        gbc.writeMem(0x425e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4ace);
        EXPECT(gbc.pc(), 0x4260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0044
        gbc.setState(0xa9c7, 0xa380, 0xf7c0, 0xb06c, 0x403f, 0x4443, 0x1, 0x1);
        gbc.writeMem(0xa9c7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa380);
        EXPECT(gbc.pc(), 0xa9c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9c7), 0xcb);
        EXPECT(gbc.readMem(0xa9c8), 0x42);
        // CB 42 0045
        gbc.setState(0x4696, 0x2e9a, 0x7e00, 0x2ec5, 0xb014, 0xb703, 0x1, 0x1);
        gbc.writeMem(0x4696, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2e9a);
        EXPECT(gbc.pc(), 0x4698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0046
        gbc.setState(0xedf9, 0x4094, 0xa3d0, 0x3514, 0x9716, 0x2016, 0x1, 0x0);
        gbc.writeMem(0xedf9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4094);
        EXPECT(gbc.pc(), 0xedfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedf9), 0xcb);
        EXPECT(gbc.readMem(0xedfa), 0x42);
        // CB 42 0047
        gbc.setState(0x291, 0xede1, 0xeae0, 0x11a2, 0xeffd, 0x46a9, 0x1, 0x1);
        gbc.writeMem(0x291, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xede1);
        EXPECT(gbc.pc(), 0x293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0048
        gbc.setState(0x4f33, 0xbbdd, 0x30, 0x8c69, 0x376d, 0x318c, 0x0, 0x0);
        gbc.writeMem(0x4f33, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xbbdd);
        EXPECT(gbc.pc(), 0x4f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0049
        gbc.setState(0x8651, 0x237b, 0x35c0, 0x7778, 0xd181, 0x893e, 0x0, 0x0);
        gbc.writeMem(0x8651, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x237b);
        EXPECT(gbc.pc(), 0x8653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8651), 0xcb);
        EXPECT(gbc.readMem(0x8652), 0x42);
        // CB 42 004A
        gbc.setState(0x867e, 0x2171, 0xe900, 0xff9, 0x12da, 0x1a60, 0x1, 0x1);
        gbc.writeMem(0x867e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2171);
        EXPECT(gbc.pc(), 0x8680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x867e), 0xcb);
        EXPECT(gbc.readMem(0x867f), 0x42);
        // CB 42 004B
        gbc.setState(0x10dd, 0x31d8, 0xa00, 0x4a4f, 0x764, 0xae9e, 0x0, 0x1);
        gbc.writeMem(0x10dd, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x31d8);
        EXPECT(gbc.pc(), 0x10df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 004C
        gbc.setState(0x33d8, 0xa819, 0x10, 0x4991, 0x31f0, 0x7f7a, 0x0, 0x0);
        gbc.writeMem(0x33d8, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa819);
        EXPECT(gbc.pc(), 0x33da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 004D
        gbc.setState(0xa42d, 0x4a3f, 0xa060, 0x2767, 0x8c41, 0x4121, 0x0, 0x1);
        gbc.writeMem(0xa42d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4a3f);
        EXPECT(gbc.pc(), 0xa42f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa42d), 0xcb);
        EXPECT(gbc.readMem(0xa42e), 0x42);
        // CB 42 004E
        gbc.setState(0x3946, 0xb1f7, 0xbc40, 0x99eb, 0xab6d, 0x7793, 0x1, 0x1);
        gbc.writeMem(0x3946, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb1f7);
        EXPECT(gbc.pc(), 0x3948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 004F
        gbc.setState(0x4272, 0xe9cc, 0xdd90, 0xe095, 0xd356, 0x82d, 0x0, 0x0);
        gbc.writeMem(0x4272, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe9cc);
        EXPECT(gbc.pc(), 0x4274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0050
        gbc.setState(0x5126, 0x6d09, 0xce90, 0x5831, 0x6d0c, 0xea49, 0x0, 0x0);
        gbc.writeMem(0x5126, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6d09);
        EXPECT(gbc.pc(), 0x5128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0051
        gbc.setState(0xb353, 0x5cbf, 0x4350, 0x6925, 0x4733, 0xc75a, 0x0, 0x0);
        gbc.writeMem(0xb353, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x5cbf);
        EXPECT(gbc.pc(), 0xb355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb353), 0xcb);
        EXPECT(gbc.readMem(0xb354), 0x42);
        // CB 42 0052
        gbc.setState(0xec99, 0xeaad, 0xc8e0, 0x6ebd, 0x1d97, 0xd6b, 0x1, 0x1);
        gbc.writeMem(0xec99, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xeaad);
        EXPECT(gbc.pc(), 0xec9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec99), 0xcb);
        EXPECT(gbc.readMem(0xec9a), 0x42);
        // CB 42 0053
        gbc.setState(0xd4e2, 0xf6fd, 0xa100, 0x38ae, 0xb622, 0x9316, 0x0, 0x0);
        gbc.writeMem(0xd4e2, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf6fd);
        EXPECT(gbc.pc(), 0xd4e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4e2), 0xcb);
        EXPECT(gbc.readMem(0xd4e3), 0x42);
        // CB 42 0055
        gbc.setState(0x6648, 0x5932, 0xf3f0, 0x7277, 0x6a78, 0xf733, 0x0, 0x1);
        gbc.writeMem(0x6648, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5932);
        EXPECT(gbc.pc(), 0x664a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0056
        gbc.setState(0xd0ce, 0xd3f5, 0x51d0, 0x3fe7, 0x46e6, 0x315d, 0x1, 0x1);
        gbc.writeMem(0xd0ce, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd3f5);
        EXPECT(gbc.pc(), 0xd0d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0ce), 0xcb);
        EXPECT(gbc.readMem(0xd0cf), 0x42);
        // CB 42 0057
        gbc.setState(0xc921, 0x77d, 0xbba0, 0x2a21, 0x9b61, 0xca78, 0x1, 0x1);
        gbc.writeMem(0xc921, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x77d);
        EXPECT(gbc.pc(), 0xc923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc921), 0xcb);
        EXPECT(gbc.readMem(0xc922), 0x42);
        // CB 42 0059
        gbc.setState(0x2c84, 0x6e46, 0x55d0, 0x61c0, 0xfa44, 0x78f7, 0x0, 0x1);
        gbc.writeMem(0x2c84, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6e46);
        EXPECT(gbc.pc(), 0x2c86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 005A
        gbc.setState(0x4b6, 0x979e, 0xbdd0, 0x7a1, 0xa86c, 0xab3d, 0x1, 0x1);
        gbc.writeMem(0x4b6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x979e);
        EXPECT(gbc.pc(), 0x4b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 005B
        gbc.setState(0xd121, 0xd161, 0x49f0, 0x8a4, 0x2938, 0x4b29, 0x0, 0x1);
        gbc.writeMem(0xd121, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd161);
        EXPECT(gbc.pc(), 0xd123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd121), 0xcb);
        EXPECT(gbc.readMem(0xd122), 0x42);
        // CB 42 005C
        gbc.setState(0x5480, 0xda55, 0x3680, 0x62b2, 0xb664, 0xcf2, 0x1, 0x0);
        gbc.writeMem(0x5480, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xda55);
        EXPECT(gbc.pc(), 0x5482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 005D
        gbc.setState(0xa33d, 0xfcda, 0xf890, 0xbfa3, 0x11ea, 0x816b, 0x0, 0x1);
        gbc.writeMem(0xa33d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xfcda);
        EXPECT(gbc.pc(), 0xa33f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa33d), 0xcb);
        EXPECT(gbc.readMem(0xa33e), 0x42);
        // CB 42 005E
        gbc.setState(0xbf9c, 0xb469, 0xb010, 0xb9e1, 0xe688, 0x735d, 0x1, 0x1);
        gbc.writeMem(0xbf9c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb469);
        EXPECT(gbc.pc(), 0xbf9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf9c), 0xcb);
        EXPECT(gbc.readMem(0xbf9d), 0x42);
        // CB 42 005F
        gbc.setState(0xdd37, 0x4626, 0xe090, 0x9f9c, 0xd5e5, 0xe657, 0x1, 0x0);
        gbc.writeMem(0xdd37, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4626);
        EXPECT(gbc.pc(), 0xdd39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd37), 0xcb);
        EXPECT(gbc.readMem(0xdd38), 0x42);
        // CB 42 0060
        gbc.setState(0x945a, 0x69f5, 0xbf30, 0x4eac, 0x6e75, 0xe269, 0x0, 0x0);
        gbc.writeMem(0x945a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x69f5);
        EXPECT(gbc.pc(), 0x945c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x945a), 0xcb);
        EXPECT(gbc.readMem(0x945b), 0x42);
        // CB 42 0061
        gbc.setState(0x8887, 0x5121, 0x9c40, 0x4103, 0x13e0, 0x2d23, 0x0, 0x1);
        gbc.writeMem(0x8887, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5121);
        EXPECT(gbc.pc(), 0x8889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8887), 0xcb);
        EXPECT(gbc.readMem(0x8888), 0x42);
        // CB 42 0062
        gbc.setState(0xb68, 0xc47, 0xb8b0, 0x147f, 0xc8a3, 0xd10f, 0x0, 0x1);
        gbc.writeMem(0xb68, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xc47);
        EXPECT(gbc.pc(), 0xb6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0063
        gbc.setState(0x4dfd, 0x5114, 0xbf0, 0x109, 0xd8a5, 0x9950, 0x1, 0x1);
        gbc.writeMem(0x4dfd, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5114);
        EXPECT(gbc.pc(), 0x4dff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0064
        gbc.setState(0x77b, 0x7e67, 0x8d0, 0xcf6c, 0xd1ca, 0xad0c, 0x1, 0x0);
        gbc.writeMem(0x77b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7e67);
        EXPECT(gbc.pc(), 0x77d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0065
        gbc.setState(0x6f10, 0x7172, 0x37e0, 0xea90, 0x67e7, 0x462d, 0x1, 0x0);
        gbc.writeMem(0x6f10, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7172);
        EXPECT(gbc.pc(), 0x6f12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0066
        gbc.setState(0xa3b7, 0xaa30, 0xa430, 0x4cc1, 0x9381, 0xc1ce, 0x0, 0x1);
        gbc.writeMem(0xa3b7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xaa30);
        EXPECT(gbc.pc(), 0xa3b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3b7), 0xcb);
        EXPECT(gbc.readMem(0xa3b8), 0x42);
        // CB 42 0067
        gbc.setState(0xe802, 0x2b1d, 0xf930, 0x16de, 0x3372, 0x5dd, 0x0, 0x1);
        gbc.writeMem(0xe802, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2b1d);
        EXPECT(gbc.pc(), 0xe804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe802), 0xcb);
        EXPECT(gbc.readMem(0xe803), 0x42);
        // CB 42 0068
        gbc.setState(0x87cc, 0x56e, 0x5280, 0xdf7c, 0x13bf, 0x916a, 0x0, 0x1);
        gbc.writeMem(0x87cc, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x56e);
        EXPECT(gbc.pc(), 0x87ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87cc), 0xcb);
        EXPECT(gbc.readMem(0x87cd), 0x42);
        // CB 42 0069
        gbc.setState(0x532e, 0x995a, 0x33a0, 0x68cd, 0x197, 0x2a8e, 0x0, 0x0);
        gbc.writeMem(0x532e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x995a);
        EXPECT(gbc.pc(), 0x5330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 006A
        gbc.setState(0x733b, 0xb4ed, 0x77d0, 0x2f73, 0x82fb, 0x7446, 0x1, 0x0);
        gbc.writeMem(0x733b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb4ed);
        EXPECT(gbc.pc(), 0x733d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 006B
        gbc.setState(0xd411, 0xc444, 0xb450, 0xfde2, 0x9dfe, 0xa036, 0x0, 0x0);
        gbc.writeMem(0xd411, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc444);
        EXPECT(gbc.pc(), 0xd413);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd411), 0xcb);
        EXPECT(gbc.readMem(0xd412), 0x42);
        // CB 42 006C
        gbc.setState(0x2cc4, 0x2608, 0x48c0, 0x1b3c, 0xe99f, 0x6944, 0x1, 0x1);
        gbc.writeMem(0x2cc4, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2608);
        EXPECT(gbc.pc(), 0x2cc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 006D
        gbc.setState(0x888c, 0xd3d3, 0xbff0, 0xa517, 0x1f04, 0x8bd9, 0x0, 0x1);
        gbc.writeMem(0x888c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd3d3);
        EXPECT(gbc.pc(), 0x888e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x888c), 0xcb);
        EXPECT(gbc.readMem(0x888d), 0x42);
        // CB 42 006E
        gbc.setState(0xab6a, 0x410, 0x9170, 0x3ceb, 0xd5e0, 0x9839, 0x0, 0x0);
        gbc.writeMem(0xab6a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x410);
        EXPECT(gbc.pc(), 0xab6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab6a), 0xcb);
        EXPECT(gbc.readMem(0xab6b), 0x42);
        // CB 42 006F
        gbc.setState(0xe15c, 0x9dc3, 0x3d00, 0x8aa, 0xceac, 0x3273, 0x0, 0x0);
        gbc.writeMem(0xe15c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9dc3);
        EXPECT(gbc.pc(), 0xe15e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe15c), 0xcb);
        EXPECT(gbc.readMem(0xe15d), 0x42);
        // CB 42 0070
        gbc.setState(0x492b, 0xeedc, 0x800, 0x383a, 0x5565, 0xd6de, 0x0, 0x1);
        gbc.writeMem(0x492b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xeedc);
        EXPECT(gbc.pc(), 0x492d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0071
        gbc.setState(0x573d, 0x3902, 0x6030, 0x1a70, 0xf7d9, 0xfc2a, 0x1, 0x1);
        gbc.writeMem(0x573d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3902);
        EXPECT(gbc.pc(), 0x573f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0072
        gbc.setState(0x5b1b, 0xd5e9, 0x8de0, 0x785d, 0x93c4, 0x2f84, 0x1, 0x1);
        gbc.writeMem(0x5b1b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd5e9);
        EXPECT(gbc.pc(), 0x5b1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0073
        gbc.setState(0xb7c0, 0xdebd, 0xdcb0, 0x261a, 0x5751, 0x1859, 0x0, 0x1);
        gbc.writeMem(0xb7c0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xdebd);
        EXPECT(gbc.pc(), 0xb7c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7c0), 0xcb);
        EXPECT(gbc.readMem(0xb7c1), 0x42);
        // CB 42 0074
        gbc.setState(0x59f3, 0xde63, 0x9b50, 0x1b6, 0x4458, 0x2362, 0x0, 0x0);
        gbc.writeMem(0x59f3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xde63);
        EXPECT(gbc.pc(), 0x59f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0075
        gbc.setState(0x8d3f, 0xbffa, 0xd650, 0x1f03, 0xed2, 0x6bb7, 0x0, 0x1);
        gbc.writeMem(0x8d3f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xbffa);
        EXPECT(gbc.pc(), 0x8d41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d3f), 0xcb);
        EXPECT(gbc.readMem(0x8d40), 0x42);
        // CB 42 0078
        gbc.setState(0x8122, 0x5ab1, 0x3b60, 0xc773, 0x8336, 0xbbb6, 0x0, 0x0);
        gbc.writeMem(0x8122, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5ab1);
        EXPECT(gbc.pc(), 0x8124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8122), 0xcb);
        EXPECT(gbc.readMem(0x8123), 0x42);
        // CB 42 0079
        gbc.setState(0xa5f8, 0xbc16, 0xc7a0, 0x8418, 0x282a, 0xeec0, 0x1, 0x0);
        gbc.writeMem(0xa5f8, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xbc16);
        EXPECT(gbc.pc(), 0xa5fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f8), 0xcb);
        EXPECT(gbc.readMem(0xa5f9), 0x42);
        // CB 42 007A
        gbc.setState(0x979e, 0x1938, 0x500, 0x7018, 0xc63b, 0x53fd, 0x0, 0x1);
        gbc.writeMem(0x979e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1938);
        EXPECT(gbc.pc(), 0x97a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x979e), 0xcb);
        EXPECT(gbc.readMem(0x979f), 0x42);
        // CB 42 007B
        gbc.setState(0x2f93, 0x6266, 0x7f20, 0xdadd, 0xa630, 0x6b26, 0x1, 0x1);
        gbc.writeMem(0x2f93, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6266);
        EXPECT(gbc.pc(), 0x2f95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 007C
        gbc.setState(0x53f5, 0xadd8, 0x9390, 0x22e, 0xfc75, 0x4c30, 0x0, 0x0);
        gbc.writeMem(0x53f5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xadd8);
        EXPECT(gbc.pc(), 0x53f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 007D
        gbc.setState(0x29bc, 0xfe9a, 0xc90, 0xbc9c, 0xd19a, 0x5db7, 0x1, 0x0);
        gbc.writeMem(0x29bc, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xfe9a);
        EXPECT(gbc.pc(), 0x29be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 007E
        gbc.setState(0xf5f, 0x1e54, 0x87d0, 0x201c, 0xf901, 0x6907, 0x1, 0x1);
        gbc.writeMem(0xf5f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1e54);
        EXPECT(gbc.pc(), 0xf61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 007F
        gbc.setState(0x281e, 0xcc06, 0x5420, 0x48f8, 0xdb08, 0x37eb, 0x0, 0x0);
        gbc.writeMem(0x281e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xcc06);
        EXPECT(gbc.pc(), 0x2820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0080
        gbc.setState(0xdf4e, 0x6d2, 0x8210, 0xdce2, 0x6301, 0x9d16, 0x0, 0x0);
        gbc.writeMem(0xdf4e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6d2);
        EXPECT(gbc.pc(), 0xdf50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf4e), 0xcb);
        EXPECT(gbc.readMem(0xdf4f), 0x42);
        // CB 42 0081
        gbc.setState(0x6d09, 0xc356, 0x9fe0, 0x9d4c, 0x58b8, 0x2c8f, 0x1, 0x0);
        gbc.writeMem(0x6d09, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc356);
        EXPECT(gbc.pc(), 0x6d0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0082
        gbc.setState(0xa336, 0xc702, 0x76a0, 0xbb00, 0x15bf, 0xc12f, 0x1, 0x1);
        gbc.writeMem(0xa336, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc702);
        EXPECT(gbc.pc(), 0xa338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa336), 0xcb);
        EXPECT(gbc.readMem(0xa337), 0x42);
        // CB 42 0083
        gbc.setState(0x1a47, 0xce9b, 0x7500, 0x857e, 0xf763, 0x5f97, 0x0, 0x0);
        gbc.writeMem(0x1a47, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xce9b);
        EXPECT(gbc.pc(), 0x1a49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0084
        gbc.setState(0x16dc, 0x24c0, 0xac00, 0x6065, 0xbce1, 0x5da0, 0x1, 0x1);
        gbc.writeMem(0x16dc, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x24c0);
        EXPECT(gbc.pc(), 0x16de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0085
        gbc.setState(0x835a, 0xde15, 0x37f0, 0xa46b, 0x1e68, 0xc71f, 0x0, 0x1);
        gbc.writeMem(0x835a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xde15);
        EXPECT(gbc.pc(), 0x835c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x835a), 0xcb);
        EXPECT(gbc.readMem(0x835b), 0x42);
        // CB 42 0088
        gbc.setState(0xd101, 0x800d, 0x9970, 0xba81, 0x81bf, 0x5946, 0x1, 0x0);
        gbc.writeMem(0xd101, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x800d);
        EXPECT(gbc.pc(), 0xd103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd101), 0xcb);
        EXPECT(gbc.readMem(0xd102), 0x42);
        // CB 42 0089
        gbc.setState(0x7f7b, 0x6d84, 0xfb00, 0x3c16, 0xd0f3, 0x53ab, 0x1, 0x1);
        gbc.writeMem(0x7f7b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6d84);
        EXPECT(gbc.pc(), 0x7f7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 008A
        gbc.setState(0xd022, 0x1267, 0x96b0, 0x1726, 0x310f, 0x15f, 0x1, 0x1);
        gbc.writeMem(0xd022, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1267);
        EXPECT(gbc.pc(), 0xd024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd022), 0xcb);
        EXPECT(gbc.readMem(0xd023), 0x42);
        // CB 42 008B
        gbc.setState(0xb8a9, 0x93fe, 0xd6f0, 0x1d61, 0x53c1, 0x8e8d, 0x1, 0x1);
        gbc.writeMem(0xb8a9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x93fe);
        EXPECT(gbc.pc(), 0xb8ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a9), 0xcb);
        EXPECT(gbc.readMem(0xb8aa), 0x42);
        // CB 42 008C
        gbc.setState(0xe615, 0x4429, 0x7090, 0x31b, 0xffd8, 0x5e2f, 0x0, 0x0);
        gbc.writeMem(0xe615, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4429);
        EXPECT(gbc.pc(), 0xe617);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe615), 0xcb);
        EXPECT(gbc.readMem(0xe616), 0x42);
        // CB 42 008D
        gbc.setState(0xc832, 0x7d46, 0x1cb0, 0xda85, 0x9dec, 0x33c9, 0x1, 0x1);
        gbc.writeMem(0xc832, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7d46);
        EXPECT(gbc.pc(), 0xc834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc832), 0xcb);
        EXPECT(gbc.readMem(0xc833), 0x42);
        // CB 42 008E
        gbc.setState(0x1184, 0xd04f, 0x3f20, 0xc237, 0x7749, 0xe66c, 0x0, 0x1);
        gbc.writeMem(0x1184, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd04f);
        EXPECT(gbc.pc(), 0x1186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 008F
        gbc.setState(0x4110, 0x9257, 0x5c0, 0x856b, 0x95ef, 0x790c, 0x1, 0x1);
        gbc.writeMem(0x4110, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9257);
        EXPECT(gbc.pc(), 0x4112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0090
        gbc.setState(0x4412, 0x70a8, 0x81a0, 0xa830, 0xf6e, 0xb5d5, 0x1, 0x1);
        gbc.writeMem(0x4412, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x70a8);
        EXPECT(gbc.pc(), 0x4414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0091
        gbc.setState(0x8b1d, 0xb652, 0x5ae0, 0x8ba9, 0x7c1b, 0xc398, 0x0, 0x1);
        gbc.writeMem(0x8b1d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb652);
        EXPECT(gbc.pc(), 0x8b1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b1d), 0xcb);
        EXPECT(gbc.readMem(0x8b1e), 0x42);
        // CB 42 0092
        gbc.setState(0xb346, 0xd2b5, 0x7d60, 0xaa7c, 0xfa27, 0x5cc7, 0x1, 0x1);
        gbc.writeMem(0xb346, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd2b5);
        EXPECT(gbc.pc(), 0xb348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb346), 0xcb);
        EXPECT(gbc.readMem(0xb347), 0x42);
        // CB 42 0093
        gbc.setState(0xa646, 0xc0bc, 0x5bc0, 0x5c62, 0x11fd, 0xf682, 0x0, 0x1);
        gbc.writeMem(0xa646, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc0bc);
        EXPECT(gbc.pc(), 0xa648);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa646), 0xcb);
        EXPECT(gbc.readMem(0xa647), 0x42);
        // CB 42 0094
        gbc.setState(0xd9fd, 0x7c98, 0x9bf0, 0x9712, 0x2e60, 0x5891, 0x0, 0x0);
        gbc.writeMem(0xd9fd, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7c98);
        EXPECT(gbc.pc(), 0xd9ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9fd), 0xcb);
        EXPECT(gbc.readMem(0xd9fe), 0x42);
        // CB 42 0095
        gbc.setState(0x199e, 0x26d2, 0x2070, 0x83d0, 0x27ab, 0xea1b, 0x1, 0x0);
        gbc.writeMem(0x199e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x26d2);
        EXPECT(gbc.pc(), 0x19a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0096
        gbc.setState(0xaed6, 0x1f41, 0x79d0, 0x23a3, 0x98dd, 0xac4d, 0x0, 0x1);
        gbc.writeMem(0xaed6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1f41);
        EXPECT(gbc.pc(), 0xaed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed6), 0xcb);
        EXPECT(gbc.readMem(0xaed7), 0x42);
        // CB 42 0097
        gbc.setState(0xae1f, 0xb55b, 0x6cb0, 0x5c22, 0x8658, 0x792e, 0x1, 0x1);
        gbc.writeMem(0xae1f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb55b);
        EXPECT(gbc.pc(), 0xae21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae1f), 0xcb);
        EXPECT(gbc.readMem(0xae20), 0x42);
        // CB 42 0098
        gbc.setState(0x6d8f, 0x8fa0, 0xded0, 0x36d9, 0xbdd1, 0xb4e0, 0x1, 0x0);
        gbc.writeMem(0x6d8f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8fa0);
        EXPECT(gbc.pc(), 0x6d91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0099
        gbc.setState(0xa6ab, 0x5339, 0xa080, 0xeb86, 0xc641, 0x9d7c, 0x1, 0x0);
        gbc.writeMem(0xa6ab, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5339);
        EXPECT(gbc.pc(), 0xa6ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ab), 0xcb);
        EXPECT(gbc.readMem(0xa6ac), 0x42);
        // CB 42 009B
        gbc.setState(0x6929, 0x529d, 0x3900, 0x993d, 0x90ee, 0x3c9, 0x1, 0x0);
        gbc.writeMem(0x6929, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x529d);
        EXPECT(gbc.pc(), 0x692b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 009C
        gbc.setState(0xe8c6, 0x2af8, 0x1800, 0xd1bb, 0x53ec, 0x5f5e, 0x0, 0x1);
        gbc.writeMem(0xe8c6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2af8);
        EXPECT(gbc.pc(), 0xe8c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c6), 0xcb);
        EXPECT(gbc.readMem(0xe8c7), 0x42);
        // CB 42 009D
        gbc.setState(0x97c1, 0xb23d, 0xc400, 0xcd69, 0xbb84, 0x3518, 0x1, 0x1);
        gbc.writeMem(0x97c1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb23d);
        EXPECT(gbc.pc(), 0x97c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97c1), 0xcb);
        EXPECT(gbc.readMem(0x97c2), 0x42);
        // CB 42 009F
        gbc.setState(0xce0d, 0xecd6, 0xeeb0, 0x2911, 0xb556, 0xf654, 0x1, 0x1);
        gbc.writeMem(0xce0d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xecd6);
        EXPECT(gbc.pc(), 0xce0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce0d), 0xcb);
        EXPECT(gbc.readMem(0xce0e), 0x42);
        // CB 42 00A0
        gbc.setState(0x930c, 0x8587, 0x1750, 0xc2fd, 0x7c5c, 0x98cc, 0x0, 0x1);
        gbc.writeMem(0x930c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8587);
        EXPECT(gbc.pc(), 0x930e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x930c), 0xcb);
        EXPECT(gbc.readMem(0x930d), 0x42);
        // CB 42 00A1
        gbc.setState(0x7480, 0x72d7, 0x7180, 0x9652, 0xa82b, 0x23f5, 0x0, 0x1);
        gbc.writeMem(0x7480, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x72d7);
        EXPECT(gbc.pc(), 0x7482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00A2
        gbc.setState(0x809c, 0xbe9, 0xa0f0, 0x75f2, 0x4dc3, 0xbe66, 0x1, 0x0);
        gbc.writeMem(0x809c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xbe9);
        EXPECT(gbc.pc(), 0x809e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x809c), 0xcb);
        EXPECT(gbc.readMem(0x809d), 0x42);
        // CB 42 00A3
        gbc.setState(0xee8a, 0x80b2, 0x99d0, 0xcb45, 0xef5e, 0x9885, 0x1, 0x1);
        gbc.writeMem(0xee8a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x80b2);
        EXPECT(gbc.pc(), 0xee8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee8a), 0xcb);
        EXPECT(gbc.readMem(0xee8b), 0x42);
        // CB 42 00A5
        gbc.setState(0xd0d2, 0xb2ec, 0x2180, 0xcc7d, 0xeb94, 0xc8b6, 0x0, 0x0);
        gbc.writeMem(0xd0d2, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb2ec);
        EXPECT(gbc.pc(), 0xd0d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0d2), 0xcb);
        EXPECT(gbc.readMem(0xd0d3), 0x42);
        // CB 42 00A6
        gbc.setState(0x5000, 0xf3c6, 0x8840, 0x21f6, 0xb90d, 0xfe2f, 0x0, 0x1);
        gbc.writeMem(0x5000, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf3c6);
        EXPECT(gbc.pc(), 0x5002);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00A7
        gbc.setState(0x312a, 0x36d8, 0x7480, 0x68a1, 0xa2a9, 0xa254, 0x1, 0x1);
        gbc.writeMem(0x312a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x36d8);
        EXPECT(gbc.pc(), 0x312c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00A8
        gbc.setState(0x4912, 0x7153, 0xe140, 0x5f29, 0x901d, 0x46e0, 0x0, 0x0);
        gbc.writeMem(0x4912, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7153);
        EXPECT(gbc.pc(), 0x4914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00A9
        gbc.setState(0x9e5a, 0x9cfd, 0x71a0, 0xcb29, 0x48c5, 0x7349, 0x0, 0x0);
        gbc.writeMem(0x9e5a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9cfd);
        EXPECT(gbc.pc(), 0x9e5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e5a), 0xcb);
        EXPECT(gbc.readMem(0x9e5b), 0x42);
        // CB 42 00AA
        gbc.setState(0xdf57, 0xa95f, 0x7960, 0xa6f1, 0xb3e4, 0xc618, 0x0, 0x0);
        gbc.writeMem(0xdf57, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa95f);
        EXPECT(gbc.pc(), 0xdf59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf57), 0xcb);
        EXPECT(gbc.readMem(0xdf58), 0x42);
        // CB 42 00AB
        gbc.setState(0xb7, 0x8de9, 0xe00, 0xba8, 0xe81e, 0x6b09, 0x0, 0x1);
        gbc.writeMem(0xb7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8de9);
        EXPECT(gbc.pc(), 0xb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00AC
        gbc.setState(0x235d, 0x66e6, 0x74c0, 0x2b90, 0x52f6, 0xb3bf, 0x0, 0x0);
        gbc.writeMem(0x235d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x66e6);
        EXPECT(gbc.pc(), 0x235f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00AD
        gbc.setState(0x45a5, 0x4527, 0xf220, 0x7c93, 0x53dd, 0x190c, 0x1, 0x1);
        gbc.writeMem(0x45a5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4527);
        EXPECT(gbc.pc(), 0x45a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00AE
        gbc.setState(0x3e73, 0x11ad, 0x3160, 0x83f, 0x7e4e, 0xc8f6, 0x1, 0x1);
        gbc.writeMem(0x3e73, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x11ad);
        EXPECT(gbc.pc(), 0x3e75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00AF
        gbc.setState(0xce75, 0x2769, 0xcd30, 0x123, 0xf206, 0xad53, 0x0, 0x0);
        gbc.writeMem(0xce75, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2769);
        EXPECT(gbc.pc(), 0xce77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce75), 0xcb);
        EXPECT(gbc.readMem(0xce76), 0x42);
        // CB 42 00B0
        gbc.setState(0xb7f6, 0x77b0, 0xc80, 0x4b93, 0xdfc2, 0xee0, 0x0, 0x0);
        gbc.writeMem(0xb7f6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x77b0);
        EXPECT(gbc.pc(), 0xb7f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7f6), 0xcb);
        EXPECT(gbc.readMem(0xb7f7), 0x42);
        // CB 42 00B1
        gbc.setState(0x6f20, 0xdacc, 0xf6d0, 0x2d30, 0x21c, 0x43cc, 0x1, 0x1);
        gbc.writeMem(0x6f20, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xdacc);
        EXPECT(gbc.pc(), 0x6f22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00B3
        gbc.setState(0x109f, 0x702f, 0x8b30, 0x2d4d, 0x64a, 0xdd6a, 0x0, 0x0);
        gbc.writeMem(0x109f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x702f);
        EXPECT(gbc.pc(), 0x10a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00B4
        gbc.setState(0x631c, 0x12e, 0x9dd0, 0x38f9, 0x7a6, 0xe90d, 0x1, 0x1);
        gbc.writeMem(0x631c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x12e);
        EXPECT(gbc.pc(), 0x631e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00B5
        gbc.setState(0x2907, 0xb9fb, 0x55e0, 0x8488, 0x71bf, 0xf35, 0x1, 0x1);
        gbc.writeMem(0x2907, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb9fb);
        EXPECT(gbc.pc(), 0x2909);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00B6
        gbc.setState(0x1288, 0xb853, 0x3d40, 0xe84, 0x9553, 0xa52, 0x0, 0x0);
        gbc.writeMem(0x1288, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb853);
        EXPECT(gbc.pc(), 0x128a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00B7
        gbc.setState(0xe350, 0x389b, 0x3c60, 0x4597, 0xbb50, 0xd369, 0x0, 0x1);
        gbc.writeMem(0xe350, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x389b);
        EXPECT(gbc.pc(), 0xe352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe350), 0xcb);
        EXPECT(gbc.readMem(0xe351), 0x42);
        // CB 42 00B8
        gbc.setState(0x13b4, 0xd7bc, 0xa650, 0x3d7c, 0x5300, 0x8283, 0x0, 0x0);
        gbc.writeMem(0x13b4, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd7bc);
        EXPECT(gbc.pc(), 0x13b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00B9
        gbc.setState(0xb3cf, 0x2e31, 0x1150, 0xcda, 0x5e1a, 0xb574, 0x0, 0x1);
        gbc.writeMem(0xb3cf, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2e31);
        EXPECT(gbc.pc(), 0xb3d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3cf), 0xcb);
        EXPECT(gbc.readMem(0xb3d0), 0x42);
        // CB 42 00BA
        gbc.setState(0xb247, 0x4de1, 0xf8c0, 0xb1b6, 0x390a, 0x1720, 0x0, 0x1);
        gbc.writeMem(0xb247, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4de1);
        EXPECT(gbc.pc(), 0xb249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb247), 0xcb);
        EXPECT(gbc.readMem(0xb248), 0x42);
        // CB 42 00BB
        gbc.setState(0xe290, 0x1c01, 0xd00, 0x6b5, 0x3553, 0x66a9, 0x1, 0x1);
        gbc.writeMem(0xe290, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x1c01);
        EXPECT(gbc.pc(), 0xe292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe290), 0xcb);
        EXPECT(gbc.readMem(0xe291), 0x42);
        // CB 42 00BC
        gbc.setState(0xe22e, 0x66d2, 0x86e0, 0x4439, 0x4248, 0xe0d8, 0x0, 0x1);
        gbc.writeMem(0xe22e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x66d2);
        EXPECT(gbc.pc(), 0xe230);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe22e), 0xcb);
        EXPECT(gbc.readMem(0xe22f), 0x42);
        // CB 42 00BD
        gbc.setState(0xe5e0, 0x6047, 0xb910, 0x268e, 0x217a, 0x982e, 0x1, 0x1);
        gbc.writeMem(0xe5e0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6047);
        EXPECT(gbc.pc(), 0xe5e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5e0), 0xcb);
        EXPECT(gbc.readMem(0xe5e1), 0x42);
        // CB 42 00BE
        gbc.setState(0xa7af, 0x4824, 0xbb30, 0xe96b, 0x1375, 0x54f9, 0x0, 0x1);
        gbc.writeMem(0xa7af, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4824);
        EXPECT(gbc.pc(), 0xa7b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7af), 0xcb);
        EXPECT(gbc.readMem(0xa7b0), 0x42);
        // CB 42 00C0
        gbc.setState(0x92d6, 0xb9fd, 0xc4e0, 0x3cb5, 0x7440, 0xd507, 0x0, 0x1);
        gbc.writeMem(0x92d6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb9fd);
        EXPECT(gbc.pc(), 0x92d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92d6), 0xcb);
        EXPECT(gbc.readMem(0x92d7), 0x42);
        // CB 42 00C2
        gbc.setState(0x4f5c, 0xc87d, 0xb200, 0x29ea, 0x9a4f, 0x283c, 0x0, 0x1);
        gbc.writeMem(0x4f5c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc87d);
        EXPECT(gbc.pc(), 0x4f5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00C3
        gbc.setState(0x24b0, 0x31fa, 0x7230, 0xef78, 0xada3, 0x12b6, 0x0, 0x0);
        gbc.writeMem(0x24b0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x31fa);
        EXPECT(gbc.pc(), 0x24b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00C4
        gbc.setState(0x5636, 0xfa9e, 0x9550, 0x2e07, 0x8634, 0xd4a3, 0x1, 0x1);
        gbc.writeMem(0x5636, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfa9e);
        EXPECT(gbc.pc(), 0x5638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00C6
        gbc.setState(0x7804, 0x7208, 0xf2a0, 0x3120, 0xf277, 0xb410, 0x1, 0x0);
        gbc.writeMem(0x7804, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7208);
        EXPECT(gbc.pc(), 0x7806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00C7
        gbc.setState(0x3b13, 0xf835, 0xf90, 0x723c, 0x3f41, 0x53c1, 0x0, 0x0);
        gbc.writeMem(0x3b13, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf835);
        EXPECT(gbc.pc(), 0x3b15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00C8
        gbc.setState(0x4745, 0x1305, 0x9560, 0xeb2a, 0xf642, 0xab67, 0x1, 0x1);
        gbc.writeMem(0x4745, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x1305);
        EXPECT(gbc.pc(), 0x4747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00C9
        gbc.setState(0x14e4, 0x6b37, 0x4f90, 0x477a, 0xc868, 0x83e, 0x0, 0x1);
        gbc.writeMem(0x14e4, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6b37);
        EXPECT(gbc.pc(), 0x14e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00CA
        gbc.setState(0x3582, 0x2494, 0xed90, 0x6915, 0x8bf3, 0x2149, 0x1, 0x1);
        gbc.writeMem(0x3582, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2494);
        EXPECT(gbc.pc(), 0x3584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00CB
        gbc.setState(0xd90d, 0x3794, 0xe450, 0x2405, 0x4c8d, 0x7a38, 0x1, 0x1);
        gbc.writeMem(0xd90d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3794);
        EXPECT(gbc.pc(), 0xd90f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd90d), 0xcb);
        EXPECT(gbc.readMem(0xd90e), 0x42);
        // CB 42 00CC
        gbc.setState(0x3738, 0xd886, 0xe250, 0xcf8e, 0x6897, 0x6154, 0x1, 0x1);
        gbc.writeMem(0x3738, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd886);
        EXPECT(gbc.pc(), 0x373a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00CD
        gbc.setState(0xbf03, 0xea36, 0xc0e0, 0x255b, 0x7092, 0x4535, 0x1, 0x0);
        gbc.writeMem(0xbf03, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xea36);
        EXPECT(gbc.pc(), 0xbf05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf03), 0xcb);
        EXPECT(gbc.readMem(0xbf04), 0x42);
        // CB 42 00CE
        gbc.setState(0x4e67, 0xbe2e, 0x8250, 0xbffa, 0xa199, 0x1e74, 0x0, 0x0);
        gbc.writeMem(0x4e67, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbe2e);
        EXPECT(gbc.pc(), 0x4e69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00CF
        gbc.setState(0x2919, 0x56d1, 0xa7f0, 0x26bb, 0x8807, 0x659, 0x0, 0x1);
        gbc.writeMem(0x2919, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x56d1);
        EXPECT(gbc.pc(), 0x291b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00D0
        gbc.setState(0x5c73, 0xac88, 0x7fb0, 0x34fe, 0xf5c9, 0xf46a, 0x0, 0x1);
        gbc.writeMem(0x5c73, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xac88);
        EXPECT(gbc.pc(), 0x5c75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00D1
        gbc.setState(0x6da3, 0x6463, 0x1830, 0xac26, 0x1108, 0x6408, 0x0, 0x0);
        gbc.writeMem(0x6da3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6463);
        EXPECT(gbc.pc(), 0x6da5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00D2
        gbc.setState(0xa7e4, 0xf824, 0xe240, 0x126a, 0xff77, 0xcc3a, 0x0, 0x1);
        gbc.writeMem(0xa7e4, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf824);
        EXPECT(gbc.pc(), 0xa7e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7e4), 0xcb);
        EXPECT(gbc.readMem(0xa7e5), 0x42);
        // CB 42 00D3
        gbc.setState(0xb46d, 0x4ada, 0xa8b0, 0x12c7, 0x13b4, 0x2cbf, 0x1, 0x0);
        gbc.writeMem(0xb46d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4ada);
        EXPECT(gbc.pc(), 0xb46f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb46d), 0xcb);
        EXPECT(gbc.readMem(0xb46e), 0x42);
        // CB 42 00D4
        gbc.setState(0x2f0a, 0x1a5e, 0xe5b0, 0x3c57, 0x62c8, 0x6225, 0x0, 0x0);
        gbc.writeMem(0x2f0a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1a5e);
        EXPECT(gbc.pc(), 0x2f0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00D5
        gbc.setState(0x859, 0x7e0, 0x5880, 0xa79c, 0x5a8, 0x942d, 0x1, 0x1);
        gbc.writeMem(0x859, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7e0);
        EXPECT(gbc.pc(), 0x85b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00D6
        gbc.setState(0x50e2, 0x4732, 0xa490, 0x49f8, 0xc5a4, 0x2bb9, 0x0, 0x1);
        gbc.writeMem(0x50e2, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4732);
        EXPECT(gbc.pc(), 0x50e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00D7
        gbc.setState(0x322f, 0x93a2, 0xe730, 0xd943, 0xc79e, 0xbfc8, 0x1, 0x0);
        gbc.writeMem(0x322f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x93a2);
        EXPECT(gbc.pc(), 0x3231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00D8
        gbc.setState(0x14f3, 0x2653, 0x9360, 0x1e31, 0xe0aa, 0xaf86, 0x0, 0x1);
        gbc.writeMem(0x14f3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2653);
        EXPECT(gbc.pc(), 0x14f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00D9
        gbc.setState(0x67a3, 0xedd3, 0x5f80, 0x69ba, 0x87e1, 0xe3b5, 0x1, 0x1);
        gbc.writeMem(0x67a3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xedd3);
        EXPECT(gbc.pc(), 0x67a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00DA
        gbc.setState(0x8341, 0x1661, 0xb530, 0x5093, 0x3c97, 0xd984, 0x0, 0x0);
        gbc.writeMem(0x8341, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1661);
        EXPECT(gbc.pc(), 0x8343);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8341), 0xcb);
        EXPECT(gbc.readMem(0x8342), 0x42);
        // CB 42 00DB
        gbc.setState(0x6709, 0x3b46, 0xcb0, 0x3f54, 0x9d9f, 0x9189, 0x1, 0x0);
        gbc.writeMem(0x6709, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3b46);
        EXPECT(gbc.pc(), 0x670b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00DC
        gbc.setState(0xdb00, 0x7777, 0xedf0, 0x9710, 0xdc00, 0x780, 0x1, 0x1);
        gbc.writeMem(0xdb00, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7777);
        EXPECT(gbc.pc(), 0xdb02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb00), 0xcb);
        EXPECT(gbc.readMem(0xdb01), 0x42);
        // CB 42 00DD
        gbc.setState(0xf28, 0xda4c, 0x6d90, 0xd305, 0x743d, 0x31c5, 0x1, 0x1);
        gbc.writeMem(0xf28, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xda4c);
        EXPECT(gbc.pc(), 0xf2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00DE
        gbc.setState(0xc741, 0xec43, 0x54c0, 0x44f6, 0x7b21, 0x69fe, 0x1, 0x1);
        gbc.writeMem(0xc741, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xec43);
        EXPECT(gbc.pc(), 0xc743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc741), 0xcb);
        EXPECT(gbc.readMem(0xc742), 0x42);
        // CB 42 00E0
        gbc.setState(0x8c97, 0xf364, 0x6e00, 0xaaa1, 0x5ffc, 0xf4a8, 0x1, 0x0);
        gbc.writeMem(0x8c97, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf364);
        EXPECT(gbc.pc(), 0x8c99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c97), 0xcb);
        EXPECT(gbc.readMem(0x8c98), 0x42);
        // CB 42 00E2
        gbc.setState(0x278f, 0x1f63, 0xa430, 0xa033, 0xc6a0, 0xba90, 0x1, 0x0);
        gbc.writeMem(0x278f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1f63);
        EXPECT(gbc.pc(), 0x2791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00E3
        gbc.setState(0xc14a, 0x3108, 0xd0b0, 0xf128, 0xf097, 0x4dac, 0x1, 0x0);
        gbc.writeMem(0xc14a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3108);
        EXPECT(gbc.pc(), 0xc14c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc14a), 0xcb);
        EXPECT(gbc.readMem(0xc14b), 0x42);
        // CB 42 00E4
        gbc.setState(0x964d, 0x9407, 0x4bc0, 0xf7e3, 0x274, 0xbeca, 0x1, 0x0);
        gbc.writeMem(0x964d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9407);
        EXPECT(gbc.pc(), 0x964f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x964d), 0xcb);
        EXPECT(gbc.readMem(0x964e), 0x42);
        // CB 42 00E5
        gbc.setState(0x5a85, 0x3813, 0xfd00, 0xa3e5, 0xf88d, 0xfce9, 0x0, 0x0);
        gbc.writeMem(0x5a85, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x3813);
        EXPECT(gbc.pc(), 0x5a87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00E6
        gbc.setState(0xbc96, 0xfe63, 0x7330, 0x8eca, 0xf39f, 0x21e7, 0x0, 0x1);
        gbc.writeMem(0xbc96, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xfe63);
        EXPECT(gbc.pc(), 0xbc98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc96), 0xcb);
        EXPECT(gbc.readMem(0xbc97), 0x42);
        // CB 42 00E7
        gbc.setState(0x15b3, 0x351d, 0xf090, 0xb884, 0x4e2e, 0xb051, 0x1, 0x1);
        gbc.writeMem(0x15b3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x351d);
        EXPECT(gbc.pc(), 0x15b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00E8
        gbc.setState(0xffd, 0x2f3f, 0xa430, 0xb3b, 0x576b, 0x82c7, 0x1, 0x0);
        gbc.writeMem(0xffd, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2f3f);
        EXPECT(gbc.pc(), 0xfff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00E9
        gbc.setState(0xd7f5, 0x94e1, 0xe320, 0x9f09, 0x41e6, 0x3a10, 0x0, 0x1);
        gbc.writeMem(0xd7f5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x94e1);
        EXPECT(gbc.pc(), 0xd7f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7f5), 0xcb);
        EXPECT(gbc.readMem(0xd7f6), 0x42);
        // CB 42 00EA
        gbc.setState(0x705e, 0xce59, 0x3e40, 0xc490, 0xc4dc, 0xe110, 0x0, 0x1);
        gbc.writeMem(0x705e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xce59);
        EXPECT(gbc.pc(), 0x7060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00EB
        gbc.setState(0xaaac, 0x5562, 0xc910, 0x18d1, 0x93d5, 0x96d6, 0x0, 0x0);
        gbc.writeMem(0xaaac, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5562);
        EXPECT(gbc.pc(), 0xaaae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaac), 0xcb);
        EXPECT(gbc.readMem(0xaaad), 0x42);
        // CB 42 00EC
        gbc.setState(0xbde1, 0x941f, 0xa440, 0xf0d7, 0x109e, 0x750d, 0x0, 0x0);
        gbc.writeMem(0xbde1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x941f);
        EXPECT(gbc.pc(), 0xbde3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbde1), 0xcb);
        EXPECT(gbc.readMem(0xbde2), 0x42);
        // CB 42 00ED
        gbc.setState(0x72a5, 0xf51c, 0xc9a0, 0x7729, 0xa695, 0xb9a8, 0x0, 0x1);
        gbc.writeMem(0x72a5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf51c);
        EXPECT(gbc.pc(), 0x72a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00EE
        gbc.setState(0xa3c1, 0xcdaa, 0xb7d0, 0xa1bc, 0xfa06, 0xea6b, 0x0, 0x1);
        gbc.writeMem(0xa3c1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xcdaa);
        EXPECT(gbc.pc(), 0xa3c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c1), 0xcb);
        EXPECT(gbc.readMem(0xa3c2), 0x42);
        // CB 42 00EF
        gbc.setState(0x5da6, 0xfc3d, 0x1600, 0xe575, 0x1a95, 0x2847, 0x0, 0x0);
        gbc.writeMem(0x5da6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xfc3d);
        EXPECT(gbc.pc(), 0x5da8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00F0
        gbc.setState(0x2371, 0x5b03, 0x5360, 0xbcba, 0xfe77, 0xd229, 0x0, 0x1);
        gbc.writeMem(0x2371, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5b03);
        EXPECT(gbc.pc(), 0x2373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00F1
        gbc.setState(0x7779, 0x33de, 0x81c0, 0xee9d, 0x9b3c, 0x3e49, 0x0, 0x0);
        gbc.writeMem(0x7779, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x33de);
        EXPECT(gbc.pc(), 0x777b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00F2
        gbc.setState(0x7b4e, 0x3809, 0x8960, 0x484d, 0x44ec, 0x5bc3, 0x0, 0x0);
        gbc.writeMem(0x7b4e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3809);
        EXPECT(gbc.pc(), 0x7b50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00F3
        gbc.setState(0x59f6, 0x38c5, 0x2c40, 0xba78, 0xa460, 0xa24d, 0x1, 0x1);
        gbc.writeMem(0x59f6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x38c5);
        EXPECT(gbc.pc(), 0x59f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 00F4
        gbc.setState(0x2df6, 0x54df, 0x7910, 0x455e, 0xf735, 0x8b7, 0x1, 0x1);
        gbc.writeMem(0x2df6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x54df);
        EXPECT(gbc.pc(), 0x2df8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00F6
        gbc.setState(0xc827, 0x3efc, 0x27a0, 0xcc4e, 0xdb09, 0x9b80, 0x0, 0x1);
        gbc.writeMem(0xc827, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3efc);
        EXPECT(gbc.pc(), 0xc829);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc827), 0xcb);
        EXPECT(gbc.readMem(0xc828), 0x42);
        // CB 42 00F7
        gbc.setState(0xd714, 0xeb2e, 0xe270, 0x7040, 0xced4, 0xa222, 0x0, 0x1);
        gbc.writeMem(0xd714, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xeb2e);
        EXPECT(gbc.pc(), 0xd716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd714), 0xcb);
        EXPECT(gbc.readMem(0xd715), 0x42);
        // CB 42 00F8
        gbc.setState(0xed75, 0xbff9, 0x99e0, 0xec54, 0xa4fa, 0xdd1f, 0x1, 0x1);
        gbc.writeMem(0xed75, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xbff9);
        EXPECT(gbc.pc(), 0xed77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed75), 0xcb);
        EXPECT(gbc.readMem(0xed76), 0x42);
        // CB 42 00F9
        gbc.setState(0x40cb, 0xcb0c, 0x8970, 0xa77b, 0x6ec0, 0xffa9, 0x1, 0x0);
        gbc.writeMem(0x40cb, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xcb0c);
        EXPECT(gbc.pc(), 0x40cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00FA
        gbc.setState(0x574f, 0xac84, 0x1250, 0x282a, 0xd6e2, 0xbf5c, 0x1, 0x1);
        gbc.writeMem(0x574f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xac84);
        EXPECT(gbc.pc(), 0x5751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 00FB
        gbc.setState(0xd3b3, 0x9498, 0xb1a0, 0x683b, 0x8cf8, 0x3694, 0x1, 0x0);
        gbc.writeMem(0xd3b3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9498);
        EXPECT(gbc.pc(), 0xd3b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3b3), 0xcb);
        EXPECT(gbc.readMem(0xd3b4), 0x42);
        // CB 42 00FC
        gbc.setState(0xc0d4, 0xc6f, 0x91b0, 0x359c, 0xc618, 0x92b7, 0x0, 0x1);
        gbc.writeMem(0xc0d4, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc6f);
        EXPECT(gbc.pc(), 0xc0d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0d4), 0xcb);
        EXPECT(gbc.readMem(0xc0d5), 0x42);
        // CB 42 00FD
        gbc.setState(0xe05b, 0x1ecc, 0x4ec0, 0x5866, 0x841d, 0x9d0b, 0x0, 0x0);
        gbc.writeMem(0xe05b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1ecc);
        EXPECT(gbc.pc(), 0xe05d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe05b), 0xcb);
        EXPECT(gbc.readMem(0xe05c), 0x42);
        // CB 42 00FF
        gbc.setState(0xa19d, 0xd219, 0x8960, 0xf3d0, 0xfba3, 0x1201, 0x0, 0x1);
        gbc.writeMem(0xa19d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd219);
        EXPECT(gbc.pc(), 0xa19f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa19d), 0xcb);
        EXPECT(gbc.readMem(0xa19e), 0x42);
        // CB 42 0100
        gbc.setState(0x9ee9, 0x7636, 0x42f0, 0x4f9a, 0x6cc9, 0x7931, 0x0, 0x0);
        gbc.writeMem(0x9ee9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7636);
        EXPECT(gbc.pc(), 0x9eeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee9), 0xcb);
        EXPECT(gbc.readMem(0x9eea), 0x42);
        // CB 42 0101
        gbc.setState(0x7fcb, 0xadaa, 0xfff0, 0x824f, 0xe8e7, 0xc314, 0x1, 0x0);
        gbc.writeMem(0x7fcb, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xadaa);
        EXPECT(gbc.pc(), 0x7fcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0102
        gbc.setState(0x24f4, 0xc339, 0x5920, 0x6872, 0x617d, 0x9e24, 0x0, 0x0);
        gbc.writeMem(0x24f4, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc339);
        EXPECT(gbc.pc(), 0x24f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0103
        gbc.setState(0x2304, 0xc260, 0x2220, 0x4c84, 0xab34, 0x793b, 0x0, 0x1);
        gbc.writeMem(0x2304, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc260);
        EXPECT(gbc.pc(), 0x2306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0104
        gbc.setState(0x355f, 0x28f4, 0xe860, 0x64c1, 0xf905, 0x5a37, 0x0, 0x0);
        gbc.writeMem(0x355f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x28f4);
        EXPECT(gbc.pc(), 0x3561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0105
        gbc.setState(0x76c6, 0x740d, 0x13d0, 0x6c97, 0x33e7, 0xff7b, 0x0, 0x1);
        gbc.writeMem(0x76c6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x740d);
        EXPECT(gbc.pc(), 0x76c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0106
        gbc.setState(0x4b29, 0x49be, 0xc3a0, 0x6f4d, 0x113c, 0x2a76, 0x0, 0x1);
        gbc.writeMem(0x4b29, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x49be);
        EXPECT(gbc.pc(), 0x4b2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0107
        gbc.setState(0x92f7, 0x21d4, 0x51b0, 0x827e, 0xddd6, 0xe953, 0x1, 0x0);
        gbc.writeMem(0x92f7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x21d4);
        EXPECT(gbc.pc(), 0x92f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92f7), 0xcb);
        EXPECT(gbc.readMem(0x92f8), 0x42);
        // CB 42 0108
        gbc.setState(0x87c2, 0xd9f5, 0x3a50, 0x8452, 0x74fb, 0x36e5, 0x0, 0x0);
        gbc.writeMem(0x87c2, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd9f5);
        EXPECT(gbc.pc(), 0x87c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87c2), 0xcb);
        EXPECT(gbc.readMem(0x87c3), 0x42);
        // CB 42 0109
        gbc.setState(0x603d, 0x335c, 0x13a0, 0x9b5, 0xb3c0, 0x4df9, 0x0, 0x1);
        gbc.writeMem(0x603d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x335c);
        EXPECT(gbc.pc(), 0x603f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 010A
        gbc.setState(0x536f, 0xe253, 0x1bb0, 0xa2c4, 0x1c9e, 0xa3e5, 0x1, 0x0);
        gbc.writeMem(0x536f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe253);
        EXPECT(gbc.pc(), 0x5371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 010B
        gbc.setState(0xad38, 0xa9ed, 0x8630, 0x3d26, 0xfb78, 0xdb5f, 0x1, 0x0);
        gbc.writeMem(0xad38, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa9ed);
        EXPECT(gbc.pc(), 0xad3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad38), 0xcb);
        EXPECT(gbc.readMem(0xad39), 0x42);
        // CB 42 010C
        gbc.setState(0xaf55, 0xbdc7, 0xbb20, 0x5be4, 0xcae, 0x6b0f, 0x0, 0x0);
        gbc.writeMem(0xaf55, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xbdc7);
        EXPECT(gbc.pc(), 0xaf57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf55), 0xcb);
        EXPECT(gbc.readMem(0xaf56), 0x42);
        // CB 42 010D
        gbc.setState(0xa4eb, 0xa968, 0x25b0, 0xef35, 0x5784, 0xdf30, 0x0, 0x1);
        gbc.writeMem(0xa4eb, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa968);
        EXPECT(gbc.pc(), 0xa4ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4eb), 0xcb);
        EXPECT(gbc.readMem(0xa4ec), 0x42);
        // CB 42 010E
        gbc.setState(0x9707, 0x2309, 0x3eb0, 0x420f, 0xca9f, 0x62f2, 0x1, 0x1);
        gbc.writeMem(0x9707, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2309);
        EXPECT(gbc.pc(), 0x9709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9707), 0xcb);
        EXPECT(gbc.readMem(0x9708), 0x42);
        // CB 42 010F
        gbc.setState(0xbb93, 0x5e43, 0x6f70, 0x5d5a, 0x73e, 0x9dd, 0x1, 0x0);
        gbc.writeMem(0xbb93, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5e43);
        EXPECT(gbc.pc(), 0xbb95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb93), 0xcb);
        EXPECT(gbc.readMem(0xbb94), 0x42);
        // CB 42 0110
        gbc.setState(0x1665, 0xf634, 0x75d0, 0x5d75, 0x6bf4, 0xfe6c, 0x1, 0x1);
        gbc.writeMem(0x1665, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf634);
        EXPECT(gbc.pc(), 0x1667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0111
        gbc.setState(0xa39, 0x7b35, 0xcec0, 0xeb42, 0xfb67, 0xf6ca, 0x0, 0x0);
        gbc.writeMem(0xa39, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7b35);
        EXPECT(gbc.pc(), 0xa3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0112
        gbc.setState(0x2edd, 0x3dea, 0xee60, 0x89ea, 0x10f1, 0xc73c, 0x1, 0x0);
        gbc.writeMem(0x2edd, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3dea);
        EXPECT(gbc.pc(), 0x2edf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0113
        gbc.setState(0xefe3, 0xcc6e, 0x2d60, 0x531d, 0x94b9, 0xb600, 0x0, 0x1);
        gbc.writeMem(0xefe3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xcc6e);
        EXPECT(gbc.pc(), 0xefe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefe3), 0xcb);
        EXPECT(gbc.readMem(0xefe4), 0x42);
        // CB 42 0114
        gbc.setState(0x40a7, 0xfcf6, 0xdef0, 0x33a9, 0x725e, 0xc716, 0x1, 0x1);
        gbc.writeMem(0x40a7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfcf6);
        EXPECT(gbc.pc(), 0x40a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0115
        gbc.setState(0xebd9, 0x1499, 0x3320, 0x1cf, 0xca7b, 0xeebf, 0x0, 0x1);
        gbc.writeMem(0xebd9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1499);
        EXPECT(gbc.pc(), 0xebdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebd9), 0xcb);
        EXPECT(gbc.readMem(0xebda), 0x42);
        // CB 42 0116
        gbc.setState(0x6a81, 0x5627, 0x84c0, 0x510b, 0xacd4, 0x6f0c, 0x1, 0x0);
        gbc.writeMem(0x6a81, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5627);
        EXPECT(gbc.pc(), 0x6a83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0117
        gbc.setState(0xbb9b, 0xef84, 0xd020, 0x51e9, 0x74ad, 0x2508, 0x1, 0x1);
        gbc.writeMem(0xbb9b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xef84);
        EXPECT(gbc.pc(), 0xbb9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb9b), 0xcb);
        EXPECT(gbc.readMem(0xbb9c), 0x42);
        // CB 42 0118
        gbc.setState(0x9340, 0x435b, 0x3a40, 0x1e8, 0xf14c, 0x643e, 0x0, 0x1);
        gbc.writeMem(0x9340, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x435b);
        EXPECT(gbc.pc(), 0x9342);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9340), 0xcb);
        EXPECT(gbc.readMem(0x9341), 0x42);
        // CB 42 0119
        gbc.setState(0x3319, 0xb6d0, 0x28a0, 0x14ff, 0x3f7c, 0xb08a, 0x1, 0x1);
        gbc.writeMem(0x3319, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb6d0);
        EXPECT(gbc.pc(), 0x331b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 011A
        gbc.setState(0x22a9, 0xb03c, 0xdc0, 0x1c38, 0x6aea, 0xd7a8, 0x1, 0x1);
        gbc.writeMem(0x22a9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb03c);
        EXPECT(gbc.pc(), 0x22ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 011B
        gbc.setState(0x243, 0xd451, 0x8a70, 0xe2eb, 0xdcf8, 0x239b, 0x0, 0x1);
        gbc.writeMem(0x243, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd451);
        EXPECT(gbc.pc(), 0x245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 011C
        gbc.setState(0xc730, 0xe46b, 0x6e90, 0x7457, 0x403e, 0xe96b, 0x1, 0x1);
        gbc.writeMem(0xc730, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe46b);
        EXPECT(gbc.pc(), 0xc732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc730), 0xcb);
        EXPECT(gbc.readMem(0xc731), 0x42);
        // CB 42 011D
        gbc.setState(0x7ee5, 0x6e3, 0x9b40, 0xe945, 0x5e1f, 0xdbca, 0x0, 0x0);
        gbc.writeMem(0x7ee5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6e3);
        EXPECT(gbc.pc(), 0x7ee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 011E
        gbc.setState(0xc187, 0x7be5, 0x9e40, 0xdc3d, 0x42c1, 0x251b, 0x0, 0x1);
        gbc.writeMem(0xc187, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7be5);
        EXPECT(gbc.pc(), 0xc189);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc187), 0xcb);
        EXPECT(gbc.readMem(0xc188), 0x42);
        // CB 42 011F
        gbc.setState(0x851e, 0x18b7, 0x3090, 0xbd6b, 0x6181, 0xb22, 0x1, 0x0);
        gbc.writeMem(0x851e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x18b7);
        EXPECT(gbc.pc(), 0x8520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x851e), 0xcb);
        EXPECT(gbc.readMem(0x851f), 0x42);
        // CB 42 0120
        gbc.setState(0x58ee, 0x2660, 0x32d0, 0x19c0, 0x6d96, 0xa769, 0x0, 0x0);
        gbc.writeMem(0x58ee, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2660);
        EXPECT(gbc.pc(), 0x58f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0121
        gbc.setState(0x567a, 0x4d88, 0x8e20, 0xba33, 0xd54a, 0x3c18, 0x1, 0x1);
        gbc.writeMem(0x567a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4d88);
        EXPECT(gbc.pc(), 0x567c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0122
        gbc.setState(0x1423, 0x2f28, 0x9b00, 0xeef8, 0xf30d, 0xbd92, 0x1, 0x0);
        gbc.writeMem(0x1423, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2f28);
        EXPECT(gbc.pc(), 0x1425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0123
        gbc.setState(0x1091, 0x8399, 0x7e20, 0x4e0c, 0x22de, 0x7038, 0x1, 0x0);
        gbc.writeMem(0x1091, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8399);
        EXPECT(gbc.pc(), 0x1093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0124
        gbc.setState(0xbbf, 0x2e81, 0xbf00, 0xd20c, 0x1531, 0xaa88, 0x1, 0x1);
        gbc.writeMem(0xbbf, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2e81);
        EXPECT(gbc.pc(), 0xbc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0125
        gbc.setState(0x54c6, 0xa6a8, 0x6040, 0x5458, 0xc15f, 0x8cf6, 0x0, 0x1);
        gbc.writeMem(0x54c6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa6a8);
        EXPECT(gbc.pc(), 0x54c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0126
        gbc.setState(0x2f52, 0x55d7, 0x8b50, 0xabd1, 0xc622, 0xd04f, 0x0, 0x0);
        gbc.writeMem(0x2f52, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x55d7);
        EXPECT(gbc.pc(), 0x2f54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0127
        gbc.setState(0xcedd, 0xeb9f, 0x8ac0, 0xe525, 0x3568, 0x5b22, 0x1, 0x0);
        gbc.writeMem(0xcedd, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xeb9f);
        EXPECT(gbc.pc(), 0xcedf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcedd), 0xcb);
        EXPECT(gbc.readMem(0xcede), 0x42);
        // CB 42 0128
        gbc.setState(0x8cc6, 0xadb0, 0x3b50, 0x6e8f, 0xecbc, 0xc03d, 0x0, 0x1);
        gbc.writeMem(0x8cc6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xadb0);
        EXPECT(gbc.pc(), 0x8cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc6), 0xcb);
        EXPECT(gbc.readMem(0x8cc7), 0x42);
        // CB 42 0129
        gbc.setState(0x6c7f, 0x4fb6, 0x36a0, 0xf4ab, 0xb415, 0x1cd9, 0x1, 0x0);
        gbc.writeMem(0x6c7f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4fb6);
        EXPECT(gbc.pc(), 0x6c81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 012A
        gbc.setState(0xef27, 0x904b, 0x6570, 0xb784, 0x62fb, 0xfe6d, 0x0, 0x0);
        gbc.writeMem(0xef27, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x904b);
        EXPECT(gbc.pc(), 0xef29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef27), 0xcb);
        EXPECT(gbc.readMem(0xef28), 0x42);
        // CB 42 012B
        gbc.setState(0x2dd9, 0xfa29, 0x1ad0, 0x2016, 0xe06d, 0xbf81, 0x0, 0x1);
        gbc.writeMem(0x2dd9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xfa29);
        EXPECT(gbc.pc(), 0x2ddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 012C
        gbc.setState(0x4e9e, 0xd48f, 0x90d0, 0xb73, 0x967d, 0x97ba, 0x0, 0x1);
        gbc.writeMem(0x4e9e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd48f);
        EXPECT(gbc.pc(), 0x4ea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 012D
        gbc.setState(0x3006, 0x777c, 0x41c0, 0xf5d3, 0x53ad, 0x3da1, 0x0, 0x1);
        gbc.writeMem(0x3006, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x777c);
        EXPECT(gbc.pc(), 0x3008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 012E
        gbc.setState(0x4213, 0x43bf, 0x1280, 0x976, 0xa3b, 0xad4, 0x1, 0x1);
        gbc.writeMem(0x4213, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x43bf);
        EXPECT(gbc.pc(), 0x4215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 012F
        gbc.setState(0x8393, 0xca1, 0xbc40, 0x7d65, 0x18c3, 0x287e, 0x0, 0x0);
        gbc.writeMem(0x8393, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xca1);
        EXPECT(gbc.pc(), 0x8395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8393), 0xcb);
        EXPECT(gbc.readMem(0x8394), 0x42);
        // CB 42 0131
        gbc.setState(0x58f3, 0xd30, 0x4b10, 0xa239, 0xed14, 0x5084, 0x0, 0x0);
        gbc.writeMem(0x58f3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd30);
        EXPECT(gbc.pc(), 0x58f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0132
        gbc.setState(0x55ac, 0x55f1, 0xa4e0, 0x7160, 0xb4b6, 0xa2fc, 0x0, 0x1);
        gbc.writeMem(0x55ac, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x55f1);
        EXPECT(gbc.pc(), 0x55ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0133
        gbc.setState(0x633, 0xdf6c, 0x30f0, 0x565, 0xe142, 0x8ed0, 0x1, 0x0);
        gbc.writeMem(0x633, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xdf6c);
        EXPECT(gbc.pc(), 0x635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0134
        gbc.setState(0xe74f, 0x6a61, 0x5be0, 0x8d65, 0x2bf2, 0x48d7, 0x1, 0x0);
        gbc.writeMem(0xe74f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6a61);
        EXPECT(gbc.pc(), 0xe751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe74f), 0xcb);
        EXPECT(gbc.readMem(0xe750), 0x42);
        // CB 42 0135
        gbc.setState(0x4d0a, 0x20a9, 0x2d0, 0x8d05, 0x4ac, 0x360c, 0x0, 0x0);
        gbc.writeMem(0x4d0a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x20a9);
        EXPECT(gbc.pc(), 0x4d0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0136
        gbc.setState(0x9766, 0x3f9a, 0x1720, 0xedb1, 0x56e3, 0xdba9, 0x0, 0x1);
        gbc.writeMem(0x9766, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3f9a);
        EXPECT(gbc.pc(), 0x9768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9766), 0xcb);
        EXPECT(gbc.readMem(0x9767), 0x42);
        // CB 42 0137
        gbc.setState(0x5626, 0xa98f, 0xf4e0, 0x7575, 0x5329, 0x9cfa, 0x0, 0x0);
        gbc.writeMem(0x5626, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa98f);
        EXPECT(gbc.pc(), 0x5628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0138
        gbc.setState(0x57fe, 0xc380, 0x2a30, 0x1ef, 0xd755, 0x339d, 0x0, 0x0);
        gbc.writeMem(0x57fe, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc380);
        EXPECT(gbc.pc(), 0x5800);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 013A
        gbc.setState(0x6c81, 0x7dfb, 0x820, 0x97d4, 0xc117, 0xf047, 0x1, 0x0);
        gbc.writeMem(0x6c81, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7dfb);
        EXPECT(gbc.pc(), 0x6c83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 013C
        gbc.setState(0x4d0f, 0x2d19, 0xefb0, 0x5ea6, 0x5e7a, 0x9425, 0x0, 0x0);
        gbc.writeMem(0x4d0f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2d19);
        EXPECT(gbc.pc(), 0x4d11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 013D
        gbc.setState(0x4c83, 0xce0a, 0x5240, 0x7695, 0xa9ab, 0x4d07, 0x0, 0x0);
        gbc.writeMem(0x4c83, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xce0a);
        EXPECT(gbc.pc(), 0x4c85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 013E
        gbc.setState(0x6d78, 0xb3dd, 0x86d0, 0x633b, 0x7e55, 0x9d3e, 0x0, 0x0);
        gbc.writeMem(0x6d78, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb3dd);
        EXPECT(gbc.pc(), 0x6d7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 013F
        gbc.setState(0xd6e2, 0x4a2f, 0x9230, 0xeee0, 0x1f50, 0xdab7, 0x0, 0x0);
        gbc.writeMem(0xd6e2, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4a2f);
        EXPECT(gbc.pc(), 0xd6e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6e2), 0xcb);
        EXPECT(gbc.readMem(0xd6e3), 0x42);
        // CB 42 0140
        gbc.setState(0xb8b3, 0x1a77, 0xc8f0, 0x1083, 0x2778, 0x1a7d, 0x1, 0x0);
        gbc.writeMem(0xb8b3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1a77);
        EXPECT(gbc.pc(), 0xb8b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8b3), 0xcb);
        EXPECT(gbc.readMem(0xb8b4), 0x42);
        // CB 42 0141
        gbc.setState(0x7b92, 0x86b6, 0xe760, 0xe653, 0x15cb, 0xe7a3, 0x0, 0x0);
        gbc.writeMem(0x7b92, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x86b6);
        EXPECT(gbc.pc(), 0x7b94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0142
        gbc.setState(0xac0c, 0xcfc, 0xc9a0, 0x72b7, 0xe409, 0xf1ec, 0x0, 0x1);
        gbc.writeMem(0xac0c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xcfc);
        EXPECT(gbc.pc(), 0xac0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac0c), 0xcb);
        EXPECT(gbc.readMem(0xac0d), 0x42);
        // CB 42 0143
        gbc.setState(0x3a0, 0x5c54, 0x2c50, 0x3607, 0x6531, 0x8b51, 0x0, 0x0);
        gbc.writeMem(0x3a0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5c54);
        EXPECT(gbc.pc(), 0x3a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0144
        gbc.setState(0x58cd, 0x3dab, 0x920, 0x39dd, 0x5ea5, 0x781c, 0x0, 0x0);
        gbc.writeMem(0x58cd, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3dab);
        EXPECT(gbc.pc(), 0x58cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0145
        gbc.setState(0x913c, 0x10bf, 0x6350, 0xe220, 0x5b8b, 0xe9bc, 0x1, 0x1);
        gbc.writeMem(0x913c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x10bf);
        EXPECT(gbc.pc(), 0x913e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x913c), 0xcb);
        EXPECT(gbc.readMem(0x913d), 0x42);
        // CB 42 0146
        gbc.setState(0x8a46, 0x67b4, 0x9a80, 0x80a9, 0x9fd7, 0x40c, 0x0, 0x1);
        gbc.writeMem(0x8a46, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x67b4);
        EXPECT(gbc.pc(), 0x8a48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a46), 0xcb);
        EXPECT(gbc.readMem(0x8a47), 0x42);
        // CB 42 0147
        gbc.setState(0xa7a1, 0xc354, 0x12e0, 0xe87f, 0x4923, 0x4d30, 0x1, 0x0);
        gbc.writeMem(0xa7a1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc354);
        EXPECT(gbc.pc(), 0xa7a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a1), 0xcb);
        EXPECT(gbc.readMem(0xa7a2), 0x42);
        // CB 42 0148
        gbc.setState(0xc77d, 0xb66, 0x90d0, 0xcb1f, 0xaa69, 0x2a04, 0x1, 0x1);
        gbc.writeMem(0xc77d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb66);
        EXPECT(gbc.pc(), 0xc77f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc77d), 0xcb);
        EXPECT(gbc.readMem(0xc77e), 0x42);
        // CB 42 0149
        gbc.setState(0x8874, 0xbed7, 0x78e0, 0x6ebb, 0x1919, 0xd02c, 0x1, 0x0);
        gbc.writeMem(0x8874, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbed7);
        EXPECT(gbc.pc(), 0x8876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8874), 0xcb);
        EXPECT(gbc.readMem(0x8875), 0x42);
        // CB 42 014A
        gbc.setState(0x1755, 0x439f, 0xb360, 0xe551, 0x7f6c, 0x3fb1, 0x0, 0x1);
        gbc.writeMem(0x1755, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x439f);
        EXPECT(gbc.pc(), 0x1757);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 014B
        gbc.setState(0x57cb, 0xe29f, 0x3410, 0xc735, 0xdcb2, 0xbe69, 0x1, 0x1);
        gbc.writeMem(0x57cb, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe29f);
        EXPECT(gbc.pc(), 0x57cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 014C
        gbc.setState(0x3b79, 0xde93, 0x11a0, 0xec19, 0xa9e0, 0x8f7f, 0x0, 0x0);
        gbc.writeMem(0x3b79, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xde93);
        EXPECT(gbc.pc(), 0x3b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 014D
        gbc.setState(0x8c4e, 0x3c09, 0x69e0, 0x2888, 0x99cd, 0x976, 0x0, 0x1);
        gbc.writeMem(0x8c4e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3c09);
        EXPECT(gbc.pc(), 0x8c50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c4e), 0xcb);
        EXPECT(gbc.readMem(0x8c4f), 0x42);
        // CB 42 014E
        gbc.setState(0x50b0, 0xaab3, 0xd5f0, 0xb688, 0xd363, 0xcb65, 0x0, 0x0);
        gbc.writeMem(0x50b0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xaab3);
        EXPECT(gbc.pc(), 0x50b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0150
        gbc.setState(0xc3b7, 0x4886, 0x8030, 0x1379, 0x8554, 0xbf41, 0x1, 0x0);
        gbc.writeMem(0xc3b7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x4886);
        EXPECT(gbc.pc(), 0xc3b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3b7), 0xcb);
        EXPECT(gbc.readMem(0xc3b8), 0x42);
        // CB 42 0151
        gbc.setState(0x470b, 0x9a5, 0xb9c0, 0x5904, 0x1179, 0x7e2a, 0x1, 0x0);
        gbc.writeMem(0x470b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9a5);
        EXPECT(gbc.pc(), 0x470d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0152
        gbc.setState(0xb811, 0xd7d5, 0xc1b0, 0x66ac, 0xb3f, 0x3ada, 0x1, 0x0);
        gbc.writeMem(0xb811, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd7d5);
        EXPECT(gbc.pc(), 0xb813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb811), 0xcb);
        EXPECT(gbc.readMem(0xb812), 0x42);
        // CB 42 0153
        gbc.setState(0xda26, 0x8d1d, 0x6a60, 0xe668, 0x8d48, 0xde99, 0x1, 0x1);
        gbc.writeMem(0xda26, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8d1d);
        EXPECT(gbc.pc(), 0xda28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda26), 0xcb);
        EXPECT(gbc.readMem(0xda27), 0x42);
        // CB 42 0154
        gbc.setState(0xb433, 0x3100, 0xeb00, 0x68f3, 0xa26e, 0x56d1, 0x1, 0x1);
        gbc.writeMem(0xb433, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3100);
        EXPECT(gbc.pc(), 0xb435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb433), 0xcb);
        EXPECT(gbc.readMem(0xb434), 0x42);
        // CB 42 0156
        gbc.setState(0xe5df, 0x768f, 0x92f0, 0xc077, 0x2957, 0xf326, 0x1, 0x0);
        gbc.writeMem(0xe5df, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x768f);
        EXPECT(gbc.pc(), 0xe5e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5df), 0xcb);
        EXPECT(gbc.readMem(0xe5e0), 0x42);
        // CB 42 0157
        gbc.setState(0x3a1a, 0x8559, 0x900, 0xda4b, 0xb920, 0x3e38, 0x0, 0x0);
        gbc.writeMem(0x3a1a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8559);
        EXPECT(gbc.pc(), 0x3a1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0158
        gbc.setState(0xb311, 0xafe, 0x80c0, 0x4098, 0xd9ca, 0xecf0, 0x1, 0x0);
        gbc.writeMem(0xb311, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xafe);
        EXPECT(gbc.pc(), 0xb313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb311), 0xcb);
        EXPECT(gbc.readMem(0xb312), 0x42);
        // CB 42 0159
        gbc.setState(0x42a1, 0x5b81, 0xd360, 0x1bec, 0x9c16, 0xa0ea, 0x1, 0x1);
        gbc.writeMem(0x42a1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5b81);
        EXPECT(gbc.pc(), 0x42a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 015A
        gbc.setState(0x7051, 0xc346, 0x3260, 0xbba, 0xfb0a, 0x2b03, 0x0, 0x0);
        gbc.writeMem(0x7051, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xc346);
        EXPECT(gbc.pc(), 0x7053);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 015B
        gbc.setState(0xe01f, 0xabf5, 0xb2c0, 0x98ee, 0xe94f, 0x47e, 0x0, 0x1);
        gbc.writeMem(0xe01f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xabf5);
        EXPECT(gbc.pc(), 0xe021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe01f), 0xcb);
        EXPECT(gbc.readMem(0xe020), 0x42);
        // CB 42 015C
        gbc.setState(0xdd7e, 0x9503, 0xedc0, 0x2eab, 0xb15, 0xfd70, 0x1, 0x1);
        gbc.writeMem(0xdd7e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9503);
        EXPECT(gbc.pc(), 0xdd80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd7e), 0xcb);
        EXPECT(gbc.readMem(0xdd7f), 0x42);
        // CB 42 015E
        gbc.setState(0x1479, 0x8f8d, 0x41f0, 0x4e06, 0x8611, 0xbdaf, 0x0, 0x1);
        gbc.writeMem(0x1479, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8f8d);
        EXPECT(gbc.pc(), 0x147b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 015F
        gbc.setState(0x481c, 0xf1be, 0x6050, 0xa419, 0x9713, 0x57e0, 0x1, 0x1);
        gbc.writeMem(0x481c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf1be);
        EXPECT(gbc.pc(), 0x481e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0160
        gbc.setState(0xc0c3, 0x3653, 0xefb0, 0xd95a, 0x32b1, 0xc133, 0x1, 0x1);
        gbc.writeMem(0xc0c3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3653);
        EXPECT(gbc.pc(), 0xc0c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0c3), 0xcb);
        EXPECT(gbc.readMem(0xc0c4), 0x42);
        // CB 42 0161
        gbc.setState(0xee2d, 0xf4b3, 0x3370, 0xd7e7, 0xfbed, 0xc9fe, 0x0, 0x1);
        gbc.writeMem(0xee2d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf4b3);
        EXPECT(gbc.pc(), 0xee2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee2d), 0xcb);
        EXPECT(gbc.readMem(0xee2e), 0x42);
        // CB 42 0162
        gbc.setState(0xb52, 0x8651, 0x8420, 0x19f, 0x151c, 0x176, 0x0, 0x0);
        gbc.writeMem(0xb52, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8651);
        EXPECT(gbc.pc(), 0xb54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0163
        gbc.setState(0x3fb1, 0xefdd, 0x3910, 0x4b66, 0x5bf1, 0x5cc7, 0x0, 0x0);
        gbc.writeMem(0x3fb1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xefdd);
        EXPECT(gbc.pc(), 0x3fb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0164
        gbc.setState(0x6365, 0x6811, 0x72e0, 0xed8b, 0x7891, 0x8f37, 0x0, 0x1);
        gbc.writeMem(0x6365, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6811);
        EXPECT(gbc.pc(), 0x6367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0165
        gbc.setState(0x565c, 0xccce, 0x1bb0, 0x30e2, 0x3435, 0x3a60, 0x1, 0x1);
        gbc.writeMem(0x565c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xccce);
        EXPECT(gbc.pc(), 0x565e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0167
        gbc.setState(0xd486, 0x8d6c, 0x96f0, 0x770e, 0x4cd6, 0xdae4, 0x1, 0x1);
        gbc.writeMem(0xd486, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8d6c);
        EXPECT(gbc.pc(), 0xd488);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd486), 0xcb);
        EXPECT(gbc.readMem(0xd487), 0x42);
        // CB 42 0168
        gbc.setState(0x49ec, 0x3480, 0x8b10, 0x78ab, 0x24fc, 0xcab, 0x1, 0x1);
        gbc.writeMem(0x49ec, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3480);
        EXPECT(gbc.pc(), 0x49ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0169
        gbc.setState(0x54d2, 0x7678, 0xa3a0, 0x16d1, 0x7e99, 0x9bc9, 0x0, 0x0);
        gbc.writeMem(0x54d2, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7678);
        EXPECT(gbc.pc(), 0x54d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 016B
        gbc.setState(0x6f5a, 0x180a, 0xf970, 0x9f10, 0x233a, 0x82fc, 0x0, 0x0);
        gbc.writeMem(0x6f5a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x180a);
        EXPECT(gbc.pc(), 0x6f5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 016D
        gbc.setState(0x45d8, 0x8e3e, 0xb170, 0x944e, 0x9e4d, 0xac0c, 0x0, 0x1);
        gbc.writeMem(0x45d8, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8e3e);
        EXPECT(gbc.pc(), 0x45da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 016E
        gbc.setState(0xed60, 0xff4d, 0x1fe0, 0x6ee2, 0xfbe3, 0xa43f, 0x1, 0x0);
        gbc.writeMem(0xed60, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xff4d);
        EXPECT(gbc.pc(), 0xed62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed60), 0xcb);
        EXPECT(gbc.readMem(0xed61), 0x42);
        // CB 42 016F
        gbc.setState(0xaeb1, 0xa609, 0xb170, 0xf24a, 0xb610, 0xb6f5, 0x1, 0x1);
        gbc.writeMem(0xaeb1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa609);
        EXPECT(gbc.pc(), 0xaeb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeb1), 0xcb);
        EXPECT(gbc.readMem(0xaeb2), 0x42);
        // CB 42 0170
        gbc.setState(0xe4e3, 0x3a7f, 0xc080, 0xff31, 0xb6d7, 0x4377, 0x1, 0x1);
        gbc.writeMem(0xe4e3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3a7f);
        EXPECT(gbc.pc(), 0xe4e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4e3), 0xcb);
        EXPECT(gbc.readMem(0xe4e4), 0x42);
        // CB 42 0171
        gbc.setState(0xb6f6, 0xd8df, 0x8930, 0x2cff, 0x57cc, 0xb7c6, 0x0, 0x0);
        gbc.writeMem(0xb6f6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd8df);
        EXPECT(gbc.pc(), 0xb6f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6f6), 0xcb);
        EXPECT(gbc.readMem(0xb6f7), 0x42);
        // CB 42 0172
        gbc.setState(0xd319, 0x968e, 0x2f40, 0x483a, 0x9ece, 0x393e, 0x1, 0x0);
        gbc.writeMem(0xd319, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x968e);
        EXPECT(gbc.pc(), 0xd31b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd319), 0xcb);
        EXPECT(gbc.readMem(0xd31a), 0x42);
        // CB 42 0173
        gbc.setState(0x1358, 0xfe17, 0xd9e0, 0x240c, 0xffeb, 0x9ce9, 0x0, 0x1);
        gbc.writeMem(0x1358, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xfe17);
        EXPECT(gbc.pc(), 0x135a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0174
        gbc.setState(0xc1d9, 0xaf68, 0x1980, 0x25c8, 0x8b17, 0xae2d, 0x1, 0x0);
        gbc.writeMem(0xc1d9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xaf68);
        EXPECT(gbc.pc(), 0xc1db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1d9), 0xcb);
        EXPECT(gbc.readMem(0xc1da), 0x42);
        // CB 42 0175
        gbc.setState(0x833a, 0xd08, 0x7520, 0x8eb4, 0x9a85, 0xbf5f, 0x1, 0x1);
        gbc.writeMem(0x833a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd08);
        EXPECT(gbc.pc(), 0x833c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x833a), 0xcb);
        EXPECT(gbc.readMem(0x833b), 0x42);
        // CB 42 0176
        gbc.setState(0x53b5, 0x80a9, 0xf930, 0x4450, 0x2164, 0x80ae, 0x0, 0x0);
        gbc.writeMem(0x53b5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x80a9);
        EXPECT(gbc.pc(), 0x53b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0177
        gbc.setState(0x2402, 0x5a64, 0xd530, 0x5c18, 0x5762, 0x2bb7, 0x1, 0x0);
        gbc.writeMem(0x2402, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5a64);
        EXPECT(gbc.pc(), 0x2404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0178
        gbc.setState(0xd1b6, 0x11bb, 0xaed0, 0xeea7, 0x2d7e, 0x98df, 0x1, 0x0);
        gbc.writeMem(0xd1b6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x11bb);
        EXPECT(gbc.pc(), 0xd1b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1b6), 0xcb);
        EXPECT(gbc.readMem(0xd1b7), 0x42);
        // CB 42 0179
        gbc.setState(0x86d6, 0x59d4, 0x24f0, 0x4831, 0xcfc1, 0x80ff, 0x0, 0x0);
        gbc.writeMem(0x86d6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x59d4);
        EXPECT(gbc.pc(), 0x86d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86d6), 0xcb);
        EXPECT(gbc.readMem(0x86d7), 0x42);
        // CB 42 017A
        gbc.setState(0x2974, 0xd4da, 0xc990, 0xf3d2, 0x783f, 0xab09, 0x1, 0x0);
        gbc.writeMem(0x2974, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd4da);
        EXPECT(gbc.pc(), 0x2976);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 017B
        gbc.setState(0xe15a, 0x4f4a, 0x7df0, 0x5b08, 0x6d34, 0xc869, 0x0, 0x1);
        gbc.writeMem(0xe15a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4f4a);
        EXPECT(gbc.pc(), 0xe15c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe15a), 0xcb);
        EXPECT(gbc.readMem(0xe15b), 0x42);
        // CB 42 017C
        gbc.setState(0x286d, 0x93cb, 0x9910, 0x3047, 0x2a66, 0xc251, 0x1, 0x0);
        gbc.writeMem(0x286d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x93cb);
        EXPECT(gbc.pc(), 0x286f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 017D
        gbc.setState(0xd9c, 0x102c, 0xbed0, 0x117b, 0x2bba, 0x7c01, 0x0, 0x0);
        gbc.writeMem(0xd9c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x102c);
        EXPECT(gbc.pc(), 0xd9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 017E
        gbc.setState(0x8955, 0xd97, 0x1c10, 0x47f9, 0x58c4, 0x1646, 0x0, 0x0);
        gbc.writeMem(0x8955, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd97);
        EXPECT(gbc.pc(), 0x8957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8955), 0xcb);
        EXPECT(gbc.readMem(0x8956), 0x42);
        // CB 42 017F
        gbc.setState(0xc43b, 0x4114, 0xaa30, 0x99d2, 0xae54, 0x7565, 0x0, 0x0);
        gbc.writeMem(0xc43b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4114);
        EXPECT(gbc.pc(), 0xc43d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc43b), 0xcb);
        EXPECT(gbc.readMem(0xc43c), 0x42);
        // CB 42 0180
        gbc.setState(0x3bc2, 0x39a1, 0x4430, 0x7dc3, 0xf9ee, 0x44b7, 0x0, 0x1);
        gbc.writeMem(0x3bc2, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x39a1);
        EXPECT(gbc.pc(), 0x3bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0181
        gbc.setState(0xb98b, 0xf51d, 0x6570, 0xbb5a, 0x4d3f, 0x2b4a, 0x1, 0x0);
        gbc.writeMem(0xb98b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf51d);
        EXPECT(gbc.pc(), 0xb98d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb98b), 0xcb);
        EXPECT(gbc.readMem(0xb98c), 0x42);
        // CB 42 0182
        gbc.setState(0xdbf4, 0x4b7, 0x11e0, 0x1af3, 0x7788, 0x1465, 0x1, 0x0);
        gbc.writeMem(0xdbf4, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4b7);
        EXPECT(gbc.pc(), 0xdbf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbf4), 0xcb);
        EXPECT(gbc.readMem(0xdbf5), 0x42);
        // CB 42 0183
        gbc.setState(0x6885, 0x6061, 0xae10, 0x3bc9, 0xc192, 0x35a, 0x1, 0x0);
        gbc.writeMem(0x6885, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6061);
        EXPECT(gbc.pc(), 0x6887);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0184
        gbc.setState(0x3878, 0xcc78, 0x2d0, 0xe5ca, 0xef61, 0x9549, 0x1, 0x0);
        gbc.writeMem(0x3878, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xcc78);
        EXPECT(gbc.pc(), 0x387a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0185
        gbc.setState(0xd88a, 0x90e9, 0x8f80, 0x66d9, 0x7ac8, 0x74d1, 0x0, 0x0);
        gbc.writeMem(0xd88a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x90e9);
        EXPECT(gbc.pc(), 0xd88c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88a), 0xcb);
        EXPECT(gbc.readMem(0xd88b), 0x42);
        // CB 42 0186
        gbc.setState(0xb95f, 0x9a1b, 0xf140, 0x3e44, 0x63bf, 0xa69e, 0x0, 0x0);
        gbc.writeMem(0xb95f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9a1b);
        EXPECT(gbc.pc(), 0xb961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb95f), 0xcb);
        EXPECT(gbc.readMem(0xb960), 0x42);
        // CB 42 0187
        gbc.setState(0x7c44, 0x5ce2, 0x2810, 0xbc68, 0xbe5b, 0xcbe7, 0x1, 0x1);
        gbc.writeMem(0x7c44, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5ce2);
        EXPECT(gbc.pc(), 0x7c46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0188
        gbc.setState(0x6d9f, 0xd737, 0x3f00, 0x616c, 0xb71e, 0xaf97, 0x1, 0x1);
        gbc.writeMem(0x6d9f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd737);
        EXPECT(gbc.pc(), 0x6da1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0189
        gbc.setState(0xdf44, 0x559f, 0x28f0, 0x4020, 0xda4, 0xb099, 0x1, 0x1);
        gbc.writeMem(0xdf44, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x559f);
        EXPECT(gbc.pc(), 0xdf46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf44), 0xcb);
        EXPECT(gbc.readMem(0xdf45), 0x42);
        // CB 42 018A
        gbc.setState(0x8f5f, 0xc1f2, 0x51f0, 0x5a91, 0xd3, 0x8bb3, 0x1, 0x1);
        gbc.writeMem(0x8f5f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc1f2);
        EXPECT(gbc.pc(), 0x8f61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f5f), 0xcb);
        EXPECT(gbc.readMem(0x8f60), 0x42);
        // CB 42 018C
        gbc.setState(0xd56b, 0xde8d, 0x95d0, 0x3741, 0x4d27, 0x80f6, 0x0, 0x1);
        gbc.writeMem(0xd56b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xde8d);
        EXPECT(gbc.pc(), 0xd56d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd56b), 0xcb);
        EXPECT(gbc.readMem(0xd56c), 0x42);
        // CB 42 018D
        gbc.setState(0x45a5, 0x8391, 0x6ed0, 0x5da1, 0x5cb6, 0x1676, 0x1, 0x1);
        gbc.writeMem(0x45a5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8391);
        EXPECT(gbc.pc(), 0x45a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 018E
        gbc.setState(0x60b, 0xb12f, 0xf670, 0x79bb, 0xa198, 0xc2b9, 0x1, 0x1);
        gbc.writeMem(0x60b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb12f);
        EXPECT(gbc.pc(), 0x60d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 018F
        gbc.setState(0x9824, 0xa0f0, 0xf9f0, 0x4955, 0x5561, 0x598b, 0x0, 0x1);
        gbc.writeMem(0x9824, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa0f0);
        EXPECT(gbc.pc(), 0x9826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9824), 0xcb);
        EXPECT(gbc.readMem(0x9825), 0x42);
        // CB 42 0191
        gbc.setState(0x356b, 0x7994, 0x7ce0, 0xf565, 0xc70d, 0x92ac, 0x1, 0x0);
        gbc.writeMem(0x356b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7994);
        EXPECT(gbc.pc(), 0x356d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0192
        gbc.setState(0x894, 0x8f1c, 0x7600, 0x5815, 0xf804, 0x1d33, 0x0, 0x1);
        gbc.writeMem(0x894, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8f1c);
        EXPECT(gbc.pc(), 0x896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0193
        gbc.setState(0xeffa, 0x3c54, 0x2460, 0xa7ef, 0xc992, 0x72e7, 0x1, 0x1);
        gbc.writeMem(0xeffa, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3c54);
        EXPECT(gbc.pc(), 0xeffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeffa), 0xcb);
        EXPECT(gbc.readMem(0xeffb), 0x42);
        // CB 42 0194
        gbc.setState(0xb438, 0x316a, 0xdba0, 0x7c5, 0xb0c0, 0x9cc2, 0x1, 0x1);
        gbc.writeMem(0xb438, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x316a);
        EXPECT(gbc.pc(), 0xb43a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb438), 0xcb);
        EXPECT(gbc.readMem(0xb439), 0x42);
        // CB 42 0195
        gbc.setState(0x1be9, 0x5833, 0xbe30, 0x3764, 0x37b6, 0xaf59, 0x0, 0x0);
        gbc.writeMem(0x1be9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5833);
        EXPECT(gbc.pc(), 0x1beb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0196
        gbc.setState(0x661a, 0xbbaa, 0x54d0, 0xbe6a, 0x8469, 0xb729, 0x0, 0x0);
        gbc.writeMem(0x661a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xbbaa);
        EXPECT(gbc.pc(), 0x661c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0197
        gbc.setState(0x81c7, 0x4b21, 0x9a30, 0xef2, 0x2d54, 0x66e7, 0x1, 0x1);
        gbc.writeMem(0x81c7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4b21);
        EXPECT(gbc.pc(), 0x81c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c7), 0xcb);
        EXPECT(gbc.readMem(0x81c8), 0x42);
        // CB 42 0198
        gbc.setState(0x6765, 0x187f, 0x9f30, 0x8db2, 0xf59b, 0x7b0f, 0x0, 0x1);
        gbc.writeMem(0x6765, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x187f);
        EXPECT(gbc.pc(), 0x6767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0199
        gbc.setState(0xc9ad, 0xdf8e, 0x1640, 0xdd04, 0x81, 0x759d, 0x0, 0x0);
        gbc.writeMem(0xc9ad, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xdf8e);
        EXPECT(gbc.pc(), 0xc9af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ad), 0xcb);
        EXPECT(gbc.readMem(0xc9ae), 0x42);
        // CB 42 019A
        gbc.setState(0x2ba6, 0xbf73, 0x1620, 0x64d7, 0x5665, 0x41e1, 0x1, 0x1);
        gbc.writeMem(0x2ba6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xbf73);
        EXPECT(gbc.pc(), 0x2ba8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 019B
        gbc.setState(0xc9ae, 0x51fb, 0x43e0, 0x3345, 0x5be0, 0x7ab6, 0x1, 0x1);
        gbc.writeMem(0xc9ae, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x51fb);
        EXPECT(gbc.pc(), 0xc9b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ae), 0xcb);
        EXPECT(gbc.readMem(0xc9af), 0x42);
        // CB 42 019C
        gbc.setState(0xc19b, 0x1653, 0x2200, 0x5944, 0x84f8, 0xbc3d, 0x0, 0x0);
        gbc.writeMem(0xc19b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1653);
        EXPECT(gbc.pc(), 0xc19d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc19b), 0xcb);
        EXPECT(gbc.readMem(0xc19c), 0x42);
        // CB 42 019D
        gbc.setState(0x364e, 0xfbcd, 0x5560, 0x4fb1, 0xa49a, 0x9e89, 0x1, 0x0);
        gbc.writeMem(0x364e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xfbcd);
        EXPECT(gbc.pc(), 0x3650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 019E
        gbc.setState(0x6417, 0xa4c8, 0xa360, 0xd61, 0xeef0, 0x5586, 0x0, 0x0);
        gbc.writeMem(0x6417, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa4c8);
        EXPECT(gbc.pc(), 0x6419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 019F
        gbc.setState(0x6911, 0x66ed, 0xd310, 0xa24, 0x7e2c, 0x74aa, 0x1, 0x1);
        gbc.writeMem(0x6911, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x66ed);
        EXPECT(gbc.pc(), 0x6913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 01A0
        gbc.setState(0x7292, 0xfe7d, 0x3a60, 0xbdc1, 0x6452, 0x7619, 0x1, 0x0);
        gbc.writeMem(0x7292, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfe7d);
        EXPECT(gbc.pc(), 0x7294);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01A1
        gbc.setState(0xa297, 0xce63, 0xc0a0, 0x8486, 0x753c, 0xc4a9, 0x1, 0x1);
        gbc.writeMem(0xa297, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xce63);
        EXPECT(gbc.pc(), 0xa299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa297), 0xcb);
        EXPECT(gbc.readMem(0xa298), 0x42);
        // CB 42 01A2
        gbc.setState(0xb4e8, 0xee4a, 0x230, 0x5a27, 0x8e14, 0x3911, 0x1, 0x1);
        gbc.writeMem(0xb4e8, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xee4a);
        EXPECT(gbc.pc(), 0xb4ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4e8), 0xcb);
        EXPECT(gbc.readMem(0xb4e9), 0x42);
        // CB 42 01A3
        gbc.setState(0x2996, 0x3412, 0x8a90, 0x251c, 0xf3d2, 0xad00, 0x0, 0x1);
        gbc.writeMem(0x2996, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3412);
        EXPECT(gbc.pc(), 0x2998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 01A6
        gbc.setState(0x6a3e, 0x16b1, 0x1730, 0x923, 0xc518, 0x497f, 0x0, 0x0);
        gbc.writeMem(0x6a3e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x16b1);
        EXPECT(gbc.pc(), 0x6a40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 01A7
        gbc.setState(0x1fd8, 0x83e6, 0xaed0, 0xc8a2, 0xa163, 0x55f0, 0x0, 0x0);
        gbc.writeMem(0x1fd8, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x83e6);
        EXPECT(gbc.pc(), 0x1fda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 01A8
        gbc.setState(0x3170, 0xac2f, 0xf8e0, 0x9cea, 0xefb7, 0x97db, 0x0, 0x1);
        gbc.writeMem(0x3170, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xac2f);
        EXPECT(gbc.pc(), 0x3172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01A9
        gbc.setState(0xbc85, 0xdcf0, 0x8a90, 0xf6da, 0x6f07, 0x1f1d, 0x0, 0x1);
        gbc.writeMem(0xbc85, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xdcf0);
        EXPECT(gbc.pc(), 0xbc87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc85), 0xcb);
        EXPECT(gbc.readMem(0xbc86), 0x42);
        // CB 42 01AA
        gbc.setState(0x7d1a, 0x50ba, 0xced0, 0xae9b, 0x20ba, 0x4c86, 0x0, 0x0);
        gbc.writeMem(0x7d1a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x50ba);
        EXPECT(gbc.pc(), 0x7d1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 01AB
        gbc.setState(0x728c, 0x8715, 0xbf20, 0xc56e, 0x120d, 0x24c8, 0x1, 0x0);
        gbc.writeMem(0x728c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8715);
        EXPECT(gbc.pc(), 0x728e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01AC
        gbc.setState(0x1ff5, 0xdd9d, 0x2670, 0x42a1, 0x7825, 0x709, 0x1, 0x1);
        gbc.writeMem(0x1ff5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xdd9d);
        EXPECT(gbc.pc(), 0x1ff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 01AD
        gbc.setState(0x8085, 0xa89, 0x83b0, 0x8139, 0x96fd, 0x3325, 0x1, 0x1);
        gbc.writeMem(0x8085, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa89);
        EXPECT(gbc.pc(), 0x8087);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8085), 0xcb);
        EXPECT(gbc.readMem(0x8086), 0x42);
        // CB 42 01AE
        gbc.setState(0x569, 0x1be2, 0x17d0, 0xaad3, 0x55ab, 0x968a, 0x0, 0x1);
        gbc.writeMem(0x569, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1be2);
        EXPECT(gbc.pc(), 0x56b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 01AF
        gbc.setState(0xd555, 0x4e5a, 0x8430, 0x56c2, 0x4c36, 0x7669, 0x1, 0x0);
        gbc.writeMem(0xd555, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4e5a);
        EXPECT(gbc.pc(), 0xd557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd555), 0xcb);
        EXPECT(gbc.readMem(0xd556), 0x42);
        // CB 42 01B0
        gbc.setState(0xe86e, 0x3767, 0xd0a0, 0xf740, 0x8bf1, 0xde78, 0x0, 0x0);
        gbc.writeMem(0xe86e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x3767);
        EXPECT(gbc.pc(), 0xe870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe86e), 0xcb);
        EXPECT(gbc.readMem(0xe86f), 0x42);
        // CB 42 01B1
        gbc.setState(0xa922, 0x11bc, 0xfe50, 0xa0f6, 0x82c1, 0x7653, 0x1, 0x1);
        gbc.writeMem(0xa922, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x11bc);
        EXPECT(gbc.pc(), 0xa924);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa922), 0xcb);
        EXPECT(gbc.readMem(0xa923), 0x42);
        // CB 42 01B2
        gbc.setState(0x1cce, 0xcf15, 0x830, 0x9a53, 0xa131, 0x751f, 0x1, 0x1);
        gbc.writeMem(0x1cce, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xcf15);
        EXPECT(gbc.pc(), 0x1cd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 01B3
        gbc.setState(0x4e6, 0xdf33, 0x4bc0, 0x796d, 0x188c, 0x9e31, 0x1, 0x1);
        gbc.writeMem(0x4e6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdf33);
        EXPECT(gbc.pc(), 0x4e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01B4
        gbc.setState(0xcfef, 0x2ae5, 0xea30, 0x15fb, 0x1edf, 0xebfb, 0x0, 0x0);
        gbc.writeMem(0xcfef, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2ae5);
        EXPECT(gbc.pc(), 0xcff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfef), 0xcb);
        EXPECT(gbc.readMem(0xcff0), 0x42);
        // CB 42 01B5
        gbc.setState(0xc8df, 0x7e32, 0x5b80, 0x3e0c, 0xda4f, 0xec8, 0x1, 0x0);
        gbc.writeMem(0xc8df, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7e32);
        EXPECT(gbc.pc(), 0xc8e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8df), 0xcb);
        EXPECT(gbc.readMem(0xc8e0), 0x42);
        // CB 42 01B6
        gbc.setState(0x8f85, 0xfe00, 0x7b30, 0xdd2d, 0x6fb4, 0xac99, 0x1, 0x0);
        gbc.writeMem(0x8f85, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfe00);
        EXPECT(gbc.pc(), 0x8f87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f85), 0xcb);
        EXPECT(gbc.readMem(0x8f86), 0x42);
        // CB 42 01B7
        gbc.setState(0x878e, 0x5632, 0x3a00, 0x8127, 0x9b19, 0x9d4a, 0x0, 0x1);
        gbc.writeMem(0x878e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5632);
        EXPECT(gbc.pc(), 0x8790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x878e), 0xcb);
        EXPECT(gbc.readMem(0x878f), 0x42);
        // CB 42 01B8
        gbc.setState(0x53, 0xf11, 0x9230, 0x7eac, 0x79a3, 0x10a8, 0x0, 0x0);
        gbc.writeMem(0x53, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf11);
        EXPECT(gbc.pc(), 0x55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 01B9
        gbc.setState(0xc168, 0xa08c, 0xb040, 0xf648, 0x8a1a, 0xa159, 0x1, 0x1);
        gbc.writeMem(0xc168, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa08c);
        EXPECT(gbc.pc(), 0xc16a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc168), 0xcb);
        EXPECT(gbc.readMem(0xc169), 0x42);
        // CB 42 01BA
        gbc.setState(0xd3cd, 0x5b8c, 0xdf0, 0x7ba, 0x515e, 0x6aa1, 0x0, 0x0);
        gbc.writeMem(0xd3cd, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x5b8c);
        EXPECT(gbc.pc(), 0xd3cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3cd), 0xcb);
        EXPECT(gbc.readMem(0xd3ce), 0x42);
        // CB 42 01BB
        gbc.setState(0xcf1b, 0x7869, 0xc110, 0xe93e, 0xc539, 0xf802, 0x1, 0x0);
        gbc.writeMem(0xcf1b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7869);
        EXPECT(gbc.pc(), 0xcf1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf1b), 0xcb);
        EXPECT(gbc.readMem(0xcf1c), 0x42);
        // CB 42 01BC
        gbc.setState(0x3895, 0x846e, 0xc4c0, 0x5b97, 0x643c, 0x9d05, 0x0, 0x1);
        gbc.writeMem(0x3895, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x846e);
        EXPECT(gbc.pc(), 0x3897);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01BD
        gbc.setState(0x73bf, 0xba7c, 0x7930, 0x3e06, 0xd845, 0x9fc8, 0x1, 0x0);
        gbc.writeMem(0x73bf, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xba7c);
        EXPECT(gbc.pc(), 0x73c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 01BE
        gbc.setState(0xa94f, 0xeadf, 0x2230, 0xf98a, 0xec05, 0x1658, 0x0, 0x0);
        gbc.writeMem(0xa94f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xeadf);
        EXPECT(gbc.pc(), 0xa951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa94f), 0xcb);
        EXPECT(gbc.readMem(0xa950), 0x42);
        // CB 42 01C0
        gbc.setState(0x1107, 0x78b9, 0x320, 0x58cc, 0x15db, 0xa, 0x0, 0x0);
        gbc.writeMem(0x1107, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x78b9);
        EXPECT(gbc.pc(), 0x1109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01C1
        gbc.setState(0x694b, 0x1902, 0xf60, 0xec58, 0xcbb4, 0x79f4, 0x1, 0x1);
        gbc.writeMem(0x694b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1902);
        EXPECT(gbc.pc(), 0x694d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01C2
        gbc.setState(0xe982, 0xe0e, 0x78a0, 0xd8ec, 0xbede, 0x5dee, 0x1, 0x1);
        gbc.writeMem(0xe982, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe0e);
        EXPECT(gbc.pc(), 0xe984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe982), 0xcb);
        EXPECT(gbc.readMem(0xe983), 0x42);
        // CB 42 01C3
        gbc.setState(0xcc32, 0x2090, 0x82d0, 0x1180, 0x4c23, 0x9b84, 0x0, 0x1);
        gbc.writeMem(0xcc32, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2090);
        EXPECT(gbc.pc(), 0xcc34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc32), 0xcb);
        EXPECT(gbc.readMem(0xcc33), 0x42);
        // CB 42 01C4
        gbc.setState(0x6aa1, 0xe32, 0x8220, 0xee4d, 0x5b5b, 0xff3e, 0x1, 0x1);
        gbc.writeMem(0x6aa1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe32);
        EXPECT(gbc.pc(), 0x6aa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01C5
        gbc.setState(0xb167, 0x8a8e, 0x1e40, 0xf020, 0xda25, 0x2f9f, 0x0, 0x1);
        gbc.writeMem(0xb167, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8a8e);
        EXPECT(gbc.pc(), 0xb169);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb167), 0xcb);
        EXPECT(gbc.readMem(0xb168), 0x42);
        // CB 42 01C6
        gbc.setState(0xd07, 0xab8c, 0xf0e0, 0x24e1, 0x2b5, 0xf398, 0x1, 0x1);
        gbc.writeMem(0xd07, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xab8c);
        EXPECT(gbc.pc(), 0xd09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01C7
        gbc.setState(0x25ea, 0x1368, 0x56d0, 0x4737, 0x2989, 0xfc71, 0x0, 0x0);
        gbc.writeMem(0x25ea, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1368);
        EXPECT(gbc.pc(), 0x25ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 01C8
        gbc.setState(0xdc10, 0x4a4c, 0xf140, 0xf51c, 0xd5d9, 0x8ced, 0x1, 0x0);
        gbc.writeMem(0xdc10, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x4a4c);
        EXPECT(gbc.pc(), 0xdc12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc10), 0xcb);
        EXPECT(gbc.readMem(0xdc11), 0x42);
        // CB 42 01C9
        gbc.setState(0xea8, 0xabbe, 0x3960, 0x5226, 0x3365, 0x1fcd, 0x0, 0x0);
        gbc.writeMem(0xea8, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xabbe);
        EXPECT(gbc.pc(), 0xeaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01CA
        gbc.setState(0x7c98, 0x94d4, 0xd640, 0x9881, 0x8fd5, 0xef02, 0x0, 0x1);
        gbc.writeMem(0x7c98, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x94d4);
        EXPECT(gbc.pc(), 0x7c9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01CB
        gbc.setState(0xe79e, 0x8888, 0x6f60, 0x2920, 0x2707, 0xf308, 0x0, 0x0);
        gbc.writeMem(0xe79e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8888);
        EXPECT(gbc.pc(), 0xe7a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe79e), 0xcb);
        EXPECT(gbc.readMem(0xe79f), 0x42);
        // CB 42 01CC
        gbc.setState(0x4667, 0x17b6, 0xdf40, 0xbab9, 0xe61a, 0x15e7, 0x1, 0x1);
        gbc.writeMem(0x4667, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x17b6);
        EXPECT(gbc.pc(), 0x4669);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01CD
        gbc.setState(0x9c29, 0x2435, 0xcae0, 0x7bb8, 0x9521, 0x3576, 0x1, 0x1);
        gbc.writeMem(0x9c29, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2435);
        EXPECT(gbc.pc(), 0x9c2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c29), 0xcb);
        EXPECT(gbc.readMem(0x9c2a), 0x42);
        // CB 42 01CE
        gbc.setState(0xc9dc, 0x3977, 0xa510, 0x821e, 0x4a50, 0x69cf, 0x0, 0x1);
        gbc.writeMem(0xc9dc, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3977);
        EXPECT(gbc.pc(), 0xc9de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9dc), 0xcb);
        EXPECT(gbc.readMem(0xc9dd), 0x42);
        // CB 42 01CF
        gbc.setState(0xaeae, 0x2ca8, 0x6e40, 0xc5d3, 0xe1d2, 0x6751, 0x1, 0x0);
        gbc.writeMem(0xaeae, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2ca8);
        EXPECT(gbc.pc(), 0xaeb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeae), 0xcb);
        EXPECT(gbc.readMem(0xaeaf), 0x42);
        // CB 42 01D0
        gbc.setState(0xd00e, 0x42fa, 0xab80, 0xf379, 0xfec1, 0x1953, 0x0, 0x1);
        gbc.writeMem(0xd00e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x42fa);
        EXPECT(gbc.pc(), 0xd010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd00e), 0xcb);
        EXPECT(gbc.readMem(0xd00f), 0x42);
        // CB 42 01D1
        gbc.setState(0xe222, 0x859b, 0xd450, 0x99a3, 0x2e30, 0xa6ce, 0x1, 0x1);
        gbc.writeMem(0xe222, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x859b);
        EXPECT(gbc.pc(), 0xe224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe222), 0xcb);
        EXPECT(gbc.readMem(0xe223), 0x42);
        // CB 42 01D2
        gbc.setState(0xa8f, 0xbf70, 0x94f0, 0x5280, 0x9ce7, 0x9597, 0x1, 0x1);
        gbc.writeMem(0xa8f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xbf70);
        EXPECT(gbc.pc(), 0xa91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 01D3
        gbc.setState(0x1348, 0x7418, 0x6830, 0xa223, 0xd8b9, 0x4282, 0x0, 0x0);
        gbc.writeMem(0x1348, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7418);
        EXPECT(gbc.pc(), 0x134a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 01D4
        gbc.setState(0xb838, 0x3af9, 0x2fa0, 0x3bc1, 0xd8b, 0xac8a, 0x1, 0x0);
        gbc.writeMem(0xb838, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3af9);
        EXPECT(gbc.pc(), 0xb83a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb838), 0xcb);
        EXPECT(gbc.readMem(0xb839), 0x42);
        // CB 42 01D5
        gbc.setState(0xdde4, 0x412a, 0x8ff0, 0x41db, 0x49f8, 0xfe98, 0x0, 0x0);
        gbc.writeMem(0xdde4, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x412a);
        EXPECT(gbc.pc(), 0xdde6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdde4), 0xcb);
        EXPECT(gbc.readMem(0xdde5), 0x42);
        // CB 42 01D6
        gbc.setState(0x2539, 0xcaae, 0x1ca0, 0x574e, 0x732f, 0xcabb, 0x1, 0x0);
        gbc.writeMem(0x2539, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xcaae);
        EXPECT(gbc.pc(), 0x253b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01D7
        gbc.setState(0xe8b8, 0xb1a5, 0x9a20, 0xf8f9, 0x25e8, 0xde4f, 0x1, 0x0);
        gbc.writeMem(0xe8b8, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb1a5);
        EXPECT(gbc.pc(), 0xe8ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b8), 0xcb);
        EXPECT(gbc.readMem(0xe8b9), 0x42);
        // CB 42 01D8
        gbc.setState(0x2bae, 0x97b5, 0xbad0, 0xae7c, 0x78f2, 0x75e1, 0x1, 0x1);
        gbc.writeMem(0x2bae, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x97b5);
        EXPECT(gbc.pc(), 0x2bb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 01D9
        gbc.setState(0x7ee4, 0x2a5d, 0x6c20, 0x5719, 0x7f0, 0xf0e4, 0x1, 0x1);
        gbc.writeMem(0x7ee4, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2a5d);
        EXPECT(gbc.pc(), 0x7ee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01DA
        gbc.setState(0x47c5, 0x5acc, 0xf0a0, 0x177, 0xfb72, 0xb36c, 0x1, 0x0);
        gbc.writeMem(0x47c5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5acc);
        EXPECT(gbc.pc(), 0x47c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01DB
        gbc.setState(0x441c, 0xc974, 0x3940, 0xe32c, 0x54f6, 0x609a, 0x0, 0x0);
        gbc.writeMem(0x441c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc974);
        EXPECT(gbc.pc(), 0x441e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01DC
        gbc.setState(0xd00f, 0xee76, 0x5b80, 0x35e9, 0x6ba, 0x4aad, 0x1, 0x0);
        gbc.writeMem(0xd00f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xee76);
        EXPECT(gbc.pc(), 0xd011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd00f), 0xcb);
        EXPECT(gbc.readMem(0xd010), 0x42);
        // CB 42 01DD
        gbc.setState(0xa5ae, 0xcc48, 0x2760, 0xd7f1, 0x6e0f, 0x2435, 0x0, 0x1);
        gbc.writeMem(0xa5ae, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xcc48);
        EXPECT(gbc.pc(), 0xa5b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ae), 0xcb);
        EXPECT(gbc.readMem(0xa5af), 0x42);
        // CB 42 01DE
        gbc.setState(0x98ae, 0xf518, 0xca40, 0xd5ea, 0x4cb3, 0xae39, 0x0, 0x0);
        gbc.writeMem(0x98ae, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf518);
        EXPECT(gbc.pc(), 0x98b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98ae), 0xcb);
        EXPECT(gbc.readMem(0x98af), 0x42);
        // CB 42 01DF
        gbc.setState(0xdc16, 0x3a1, 0x8380, 0xc7fc, 0xd1ba, 0xf1ab, 0x0, 0x0);
        gbc.writeMem(0xdc16, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3a1);
        EXPECT(gbc.pc(), 0xdc18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc16), 0xcb);
        EXPECT(gbc.readMem(0xdc17), 0x42);
        // CB 42 01E0
        gbc.setState(0xe4b7, 0xd6e3, 0xd780, 0x5f7d, 0x3c52, 0xa9b9, 0x1, 0x0);
        gbc.writeMem(0xe4b7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd6e3);
        EXPECT(gbc.pc(), 0xe4b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4b7), 0xcb);
        EXPECT(gbc.readMem(0xe4b8), 0x42);
        // CB 42 01E1
        gbc.setState(0x8dc7, 0x4d4d, 0xf360, 0xd5bb, 0x9a39, 0xa2af, 0x0, 0x1);
        gbc.writeMem(0x8dc7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4d4d);
        EXPECT(gbc.pc(), 0x8dc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc7), 0xcb);
        EXPECT(gbc.readMem(0x8dc8), 0x42);
        // CB 42 01E2
        gbc.setState(0x832a, 0x8a43, 0xefc0, 0x17c, 0xd0c4, 0x65c8, 0x0, 0x0);
        gbc.writeMem(0x832a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8a43);
        EXPECT(gbc.pc(), 0x832c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x832a), 0xcb);
        EXPECT(gbc.readMem(0x832b), 0x42);
        // CB 42 01E3
        gbc.setState(0x6396, 0xbdb0, 0x1ec0, 0xae37, 0x88c, 0xd0a6, 0x1, 0x1);
        gbc.writeMem(0x6396, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xbdb0);
        EXPECT(gbc.pc(), 0x6398);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01E4
        gbc.setState(0xe9fc, 0x9601, 0x50d0, 0x3c72, 0xb0c3, 0x276e, 0x0, 0x0);
        gbc.writeMem(0xe9fc, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9601);
        EXPECT(gbc.pc(), 0xe9fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9fc), 0xcb);
        EXPECT(gbc.readMem(0xe9fd), 0x42);
        // CB 42 01E5
        gbc.setState(0x6e1, 0xf578, 0xe1e0, 0x42d7, 0xf5b8, 0xe0a4, 0x0, 0x1);
        gbc.writeMem(0x6e1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf578);
        EXPECT(gbc.pc(), 0x6e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01E6
        gbc.setState(0x8da6, 0xae36, 0x4250, 0x26bd, 0x1f15, 0x1641, 0x1, 0x1);
        gbc.writeMem(0x8da6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xae36);
        EXPECT(gbc.pc(), 0x8da8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8da6), 0xcb);
        EXPECT(gbc.readMem(0x8da7), 0x42);
        // CB 42 01E7
        gbc.setState(0xdb0a, 0x5f0b, 0xe0e0, 0xcbc2, 0x6f25, 0x606d, 0x1, 0x1);
        gbc.writeMem(0xdb0a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5f0b);
        EXPECT(gbc.pc(), 0xdb0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb0a), 0xcb);
        EXPECT(gbc.readMem(0xdb0b), 0x42);
        // CB 42 01E8
        gbc.setState(0x21d, 0x5594, 0x3440, 0x494, 0x2899, 0xa127, 0x0, 0x1);
        gbc.writeMem(0x21d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5594);
        EXPECT(gbc.pc(), 0x21f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01E9
        gbc.setState(0x7dff, 0xbf9, 0x5300, 0x54f0, 0x2a82, 0x2a3c, 0x1, 0x0);
        gbc.writeMem(0x7dff, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xbf9);
        EXPECT(gbc.pc(), 0x7e01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01EA
        gbc.setState(0x82ef, 0x2240, 0x3910, 0xd091, 0x3d56, 0x19b1, 0x1, 0x1);
        gbc.writeMem(0x82ef, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2240);
        EXPECT(gbc.pc(), 0x82f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ef), 0xcb);
        EXPECT(gbc.readMem(0x82f0), 0x42);
        // CB 42 01EB
        gbc.setState(0x63be, 0xa792, 0xea20, 0x9e87, 0x7c58, 0xac51, 0x0, 0x1);
        gbc.writeMem(0x63be, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa792);
        EXPECT(gbc.pc(), 0x63c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01EC
        gbc.setState(0x8852, 0x767c, 0x68b0, 0x9ca4, 0x6a6c, 0x373c, 0x1, 0x1);
        gbc.writeMem(0x8852, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x767c);
        EXPECT(gbc.pc(), 0x8854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8852), 0xcb);
        EXPECT(gbc.readMem(0x8853), 0x42);
        // CB 42 01ED
        gbc.setState(0xd23f, 0xcd28, 0x5630, 0xf1f0, 0xfbd7, 0x1487, 0x0, 0x1);
        gbc.writeMem(0xd23f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xcd28);
        EXPECT(gbc.pc(), 0xd241);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd23f), 0xcb);
        EXPECT(gbc.readMem(0xd240), 0x42);
        // CB 42 01EE
        gbc.setState(0xe1dd, 0x1045, 0xda80, 0x579c, 0x41a2, 0x25a3, 0x1, 0x0);
        gbc.writeMem(0xe1dd, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1045);
        EXPECT(gbc.pc(), 0xe1df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1dd), 0xcb);
        EXPECT(gbc.readMem(0xe1de), 0x42);
        // CB 42 01EF
        gbc.setState(0x3918, 0x9810, 0xe700, 0xbe7f, 0xb4ae, 0x5e5c, 0x1, 0x1);
        gbc.writeMem(0x3918, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9810);
        EXPECT(gbc.pc(), 0x391a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01F0
        gbc.setState(0x33aa, 0x3551, 0x8aa0, 0x4f16, 0x5da8, 0x7520, 0x0, 0x1);
        gbc.writeMem(0x33aa, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3551);
        EXPECT(gbc.pc(), 0x33ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01F1
        gbc.setState(0xb0cf, 0xdba, 0x5110, 0xcfa0, 0x4153, 0xf586, 0x1, 0x0);
        gbc.writeMem(0xb0cf, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xdba);
        EXPECT(gbc.pc(), 0xb0d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0cf), 0xcb);
        EXPECT(gbc.readMem(0xb0d0), 0x42);
        // CB 42 01F2
        gbc.setState(0x2d6f, 0x7d42, 0xf150, 0xd04d, 0x82b3, 0xd67b, 0x0, 0x1);
        gbc.writeMem(0x2d6f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7d42);
        EXPECT(gbc.pc(), 0x2d71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 01F3
        gbc.setState(0x15c1, 0xf0b4, 0xe960, 0xcb25, 0x2102, 0x15b2, 0x0, 0x1);
        gbc.writeMem(0x15c1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf0b4);
        EXPECT(gbc.pc(), 0x15c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01F4
        gbc.setState(0xaf41, 0xb62c, 0xc900, 0xbd7c, 0x3201, 0xde34, 0x1, 0x1);
        gbc.writeMem(0xaf41, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb62c);
        EXPECT(gbc.pc(), 0xaf43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf41), 0xcb);
        EXPECT(gbc.readMem(0xaf42), 0x42);
        // CB 42 01F5
        gbc.setState(0xdeb5, 0x4645, 0x9d70, 0x6c01, 0x216a, 0xeaaf, 0x0, 0x0);
        gbc.writeMem(0xdeb5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4645);
        EXPECT(gbc.pc(), 0xdeb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeb5), 0xcb);
        EXPECT(gbc.readMem(0xdeb6), 0x42);
        // CB 42 01F6
        gbc.setState(0x418d, 0x4eaf, 0xdd60, 0x4104, 0x4750, 0x35df, 0x1, 0x0);
        gbc.writeMem(0x418d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4eaf);
        EXPECT(gbc.pc(), 0x418f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01F7
        gbc.setState(0x24b7, 0x23ad, 0xc170, 0x665b, 0xadaf, 0xa20d, 0x0, 0x0);
        gbc.writeMem(0x24b7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x23ad);
        EXPECT(gbc.pc(), 0x24b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 01F8
        gbc.setState(0x537e, 0x9575, 0x7510, 0xa882, 0xc631, 0x4e6d, 0x0, 0x1);
        gbc.writeMem(0x537e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9575);
        EXPECT(gbc.pc(), 0x5380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 01F9
        gbc.setState(0x18ce, 0xde7b, 0x4000, 0x519e, 0xf6c4, 0x32c7, 0x1, 0x0);
        gbc.writeMem(0x18ce, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xde7b);
        EXPECT(gbc.pc(), 0x18d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01FA
        gbc.setState(0xed37, 0x2906, 0x4af0, 0x497e, 0x9c77, 0x8383, 0x1, 0x1);
        gbc.writeMem(0xed37, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2906);
        EXPECT(gbc.pc(), 0xed39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed37), 0xcb);
        EXPECT(gbc.readMem(0xed38), 0x42);
        // CB 42 01FB
        gbc.setState(0xb1c9, 0x1d92, 0x74b0, 0x30d1, 0xcede, 0xe889, 0x1, 0x0);
        gbc.writeMem(0xb1c9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1d92);
        EXPECT(gbc.pc(), 0xb1cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1c9), 0xcb);
        EXPECT(gbc.readMem(0xb1ca), 0x42);
        // CB 42 01FC
        gbc.setState(0x8021, 0x1bf2, 0x1dc0, 0x23b8, 0xe4cb, 0x4838, 0x1, 0x1);
        gbc.writeMem(0x8021, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1bf2);
        EXPECT(gbc.pc(), 0x8023);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8021), 0xcb);
        EXPECT(gbc.readMem(0x8022), 0x42);
        // CB 42 01FD
        gbc.setState(0xa5b4, 0x64a4, 0x9320, 0xb70e, 0xc7e1, 0xa7c5, 0x0, 0x1);
        gbc.writeMem(0xa5b4, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x64a4);
        EXPECT(gbc.pc(), 0xa5b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5b4), 0xcb);
        EXPECT(gbc.readMem(0xa5b5), 0x42);
        // CB 42 01FE
        gbc.setState(0x5b9a, 0x5ef5, 0x54c0, 0xb2b8, 0xa875, 0x9781, 0x0, 0x0);
        gbc.writeMem(0x5b9a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5ef5);
        EXPECT(gbc.pc(), 0x5b9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 01FF
        gbc.setState(0xa141, 0x180c, 0xea30, 0x52fe, 0x1eab, 0xb55a, 0x1, 0x0);
        gbc.writeMem(0xa141, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x180c);
        EXPECT(gbc.pc(), 0xa143);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa141), 0xcb);
        EXPECT(gbc.readMem(0xa142), 0x42);
        // CB 42 0200
        gbc.setState(0x8c7d, 0x7f59, 0xfef0, 0x9c48, 0x3c3a, 0x7f53, 0x0, 0x0);
        gbc.writeMem(0x8c7d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7f59);
        EXPECT(gbc.pc(), 0x8c7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c7d), 0xcb);
        EXPECT(gbc.readMem(0x8c7e), 0x42);
        // CB 42 0201
        gbc.setState(0x21a8, 0xde0a, 0xa220, 0x6458, 0x3ae6, 0xcee7, 0x0, 0x1);
        gbc.writeMem(0x21a8, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xde0a);
        EXPECT(gbc.pc(), 0x21aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0202
        gbc.setState(0xdf01, 0x56d6, 0x6240, 0xb2f6, 0x53bd, 0x1b55, 0x0, 0x1);
        gbc.writeMem(0xdf01, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x56d6);
        EXPECT(gbc.pc(), 0xdf03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf01), 0xcb);
        EXPECT(gbc.readMem(0xdf02), 0x42);
        // CB 42 0203
        gbc.setState(0x9fa5, 0x58a, 0x54d0, 0x8c9e, 0xcccf, 0xac2e, 0x0, 0x1);
        gbc.writeMem(0x9fa5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x58a);
        EXPECT(gbc.pc(), 0x9fa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fa5), 0xcb);
        EXPECT(gbc.readMem(0x9fa6), 0x42);
        // CB 42 0204
        gbc.setState(0x6595, 0xaef8, 0x6ee0, 0x5a53, 0x7aef, 0x631a, 0x0, 0x0);
        gbc.writeMem(0x6595, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xaef8);
        EXPECT(gbc.pc(), 0x6597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0205
        gbc.setState(0x6955, 0x3a3f, 0xfc0, 0xf1b6, 0x2731, 0x35b4, 0x1, 0x0);
        gbc.writeMem(0x6955, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3a3f);
        EXPECT(gbc.pc(), 0x6957);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0206
        gbc.setState(0xa1c6, 0x64c5, 0xc1b0, 0xc9e5, 0xd75e, 0x61f2, 0x0, 0x0);
        gbc.writeMem(0xa1c6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x64c5);
        EXPECT(gbc.pc(), 0xa1c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1c6), 0xcb);
        EXPECT(gbc.readMem(0xa1c7), 0x42);
        // CB 42 0207
        gbc.setState(0x4b22, 0x955d, 0x1e60, 0x6b, 0x6cd6, 0x7f84, 0x1, 0x1);
        gbc.writeMem(0x4b22, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x955d);
        EXPECT(gbc.pc(), 0x4b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0208
        gbc.setState(0x8672, 0xa88c, 0xcc20, 0xde1f, 0x70a5, 0xb4ad, 0x0, 0x1);
        gbc.writeMem(0x8672, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa88c);
        EXPECT(gbc.pc(), 0x8674);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8672), 0xcb);
        EXPECT(gbc.readMem(0x8673), 0x42);
        // CB 42 0209
        gbc.setState(0x9af, 0x75f6, 0x6140, 0x98d1, 0xf7a, 0xad2b, 0x1, 0x1);
        gbc.writeMem(0x9af, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x75f6);
        EXPECT(gbc.pc(), 0x9b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 020A
        gbc.setState(0x5be6, 0x6f39, 0x1810, 0x18ae, 0x3aa0, 0x1a93, 0x0, 0x1);
        gbc.writeMem(0x5be6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6f39);
        EXPECT(gbc.pc(), 0x5be8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 020B
        gbc.setState(0x3fe0, 0x1d2c, 0x2c60, 0x5851, 0xc47f, 0x84d4, 0x1, 0x1);
        gbc.writeMem(0x3fe0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1d2c);
        EXPECT(gbc.pc(), 0x3fe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 020C
        gbc.setState(0xb3ef, 0x9674, 0xd4a0, 0x2fc, 0xd48f, 0xc319, 0x1, 0x0);
        gbc.writeMem(0xb3ef, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9674);
        EXPECT(gbc.pc(), 0xb3f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3ef), 0xcb);
        EXPECT(gbc.readMem(0xb3f0), 0x42);
        // CB 42 020D
        gbc.setState(0x3a97, 0x92b3, 0x37b0, 0xec9c, 0x7ff, 0xa36a, 0x1, 0x0);
        gbc.writeMem(0x3a97, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x92b3);
        EXPECT(gbc.pc(), 0x3a99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 020E
        gbc.setState(0xebc7, 0xa874, 0x2a0, 0xa23, 0x3029, 0x2b35, 0x1, 0x0);
        gbc.writeMem(0xebc7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa874);
        EXPECT(gbc.pc(), 0xebc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebc7), 0xcb);
        EXPECT(gbc.readMem(0xebc8), 0x42);
        // CB 42 020F
        gbc.setState(0x5353, 0xe029, 0xf020, 0xf961, 0x2a62, 0xbddf, 0x1, 0x1);
        gbc.writeMem(0x5353, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe029);
        EXPECT(gbc.pc(), 0x5355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0210
        gbc.setState(0x9d47, 0xf98e, 0x6080, 0xdd47, 0x4d8d, 0xe0e6, 0x0, 0x0);
        gbc.writeMem(0x9d47, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf98e);
        EXPECT(gbc.pc(), 0x9d49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d47), 0xcb);
        EXPECT(gbc.readMem(0x9d48), 0x42);
        // CB 42 0211
        gbc.setState(0x3e7, 0xe205, 0xd920, 0xbfc4, 0x432a, 0x59dc, 0x1, 0x0);
        gbc.writeMem(0x3e7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe205);
        EXPECT(gbc.pc(), 0x3e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0212
        gbc.setState(0xee73, 0x76c5, 0x36d0, 0x2a83, 0x865c, 0x71b1, 0x1, 0x1);
        gbc.writeMem(0xee73, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x76c5);
        EXPECT(gbc.pc(), 0xee75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee73), 0xcb);
        EXPECT(gbc.readMem(0xee74), 0x42);
        // CB 42 0213
        gbc.setState(0x8947, 0x3377, 0xa710, 0x57ab, 0xe7ba, 0x6510, 0x0, 0x0);
        gbc.writeMem(0x8947, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3377);
        EXPECT(gbc.pc(), 0x8949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8947), 0xcb);
        EXPECT(gbc.readMem(0x8948), 0x42);
        // CB 42 0214
        gbc.setState(0xcd5, 0x98d6, 0x82d0, 0xba49, 0x74bc, 0x2630, 0x1, 0x0);
        gbc.writeMem(0xcd5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x98d6);
        EXPECT(gbc.pc(), 0xcd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0215
        gbc.setState(0x5f59, 0xc22e, 0x9d10, 0x9b4a, 0xf20, 0x5af0, 0x1, 0x1);
        gbc.writeMem(0x5f59, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc22e);
        EXPECT(gbc.pc(), 0x5f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0216
        gbc.setState(0xe767, 0x8d44, 0xbdf0, 0x514f, 0xf320, 0x3ec3, 0x0, 0x1);
        gbc.writeMem(0xe767, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8d44);
        EXPECT(gbc.pc(), 0xe769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe767), 0xcb);
        EXPECT(gbc.readMem(0xe768), 0x42);
        // CB 42 0217
        gbc.setState(0x1343, 0x6cd, 0xa200, 0xbd88, 0xa0ab, 0x56a, 0x0, 0x1);
        gbc.writeMem(0x1343, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6cd);
        EXPECT(gbc.pc(), 0x1345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0218
        gbc.setState(0xdeac, 0xaabf, 0x230, 0x8099, 0x26e4, 0x44ba, 0x0, 0x0);
        gbc.writeMem(0xdeac, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xaabf);
        EXPECT(gbc.pc(), 0xdeae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeac), 0xcb);
        EXPECT(gbc.readMem(0xdead), 0x42);
        // CB 42 0219
        gbc.setState(0x3347, 0x1ded, 0x8980, 0x176e, 0xf1af, 0x9275, 0x0, 0x1);
        gbc.writeMem(0x3347, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1ded);
        EXPECT(gbc.pc(), 0x3349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 021B
        gbc.setState(0x5172, 0xc45a, 0x7900, 0x3216, 0xba1c, 0xaa78, 0x0, 0x0);
        gbc.writeMem(0x5172, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc45a);
        EXPECT(gbc.pc(), 0x5174);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 021C
        gbc.setState(0x543f, 0x22a0, 0x3960, 0xfcd5, 0xbe77, 0x4d32, 0x1, 0x0);
        gbc.writeMem(0x543f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x22a0);
        EXPECT(gbc.pc(), 0x5441);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 021D
        gbc.setState(0x7bfc, 0x1bc0, 0xe960, 0xa358, 0xd24, 0x584e, 0x0, 0x0);
        gbc.writeMem(0x7bfc, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1bc0);
        EXPECT(gbc.pc(), 0x7bfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 021E
        gbc.setState(0x807c, 0x1e3c, 0x15b0, 0x6869, 0xac28, 0xb195, 0x0, 0x1);
        gbc.writeMem(0x807c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1e3c);
        EXPECT(gbc.pc(), 0x807e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x807c), 0xcb);
        EXPECT(gbc.readMem(0x807d), 0x42);
        // CB 42 021F
        gbc.setState(0x914b, 0xadf0, 0xa190, 0xd84, 0x2832, 0x907, 0x1, 0x1);
        gbc.writeMem(0x914b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xadf0);
        EXPECT(gbc.pc(), 0x914d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x914b), 0xcb);
        EXPECT(gbc.readMem(0x914c), 0x42);
        // CB 42 0220
        gbc.setState(0xc3b7, 0x430a, 0x8c0, 0xb93f, 0x3606, 0x8fc8, 0x0, 0x1);
        gbc.writeMem(0xc3b7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x430a);
        EXPECT(gbc.pc(), 0xc3b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3b7), 0xcb);
        EXPECT(gbc.readMem(0xc3b8), 0x42);
        // CB 42 0221
        gbc.setState(0x64ed, 0x494f, 0x8060, 0x677a, 0x493d, 0xba2f, 0x1, 0x0);
        gbc.writeMem(0x64ed, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x494f);
        EXPECT(gbc.pc(), 0x64ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0222
        gbc.setState(0xa3d, 0x940d, 0x6b60, 0x2d60, 0x4954, 0x6b8b, 0x1, 0x0);
        gbc.writeMem(0xa3d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x940d);
        EXPECT(gbc.pc(), 0xa3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0223
        gbc.setState(0x187b, 0xa97b, 0x7800, 0x5875, 0xbfd2, 0x749e, 0x0, 0x0);
        gbc.writeMem(0x187b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa97b);
        EXPECT(gbc.pc(), 0x187d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0224
        gbc.setState(0x47ad, 0x7266, 0xab30, 0x374a, 0x68af, 0xad43, 0x1, 0x1);
        gbc.writeMem(0x47ad, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7266);
        EXPECT(gbc.pc(), 0x47af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0225
        gbc.setState(0x7f11, 0x270f, 0x3100, 0xf6c0, 0xadd1, 0x2c25, 0x0, 0x1);
        gbc.writeMem(0x7f11, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x270f);
        EXPECT(gbc.pc(), 0x7f13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0226
        gbc.setState(0x3b40, 0xec9a, 0x17f0, 0x7d7a, 0xe084, 0x727f, 0x1, 0x1);
        gbc.writeMem(0x3b40, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xec9a);
        EXPECT(gbc.pc(), 0x3b42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0227
        gbc.setState(0x9472, 0xf465, 0x2dc0, 0xb48, 0x7ff4, 0x1edc, 0x1, 0x0);
        gbc.writeMem(0x9472, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf465);
        EXPECT(gbc.pc(), 0x9474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9472), 0xcb);
        EXPECT(gbc.readMem(0x9473), 0x42);
        // CB 42 0228
        gbc.setState(0x73e, 0x8543, 0xb0d0, 0x1171, 0x6b0c, 0xbaeb, 0x0, 0x1);
        gbc.writeMem(0x73e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8543);
        EXPECT(gbc.pc(), 0x740);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0229
        gbc.setState(0x180b, 0xd9d3, 0x210, 0x9e76, 0x980b, 0x1492, 0x1, 0x1);
        gbc.writeMem(0x180b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd9d3);
        EXPECT(gbc.pc(), 0x180d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 022A
        gbc.setState(0xb696, 0xaae2, 0x3510, 0x19e1, 0xd0e0, 0x60c4, 0x1, 0x0);
        gbc.writeMem(0xb696, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xaae2);
        EXPECT(gbc.pc(), 0xb698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb696), 0xcb);
        EXPECT(gbc.readMem(0xb697), 0x42);
        // CB 42 022B
        gbc.setState(0x3f5a, 0x9fd7, 0xc2c0, 0x1ee7, 0xfbe1, 0x7b82, 0x1, 0x1);
        gbc.writeMem(0x3f5a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9fd7);
        EXPECT(gbc.pc(), 0x3f5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 022C
        gbc.setState(0xbcb6, 0xa586, 0x9790, 0x17b1, 0xfb5a, 0x91dc, 0x1, 0x0);
        gbc.writeMem(0xbcb6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa586);
        EXPECT(gbc.pc(), 0xbcb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcb6), 0xcb);
        EXPECT(gbc.readMem(0xbcb7), 0x42);
        // CB 42 022D
        gbc.setState(0x19d1, 0x627, 0x6c70, 0x19a2, 0xe965, 0x5266, 0x0, 0x1);
        gbc.writeMem(0x19d1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x627);
        EXPECT(gbc.pc(), 0x19d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 022E
        gbc.setState(0x1199, 0x5a90, 0xb9b0, 0x209f, 0xb7a0, 0x38e5, 0x1, 0x0);
        gbc.writeMem(0x1199, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5a90);
        EXPECT(gbc.pc(), 0x119b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 022F
        gbc.setState(0x5913, 0x5248, 0xf420, 0x33b, 0x6b55, 0x40dc, 0x1, 0x0);
        gbc.writeMem(0x5913, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5248);
        EXPECT(gbc.pc(), 0x5915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0230
        gbc.setState(0x82b3, 0xcf47, 0x50c0, 0x452a, 0x5750, 0x8a66, 0x0, 0x0);
        gbc.writeMem(0x82b3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcf47);
        EXPECT(gbc.pc(), 0x82b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b3), 0xcb);
        EXPECT(gbc.readMem(0x82b4), 0x42);
        // CB 42 0231
        gbc.setState(0xb203, 0xc6b, 0xa990, 0x3e4c, 0x1ff1, 0x4076, 0x0, 0x0);
        gbc.writeMem(0xb203, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc6b);
        EXPECT(gbc.pc(), 0xb205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb203), 0xcb);
        EXPECT(gbc.readMem(0xb204), 0x42);
        // CB 42 0232
        gbc.setState(0xc6c3, 0x24bf, 0xd5b0, 0x1982, 0x774c, 0xf48f, 0x0, 0x1);
        gbc.writeMem(0xc6c3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x24bf);
        EXPECT(gbc.pc(), 0xc6c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c3), 0xcb);
        EXPECT(gbc.readMem(0xc6c4), 0x42);
        // CB 42 0233
        gbc.setState(0xdf83, 0xff04, 0x4bc0, 0xd5e2, 0x7529, 0x1d82, 0x0, 0x0);
        gbc.writeMem(0xdf83, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xff04);
        EXPECT(gbc.pc(), 0xdf85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf83), 0xcb);
        EXPECT(gbc.readMem(0xdf84), 0x42);
        // CB 42 0234
        gbc.setState(0x8efa, 0x4d3f, 0x6bb0, 0x33d3, 0x31ec, 0x9d42, 0x1, 0x0);
        gbc.writeMem(0x8efa, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4d3f);
        EXPECT(gbc.pc(), 0x8efc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8efa), 0xcb);
        EXPECT(gbc.readMem(0x8efb), 0x42);
        // CB 42 0235
        gbc.setState(0x83a8, 0x4a2e, 0xebc0, 0xce31, 0x55ca, 0x3307, 0x0, 0x0);
        gbc.writeMem(0x83a8, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4a2e);
        EXPECT(gbc.pc(), 0x83aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a8), 0xcb);
        EXPECT(gbc.readMem(0x83a9), 0x42);
        // CB 42 0236
        gbc.setState(0x9e51, 0xcc68, 0x98a0, 0x1a7c, 0xe65e, 0xf6a1, 0x0, 0x1);
        gbc.writeMem(0x9e51, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xcc68);
        EXPECT(gbc.pc(), 0x9e53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e51), 0xcb);
        EXPECT(gbc.readMem(0x9e52), 0x42);
        // CB 42 0237
        gbc.setState(0xe73, 0x2b65, 0x1330, 0x9955, 0x7700, 0xc19c, 0x0, 0x1);
        gbc.writeMem(0xe73, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2b65);
        EXPECT(gbc.pc(), 0xe75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0238
        gbc.setState(0x3a80, 0x3077, 0x6420, 0xd56a, 0xf422, 0x3deb, 0x0, 0x1);
        gbc.writeMem(0x3a80, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3077);
        EXPECT(gbc.pc(), 0x3a82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0239
        gbc.setState(0xc249, 0x876d, 0x80, 0x205, 0xde00, 0x980, 0x0, 0x1);
        gbc.writeMem(0xc249, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x876d);
        EXPECT(gbc.pc(), 0xc24b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc249), 0xcb);
        EXPECT(gbc.readMem(0xc24a), 0x42);
        // CB 42 023B
        gbc.setState(0xe2eb, 0x9a92, 0x7510, 0xe46d, 0x6488, 0x6aa1, 0x1, 0x0);
        gbc.writeMem(0xe2eb, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9a92);
        EXPECT(gbc.pc(), 0xe2ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2eb), 0xcb);
        EXPECT(gbc.readMem(0xe2ec), 0x42);
        // CB 42 023C
        gbc.setState(0x193a, 0x1060, 0x68a0, 0x2cc4, 0x8618, 0x6995, 0x1, 0x0);
        gbc.writeMem(0x193a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1060);
        EXPECT(gbc.pc(), 0x193c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 023D
        gbc.setState(0x14fa, 0xf732, 0xf8f0, 0x74d2, 0x5f99, 0xb3d8, 0x1, 0x1);
        gbc.writeMem(0x14fa, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf732);
        EXPECT(gbc.pc(), 0x14fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 023E
        gbc.setState(0x850d, 0x38e1, 0xc730, 0x9af5, 0xe864, 0xff9f, 0x1, 0x1);
        gbc.writeMem(0x850d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x38e1);
        EXPECT(gbc.pc(), 0x850f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x850d), 0xcb);
        EXPECT(gbc.readMem(0x850e), 0x42);
        // CB 42 023F
        gbc.setState(0x136b, 0x37de, 0x3050, 0xd245, 0xb11b, 0xcc8d, 0x1, 0x0);
        gbc.writeMem(0x136b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x37de);
        EXPECT(gbc.pc(), 0x136d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0241
        gbc.setState(0x6c3b, 0x5451, 0x5e10, 0x9d92, 0x8042, 0x39d5, 0x1, 0x1);
        gbc.writeMem(0x6c3b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5451);
        EXPECT(gbc.pc(), 0x6c3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0242
        gbc.setState(0x3cc9, 0x833c, 0x80b0, 0x5c20, 0x3c41, 0x198e, 0x1, 0x0);
        gbc.writeMem(0x3cc9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x833c);
        EXPECT(gbc.pc(), 0x3ccb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0243
        gbc.setState(0x7891, 0x3b10, 0x5560, 0xe11c, 0xe2de, 0x9dc5, 0x1, 0x0);
        gbc.writeMem(0x7891, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3b10);
        EXPECT(gbc.pc(), 0x7893);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0244
        gbc.setState(0x2629, 0xd850, 0x9840, 0xb3a6, 0x32d0, 0x86e8, 0x1, 0x0);
        gbc.writeMem(0x2629, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd850);
        EXPECT(gbc.pc(), 0x262b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0245
        gbc.setState(0x12ff, 0x1a82, 0xce50, 0xcc19, 0xe380, 0x5e82, 0x1, 0x0);
        gbc.writeMem(0x12ff, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1a82);
        EXPECT(gbc.pc(), 0x1301);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0246
        gbc.setState(0x2448, 0xaccc, 0x7030, 0x92c7, 0x223c, 0xc1fd, 0x0, 0x0);
        gbc.writeMem(0x2448, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xaccc);
        EXPECT(gbc.pc(), 0x244a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0247
        gbc.setState(0xc830, 0x5086, 0xff90, 0xbdd6, 0x3f17, 0x39a8, 0x1, 0x0);
        gbc.writeMem(0xc830, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5086);
        EXPECT(gbc.pc(), 0xc832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc830), 0xcb);
        EXPECT(gbc.readMem(0xc831), 0x42);
        // CB 42 0248
        gbc.setState(0xea6a, 0x79b9, 0xc520, 0x129a, 0x8d21, 0x5b14, 0x1, 0x0);
        gbc.writeMem(0xea6a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x79b9);
        EXPECT(gbc.pc(), 0xea6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea6a), 0xcb);
        EXPECT(gbc.readMem(0xea6b), 0x42);
        // CB 42 0249
        gbc.setState(0x3661, 0x957, 0xc340, 0x5d31, 0xbfe, 0x4fe3, 0x0, 0x1);
        gbc.writeMem(0x3661, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x957);
        EXPECT(gbc.pc(), 0x3663);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 024A
        gbc.setState(0xa98c, 0x486e, 0xba80, 0x1fcd, 0x124a, 0x99f4, 0x1, 0x0);
        gbc.writeMem(0xa98c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x486e);
        EXPECT(gbc.pc(), 0xa98e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa98c), 0xcb);
        EXPECT(gbc.readMem(0xa98d), 0x42);
        // CB 42 024B
        gbc.setState(0xeecd, 0x2a12, 0x5240, 0xa6f7, 0x9a3d, 0xa49a, 0x0, 0x0);
        gbc.writeMem(0xeecd, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2a12);
        EXPECT(gbc.pc(), 0xeecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeecd), 0xcb);
        EXPECT(gbc.readMem(0xeece), 0x42);
        // CB 42 024C
        gbc.setState(0x5247, 0xc62d, 0x2820, 0x7830, 0xad3a, 0xcb95, 0x0, 0x1);
        gbc.writeMem(0x5247, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc62d);
        EXPECT(gbc.pc(), 0x5249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 024D
        gbc.setState(0xc3ae, 0x74c0, 0xe1a0, 0xad76, 0x6128, 0x4b07, 0x1, 0x0);
        gbc.writeMem(0xc3ae, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x74c0);
        EXPECT(gbc.pc(), 0xc3b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ae), 0xcb);
        EXPECT(gbc.readMem(0xc3af), 0x42);
        // CB 42 024E
        gbc.setState(0xdc63, 0x2328, 0x5a0, 0x12aa, 0xcb28, 0xcd0b, 0x0, 0x1);
        gbc.writeMem(0xdc63, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2328);
        EXPECT(gbc.pc(), 0xdc65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc63), 0xcb);
        EXPECT(gbc.readMem(0xdc64), 0x42);
        // CB 42 024F
        gbc.setState(0xb9ce, 0x8bd9, 0xe5f0, 0x21dd, 0x24fa, 0x24ec, 0x0, 0x1);
        gbc.writeMem(0xb9ce, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8bd9);
        EXPECT(gbc.pc(), 0xb9d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ce), 0xcb);
        EXPECT(gbc.readMem(0xb9cf), 0x42);
        // CB 42 0250
        gbc.setState(0x274c, 0x2904, 0x8540, 0xf6ff, 0x870d, 0x1b48, 0x1, 0x1);
        gbc.writeMem(0x274c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2904);
        EXPECT(gbc.pc(), 0x274e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0251
        gbc.setState(0x2c3d, 0xdbc1, 0x1d0, 0x920, 0x4128, 0x3d82, 0x0, 0x1);
        gbc.writeMem(0x2c3d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xdbc1);
        EXPECT(gbc.pc(), 0x2c3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0252
        gbc.setState(0x92a5, 0x118c, 0x70d0, 0xdad2, 0x885c, 0x26a3, 0x1, 0x1);
        gbc.writeMem(0x92a5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x118c);
        EXPECT(gbc.pc(), 0x92a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92a5), 0xcb);
        EXPECT(gbc.readMem(0x92a6), 0x42);
        // CB 42 0253
        gbc.setState(0xbc2b, 0x817e, 0x2d90, 0x8cef, 0x567f, 0x81b1, 0x1, 0x1);
        gbc.writeMem(0xbc2b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x817e);
        EXPECT(gbc.pc(), 0xbc2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc2b), 0xcb);
        EXPECT(gbc.readMem(0xbc2c), 0x42);
        // CB 42 0254
        gbc.setState(0xad8f, 0xd2a9, 0xe5b0, 0x617e, 0x3dc4, 0x5159, 0x0, 0x1);
        gbc.writeMem(0xad8f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd2a9);
        EXPECT(gbc.pc(), 0xad91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad8f), 0xcb);
        EXPECT(gbc.readMem(0xad90), 0x42);
        // CB 42 0255
        gbc.setState(0x1565, 0x106b, 0xdb0, 0xbc68, 0x311d, 0x712a, 0x1, 0x1);
        gbc.writeMem(0x1565, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x106b);
        EXPECT(gbc.pc(), 0x1567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0256
        gbc.setState(0x9031, 0x38aa, 0xc3d0, 0x36c1, 0x3aef, 0x3c2b, 0x1, 0x1);
        gbc.writeMem(0x9031, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x38aa);
        EXPECT(gbc.pc(), 0x9033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9031), 0xcb);
        EXPECT(gbc.readMem(0x9032), 0x42);
        // CB 42 0257
        gbc.setState(0x1bb9, 0xbc36, 0x2bd0, 0x43e7, 0x5f5d, 0xebcb, 0x0, 0x1);
        gbc.writeMem(0x1bb9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbc36);
        EXPECT(gbc.pc(), 0x1bbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0258
        gbc.setState(0xbdf0, 0xeddc, 0xe770, 0xd2b1, 0xe382, 0xada2, 0x1, 0x1);
        gbc.writeMem(0xbdf0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xeddc);
        EXPECT(gbc.pc(), 0xbdf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf0), 0xcb);
        EXPECT(gbc.readMem(0xbdf1), 0x42);
        // CB 42 0259
        gbc.setState(0xedc5, 0xa55d, 0x4dc0, 0xc5e0, 0xd0f5, 0x1ead, 0x1, 0x1);
        gbc.writeMem(0xedc5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa55d);
        EXPECT(gbc.pc(), 0xedc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedc5), 0xcb);
        EXPECT(gbc.readMem(0xedc6), 0x42);
        // CB 42 025A
        gbc.setState(0x397b, 0x6263, 0x77e0, 0x3a37, 0xb31b, 0xd41, 0x0, 0x1);
        gbc.writeMem(0x397b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6263);
        EXPECT(gbc.pc(), 0x397d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 025B
        gbc.setState(0xa679, 0xff3e, 0x7460, 0x3340, 0x7b1b, 0x772, 0x1, 0x1);
        gbc.writeMem(0xa679, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xff3e);
        EXPECT(gbc.pc(), 0xa67b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa679), 0xcb);
        EXPECT(gbc.readMem(0xa67a), 0x42);
        // CB 42 025C
        gbc.setState(0xd6c2, 0x3bcc, 0xd720, 0xa37, 0x55d0, 0x584, 0x0, 0x1);
        gbc.writeMem(0xd6c2, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3bcc);
        EXPECT(gbc.pc(), 0xd6c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c2), 0xcb);
        EXPECT(gbc.readMem(0xd6c3), 0x42);
        // CB 42 025D
        gbc.setState(0x4003, 0x510a, 0x5e60, 0x3bb2, 0x2967, 0x322b, 0x0, 0x1);
        gbc.writeMem(0x4003, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x510a);
        EXPECT(gbc.pc(), 0x4005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 025E
        gbc.setState(0x6200, 0xdb8, 0x34f0, 0xa139, 0x13e9, 0x58d7, 0x1, 0x1);
        gbc.writeMem(0x6200, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xdb8);
        EXPECT(gbc.pc(), 0x6202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 025F
        gbc.setState(0x9a7f, 0xf1c, 0x5c30, 0x12d3, 0x550b, 0x3ed4, 0x0, 0x0);
        gbc.writeMem(0x9a7f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf1c);
        EXPECT(gbc.pc(), 0x9a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a7f), 0xcb);
        EXPECT(gbc.readMem(0x9a80), 0x42);
        // CB 42 0260
        gbc.setState(0x1602, 0xb7e9, 0xe720, 0x2c02, 0x991f, 0x20e3, 0x0, 0x1);
        gbc.writeMem(0x1602, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb7e9);
        EXPECT(gbc.pc(), 0x1604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0261
        gbc.setState(0x1849, 0x7e41, 0xb530, 0x2b66, 0x7c53, 0x63d4, 0x1, 0x0);
        gbc.writeMem(0x1849, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7e41);
        EXPECT(gbc.pc(), 0x184b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0263
        gbc.setState(0xb18, 0x4f90, 0x3ec0, 0x9551, 0xf1ae, 0xcfbf, 0x1, 0x1);
        gbc.writeMem(0xb18, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4f90);
        EXPECT(gbc.pc(), 0xb1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0264
        gbc.setState(0x3a4e, 0x2086, 0x4d00, 0xb640, 0x9ac9, 0xc13d, 0x0, 0x0);
        gbc.writeMem(0x3a4e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2086);
        EXPECT(gbc.pc(), 0x3a50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0266
        gbc.setState(0x8b6a, 0x6410, 0x9150, 0x40be, 0xcbd0, 0x1139, 0x1, 0x0);
        gbc.writeMem(0x8b6a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6410);
        EXPECT(gbc.pc(), 0x8b6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b6a), 0xcb);
        EXPECT(gbc.readMem(0x8b6b), 0x42);
        // CB 42 0267
        gbc.setState(0xce04, 0x5144, 0xed70, 0x1f1c, 0x7e01, 0xe5e2, 0x0, 0x1);
        gbc.writeMem(0xce04, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5144);
        EXPECT(gbc.pc(), 0xce06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce04), 0xcb);
        EXPECT(gbc.readMem(0xce05), 0x42);
        // CB 42 0268
        gbc.setState(0xb090, 0x786f, 0xe3d0, 0xc83f, 0x9f49, 0x2aa5, 0x0, 0x1);
        gbc.writeMem(0xb090, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x786f);
        EXPECT(gbc.pc(), 0xb092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb090), 0xcb);
        EXPECT(gbc.readMem(0xb091), 0x42);
        // CB 42 0269
        gbc.setState(0x1335, 0xe623, 0x48d0, 0xfb2d, 0x223e, 0x36a8, 0x1, 0x0);
        gbc.writeMem(0x1335, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe623);
        EXPECT(gbc.pc(), 0x1337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 026A
        gbc.setState(0x13d8, 0x75b4, 0x6260, 0xf5ba, 0x4056, 0x9eb0, 0x0, 0x0);
        gbc.writeMem(0x13d8, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x75b4);
        EXPECT(gbc.pc(), 0x13da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 026B
        gbc.setState(0x5119, 0x6165, 0xc5f0, 0xffef, 0xb9a4, 0xf015, 0x0, 0x1);
        gbc.writeMem(0x5119, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6165);
        EXPECT(gbc.pc(), 0x511b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 026C
        gbc.setState(0x767e, 0xcd0, 0x8920, 0xdef1, 0xa23a, 0xd677, 0x1, 0x1);
        gbc.writeMem(0x767e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xcd0);
        EXPECT(gbc.pc(), 0x7680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 026D
        gbc.setState(0x36c4, 0xffbc, 0x3470, 0x5553, 0x7106, 0xe12f, 0x1, 0x0);
        gbc.writeMem(0x36c4, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xffbc);
        EXPECT(gbc.pc(), 0x36c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 026E
        gbc.setState(0xdec3, 0x5875, 0xbfb0, 0x2cdf, 0xf0d8, 0xa1e6, 0x0, 0x1);
        gbc.writeMem(0xdec3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5875);
        EXPECT(gbc.pc(), 0xdec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdec3), 0xcb);
        EXPECT(gbc.readMem(0xdec4), 0x42);
        // CB 42 026F
        gbc.setState(0xc8d6, 0x8b4f, 0x40d0, 0xdc0f, 0x70d5, 0xd6f2, 0x1, 0x1);
        gbc.writeMem(0xc8d6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8b4f);
        EXPECT(gbc.pc(), 0xc8d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8d6), 0xcb);
        EXPECT(gbc.readMem(0xc8d7), 0x42);
        // CB 42 0270
        gbc.setState(0xe5cb, 0x8a88, 0x3e50, 0x609f, 0x8f74, 0xb293, 0x0, 0x0);
        gbc.writeMem(0xe5cb, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8a88);
        EXPECT(gbc.pc(), 0xe5cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5cb), 0xcb);
        EXPECT(gbc.readMem(0xe5cc), 0x42);
        // CB 42 0271
        gbc.setState(0xaa99, 0x51f9, 0xb190, 0x6901, 0x19db, 0x9674, 0x1, 0x1);
        gbc.writeMem(0xaa99, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x51f9);
        EXPECT(gbc.pc(), 0xaa9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa99), 0xcb);
        EXPECT(gbc.readMem(0xaa9a), 0x42);
        // CB 42 0272
        gbc.setState(0xdb85, 0x54cb, 0xc600, 0x2a43, 0x6a05, 0x9041, 0x0, 0x1);
        gbc.writeMem(0xdb85, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x54cb);
        EXPECT(gbc.pc(), 0xdb87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb85), 0xcb);
        EXPECT(gbc.readMem(0xdb86), 0x42);
        // CB 42 0273
        gbc.setState(0x3899, 0x3b2f, 0x2ce0, 0x6aab, 0xd217, 0x5c64, 0x0, 0x1);
        gbc.writeMem(0x3899, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3b2f);
        EXPECT(gbc.pc(), 0x389b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0274
        gbc.setState(0x29be, 0x6633, 0x3f20, 0xf3ad, 0xfbfc, 0x6392, 0x0, 0x1);
        gbc.writeMem(0x29be, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6633);
        EXPECT(gbc.pc(), 0x29c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0275
        gbc.setState(0x5b6f, 0x8091, 0x1b00, 0xbbb0, 0x42e3, 0x2d42, 0x1, 0x1);
        gbc.writeMem(0x5b6f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8091);
        EXPECT(gbc.pc(), 0x5b71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0276
        gbc.setState(0x7e8d, 0x4b90, 0xf3b0, 0x3aa, 0xcfa0, 0x2cdd, 0x1, 0x0);
        gbc.writeMem(0x7e8d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4b90);
        EXPECT(gbc.pc(), 0x7e8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0277
        gbc.setState(0xd214, 0x847c, 0x6310, 0xe78d, 0x6657, 0x5a9a, 0x0, 0x0);
        gbc.writeMem(0xd214, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x847c);
        EXPECT(gbc.pc(), 0xd216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd214), 0xcb);
        EXPECT(gbc.readMem(0xd215), 0x42);
        // CB 42 0278
        gbc.setState(0x1064, 0x1944, 0xfa60, 0x7890, 0x3cfc, 0xfb0f, 0x1, 0x1);
        gbc.writeMem(0x1064, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1944);
        EXPECT(gbc.pc(), 0x1066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0279
        gbc.setState(0xcd15, 0x94d9, 0xe30, 0x65c6, 0x8e67, 0x7f8d, 0x1, 0x0);
        gbc.writeMem(0xcd15, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x94d9);
        EXPECT(gbc.pc(), 0xcd17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd15), 0xcb);
        EXPECT(gbc.readMem(0xcd16), 0x42);
        // CB 42 027A
        gbc.setState(0x4698, 0x6eb0, 0xceb0, 0x87e5, 0xbcd3, 0x3415, 0x1, 0x1);
        gbc.writeMem(0x4698, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6eb0);
        EXPECT(gbc.pc(), 0x469a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 027B
        gbc.setState(0x3064, 0x9dd1, 0x9d90, 0xa8cd, 0xf96e, 0x3ad6, 0x1, 0x0);
        gbc.writeMem(0x3064, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9dd1);
        EXPECT(gbc.pc(), 0x3066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 027C
        gbc.setState(0xb525, 0x3f46, 0xd170, 0x3363, 0x2f40, 0x200b, 0x1, 0x1);
        gbc.writeMem(0xb525, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3f46);
        EXPECT(gbc.pc(), 0xb527);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb525), 0xcb);
        EXPECT(gbc.readMem(0xb526), 0x42);
        // CB 42 027D
        gbc.setState(0xa634, 0x5a13, 0x3160, 0xac35, 0xe1f1, 0x144a, 0x1, 0x0);
        gbc.writeMem(0xa634, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5a13);
        EXPECT(gbc.pc(), 0xa636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa634), 0xcb);
        EXPECT(gbc.readMem(0xa635), 0x42);
        // CB 42 027E
        gbc.setState(0x5119, 0xe785, 0x9960, 0x917c, 0x50be, 0xd8b6, 0x0, 0x1);
        gbc.writeMem(0x5119, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe785);
        EXPECT(gbc.pc(), 0x511b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 027F
        gbc.setState(0xdd40, 0xfaf3, 0x27b0, 0x378c, 0x32d1, 0x1f26, 0x0, 0x1);
        gbc.writeMem(0xdd40, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xfaf3);
        EXPECT(gbc.pc(), 0xdd42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd40), 0xcb);
        EXPECT(gbc.readMem(0xdd41), 0x42);
        // CB 42 0280
        gbc.setState(0xb753, 0x574f, 0xa670, 0x22aa, 0x44ac, 0xaf0, 0x1, 0x1);
        gbc.writeMem(0xb753, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x574f);
        EXPECT(gbc.pc(), 0xb755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb753), 0xcb);
        EXPECT(gbc.readMem(0xb754), 0x42);
        // CB 42 0281
        gbc.setState(0xe032, 0xc6a6, 0x3270, 0xa177, 0x1362, 0x411d, 0x1, 0x1);
        gbc.writeMem(0xe032, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc6a6);
        EXPECT(gbc.pc(), 0xe034);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe032), 0xcb);
        EXPECT(gbc.readMem(0xe033), 0x42);
        // CB 42 0283
        gbc.setState(0x67d6, 0x1a1e, 0xf100, 0xd853, 0xafaf, 0x6056, 0x0, 0x0);
        gbc.writeMem(0x67d6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1a1e);
        EXPECT(gbc.pc(), 0x67d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0284
        gbc.setState(0xe489, 0xba79, 0x5020, 0x4575, 0xf6f5, 0x9f65, 0x1, 0x1);
        gbc.writeMem(0xe489, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xba79);
        EXPECT(gbc.pc(), 0xe48b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe489), 0xcb);
        EXPECT(gbc.readMem(0xe48a), 0x42);
        // CB 42 0285
        gbc.setState(0x5fb3, 0x4f9, 0x2cc0, 0x769e, 0x7eba, 0xc123, 0x1, 0x1);
        gbc.writeMem(0x5fb3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4f9);
        EXPECT(gbc.pc(), 0x5fb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0286
        gbc.setState(0x1c05, 0xd5eb, 0xe9e0, 0x9f0a, 0x79ec, 0xbcaf, 0x0, 0x1);
        gbc.writeMem(0x1c05, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd5eb);
        EXPECT(gbc.pc(), 0x1c07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0287
        gbc.setState(0xcad9, 0x3714, 0x1a50, 0x828f, 0xdb84, 0x48d5, 0x1, 0x0);
        gbc.writeMem(0xcad9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3714);
        EXPECT(gbc.pc(), 0xcadb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcad9), 0xcb);
        EXPECT(gbc.readMem(0xcada), 0x42);
        // CB 42 0288
        gbc.setState(0xc134, 0x4143, 0x5140, 0x6d3, 0x369d, 0xf9d9, 0x1, 0x0);
        gbc.writeMem(0xc134, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4143);
        EXPECT(gbc.pc(), 0xc136);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc134), 0xcb);
        EXPECT(gbc.readMem(0xc135), 0x42);
        // CB 42 0289
        gbc.setState(0x3959, 0xebde, 0xb9c0, 0x9513, 0x11ac, 0xb2c1, 0x1, 0x0);
        gbc.writeMem(0x3959, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xebde);
        EXPECT(gbc.pc(), 0x395b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 028A
        gbc.setState(0x267f, 0x6433, 0x3ee0, 0x510d, 0xc54b, 0x5858, 0x1, 0x0);
        gbc.writeMem(0x267f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6433);
        EXPECT(gbc.pc(), 0x2681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 028B
        gbc.setState(0x355b, 0xe9b8, 0xe8c0, 0x5429, 0x2ea7, 0x8594, 0x0, 0x1);
        gbc.writeMem(0x355b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe9b8);
        EXPECT(gbc.pc(), 0x355d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 028C
        gbc.setState(0xd565, 0x11af, 0xc4f0, 0x8858, 0x30aa, 0xb54, 0x1, 0x0);
        gbc.writeMem(0xd565, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x11af);
        EXPECT(gbc.pc(), 0xd567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd565), 0xcb);
        EXPECT(gbc.readMem(0xd566), 0x42);
        // CB 42 028D
        gbc.setState(0x867a, 0xc536, 0x4660, 0xab0, 0xe696, 0x8223, 0x1, 0x1);
        gbc.writeMem(0x867a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc536);
        EXPECT(gbc.pc(), 0x867c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x867a), 0xcb);
        EXPECT(gbc.readMem(0x867b), 0x42);
        // CB 42 028E
        gbc.setState(0xb474, 0x22, 0x9ea0, 0xfa4d, 0x5339, 0xe4cd, 0x0, 0x0);
        gbc.writeMem(0xb474, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x22);
        EXPECT(gbc.pc(), 0xb476);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb474), 0xcb);
        EXPECT(gbc.readMem(0xb475), 0x42);
        // CB 42 028F
        gbc.setState(0xd894, 0x5344, 0x1930, 0xbfba, 0xac9d, 0xd07d, 0x1, 0x0);
        gbc.writeMem(0xd894, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5344);
        EXPECT(gbc.pc(), 0xd896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd894), 0xcb);
        EXPECT(gbc.readMem(0xd895), 0x42);
        // CB 42 0290
        gbc.setState(0x868d, 0x3b1c, 0xf690, 0xd06a, 0xcc49, 0xd088, 0x1, 0x0);
        gbc.writeMem(0x868d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x3b1c);
        EXPECT(gbc.pc(), 0x868f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x868d), 0xcb);
        EXPECT(gbc.readMem(0x868e), 0x42);
        // CB 42 0291
        gbc.setState(0xd91, 0x5bc4, 0x1f50, 0x8696, 0xff70, 0x1efb, 0x0, 0x0);
        gbc.writeMem(0xd91, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5bc4);
        EXPECT(gbc.pc(), 0xd93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0292
        gbc.setState(0x7a48, 0x28ac, 0x37e0, 0x54ce, 0x3caf, 0xd8e9, 0x0, 0x0);
        gbc.writeMem(0x7a48, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x28ac);
        EXPECT(gbc.pc(), 0x7a4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0293
        gbc.setState(0xe9f8, 0xf472, 0x7d60, 0x805f, 0x74f9, 0xa9a4, 0x1, 0x0);
        gbc.writeMem(0xe9f8, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf472);
        EXPECT(gbc.pc(), 0xe9fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9f8), 0xcb);
        EXPECT(gbc.readMem(0xe9f9), 0x42);
        // CB 42 0294
        gbc.setState(0xd901, 0xba9d, 0x640, 0x57bf, 0xe5ff, 0xfd16, 0x0, 0x1);
        gbc.writeMem(0xd901, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xba9d);
        EXPECT(gbc.pc(), 0xd903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd901), 0xcb);
        EXPECT(gbc.readMem(0xd902), 0x42);
        // CB 42 0295
        gbc.setState(0xc2da, 0xd493, 0xb1b0, 0x5649, 0xd339, 0xf120, 0x1, 0x1);
        gbc.writeMem(0xc2da, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd493);
        EXPECT(gbc.pc(), 0xc2dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2da), 0xcb);
        EXPECT(gbc.readMem(0xc2db), 0x42);
        // CB 42 0296
        gbc.setState(0xb5dd, 0x7d56, 0xe570, 0x2a40, 0xa371, 0x7f8f, 0x0, 0x1);
        gbc.writeMem(0xb5dd, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7d56);
        EXPECT(gbc.pc(), 0xb5df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5dd), 0xcb);
        EXPECT(gbc.readMem(0xb5de), 0x42);
        // CB 42 0297
        gbc.setState(0x56f3, 0x442e, 0xc8e0, 0xf957, 0xcacd, 0xee9f, 0x0, 0x1);
        gbc.writeMem(0x56f3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x442e);
        EXPECT(gbc.pc(), 0x56f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0298
        gbc.setState(0x29fa, 0x638d, 0x3270, 0x3727, 0xc4a9, 0x3cf5, 0x1, 0x0);
        gbc.writeMem(0x29fa, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x638d);
        EXPECT(gbc.pc(), 0x29fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0299
        gbc.setState(0xae24, 0xe025, 0x57f0, 0x9897, 0x686e, 0xe4ca, 0x0, 0x0);
        gbc.writeMem(0xae24, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe025);
        EXPECT(gbc.pc(), 0xae26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae24), 0xcb);
        EXPECT(gbc.readMem(0xae25), 0x42);
        // CB 42 029A
        gbc.setState(0x237e, 0xc86a, 0xa740, 0xbf32, 0x9826, 0x7891, 0x0, 0x0);
        gbc.writeMem(0x237e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc86a);
        EXPECT(gbc.pc(), 0x2380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 029B
        gbc.setState(0xd487, 0xdd7b, 0x4250, 0x6e71, 0x3739, 0xa18e, 0x1, 0x0);
        gbc.writeMem(0xd487, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdd7b);
        EXPECT(gbc.pc(), 0xd489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd487), 0xcb);
        EXPECT(gbc.readMem(0xd488), 0x42);
        // CB 42 029C
        gbc.setState(0xa060, 0xbda9, 0x2110, 0x5d7d, 0xf0d8, 0x14fc, 0x1, 0x0);
        gbc.writeMem(0xa060, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xbda9);
        EXPECT(gbc.pc(), 0xa062);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa060), 0xcb);
        EXPECT(gbc.readMem(0xa061), 0x42);
        // CB 42 029D
        gbc.setState(0xad8b, 0xae60, 0x3c20, 0xee9, 0x8faf, 0x814a, 0x1, 0x0);
        gbc.writeMem(0xad8b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xae60);
        EXPECT(gbc.pc(), 0xad8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad8b), 0xcb);
        EXPECT(gbc.readMem(0xad8c), 0x42);
        // CB 42 029E
        gbc.setState(0x556e, 0x4f1c, 0xe100, 0x9374, 0x8ef, 0x90aa, 0x1, 0x0);
        gbc.writeMem(0x556e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4f1c);
        EXPECT(gbc.pc(), 0x5570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 029F
        gbc.setState(0x1997, 0x9e9b, 0x2ba0, 0x6f7, 0xece4, 0x3934, 0x1, 0x1);
        gbc.writeMem(0x1997, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9e9b);
        EXPECT(gbc.pc(), 0x1999);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02A0
        gbc.setState(0xcfa8, 0x475, 0xe0d0, 0x2c84, 0xa49b, 0x464f, 0x1, 0x1);
        gbc.writeMem(0xcfa8, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x475);
        EXPECT(gbc.pc(), 0xcfaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfa8), 0xcb);
        EXPECT(gbc.readMem(0xcfa9), 0x42);
        // CB 42 02A1
        gbc.setState(0x8519, 0xc144, 0xbe70, 0x80a3, 0xfbda, 0x7be, 0x1, 0x1);
        gbc.writeMem(0x8519, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc144);
        EXPECT(gbc.pc(), 0x851b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8519), 0xcb);
        EXPECT(gbc.readMem(0x851a), 0x42);
        // CB 42 02A2
        gbc.setState(0xaad, 0x7235, 0x8930, 0x4a2e, 0x6729, 0xc4c2, 0x1, 0x1);
        gbc.writeMem(0xaad, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7235);
        EXPECT(gbc.pc(), 0xaaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02A3
        gbc.setState(0x787e, 0xffc3, 0x6520, 0x71e7, 0x364c, 0x33b5, 0x0, 0x0);
        gbc.writeMem(0x787e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xffc3);
        EXPECT(gbc.pc(), 0x7880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02A4
        gbc.setState(0x6e86, 0xf17d, 0x2680, 0xf8da, 0x2686, 0x4237, 0x0, 0x0);
        gbc.writeMem(0x6e86, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf17d);
        EXPECT(gbc.pc(), 0x6e88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02A5
        gbc.setState(0xecee, 0xbb76, 0x4af0, 0xe9b8, 0xa014, 0xfe2d, 0x0, 0x0);
        gbc.writeMem(0xecee, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xbb76);
        EXPECT(gbc.pc(), 0xecf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecee), 0xcb);
        EXPECT(gbc.readMem(0xecef), 0x42);
        // CB 42 02A6
        gbc.setState(0x1127, 0xfdd7, 0x4b70, 0xc76e, 0x8af, 0x89ff, 0x0, 0x1);
        gbc.writeMem(0x1127, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xfdd7);
        EXPECT(gbc.pc(), 0x1129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02A7
        gbc.setState(0xced, 0x269f, 0x9360, 0xc3e8, 0x7f8e, 0xed54, 0x0, 0x0);
        gbc.writeMem(0xced, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x269f);
        EXPECT(gbc.pc(), 0xcef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02A8
        gbc.setState(0x44b3, 0x9ca5, 0xbd80, 0xa01c, 0x5c4e, 0x58e9, 0x1, 0x1);
        gbc.writeMem(0x44b3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9ca5);
        EXPECT(gbc.pc(), 0x44b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02A9
        gbc.setState(0x6261, 0x8fce, 0xbbe0, 0x184, 0x9c97, 0xeb61, 0x0, 0x1);
        gbc.writeMem(0x6261, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8fce);
        EXPECT(gbc.pc(), 0x6263);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02AA
        gbc.setState(0xbf6e, 0xe1f8, 0xba80, 0x4db2, 0x834a, 0xf0e0, 0x0, 0x1);
        gbc.writeMem(0xbf6e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe1f8);
        EXPECT(gbc.pc(), 0xbf70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf6e), 0xcb);
        EXPECT(gbc.readMem(0xbf6f), 0x42);
        // CB 42 02AC
        gbc.setState(0xc83c, 0x4fbc, 0xbdd0, 0xb181, 0x3882, 0xb47, 0x1, 0x0);
        gbc.writeMem(0xc83c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4fbc);
        EXPECT(gbc.pc(), 0xc83e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc83c), 0xcb);
        EXPECT(gbc.readMem(0xc83d), 0x42);
        // CB 42 02AD
        gbc.setState(0x66a0, 0x4e94, 0x9900, 0x3fa9, 0xdf37, 0xeb82, 0x0, 0x1);
        gbc.writeMem(0x66a0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4e94);
        EXPECT(gbc.pc(), 0x66a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02AE
        gbc.setState(0xd608, 0x3877, 0x2280, 0xec5c, 0x5772, 0xb149, 0x0, 0x0);
        gbc.writeMem(0xd608, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3877);
        EXPECT(gbc.pc(), 0xd60a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd608), 0xcb);
        EXPECT(gbc.readMem(0xd609), 0x42);
        // CB 42 02AF
        gbc.setState(0xbcf3, 0x9e6b, 0x71c0, 0xd7ad, 0x2d6f, 0xacd5, 0x0, 0x0);
        gbc.writeMem(0xbcf3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9e6b);
        EXPECT(gbc.pc(), 0xbcf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcf3), 0xcb);
        EXPECT(gbc.readMem(0xbcf4), 0x42);
        // CB 42 02B0
        gbc.setState(0x57f7, 0xad4e, 0x4260, 0x8237, 0x8366, 0x9394, 0x1, 0x1);
        gbc.writeMem(0x57f7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xad4e);
        EXPECT(gbc.pc(), 0x57f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02B1
        gbc.setState(0x5950, 0x8a6b, 0x9380, 0xec06, 0x49fc, 0xa53a, 0x1, 0x1);
        gbc.writeMem(0x5950, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8a6b);
        EXPECT(gbc.pc(), 0x5952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02B2
        gbc.setState(0x5450, 0x2c08, 0xd0e0, 0x9041, 0x4cab, 0x2044, 0x0, 0x0);
        gbc.writeMem(0x5450, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2c08);
        EXPECT(gbc.pc(), 0x5452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02B3
        gbc.setState(0x4c92, 0xfd8a, 0x9130, 0x4792, 0x1608, 0x3ec0, 0x0, 0x1);
        gbc.writeMem(0x4c92, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfd8a);
        EXPECT(gbc.pc(), 0x4c94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02B4
        gbc.setState(0xa965, 0xa4e4, 0x32d0, 0x4912, 0x72b4, 0xa92c, 0x1, 0x1);
        gbc.writeMem(0xa965, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa4e4);
        EXPECT(gbc.pc(), 0xa967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa965), 0xcb);
        EXPECT(gbc.readMem(0xa966), 0x42);
        // CB 42 02B5
        gbc.setState(0xe1f8, 0x2f90, 0x4ab0, 0x5358, 0x85b9, 0x8343, 0x0, 0x1);
        gbc.writeMem(0xe1f8, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2f90);
        EXPECT(gbc.pc(), 0xe1fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1f8), 0xcb);
        EXPECT(gbc.readMem(0xe1f9), 0x42);
        // CB 42 02B6
        gbc.setState(0x418, 0x1ee1, 0x91d0, 0xe5b4, 0xde8d, 0xacf3, 0x1, 0x1);
        gbc.writeMem(0x418, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1ee1);
        EXPECT(gbc.pc(), 0x41a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02B7
        gbc.setState(0xe916, 0xf611, 0x85b0, 0xb30b, 0x4e39, 0x74b6, 0x0, 0x1);
        gbc.writeMem(0xe916, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf611);
        EXPECT(gbc.pc(), 0xe918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe916), 0xcb);
        EXPECT(gbc.readMem(0xe917), 0x42);
        // CB 42 02B8
        gbc.setState(0x1440, 0xadf1, 0xb5a0, 0x2a9, 0x8dd2, 0xaed7, 0x0, 0x0);
        gbc.writeMem(0x1440, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xadf1);
        EXPECT(gbc.pc(), 0x1442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02B9
        gbc.setState(0x93ed, 0x1dc0, 0xad20, 0xc874, 0xe43d, 0x36e0, 0x0, 0x0);
        gbc.writeMem(0x93ed, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1dc0);
        EXPECT(gbc.pc(), 0x93ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93ed), 0xcb);
        EXPECT(gbc.readMem(0x93ee), 0x42);
        // CB 42 02BA
        gbc.setState(0x1c52, 0x9031, 0xc50, 0x448f, 0x4ebf, 0x1331, 0x0, 0x0);
        gbc.writeMem(0x1c52, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9031);
        EXPECT(gbc.pc(), 0x1c54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02BB
        gbc.setState(0x4a6f, 0xed80, 0xbe20, 0x7af2, 0x54b5, 0x231c, 0x1, 0x0);
        gbc.writeMem(0x4a6f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xed80);
        EXPECT(gbc.pc(), 0x4a71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02BC
        gbc.setState(0x70fb, 0x21fe, 0x780, 0xa658, 0x44a7, 0x4114, 0x1, 0x1);
        gbc.writeMem(0x70fb, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x21fe);
        EXPECT(gbc.pc(), 0x70fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02BD
        gbc.setState(0x2240, 0x3bb4, 0x46c0, 0x17e6, 0xa01, 0x644b, 0x0, 0x0);
        gbc.writeMem(0x2240, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3bb4);
        EXPECT(gbc.pc(), 0x2242);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02BE
        gbc.setState(0x3337, 0x6281, 0xc3d0, 0x4563, 0xef4b, 0x16b4, 0x1, 0x0);
        gbc.writeMem(0x3337, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6281);
        EXPECT(gbc.pc(), 0x3339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02BF
        gbc.setState(0xc45f, 0x7be8, 0xa70, 0xd431, 0x3f35, 0x4cac, 0x1, 0x1);
        gbc.writeMem(0xc45f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7be8);
        EXPECT(gbc.pc(), 0xc461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc45f), 0xcb);
        EXPECT(gbc.readMem(0xc460), 0x42);
        // CB 42 02C0
        gbc.setState(0x7830, 0xb9e3, 0xd1d0, 0xb80b, 0x25e6, 0x5f4, 0x1, 0x0);
        gbc.writeMem(0x7830, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb9e3);
        EXPECT(gbc.pc(), 0x7832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02C1
        gbc.setState(0x1759, 0x2646, 0x43d0, 0x59d2, 0x4de6, 0xc635, 0x0, 0x0);
        gbc.writeMem(0x1759, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2646);
        EXPECT(gbc.pc(), 0x175b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02C2
        gbc.setState(0x2e1a, 0x348b, 0xdc50, 0xe191, 0x1bda, 0x5653, 0x0, 0x1);
        gbc.writeMem(0x2e1a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x348b);
        EXPECT(gbc.pc(), 0x2e1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02C3
        gbc.setState(0xa6ac, 0xa179, 0x57b0, 0xc5d8, 0x9762, 0x23ec, 0x0, 0x0);
        gbc.writeMem(0xa6ac, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa179);
        EXPECT(gbc.pc(), 0xa6ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ac), 0xcb);
        EXPECT(gbc.readMem(0xa6ad), 0x42);
        // CB 42 02C4
        gbc.setState(0xe40c, 0x3485, 0x2220, 0xab0b, 0x1b81, 0x8421, 0x0, 0x1);
        gbc.writeMem(0xe40c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3485);
        EXPECT(gbc.pc(), 0xe40e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe40c), 0xcb);
        EXPECT(gbc.readMem(0xe40d), 0x42);
        // CB 42 02C5
        gbc.setState(0x3f79, 0x36bc, 0x3d00, 0xcdf4, 0xbd08, 0x2641, 0x1, 0x0);
        gbc.writeMem(0x3f79, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x36bc);
        EXPECT(gbc.pc(), 0x3f7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02C6
        gbc.setState(0xc38, 0x703c, 0x6260, 0x340a, 0x8688, 0x5796, 0x1, 0x1);
        gbc.writeMem(0xc38, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x703c);
        EXPECT(gbc.pc(), 0xc3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02C7
        gbc.setState(0x2297, 0x2d0d, 0xb630, 0xc100, 0x4e93, 0xddcf, 0x1, 0x0);
        gbc.writeMem(0x2297, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2d0d);
        EXPECT(gbc.pc(), 0x2299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02C8
        gbc.setState(0x1ccb, 0x167a, 0xef80, 0xb35a, 0xe164, 0x8c00, 0x0, 0x1);
        gbc.writeMem(0x1ccb, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x167a);
        EXPECT(gbc.pc(), 0x1ccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02C9
        gbc.setState(0x41b2, 0x7922, 0x5960, 0x3548, 0xcdb5, 0x97b6, 0x1, 0x0);
        gbc.writeMem(0x41b2, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7922);
        EXPECT(gbc.pc(), 0x41b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02CA
        gbc.setState(0xc00b, 0x28eb, 0x7b60, 0x5c65, 0x160, 0xc83f, 0x0, 0x0);
        gbc.writeMem(0xc00b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x28eb);
        EXPECT(gbc.pc(), 0xc00d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc00b), 0xcb);
        EXPECT(gbc.readMem(0xc00c), 0x42);
        // CB 42 02CB
        gbc.setState(0x15e6, 0xba63, 0xdcd0, 0xe9e9, 0x5a06, 0x7381, 0x1, 0x1);
        gbc.writeMem(0x15e6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xba63);
        EXPECT(gbc.pc(), 0x15e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02CC
        gbc.setState(0x6ef2, 0x9ebb, 0xad70, 0xab92, 0x330e, 0x7005, 0x1, 0x1);
        gbc.writeMem(0x6ef2, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9ebb);
        EXPECT(gbc.pc(), 0x6ef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02CD
        gbc.setState(0x626b, 0x34d5, 0xb610, 0x2116, 0xd78a, 0xda87, 0x1, 0x1);
        gbc.writeMem(0x626b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x34d5);
        EXPECT(gbc.pc(), 0x626d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02CE
        gbc.setState(0xc41b, 0x5557, 0x2f20, 0xb8b5, 0xb402, 0x2766, 0x0, 0x0);
        gbc.writeMem(0xc41b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5557);
        EXPECT(gbc.pc(), 0xc41d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc41b), 0xcb);
        EXPECT(gbc.readMem(0xc41c), 0x42);
        // CB 42 02CF
        gbc.setState(0x55e9, 0xb117, 0xf430, 0x617d, 0xdd5b, 0x9dd2, 0x1, 0x1);
        gbc.writeMem(0x55e9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb117);
        EXPECT(gbc.pc(), 0x55eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02D0
        gbc.setState(0x99b9, 0x18d0, 0xbf00, 0x41c0, 0x15a, 0xfd96, 0x1, 0x1);
        gbc.writeMem(0x99b9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x18d0);
        EXPECT(gbc.pc(), 0x99bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99b9), 0xcb);
        EXPECT(gbc.readMem(0x99ba), 0x42);
        // CB 42 02D1
        gbc.setState(0x4c02, 0x5c88, 0x5030, 0xcc61, 0xc0d6, 0x24a9, 0x1, 0x0);
        gbc.writeMem(0x4c02, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5c88);
        EXPECT(gbc.pc(), 0x4c04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02D2
        gbc.setState(0xd982, 0x6abc, 0x37c0, 0x255a, 0xe80f, 0x7315, 0x0, 0x1);
        gbc.writeMem(0xd982, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6abc);
        EXPECT(gbc.pc(), 0xd984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd982), 0xcb);
        EXPECT(gbc.readMem(0xd983), 0x42);
        // CB 42 02D3
        gbc.setState(0xcc20, 0xc4cd, 0x4690, 0x1e65, 0xf689, 0x6e08, 0x0, 0x0);
        gbc.writeMem(0xcc20, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc4cd);
        EXPECT(gbc.pc(), 0xcc22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc20), 0xcb);
        EXPECT(gbc.readMem(0xcc21), 0x42);
        // CB 42 02D4
        gbc.setState(0x62e2, 0xd33, 0xd790, 0x314c, 0xa1b4, 0x78b7, 0x1, 0x0);
        gbc.writeMem(0x62e2, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd33);
        EXPECT(gbc.pc(), 0x62e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02D5
        gbc.setState(0xd3f, 0x8929, 0x5ca0, 0x6ba3, 0x7a4e, 0x5315, 0x1, 0x0);
        gbc.writeMem(0xd3f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8929);
        EXPECT(gbc.pc(), 0xd41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02D6
        gbc.setState(0x7187, 0x6869, 0x4a80, 0xf6f9, 0x3181, 0x83b7, 0x1, 0x1);
        gbc.writeMem(0x7187, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6869);
        EXPECT(gbc.pc(), 0x7189);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02D7
        gbc.setState(0x4b49, 0x8bb0, 0x74a0, 0xfc0b, 0x836, 0x21a4, 0x1, 0x1);
        gbc.writeMem(0x4b49, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8bb0);
        EXPECT(gbc.pc(), 0x4b4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02D8
        gbc.setState(0x7865, 0x7685, 0xb290, 0xeb77, 0x720c, 0x4d89, 0x0, 0x1);
        gbc.writeMem(0x7865, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7685);
        EXPECT(gbc.pc(), 0x7867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02D9
        gbc.setState(0x4116, 0xb46c, 0xe610, 0xae5c, 0x9f3f, 0x9204, 0x1, 0x1);
        gbc.writeMem(0x4116, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb46c);
        EXPECT(gbc.pc(), 0x4118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02DA
        gbc.setState(0xcbcc, 0x948e, 0xc870, 0xe79, 0x14ca, 0x64b1, 0x1, 0x1);
        gbc.writeMem(0xcbcc, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x948e);
        EXPECT(gbc.pc(), 0xcbce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbcc), 0xcb);
        EXPECT(gbc.readMem(0xcbcd), 0x42);
        // CB 42 02DB
        gbc.setState(0xc911, 0x3bf2, 0xce10, 0x5104, 0x6bf2, 0x2d99, 0x0, 0x1);
        gbc.writeMem(0xc911, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3bf2);
        EXPECT(gbc.pc(), 0xc913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc911), 0xcb);
        EXPECT(gbc.readMem(0xc912), 0x42);
        // CB 42 02DC
        gbc.setState(0xe9e2, 0xb130, 0x9080, 0x8ab, 0xecfe, 0xc914, 0x1, 0x0);
        gbc.writeMem(0xe9e2, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb130);
        EXPECT(gbc.pc(), 0xe9e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9e2), 0xcb);
        EXPECT(gbc.readMem(0xe9e3), 0x42);
        // CB 42 02DD
        gbc.setState(0xa534, 0x321b, 0x7e70, 0xd8e6, 0xbea1, 0xe85b, 0x1, 0x0);
        gbc.writeMem(0xa534, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x321b);
        EXPECT(gbc.pc(), 0xa536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa534), 0xcb);
        EXPECT(gbc.readMem(0xa535), 0x42);
        // CB 42 02DE
        gbc.setState(0x36ac, 0x4549, 0x2e20, 0xbbcd, 0xf421, 0xafa3, 0x1, 0x1);
        gbc.writeMem(0x36ac, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4549);
        EXPECT(gbc.pc(), 0x36ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02DF
        gbc.setState(0xdcdb, 0xa2b6, 0xc390, 0xb5db, 0xdddf, 0xfdd8, 0x0, 0x1);
        gbc.writeMem(0xdcdb, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa2b6);
        EXPECT(gbc.pc(), 0xdcdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcdb), 0xcb);
        EXPECT(gbc.readMem(0xdcdc), 0x42);
        // CB 42 02E0
        gbc.setState(0xaad0, 0x89de, 0x8710, 0x4afb, 0x6e81, 0xeab4, 0x0, 0x1);
        gbc.writeMem(0xaad0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x89de);
        EXPECT(gbc.pc(), 0xaad2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaad0), 0xcb);
        EXPECT(gbc.readMem(0xaad1), 0x42);
        // CB 42 02E1
        gbc.setState(0x2a26, 0x2bb7, 0x9440, 0x5de4, 0xa784, 0x8777, 0x1, 0x1);
        gbc.writeMem(0x2a26, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2bb7);
        EXPECT(gbc.pc(), 0x2a28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02E2
        gbc.setState(0x26d5, 0x9516, 0x6f10, 0x512f, 0xbc68, 0xcc30, 0x1, 0x0);
        gbc.writeMem(0x26d5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9516);
        EXPECT(gbc.pc(), 0x26d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02E3
        gbc.setState(0x21d0, 0xef26, 0x15e0, 0xf6c9, 0xf8af, 0x2cf1, 0x1, 0x0);
        gbc.writeMem(0x21d0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xef26);
        EXPECT(gbc.pc(), 0x21d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02E4
        gbc.setState(0x6af7, 0x7890, 0x8650, 0x6cd, 0x71d3, 0x44e1, 0x1, 0x0);
        gbc.writeMem(0x6af7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7890);
        EXPECT(gbc.pc(), 0x6af9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02E5
        gbc.setState(0xe8c2, 0xdca0, 0x2c50, 0xa5eb, 0xa47d, 0x55ac, 0x0, 0x0);
        gbc.writeMem(0xe8c2, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xdca0);
        EXPECT(gbc.pc(), 0xe8c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8c2), 0xcb);
        EXPECT(gbc.readMem(0xe8c3), 0x42);
        // CB 42 02E6
        gbc.setState(0x7bdb, 0x9be0, 0x1460, 0x28bd, 0x9bfe, 0xb45a, 0x1, 0x1);
        gbc.writeMem(0x7bdb, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9be0);
        EXPECT(gbc.pc(), 0x7bdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02E8
        gbc.setState(0xee3e, 0xbd2a, 0xbe70, 0x5bd2, 0x6410, 0x8593, 0x0, 0x1);
        gbc.writeMem(0xee3e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbd2a);
        EXPECT(gbc.pc(), 0xee40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee3e), 0xcb);
        EXPECT(gbc.readMem(0xee3f), 0x42);
        // CB 42 02E9
        gbc.setState(0xee15, 0x10ae, 0xc920, 0xdfd7, 0x2880, 0x1e38, 0x1, 0x1);
        gbc.writeMem(0xee15, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x10ae);
        EXPECT(gbc.pc(), 0xee17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee15), 0xcb);
        EXPECT(gbc.readMem(0xee16), 0x42);
        // CB 42 02EA
        gbc.setState(0x9ca4, 0x445c, 0xeef0, 0xb25d, 0xae0d, 0xd901, 0x1, 0x1);
        gbc.writeMem(0x9ca4, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x445c);
        EXPECT(gbc.pc(), 0x9ca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca4), 0xcb);
        EXPECT(gbc.readMem(0x9ca5), 0x42);
        // CB 42 02EB
        gbc.setState(0xdfce, 0x8b3e, 0x9a60, 0x7db4, 0xdd78, 0xf843, 0x0, 0x0);
        gbc.writeMem(0xdfce, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8b3e);
        EXPECT(gbc.pc(), 0xdfd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfce), 0xcb);
        EXPECT(gbc.readMem(0xdfcf), 0x42);
        // CB 42 02EC
        gbc.setState(0x6c3a, 0x77d1, 0x6090, 0xf0c, 0x8773, 0xd726, 0x0, 0x0);
        gbc.writeMem(0x6c3a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x77d1);
        EXPECT(gbc.pc(), 0x6c3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02EE
        gbc.setState(0xe790, 0xd183, 0xed30, 0xd975, 0xee70, 0x5b9e, 0x1, 0x0);
        gbc.writeMem(0xe790, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd183);
        EXPECT(gbc.pc(), 0xe792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe790), 0xcb);
        EXPECT(gbc.readMem(0xe791), 0x42);
        // CB 42 02EF
        gbc.setState(0x7072, 0x2abd, 0xbd90, 0xb143, 0xb59c, 0xdb89, 0x0, 0x0);
        gbc.writeMem(0x7072, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2abd);
        EXPECT(gbc.pc(), 0x7074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02F0
        gbc.setState(0xe8d0, 0xf22f, 0x8d80, 0xcd05, 0x75da, 0x957d, 0x1, 0x0);
        gbc.writeMem(0xe8d0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf22f);
        EXPECT(gbc.pc(), 0xe8d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8d0), 0xcb);
        EXPECT(gbc.readMem(0xe8d1), 0x42);
        // CB 42 02F1
        gbc.setState(0x71e0, 0xd51d, 0xdc50, 0xfa89, 0x63fc, 0xed4d, 0x1, 0x1);
        gbc.writeMem(0x71e0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd51d);
        EXPECT(gbc.pc(), 0x71e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02F2
        gbc.setState(0xe0a1, 0xa97f, 0x4b0, 0xa7f9, 0xc37c, 0x844c, 0x1, 0x1);
        gbc.writeMem(0xe0a1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa97f);
        EXPECT(gbc.pc(), 0xe0a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0a1), 0xcb);
        EXPECT(gbc.readMem(0xe0a2), 0x42);
        // CB 42 02F3
        gbc.setState(0x5458, 0x5ed0, 0xda0, 0x2cb, 0x48b2, 0x4eef, 0x0, 0x1);
        gbc.writeMem(0x5458, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5ed0);
        EXPECT(gbc.pc(), 0x545a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02F4
        gbc.setState(0xce05, 0x65a3, 0x2a70, 0xb771, 0x9b5b, 0x302f, 0x1, 0x0);
        gbc.writeMem(0xce05, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x65a3);
        EXPECT(gbc.pc(), 0xce07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce05), 0xcb);
        EXPECT(gbc.readMem(0xce06), 0x42);
        // CB 42 02F5
        gbc.setState(0xd52a, 0xac05, 0x6670, 0x5389, 0x270c, 0x1d7a, 0x1, 0x1);
        gbc.writeMem(0xd52a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xac05);
        EXPECT(gbc.pc(), 0xd52c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd52a), 0xcb);
        EXPECT(gbc.readMem(0xd52b), 0x42);
        // CB 42 02F6
        gbc.setState(0x3640, 0xaa75, 0x1a50, 0x47, 0xb3ed, 0x9034, 0x1, 0x0);
        gbc.writeMem(0x3640, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xaa75);
        EXPECT(gbc.pc(), 0x3642);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02F7
        gbc.setState(0xce72, 0x7364, 0x6380, 0x6008, 0xaf8d, 0x11c0, 0x0, 0x0);
        gbc.writeMem(0xce72, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x7364);
        EXPECT(gbc.pc(), 0xce74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce72), 0xcb);
        EXPECT(gbc.readMem(0xce73), 0x42);
        // CB 42 02F8
        gbc.setState(0x138b, 0x41e0, 0x7b90, 0x1651, 0x919e, 0xc9d6, 0x0, 0x0);
        gbc.writeMem(0x138b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x41e0);
        EXPECT(gbc.pc(), 0x138d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02F9
        gbc.setState(0x1bdb, 0xfb87, 0x39e0, 0xe20, 0x9442, 0xb677, 0x1, 0x0);
        gbc.writeMem(0x1bdb, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xfb87);
        EXPECT(gbc.pc(), 0x1bdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 02FA
        gbc.setState(0xcddc, 0x8df4, 0x1d30, 0xc556, 0xf3a3, 0xe936, 0x1, 0x1);
        gbc.writeMem(0xcddc, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8df4);
        EXPECT(gbc.pc(), 0xcdde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcddc), 0xcb);
        EXPECT(gbc.readMem(0xcddd), 0x42);
        // CB 42 02FB
        gbc.setState(0x9aef, 0x4af0, 0x8020, 0x269b, 0xba60, 0xef60, 0x1, 0x0);
        gbc.writeMem(0x9aef, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4af0);
        EXPECT(gbc.pc(), 0x9af1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aef), 0xcb);
        EXPECT(gbc.readMem(0x9af0), 0x42);
        // CB 42 02FC
        gbc.setState(0xe001, 0xe71f, 0x36c0, 0xe31c, 0x8761, 0x193b, 0x1, 0x0);
        gbc.writeMem(0xe001, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe71f);
        EXPECT(gbc.pc(), 0xe003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe001), 0xcb);
        EXPECT(gbc.readMem(0xe002), 0x42);
        // CB 42 02FE
        gbc.setState(0x7942, 0xc8e, 0x6ab0, 0xe05, 0x8b7d, 0xb18c, 0x1, 0x1);
        gbc.writeMem(0x7942, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc8e);
        EXPECT(gbc.pc(), 0x7944);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 02FF
        gbc.setState(0x6018, 0xa63f, 0x6c40, 0x5eee, 0xe7da, 0x67f4, 0x0, 0x0);
        gbc.writeMem(0x6018, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa63f);
        EXPECT(gbc.pc(), 0x601a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0300
        gbc.setState(0xb25d, 0x375, 0xbcc0, 0xb805, 0xa7ef, 0xbe47, 0x0, 0x1);
        gbc.writeMem(0xb25d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x375);
        EXPECT(gbc.pc(), 0xb25f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb25d), 0xcb);
        EXPECT(gbc.readMem(0xb25e), 0x42);
        // CB 42 0301
        gbc.setState(0x132, 0x34d5, 0xfac0, 0x42e, 0x4e46, 0x127, 0x0, 0x0);
        gbc.writeMem(0x132, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x34d5);
        EXPECT(gbc.pc(), 0x134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0302
        gbc.setState(0x3c8c, 0x42de, 0x8a80, 0x24e9, 0x5229, 0xe6e0, 0x0, 0x0);
        gbc.writeMem(0x3c8c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x42de);
        EXPECT(gbc.pc(), 0x3c8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0303
        gbc.setState(0xa21a, 0x2cbb, 0x86a0, 0x7ff7, 0xa748, 0xd90b, 0x0, 0x0);
        gbc.writeMem(0xa21a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2cbb);
        EXPECT(gbc.pc(), 0xa21c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa21a), 0xcb);
        EXPECT(gbc.readMem(0xa21b), 0x42);
        // CB 42 0304
        gbc.setState(0x6e0b, 0xcb39, 0x6110, 0x7f2d, 0xca87, 0xc81c, 0x1, 0x1);
        gbc.writeMem(0x6e0b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xcb39);
        EXPECT(gbc.pc(), 0x6e0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0305
        gbc.setState(0xd8ef, 0x23c5, 0x3520, 0x6ffd, 0xc058, 0x9c8f, 0x1, 0x1);
        gbc.writeMem(0xd8ef, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x23c5);
        EXPECT(gbc.pc(), 0xd8f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ef), 0xcb);
        EXPECT(gbc.readMem(0xd8f0), 0x42);
        // CB 42 0306
        gbc.setState(0xc59e, 0x9833, 0x12d0, 0xe43, 0x9be3, 0x90a7, 0x0, 0x0);
        gbc.writeMem(0xc59e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9833);
        EXPECT(gbc.pc(), 0xc5a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc59e), 0xcb);
        EXPECT(gbc.readMem(0xc59f), 0x42);
        // CB 42 0307
        gbc.setState(0x7b60, 0x282, 0xdb50, 0xa28f, 0x546c, 0x783e, 0x1, 0x1);
        gbc.writeMem(0x7b60, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x282);
        EXPECT(gbc.pc(), 0x7b62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0308
        gbc.setState(0xc0, 0xa5e0, 0xed30, 0xe002, 0x25c5, 0xe43a, 0x1, 0x0);
        gbc.writeMem(0xc0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa5e0);
        EXPECT(gbc.pc(), 0xc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0309
        gbc.setState(0xe737, 0x2c21, 0x1200, 0x3399, 0x965, 0x21bd, 0x1, 0x0);
        gbc.writeMem(0xe737, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x2c21);
        EXPECT(gbc.pc(), 0xe739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe737), 0xcb);
        EXPECT(gbc.readMem(0xe738), 0x42);
        // CB 42 030A
        gbc.setState(0x1047, 0xd04c, 0x2d00, 0xbffe, 0x2928, 0xf83e, 0x1, 0x0);
        gbc.writeMem(0x1047, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd04c);
        EXPECT(gbc.pc(), 0x1049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 030C
        gbc.setState(0xbe07, 0x372, 0x4670, 0x6670, 0x5c3e, 0x5f54, 0x1, 0x0);
        gbc.writeMem(0xbe07, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x372);
        EXPECT(gbc.pc(), 0xbe09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe07), 0xcb);
        EXPECT(gbc.readMem(0xbe08), 0x42);
        // CB 42 030D
        gbc.setState(0x329d, 0x8963, 0x8f60, 0x27fe, 0x9346, 0xe3cf, 0x1, 0x0);
        gbc.writeMem(0x329d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8963);
        EXPECT(gbc.pc(), 0x329f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 030E
        gbc.setState(0x5092, 0x9a75, 0xb520, 0x524c, 0xcb3d, 0x71d2, 0x0, 0x0);
        gbc.writeMem(0x5092, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9a75);
        EXPECT(gbc.pc(), 0x5094);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 030F
        gbc.setState(0x448a, 0x6dfd, 0x3310, 0x72b1, 0x24b7, 0xc21e, 0x0, 0x1);
        gbc.writeMem(0x448a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6dfd);
        EXPECT(gbc.pc(), 0x448c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0310
        gbc.setState(0x3df9, 0x9363, 0x61c0, 0x8345, 0x1122, 0x3f6f, 0x0, 0x1);
        gbc.writeMem(0x3df9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9363);
        EXPECT(gbc.pc(), 0x3dfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0311
        gbc.setState(0x3104, 0xb5e9, 0x7a10, 0xc0d, 0x73ad, 0x1a2, 0x1, 0x1);
        gbc.writeMem(0x3104, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb5e9);
        EXPECT(gbc.pc(), 0x3106);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0312
        gbc.setState(0x39b9, 0xf1e7, 0xdc80, 0xe975, 0xc460, 0x8c8e, 0x0, 0x1);
        gbc.writeMem(0x39b9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf1e7);
        EXPECT(gbc.pc(), 0x39bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0313
        gbc.setState(0x3714, 0xbacd, 0x13b0, 0x393e, 0x4026, 0x3dec, 0x0, 0x1);
        gbc.writeMem(0x3714, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xbacd);
        EXPECT(gbc.pc(), 0x3716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0314
        gbc.setState(0xb12c, 0x5f21, 0xf4c0, 0xfd3d, 0x3cbb, 0xcd32, 0x0, 0x1);
        gbc.writeMem(0xb12c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5f21);
        EXPECT(gbc.pc(), 0xb12e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb12c), 0xcb);
        EXPECT(gbc.readMem(0xb12d), 0x42);
        // CB 42 0315
        gbc.setState(0x4a33, 0x4c91, 0xbab0, 0xed71, 0x1f3f, 0x3c55, 0x1, 0x0);
        gbc.writeMem(0x4a33, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4c91);
        EXPECT(gbc.pc(), 0x4a35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0316
        gbc.setState(0x8e98, 0x7bc5, 0xf50, 0x1610, 0x3c55, 0xab4c, 0x1, 0x1);
        gbc.writeMem(0x8e98, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7bc5);
        EXPECT(gbc.pc(), 0x8e9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e98), 0xcb);
        EXPECT(gbc.readMem(0x8e99), 0x42);
        // CB 42 0317
        gbc.setState(0x877e, 0x689a, 0x42d0, 0xecfc, 0x9b80, 0x391f, 0x1, 0x0);
        gbc.writeMem(0x877e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x689a);
        EXPECT(gbc.pc(), 0x8780);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x877e), 0xcb);
        EXPECT(gbc.readMem(0x877f), 0x42);
        // CB 42 0318
        gbc.setState(0xaf90, 0xf542, 0x9830, 0x3321, 0x5335, 0x689e, 0x0, 0x0);
        gbc.writeMem(0xaf90, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf542);
        EXPECT(gbc.pc(), 0xaf92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf90), 0xcb);
        EXPECT(gbc.readMem(0xaf91), 0x42);
        // CB 42 0319
        gbc.setState(0x9ce1, 0x53d7, 0x8690, 0x4236, 0x41fb, 0x8604, 0x1, 0x0);
        gbc.writeMem(0x9ce1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x53d7);
        EXPECT(gbc.pc(), 0x9ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce1), 0xcb);
        EXPECT(gbc.readMem(0x9ce2), 0x42);
        // CB 42 031A
        gbc.setState(0x687a, 0xea08, 0xbe30, 0xe5c1, 0x5bf6, 0x543c, 0x1, 0x1);
        gbc.writeMem(0x687a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xea08);
        EXPECT(gbc.pc(), 0x687c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 031B
        gbc.setState(0xa387, 0x451, 0x20a0, 0x4a54, 0x7e33, 0xa4b6, 0x0, 0x1);
        gbc.writeMem(0xa387, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x451);
        EXPECT(gbc.pc(), 0xa389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa387), 0xcb);
        EXPECT(gbc.readMem(0xa388), 0x42);
        // CB 42 031C
        gbc.setState(0x8ecb, 0x2ad7, 0x1a00, 0xe25f, 0xea10, 0x80a9, 0x1, 0x1);
        gbc.writeMem(0x8ecb, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2ad7);
        EXPECT(gbc.pc(), 0x8ecd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ecb), 0xcb);
        EXPECT(gbc.readMem(0x8ecc), 0x42);
        // CB 42 031D
        gbc.setState(0x927, 0xf890, 0xc570, 0xee37, 0x775d, 0x2814, 0x0, 0x1);
        gbc.writeMem(0x927, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf890);
        EXPECT(gbc.pc(), 0x929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 031E
        gbc.setState(0x6e1, 0x861e, 0xb500, 0x1df8, 0xe734, 0x5700, 0x0, 0x1);
        gbc.writeMem(0x6e1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x861e);
        EXPECT(gbc.pc(), 0x6e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 031F
        gbc.setState(0xef37, 0x8ab6, 0x4b90, 0x1415, 0xd710, 0xee3c, 0x1, 0x0);
        gbc.writeMem(0xef37, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8ab6);
        EXPECT(gbc.pc(), 0xef39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef37), 0xcb);
        EXPECT(gbc.readMem(0xef38), 0x42);
        // CB 42 0320
        gbc.setState(0x1d19, 0xb003, 0x3b90, 0x9e89, 0x8689, 0x4a40, 0x0, 0x1);
        gbc.writeMem(0x1d19, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb003);
        EXPECT(gbc.pc(), 0x1d1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0321
        gbc.setState(0x5996, 0x10b8, 0x28e0, 0xdf09, 0x37b4, 0x77e6, 0x0, 0x0);
        gbc.writeMem(0x5996, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x10b8);
        EXPECT(gbc.pc(), 0x5998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0322
        gbc.setState(0x6c1b, 0x730c, 0xd070, 0xa0f3, 0xb7dd, 0x2ec7, 0x0, 0x1);
        gbc.writeMem(0x6c1b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x730c);
        EXPECT(gbc.pc(), 0x6c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0323
        gbc.setState(0xdf9e, 0xf591, 0xf920, 0x1cd4, 0x9465, 0xb189, 0x1, 0x1);
        gbc.writeMem(0xdf9e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf591);
        EXPECT(gbc.pc(), 0xdfa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf9e), 0xcb);
        EXPECT(gbc.readMem(0xdf9f), 0x42);
        // CB 42 0324
        gbc.setState(0xb308, 0x842a, 0xed40, 0xe050, 0x9df1, 0x3c21, 0x0, 0x1);
        gbc.writeMem(0xb308, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x842a);
        EXPECT(gbc.pc(), 0xb30a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb308), 0xcb);
        EXPECT(gbc.readMem(0xb309), 0x42);
        // CB 42 0325
        gbc.setState(0xd452, 0xf1d1, 0xa10, 0x4a1c, 0x82d, 0x1231, 0x1, 0x0);
        gbc.writeMem(0xd452, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf1d1);
        EXPECT(gbc.pc(), 0xd454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd452), 0xcb);
        EXPECT(gbc.readMem(0xd453), 0x42);
        // CB 42 0326
        gbc.setState(0x6dc, 0xe5bb, 0x9d40, 0x79bc, 0x1cc9, 0x24c0, 0x1, 0x1);
        gbc.writeMem(0x6dc, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe5bb);
        EXPECT(gbc.pc(), 0x6de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0327
        gbc.setState(0xc20d, 0x48d7, 0x670, 0xe88, 0xf0af, 0xd2f6, 0x0, 0x0);
        gbc.writeMem(0xc20d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x48d7);
        EXPECT(gbc.pc(), 0xc20f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc20d), 0xcb);
        EXPECT(gbc.readMem(0xc20e), 0x42);
        // CB 42 0328
        gbc.setState(0xd24c, 0x9bdd, 0x7280, 0xede0, 0x6aae, 0x39f8, 0x1, 0x0);
        gbc.writeMem(0xd24c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9bdd);
        EXPECT(gbc.pc(), 0xd24e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd24c), 0xcb);
        EXPECT(gbc.readMem(0xd24d), 0x42);
        // CB 42 0329
        gbc.setState(0x317f, 0x5530, 0x2190, 0x76b5, 0x283f, 0x9b1d, 0x0, 0x1);
        gbc.writeMem(0x317f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5530);
        EXPECT(gbc.pc(), 0x3181);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 032A
        gbc.setState(0xe4f9, 0x7c65, 0xa110, 0xdf31, 0xd052, 0x1237, 0x1, 0x0);
        gbc.writeMem(0xe4f9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7c65);
        EXPECT(gbc.pc(), 0xe4fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4f9), 0xcb);
        EXPECT(gbc.readMem(0xe4fa), 0x42);
        // CB 42 032B
        gbc.setState(0x4b12, 0xb2c6, 0xf090, 0x6be1, 0x6ce2, 0x1b63, 0x0, 0x0);
        gbc.writeMem(0x4b12, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb2c6);
        EXPECT(gbc.pc(), 0x4b14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 032C
        gbc.setState(0x40e6, 0x324d, 0x3390, 0xed4, 0xaa53, 0x4f26, 0x1, 0x0);
        gbc.writeMem(0x40e6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x324d);
        EXPECT(gbc.pc(), 0x40e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 032D
        gbc.setState(0x4123, 0xbe67, 0xadd0, 0x3496, 0x43d2, 0xfd06, 0x1, 0x1);
        gbc.writeMem(0x4123, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xbe67);
        EXPECT(gbc.pc(), 0x4125);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 032E
        gbc.setState(0xaa94, 0x1c44, 0x3770, 0x77b6, 0xf4ec, 0x8a4e, 0x1, 0x1);
        gbc.writeMem(0xaa94, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1c44);
        EXPECT(gbc.pc(), 0xaa96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa94), 0xcb);
        EXPECT(gbc.readMem(0xaa95), 0x42);
        // CB 42 032F
        gbc.setState(0xcbc9, 0x1f17, 0xbfe0, 0x4786, 0x4e92, 0x86e6, 0x0, 0x1);
        gbc.writeMem(0xcbc9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1f17);
        EXPECT(gbc.pc(), 0xcbcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbc9), 0xcb);
        EXPECT(gbc.readMem(0xcbca), 0x42);
        // CB 42 0330
        gbc.setState(0xdcc7, 0xdb3, 0xc660, 0x56b2, 0xd0c5, 0x2c42, 0x0, 0x0);
        gbc.writeMem(0xdcc7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xdb3);
        EXPECT(gbc.pc(), 0xdcc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcc7), 0xcb);
        EXPECT(gbc.readMem(0xdcc8), 0x42);
        // CB 42 0331
        gbc.setState(0xb3a0, 0x790c, 0xe920, 0x8b9f, 0xe77, 0xece4, 0x0, 0x1);
        gbc.writeMem(0xb3a0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x790c);
        EXPECT(gbc.pc(), 0xb3a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a0), 0xcb);
        EXPECT(gbc.readMem(0xb3a1), 0x42);
        // CB 42 0333
        gbc.setState(0x792e, 0x1abe, 0xca40, 0x45ff, 0xeb29, 0xcdf, 0x1, 0x1);
        gbc.writeMem(0x792e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1abe);
        EXPECT(gbc.pc(), 0x7930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0334
        gbc.setState(0xd9fc, 0xa619, 0xca0, 0x1faf, 0xf7, 0x1091, 0x0, 0x0);
        gbc.writeMem(0xd9fc, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa619);
        EXPECT(gbc.pc(), 0xd9fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9fc), 0xcb);
        EXPECT(gbc.readMem(0xd9fd), 0x42);
        // CB 42 0335
        gbc.setState(0x6c8d, 0x90d7, 0x1450, 0x19dc, 0x4a9c, 0x33bd, 0x1, 0x0);
        gbc.writeMem(0x6c8d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x90d7);
        EXPECT(gbc.pc(), 0x6c8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0336
        gbc.setState(0xac51, 0xf1b4, 0xd6a0, 0x8f17, 0xb0e2, 0xfb37, 0x0, 0x1);
        gbc.writeMem(0xac51, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf1b4);
        EXPECT(gbc.pc(), 0xac53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac51), 0xcb);
        EXPECT(gbc.readMem(0xac52), 0x42);
        // CB 42 0337
        gbc.setState(0xb445, 0xc55a, 0x9f40, 0xcee3, 0xdfd7, 0x389f, 0x1, 0x0);
        gbc.writeMem(0xb445, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc55a);
        EXPECT(gbc.pc(), 0xb447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb445), 0xcb);
        EXPECT(gbc.readMem(0xb446), 0x42);
        // CB 42 0338
        gbc.setState(0x1e88, 0xe1ed, 0xd2b0, 0x8e5b, 0x1ec5, 0x1ba2, 0x1, 0x1);
        gbc.writeMem(0x1e88, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe1ed);
        EXPECT(gbc.pc(), 0x1e8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0339
        gbc.setState(0x8b6c, 0x2411, 0x690, 0xe26a, 0x19b1, 0x3ca3, 0x1, 0x1);
        gbc.writeMem(0x8b6c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2411);
        EXPECT(gbc.pc(), 0x8b6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b6c), 0xcb);
        EXPECT(gbc.readMem(0x8b6d), 0x42);
        // CB 42 033A
        gbc.setState(0x5a51, 0x985c, 0x1d10, 0xc065, 0x3a57, 0x710b, 0x0, 0x1);
        gbc.writeMem(0x5a51, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x985c);
        EXPECT(gbc.pc(), 0x5a53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 033B
        gbc.setState(0xcadb, 0x3ca8, 0x2f30, 0x6660, 0xc306, 0xe3da, 0x0, 0x1);
        gbc.writeMem(0xcadb, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x3ca8);
        EXPECT(gbc.pc(), 0xcadd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcadb), 0xcb);
        EXPECT(gbc.readMem(0xcadc), 0x42);
        // CB 42 033C
        gbc.setState(0xc105, 0xa4f1, 0x1700, 0x29ca, 0xf8bd, 0xf73a, 0x0, 0x1);
        gbc.writeMem(0xc105, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa4f1);
        EXPECT(gbc.pc(), 0xc107);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc105), 0xcb);
        EXPECT(gbc.readMem(0xc106), 0x42);
        // CB 42 033D
        gbc.setState(0x4352, 0xbb25, 0x1a20, 0x6915, 0xbe48, 0x86fd, 0x1, 0x0);
        gbc.writeMem(0x4352, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbb25);
        EXPECT(gbc.pc(), 0x4354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 033E
        gbc.setState(0xf88, 0x6343, 0x7d70, 0x190d, 0x2cef, 0xe31c, 0x0, 0x1);
        gbc.writeMem(0xf88, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6343);
        EXPECT(gbc.pc(), 0xf8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 033F
        gbc.setState(0x88ed, 0xa2cf, 0x7630, 0x461a, 0x94eb, 0xfeab, 0x0, 0x1);
        gbc.writeMem(0x88ed, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa2cf);
        EXPECT(gbc.pc(), 0x88ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88ed), 0xcb);
        EXPECT(gbc.readMem(0x88ee), 0x42);
        // CB 42 0340
        gbc.setState(0x1fc6, 0x6ba8, 0xf680, 0x43b1, 0xba07, 0xfe19, 0x0, 0x1);
        gbc.writeMem(0x1fc6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6ba8);
        EXPECT(gbc.pc(), 0x1fc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0341
        gbc.setState(0x1305, 0x9bbd, 0x5280, 0x7931, 0xc30, 0xc380, 0x1, 0x0);
        gbc.writeMem(0x1305, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9bbd);
        EXPECT(gbc.pc(), 0x1307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0342
        gbc.setState(0xd8c2, 0x465d, 0xa2b0, 0xe44d, 0xfea, 0x50aa, 0x0, 0x0);
        gbc.writeMem(0xd8c2, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x465d);
        EXPECT(gbc.pc(), 0xd8c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8c2), 0xcb);
        EXPECT(gbc.readMem(0xd8c3), 0x42);
        // CB 42 0343
        gbc.setState(0x8fed, 0xd035, 0xbd20, 0x8966, 0x6157, 0x4d0f, 0x0, 0x0);
        gbc.writeMem(0x8fed, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd035);
        EXPECT(gbc.pc(), 0x8fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fed), 0xcb);
        EXPECT(gbc.readMem(0x8fee), 0x42);
        // CB 42 0344
        gbc.setState(0x33af, 0x69a4, 0xc960, 0xc1f5, 0xd4ac, 0x4347, 0x1, 0x1);
        gbc.writeMem(0x33af, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x69a4);
        EXPECT(gbc.pc(), 0x33b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0345
        gbc.setState(0x7c13, 0xee9f, 0x3ff0, 0xb5cd, 0x5085, 0xd08d, 0x1, 0x0);
        gbc.writeMem(0x7c13, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xee9f);
        EXPECT(gbc.pc(), 0x7c15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0346
        gbc.setState(0x4b89, 0xf1ee, 0x7050, 0xb7df, 0x8556, 0x5480, 0x1, 0x1);
        gbc.writeMem(0x4b89, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf1ee);
        EXPECT(gbc.pc(), 0x4b8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0347
        gbc.setState(0x5e6e, 0x654a, 0xc280, 0x5e12, 0x76af, 0x3cc9, 0x1, 0x1);
        gbc.writeMem(0x5e6e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x654a);
        EXPECT(gbc.pc(), 0x5e70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0348
        gbc.setState(0xbf81, 0x3ba4, 0xe0f0, 0xaccf, 0xa57f, 0xe595, 0x0, 0x0);
        gbc.writeMem(0xbf81, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3ba4);
        EXPECT(gbc.pc(), 0xbf83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf81), 0xcb);
        EXPECT(gbc.readMem(0xbf82), 0x42);
        // CB 42 0349
        gbc.setState(0x1140, 0xca6a, 0x33b0, 0x217a, 0x9942, 0x6b94, 0x1, 0x0);
        gbc.writeMem(0x1140, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xca6a);
        EXPECT(gbc.pc(), 0x1142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 034A
        gbc.setState(0x1e67, 0x4dbb, 0x3240, 0x5940, 0xbd96, 0xe139, 0x0, 0x0);
        gbc.writeMem(0x1e67, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4dbb);
        EXPECT(gbc.pc(), 0x1e69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 034B
        gbc.setState(0x1b1e, 0xebc2, 0xb60, 0x915d, 0xd27d, 0x174e, 0x1, 0x1);
        gbc.writeMem(0x1b1e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xebc2);
        EXPECT(gbc.pc(), 0x1b20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 034C
        gbc.setState(0xaff9, 0x2337, 0xfd70, 0x81cd, 0x9e15, 0xfe99, 0x0, 0x1);
        gbc.writeMem(0xaff9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2337);
        EXPECT(gbc.pc(), 0xaffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaff9), 0xcb);
        EXPECT(gbc.readMem(0xaffa), 0x42);
        // CB 42 034D
        gbc.setState(0xc897, 0x884a, 0xafe0, 0xd87d, 0xf03c, 0xe75a, 0x0, 0x0);
        gbc.writeMem(0xc897, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x884a);
        EXPECT(gbc.pc(), 0xc899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc897), 0xcb);
        EXPECT(gbc.readMem(0xc898), 0x42);
        // CB 42 034E
        gbc.setState(0xad6a, 0x69f, 0xa050, 0x9ede, 0xad44, 0x5119, 0x0, 0x0);
        gbc.writeMem(0xad6a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x69f);
        EXPECT(gbc.pc(), 0xad6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad6a), 0xcb);
        EXPECT(gbc.readMem(0xad6b), 0x42);
        // CB 42 034F
        gbc.setState(0x9d21, 0xa80, 0xafe0, 0xd228, 0xe26, 0x3d9, 0x1, 0x0);
        gbc.writeMem(0x9d21, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa80);
        EXPECT(gbc.pc(), 0x9d23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d21), 0xcb);
        EXPECT(gbc.readMem(0x9d22), 0x42);
        // CB 42 0350
        gbc.setState(0x21a0, 0x9691, 0xb550, 0xee3a, 0x182b, 0x4e77, 0x1, 0x0);
        gbc.writeMem(0x21a0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9691);
        EXPECT(gbc.pc(), 0x21a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0351
        gbc.setState(0xc008, 0xc214, 0x2620, 0xf3bf, 0xfd51, 0x4248, 0x1, 0x1);
        gbc.writeMem(0xc008, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc214);
        EXPECT(gbc.pc(), 0xc00a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc008), 0xcb);
        EXPECT(gbc.readMem(0xc009), 0x42);
        // CB 42 0352
        gbc.setState(0x6caf, 0x89f5, 0xdb40, 0x1f80, 0x9685, 0x9595, 0x1, 0x1);
        gbc.writeMem(0x6caf, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x89f5);
        EXPECT(gbc.pc(), 0x6cb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0353
        gbc.setState(0xcb3d, 0xc4c7, 0xa240, 0x2197, 0xb174, 0x43b0, 0x0, 0x1);
        gbc.writeMem(0xcb3d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc4c7);
        EXPECT(gbc.pc(), 0xcb3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb3d), 0xcb);
        EXPECT(gbc.readMem(0xcb3e), 0x42);
        // CB 42 0354
        gbc.setState(0x5ded, 0xf944, 0x4d0, 0xecf3, 0xe3cf, 0xa63f, 0x1, 0x0);
        gbc.writeMem(0x5ded, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf944);
        EXPECT(gbc.pc(), 0x5def);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0355
        gbc.setState(0x9c3b, 0x3fcf, 0x23a0, 0x50b5, 0x8ac, 0xe521, 0x1, 0x0);
        gbc.writeMem(0x9c3b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3fcf);
        EXPECT(gbc.pc(), 0x9c3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c3b), 0xcb);
        EXPECT(gbc.readMem(0x9c3c), 0x42);
        // CB 42 0356
        gbc.setState(0x350f, 0x65d7, 0xc950, 0xad9c, 0x2d86, 0xe37e, 0x0, 0x0);
        gbc.writeMem(0x350f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x65d7);
        EXPECT(gbc.pc(), 0x3511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0357
        gbc.setState(0x40e1, 0xa487, 0x5d20, 0x3fe8, 0xa77c, 0xd611, 0x0, 0x1);
        gbc.writeMem(0x40e1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa487);
        EXPECT(gbc.pc(), 0x40e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0358
        gbc.setState(0x71bc, 0x8a82, 0x9f60, 0x87e, 0xccd5, 0xa819, 0x1, 0x0);
        gbc.writeMem(0x71bc, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8a82);
        EXPECT(gbc.pc(), 0x71be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0359
        gbc.setState(0x5a8b, 0xb26f, 0x3cb0, 0x7d4b, 0x32f1, 0xf53e, 0x1, 0x1);
        gbc.writeMem(0x5a8b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb26f);
        EXPECT(gbc.pc(), 0x5a8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 035A
        gbc.setState(0x7528, 0x30cd, 0x43a0, 0x19af, 0xe003, 0x3718, 0x0, 0x0);
        gbc.writeMem(0x7528, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x30cd);
        EXPECT(gbc.pc(), 0x752a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 035B
        gbc.setState(0x3cfc, 0x53c7, 0xe6a0, 0xc83e, 0x298e, 0x14f0, 0x1, 0x0);
        gbc.writeMem(0x3cfc, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x53c7);
        EXPECT(gbc.pc(), 0x3cfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 035C
        gbc.setState(0x4229, 0xa617, 0xfd70, 0x7e55, 0xcfef, 0xf56a, 0x0, 0x1);
        gbc.writeMem(0x4229, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa617);
        EXPECT(gbc.pc(), 0x422b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 035D
        gbc.setState(0x6507, 0xf034, 0x2230, 0x95bb, 0xe06a, 0xd073, 0x1, 0x1);
        gbc.writeMem(0x6507, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf034);
        EXPECT(gbc.pc(), 0x6509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 035E
        gbc.setState(0x4c46, 0x5a4f, 0x5350, 0x6712, 0xefac, 0x466a, 0x0, 0x0);
        gbc.writeMem(0x4c46, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5a4f);
        EXPECT(gbc.pc(), 0x4c48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 035F
        gbc.setState(0xe328, 0x39d3, 0x9fb0, 0xa879, 0xde26, 0x3f51, 0x1, 0x1);
        gbc.writeMem(0xe328, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x39d3);
        EXPECT(gbc.pc(), 0xe32a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe328), 0xcb);
        EXPECT(gbc.readMem(0xe329), 0x42);
        // CB 42 0360
        gbc.setState(0x30d4, 0x767e, 0x7410, 0x13d0, 0x300c, 0x4fbc, 0x1, 0x0);
        gbc.writeMem(0x30d4, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x767e);
        EXPECT(gbc.pc(), 0x30d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0361
        gbc.setState(0xbfe3, 0x3cd6, 0xf720, 0x7bd3, 0x28ad, 0xa142, 0x1, 0x0);
        gbc.writeMem(0xbfe3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3cd6);
        EXPECT(gbc.pc(), 0xbfe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfe3), 0xcb);
        EXPECT(gbc.readMem(0xbfe4), 0x42);
        // CB 42 0362
        gbc.setState(0x89ed, 0xaf16, 0x30, 0xdcc2, 0x76dd, 0x581c, 0x1, 0x0);
        gbc.writeMem(0x89ed, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xaf16);
        EXPECT(gbc.pc(), 0x89ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ed), 0xcb);
        EXPECT(gbc.readMem(0x89ee), 0x42);
        // CB 42 0363
        gbc.setState(0x71a1, 0xa34d, 0xc00, 0xc9a2, 0xb22d, 0xfa0a, 0x1, 0x0);
        gbc.writeMem(0x71a1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa34d);
        EXPECT(gbc.pc(), 0x71a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0364
        gbc.setState(0xc3ae, 0xe4ad, 0x7a30, 0xed98, 0xfd6f, 0x593b, 0x1, 0x0);
        gbc.writeMem(0xc3ae, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe4ad);
        EXPECT(gbc.pc(), 0xc3b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3ae), 0xcb);
        EXPECT(gbc.readMem(0xc3af), 0x42);
        // CB 42 0365
        gbc.setState(0x6676, 0x7c6d, 0x6910, 0x5f8d, 0xadd3, 0x35a0, 0x0, 0x0);
        gbc.writeMem(0x6676, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7c6d);
        EXPECT(gbc.pc(), 0x6678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0366
        gbc.setState(0x10f2, 0xb1e8, 0x65b0, 0xa34c, 0xe087, 0x8321, 0x1, 0x1);
        gbc.writeMem(0x10f2, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xb1e8);
        EXPECT(gbc.pc(), 0x10f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0367
        gbc.setState(0x9d6f, 0xb9b, 0xcdf0, 0xba48, 0xf011, 0x48c9, 0x1, 0x0);
        gbc.writeMem(0x9d6f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb9b);
        EXPECT(gbc.pc(), 0x9d71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d6f), 0xcb);
        EXPECT(gbc.readMem(0x9d70), 0x42);
        // CB 42 0368
        gbc.setState(0xc20d, 0x6b27, 0xd410, 0x8cf4, 0xdcc8, 0x3284, 0x0, 0x1);
        gbc.writeMem(0xc20d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6b27);
        EXPECT(gbc.pc(), 0xc20f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc20d), 0xcb);
        EXPECT(gbc.readMem(0xc20e), 0x42);
        // CB 42 0369
        gbc.setState(0x44a7, 0xba48, 0x2f70, 0xeabc, 0xd951, 0xf9bd, 0x1, 0x1);
        gbc.writeMem(0x44a7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xba48);
        EXPECT(gbc.pc(), 0x44a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 036A
        gbc.setState(0xcc9b, 0x6ade, 0xfe50, 0x2270, 0x3c6b, 0xa6d9, 0x1, 0x1);
        gbc.writeMem(0xcc9b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6ade);
        EXPECT(gbc.pc(), 0xcc9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc9b), 0xcb);
        EXPECT(gbc.readMem(0xcc9c), 0x42);
        // CB 42 036B
        gbc.setState(0x83cc, 0x4563, 0xdb20, 0xe3d4, 0xe25f, 0xf3c1, 0x1, 0x0);
        gbc.writeMem(0x83cc, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4563);
        EXPECT(gbc.pc(), 0x83ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83cc), 0xcb);
        EXPECT(gbc.readMem(0x83cd), 0x42);
        // CB 42 036C
        gbc.setState(0xad78, 0x5a10, 0x3fe0, 0x630d, 0x2a8b, 0xf239, 0x0, 0x0);
        gbc.writeMem(0xad78, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5a10);
        EXPECT(gbc.pc(), 0xad7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad78), 0xcb);
        EXPECT(gbc.readMem(0xad79), 0x42);
        // CB 42 036D
        gbc.setState(0x7a83, 0x1c56, 0x5920, 0xbdb, 0x712, 0x23df, 0x1, 0x0);
        gbc.writeMem(0x7a83, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1c56);
        EXPECT(gbc.pc(), 0x7a85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 036E
        gbc.setState(0xc527, 0x95c6, 0x110, 0x47bc, 0xb488, 0x9d75, 0x1, 0x1);
        gbc.writeMem(0xc527, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x95c6);
        EXPECT(gbc.pc(), 0xc529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc527), 0xcb);
        EXPECT(gbc.readMem(0xc528), 0x42);
        // CB 42 036F
        gbc.setState(0xe0f9, 0x7964, 0x7630, 0xb7e8, 0x99d3, 0xecae, 0x0, 0x1);
        gbc.writeMem(0xe0f9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7964);
        EXPECT(gbc.pc(), 0xe0fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0f9), 0xcb);
        EXPECT(gbc.readMem(0xe0fa), 0x42);
        // CB 42 0370
        gbc.setState(0x3dc, 0xacdf, 0x5100, 0x2fd4, 0x4095, 0xaef8, 0x1, 0x0);
        gbc.writeMem(0x3dc, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xacdf);
        EXPECT(gbc.pc(), 0x3de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0371
        gbc.setState(0x4d27, 0xf1c6, 0x1d50, 0x32a, 0x3e5a, 0x6299, 0x0, 0x0);
        gbc.writeMem(0x4d27, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf1c6);
        EXPECT(gbc.pc(), 0x4d29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0372
        gbc.setState(0xaef7, 0xa509, 0x26f0, 0xe17f, 0x1643, 0xbb2, 0x1, 0x0);
        gbc.writeMem(0xaef7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa509);
        EXPECT(gbc.pc(), 0xaef9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef7), 0xcb);
        EXPECT(gbc.readMem(0xaef8), 0x42);
        // CB 42 0373
        gbc.setState(0x9e78, 0xee4b, 0xa400, 0x44d8, 0x3450, 0x34a, 0x0, 0x1);
        gbc.writeMem(0x9e78, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xee4b);
        EXPECT(gbc.pc(), 0x9e7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e78), 0xcb);
        EXPECT(gbc.readMem(0x9e79), 0x42);
        // CB 42 0374
        gbc.setState(0xeb0e, 0x7525, 0xd170, 0xcf48, 0x25b0, 0x4cd0, 0x0, 0x0);
        gbc.writeMem(0xeb0e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7525);
        EXPECT(gbc.pc(), 0xeb10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb0e), 0xcb);
        EXPECT(gbc.readMem(0xeb0f), 0x42);
        // CB 42 0375
        gbc.setState(0x43a, 0xf072, 0x4f80, 0xc159, 0x8334, 0x4458, 0x1, 0x0);
        gbc.writeMem(0x43a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf072);
        EXPECT(gbc.pc(), 0x43c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0376
        gbc.setState(0x84ef, 0xeee6, 0xe030, 0x2d9f, 0xfc1f, 0xc658, 0x1, 0x1);
        gbc.writeMem(0x84ef, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xeee6);
        EXPECT(gbc.pc(), 0x84f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ef), 0xcb);
        EXPECT(gbc.readMem(0x84f0), 0x42);
        // CB 42 0377
        gbc.setState(0x391, 0xc91, 0xc790, 0xfb47, 0xb9a9, 0xfabc, 0x1, 0x1);
        gbc.writeMem(0x391, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc91);
        EXPECT(gbc.pc(), 0x393);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0378
        gbc.setState(0x5372, 0x560c, 0xc550, 0xab99, 0xe20, 0x5aed, 0x0, 0x1);
        gbc.writeMem(0x5372, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x560c);
        EXPECT(gbc.pc(), 0x5374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0379
        gbc.setState(0x461b, 0x436, 0x96b0, 0xc720, 0x4167, 0x1c26, 0x1, 0x0);
        gbc.writeMem(0x461b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x436);
        EXPECT(gbc.pc(), 0x461d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 037A
        gbc.setState(0x84c0, 0x47f6, 0x5400, 0x77af, 0x30f3, 0xbeea, 0x0, 0x0);
        gbc.writeMem(0x84c0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x47f6);
        EXPECT(gbc.pc(), 0x84c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c0), 0xcb);
        EXPECT(gbc.readMem(0x84c1), 0x42);
        // CB 42 037C
        gbc.setState(0x5766, 0xc238, 0xfe00, 0x7b88, 0xdd05, 0x1cdc, 0x0, 0x0);
        gbc.writeMem(0x5766, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc238);
        EXPECT(gbc.pc(), 0x5768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 037D
        gbc.setState(0xcc04, 0x67b1, 0x4eb0, 0x769a, 0x91ba, 0xca92, 0x0, 0x0);
        gbc.writeMem(0xcc04, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x67b1);
        EXPECT(gbc.pc(), 0xcc06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc04), 0xcb);
        EXPECT(gbc.readMem(0xcc05), 0x42);
        // CB 42 037F
        gbc.setState(0x849e, 0xbae7, 0x9c50, 0xbc37, 0x28c9, 0xadc2, 0x1, 0x0);
        gbc.writeMem(0x849e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbae7);
        EXPECT(gbc.pc(), 0x84a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x849e), 0xcb);
        EXPECT(gbc.readMem(0x849f), 0x42);
        // CB 42 0380
        gbc.setState(0x1890, 0x6f8d, 0xb790, 0x7dde, 0xe9d1, 0x8aab, 0x0, 0x0);
        gbc.writeMem(0x1890, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6f8d);
        EXPECT(gbc.pc(), 0x1892);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0381
        gbc.setState(0xad29, 0x91c5, 0xab0, 0xa368, 0xa94b, 0xa902, 0x1, 0x0);
        gbc.writeMem(0xad29, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x91c5);
        EXPECT(gbc.pc(), 0xad2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad29), 0xcb);
        EXPECT(gbc.readMem(0xad2a), 0x42);
        // CB 42 0383
        gbc.setState(0x47c9, 0x5d5, 0xd550, 0x88e8, 0x40bc, 0x6d9, 0x0, 0x0);
        gbc.writeMem(0x47c9, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5d5);
        EXPECT(gbc.pc(), 0x47cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0384
        gbc.setState(0x743c, 0xa07e, 0xbd60, 0x8775, 0x5664, 0xa6e5, 0x0, 0x1);
        gbc.writeMem(0x743c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa07e);
        EXPECT(gbc.pc(), 0x743e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0385
        gbc.setState(0x6ac6, 0xaa80, 0x8cc0, 0x9500, 0x48c, 0xba51, 0x1, 0x1);
        gbc.writeMem(0x6ac6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xaa80);
        EXPECT(gbc.pc(), 0x6ac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0386
        gbc.setState(0x4fb1, 0x7de8, 0x6cf0, 0x5db8, 0xe5e9, 0x9247, 0x0, 0x1);
        gbc.writeMem(0x4fb1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7de8);
        EXPECT(gbc.pc(), 0x4fb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0387
        gbc.setState(0xc217, 0x9160, 0xfea0, 0xfdf7, 0x585e, 0x75d9, 0x0, 0x1);
        gbc.writeMem(0xc217, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9160);
        EXPECT(gbc.pc(), 0xc219);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc217), 0xcb);
        EXPECT(gbc.readMem(0xc218), 0x42);
        // CB 42 0388
        gbc.setState(0x6360, 0x66f7, 0x70, 0xf18e, 0x3547, 0x5ae1, 0x0, 0x0);
        gbc.writeMem(0x6360, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x66f7);
        EXPECT(gbc.pc(), 0x6362);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0389
        gbc.setState(0xc52f, 0x469d, 0x7040, 0x878f, 0x4a2a, 0x3613, 0x1, 0x1);
        gbc.writeMem(0xc52f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x469d);
        EXPECT(gbc.pc(), 0xc531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc52f), 0xcb);
        EXPECT(gbc.readMem(0xc530), 0x42);
        // CB 42 038A
        gbc.setState(0x84e0, 0x62aa, 0x6530, 0x8ec9, 0x7b6, 0x8f84, 0x1, 0x0);
        gbc.writeMem(0x84e0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x62aa);
        EXPECT(gbc.pc(), 0x84e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84e0), 0xcb);
        EXPECT(gbc.readMem(0x84e1), 0x42);
        // CB 42 038B
        gbc.setState(0x9494, 0xd43d, 0x47e0, 0xc38e, 0x1758, 0x5584, 0x0, 0x1);
        gbc.writeMem(0x9494, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd43d);
        EXPECT(gbc.pc(), 0x9496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9494), 0xcb);
        EXPECT(gbc.readMem(0x9495), 0x42);
        // CB 42 038C
        gbc.setState(0xe7bb, 0xe8b5, 0x8c50, 0x5bae, 0xb5ae, 0xa4cd, 0x1, 0x0);
        gbc.writeMem(0xe7bb, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe8b5);
        EXPECT(gbc.pc(), 0xe7bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7bb), 0xcb);
        EXPECT(gbc.readMem(0xe7bc), 0x42);
        // CB 42 038D
        gbc.setState(0x738d, 0xd297, 0xd6a0, 0x552b, 0xb90e, 0xceec, 0x0, 0x1);
        gbc.writeMem(0x738d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd297);
        EXPECT(gbc.pc(), 0x738f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 038E
        gbc.setState(0x2690, 0x86b0, 0x8bf0, 0x9cc, 0x9229, 0x1754, 0x1, 0x1);
        gbc.writeMem(0x2690, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x86b0);
        EXPECT(gbc.pc(), 0x2692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 038F
        gbc.setState(0xcc18, 0x4b18, 0x40c0, 0x62d, 0x16be, 0x5f94, 0x1, 0x0);
        gbc.writeMem(0xcc18, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4b18);
        EXPECT(gbc.pc(), 0xcc1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc18), 0xcb);
        EXPECT(gbc.readMem(0xcc19), 0x42);
        // CB 42 0390
        gbc.setState(0xa523, 0x61eb, 0x3120, 0xbe5f, 0xb5ad, 0xc896, 0x1, 0x0);
        gbc.writeMem(0xa523, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x61eb);
        EXPECT(gbc.pc(), 0xa525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa523), 0xcb);
        EXPECT(gbc.readMem(0xa524), 0x42);
        // CB 42 0391
        gbc.setState(0x83bc, 0x3cbc, 0xda70, 0x18d, 0xa5c, 0x9cf3, 0x0, 0x0);
        gbc.writeMem(0x83bc, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3cbc);
        EXPECT(gbc.pc(), 0x83be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83bc), 0xcb);
        EXPECT(gbc.readMem(0x83bd), 0x42);
        // CB 42 0392
        gbc.setState(0x6843, 0x1ae1, 0xf560, 0x6356, 0x3f78, 0x69fd, 0x1, 0x0);
        gbc.writeMem(0x6843, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1ae1);
        EXPECT(gbc.pc(), 0x6845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0393
        gbc.setState(0x4189, 0xb39f, 0x70f0, 0x54a8, 0x342b, 0x987a, 0x0, 0x0);
        gbc.writeMem(0x4189, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb39f);
        EXPECT(gbc.pc(), 0x418b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0394
        gbc.setState(0x66d, 0x42bd, 0x5b0, 0x1a3e, 0x68fc, 0xa797, 0x1, 0x0);
        gbc.writeMem(0x66d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x42bd);
        EXPECT(gbc.pc(), 0x66f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0395
        gbc.setState(0xc6c5, 0xf743, 0xfd60, 0xfe09, 0x5a32, 0x9f0f, 0x0, 0x1);
        gbc.writeMem(0xc6c5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf743);
        EXPECT(gbc.pc(), 0xc6c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6c5), 0xcb);
        EXPECT(gbc.readMem(0xc6c6), 0x42);
        // CB 42 0396
        gbc.setState(0x63f6, 0x943c, 0xead0, 0x17a7, 0xbe79, 0xd18d, 0x0, 0x0);
        gbc.writeMem(0x63f6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x943c);
        EXPECT(gbc.pc(), 0x63f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0397
        gbc.setState(0x1dbe, 0xeaf4, 0x5b50, 0xcfbc, 0x8267, 0xa55f, 0x1, 0x0);
        gbc.writeMem(0x1dbe, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xeaf4);
        EXPECT(gbc.pc(), 0x1dc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 0398
        gbc.setState(0x79bb, 0x1d00, 0x98c0, 0x7cae, 0x4442, 0xfb6c, 0x1, 0x1);
        gbc.writeMem(0x79bb, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1d00);
        EXPECT(gbc.pc(), 0x79bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 0399
        gbc.setState(0xa4a0, 0x70a2, 0x48b0, 0x4dfc, 0x4287, 0xf0dc, 0x0, 0x1);
        gbc.writeMem(0xa4a0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x70a2);
        EXPECT(gbc.pc(), 0xa4a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4a0), 0xcb);
        EXPECT(gbc.readMem(0xa4a1), 0x42);
        // CB 42 039A
        gbc.setState(0x9c1c, 0xace1, 0x76d0, 0x51b0, 0x7f93, 0x6e22, 0x1, 0x1);
        gbc.writeMem(0x9c1c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xace1);
        EXPECT(gbc.pc(), 0x9c1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c1c), 0xcb);
        EXPECT(gbc.readMem(0x9c1d), 0x42);
        // CB 42 039D
        gbc.setState(0xe886, 0x4b10, 0xc150, 0xfa5c, 0x417c, 0x308c, 0x0, 0x1);
        gbc.writeMem(0xe886, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4b10);
        EXPECT(gbc.pc(), 0xe888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe886), 0xcb);
        EXPECT(gbc.readMem(0xe887), 0x42);
        // CB 42 039E
        gbc.setState(0x2da1, 0xa23e, 0x14e0, 0x63a8, 0xa87b, 0xf974, 0x0, 0x1);
        gbc.writeMem(0x2da1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa23e);
        EXPECT(gbc.pc(), 0x2da3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 039F
        gbc.setState(0x99fd, 0xc8e4, 0x4770, 0xc2b2, 0x325a, 0x3b09, 0x1, 0x1);
        gbc.writeMem(0x99fd, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc8e4);
        EXPECT(gbc.pc(), 0x99ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fd), 0xcb);
        EXPECT(gbc.readMem(0x99fe), 0x42);
        // CB 42 03A0
        gbc.setState(0xbf70, 0x890a, 0xf3c0, 0x8ea0, 0xfda7, 0x208, 0x0, 0x1);
        gbc.writeMem(0xbf70, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x890a);
        EXPECT(gbc.pc(), 0xbf72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf70), 0xcb);
        EXPECT(gbc.readMem(0xbf71), 0x42);
        // CB 42 03A1
        gbc.setState(0xd83b, 0x44b, 0x3110, 0xf332, 0x6722, 0x574, 0x1, 0x1);
        gbc.writeMem(0xd83b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x44b);
        EXPECT(gbc.pc(), 0xd83d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd83b), 0xcb);
        EXPECT(gbc.readMem(0xd83c), 0x42);
        // CB 42 03A2
        gbc.setState(0x5ff7, 0x6152, 0x1310, 0x51f2, 0x69d7, 0xff03, 0x1, 0x1);
        gbc.writeMem(0x5ff7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6152);
        EXPECT(gbc.pc(), 0x5ff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 03A3
        gbc.setState(0xc993, 0x5de7, 0xd670, 0xafd, 0x3e11, 0xca86, 0x1, 0x0);
        gbc.writeMem(0xc993, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5de7);
        EXPECT(gbc.pc(), 0xc995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc993), 0xcb);
        EXPECT(gbc.readMem(0xc994), 0x42);
        // CB 42 03A5
        gbc.setState(0x4d2, 0x161d, 0x85e0, 0x449a, 0x1f9a, 0x6413, 0x1, 0x0);
        gbc.writeMem(0x4d2, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x161d);
        EXPECT(gbc.pc(), 0x4d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 03A6
        gbc.setState(0x2bc8, 0x8092, 0xec60, 0xcd09, 0x37fd, 0x70a7, 0x1, 0x0);
        gbc.writeMem(0x2bc8, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8092);
        EXPECT(gbc.pc(), 0x2bca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 03A7
        gbc.setState(0xe3ad, 0xe826, 0x12b0, 0xa069, 0x48bf, 0xb6b2, 0x1, 0x1);
        gbc.writeMem(0xe3ad, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe826);
        EXPECT(gbc.pc(), 0xe3af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ad), 0xcb);
        EXPECT(gbc.readMem(0xe3ae), 0x42);
        // CB 42 03A8
        gbc.setState(0xe920, 0x9b4, 0x73c0, 0x9bcb, 0xb4fd, 0x4001, 0x1, 0x1);
        gbc.writeMem(0xe920, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9b4);
        EXPECT(gbc.pc(), 0xe922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe920), 0xcb);
        EXPECT(gbc.readMem(0xe921), 0x42);
        // CB 42 03A9
        gbc.setState(0x8409, 0x9cf1, 0xb150, 0x5c46, 0xfe6f, 0xad3, 0x1, 0x1);
        gbc.writeMem(0x8409, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9cf1);
        EXPECT(gbc.pc(), 0x840b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8409), 0xcb);
        EXPECT(gbc.readMem(0x840a), 0x42);
        // CB 42 03AA
        gbc.setState(0x6a98, 0xa0f2, 0x8370, 0x2a7e, 0xbb33, 0x3ca, 0x0, 0x0);
        gbc.writeMem(0x6a98, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa0f2);
        EXPECT(gbc.pc(), 0x6a9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 03AB
        gbc.setState(0x6410, 0x396d, 0x9670, 0x1a98, 0xf9b3, 0x470c, 0x0, 0x0);
        gbc.writeMem(0x6410, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x396d);
        EXPECT(gbc.pc(), 0x6412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 03AC
        gbc.setState(0xd81d, 0x1d31, 0x6770, 0xa99d, 0x6244, 0x72e5, 0x1, 0x1);
        gbc.writeMem(0xd81d, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1d31);
        EXPECT(gbc.pc(), 0xd81f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd81d), 0xcb);
        EXPECT(gbc.readMem(0xd81e), 0x42);
        // CB 42 03AD
        gbc.setState(0x3e64, 0xc281, 0x6360, 0xf5ae, 0xfdcf, 0x154, 0x1, 0x1);
        gbc.writeMem(0x3e64, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc281);
        EXPECT(gbc.pc(), 0x3e66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 03AE
        gbc.setState(0x2f63, 0x969c, 0x4730, 0xb927, 0xe01f, 0x6990, 0x0, 0x1);
        gbc.writeMem(0x2f63, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x969c);
        EXPECT(gbc.pc(), 0x2f65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 03AF
        gbc.setState(0x565, 0x684f, 0xeb0, 0x7de0, 0x1d17, 0xdb45, 0x1, 0x1);
        gbc.writeMem(0x565, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x684f);
        EXPECT(gbc.pc(), 0x567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 03B0
        gbc.setState(0x3b21, 0xf7a, 0x39b0, 0x410e, 0x6f04, 0xc982, 0x1, 0x1);
        gbc.writeMem(0x3b21, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf7a);
        EXPECT(gbc.pc(), 0x3b23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 03B1
        gbc.setState(0x9256, 0x420b, 0x1cf0, 0xa036, 0x6dd6, 0x45df, 0x0, 0x1);
        gbc.writeMem(0x9256, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x420b);
        EXPECT(gbc.pc(), 0x9258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9256), 0xcb);
        EXPECT(gbc.readMem(0x9257), 0x42);
        // CB 42 03B2
        gbc.setState(0x767a, 0xf275, 0x4040, 0x935e, 0x964c, 0xdd6a, 0x0, 0x0);
        gbc.writeMem(0x767a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf275);
        EXPECT(gbc.pc(), 0x767c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 03B3
        gbc.setState(0xb05, 0xcefb, 0xfc80, 0xf0c8, 0x16ef, 0xf63d, 0x0, 0x0);
        gbc.writeMem(0xb05, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xcefb);
        EXPECT(gbc.pc(), 0xb07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 03B5
        gbc.setState(0x3879, 0xbb69, 0x3fb0, 0xcd31, 0xc9e7, 0xa, 0x1, 0x1);
        gbc.writeMem(0x3879, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbb69);
        EXPECT(gbc.pc(), 0x387b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 03B7
        gbc.setState(0x9fef, 0xe491, 0xb3a0, 0xd172, 0x1ba7, 0x3d4b, 0x0, 0x0);
        gbc.writeMem(0x9fef, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe491);
        EXPECT(gbc.pc(), 0x9ff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fef), 0xcb);
        EXPECT(gbc.readMem(0x9ff0), 0x42);
        // CB 42 03B8
        gbc.setState(0xb5b6, 0x84fa, 0x4b40, 0x92cd, 0x204d, 0xcf4d, 0x1, 0x0);
        gbc.writeMem(0xb5b6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x84fa);
        EXPECT(gbc.pc(), 0xb5b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b6), 0xcb);
        EXPECT(gbc.readMem(0xb5b7), 0x42);
        // CB 42 03B9
        gbc.setState(0x1463, 0x7b02, 0x5e30, 0x78cc, 0xf5ad, 0xfae7, 0x1, 0x1);
        gbc.writeMem(0x1463, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7b02);
        EXPECT(gbc.pc(), 0x1465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 03BA
        gbc.setState(0xc5da, 0x6b82, 0x7390, 0x296d, 0x1627, 0xc8c0, 0x0, 0x0);
        gbc.writeMem(0xc5da, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6b82);
        EXPECT(gbc.pc(), 0xc5dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5da), 0xcb);
        EXPECT(gbc.readMem(0xc5db), 0x42);
        // CB 42 03BB
        gbc.setState(0x5919, 0xd3f4, 0x66f0, 0xffb1, 0x3a18, 0xfc4c, 0x0, 0x0);
        gbc.writeMem(0x5919, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd3f4);
        EXPECT(gbc.pc(), 0x591b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 03BC
        gbc.setState(0x9766, 0x6297, 0xa450, 0x3c7f, 0xb617, 0x4c81, 0x0, 0x1);
        gbc.writeMem(0x9766, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6297);
        EXPECT(gbc.pc(), 0x9768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9766), 0xcb);
        EXPECT(gbc.readMem(0x9767), 0x42);
        // CB 42 03BD
        gbc.setState(0x556b, 0x73da, 0xf3e0, 0x6926, 0x43b0, 0x1ee5, 0x1, 0x1);
        gbc.writeMem(0x556b, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x73da);
        EXPECT(gbc.pc(), 0x556d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 03BF
        gbc.setState(0xa3c6, 0x4456, 0x3e20, 0x3f3c, 0xb819, 0xfa15, 0x0, 0x0);
        gbc.writeMem(0xa3c6, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4456);
        EXPECT(gbc.pc(), 0xa3c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3c6), 0xcb);
        EXPECT(gbc.readMem(0xa3c7), 0x42);
        // CB 42 03C0
        gbc.setState(0x4865, 0xb28f, 0xb90, 0x271f, 0x4365, 0x58d8, 0x1, 0x0);
        gbc.writeMem(0x4865, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xb28f);
        EXPECT(gbc.pc(), 0x4867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 03C1
        gbc.setState(0x2ce3, 0x3f06, 0x1d60, 0xef6c, 0x23c8, 0x6fdb, 0x0, 0x1);
        gbc.writeMem(0x2ce3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3f06);
        EXPECT(gbc.pc(), 0x2ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 03C2
        gbc.setState(0x1b48, 0xdcf9, 0x8f00, 0x9fb0, 0x8819, 0x48d, 0x1, 0x1);
        gbc.writeMem(0x1b48, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xdcf9);
        EXPECT(gbc.pc(), 0x1b4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 03C3
        gbc.setState(0x4c35, 0x2c34, 0xc0d0, 0x5175, 0x9521, 0xe93f, 0x0, 0x1);
        gbc.writeMem(0x4c35, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2c34);
        EXPECT(gbc.pc(), 0x4c37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 03C4
        gbc.setState(0x2a76, 0x46f7, 0x37c0, 0xda7d, 0x87d7, 0x6d19, 0x1, 0x1);
        gbc.writeMem(0x2a76, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x46f7);
        EXPECT(gbc.pc(), 0x2a78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 03C5
        gbc.setState(0xef54, 0x9353, 0xcf90, 0x32ed, 0x1d44, 0xa411, 0x0, 0x1);
        gbc.writeMem(0xef54, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9353);
        EXPECT(gbc.pc(), 0xef56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef54), 0xcb);
        EXPECT(gbc.readMem(0xef55), 0x42);
        // CB 42 03C7
        gbc.setState(0x60bd, 0x7850, 0x2790, 0xa292, 0x4d95, 0x32e3, 0x1, 0x0);
        gbc.writeMem(0x60bd, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7850);
        EXPECT(gbc.pc(), 0x60bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 03C8
        gbc.setState(0x1dfc, 0x80bb, 0x4040, 0x9d14, 0x30fa, 0x7ceb, 0x0, 0x0);
        gbc.writeMem(0x1dfc, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x80bb);
        EXPECT(gbc.pc(), 0x1dfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 03C9
        gbc.setState(0x26b1, 0x880c, 0x4f50, 0xeda2, 0x93b6, 0x9914, 0x0, 0x0);
        gbc.writeMem(0x26b1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x880c);
        EXPECT(gbc.pc(), 0x26b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 03CA
        gbc.setState(0x361a, 0x9fa6, 0x4b50, 0x4943, 0x8ad7, 0x6233, 0x0, 0x1);
        gbc.writeMem(0x361a, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x9fa6);
        EXPECT(gbc.pc(), 0x361c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 03CB
        gbc.setState(0xb753, 0x76ef, 0xa9b0, 0x81e8, 0x6e6f, 0x8e3b, 0x1, 0x0);
        gbc.writeMem(0xb753, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x76ef);
        EXPECT(gbc.pc(), 0xb755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb753), 0xcb);
        EXPECT(gbc.readMem(0xb754), 0x42);
        // CB 42 03CD
        gbc.setState(0x84cd, 0x21e, 0xd9b0, 0x4125, 0x5fdc, 0x1a8f, 0x0, 0x0);
        gbc.writeMem(0x84cd, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x21e);
        EXPECT(gbc.pc(), 0x84cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84cd), 0xcb);
        EXPECT(gbc.readMem(0x84ce), 0x42);
        // CB 42 03CE
        gbc.setState(0x6fbe, 0x6943, 0xd1d0, 0x8772, 0x8df, 0x1214, 0x0, 0x1);
        gbc.writeMem(0x6fbe, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6943);
        EXPECT(gbc.pc(), 0x6fc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 03CF
        gbc.setState(0xec71, 0x351a, 0x8960, 0x3099, 0xcbe0, 0x523f, 0x0, 0x0);
        gbc.writeMem(0xec71, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x351a);
        EXPECT(gbc.pc(), 0xec73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec71), 0xcb);
        EXPECT(gbc.readMem(0xec72), 0x42);
        // CB 42 03D0
        gbc.setState(0x82d1, 0xb085, 0x7c00, 0xfdc1, 0x9f21, 0xadfa, 0x1, 0x0);
        gbc.writeMem(0x82d1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb085);
        EXPECT(gbc.pc(), 0x82d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82d1), 0xcb);
        EXPECT(gbc.readMem(0x82d2), 0x42);
        // CB 42 03D1
        gbc.setState(0x16f3, 0xbca2, 0x5d20, 0x2cd5, 0x4aaf, 0xc2, 0x1, 0x0);
        gbc.writeMem(0x16f3, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbca2);
        EXPECT(gbc.pc(), 0x16f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 03D2
        gbc.setState(0xe24f, 0x9a9b, 0x14a0, 0x1f1a, 0xf465, 0xace1, 0x0, 0x1);
        gbc.writeMem(0xe24f, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9a9b);
        EXPECT(gbc.pc(), 0xe251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe24f), 0xcb);
        EXPECT(gbc.readMem(0xe250), 0x42);
        // CB 42 03D3
        gbc.setState(0x2ea5, 0x7357, 0x5200, 0x542a, 0xc3b4, 0x20f9, 0x1, 0x0);
        gbc.writeMem(0x2ea5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7357);
        EXPECT(gbc.pc(), 0x2ea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 03D4
        gbc.setState(0x4fc5, 0xc292, 0xbc30, 0x8ff1, 0x74f5, 0x76cf, 0x1, 0x1);
        gbc.writeMem(0x4fc5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc292);
        EXPECT(gbc.pc(), 0x4fc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 03D5
        gbc.setState(0x9601, 0x7f8b, 0xc990, 0xbe2c, 0x7e77, 0x2ffa, 0x0, 0x0);
        gbc.writeMem(0x9601, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7f8b);
        EXPECT(gbc.pc(), 0x9603);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9601), 0xcb);
        EXPECT(gbc.readMem(0x9602), 0x42);
        // CB 42 03D7
        gbc.setState(0xe6c7, 0xc610, 0x340, 0xba8, 0x578f, 0x214c, 0x1, 0x0);
        gbc.writeMem(0xe6c7, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc610);
        EXPECT(gbc.pc(), 0xe6c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6c7), 0xcb);
        EXPECT(gbc.readMem(0xe6c8), 0x42);
        // CB 42 03D8
        gbc.setState(0xdad0, 0x44f9, 0x28b0, 0x6956, 0x1469, 0x2e1a, 0x0, 0x1);
        gbc.writeMem(0xdad0, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x44f9);
        EXPECT(gbc.pc(), 0xdad2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdad0), 0xcb);
        EXPECT(gbc.readMem(0xdad1), 0x42);
        // CB 42 03DA
        gbc.setState(0xbb7c, 0x7e29, 0x24b0, 0x6c15, 0x1422, 0xae3c, 0x1, 0x1);
        gbc.writeMem(0xbb7c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7e29);
        EXPECT(gbc.pc(), 0xbb7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb7c), 0xcb);
        EXPECT(gbc.readMem(0xbb7d), 0x42);
        // CB 42 03DB
        gbc.setState(0xa73, 0xf451, 0x7730, 0xdd92, 0xd888, 0x86bb, 0x1, 0x0);
        gbc.writeMem(0xa73, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf451);
        EXPECT(gbc.pc(), 0xa75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 42 03DE
        gbc.setState(0xd956, 0xceb6, 0x6ab0, 0xd451, 0xd7ea, 0x94dc, 0x0, 0x1);
        gbc.writeMem(0xd956, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xceb6);
        EXPECT(gbc.pc(), 0xd958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd956), 0xcb);
        EXPECT(gbc.readMem(0xd957), 0x42);
        // CB 42 03DF
        gbc.setState(0xdece, 0xfb0d, 0xa6f0, 0xdc53, 0x6b, 0xb0de, 0x0, 0x0);
        gbc.writeMem(0xdece, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xfb0d);
        EXPECT(gbc.pc(), 0xded0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdece), 0xcb);
        EXPECT(gbc.readMem(0xdecf), 0x42);
        // CB 42 03E0
        gbc.setState(0x2e37, 0xf0fb, 0xa4c0, 0xee5c, 0xaabb, 0xf018, 0x1, 0x0);
        gbc.writeMem(0x2e37, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf0fb);
        EXPECT(gbc.pc(), 0x2e39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 03E1
        gbc.setState(0xca8e, 0xad6a, 0x2310, 0x3bc, 0xe03d, 0xcb8f, 0x1, 0x0);
        gbc.writeMem(0xca8e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xad6a);
        EXPECT(gbc.pc(), 0xca90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca8e), 0xcb);
        EXPECT(gbc.readMem(0xca8f), 0x42);
        // CB 42 03E2
        gbc.setState(0x214e, 0x6434, 0x2b60, 0x26c1, 0x7d1c, 0xc97a, 0x1, 0x0);
        gbc.writeMem(0x214e, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6434);
        EXPECT(gbc.pc(), 0x2150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 03E3
        gbc.setState(0x9bf1, 0x388f, 0x48b0, 0x43ab, 0x1ce5, 0x4a2d, 0x0, 0x1);
        gbc.writeMem(0x9bf1, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x388f);
        EXPECT(gbc.pc(), 0x9bf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bf1), 0xcb);
        EXPECT(gbc.readMem(0x9bf2), 0x42);
        // CB 42 03E4
        gbc.setState(0x3a23, 0x5b86, 0x7240, 0x47b0, 0x9fcf, 0x8eaa, 0x1, 0x1);
        gbc.writeMem(0x3a23, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5b86);
        EXPECT(gbc.pc(), 0x3a25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 03E5
        gbc.setState(0x73c5, 0x5bda, 0x7880, 0x2d3b, 0xd9d0, 0x380a, 0x1, 0x0);
        gbc.writeMem(0x73c5, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x5bda);
        EXPECT(gbc.pc(), 0x73c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 42 03E6
        gbc.setState(0xcb7c, 0x47bf, 0xfa00, 0x294a, 0xa4d, 0x85e4, 0x1, 0x0);
        gbc.writeMem(0xcb7c, { 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x47bf);
        EXPECT(gbc.pc(), 0xcb7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb7c), 0xcb);
        EXPECT(gbc.readMem(0xcb7d), 0x42);
    }
